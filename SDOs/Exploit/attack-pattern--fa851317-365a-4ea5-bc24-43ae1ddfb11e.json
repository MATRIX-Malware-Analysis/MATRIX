{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--fa851317-365a-4ea5-bc24-43ae1ddfb11e",
    "created": "2024-08-14T16:33:06.174114Z",
    "modified": "2024-08-14T16:33:06.174118Z",
    "name": "FannyBMP or DementiaWheel Detection Registry Check",
    "description": " This module searches for the Fanny.bmp worm related reg keys. fannybmp is a worm that exploited zero day vulns",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/windows/gather/forensics/fanny_bmp_check.rb",
            "external_id": "fanny_bmp_check.rb"
        },
        {
            "source_name": "reference",
            "url": "https://securelist.com/a-fanny-equation-i-am-your-father-stuxnet/68787"
        },
        {
            "source_name": "CVE",
            "external_id": "2010-2568"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Post\n  include Msf::Post::Common\n  include Msf::Post::Windows::Registry\n  include Msf::Auxiliary::Report\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'FannyBMP or DementiaWheel Detection Registry Check',\n        'Description' => %q{\n          This module searches for the Fanny.bmp worm related reg keys.\n          fannybmp is a worm that exploited zero day vulns\n          (more specifically, the LNK Exploit CVE-2010-2568).\n          Which allowed it to spread even if USB Autorun was turned off.\n          This is the same exploit that was used in StuxNet.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => ['William M.'],\n        'Platform' => ['win'],\n        'SessionTypes' => ['meterpreter', 'shell'],\n        'References' => [\n          ['URL', 'https://securelist.com/a-fanny-equation-i-am-your-father-stuxnet/68787'],\n          ['CVE', '2010-2568']\n        ],\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'SideEffects' => [],\n          'Reliability' => []\n        }\n      )\n    )\n  end\n\n  def run\n    artifacts =\n      [\n        'HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\MediaResources\\\"acm\"',\n        'HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\MediaResources\\acm\\ECELP4',\n        'HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\MediaResources\\acm\\ECELP4\\Driver',\n        'HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\MediaResources\\acm\\ECELP4\\filter2',\n        'HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\MediaResources\\acm\\ECELP4\\filter3',\n        'HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\MediaResources\\acm\\ECELP4\\filter8'\n      ]\n\n    matches = {}\n    print_status('Searching the registry for Fanny.bmp artifacts.')\n    artifacts.each do |key|\n      key, _, value = key.rpartition('\\\\')\n      has_key = registry_enumkeys(key)\n      has_val = registry_enumvals(key)\n      next unless has_key&.include?(value) || has_val&.include?(value)\n\n      print_good(\"Target #{key}\\\\#{value} found in registry.\")\n      matches[key] = value\n    end\n\n    unless matches.empty?\n      report_vuln(\n        host: session.session_host,\n        name: name,\n        info: \"Target keys found in registry:\\n#{matches.map { |k, v| \"#{k}: #{v}\\n\" }.join}\",\n        refs: references,\n        exploited_at: Time.now.utc\n      )\n    end\n    print_status('Done.')\n  end\nend\n",
    "x_mitre_contributors": [
        "[William M.]",
        ""
    ],
    "x_mitre_platforms": [
        "['win']"
    ]
}