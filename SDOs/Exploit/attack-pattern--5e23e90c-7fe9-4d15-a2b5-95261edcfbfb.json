{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--5e23e90c-7fe9-4d15-a2b5-95261edcfbfb",
    "created": "2024-08-14T16:24:19.029026Z",
    "modified": "2024-08-14T16:24:19.029031Z",
    "name": "Cisco Configuration Importer",
    "description": " This module imports a Cisco IOS or NXOS device configuration.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/networking/cisco_config.rb",
            "external_id": "cisco_config.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Auxiliary::Cisco\n  include Msf::Exploit::Deprecated\n  moved_from 'auxiliary/admin/cisco/cisco_config'\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Cisco Configuration Importer',\n        'Description' => %q{\n          This module imports a Cisco IOS or NXOS device configuration.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => ['h00die']\n      )\n    )\n\n    register_options(\n      [\n        OptPath.new('CONFIG', [true, 'Path to configuration to import']),\n        Opt::RHOST(),\n        Opt::RPORT(22)\n      ]\n    )\n\n  end\n\n  def run\n    unless ::File.exist?(datastore['CONFIG'])\n      fail_with Failure::BadConfig, \"Cisco config file #{datastore['CONFIG']} does not exist!\"\n    end\n    cisco_config = ::File.open(datastore['CONFIG'], 'rb')\n    print_status('Importing config')\n    cisco_ios_config_eater(datastore['RHOSTS'], datastore['RPORT'], cisco_config.read)\n    print_good('Config import successful')\n  end\nend\n"
}