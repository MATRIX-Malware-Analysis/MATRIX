{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--cccb96c9-b820-44e5-9144-ab945da91717",
    "created": "2024-08-14T16:32:35.944377Z",
    "modified": "2024-08-14T16:32:35.944381Z",
    "name": "Kerberos Domain User Enumeration",
    "description": " This module will enumerate valid Domain Users via Kerberos from an unauthenticated perspective. It utilizes the different responses returned by the service for valid and invalid users. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/gather/kerberos_enumusers.rb",
            "external_id": "kerberos_enumusers.rb"
        },
        {
            "source_name": "reference",
            "url": "https://nmap.org/nsedoc/scripts/krb5-enum-users.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'metasploit/framework/credential_collection'\nrequire 'metasploit/framework/login_scanner/kerberos'\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::Kerberos::AuthBrute\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Kerberos Domain User Enumeration',\n        'Description' => %q{\n          This module will enumerate valid Domain Users via Kerberos from an unauthenticated perspective. It utilizes\n          the different responses returned by the service for valid and invalid users.\n        },\n        'Author' => [\n          'Matt Byrne <attackdebris[at]gmail.com>', # Original Metasploit module\n          'alanfoster', # Enhancements\n          'sjanusz-r7' # Enhancements\n        ],\n        'References' => [\n          ['URL', 'https://nmap.org/nsedoc/scripts/krb5-enum-users.html']\n        ],\n        'License' => MSF_LICENSE\n      )\n    )\n\n  end\n\n  def run\n    attempt_kerberos_logins\n  end\nend\n"
}