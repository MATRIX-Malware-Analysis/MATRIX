{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--99d14c8a-0b49-4fac-b9a4-64f00eebc09c",
    "created": "2024-08-14T16:31:24.84459Z",
    "modified": "2024-08-14T16:31:24.844594Z",
    "name": "SMS Client",
    "description": " This module sends a text message to multiple phones of the same carrier. You can use it to send a malicious link to phones.  Please note that you do not use this module to send a media file (attachment). In order to send a media file, please use auxiliary/client/mms/send_mms instead. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/client/sms/send_text.rb",
            "external_id": "send_text.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Auxiliary::Sms\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'SMS Client',\n      'Description'    => %q{\n        This module sends a text message to multiple phones of the same carrier.\n        You can use it to send a malicious link to phones.\n\n        Please note that you do not use this module to send a media file (attachment).\n        In order to send a media file, please use auxiliary/client/mms/send_mms instead.\n      },\n      'Author'         => [ 'sinn3r' ],\n      'License'        => MSF_LICENSE\n    ))\n  end\n\n  def run\n    phone_numbers = datastore['CELLNUMBERS'].split\n    print_status(\"Sending text (#{datastore['SMSMESSAGE'].length} bytes) to #{phone_numbers.length} number(s)...\")\n    begin\n      res = send_text(phone_numbers, datastore['SMSSUBJECT'], datastore['SMSMESSAGE'])\n      print_status(\"Done.\")\n    rescue Rex::Proto::Sms::Exception => e\n      print_error(e.message)\n    end\n  end\nend\n"
}