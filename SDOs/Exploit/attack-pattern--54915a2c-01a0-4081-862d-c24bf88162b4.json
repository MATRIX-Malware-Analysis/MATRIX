{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--54915a2c-01a0-4081-862d-c24bf88162b4",
    "created": "2024-08-14T16:28:15.550045Z",
    "modified": "2024-08-14T16:28:15.55005Z",
    "name": "FTP Version Scanner",
    "description": "Detect FTP Version.",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/ftp/ftp_version.rb",
            "external_id": "ftp_version.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::Ftp\n  include Msf::Auxiliary::Scanner\n  include Msf::Auxiliary::Report\n\n  def initialize\n    super(\n      'Name'        => 'FTP Version Scanner',\n      'Description' => 'Detect FTP Version.',\n      'Author'      => 'hdm',\n      'License'     => MSF_LICENSE\n    )\n\n    register_options(\n      [\n        Opt::RPORT(21),\n      ])\n  end\n\n  def run_host(target_host)\n\n    begin\n\n    res = connect(true, false)\n\n    if(banner)\n      banner_sanitized = Rex::Text.to_hex_ascii(self.banner.to_s)\n      print_good(\"FTP Banner: '#{banner_sanitized}'\")\n      report_service(:host => rhost, :port => rport, :name => \"ftp\", :info => banner_sanitized)\n    end\n\n    disconnect\n\n    rescue ::Interrupt\n      raise $!\n    rescue ::Rex::ConnectionError, ::IOError\n    end\n\n  end\nend\n"
}