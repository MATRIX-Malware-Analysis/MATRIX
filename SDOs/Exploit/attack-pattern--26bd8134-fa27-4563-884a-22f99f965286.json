{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--26bd8134-fa27-4563-884a-22f99f965286",
    "created": "2024-08-14T16:22:58.651132Z",
    "modified": "2024-08-14T16:22:58.651136Z",
    "name": "Kerberos ticket converter",
    "description": " This module converts tickets to the ccache format from the kirbi format and vice versa. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/kerberos/ticket_converter.rb",
            "external_id": "ticket_converter.rb"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/SecureAuthCorp/impacket/blob/3c6713e309cae871d685fa443d3e21b7026a2155/examples/ticketConverter.py"
        },
        {
            "source_name": "reference",
            "url": "https://tools.ietf.org/html/rfc4120"
        },
        {
            "source_name": "reference",
            "url": "http://web.mit.edu/KERBEROS/krb5-devel/doc/formats/ccache_file_format.html"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/gentilkiwi/kekeo"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/rvazarkar/KrbCredExport"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Kerberos ticket converter',\n        'Description' => %q{\n          This module converts tickets to the ccache format from the kirbi format and vice versa.\n        },\n        'Author' => [\n          'Zer1t0', # Impacket Implementation https://github.com/Zer1t0\n          'Dean Welch', # Metasploit Module\n        ],\n        'References' => [\n          ['URL', 'https://github.com/SecureAuthCorp/impacket/blob/3c6713e309cae871d685fa443d3e21b7026a2155/examples/ticketConverter.py'],\n          ['URL', 'https://tools.ietf.org/html/rfc4120'],\n          ['URL', 'http://web.mit.edu/KERBEROS/krb5-devel/doc/formats/ccache_file_format.html'],\n          ['URL', 'https://github.com/gentilkiwi/kekeo'],\n          ['URL', 'https://github.com/rvazarkar/KrbCredExport'],\n        ],\n        'License' => MSF_LICENSE,\n        'Notes' => {\n          'Stability' => [],\n          'Reliability' => [],\n          'SideEffects' => []\n        }\n      )\n    )\n    register_options(\n      [\n        OptPath.new('InputPath', [ true, 'The file path to ticket in kirbi (KRB-CRED) or ccache format.' ]),\n        OptString.new('OutputPath', [ true, 'The output path to save the converted ticket.' ]),\n      ]\n    )\n  end\n\n  def run\n    header = File.binread(datastore['InputPath'], 2)\n    if ccache?(header)\n      print_status('Converting from ccache to kirbi')\n      output = ccache_to_kirbi(File.binread(datastore['InputPath']))\n    elsif kirbi?(header)\n      print_status('Converting from kirbi to ccache')\n      output = kirbi_to_ccache(File.binread(datastore['InputPath']))\n    else\n      fail_with(Msf::Module::Failure::BadConfig, 'Unknown file format')\n    end\n    path = File.expand_path(datastore['OutputPath'])\n    File.binwrite(path, output.encode)\n    print_status(\"File written to #{path}\")\n  end\n\n  def ccache_to_kirbi(input)\n    ccache = Rex::Proto::Kerberos::CredentialCache::Krb5Ccache.read(input)\n    Msf::Exploit::Remote::Kerberos::TicketConverter.ccache_to_kirbi(ccache)\n  end\n\n  def kirbi_to_ccache(input)\n    krb_cred = Rex::Proto::Kerberos::Model::KrbCred.decode(input)\n    Msf::Exploit::Remote::Kerberos::TicketConverter.kirbi_to_ccache(krb_cred)\n  end\n\n  private\n\n  def kirbi?(header)\n    header[0] == \"\\x76\"\n  end\n\n  def ccache?(header)\n    header[0..1] == \"\\x05\\x04\"\n  end\nend\n"
}