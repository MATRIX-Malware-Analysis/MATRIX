{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d12d9997-1708-4383-9e17-52bcaa233ca4",
    "created": "2024-08-14T16:29:40.319035Z",
    "modified": "2024-08-14T16:29:40.31904Z",
    "name": "HTTP Version Detection",
    "description": "Display version information about each system.",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/http_version.rb",
            "external_id": "http_version.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\n\nclass MetasploitModule < Msf::Auxiliary\n\n  # Exploit mixins should be called first\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::WmapScanServer\n  # Scanner mixin should be near last\n  include Msf::Auxiliary::Scanner\n\n  def initialize\n    super(\n      'Name'        => 'HTTP Version Detection',\n      'Description' => 'Display version information about each system.',\n      'Author'      => 'hdm',\n      'License'     => MSF_LICENSE\n    )\n\n    register_wmap_options({\n        'OrderID' => 0,\n        'Require' => {},\n      })\n  end\n\n  # Fingerprint a single host\n  def run_host(ip)\n    begin\n      connect\n      res = send_request_raw({ 'uri' => '/', 'method' => 'GET' })\n      fp = http_fingerprint(:response => res)\n      print_good(\"#{ip}:#{rport} #{fp}\") if fp\n      report_service(:host => rhost, :port => rport, :sname => (ssl ? 'https' : 'http'), :info => fp)\n    rescue ::Timeout::Error, ::Errno::EPIPE\n    ensure\n      disconnect\n    end\n  end\nend\n"
}