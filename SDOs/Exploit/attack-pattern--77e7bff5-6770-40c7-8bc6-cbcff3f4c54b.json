{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--77e7bff5-6770-40c7-8bc6-cbcff3f4c54b",
    "created": "2024-08-14T16:27:48.007176Z",
    "modified": "2024-08-14T16:27:48.00718Z",
    "name": "AIX SNMP Scanner Auxiliary Module",
    "description": "AIX SNMP Scanner Auxiliary Module",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/snmp/aix_version.rb",
            "external_id": "aix_version.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::SNMPClient\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n\n  def initialize\n    super(\n      'Name'        => 'AIX SNMP Scanner Auxiliary Module',\n      'Description' => 'AIX SNMP Scanner Auxiliary Module',\n      'Author'      =>\n        [\n          'Ramon de C Valle',\n          'Adriano Lima <adriano[at]risesecurity.org>',\n        ],\n      'License'     => MSF_LICENSE\n    )\n\n  end\n\n  def run_host(ip)\n    begin\n      snmp = connect_snmp\n\n      value = snmp.get_value('sysDescr.0')\n\n      if value =~ /AIX/\n        value = value.split(\"\\n\")\n        description = value[0].strip\n        value = value[2].split(':')\n\n        value = value[1].strip\n        value = value.split('.')\n\n        value[0] = value[0].to_i\n        value[1] = value[1].to_i\n        value[2] = value[2].to_i\n        value[3] = value[3].to_i\n\n        version = \"#{value[0]}.#{value[1]}.#{value[2]}.#{value[3]}\"\n\n        report_note(\n            :host   => ip,\n            :proto => 'udp',\n            :sname  => 'snmp',\n            :port   => datastore['RPORT'],\n            :type   => 'AIX',\n            :data   => version\n        )\n\n        status = \"#{ip} (#{description}) is running: \"\n        status << \"IBM AIX Version #{value[0]}.#{value[1]}.#{value[3]} \"\n        status << \"(#{version})\"\n\n        print_status(status)\n      end\n\n    # No need to make noise about timeouts\n    rescue ::Rex::ConnectionError, ::SNMP::RequestTimeout, ::SNMP::UnsupportedVersion\n    rescue ::Interrupt\n      raise $!\n    rescue Exception => e\n      print_error(\"#{ip} #{e.class}, #{e.message}\")\n    ensure\n      disconnect_snmp\n    end\n\n  end\nend\n"
}