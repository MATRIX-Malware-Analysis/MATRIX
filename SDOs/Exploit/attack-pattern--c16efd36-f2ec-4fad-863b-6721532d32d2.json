{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--c16efd36-f2ec-4fad-863b-6721532d32d2",
    "created": "2024-08-14T16:29:23.362084Z",
    "modified": "2024-08-14T16:29:23.362088Z",
    "name": "FortiMail Unauthenticated Login Bypass Scanner",
    "description": " This module attempts to detect instances of FortiMail vulnerable",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/fortimail_login_bypass_detection.rb",
            "external_id": "fortimail_login_bypass_detection.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2020-9294"
        },
        {
            "source_name": "reference",
            "url": "https://www.fortiguard.com/psirt/FG-IR-20-045"
        },
        {
            "source_name": "reference",
            "url": "https://www.redguard.ch/blog/2020/07/02/fortimail-unauthenticated-login-bypass/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n\n  def initialize\n    super(\n      'Name' => 'FortiMail Unauthenticated Login Bypass Scanner',\n      'Description' => %q{\n        This module attempts to detect instances of FortiMail vulnerable\n        against an unauthenticated login bypass (CVE-2020-9294).\n      },\n      'Author' => [\n        'Mike Connor', # Initial Vulnerability discovery\n        'Juerg Schweingruber <juerg.schweingruber[at]redguard.ch>', # Vulnerability Re-Discovery\n        'Patrick Schmid <patrick.schmid[at]redguard.ch>' # Exploit Development & MSF module\n      ],\n      'References' => [\n        ['CVE', '2020-9294'],\n        ['URL', 'https://www.fortiguard.com/psirt/FG-IR-20-045'],\n        ['URL', 'https://www.redguard.ch/blog/2020/07/02/fortimail-unauthenticated-login-bypass/']\n      ],\n      'License' => MSF_LICENSE\n    )\n\n    register_options([\n      OptString.new('TARGETURI', [true, 'Path to the FortiMail admin page', '/admin/AdminLogin.html']),\n      Opt::RPORT(443)\n    ])\n\n    register_advanced_options([\n      OptBool.new('SSL', [true, 'Negotiate SSL connection', true])\n    ])\n  end\n\n  def target_url\n    proto = 'http'\n    if (rport == 443) || ssl\n      proto = 'https'\n    end\n    uri = normalize_uri(datastore['URI'])\n    \"#{proto}://#{vhost}:#{rport}#{uri}\"\n  end\n\n  def run_host(ip)\n    vprint_status(\"Checking vulnerability at #{ip}\")\n    uri = normalize_uri(target_uri.path)\n\n    res = send_request_raw({\n      'method' => 'GET',\n      'uri' => uri\n    })\n\n    return :abort unless res # prints default connection error messages\n\n    if res.code == 301\n      vprint_error(\"#{ip} - Page redirect to #{res.headers['Location']}\")\n      return :abort\n    end\n\n    unless res.code == 200\n      vprint_bad(\"#{ip} - No version of FortiMail detected\")\n      return :abort\n    end\n\n    version_raw = res.body[/fml-admin-login-(\\d+).js/, 1]\n    version = version_raw.to_i\n    unless (res.body.include?('newpassword') && (version.between?(140, 160) || version.between?(730, 745) || version.between?(250, 263)))\n      print_bad(\"#{ip} - Not vulnerable version (Build: #{version_raw}) of FortiMail detected\")\n      return :abort\n    end\n\n    print_good(\"#{ip} - Vulnerable version (Build: #{version_raw}) of FortiMail detected\")\n\n    report_vuln(\n      host: rhost,\n      port: rport,\n      name: 'FortiMail Login Bypass',\n      refs: references\n    )\n  rescue ::Rex::ConnectionRefused, ::Rex::HostUnreachable, ::Rex::ConnectionTimeout\n    # noop\n  rescue ::Timeout::Error, ::Errno::EPIPE\n    # noop\n  rescue ::OpenSSL::SSL::SSLError => e\n    return if (e.to_s.match(/^SSL_connect /)) # strange errors / exception if SSL connection aborted\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ]
}