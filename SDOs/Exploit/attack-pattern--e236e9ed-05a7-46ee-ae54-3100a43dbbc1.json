{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--e236e9ed-05a7-46ee-ae54-3100a43dbbc1",
    "created": "2024-08-14T16:27:09.578728Z",
    "modified": "2024-08-14T16:27:09.578732Z",
    "name": "Gather Steam Server Information",
    "description": "( This module uses the A2S_INFO request to obtain information from a Steam server. )",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/steam/server_info.rb",
            "external_id": "server_info.rb"
        },
        {
            "source_name": "reference",
            "url": "https://developer.valvesoftware.com/wiki/Server_queries#A2S_INFO"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::UDPScanner\n  include Rex::Proto::Steam\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name'           => 'Gather Steam Server Information',\n        'Description'    => %q(\n          This module uses the A2S_INFO request to obtain information from a Steam server.\n        ),\n        'Author'         => 'Jon Hart <jon_hart[at]rapid7.com>',\n        'References'     =>\n          [\n            # TODO: add more from https://developer.valvesoftware.com/wiki/Server_queries,\n            # perhaps in different modules\n            ['URL', 'https://developer.valvesoftware.com/wiki/Server_queries#A2S_INFO']\n          ],\n        'License'        => MSF_LICENSE\n      )\n    )\n\n    register_options(\n    [\n      Opt::RPORT(27015)\n    ])\n  end\n\n  def build_probe\n    @probe ||= a2s_info\n  end\n\n  def scanner_process(response, src_host, src_port)\n    info = a2s_info_decode(response)\n    return unless info\n    @results[src_host] ||= []\n    if datastore['VERBOSE']\n      print_good(\"#{src_host}:#{src_port} found '#{info.inspect}'\")\n    else\n      print_good(\"#{src_host}:#{src_port} found '#{info[:name]}'\")\n    end\n    @results[src_host] << info\n  end\n\n  def scanner_postscan(_batch)\n    @results.each_pair do |host, info|\n      report_host(host: host)\n      report_service(\n        host: host,\n        proto: 'udp',\n        port: rport,\n        name: 'Steam',\n        info: info\n      )\n    end\n  end\nend\n"
}