{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--a2dce891-95b4-4a39-a847-40a07acc2d85",
    "created": "2024-08-14T16:27:50.674792Z",
    "modified": "2024-08-14T16:27:50.674796Z",
    "name": "NTP Mode 6 REQ_NONCE DRDoS Scanner",
    "description": " This module identifies NTP servers which permit mode 6 REQ_NONCE requests that can be used to conduct DRDoS attacks. In some configurations, NTP servers will respond to REQ_NONCE requests with a response larger than the request allowing remote attackers to cause a distributed, reflected denial of service (aka, \"DRDoS\" or traffic amplification) via spoofed requests. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/ntp/ntp_req_nonce_dos.rb",
            "external_id": "ntp_req_nonce_dos.rb"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/rapid7/metasploit-framework/pull/3696"
        },
        {
            "source_name": "reference",
            "url": "https://www.rapid7.com/blog/post/2014/08/25/r7-2014-12-more-amplification-vulnerabilities-in-ntp-allow-even-more-drdos-attacks/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Auxiliary::Report\n  include Msf::Exploit::Remote::Udp\n  include Msf::Auxiliary::UDPScanner\n  include Msf::Auxiliary::NTP\n  include Msf::Auxiliary::DRDoS\n\n  def initialize\n    super(\n      'Name'           => 'NTP Mode 6 REQ_NONCE DRDoS Scanner',\n      'Description'    => %q{\n        This module identifies NTP servers which permit mode 6 REQ_NONCE requests that\n        can be used to conduct DRDoS attacks. In some configurations, NTP servers will\n        respond to REQ_NONCE requests with a response larger than the request,\n        allowing remote attackers to cause a distributed, reflected\n        denial of service (aka, \"DRDoS\" or traffic amplification) via spoofed\n        requests.\n      },\n      'Author'         => 'Jon Hart <jon_hart[at]rapid7.com>',\n      'References'     =>\n        [\n          ['CVE', '2013-5211'], # see also scanner/ntp/ntp_monlist.rb\n          ['URL', 'https://github.com/rapid7/metasploit-framework/pull/3696'],\n          ['URL', 'https://www.rapid7.com/blog/post/2014/08/25/r7-2014-12-more-amplification-vulnerabilities-in-ntp-allow-even-more-drdos-attacks/']\n        ],\n      'DisclosureDate' => 'Aug 25 2014',\n      'License'        => MSF_LICENSE\n    )\n  end\n\n  # Called for each response packet\n  def scanner_process(data, shost, sport)\n    @results[shost] ||= []\n    @results[shost] << Rex::Proto::NTP::NTPControl.new.read(data)\n  end\n\n  # Called before the scan block\n  def scanner_prescan(batch)\n    @results = {}\n    @probe = Rex::Proto::NTP::NTPControl.new\n    @probe.version = datastore['VERSION']\n    @probe.operation = 12\n  end\n\n  # Called after the scan block\n  def scanner_postscan(batch)\n    @results.keys.each do |k|\n      response_map = { @probe => @results[k] }\n      # TODO: check to see if any of the responses are actually NTP before reporting\n      report_service(\n        :host  => k,\n        :proto => 'udp',\n        :port  => rport,\n        :name  => 'ntp'\n      )\n\n      peer = \"#{k}:#{rport}\"\n      vulnerable, proof = prove_amplification(response_map)\n      what = 'R7-2014-12 NTP Mode 6 REQ_NONCE DRDoS'\n      if vulnerable\n        print_good(\"#{peer} - Vulnerable to #{what}: #{proof}\")\n        report_vuln({\n          :host  => k,\n          :port  => rport,\n          :proto => 'udp',\n          :name  => what,\n          :refs  => self.references\n        })\n      else\n        vprint_status(\"#{peer} - Not vulnerable to #{what}: #{proof}\")\n      end\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "Aug 25 2014"
}