{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--3f0b9a13-b930-4a50-9f74-a3eaa7d187d3",
    "created": "2024-08-14T16:27:06.935284Z",
    "modified": "2024-08-14T16:27:06.935288Z",
    "name": "Apache RocketMQ Version Scanner",
    "description": " Version scanner for the Apache RocketMQ product. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/misc/rocketmq_version.rb",
            "external_id": "rocketmq_version.rb"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/Malayke/CVE-2023-33246_RocketMQ_RCE_EXPLOIT/blob/main/check.py"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/apache/rocketmq"
        }
    ],
    "x_code_snippet": "### This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Auxiliary::Scanner\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Rocketmq\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Apache RocketMQ Version Scanner',\n        'Description' => %q{\n          Version scanner for the Apache RocketMQ product.\n        },\n        'Author' => [\n          'h00die',\n          'Malayke' # CVE-2023-33246 code\n        ],\n        'References' => [\n          ['URL', 'https://github.com/Malayke/CVE-2023-33246_RocketMQ_RCE_EXPLOIT/blob/main/check.py'],\n          ['URL', 'https://github.com/apache/rocketmq']\n        ],\n        'License' => MSF_LICENSE,\n        'Notes' => {\n          'Stability' => [],\n          'Reliability' => [],\n          'SideEffects' => []\n        }\n      )\n    )\n  end\n\n  def run_host(_ip)\n    res = send_version_request\n\n    if res.nil?\n      print_error('Invalid or no response received')\n      return\n    end\n\n    parsed_data = parse_rocketmq_data(res)\n    # grab some data that we need/want out of the response\n    output = \"RocketMQ version #{parsed_data['version']}\"\n    output += \" found with brokers: #{parsed_data['brokerDatas']}\" if parsed_data['brokerDatas']\n    print_good(output)\n  end\nend\n"
}