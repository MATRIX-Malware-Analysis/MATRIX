{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--c3e4ec29-df42-4848-8d5f-0227f2552e59",
    "created": "2024-08-14T16:26:36.100989Z",
    "modified": "2024-08-14T16:26:36.100992Z",
    "name": "SMTP Open Relay Detection",
    "description": " This module tests if an SMTP server will accept (via a code 250) an e-mail by using a variation of testing methods. Some of the extended methods will try to abuse configuration or mailserver flaws.  'References'  => [",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/smtp/smtp_relay.rb",
            "external_id": "smtp_relay.rb"
        },
        {
            "source_name": "reference",
            "url": "https://svn.nmap.org/nmap/scripts/smtp-open-relay.nse"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::Smtp\n  include Msf::Auxiliary::Scanner\n  include Msf::Auxiliary::Report\n\n  def initialize\n    super(\n      'Name'        => 'SMTP Open Relay Detection',\n      'Description' => %q{\n        This module tests if an SMTP server will accept (via a code 250)\n        an e-mail by using a variation of testing methods.\n        Some of the extended methods will try to abuse configuration or mailserver flaws.\n      },\n      'References'  =>\n        [\n          ['URL', 'http://www.ietf.org/rfc/rfc2821.txt'],\n          ['URL', 'https://svn.nmap.org/nmap/scripts/smtp-open-relay.nse'],\n        ],\n      'Author'      =>\n        [\n          'Campbell Murray',\n          'xistence <xistence[at]0x90.nl>',\n        ],\n      'License'     => MSF_LICENSE\n    )\n\n    register_options(\n      [\n        OptBool.new('EXTENDED', [true, 'Do all the 16 extended checks', false]),\n      ])\n  end\n\n  def run_host(ip)\n    begin\n      connect\n      banner_sanitized = Rex::Text.to_hex_ascii(banner.to_s)\n      print_good(\"SMTP #{banner_sanitized}\")\n      report_service(:host => rhost, :port => rport, :name => \"smtp\", :info => banner)\n\n      if datastore['EXTENDED']\n\n        if banner_sanitized =~ /220 (.*) /\n          serverhost = $1\n        end\n\n        mailfromuser = datastore['MAILFROM'].split(\"@\").first\n        mailfromdomain = datastore['MAILFROM'].split(\"@\").last\n        mailtouser = datastore['MAILTO'].split(\"@\").first\n        mailtodomain = datastore['MAILTO'].split(\"@\").last\n\n        do_test_relay(1, \"MAIL FROM:<>\", \"RCPT TO:<#{datastore['MAILTO']}>\")\n        do_test_relay(2, \"MAIL FROM:<#{datastore['MAILFROM']}>\", \"RCPT TO:<#{datastore['MAILTO']}>\")\n        do_test_relay(3, \"MAIL FROM:<#{mailfromuser}@#{serverhost}>\", \"RCPT TO:<#{datastore['MAILTO']}>\")\n        do_test_relay(4, \"MAIL FROM:<#{mailfromuser}@[#{rhost}]>\", \"RCPT TO:<#{mailtouser}@[#{rhost}]>\")\n        do_test_relay(5, \"MAIL FROM:<#{mailfromuser}@[#{rhost}]>\", \"RCPT TO:<#{mailtouser}\\%#{mailtodomain}@[#{rhost}]>\")\n        do_test_relay(6, \"MAIL FROM:<#{mailfromuser}@[#{rhost}]>\", \"RCPT TO:<#{mailtouser}\\%#{mailtodomain}@#{serverhost}>\")\n        do_test_relay(7, \"MAIL FROM:<#{mailfromuser}@[#{rhost}]>\", \"RCPT TO:<\\\"#{mailtouser}@#{mailtodomain}\\\">\")\n        do_test_relay(8, \"MAIL FROM:<#{mailfromuser}@[#{rhost}]>\", \"RCPT TO:<\\\"#{mailtouser}\\%#{mailtodomain}\\\">\")\n        do_test_relay(9, \"MAIL FROM:<#{mailfromuser}@[#{rhost}]>\", \"RCPT TO:<#{mailtouser}@#{mailtodomain}@[#{rhost}]>\")\n        do_test_relay(10, \"MAIL FROM:<#{mailfromuser}@[#{rhost}]>\", \"RCPT TO:<\\\"#{mailtouser}@#{mailtodomain}\\\"@[#{rhost}]>\")\n        do_test_relay(11, \"MAIL FROM:<#{mailfromuser}@[#{rhost}]>\", \"RCPT TO:<#{mailtouser}@#{mailtodomain}@#{serverhost}>\")\n        do_test_relay(12, \"MAIL FROM:<#{mailfromuser}@[#{rhost}]>\", \"RCPT TO:<@[#{rhost}]:#{mailtouser}@#{mailtodomain}>\")\n        do_test_relay(13, \"MAIL FROM:<#{mailfromuser}@[#{rhost}]>\", \"RCPT TO:<@#{serverhost}:#{mailtouser}@#{mailtodomain}>\")\n        do_test_relay(14, \"MAIL FROM:<#{mailfromuser}@[#{rhost}]>\", \"RCPT TO:<#{mailtodomain}!#{mailtouser}>\")\n        do_test_relay(15, \"MAIL FROM:<#{mailfromuser}@[#{rhost}]>\", \"RCPT TO:<#{mailtodomain}!#{mailtouser}@[#{rhost}]>\")\n        do_test_relay(16, \"MAIL FROM:<#{mailfromuser}@[#{rhost}]>\", \"RCPT TO:<#{mailtodomain}!#{mailtouser}@#{serverhost}>\")\n      else\n        do_test_relay(nil, \"MAIL FROM:<#{datastore['MAILFROM']}>\", \"RCPT TO:<#{datastore['MAILTO']}>\")\n    end\n    rescue\n      print_error(\"Unable to establish an SMTP session\")\n      return\n    end\n  end\n\n  def do_test_relay(testnumber, mailfrom, mailto)\n    begin\n      connect\n\n      res = raw_send_recv(\"EHLO X\\r\\n\")\n      vprint_status(\"#{res.inspect}\")\n      # check if the EHLO is actually supported. In case it's not, try the HELO command instead\n      if res.to_s =~ /^5\\d\\d/\n        res = raw_send_recv(\"HELO X\\r\\n\")\n        vprint_status(\"#{res.inspect}\")\n      end\n\n      res = raw_send_recv(\"#{mailfrom}\\r\\n\")\n      vprint_status(\"#{res.inspect}\")\n\n      res = raw_send_recv(\"#{mailto}\\r\\n\")\n      vprint_status(\"#{res.inspect}\")\n\n      res = raw_send_recv(\"DATA\\r\\n\")\n      vprint_status(\"#{res.inspect}\")\n\n      res = raw_send_recv(\"#{Rex::Text.rand_text_alpha(rand(10)+5)}\\r\\n.\\r\\n\")\n      vprint_status(\"#{res.inspect}\")\n\n      if res =~ /250/\n        if testnumber.nil?\n          print_good(\"Potential open SMTP relay detected: - #{mailfrom} -> #{mailto}\")\n        else\n          print_good(\"Test ##{testnumber} - Potential open SMTP relay detected: - #{mailfrom} -> #{mailto}\")\n        end\n      else\n        if testnumber.nil?\n          print_status \"No relay detected\"\n        else\n          print_status \"Test ##{testnumber} - No relay detected\"\n        end\n      end\n\n    rescue\n      print_error(\"Test ##{testnumber} - Unable to establish an SMTP session\")\n      return\n    end\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ]
}