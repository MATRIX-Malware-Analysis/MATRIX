{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--9edb9270-51c3-4898-a3ab-4cec52c43d55",
    "created": "2024-08-14T16:27:09.580129Z",
    "modified": "2024-08-14T16:27:09.580133Z",
    "name": "WinRM WQL Query Runner",
    "description": " This module runs WQL queries against remote WinRM Services. Authentication is required. Currently only works with NTLM auth. Please note in order to use this module, the 'AllowUnencrypted' winrm option must be set. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/winrm/winrm_wql.rb",
            "external_id": "winrm_wql.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::WinRM\n  include Msf::Auxiliary::Report\n\n  include Msf::Auxiliary::Scanner\n\n  def initialize\n    super(\n      'Name' => 'WinRM WQL Query Runner',\n      'Description' => %q{\n        This module runs WQL queries against remote WinRM Services.\n        Authentication is required. Currently only works with NTLM auth.\n        Please note in order to use this module, the 'AllowUnencrypted'\n        winrm option must be set.\n      },\n      'Author' => [ 'thelightcosine' ],\n      'License' => MSF_LICENSE\n    )\n\n    register_options(\n      [\n        OptString.new('WQL', [ true, 'The WQL query to run', 'Select Name,Status from Win32_Service' ]),\n        OptString.new('NAMESPACE', [true, 'The WMI namespace to use for queries', 'root/cimv2'])\n      ]\n    )\n  end\n\n  def run\n    check_winrm_parameters\n    super\n  end\n\n  def run_host(ip)\n    connection = create_winrm_connection\n    wql_result = connection.run_wql(datastore['WQL'], \"#{wmi_namespace}/*\")\n    result = parse_wql_hash(wql_result)\n    print_good result.to_s\n    path = store_loot('winrm.wql_results', 'text/csv', ip, result.to_csv, 'winrm_wql_results.csv', 'WinRM WQL Query Results')\n    print_good \"Results saved to #{path}\"\n  end\nend\n"
}