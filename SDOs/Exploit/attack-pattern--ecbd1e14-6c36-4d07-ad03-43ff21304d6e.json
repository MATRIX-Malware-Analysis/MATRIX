{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--ecbd1e14-6c36-4d07-ad03-43ff21304d6e",
    "created": "2024-08-14T16:28:25.391269Z",
    "modified": "2024-08-14T16:28:25.391273Z",
    "name": "IPMI 2.0 Cipher Zero Authentication Bypass Scanner",
    "description": "| This module identifies IPMI 2.0-compatible systems that are vulnerable to an authentication bypass vulnerability through the use of cipher zero. |",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/ipmi/ipmi_cipher_zero.rb",
            "external_id": "ipmi_cipher_zero.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2013-4782"
        },
        {
            "source_name": "reference",
            "url": "http://fish2.com/ipmi/cipherzero.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::UDPScanner\n\n  def initialize\n    super(\n      'Name'        => 'IPMI 2.0 Cipher Zero Authentication Bypass Scanner',\n      'Description' => %q|\n        This module identifies IPMI 2.0-compatible systems that are vulnerable\n        to an authentication bypass vulnerability through the use of cipher\n        zero.\n        |,\n      'Author'      => [ 'Dan Farmer <zen[at]fish2.com>', 'hdm' ],\n      'License'     => MSF_LICENSE,\n      'References'  =>\n        [\n          ['CVE', '2013-4782'],\n          ['URL', 'http://fish2.com/ipmi/cipherzero.html'],\n          ['OSVDB', '93038'],\n          ['OSVDB', '93039'],\n          ['OSVDB', '93040'],\n\n        ],\n      'DisclosureDate' => 'Jun 20 2013'\n    )\n\n    register_options(\n    [\n      Opt::RPORT(623)\n    ])\n\n  end\n\n  def scanner_prescan(batch)\n    print_status(\"Sending IPMI requests to #{batch[0]}->#{batch[-1]} (#{batch.length} hosts)\")\n    @res = {}\n  end\n\n  def scan_host(ip)\n    console_session_id = Rex::Text.rand_text(4)\n    scanner_send(\n      Rex::Proto::IPMI::Utils.create_ipmi_session_open_cipher_zero_request(console_session_id),\n      ip, datastore['RPORT']\n    )\n  end\n\n  def scanner_process(data, shost, sport)\n    info = Rex::Proto::IPMI::Open_Session_Reply.new.read(data)#  rescue nil\n    return unless info && info.session_payload_type == Rex::Proto::IPMI::PAYLOAD_RMCPPLUSOPEN_REP\n\n    # Ignore duplicate replies\n    return if @res[shost]\n\n    @res[shost] ||= info\n\n    if info.error_code == 0\n      print_good(\"#{shost}:#{sport} - IPMI - VULNERABLE: Accepted a session open request for cipher zero\")\n      report_vuln(\n        :host  => shost,\n        :port  => datastore['RPORT'].to_i,\n        :proto => 'udp',\n        :sname => 'ipmi',\n        :name  => 'IPMI 2.0 RAKP Cipher Zero Authentication Bypass',\n        :info  => \"Accepted a session open request for cipher zero\",\n        :refs  => self.references\n      )\n    else\n      vprint_status(\"#{shost}:#{sport} - IPMI - NOT VULNERABLE: Rejected cipher zero with error code #{info.error_code}\")\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "Jun 20 2013"
}