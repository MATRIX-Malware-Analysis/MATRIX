{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--0415d44c-10f1-4c7d-b7a7-10ec4535184f",
    "created": "2024-08-14T16:27:01.27533Z",
    "modified": "2024-08-14T16:27:01.275334Z",
    "name": "SAP /sap/bc/soap/rfc SOAP Service RFC_PING Function Service Discovery",
    "description": " This module makes use of the RFC_PING function, through the\t/sap/bc/soap/rfc SOAP service, to test connectivity to remote RFC destinations.  'References' => [",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/sap/sap_soap_rfc_ping.rb",
            "external_id": "sap_soap_rfc_ping.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n##\n# This module is based on, inspired by, or is a port of a plugin available in\n# the Onapsis Bizploit Opensource ERP Penetration Testing framework -\n# http://www.onapsis.com/research-free-solutions.php.\n# Mariano Nunez (the author of the Bizploit framework) helped me in my efforts\n# in producing the Metasploit modules and was happy to share his knowledge and\n# experience - a very cool guy. I'd also like to thank Chris John Riley,\n# Ian de Villiers and Joris van de Vis who have Beta tested the modules and\n# provided excellent feedback. Some people just seem to enjoy hacking SAP :)\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n\n  def initialize\n    super(\n      'Name' => 'SAP /sap/bc/soap/rfc SOAP Service RFC_PING Function Service Discovery',\n      'Description' => %q{\n          This module makes use of the RFC_PING function, through the\t/sap/bc/soap/rfc\n        SOAP service, to test connectivity to remote RFC destinations.\n        },\n      'References' =>\n        [\n          [ 'URL', 'https://labs.f-secure.com/tools/sap-metasploit-modules/' ]\n        ],\n      'Author' =>\n        [\n          'Agnivesh Sathasivam',\n          'nmonkee'\n        ],\n      'License' => MSF_LICENSE\n    )\n\n    register_options(\n      [\n        Opt::RPORT(8000),\n        OptString.new('CLIENT', [true, 'Client', '001']),\n        OptString.new('HttpUsername', [true, 'Username ', 'SAP*']),\n        OptString.new('HttpPassword', [true, 'Password ', '06071992'])\n      ])\n  end\n\n  def run_host(ip)\n    client = datastore['CLIENT']\n    data = '<?xml version=\"1.0\" encoding=\"utf-8\" ?>'\n    data << '<env:Envelope xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:env=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">'\n    data << '<env:Body>'\n    data << '<n1:RFC_PING xmlns:n1=\"urn:sap-com:document:sap:rfc:functions\" env:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\">'\n    data << '</n1:RFC_PING>'\n    data << '</env:Body>'\n    data << '</env:Envelope>'\n    print_status(\"[SAP] #{ip}:#{rport} - sending SOAP RFC_PING request\")\n    begin\n      res = send_request_cgi({\n        'uri' => '/sap/bc/soap/rfc',\n        'method' => 'POST',\n        'cookie' => \"sap-usercontext=sap-language=EN&sap-client=#{client}\",\n        'data' => data,\n        'authorization' => basic_auth(datastore['HttpUsername'], datastore['HttpPassword']),\n        'ctype'  => 'text/xml; charset=UTF-8',\n        'headers' => {\n          'SOAPAction' => 'urn:sap-com:document:sap:rfc:functions'\n        },\n        'encode_params' => false,\n        'vars_get' => {\n          'sap-client'    => client,\n          'sap-language'  => 'EN'\n        }\n      })\n      if res and res.code != 500 and res.code != 200\n        if res and res.body =~ /<h1>Logon failed<\\/h1>/\n          print_error(\"[SAP] #{ip}:#{rport} - login failed!\")\n        else\n          print_error(\"[SAP] #{ip}:#{rport} - something went wrong!\")\n        end\n        return\n      elsif res and res.body =~ /Response/\n        print_good(\"[SAP] #{ip}:#{rport} - RFC service is alive\")\n        report_note(\n          :host => ip,\n          :proto => 'tcp',\n          :port => rport,\n          :sname => 'sap',\n          :type => 'sap.services.available',\n          :data => \"The Remote Function Call (RFC) Service is available through the SOAP service.\"\n        )\n        return\n      else\n        print_status(\"[SAP] #{ip}:#{rport} - RFC service is not alive\")\n        return\n      end\n    rescue ::Rex::ConnectionError\n      print_error(\"[SAP] #{ip}:#{rport} - Unable to connect\")\n      return\n    end\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ]
}