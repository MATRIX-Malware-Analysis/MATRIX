{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--c6f9f2af-3da5-4db4-ba3e-b3ec500b41d4",
    "created": "2024-08-14T16:33:19.229406Z",
    "modified": "2024-08-14T16:33:19.229417Z",
    "name": "Bourne ${IFS} Substitution Command Encoder",
    "description": " This encoder uses Bourne ${IFS} substitution to avoid whitespace without being overly fancy. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/encoders/cmd/ifs.rb",
            "external_id": "ifs.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Encoder\n\n  # This may produce incorrect code, such as in quoted strings\n  Rank = LowRanking\n\n  def initialize\n    super(\n      'Name'        => 'Bourne ${IFS} Substitution Command Encoder',\n      'Description' => %q{\n        This encoder uses Bourne ${IFS} substitution to avoid whitespace\n        without being overly fancy.\n      },\n      'Author'      => ['egypt', 'wvu'],\n      'Platform'    => 'unix',\n      'Arch'        => ARCH_CMD,\n      'EncoderType' => Msf::Encoder::Type::CmdUnixIFS\n    )\n  end\n\n  def encode_block(state, buf)\n    # Skip encoding if there are no badchars\n    return buf if state.badchars !~ /\\s/\n\n    # Perform ${IFS} encoding\n    buf.gsub(/\\s+/, '${IFS}')\n  end\n\nend\n",
    "x_mitre_platforms": [
        "unix'"
    ]
}