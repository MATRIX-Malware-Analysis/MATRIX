{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--b41b9bbb-13be-4eec-972e-1f4469c935da",
    "created": "2024-08-14T16:33:05.024847Z",
    "modified": "2024-08-14T16:33:05.024851Z",
    "name": "Windows Gather Domain Enumeration",
    "description": " This module enumerates currently the domains a host can see and the domain controllers for that domain.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/windows/gather/enum_domains.rb",
            "external_id": "enum_domains.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Post\n  include Msf::Post::Windows::NetAPI\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Windows Gather Domain Enumeration',\n        'Description' => %q{\n          This module enumerates currently the domains a host can see and the domain\n          controllers for that domain.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [ 'mubix' ],\n        'Platform' => [ 'win' ],\n        'SessionTypes' => [ 'meterpreter' ]\n      )\n    )\n  end\n\n  def run\n    domains = net_server_enum(SV_TYPE_DOMAIN_ENUM)\n    return if domains.nil?\n\n    domains.each do |domain|\n      print_status(\"Enumerating DCs for #{domain[:name]}\")\n      dcs = net_server_enum(SV_TYPE_DOMAIN_BAKCTRL | SV_TYPE_DOMAIN_CTRL, domain[:name])\n\n      if dcs.count == 0\n        print_error('No Domain Controllers found...')\n        next\n      end\n\n      dcs.each do |dc|\n        print_good(\"Domain Controller: #{dc[:name]}\")\n\n        report_note(\n          host: session,\n          type: 'domain.hostnames',\n          data: dc[:name],\n          update: :unique_data\n        )\n      end\n    end\n  end\nend\n",
    "x_mitre_platforms": [
        "[ 'win' ]"
    ]
}