{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--5a12c4b4-d06a-49e0-be74-fc17113e52be",
    "created": "2024-08-14T16:27:56.547354Z",
    "modified": "2024-08-14T16:27:56.547358Z",
    "name": "Memcached UDP Version Scanner",
    "description": "( This module can be used to discover Memcached servers which expose the unrestricted UDP port 11211. A basic \"version\" request is executed to obtain the version of memcached. )",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/memcached/memcached_udp_version.rb",
            "external_id": "memcached_udp_version.rb"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/memcached/memcached/blob/master/doc/protocol.txt"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Auxiliary::Report\n  include Msf::Exploit::Capture\n  include Msf::Auxiliary::UDPScanner\n\n  def initialize\n    super(\n      'Name'        => 'Memcached UDP Version Scanner',\n      'Description' => %q(\n          This module can be used to discover Memcached servers which expose the\n          unrestricted UDP port 11211. A basic \"version\" request is executed to obtain\n          the version of memcached.\n      ),\n      'Author'      =>\n        [\n          'Jon Hart <jon_hart@rapid7.com>' # Metasploit scanner module\n        ],\n      'License'     => MSF_LICENSE,\n      'DisclosureDate' => 'Jul 23 2003',\n      'References' =>\n          [\n            ['URL', 'https://github.com/memcached/memcached/blob/master/doc/protocol.txt']\n          ]\n    )\n\n    register_options(\n      [\n        Opt::RPORT(11211)\n      ]\n    )\n  end\n\n  def build_probe\n    # Memcached version probe, per https://github.com/memcached/memcached/blob/master/doc/protocol.txt\n    @memcached_probe ||= [\n      rand(2**16), # random request ID\n      0, # sequence number\n      1, # number of datagrams in this sequence\n      0, # reserved; must be 0\n      \"version\\r\\n\"\n    ].pack(\"nnnna*\")\n  end\n\n  def scanner_process(data, shost, sport)\n    # Check the response data for a \"VERSION\" repsonse\n    if /VERSION (?<version>[\\d\\.]+)\\r\\n/ =~ data\n      print_good(\"#{shost}:#{sport}/udp memcached version #{version}\")\n      report_service(\n        host: shost,\n        proto: 'udp',\n        port: rport,\n        info: version,\n        name: 'memcached'\n      )\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "Jul 23 2003"
}