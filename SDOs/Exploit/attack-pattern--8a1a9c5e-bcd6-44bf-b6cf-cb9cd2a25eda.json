{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--8a1a9c5e-bcd6-44bf-b6cf-cb9cd2a25eda",
    "created": "2024-08-14T16:29:51.62935Z",
    "modified": "2024-08-14T16:29:51.629353Z",
    "name": "SVN wc.db Scanner",
    "description": " Scan for servers that allow access to the SVN wc.db file. Based on the work by Tim Meddin. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/svn_wcdb_scanner.rb",
            "external_id": "svn_wcdb_scanner.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n\n  def initialize\n    super(\n      'Name'           => 'SVN wc.db Scanner',\n      'Description'    => %q{\n        Scan for servers that allow access to the SVN wc.db file.\n        Based on the work by Tim Meddin.\n      },\n      'Author'         =>\n        [\n          'Stephen Haywood <stephen[at]averagesecurityguy.info>',\n        ],\n      'References'     =>\n        [\n          ['URL','https://web.archive.org/web/20130107035252/http://pen-testing.sans.org/blog/pen-testing/2012/12/06/all-your-svn-are-belong-to-us']\n        ],\n      'License'        =>  MSF_LICENSE\n    )\n\n    register_advanced_options(\n      [\n        OptString.new('TARGETURI', [false, 'Base path to the .svn directory', '/.svn/'])\n      ])\n  end\n\n  def run_host(ip)\n    base_path = target_uri.path\n    get_wcdb(normalize_uri(base_path, 'wc.db'))\n  end\n\n  def get_wcdb(path)\n    proto = (ssl ? 'https://' : 'http://')\n    vprint_status(\"Trying #{proto}#{vhost}:#{rport}#{path}\")\n    begin\n      res = send_request_cgi(\n        {\n          'method'  => 'GET',\n          'uri'     => path,\n          'ctype'   => 'text/plain'\n        }\n      )\n\n      if res and res.code == 200\n        print_good(\"SVN wc.db database found on #{vhost}:#{rport}\")\n\n        file = store_loot(\n          \"svn.wcdb.database\",\n          \"application/octet-stream\",\n          vhost,\n          res.body,\n          \"wc.db\",\n          \"SVN wc.db database\"\n        )\n\n        print_good(\"SVN wc.db database stored in #{file}\")\n\n        report_note(\n          :host => rhost,\n          :port => rport,\n          :proto => 'tcp',\n          :sname => (ssl ? 'https' : 'http'),\n          :type => 'svn_wc_database',\n          :data => \"SVN wc.db database is stored in #{file}\"\n        )\n      else\n        vprint_error(\"SVN wc.db database not found on #{vhost}:#{rport}\")\n      end\n    rescue ::Rex::ConnectionRefused, ::Rex::HostUnreachable, ::Rex::ConnectionTimeout\n    rescue ::Timeout::Error, ::Errno::EPIPE\n    end\n  end\nend\n"
}