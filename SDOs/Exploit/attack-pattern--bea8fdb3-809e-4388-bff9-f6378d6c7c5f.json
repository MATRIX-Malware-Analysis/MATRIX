{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--bea8fdb3-809e-4388-bff9-f6378d6c7c5f",
    "created": "2024-08-14T16:31:13.641312Z",
    "modified": "2024-08-14T16:31:13.641315Z",
    "name": "SIP Endpoint Scanner (UDP)",
    "description": "Scan for SIP devices using OPTIONS requests",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/sip/options.rb",
            "external_id": "options.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::Udp\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::UDPScanner\n  include Msf::Exploit::Remote::SIP\n\n  def initialize\n    super(\n      'Name'        => 'SIP Endpoint Scanner (UDP)',\n      'Description' => 'Scan for SIP devices using OPTIONS requests',\n      'Author'      => 'hdm',\n      'License'     => MSF_LICENSE\n    )\n\n    register_options(\n    [\n      OptString.new('TO',   [false, 'The destination username to probe at each host', 'nobody']),\n      Opt::RPORT(5060)\n    ])\n  end\n\n  def scanner_prescan(batch)\n    print_status(\"Sending SIP UDP OPTIONS requests to #{batch[0]}->#{batch[-1]} (#{batch.length} hosts)\")\n    @res = {}\n  end\n\n  def scan_host(ip)\n    scanner_send(create_probe(ip, 'udp'), ip, datastore['RPORT'])\n  end\n\n  def scanner_process(data, shost, _)\n    report_response(data, shost, 'udp')\n  end\nend\n"
}