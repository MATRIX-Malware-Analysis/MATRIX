{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--59dc57ea-f881-4adf-b618-244fdc2205f0",
    "created": "2024-08-14T16:27:50.679073Z",
    "modified": "2024-08-14T16:27:50.679077Z",
    "name": "Chargen Probe Utility",
    "description": " Chargen is a debugging and measurement tool and a character generator service. A character generator service simply sends data without regard to the input. Chargen is susceptible to spoofing the source of transmissions as well as use in a reflection attack vector. The misuse of the testing features of the Chargen service may allow attackers to craft malicious network payloads and reflect them by spoofing the transmission source to effectively direct it to a target. This can result in traffic loops and service degradation with large amounts of network traffic. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/chargen/chargen_probe.rb",
            "external_id": "chargen_probe.rb"
        },
        {
            "source_name": "reference",
            "url": "http://tools.ietf.org/html/rfc864"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Auxiliary::Scanner\n  include Msf::Exploit::Capture\n  include Msf::Auxiliary::Report\n  include Msf::Exploit::Remote::Udp\n  include Msf::Auxiliary::DRDoS\n  include Msf::Auxiliary::UDPScanner\n\n  def initialize\n    super(\n      'Name'        => 'Chargen Probe Utility',\n      'Description' => %q{\n        Chargen is a debugging and measurement tool and a character\n        generator service. A character generator service simply sends\n        data without regard to the input.\n        Chargen is susceptible to spoofing the source of transmissions\n        as well as use in a reflection attack vector. The misuse of the\n        testing features of the Chargen service may allow attackers to\n        craft malicious network payloads and reflect them by spoofing\n        the transmission source to effectively direct it to a target.\n        This can result in traffic loops and service degradation with\n        large amounts of network traffic.\n      },\n      'Author'      => 'Matteo Cantoni <goony[at]nothink.org>',\n      'License'     => MSF_LICENSE,\n      'References'  =>\n        [\n          [ 'CVE', '1999-0103' ], # Note, does not actually trigger a flood.\n          [ 'URL', 'http://tools.ietf.org/html/rfc864' ]\n        ],\n      'DisclosureDate' => 'Feb 08 1996')\n\n      register_options([\n        Opt::RPORT(19)\n      ])\n  end\n\n  def run_host(rhost)\n    data = Rex::Text.rand_text_alpha_lower(1)\n    if spoofed?\n      scanner_spoof_send(data, rhost, datastore['RPORT'], datastore['SRCIP'], datastore['NUM_REQUESTS'])\n    else\n      begin\n        connect_udp\n        udp_sock.write(data)\n        r = udp_sock.recvfrom(65535, 0.1)\n\n        if r and r[1]\n          vprint_status(\"#{rhost}:#{rport} - Response: #{r[0].to_s}\")\n          res = r[0].to_s.strip\n          if (res.match(/ABCDEFGHIJKLMNOPQRSTUVWXYZ/i) || res.match(/0123456789/))\n            print_good(\"#{rhost}:#{rport} answers with #{res.length} bytes (headers + UDP payload)\")\n            report_service(:host => rhost, :port => rport, :proto => \"udp\", :name => \"chargen\", :info => res.length)\n          end\n        end\n      rescue ::Rex::HostUnreachable, ::Rex::ConnectionTimeout, ::Rex::ConnectionRefused\n        nil\n      ensure\n        disconnect_udp if self.udp_sock\n      end\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "Feb 08 1996"
}