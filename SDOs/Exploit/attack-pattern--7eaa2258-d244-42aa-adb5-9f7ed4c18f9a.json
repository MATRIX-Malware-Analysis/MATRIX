{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--7eaa2258-d244-42aa-adb5-9f7ed4c18f9a",
    "created": "2024-08-14T16:33:05.030595Z",
    "modified": "2024-08-14T16:33:05.030599Z",
    "name": "Windows Gather Privileges Enumeration",
    "description": " This module will print if UAC is enabled, and if the current account is ADMIN enabled. It will also print UID, foreground SESSION ID, is SYSTEM status and current process PRIVILEGES.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/windows/gather/win_privs.rb",
            "external_id": "win_privs.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Post\n  include Msf::Post::Windows::Priv\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Windows Gather Privileges Enumeration',\n        'Description' => %q{\n          This module will print if UAC is enabled, and if the current account is\n          ADMIN enabled. It will also print UID, foreground SESSION ID, is SYSTEM status\n          and current process PRIVILEGES.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [ 'Merlyn Cousins <drforbin6[at]gmail.com>'],\n        'Platform' => [ 'win' ],\n        'SessionTypes' => [ 'meterpreter' ],\n        'Compat' => {\n          'Meterpreter' => {\n            'Commands' => %w[\n              stdapi_railgun_api\n              stdapi_sys_config_getprivs\n              stdapi_sys_config_getuid\n            ]\n          }\n        }\n      )\n    )\n  end\n\n  def run\n    usr_tbl = Rex::Text::Table.new(\n      'Header' => 'Current User',\n      'Indent' => 1,\n      'Columns' => ['Is Admin', 'Is System', 'Is In Local Admin Group', 'UAC Enabled', 'Foreground ID', 'UID']\n    )\n\n    privs_tbl = Rex::Text::Table.new(\n      'Header' => 'Windows Privileges',\n      'Indent' => 1,\n      'Columns' => ['Name']\n    )\n\n    # Gather data\n    uac = is_uac_enabled? ? 'True' : 'False'\n    admin = is_admin? ? 'True' : 'False'\n    admin_group = is_in_admin_group? ? 'True' : 'False'\n    sys = is_system? ? 'True' : 'False'\n    uid = client.sys.config.getuid\n    begin\n      # Older OS might not have this (min support is XP)\n      fid = client.railgun.kernel32.WTSGetActiveConsoleSessionId['return']\n    rescue StandardError\n      fid = 'N/A'\n    end\n    privs = client.sys.config.getprivs\n\n    # Store in tables\n    usr_tbl << [admin, sys, admin_group, uac, fid, uid]\n    privs.each do |priv|\n      privs_tbl << [priv]\n    end\n\n    # Show tables\n    print_line(usr_tbl.to_s)\n    print_line(privs_tbl.to_s)\n  end\nend\n",
    "x_mitre_platforms": [
        "[ 'win' ]"
    ]
}