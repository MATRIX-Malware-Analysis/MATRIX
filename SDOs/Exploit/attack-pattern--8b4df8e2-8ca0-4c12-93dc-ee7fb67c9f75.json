{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--8b4df8e2-8ca0-4c12-93dc-ee7fb67c9f75",
    "created": "2024-08-14T16:24:15.197145Z",
    "modified": "2024-08-14T16:24:15.197149Z",
    "name": "Juniper Configuration Importer",
    "description": " This module imports a Juniper ScreenOS or JunOS device configuration.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/networking/juniper_config.rb",
            "external_id": "juniper_config.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Auxiliary::Juniper\n  include Msf::Exploit::Deprecated\n  moved_from 'auxiliary/admin/juniper/juniper_config'\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Juniper Configuration Importer',\n        'Description' => %q{\n          This module imports a Juniper ScreenOS or JunOS device configuration.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => ['h00die'],\n        'Actions' => [\n          ['JUNOS', { 'Description' => 'Import JunOS Config File' }],\n          ['SCREENOS', { 'Description' => 'Import ScreenOS Config File' }],\n        ],\n        'DefaultAction' => 'JUNOS',\n        'Notes' => {\n          'Stability' => [],\n          'SideEffects' => [],\n          'Reliability' => []\n        }\n      )\n    )\n\n    register_options(\n      [\n        OptPath.new('CONFIG', [true, 'Path to configuration to import']),\n        Opt::RHOST(),\n        Opt::RPORT(22)\n      ]\n    )\n  end\n\n  def run\n    unless ::File.exist?(datastore['CONFIG'])\n      fail_with Failure::BadConfig, \"Juniper config file #{datastore['CONFIG']} does not exist!\"\n    end\n    juniper_config = ::File.open(datastore['CONFIG'], 'rb')\n    print_status('Importing config')\n    if action.name == 'JUNOS'\n      juniper_junos_config_eater(datastore['RHOSTS'], datastore['RPORT'], juniper_config.read)\n    elsif action.name == 'SCREENOS'\n      juniper_screenos_config_eater(datastore['RHOSTS'], datastore['RPORT'], juniper_config.read)\n    end\n    print_good('Config import successful')\n  end\nend\n"
}