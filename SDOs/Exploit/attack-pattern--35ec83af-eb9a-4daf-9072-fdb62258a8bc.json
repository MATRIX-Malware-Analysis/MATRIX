{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--35ec83af-eb9a-4daf-9072-fdb62258a8bc",
    "created": "2024-08-14T16:32:59.4436Z",
    "modified": "2024-08-14T16:32:59.443604Z",
    "name": "Solaris Gather Virtual Environment Detection",
    "description": " This module attempts to determine whether the system is running inside of a virtual environment and if so, which one. This module supports detection of Solaris Zone, VMWare, VirtualBox, Xen and QEMU/KVM.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/solaris/gather/checkvm.rb",
            "external_id": "checkvm.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Post\n  include Msf::Post::File\n  include Msf::Post::Solaris::Priv\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Solaris Gather Virtual Environment Detection',\n        'Description' => %q{\n          This module attempts to determine whether the system is running\n          inside of a virtual environment and if so, which one. This\n          module supports detection of Solaris Zone, VMWare, VirtualBox, Xen,\n          and QEMU/KVM.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [ 'Carlos Perez <carlos_perez[at]darkoperator.com>'],\n        'Platform' => [ 'solaris' ],\n        'SessionTypes' => [ 'shell' ]\n      )\n    )\n  end\n\n  # Run Method for when run command is issued\n  def run\n    print_status('Gathering System info ....')\n    vm = nil\n    kernel_type = cmd_exec('uname -v')\n\n    if kernel_type =~ /Generic_Virtual/i\n      vm = 'Solaris Zone'\n    end\n\n    if !vm\n\n      prt_diag = cmd_exec('/usr/sbin/prtdiag -v').gsub(\"\\n\", ' ')\n\n      case prt_diag\n      when /virtualbox/i\n        vm = 'VirtualBox'\n      when /vmware/i\n        vm = 'VMware'\n      when /xen/i\n        vm = 'Xen'\n      when /qemu/i\n        vm = 'Qemu/KVM'\n      end\n    end\n\n    if vm\n      print_good(\"This appears to be a #{vm} Virtual Machine\")\n    else\n      print_status('This appears to be a Physical Machine')\n    end\n  end\n\nend\n",
    "x_mitre_platforms": [
        "[ 'solaris' ]"
    ]
}