{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--f4be0524-4037-4f5c-8d96-fd2636d53376",
    "created": "2024-08-14T16:33:19.196341Z",
    "modified": "2024-08-14T16:33:19.196345Z",
    "name": "Simple",
    "description": "Simple NOP generator",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/nops/ppc/simple.rb",
            "external_id": "simple.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n###\n#\n# SingleByte\n# ----------\n#\n# This class implements simple NOP generator for PowerPC\n#\n###\nclass MetasploitModule < Msf::Nop\n\n\n  def initialize\n    super(\n      'Name'        => 'Simple',\n      'Alias'       => 'ppc_simple',\n      'Description' => 'Simple NOP generator',\n      'Author'      => 'hdm',\n      'License'     => MSF_LICENSE,\n      'Arch'        => ARCH_PPC)\n\n    register_advanced_options(\n      [\n        OptBool.new('RandomNops', [ false, \"Generate a random NOP sled\", true ])\n      ])\n  end\n\n\n  def generate_sled(length, opts)\n\n    badchars = opts['BadChars'] || ''\n    random   = opts['Random']   || datastore['RandomNops']\n\n    if random\n      1.upto(1024) do |i|\n        regs_d = (rand(0x8000 - 0x0800) + 0x0800).to_i\n        regs_b = [regs_d].pack('n').unpack('B*')[0][1, 15]\n        flag_o = rand(2).to_i\n        flag_r = rand(2).to_i\n\n        pcword = [\"011111#{regs_b}#{flag_o}100001010#{flag_r}\"].pack(\"B*\")\n        failed = false\n\n        pcword.each_byte do |c|\n          failed = true if badchars.include?(c.chr)\n        end\n\n        next if failed\n\n        return (pcword * (length / 4))[0, length]\n      end\n    end\n\n    return (\"\\x60\" * length)[0, length]\n  end\nend\n"
}