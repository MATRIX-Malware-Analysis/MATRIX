{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--68b8c80a-1c08-4bae-b92f-697364bae24b",
    "created": "2024-08-14T16:33:13.58798Z",
    "modified": "2024-08-14T16:33:13.587983Z",
    "name": "Linux Gather Virtual Environment Detection",
    "description": " This module attempts to determine whether the system is running inside of a virtual environment and if so, which one. This module supports detection of Hyper-V, VMWare, VirtualBox, Xen and QEMU/KVM.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/linux/gather/checkvm.rb",
            "external_id": "checkvm.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Post\n  include Msf::Post::File\n  include Msf::Post::Linux::Priv\n  include Msf::Post::Linux::System\n  include Msf::Post::Process\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Linux Gather Virtual Environment Detection',\n        'Description' => %q{\n          This module attempts to determine whether the system is running\n          inside of a virtual environment and if so, which one. This\n          module supports detection of Hyper-V, VMWare, VirtualBox, Xen,\n          and QEMU/KVM.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [ 'Carlos Perez <carlos_perez[at]darkoperator.com>'],\n        'Platform' => [ 'linux' ],\n        'SessionTypes' => [ 'shell', 'meterpreter' ]\n      )\n    )\n  end\n\n  # Run Method for when run command is issued\n  def run\n    print_status('Gathering System info ....')\n    vm = nil\n    dmi_info = nil\n\n    if is_root?\n      dmi_info = cmd_exec('/usr/sbin/dmidecode')\n    end\n\n    # Check DMi Info\n    if dmi_info\n      case dmi_info\n      when /microsoft corporation/i\n        vm = 'MS Hyper-V'\n      when /vmware/i\n        vm = 'VMware'\n      when /virtualbox/i\n        vm = 'VirtualBox'\n      when /qemu/i\n        vm = 'Qemu/KVM'\n      when /domu/i\n        vm = 'Xen'\n      end\n    end\n\n    # Check kernel modules\n    if !vm\n      loaded_modules = read_file('/proc/modules')\n      if !loaded_modules\n        loaded_modules = cmd_exec('/sbin/lsmod').to_s\n      end\n\n      case loaded_modules.gsub(\"\\n\", ' ')\n      when /vboxsf|vboxguest|vboxvideo|vboxvideo_drv|vboxdrv/i\n        vm = 'VirtualBox'\n      when /vmw_ballon|vmxnet|vmw/i\n        vm = 'VMware'\n      when /xen-vbd|xen-vnif|xen_netfront|xen_blkfront/\n        vm = 'Xen'\n      when /virtio_pci|virtio_net|virtio_blk|virtio_console|virtio_scsi|virtio_balloon|virtio_input|virtio-gpu|virtio-rng|virtio_dma_buf|virtio_mmio|virtio_pmem|virtio_snd/\n        vm = 'Qemu/KVM'\n      when /hv_vmbus|hv_blkvsc|hv_netvsc|hv_utils|hv_storvsc|hv_boot|hv_balloon|hyperv_keyboard|hid_hyperv|hyperv_fb/\n        vm = 'MS Hyper-V'\n      end\n    end\n\n    # Check SCSI Driver\n    if !vm\n      proc_scsi = read_file('/proc/scsi/scsi')\n      if proc_scsi\n        case proc_scsi.gsub(\"\\n\", ' ')\n        when /vmware/i\n          vm = 'VMware'\n        when /vbox/i\n          vm = 'VirtualBox'\n        end\n      end\n    end\n\n    # Check IDE Devices\n    if !vm\n      case cmd_exec('cat /proc/ide/hd*/model')\n      when /vbox/i\n        vm = 'VirtualBox'\n      when /vmware/i\n        vm = 'VMware'\n      when /qemu/i\n        vm = 'Qemu/KVM'\n      when /virtual [vc]d/i\n        vm = 'Hyper-V/Virtual PC'\n      end\n    end\n\n    # identity Xen block Device Root\n    if !vm\n      proc_mounts = read_file('/proc/mounts')\n      if proc_mounts\n        case proc_mounts\n        when %r{/dev/xvd.* / }\n          vm = 'Xen'\n        end\n      end\n    end\n\n    # Check system vendor\n    if !vm\n      sys_vendor = read_file('/sys/class/dmi/id/sys_vendor')\n      if sys_vendor\n        case sys_vendor.gsub(\"\\n\", ' ')\n        when /qemu/i\n          vm = 'Qemu'\n        when /vmware/i\n          vm = 'VMWare'\n        when /xen/i\n          vm = 'Xen'\n        when /microsoft/i\n          vm = 'Hyper-V'\n        end\n      end\n    end\n\n    # Check using lspci\n    if !vm\n      case get_sysinfo[:distro]\n      when /oracle|centos|suse|redhat|mandrake|slackware|fedora/i\n        lspci_data = cmd_exec('/sbin/lspci')\n      when /debian|ubuntu/\n        lspci_data = cmd_exec('/usr/bin/lspci')\n      else\n        lspci_data = cmd_exec('lspci')\n      end\n\n      case lspci_data.to_s.gsub(\"\\n\", ' ')\n      when /vmware/i\n        vm = 'VMware'\n      when /virtualbox/i\n        vm = 'VirtualBox'\n      end\n    end\n\n    # Check Product Name\n    if !vm\n      product_name = read_file('/sys/class/dmi/id/product_name')\n      if product_name\n        case product_name.gsub(\"\\n\", ' ')\n        when /vmware/i\n          vm = 'VMware'\n        when /virtualbox/i\n          vm = 'VirtualBox'\n        when /xen/i\n          vm = 'Xen'\n        when /KVM/i\n          vm = 'KVM'\n        when /oracle/i\n          vm = 'Oracle Corporation'\n        end\n      end\n    end\n\n    # Check BIOS Name\n    if !vm\n      bios_vendor = read_file('/sys/devices/virtual/dmi/id/bios_vendor')\n      if bios_vendor\n        case bios_vendor.gsub(\"\\n\", ' ')\n        when /^xen/i\n          vm = 'Xen'\n        end\n      end\n    end\n\n    # Check cpuinfo\n    if !vm\n      cpuinfo = read_file('/proc/cpuinfo')\n      if cpuinfo\n        case cpuinfo.gsub(\"\\n\", ' ')\n        when /qemu virtual cpu|emulated by qemu|KVM processor/i\n          vm = 'Qemu/KVM'\n        end\n      end\n    end\n\n    # Check Xen devices\n    if !vm\n      xen_capabilities = read_file('/sys/hypervisor/uuid')\n      if xen_capabilities\n        if ! xen_capabilities.include? '00000000-0000-0000-0000-000000000000'\n          vm = 'Xen'\n        end\n      end\n    end\n\n    # Check Processes\n    if !vm\n      get_processes do |process|\n        case process['name']\n        when /hv_vss_daemon|hv_kvp_daemon|hv_fcopy_daemon/i\n          vm = 'MS Hyper-V'\n        end\n      end\n    end\n\n    # Check dmesg Output\n    if !vm\n      dmesg = cmd_exec('dmesg')\n      case dmesg\n      when /vboxbios|vboxcput|vboxfacp|vboxxsdt|vbox cd-rom|vbox harddisk/i\n        vm = 'VirtualBox'\n      when /vmware virtual ide|vmware pvscsi|vmware virtual platform/i\n        vm = 'VMware'\n      when /xen_mem|xen-vbd/i\n        vm = 'Xen'\n      when /qemu virtual cpu version/i\n        vm = 'Qemu/KVM'\n      when %r{/dev/vmnet}\n        vm = 'VMware'\n      end\n    end\n\n    if vm\n      print_good(\"This appears to be a '#{vm}' virtual machine\")\n      report_virtualization(vm)\n    else\n      print_status('This does not appear to be a virtual machine')\n    end\n  end\nend\n",
    "x_mitre_platforms": [
        "[ 'linux' ]"
    ]
}