{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--74864311-41f6-4ed6-bfb3-8bd440c87ae7",
    "created": "2024-08-14T16:22:29.899166Z",
    "modified": "2024-08-14T16:22:29.89917Z",
    "name": "Microsoft SQL Server Generic Query from File",
    "description": " This module will allow for multiple SQL queries contained within a specified file to be executed against a Microsoft SQL (MSSQL) Server instance, given the appropriate credentials. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/mssql/mssql_sql_file.rb",
            "external_id": "mssql_sql_file.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::MSSQL\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Microsoft SQL Server Generic Query from File',\n      'Description'    => %q{\n        This module will allow for multiple SQL queries contained within a specified\n        file to be executed against a Microsoft SQL (MSSQL) Server instance, given\n        the appropriate credentials.\n      },\n      'Author'         => [ 'j0hn__f : <jf[at]tinternet.org.uk>' ],\n      'License'        => MSF_LICENSE\n    ))\n\n    register_options(\n      [\n        OptPath.new('SQL_FILE', [ true, \"File containing multiple SQL queries execute (one per line)\"]),\n        OptString.new('QUERY_PREFIX', [ false, \"string to append each line of the file\",\"\"]),\n        OptString.new('QUERY_SUFFIX', [ false, \"string to prepend each line of the file\",\"\"])\n      ])\n  end\n\n\n  def run\n    queries = File.readlines(datastore['SQL_FILE'])\n\n    prefix = datastore['QUERY_PREFIX']\n    suffix = datastore['QUERY_SUFFIX']\n\n    begin\n      queries.each do |sql_query|\n        vprint_status(\"Executing: #{sql_query}\")\n        mssql_query(prefix+sql_query.chomp+suffix,true) if mssql_login_datastore\n      end\n    rescue Rex::ConnectionRefused, Rex::ConnectionTimeout\n      print_error \"Error connecting to server: #{$!}\"\n    ensure\n      disconnect\n    end\n  end\nend\n"
}