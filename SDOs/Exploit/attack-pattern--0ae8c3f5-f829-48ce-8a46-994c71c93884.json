{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--0ae8c3f5-f829-48ce-8a46-994c71c93884",
    "created": "2024-08-14T16:33:17.995407Z",
    "modified": "2024-08-14T16:33:17.995411Z",
    "name": "Write Messages to Users",
    "description": " This module utilizes the wall(1) or write(1) utilities, as appropriate to send messages to users on the target system.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/multi/general/wall.rb",
            "external_id": "wall.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Post\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Write Messages to Users',\n        'Description' => %q{\n          This module utilizes the wall(1) or write(1) utilities, as appropriate,\n          to send messages to users on the target system.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'Jon Hart <jon_hart[at]rapid7.com>' # original metasploit module\n        ],\n        # TODO: is there a way to do this on Windows?\n        'Platform' => %w[linux osx unix],\n        'SessionTypes' => %w[shell meterpreter]\n      )\n    )\n    register_options(\n      [\n        OptString.new('MESSAGE', [false, 'The message to send', '']),\n        OptString.new('USERS', [\n          false, 'List of users to write(1) to, separated by commas. ' \\\n                      ' wall(1)s to all users by default'\n        ]),\n        OptBool.new('COWSAY', [true, 'Display MESSAGE in a ~cowsay way', false])\n      ]\n    )\n  end\n\n  def users\n    datastore['USERS'] ? datastore['USERS'].split(/\\s*,\\s*/) : nil\n  end\n\n  def message\n    if datastore['MESSAGE'].blank?\n      text = \"Hello from a metasploit session at #{Time.now}\"\n    else\n      text = datastore['MESSAGE']\n    end\n\n    datastore['COWSAY'] ? Rex::Text.cowsay(text) : text\n  end\n\n  def run\n    if users\n      # this requires that the target user has write turned on\n      users.map { |user| cmd_exec(\"echo '#{message}' | write #{user}\") }\n    else\n      # this will send the messages to all users, regardless of whether or\n      # not they have write turned on.  If the session is root, the -n will disable\n      # the annoying banner\n      cmd_exec(\"echo '#{message}' | wall -n\")\n    end\n  end\nend\n",
    "x_mitre_platforms": [
        "%w[linux osx unix]"
    ]
}