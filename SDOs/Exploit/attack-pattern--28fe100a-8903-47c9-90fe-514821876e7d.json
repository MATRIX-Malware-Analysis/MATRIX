{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--28fe100a-8903-47c9-90fe-514821876e7d",
    "created": "2024-08-14T16:31:13.640771Z",
    "modified": "2024-08-14T16:31:13.640775Z",
    "name": "SIP Endpoint Scanner (TCP)",
    "description": "Scan for SIP devices using OPTIONS requests",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/scanner/sip/options_tcp.rb",
            "external_id": "options_tcp.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Auxiliary::Report\n  include Msf::Auxiliary::Scanner\n  include Msf::Exploit::Remote::SIP\n\n  def initialize\n    super(\n      'Name'        => 'SIP Endpoint Scanner (TCP)',\n      'Description' => 'Scan for SIP devices using OPTIONS requests',\n      'Author'      => 'hdm',\n      'License'     => MSF_LICENSE\n    )\n\n    register_options(\n    [\n      OptString.new('TO',   [false, 'The destination username to probe at each host', 'nobody']),\n      Opt::RPORT(5060)\n    ])\n  end\n\n  # Operate on a single system at a time\n  def run_host(ip)\n    begin\n      connect\n      sock.put(create_probe(ip, 'tcp'))\n      res = sock.get_once(-1, 5)\n      report_response(res, rhost, 'tcp') if res\n    rescue ::Interrupt\n      raise $ERROR_INFO\n    ensure\n      disconnect\n    end\n  end\nend\n"
}