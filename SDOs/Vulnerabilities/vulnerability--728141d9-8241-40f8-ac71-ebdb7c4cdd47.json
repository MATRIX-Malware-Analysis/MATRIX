{
    "type": "vulnerability",
    "spec_version": "2.1",
    "id": "vulnerability--728141d9-8241-40f8-ac71-ebdb7c4cdd47",
    "created": "2024-08-13T16:03:44.927135Z",
    "modified": "2024-08-13T16:03:44.927139Z",
    "name": "Ciphertext integrity weakness in Tink",
    "description": "A mis-handling of invalid unicode characters in the Java implementation of Tink versions prior to 1.5 allows an attacker to change the ID part of a ciphertext, which result in the creation of a second ciphertext that can decrypt to the same plaintext. This can be a problem with encrypting deterministic AEAD with a single key, and rely on a unique ciphertext-per-plaintext.",
    "external_references": [
        {
            "source_name": "cve",
            "external_id": "CVE-2020-8929"
        }
    ],
    "credits": [
        {
            "lang": "en",
            "value": "Peter Esbensen"
        }
    ],
    "metrics": [
        {
            "cvssV3_1": {
                "attackComplexity": "LOW",
                "attackVector": "NETWORK",
                "availabilityImpact": "NONE",
                "baseScore": 5.3,
                "baseSeverity": "MEDIUM",
                "confidentialityImpact": "NONE",
                "integrityImpact": "LOW",
                "privilegesRequired": "NONE",
                "scope": "UNCHANGED",
                "userInteraction": "NONE",
                "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
                "version": "3.1"
            }
        }
    ],
    "references": [
        {
            "tags": [
                "x_refsource_CONFIRM"
            ],
            "url": "https://github.com/google/tink/commit/93d839a5865b9d950dffdc9d0bc99b71280a8899"
        },
        {
            "tags": [
                "x_refsource_CONFIRM"
            ],
            "url": "https://github.com/google/tink/security/advisories/GHSA-g5vf-v6wf-7w2r"
        }
    ]
}