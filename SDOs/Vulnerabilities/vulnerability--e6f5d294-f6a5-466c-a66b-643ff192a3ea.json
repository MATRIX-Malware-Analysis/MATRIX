{
    "type": "vulnerability",
    "spec_version": "2.1",
    "id": "vulnerability--e6f5d294-f6a5-466c-a66b-643ff192a3ea",
    "created": "2024-08-13T16:06:09.943585Z",
    "modified": "2024-08-13T16:06:09.943589Z",
    "name": "Access to invalid memory during shape inference in `Cudnn*` ops",
    "description": "TensorFlow is an open source platform for machine learning. In affected versions the shape inference code for the `Cudnn*` operations in TensorFlow can be tricked into accessing invalid memory, via a heap buffer overflow. This occurs because the ranks of the `input`, `input_h` and `input_c` parameters are not validated, but code assumes they have certain values. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
    "external_references": [
        {
            "source_name": "cve",
            "external_id": "CVE-2021-41221"
        }
    ],
    "metrics": [
        {
            "cvssV3_1": {
                "attackComplexity": "LOW",
                "attackVector": "LOCAL",
                "availabilityImpact": "HIGH",
                "baseScore": 7.8,
                "baseSeverity": "HIGH",
                "confidentialityImpact": "HIGH",
                "integrityImpact": "HIGH",
                "privilegesRequired": "LOW",
                "scope": "UNCHANGED",
                "userInteraction": "NONE",
                "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
                "version": "3.1"
            }
        }
    ],
    "references": [
        {
            "tags": [
                "x_refsource_CONFIRM"
            ],
            "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cqv6-3phm-hcwx"
        },
        {
            "tags": [
                "x_refsource_MISC"
            ],
            "url": "https://github.com/tensorflow/tensorflow/commit/af5fcebb37c8b5d71c237f4e59c6477015c78ce6"
        }
    ]
}