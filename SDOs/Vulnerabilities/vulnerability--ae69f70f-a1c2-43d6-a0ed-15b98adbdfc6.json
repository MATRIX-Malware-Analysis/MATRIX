{
    "type": "vulnerability",
    "spec_version": "2.1",
    "id": "vulnerability--ae69f70f-a1c2-43d6-a0ed-15b98adbdfc6",
    "created": "2024-08-13T16:09:12.380871Z",
    "modified": "2024-08-13T16:09:12.380875Z",
    "name": "linked_list_allocator vulnerable to out-of-bound writes on `Heap` initialization and `Heap::extend`",
    "description": "linked_list_allocator is an allocator usable for no_std systems. Prior to version 0.10.2, the heap initialization methods were missing a minimum size check for the given heap size argument. This could lead to out-of-bound writes when a heap was initialized with a size smaller than `3 * size_of::<usize>` because of metadata write operations. This vulnerability impacts all the initialization functions on the `Heap` and `LockedHeap` types, including `Heap::new`, `Heap::init`, `Heap::init_from_slice`, and `LockedHeap::new`. It also affects multiple uses of the `Heap::extend` method. Version 0.10.2 contains a patch for the issue. As a workaround, ensure that the heap is only initialized with a size larger than `3 * size_of::<usize>` and that the `Heap::extend` method is only called with sizes larger than `2 * size_of::<usize>()`. Also, ensure that the total heap size is (and stays) a multiple of `2 * size_of::<usize>()`.",
    "external_references": [
        {
            "source_name": "cve",
            "external_id": "CVE-2022-36086"
        }
    ],
    "metrics": [
        {
            "cvssV3_1": {
                "attackComplexity": "LOW",
                "attackVector": "LOCAL",
                "availabilityImpact": "HIGH",
                "baseScore": 8.4,
                "baseSeverity": "HIGH",
                "confidentialityImpact": "HIGH",
                "integrityImpact": "HIGH",
                "privilegesRequired": "NONE",
                "scope": "UNCHANGED",
                "userInteraction": "NONE",
                "vectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "version": "3.1"
            }
        }
    ],
    "references": [
        {
            "tags": [
                "x_refsource_CONFIRM"
            ],
            "url": "https://github.com/rust-osdev/linked-list-allocator/security/advisories/GHSA-xg8p-34w2-j49j"
        },
        {
            "tags": [
                "x_refsource_MISC"
            ],
            "url": "https://github.com/rust-osdev/linked-list-allocator/commit/013b0758643943e8df5b17bbb495460ff47e8bbf"
        }
    ]
}