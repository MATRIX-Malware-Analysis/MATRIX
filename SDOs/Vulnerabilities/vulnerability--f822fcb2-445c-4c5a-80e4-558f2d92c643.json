{
    "type": "vulnerability",
    "spec_version": "2.1",
    "id": "vulnerability--f822fcb2-445c-4c5a-80e4-558f2d92c643",
    "created": "2024-08-13T16:12:55.045334Z",
    "modified": "2024-08-13T16:12:55.045339Z",
    "name": "notation-go has excessive memory allocation on verification",
    "description": "notation-go is a collection of libraries for supporting Notation sign, verify, push, and pull of oci artifacts. Prior to version 1.0.0-rc.3, notation-go users will find their application using excessive memory when verifying signatures. The application will be killed, and thus availability is impacted. The problem has been patched in the release v1.0.0-rc.3. Some workarounds are available. Users can review their own trust policy file and check if the identity string contains `=#`. Meanwhile, users should only put trusted certificates in their trust stores referenced by their own trust policy files, and make sure the `authenticity` validation is set to `enforce`.",
    "external_references": [
        {
            "source_name": "cve",
            "external_id": "CVE-2023-25656"
        }
    ],
    "metrics": [
        {
            "cvssV3_1": {
                "attackComplexity": "LOW",
                "attackVector": "NETWORK",
                "availabilityImpact": "HIGH",
                "baseScore": 7.5,
                "baseSeverity": "HIGH",
                "confidentialityImpact": "NONE",
                "integrityImpact": "NONE",
                "privilegesRequired": "NONE",
                "scope": "UNCHANGED",
                "userInteraction": "NONE",
                "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "version": "3.1"
            }
        }
    ],
    "references": [
        {
            "url": "https://github.com/notaryproject/notation-go/releases/tag/v1.0.0-rc.3"
        },
        {
            "url": "https://github.com/notaryproject/notation-go/security/advisories/GHSA-87x9-7grx-m28v"
        }
    ]
}