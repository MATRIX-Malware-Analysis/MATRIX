{
    "type": "vulnerability",
    "spec_version": "2.1",
    "id": "vulnerability--e9868d07-48a6-4c8d-ac29-3c2262227ca5",
    "created": "2024-08-13T16:05:27.78451Z",
    "modified": "2024-08-13T16:05:27.784514Z",
    "name": "No Title Available",
    "description": "The path in this case is a little bit convoluted. The end result is that via an ioctl an untrusted app can control the ui32PageIndex offset in the expression:sPA.uiAddr = page_to_phys(psOSPageArrayData->pagearray[ui32PageIndex]);With the current PoC this crashes as an OOB read. However, given that the OOB read value is ending up as the address field of a struct I think i seems plausible that this could lead to an OOB write if the attacker is able to cause the OOB read to pull an interesting kernel address. Regardless if this is a read or write, it is a High severity issue in the kernel.Product: AndroidVersions: Android SoCAndroid ID: A-238904312",
    "external_references": [
        {
            "source_name": "cve",
            "external_id": "CVE-2021-0942"
        }
    ],
    "references": [
        {
            "tags": [
                "x_refsource_MISC"
            ],
            "url": "https://source.android.com/security/bulletin/2022-09-01"
        }
    ]
}