{
    "type": "vulnerability",
    "spec_version": "2.1",
    "id": "vulnerability--55a23e51-fe3c-445e-8b06-bcbd983c361c",
    "created": "2024-08-13T16:04:08.961555Z",
    "modified": "2024-08-13T16:04:08.961559Z",
    "name": "No Title Available",
    "description": "The vmw_gb_surface_define_ioctl function (accessible via DRM_IOCTL_VMW_GB_SURFACE_CREATE) in drivers/gpu/drm/vmwgfx/vmwgfx_surface.c in the Linux kernel through 4.11.4 defines a backup_handle variable but does not give it an initial value. If one attempts to create a GB surface, with a previously allocated DMA buffer to be used as a backup buffer, the backup_handle variable does not get written to and is then later returned to user space, allowing local users to obtain sensitive information from uninitialized kernel memory via a crafted ioctl call.",
    "external_references": [
        {
            "source_name": "cve",
            "external_id": "CVE-2017-9605"
        }
    ],
    "references": [
        {
            "name": "DSA-3927",
            "tags": [
                "vendor-advisory",
                "x_refsource_DEBIAN"
            ],
            "url": "http://www.debian.org/security/2017/dsa-3927"
        },
        {
            "tags": [
                "x_refsource_CONFIRM"
            ],
            "url": "https://github.com/torvalds/linux/commit/07678eca2cf9c9a18584e546c2b2a0d0c9a3150c"
        },
        {
            "name": "DSA-3945",
            "tags": [
                "vendor-advisory",
                "x_refsource_DEBIAN"
            ],
            "url": "http://www.debian.org/security/2017/dsa-3945"
        },
        {
            "name": "99095",
            "tags": [
                "vdb-entry",
                "x_refsource_BID"
            ],
            "url": "http://www.securityfocus.com/bid/99095"
        },
        {
            "tags": [
                "x_refsource_CONFIRM"
            ],
            "url": "http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=07678eca2cf9c9a18584e546c2b2a0d0c9a3150c"
        }
    ]
}