{
    "type": "vulnerability",
    "spec_version": "2.1",
    "id": "vulnerability--1458cc5d-625d-4885-9e73-2ae753ef00ec",
    "created": "2024-08-13T16:06:34.0223Z",
    "modified": "2024-08-13T16:06:34.022304Z",
    "name": "No Title Available",
    "description": "In OpenZeppelin <=v4.4.0, initializer functions that are invoked separate from contract creation (the most prominent example being minimal proxies) may be reentered if they make an untrusted non-view external call. Once an initializer has finished running it can never be re-executed. However, an exception put in place to support multiple inheritance made reentrancy possible, breaking the expectation that there is a single execution.",
    "external_references": [
        {
            "source_name": "cve",
            "external_id": "CVE-2021-46320"
        }
    ],
    "references": [
        {
            "tags": [
                "x_refsource_MISC"
            ],
            "url": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-9c22-pwxw-p6hx"
        }
    ]
}