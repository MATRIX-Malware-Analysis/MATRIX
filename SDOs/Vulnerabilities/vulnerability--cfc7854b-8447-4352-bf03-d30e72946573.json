{
    "type": "vulnerability",
    "spec_version": "2.1",
    "id": "vulnerability--cfc7854b-8447-4352-bf03-d30e72946573",
    "created": "2024-08-13T16:14:12.424623Z",
    "modified": "2024-08-13T16:14:12.424627Z",
    "name": "No Title Available",
    "description": "The assoc_array_insert_into_terminal_node function in lib/assoc_array.c in the Linux kernel before 4.5.3 does not check whether a slot is a leaf, which allows local users to obtain sensitive information from kernel memory or cause a denial of service (invalid pointer dereference and out-of-bounds read) via an application that uses associative-array data structures, as demonstrated by the keyutils test suite.",
    "external_references": [
        {
            "source_name": "cve",
            "external_id": "CVE-2016-7914"
        }
    ],
    "references": [
        {
            "tags": [
                "x_refsource_CONFIRM"
            ],
            "url": "http://source.android.com/security/bulletin/2016-11-01.html"
        },
        {
            "name": "RHSA-2016:2574",
            "tags": [
                "vendor-advisory",
                "x_refsource_REDHAT"
            ],
            "url": "http://rhn.redhat.com/errata/RHSA-2016-2574.html"
        },
        {
            "tags": [
                "x_refsource_CONFIRM"
            ],
            "url": "https://github.com/torvalds/linux/commit/8d4a2ec1e0b41b0cf9a0c5cd4511da7f8e4f3de2"
        },
        {
            "tags": [
                "x_refsource_CONFIRM"
            ],
            "url": "http://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.5.3"
        },
        {
            "name": "94138",
            "tags": [
                "vdb-entry",
                "x_refsource_BID"
            ],
            "url": "http://www.securityfocus.com/bid/94138"
        },
        {
            "tags": [
                "x_refsource_CONFIRM"
            ],
            "url": "http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=8d4a2ec1e0b41b0cf9a0c5cd4511da7f8e4f3de2"
        }
    ]
}