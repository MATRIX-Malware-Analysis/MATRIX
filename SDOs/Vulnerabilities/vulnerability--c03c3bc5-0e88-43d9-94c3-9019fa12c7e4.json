{
    "type": "vulnerability",
    "spec_version": "2.1",
    "id": "vulnerability--c03c3bc5-0e88-43d9-94c3-9019fa12c7e4",
    "created": "2024-08-13T16:09:21.293486Z",
    "modified": "2024-08-13T16:09:21.29349Z",
    "name": "Double free after calling PEM_read_bio_ex",
    "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.\n\n\n",
    "external_references": [
        {
            "source_name": "cve",
            "external_id": "CVE-2022-4450"
        }
    ],
    "credits": [
        {
            "lang": "en",
            "type": "finder",
            "user": "00000000-0000-4000-9000-000000000000",
            "value": "CarpetFuzz"
        },
        {
            "lang": "en",
            "type": "reporter",
            "user": "00000000-0000-4000-9000-000000000000",
            "value": "Dawei Wang"
        },
        {
            "lang": "en",
            "type": "reporter",
            "user": "00000000-0000-4000-9000-000000000000",
            "value": "Marc Sch\u00f6nefeld"
        },
        {
            "lang": "en",
            "type": "remediation developer",
            "user": "00000000-0000-4000-9000-000000000000",
            "value": "Kurt Roeckx"
        },
        {
            "lang": "en",
            "type": "remediation developer",
            "user": "00000000-0000-4000-9000-000000000000",
            "value": "Matt Caswell"
        }
    ],
    "metrics": [
        {
            "format": "other",
            "other": {
                "content": {
                    "text": "Moderate"
                },
                "type": "https://www.openssl.org/policies/secpolicy.html"
            }
        }
    ],
    "references": [
        {
            "name": "OpenSSL Advisory",
            "tags": [
                "vendor-advisory"
            ],
            "url": "https://www.openssl.org/news/secadv/20230207.txt"
        },
        {
            "name": "3.0.8 git commit",
            "tags": [
                "patch"
            ],
            "url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=63bcf189be73a9cc1264059bed6f57974be74a83"
        },
        {
            "name": "1.1.1t git commit",
            "tags": [
                "patch"
            ],
            "url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=bbcf509bd046b34cca19c766bbddc31683d0858b"
        }
    ]
}