{
    "type": "vulnerability",
    "spec_version": "2.1",
    "id": "vulnerability--270e2165-68fe-4f62-ae5b-ce0f9268a832",
    "created": "2024-08-13T16:04:25.258172Z",
    "modified": "2024-08-13T16:04:25.258176Z",
    "name": "No Title Available",
    "description": "Cisco Sourcefire Snort 3.0 before build 233 mishandles Ether Type Validation. Since valid ether type and IP protocol numbers do not overlap, Snort++ stores all protocol decoders in a single array. That makes it possible to craft packets that have IP protocol numbers in the ether type field which will confuse the Snort++ decoder. For example, an eth:llc:snap:icmp6 packet will cause a crash because there is no ip6 header with which to calculate the icmp6 checksum. Affected decoders include gre, llc, trans_bridge, ciscometadata, linux_sll, and token_ring. The fix adds a check in the packet manager to validate the ether type before indexing the decoder array. An out of range ether type will raise 116:473.",
    "external_references": [
        {
            "source_name": "cve",
            "external_id": "CVE-2017-6657"
        }
    ],
    "references": [
        {
            "name": "1038483",
            "tags": [
                "vdb-entry",
                "x_refsource_SECTRACK"
            ],
            "url": "http://www.securitytracker.com/id/1038483"
        },
        {
            "tags": [
                "x_refsource_CONFIRM"
            ],
            "url": "http://blog.snort.org/2017/05/snort-vulnerabilities-found.html"
        }
    ]
}