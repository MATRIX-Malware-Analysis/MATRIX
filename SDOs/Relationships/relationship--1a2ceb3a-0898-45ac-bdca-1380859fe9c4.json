{
    "type": "relationship",
    "spec_version": "2.1",
    "id": "relationship--1a2ceb3a-0898-45ac-bdca-1380859fe9c4",
    "created": "2024-08-13T14:51:21.774413Z",
    "modified": "2024-08-13T14:51:21.774415Z",
    "relationship_type": "mitigates",
    "source_ref": "course-of-action--9810d467-1323-4f36-a113-c3c24166c3c0",
    "target_ref": "malware-behavior--f3d95a1f-bba2-44ce-9af7-37866cd63fd0",
    "object_marking_refs": [
        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
    ],
    "external_references": [
        {
            "source_name": "Secureworks - AT.exe Scheduled Task",
            "url": "https://www.secureworks.com/blog/where-you-at-indicators-of-lateral-movement-using-at-exe-on-windows-7-systems",
            "description": "Carvey, H.. (2014, September). Where You AT?: Indicators of Lateral Movement Using at.exe on Windows 7 Systems. Retrieved November 27, 2019."
        },
        {
            "source_name": "Kifarunix - Task Scheduling in Linux",
            "url": "https://kifarunix.com/scheduling-tasks-using-at-command-in-linux/",
            "description": "Koromicha. (2019, September 7). Scheduling tasks using at command in Linux. Retrieved December 3, 2019."
        },
        {
            "source_name": "Powersploit",
            "url": "https://github.com/mattifestation/PowerSploit",
            "description": "PowerSploit. (n.d.). Retrieved December 4, 2014."
        }
    ],
    "description": "Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges. (Citation: Powersploit) Windows operating system also creates a registry key specifically associated with the creation of a scheduled task on the destination host at: Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tree\\At1. (Citation: Secureworks - AT.exe Scheduled Task) In Linux and macOS environments, scheduled tasks using <code>[at](https://attack.mitre.org/software/S0110)</code> can be audited locally, or through centrally collected logging, using syslog, or auditd events from the host. (Citation: Kifarunix - Task Scheduling in Linux)",
    "x_mitre_version": "1.0",
    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5"
}