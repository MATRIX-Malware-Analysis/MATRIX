{
    "type": "relationship",
    "spec_version": "2.1",
    "id": "relationship--37dbc37c-d2d8-4074-a98b-bb9b15f51ae5",
    "created": "2024-08-13T14:51:22.157139Z",
    "modified": "2024-08-13T14:51:22.157141Z",
    "relationship_type": "detects",
    "source_ref": "x-mitre-data-component--0935b964-b044-4905-9b60-dc5cc1712193",
    "target_ref": "malware-behavior--08ea902d-ecb5-47ed-a453-2798057bb2d3",
    "object_marking_refs": [
        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
    ],
    "external_references": [],
    "description": "Monitor for newly executed processes that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Cyber actors frequently escalate to the SYSTEM account after gaining entry to a Windows host, to enable them to carry out various attacks more effectively. Tools such as Meterpreter, Cobalt Strike, and Empire carry out automated steps to \u201cGet System\u201d, which is the same as switching over to the System user account. Most of these tools utilize multiple techniques to try and attain SYSTEM: in the first technique, they create a named pipe and connects an instance of cmd.exe to it, which allows them to impersonate the security context of cmd.exe, which is SYSTEM. In the second technique, a malicious DLL is injected into a process that is running as SYSTEM; the injected DLL steals the SYSTEM token and applies it where necessary to escalate privileges. This analytic looks for both of these techniques.\n\nAnalytic 1 - Get System Elevation\n\n<code>(source=\"*WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"*WinEventLog:Security\" EventCode=\"4688\")(ParentImage=\"C:\\\\Windows\\\\System32\\\\services.exe\" Image=\"C:\\\\Windows\\\\System32\\\\cmd.exe\"  CommandLine=\"*echo*\" CommandLine=\"*\\pipe\\*\") OR (Image=\"C:\\\\Windows\\\\System32\\\\rundll32.exe\" CommandLine=\"*,a /p:*\")</code>",
    "x_mitre_version": "0.1",
    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5"
}