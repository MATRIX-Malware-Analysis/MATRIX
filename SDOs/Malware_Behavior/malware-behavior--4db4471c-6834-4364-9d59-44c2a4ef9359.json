{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--4db4471c-6834-4364-9d59-44c2a4ef9359",
    "created": "2019-08-01T00:00:00.000Z",
    "modified": "2024-04-27T00:00:00.000Z",
    "name": "Dynamic Analysis Evasion",
    "description": "",
    "labels": [
        "malware-behavior"
    ],
    "object_marking_refs": [
        "marking-definition--093b6375-cd45-4aa3-8f91-6a03ddd7a3d3"
    ],
    "x_mitre_platforms": [],
    "x_mitre_domains": [],
    "x_mitre_contributors": [],
    "kill_chain_phases": [],
    "x_mitre_detection": "",
    "x_mitre_is_subtechnique": false,
    "x_mitre_version": "1.0",
    "x_mitre_modified_by_ref": "",
    "x_mitre_data_sources": [],
    "x_mitre_permissions_required": [],
    "external_references": [
        {
            "source_name": "Joe Security",
            "description": "\"Overloading Sandboxes - new generic Techniques to hinder Dynamic Analysis spotted in the Wild,\" Joe Security, blog, May 6 2013 [Online].",
            "url": "https://www.joesecurity.org/blog/4310408827727907098"
        },
        {
            "source_name": "mcafee-webcobra",
            "description": "\"WebCobra Malware Uses Victims' Computers to Mine Cryptocurrency,\" McAfee, blog, Nov. 12, 2018 [Online].",
            "url": "https://www.mcafee.com/blogs/other-blogs/mcafee-labs/webcobra-malware-uses-victims-computers-to-mine-cryptocurrency/"
        },
        {
            "source_name": "singh-knives",
            "description": "A. Singh and A. Bu, \"Hot Knives Through Butter: Evading File-based Sandboxes,\" FireEye, 2013 [Online].",
            "url": "https://media.blackhat.com/us-13/US-13-Singh-Hot-Knives-Through-Butter-Evading-File-based-Sandboxes-WP.pdf"
        },
        {
            "source_name": "checkpoint",
            "description": "Check Point Research, \"CP<r>: Evasion Techniques,\" evasions.checkpoint.com, [Online].",
            "url": "https://evasions.checkpoint.com"
        },
        {
            "source_name": "baker",
            "description": "B. Baker and A. Chiu, \"Threat Spotlight: Rombertik - Gazing Past the Smoke, Mirrors, and Trapdoors,\" Cisco Threat Research, blog, May 4, 2013 [Online].",
            "url": "https://blogs.cisco.com/security/talos/rombertik"
        },
        {
            "source_name": "joesecurity-trickbot",
            "description": "\"TrickBot's new API-Hammering explained,\" Joe Security, blog, Jul. 13, 2020 [Online].",
            "url": "https://www.joesecurity.org/blog/498839998833561473"
        }
    ],
    "obj_defn": {
        "description": "Malware may obstruct dynamic analysis in a sandbox or virtual machine. An analyst detonates the specimen in these controlled environments to understand the malware's behavior. However, the code may exhibit a variety of anti-analysis methods, including delayed execution and code integrity checks. Additional methods are listed in the table below.\n\nSee **Emulator Evasion ([B0004](https://github.com/MBCProject/mbc-markdown/blob/main/anti-behavioral-analysis/emulator-evasion.md))** for an emulator-specific evasion behavior, and see **Conditional Execution ([B0025](https://github.com/MBCProject/mbc-markdown/blob/main/execution/conditional-execution.md))** for a behavior that constrains dynamic execution based on environmental conditions. \n\nThe related **Virtualization/Sandbox Evasion ([T1497](https://attack.mitre.org/techniques/T1497/), [T1633](https://attack.mitre.org/techniques/T1633/))** ATT&CK techniques were defined subsequent to this MBC behavior.",
        "external_id": "B0003",
        "source_name": "mitre-mbc",
        "url": "https://github.com/MBCProject/mbc-markdown/blob/main/anti-behavioral-analysis/dynamic-analysis-evasion.md"
    },
    "detection_rules": [
        {
            "api_fncs": [
                "kernel32.Sleep",
                "kernel32.SleepEx",
                "kernel32.WaitForSingleObject",
                "kernel32.SignalObjectAndWait",
                "kernel32.WaitForSingleObjectEx",
                "kernel32.WaitForMultipleObjects",
                "kernel32.WaitForMultipleObjectsEx",
                "kernel32.RegisterWaitForSingleObject",
                "WaitOnAddress",
                "user32.MsgWaitForMultipleObjects",
                "user32.MsgWaitForMultipleObjectsEx",
                "NtDelayExecution",
                "KeWaitForSingleObject",
                "KeDelayExecutionThread",
                "sleep",
                "usleep"
            ],
            "detect_ref": "malware-method--0a657e73-db5a-4cff-8822-6e047a8f3276",
            "rule_name": "delay execution",
            "rule_type": "capa",
            "url": "https://github.com/mandiant/capa-rules/blob/master/lib/delay-execution.yml"
        },
        {
            "detect_ref": "malware-behavior--8dcdb547-5b2d-4020-b852-7df2ab0f1d1d",
            "rule_name": "api_spamming",
            "rule_type": "cape",
            "url": "https://github.com/CAPESandbox/community/tree/master/modules/signatures/windows/api_spamming.py"
        },
        {
            "detect_ref": "malware-method--e92c4e32-0d0c-402f-b671-63300d4421cc",
            "rule_name": "api_spamming",
            "rule_type": "cape",
            "url": "https://github.com/CAPESandbox/community/tree/master/modules/signatures/windows/api_spamming.py"
        },
        {
            "rule_name": "api_spamming",
            "detect_ref": "malware-method--0a657e73-db5a-4cff-8822-6e047a8f3276",
            "rule_type": "cape",
            "url": "https://github.com/CAPESandbox/community/tree/master/modules/signatures/windows/api_spamming.py"
        },
        {
            "api_fncs": [
                "NtSuspendThread"
            ],
            "detect_ref": "malware-behavior--8dcdb547-5b2d-4020-b852-7df2ab0f1d1d",
            "rule_type": "cape",
            "rule_name": "antisandbox_suspend",
            "url": "https://github.com/CAPESandbox/community/tree/master/modules/signatures/windows/antisandbox_suspend.py"
        },
        {
            "api_fncs": [
                "ExitWindowsEx",
                "InitiateSystemShutdownExW",
                "NtSetSystemPowerState",
                "InitiateSystemShutdownW",
                "InitiateShutdownW",
                "NtRaiseHardError",
                "NtShutdownSystem"
            ],
            "detect_ref": "malware-behavior--8dcdb547-5b2d-4020-b852-7df2ab0f1d1d",
            "rule_type": "cape",
            "rule_name": "antisandbox_restart",
            "url": "https://github.com/CAPESandbox/community/tree/master/modules/signatures/windows/antisandbox_restart.py"
        },
        {
            "api_fncs": [
                "ExitWindowsEx",
                "InitiateSystemShutdownExW",
                "NtSetSystemPowerState",
                "InitiateSystemShutdownW",
                "InitiateShutdownW",
                "NtRaiseHardError",
                "NtShutdownSystem"
            ],
            "detect_ref": "malware-method--69971bb9-4d7b-4e0a-b605-ed2ba629c87a",
            "rule_type": "cape",
            "rule_name": "antisandbox_restart",
            "url": "https://github.com/CAPESandbox/community/tree/master/modules/signatures/windows/antisandbox_restart.py"
        },
        {
            "api_fncs": [
                "NtWaitForSingleObject",
                "NtQuerySystemTime",
                "NtTerminateProcess",
                "GetLocalTime",
                "NtDelayExecution",
                "GetSystemTime",
                "GetSystemTimeAsFileTime"
            ],
            "detect_ref": "malware-behavior--8dcdb547-5b2d-4020-b852-7df2ab0f1d1d",
            "rule_type": "cape",
            "rule_name": "stealth_timeout",
            "url": "https://github.com/CAPESandbox/community/tree/master/modules/signatures/windows/stealth_timelimit.py"
        },
        {
            "api_fncs": [
                "NtWaitForSingleObject",
                "NtQuerySystemTime",
                "NtTerminateProcess",
                "GetLocalTime",
                "NtDelayExecution",
                "GetSystemTime",
                "GetSystemTimeAsFileTime"
            ],
            "detect_ref": "malware-method--0a657e73-db5a-4cff-8822-6e047a8f3276",
            "rule_type": "cape",
            "rule_name": "stealth_timeout",
            "url": "https://github.com/CAPESandbox/community/tree/master/modules/signatures/windows/stealth_timelimit.py"
        },
        {
            "detect_ref": "malware-behavior--8dcdb547-5b2d-4020-b852-7df2ab0f1d1d",
            "rule_name": "antisandbox_unhook",
            "rule_type": "cape",
            "url": "https://github.com/CAPESandbox/community/tree/master/modules/signatures/windows/antisandbox_unhook.py"
        }
    ],
    "tags": {
        "Anti-Analysis-Type": "Evasion"
    }
}