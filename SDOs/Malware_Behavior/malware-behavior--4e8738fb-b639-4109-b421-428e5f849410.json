{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--4e8738fb-b639-4109-b421-428e5f849410",
    "created": "2024-08-13T14:46:36.632126Z",
    "modified": "2024-08-13T14:46:36.632126Z",
    "name": "Session Credential Falsification through Forging",
    "description": "An attacker creates a false but functional session credential in order to gain or usurp access to a service. Session credentials allow users to identify themselves to a service after an initial authentication without needing to resend the authentication information (usually a username and password) with every message. If an attacker is able to forge valid session credentials they may be able to bypass authentication or piggy-back off some other authenticated user's session. This attack differs from Reuse of Session IDs and Session Sidejacking attacks in that in the latter attacks an attacker uses a previous or existing credential without modification while, in a forging attack, the attacker must create their own credential, although it may be based on previously observed credentials.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CAPEC",
            "url": "https://capec.mitre.org/data/definitions/196.html",
            "external_id": "196"
        },
        {
            "source_name": "CWE",
            "external_id": "384"
        },
        {
            "source_name": "CWE",
            "external_id": "664"
        }
    ],
    "x_mitre_consequences": [
        {
            "impact": "Modify Data",
            "scope": "Integrity"
        },
        {
            "impact": "Read Data",
            "scope": "Confidentiality"
        },
        {
            "impact": "Execute Unauthorized Commands",
            "scope": "Authorization"
        },
        {
            "impact": "Gain Privileges",
            "scope": "Accountability"
        },
        {
            "impact": "Gain Privileges",
            "scope": "Authentication"
        },
        {
            "impact": "Gain Privileges",
            "scope": "Authorization"
        },
        {
            "impact": "Gain Privileges",
            "scope": "Non-Repudiation"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Access Control"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Authorization"
        }
    ],
    "x_mitre_examples": [
        {
            "description": "This example uses client side scripting to set session ID in the victim's browser. The JavaScript code\n               document.cookie=\"sessionid=0123456789\"\n               fixates a falsified session credential into victim's browser, with the help of crafted a URL link.\n               http://www.example.com/<script>document.cookie=\"sessionid=0123456789\";</script>\n               A similar example uses session ID as an argument of the URL.\n               http://www.example.com/index.php/sessionid=0123456789\n               Once the victim clicks the links, the attacker may be able to bypass authentication or piggy-back off some other authenticated victim's session."
        }
    ],
    "x_mitre_execution_flows": [
        {
            "description": "[Analyze and Understand Session IDs] The attacker finds that the targeted application use session credentials to identify legitimate users.",
            "phase": "Explore",
            "step": "1",
            "techniques": [
                "An attacker makes many anonymous connections and records the session IDs.",
                "An attacker makes authorized connections and records the session tokens or credentials."
            ]
        },
        {
            "description": "[Create Session IDs.] Attackers craft messages containing their forged credentials in GET, POST request, HTTP headers or cookies.",
            "phase": "Experiment",
            "step": "2",
            "techniques": [
                "The attacker manipulates the HTTP request message and adds their forged session IDs in to the requests or cookies."
            ]
        },
        {
            "description": "[Abuse the Victim's Session Credentials] The attacker fixates falsified session ID to the victim when victim access the system. Once the victim has achieved a higher level of privilege, possibly by logging into the application, the attacker can now take over the session using the forged session identifier.",
            "phase": "Exploit",
            "step": "3",
            "techniques": [
                "The attacker loads the predefined or predicted session ID into their browser and browses to protected data or functionality.",
                "The attacker loads the predefined or predicted session ID into their software and utilizes functionality with the rights of the victim."
            ]
        }
    ],
    "x_mitre_impact": "Medium",
    "x_mitre_likelihood_of_attack": "Medium",
    "x_mitre_mitigations": [
        {
            "description": "Implementation: Use session IDs that are difficult to guess or brute-force: One way for the attackers to obtain valid session IDs is by brute-forcing or guessing them. By choosing session identifiers that are sufficiently random, brute-forcing or guessing becomes very difficult."
        },
        {
            "description": "Implementation: Regenerate and destroy session identifiers when there is a change in the level of privilege: This ensures that even though a potential victim may have followed a link with a fixated identifier, a new one is issued when the level of privilege changes."
        }
    ]
}