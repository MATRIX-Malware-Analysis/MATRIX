{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--c4647221-8c11-4d4f-8e25-caedf6e0e6f9",
    "created": "2024-08-13T14:46:37.075867Z",
    "modified": "2024-08-13T14:46:45.853722Z",
    "name": "JavaScript: ",
    "description": "Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.[1]JScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the Component Object Model and Internet Explorer HTML Application (HTA) pages.[2][3][4]JavaScript for Automation (JXA) is a macOS scripting language based on JavaScript, included as part of Apple\u2019s Open Scripting Architecture (OSA), that was introduced in OSX 10.10. Apple\u2019s OSA provides scripting capabilities to control applications, interface with the operating system, and bridge access into the rest of Apple\u2019s internal APIs. As of OSX 10.10, OSA only supports two languages, JXA and AppleScript. Scripts can be executed via the command line utility osascript, they can be compiled into applications or script files via osacompile, and they can be compiled and executed in memory of other programs by leveraging the OSAKit Framework.[5][6][7][8][9]Adversaries may abuse various implementations of JavaScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a Drive-by Compromise or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of Obfuscated Files or Information.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1059/007",
            "external_id": "T1059/007"
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "Sohan G (D4rkCiph3r), Red Canary (idea)",
            "date": "2023/08/22",
            "description": "Detects potential in-memory downloading and compiling of applets using curl and osacompile as seen used by XCSSET malware",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains|all": [
                        "osacompile",
                        "curl"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "13db8d2e-7723-4c2c-93c1-a4d36994f7ef",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "macos"
            },
            "references": [
                "https://redcanary.com/blog/mac-application-bundles/"
            ],
            "status": "test",
            "tags": [
                "attack.command_and_control",
                "attack.execution",
                "attack.t1059.007",
                "attack.t1105"
            ],
            "title": "Potential In-Memory Download And Compile Of Payloads"
        },
        {
            "author": "Sohan G (D4rkCiph3r)",
            "date": "2023/01/31",
            "description": "Detects possible malicious execution of JXA in-memory via OSAScript",
            "detection": {
                "condition": "all of selection_*",
                "selection_js": [
                    {
                        "CommandLine|contains|all": [
                            " -l ",
                            "JavaScript"
                        ]
                    },
                    {
                        "CommandLine|contains": ".js"
                    }
                ],
                "selection_main": {
                    "CommandLine|contains|all": [
                        "osascript",
                        " -e ",
                        "eval",
                        "NSData.dataWithContentsOfURL"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "fields": [
                "CommandLine"
            ],
            "id": "f1408a58-0e94-4165-b80a-da9f96cf6fc3",
            "logsource": {
                "category": "process_creation",
                "product": "macos"
            },
            "level": "high",
            "status": "test",
            "references": [
                "https://redcanary.com/blog/applescript/"
            ],
            "related": [
                {
                    "id": "1bc2e6c5-0885-472b-bed6-be5ea8eace55",
                    "type": "derived"
                }
            ],
            "tags": [
                "attack.t1059.002",
                "attack.t1059.007",
                "attack.execution"
            ],
            "title": "JXA In-memory Execution Via OSAScript"
        },
        {
            "author": "Sohan G (D4rkCiph3r)",
            "date": "2023/02/18",
            "description": "Detects the execution of suspicious child processes from macOS installer package parent process. This includes osascript, JXA, curl and wget amongst other interpreters",
            "detection": {
                "condition": "selection_installer",
                "selection_installer": {
                    "CommandLine|contains": [
                        "preinstall",
                        "postinstall"
                    ],
                    "Image|endswith": [
                        "/sh",
                        "/bash",
                        "/dash",
                        "/python",
                        "/ruby",
                        "/perl",
                        "/php",
                        "/javascript",
                        "/osascript",
                        "/tclsh",
                        "/curl",
                        "/wget"
                    ],
                    "ParentImage|endswith": [
                        "/package_script_service",
                        "/installer"
                    ]
                }
            },
            "falsepositives": [
                "Legitimate software uses the scripts (preinstall, postinstall)"
            ],
            "id": "e0cfaecd-602d-41af-988d-f6ccebb2af26",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "macos"
            },
            "references": [
                "https://redcanary.com/blog/clipping-silver-sparrows-wings/",
                "https://github.com/elastic/detection-rules/blob/4312d8c9583be524578a14fe6295c3370b9a9307/rules/macos/execution_installer_package_spawned_network_event.toml"
            ],
            "status": "test",
            "tags": [
                "attack.t1059",
                "attack.t1059.007",
                "attack.t1071",
                "attack.t1071.001",
                "attack.execution",
                "attack.command_and_control"
            ],
            "title": "Suspicious Installer Package Child Process"
        },
        {
            "author": "@SBousseaden (detection), Thomas Patzke (rule)",
            "date": "2019/02/01",
            "description": "Detects remote thread creation from CACTUSTORCH as described in references.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "SourceImage|endswith": [
                        "\\System32\\cscript.exe",
                        "\\System32\\wscript.exe",
                        "\\System32\\mshta.exe",
                        "\\winword.exe",
                        "\\excel.exe"
                    ],
                    "StartModule": null,
                    "TargetImage|contains": "\\SysWOW64\\"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "2e4e488a-6164-4811-9ea1-f960c7359c40",
            "logsource": {
                "category": "create_remote_thread",
                "product": "windows"
            },
            "level": "high",
            "modified": "2023/05/05",
            "status": "test",
            "references": [
                "https://twitter.com/SBousseaden/status/1090588499517079552",
                "https://github.com/mdsecactivebreach/CACTUSTORCH"
            ],
            "tags": [
                "attack.defense_evasion",
                "attack.execution",
                "attack.t1055.012",
                "attack.t1059.005",
                "attack.t1059.007",
                "attack.t1218.005"
            ],
            "title": "HackTool - CACTUSTORCH Remote Thread Creation"
        },
        {
            "author": "Florian Roth (Nextron Systems), Tom Ueltschi, Jonhnathan Ribeiro, oscd.community",
            "date": "2017/11/10",
            "description": "Detects javaw.exe in AppData folder as used by Adwind / JRAT",
            "detection": {
                "condition": "selection",
                "selection": [
                    {
                        "TargetFilename|contains|all": [
                            "\\AppData\\Roaming\\Oracle\\bin\\java",
                            ".exe"
                        ]
                    },
                    {
                        "TargetFilename|contains|all": [
                            "\\Retrive",
                            ".vbs"
                        ]
                    }
                ]
            },
            "id": "0bcfabcb-7929-47f4-93d6-b33fb67d34d1",
            "logsource": {
                "category": "file_event",
                "product": "windows"
            },
            "modified": "2022/12/02",
            "level": "high",
            "references": [
                "https://www.hybrid-analysis.com/sample/ba86fa0d4b6af2db0656a88b1dd29f36fe362473ae8ad04255c4e52f214a541c?environmentId=100",
                "https://www.first.org/resources/papers/conf2017/Advanced-Incident-Detection-and-Threat-Hunting-using-Sysmon-and-Splunk.pdf"
            ],
            "related": [
                {
                    "id": "1fac1481-2dbc-48b2-9096-753c49b4ec71",
                    "type": "derived"
                }
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1059.005",
                "attack.t1059.007"
            ],
            "title": "Adwind RAT / JRAT File Artifact"
        },
        {
            "author": "Tim Shelton",
            "date": "2022/01/10",
            "description": "Detects a file ending in jse, vbe, js, vba, vbs written by cscript.exe or wscript.exe",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Image|endswith": [
                        "\\wscript.exe",
                        "\\cscript.exe"
                    ],
                    "TargetFilename|endswith": [
                        ".jse",
                        ".vbe",
                        ".js",
                        ".vba",
                        ".vbs"
                    ],
                    "TargetFilename|startswith": [
                        "C:\\Users\\",
                        "C:\\ProgramData"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "fields": [
                "Image",
                "TargetFilename"
            ],
            "id": "002bdb95-0cf1-46a6-9e08-d38c128a6127",
            "logsource": {
                "category": "file_event",
                "product": "windows"
            },
            "modified": "2022/12/02",
            "level": "high",
            "status": "test",
            "references": [
                "WScript or CScript Dropper (cea72823-df4d-4567-950c-0b579eaf0846)"
            ],
            "related": [
                {
                    "id": "cea72823-df4d-4567-950c-0b579eaf0846",
                    "type": "derived"
                }
            ],
            "tags": [
                "attack.execution",
                "attack.t1059.005",
                "attack.t1059.007"
            ],
            "title": "WScript or CScript Dropper - File"
        },
        {
            "author": "Maxim Pavlunin",
            "date": "2020/04/01",
            "description": "Detects a suspicious execution of a Microsoft HTML Help (HH.exe)",
            "detection": {
                "condition": "all of selection_*",
                "selection_img": [
                    {
                        "OriginalFileName": "HH.exe"
                    },
                    {
                        "Image|endswith": "\\hh.exe"
                    }
                ],
                "selection_paths": {
                    "CommandLine|contains": [
                        ".application",
                        "\\AppData\\Local\\Temp\\",
                        "\\Content.Outlook\\",
                        "\\Downloads\\",
                        "\\Users\\Public\\",
                        "\\Windows\\Temp\\"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "e8a95b5e-c891-46e2-b33a-93937d3abc31",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "high",
            "modified": "2023/04/12",
            "status": "test",
            "references": [
                "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/chm-badness-delivers-a-banking-trojan/",
                "https://github.com/elastic/protections-artifacts/commit/746086721fd385d9f5c6647cada1788db4aea95f#diff-27939090904026cc396b0b629c8e4314acd6f5dac40a676edbc87f4567b47eb7",
                "https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/higaisa-or-winnti-apt-41-backdoors-old-and-new/",
                "https://www.zscaler.com/blogs/security-research/unintentional-leak-glimpse-attack-vectors-apt37"
            ],
            "tags": [
                "attack.defense_evasion",
                "attack.execution",
                "attack.initial_access",
                "attack.t1047",
                "attack.t1059.001",
                "attack.t1059.003",
                "attack.t1059.005",
                "attack.t1059.007",
                "attack.t1218",
                "attack.t1218.001",
                "attack.t1218.010",
                "attack.t1218.011",
                "attack.t1566",
                "attack.t1566.001"
            ],
            "title": "Suspicious HH.EXE Execution"
        },
        {
            "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems), X__Junior (Nextron Systems)",
            "date": "2019/02/11",
            "description": "Detects a potentially suspicious parent of \"csc.exe\", which could be a sign of payload delivery.",
            "detection": {
                "condition": "selection_img and 1 of selection_parent_* and not 1 of filter_main_* and not 1 of filter_optional_*",
                "filter_main_programfiles": {
                    "ParentImage|startswith": [
                        "C:\\Program Files (x86)\\",
                        "C:\\Program Files\\"
                    ]
                },
                "filter_main_sdiagnhost": {
                    "ParentImage": "C:\\Windows\\System32\\sdiagnhost.exe"
                },
                "filter_main_w3p": {
                    "ParentImage": "C:\\Windows\\System32\\inetsrv\\w3wp.exe"
                },
                "filter_optional_ansible": {
                    "ParentCommandLine|contains": [
                        "JwB7ACIAZgBhAGkAbABlAGQAIgA6AHQAcgB1AGUALAAiAG0AcwBnACIAOgAiAEEAbgBzAGkAYgBsAGUAIAByAGUAcQB1AGkAcgBlAHMAIABQAG8AdwBlAHIAUwBoAGUAbABsACAAdgAzAC4AMAAgAG8AcgAgAG4AZQB3AGUAcgAiAH0AJw",
                        "cAewAiAGYAYQBpAGwAZQBkACIAOgB0AHIAdQBlACwAIgBtAHMAZwAiADoAIgBBAG4AcwBpAGIAbABlACAAcgBlAHEAdQBpAHIAZQBzACAAUABvAHcAZQByAFMAaABlAGwAbAAgAHYAMwAuADAAIABvAHIAIABuAGUAdwBlAHIAIgB9ACcA",
                        "nAHsAIgBmAGEAaQBsAGUAZAAiADoAdAByAHUAZQAsACIAbQBzAGcAIgA6ACIAQQBuAHMAaQBiAGwAZQAgAHIAZQBxAHUAaQByAGUAcwAgAFAAbwB3AGUAcgBTAGgAZQBsAGwAIAB2ADMALgAwACAAbwByACAAbgBlAHcAZQByACIAfQAnA"
                    ]
                },
                "filter_optional_chocolatey": {
                    "ParentImage": "C:\\ProgramData\\chocolatey\\choco.exe"
                },
                "filter_optional_defender": {
                    "ParentCommandLine|contains": "\\ProgramData\\Microsoft\\Windows Defender Advanced Threat Protection"
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\csc.exe"
                    },
                    {
                        "OriginalFileName": "csc.exe"
                    }
                ],
                "selection_parent_generic": {
                    "ParentImage|endswith": [
                        "\\cscript.exe",
                        "\\excel.exe",
                        "\\mshta.exe",
                        "\\onenote.exe",
                        "\\outlook.exe",
                        "\\powerpnt.exe",
                        "\\winword.exe",
                        "\\wscript.exe"
                    ]
                },
                "selection_parent_powershell": {
                    "ParentCommandLine|contains": [
                        "-Encoded ",
                        "FromBase64String"
                    ],
                    "ParentImage|endswith": [
                        "\\powershell.exe",
                        "\\pwsh.exe"
                    ]
                },
                "selection_parent_susp_location": [
                    {
                        "ParentCommandLine|re": "([Pp]rogram[Dd]ata|%([Ll]ocal)?[Aa]pp[Dd]ata%|\\\\[Aa]pp[Dd]ata\\\\([Ll]ocal([Ll]ow)?|[Rr]oaming))\\\\[^\\\\]{1,256}$"
                    },
                    {
                        "ParentCommandLine|contains": [
                            ":\\PerfLogs\\",
                            ":\\Users\\Public\\",
                            ":\\Windows\\Temp\\",
                            "\\Temporary Internet"
                        ]
                    },
                    {
                        "ParentCommandLine|contains|all": [
                            ":\\Users\\",
                            "\\Favorites\\"
                        ]
                    },
                    {
                        "ParentCommandLine|contains|all": [
                            ":\\Users\\",
                            "\\Favourites\\"
                        ]
                    },
                    {
                        "ParentCommandLine|contains|all": [
                            ":\\Users\\",
                            "\\Contacts\\"
                        ]
                    },
                    {
                        "ParentCommandLine|contains|all": [
                            ":\\Users\\",
                            "\\Pictures\\"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "b730a276-6b63-41b8-bcf8-55930c8fc6ee",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "high",
            "modified": "2024/05/27",
            "status": "test",
            "references": [
                "https://www.uptycs.com/blog/warzonerat-can-now-evade-with-process-hollowing",
                "https://reaqta.com/2017/11/short-journey-darkvnc/",
                "https://www.pwc.com/gx/en/issues/cybersecurity/cyber-threat-intelligence/yellow-liderc-ships-its-scripts-delivers-imaploader-malware.html"
            ],
            "tags": [
                "attack.execution",
                "attack.t1059.005",
                "attack.t1059.007",
                "attack.defense_evasion",
                "attack.t1218.005",
                "attack.t1027.004"
            ],
            "title": "Csc.EXE Execution Form Potentially Suspicious Parent"
        },
        {
            "author": "Diego Perez (@darkquassar), Markus Neis, Swisscom (Improve Rule)",
            "date": "2019/02/22",
            "description": "Detection for mshta.exe suspicious execution patterns sometimes involving file polyglotism",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains": [
                        "vbscript",
                        ".jpg",
                        ".png",
                        ".lnk",
                        ".xls",
                        ".doc",
                        ".zip",
                        ".dll"
                    ],
                    "Image|endswith": "\\mshta.exe"
                }
            },
            "falsepositives": [
                "False positives depend on scripts and administrative tools used in the monitored environment"
            ],
            "id": "cc7abbd0-762b-41e3-8a26-57ad50d2eea3",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "high",
            "modified": "2022/11/07",
            "status": "test",
            "references": [
                "http://blog.sevagas.com/?Hacking-around-HTA-files",
                "https://0x00sec.org/t/clientside-exploitation-in-2018-how-pentesting-has-changed/7356",
                "https://learn.microsoft.com/en-us/previous-versions/dotnet/framework/data/xml/xslt/xslt-stylesheet-scripting-using-msxsl-script",
                "https://medium.com/tsscyber/pentesting-and-hta-bypassing-powershell-constrained-language-mode-53a42856c997",
                "https://twitter.com/mattifestation/status/1326228491302563846"
            ],
            "tags": [
                "attack.defense_evasion",
                "attack.t1140",
                "attack.t1218.005",
                "attack.execution",
                "attack.t1059.007",
                "cve.2020.1599"
            ],
            "title": "MSHTA Suspicious Execution 01"
        },
        {
            "id": "cea72823-df4d-4567-950c-0b579eaf0846",
            "author": "Margaritis Dimitrios (idea), Florian Roth (Nextron Systems), oscd.community, Nasreddine Bencherchali (Nextron Systems)",
            "date": "2019/01/16",
            "description": "Detects wscript/cscript executions of scripts located in user directories",
            "detection": {
                "condition": "all of selection_*",
                "selection_exec": {
                    "Image|endswith": [
                        "\\wscript.exe",
                        "\\cscript.exe"
                    ]
                },
                "selection_ext": {
                    "CommandLine|contains": [
                        ".js",
                        ".jse",
                        ".vba",
                        ".vbe",
                        ".vbs",
                        ".wsf"
                    ]
                },
                "selection_paths": {
                    "CommandLine|contains": [
                        ":\\Temp\\",
                        ":\\Tmp\\",
                        ":\\Users\\Public\\",
                        ":\\Windows\\Temp\\",
                        "\\AppData\\Local\\Temp\\"
                    ]
                }
            },
            "falsepositives": [
                "Some installers might generate a similar behavior. An initial baseline is required"
            ],
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2024/01/30",
            "references": [
                "https://thedfirreport.com/2023/10/30/netsupport-intrusion-results-in-domain-compromise/",
                "https://redcanary.com/blog/gootloader/"
            ],
            "related": [
                {
                    "id": "1e33157c-53b1-41ad-bbcc-780b80b58288",
                    "type": "similar"
                }
            ],
            "status": "experimental",
            "tags": [
                "attack.execution",
                "attack.t1059.005",
                "attack.t1059.007"
            ],
            "title": "Potential Dropper Script Execution Via WScript/CScript"
        },
        {
            "author": "Max Altgelt (Nextron Systems)",
            "date": "2022/04/06",
            "description": "Detects the execution of other scripts using the Node executable packaged with Adobe Creative Cloud",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "CommandLine|contains": "Adobe Creative Cloud Experience\\js"
                },
                "selection": {
                    "Image|endswith": "\\Adobe Creative Cloud Experience\\libs\\node.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "fields": [
                "Image",
                "CommandLine",
                "ParentCommandLine"
            ],
            "id": "df1f26d3-bea7-4700-9ea2-ad3e990cf90e",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "status": "test",
            "references": [
                "https://twitter.com/mttaggart/status/1511804863293784064"
            ],
            "tags": [
                "attack.defense_evasion",
                "attack.t1127",
                "attack.t1059.007"
            ],
            "title": "Node Process Executions"
        },
        {
            "author": "Maxim Pavlunin, Nasreddine Bencherchali (Nextron Systems)",
            "date": "2020/04/01",
            "description": "Detects a suspicious child process of a Microsoft HTML Help (HH.exe)",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Image|endswith": [
                        "\\CertReq.exe",
                        "\\CertUtil.exe",
                        "\\cmd.exe",
                        "\\cscript.exe",
                        "\\installutil.exe",
                        "\\MSbuild.exe",
                        "\\MSHTA.EXE",
                        "\\msiexec.exe",
                        "\\powershell.exe",
                        "\\pwsh.exe",
                        "\\regsvr32.exe",
                        "\\rundll32.exe",
                        "\\schtasks.exe",
                        "\\wmic.exe",
                        "\\wscript.exe"
                    ],
                    "ParentImage|endswith": "\\hh.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "52cad028-0ff0-4854-8f67-d25dfcbc78b4",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "high",
            "modified": "2023/04/12",
            "status": "test",
            "references": [
                "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/chm-badness-delivers-a-banking-trojan/",
                "https://github.com/elastic/protections-artifacts/commit/746086721fd385d9f5c6647cada1788db4aea95f#diff-27939090904026cc396b0b629c8e4314acd6f5dac40a676edbc87f4567b47eb7",
                "https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/higaisa-or-winnti-apt-41-backdoors-old-and-new/",
                "https://www.zscaler.com/blogs/security-research/unintentional-leak-glimpse-attack-vectors-apt37"
            ],
            "tags": [
                "attack.defense_evasion",
                "attack.execution",
                "attack.initial_access",
                "attack.t1047",
                "attack.t1059.001",
                "attack.t1059.003",
                "attack.t1059.005",
                "attack.t1059.007",
                "attack.t1218",
                "attack.t1218.001",
                "attack.t1218.010",
                "attack.t1218.011",
                "attack.t1566",
                "attack.t1566.001"
            ],
            "title": "HTML Help HH.EXE Suspicious Child Process"
        },
        {
            "author": "Markus Neis, Florian Roth",
            "date": "2019/01/16",
            "description": "Detects potential SquiblyTwo attack technique with possible renamed WMIC via Imphash and OriginalFileName fields",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains|all": [
                        "format:",
                        "http"
                    ]
                },
                "selection_pe": [
                    {
                        "Image|endswith": "\\wmic.exe"
                    },
                    {
                        "OriginalFileName": "wmic.exe"
                    },
                    {
                        "Imphash": [
                            "1B1A3F43BF37B5BFE60751F2EE2F326E",
                            "37777A96245A3C74EB217308F3546F4C",
                            "9D87C9D67CE724033C0B40CC4CA1B206"
                        ]
                    },
                    {
                        "Hashes|contains": [
                            "IMPHASH=1B1A3F43BF37B5BFE60751F2EE2F326E",
                            "IMPHASH=37777A96245A3C74EB217308F3546F4C",
                            "IMPHASH=9D87C9D67CE724033C0B40CC4CA1B206"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "8d63dadf-b91b-4187-87b6-34a1114577ea",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/15",
            "status": "test",
            "references": [
                "https://web.archive.org/web/20190209154607/https://subt0x11.blogspot.com/2018/04/wmicexe-whitelisting-bypass-hacking.html",
                "https://twitter.com/mattifestation/status/986280382042595328",
                "https://atomicredteam.io/defense-evasion/T1220/",
                "https://lolbas-project.github.io/lolbas/Binaries/Wmic/"
            ],
            "tags": [
                "attack.defense_evasion",
                "attack.t1047",
                "attack.t1220",
                "attack.execution",
                "attack.t1059.005",
                "attack.t1059.007"
            ],
            "title": "Potential SquiblyTwo Technique Execution"
        },
        {
            "author": "wagga, Jonhnathan Ribeiro, oscd.community",
            "date": "2020/01/12",
            "description": "Detects command line parameters used by Koadic hack tool",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains|all": [
                        "/q",
                        "/c",
                        "chcp"
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\cmd.exe"
                    },
                    {
                        "OriginalFileName": "Cmd.Exe"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "fields": [
                "CommandLine",
                "ParentCommandLine"
            ],
            "id": "5cddf373-ef00-4112-ad72-960ac29bac34",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "high",
            "status": "test",
            "modified": "2023/02/11",
            "references": [
                "https://unit42.paloaltonetworks.com/unit42-sofacy-groups-parallel-attacks/",
                "https://github.com/offsecginger/koadic/blob/457f9a3ff394c989cdb4c599ab90eb34fb2c762c/data/stager/js/stdlib.js",
                "https://blog.f-secure.com/hunting-for-koadic-a-com-based-rootkit/"
            ],
            "tags": [
                "attack.execution",
                "attack.t1059.003",
                "attack.t1059.005",
                "attack.t1059.007"
            ],
            "title": "HackTool - Koadic Execution"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/05/15",
            "description": "Detects Wscript/Cscript executing a file with an uncommon (i.e. non-script) extension",
            "detection": {
                "condition": "all of selection_*",
                "selection_extension": {
                    "CommandLine|contains": [
                        ".csv",
                        ".dat",
                        ".doc",
                        ".gif",
                        ".jpeg",
                        ".jpg",
                        ".png",
                        ".ppt",
                        ".txt",
                        ".xls",
                        ".xml"
                    ]
                },
                "selection_img": [
                    {
                        "OriginalFileName": [
                            "wscript.exe",
                            "cscript.exe"
                        ]
                    },
                    {
                        "Image|endswith": [
                            "\\wscript.exe",
                            "\\cscript.exe"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "99b7460d-c9f1-40d7-a316-1f36f61d52ee",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "high",
            "modified": "2023/06/19",
            "status": "test",
            "references": [
                "Internal Research"
            ],
            "tags": [
                "attack.execution",
                "attack.t1059.005",
                "attack.t1059.007"
            ],
            "title": "Cscript/Wscript Uncommon Script Extension Execution"
        },
        {
            "author": "Pushkarev Dmitry",
            "date": "2020/06/28",
            "description": "Detect run not allowed files. Applocker is a very useful tool, especially on servers where unprivileged users have access. For example terminal servers. You need configure applocker and log collect to receive these events.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": [
                        8004,
                        8007,
                        8022,
                        8025
                    ]
                }
            },
            "falsepositives": [
                "Need tuning applocker or add exceptions in SIEM"
            ],
            "fields": [
                "PolicyName",
                "RuleId",
                "RuleName",
                "TargetUser",
                "TargetProcessId",
                "FilePath",
                "FileHash",
                "Fqbn"
            ],
            "id": "401e5d00-b944-11ea-8f9a-00163ecd60ae",
            "level": "medium",
            "logsource": {
                "product": "windows",
                "service": "applocker"
            },
            "status": "test",
            "modified": "2021/11/27",
            "references": [
                "https://learn.microsoft.com/en-us/windows/security/application-security/application-control/windows-defender-application-control/applocker/what-is-applocker",
                "https://learn.microsoft.com/en-us/windows/security/application-security/application-control/windows-defender-application-control/applocker/using-event-viewer-with-applocker",
                "https://nxlog.co/documentation/nxlog-user-guide/applocker.html"
            ],
            "tags": [
                "attack.execution",
                "attack.t1204.002",
                "attack.t1059.001",
                "attack.t1059.003",
                "attack.t1059.005",
                "attack.t1059.006",
                "attack.t1059.007"
            ],
            "title": "File Was Not Allowed To Run"
        }
    ]
}