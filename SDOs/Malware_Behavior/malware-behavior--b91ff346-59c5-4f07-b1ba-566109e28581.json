{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--b91ff346-59c5-4f07-b1ba-566109e28581",
    "created": "2024-08-13T14:46:37.069444Z",
    "modified": "2024-08-13T14:46:45.811862Z",
    "name": "Hijack Execution Flow: COR_PROFILER",
    "description": "Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR. The COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR). These profilers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR.[1][2]The COR_PROFILER environment variable can be set at various scopes (system, user, or process) resulting in different levels of influence. System and user-wide environment variable scopes are specified in the Registry, where a Component Object Model (COM) object can be registered as a profiler DLL. A process scope COR_PROFILER can also be created in-memory without modifying the Registry. Starting with .NET Framework 4, the profiling DLL does not need to be registered as long as the location of the DLL is specified in the COR_PROFILER_PATH environment variable.[2]Adversaries may abuse COR_PROFILER to establish persistence that executes a malicious DLL in the context of all .NET processes every time the CLR is invoked. The COR_PROFILER can also be used to elevate privileges (ex: Bypass User Account Control) if the victim .NET process executes at a higher permission level, as well as to hook and Impair Defenses provided by .NET processes.[3][4][5][6][7]",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1574/012",
            "external_id": "T1574/012"
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "frack113",
            "date": "2021/12/30",
            "description": "Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR.\nThe COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR).\nThese profiliers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR.\n(Citation: Microsoft Profiling Mar 2017)\n(Citation: Microsoft COR_PROFILER Feb 2013)\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "ScriptBlockText|contains|all": [
                        "$env:COR_ENABLE_PROFILING",
                        "$env:COR_PROFILER",
                        "$env:COR_PROFILER_PATH"
                    ]
                }
            },
            "falsepositives": [
                "Legitimate administrative script"
            ],
            "id": "23590215-4702-4a70-8805-8dc9e58314a2",
            "level": "medium",
            "logsource": {
                "category": "ps_script",
                "definition": "Requirements: Script Block Logging must be enabled",
                "product": "windows"
            },
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1574.012/T1574.012.md#atomic-test-3---registry-free-process-scope-cor_profiler"
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.t1574.012"
            ],
            "title": "Registry-Free Process Scope COR_PROFILER"
        },
        {
            "author": "Jose Rodriguez (@Cyb3rPandaH), OTR (Open Threat Research), Jimmy Bayne (@bohops)",
            "date": "2020/09/10",
            "description": "Detects .NET Framework CLR and .NET Core CLR \"cor_enable_profiling\" and \"cor_profiler\" variables being set and configured.",
            "detection": {
                "condition": "1 of selection_*",
                "selection_1": {
                    "TargetObject|endswith": [
                        "\\COR_ENABLE_PROFILING",
                        "\\COR_PROFILER",
                        "\\CORECLR_ENABLE_PROFILING"
                    ]
                },
                "selection_2": {
                    "TargetObject|contains": "\\CORECLR_PROFILER_PATH"
                }
            },
            "id": "ad89044a-8f49-4673-9a55-cbd88a1b374f",
            "logsource": {
                "category": "registry_set",
                "product": "windows"
            },
            "level": "medium",
            "modified": "2023/11/24",
            "references": [
                "https://twitter.com/jamieantisocial/status/1304520651248668673",
                "https://www.slideshare.net/JamieWilliams130/started-from-the-bottom-exploiting-data-sources-to-uncover-attck-behaviors",
                "https://www.sans.org/cyber-security-summit/archives",
                "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/debugging-profiling"
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.defense_evasion",
                "attack.t1574.012"
            ],
            "title": "Enabling COR Profiler Environment Variables"
        }
    ]
}