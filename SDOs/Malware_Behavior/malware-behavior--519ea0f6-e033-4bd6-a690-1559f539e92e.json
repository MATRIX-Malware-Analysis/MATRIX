{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--519ea0f6-e033-4bd6-a690-1559f539e92e",
    "created": "2024-08-13T14:46:37.123736Z",
    "modified": "2024-08-13T14:46:46.155645Z",
    "name": "Account Manipulation: Additional Cloud Credentials",
    "description": "Adversaries may add adversary-controlled credentials to a cloud account to maintain persistent access to victim accounts and instances within the environment.For example, adversaries may add credentials for Service Principals and Applications in addition to existing legitimate credentials in Azure AD.[1][2][3] These credentials include both x509 keys and passwords.[1] With sufficient permissions, there are a variety of ways to add credentials including the Azure Portal, Azure command line interface, and Azure or Az PowerShell modules.[4]In infrastructure-as-a-service (IaaS) environments, after gaining access through Cloud Accounts, adversaries may generate or import their own SSH keys using either the CreateKeyPair or ImportKeyPair API in AWS or the gcloud compute os-login ssh-keys add command in GCP.[5] This allows persistent access to instances within the cloud environment without further usage of the compromised cloud accounts.[6][7]Adversaries may also use the CreateAccessKey API in AWS or the gcloud iam service-accounts keys create command in GCP to add access keys to an account. If the target account has different permissions from the requesting account, the adversary may also be able to escalate their privileges in the environment (i.e. Cloud Accounts).[8][9] For example, in Azure AD environments, an adversary with the Application Administrator role can add a new set of credentials to their application's service principal. In doing so the adversary would be able to access the service principal\u2019s roles and permissions, which may be different from those of the Application Administrator.[10] In AWS environments, adversaries with the appropriate permissions may also use the sts:GetFederationToken API call to create a temporary set of credentials to Forge Web Credentials tied to the permissions of the original user account. These temporary credentials may remain valid for the duration of their lifetime even if the original account\u2019s API credentials are deactivated.[11]",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1098/001",
            "external_id": "T1098/001"
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "Muhammad Faisal (@faisalusuf)",
            "date": "2023/01/20",
            "description": "Detects when an organization member or an outside collaborator is added to or removed from a project board or has their permission level changed or when an owner removes an outside collaborator from an organization or when two-factor authentication is required in an organization and an outside collaborator does not use 2FA or disables 2FA.\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "action": [
                        "org.remove_outside_collaborator",
                        "project.update_user_permission"
                    ]
                }
            },
            "falsepositives": [
                "Validate the actor if permitted to access the repo.",
                "Validate the Multifactor Authentication changes."
            ],
            "id": "eaa9ac35-1730-441f-9587-25767bde99d7",
            "level": "medium",
            "logsource": {
                "definition": "Requirements: The audit log streaming feature must be enabled to be able to receive such logs. You can enable following the documentation here: https://docs.github.com/en/enterprise-cloud@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/streaming-the-audit-log-for-your-enterprise#setting-up-audit-log-streaming",
                "product": "github",
                "service": "audit"
            },
            "references": [
                "https://docs.github.com/en/organizations/keeping-your-organization-secure/managing-security-settings-for-your-organization/reviewing-the-audit-log-for-your-organization#audit-log-actions",
                "https://docs.github.com/en/organizations/keeping-your-organization-secure/managing-two-factor-authentication-for-your-organization/requiring-two-factor-authentication-in-your-organization"
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.collection",
                "attack.t1098.001",
                "attack.t1098.003",
                "attack.t1213.003"
            ],
            "title": "Github Outside Collaborator Detected"
        },
        {
            "author": "kelnage",
            "date": "2023/09/07",
            "description": "Detects when a new identity provider is created for Okta.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "eventtype": "system.idp.lifecycle.create"
                }
            },
            "falsepositives": [
                "When an admin creates a new, authorised identity provider."
            ],
            "id": "969c7590-8c19-4797-8c1b-23155de6e7ac",
            "level": "medium",
            "logsource": {
                "product": "okta",
                "service": "okta"
            },
            "references": [
                "https://developer.okta.com/docs/reference/api/system-log/",
                "https://sec.okta.com/articles/2023/08/cross-tenant-impersonation-prevention-and-detection"
            ],
            "status": "experimental",
            "tags": [
                "attack.persistence",
                "attack.t1098.001"
            ],
            "title": "Okta Identity Provider Created"
        },
        {
            "author": "Mark Morowczynski '@markmorow', Bailey Bercik '@baileybercik'",
            "date": "2022/05/26",
            "description": "Detects when a new credential is added to an existing application. Any additional credentials added outside of expected processes could be a malicious actor using those credentials.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "properties.message": [
                        "Update Application-Certificates and secrets management",
                        "Update Service principal/Update Application"
                    ]
                }
            },
            "falsepositives": [
                "When credentials are added/removed as part of the normal working hours/workflows"
            ],
            "id": "cbb67ecc-fb70-4467-9350-c910bdf7c628",
            "level": "high",
            "logsource": {
                "product": "azure",
                "service": "auditlogs"
            },
            "references": [
                "https://learn.microsoft.com/en-us/entra/architecture/security-operations-applications#application-credentials"
            ],
            "status": "test",
            "tags": [
                "attack.t1098.001",
                "attack.persistence"
            ],
            "title": "Added Credentials to Existing Application"
        }
    ]
}