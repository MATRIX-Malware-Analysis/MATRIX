{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--6607fe3d-78c3-439e-bd18-419bc09d4d1b",
    "created": "2024-08-13T14:46:36.684307Z",
    "modified": "2024-08-13T14:46:48.353476Z",
    "name": "Input Capture: Keylogging",
    "description": "Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when OS Credential Dumping efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems.[1]Keylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.[2] Some methods include:Hooking API callbacks used for processing keystrokes. Unlike Credential API Hooking, this focuses solely on API functions intended for processing keystroke data.Reading raw keystroke data from the hardware buffer.Windows Registry modifications.Custom drivers.Modify System Image may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.[3]",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1056/001",
            "external_id": "T1056/001"
        },
        {
            "source_name": "CAPEC 568",
            "external_id": "malware-behavior--7e64c028-f45f-4c7b-a188-31f1b4cd2005"
        }
    ],
    "x_mitre_capa_rules": [
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "match": "set application hook"
                            },
                            {
                                "or": [
                                    {
                                        "number": "13 = WH_KEYBOARD_LL"
                                    },
                                    {
                                        "number": "2  = WH_KEYBOARD"
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Collection::Input Capture::Keylogging [T1056.001]"
                    ],
                    "authors": [
                        "michael.hunhoff@mandiant.com"
                    ],
                    "examples": [
                        "Practical Malware Analysis Lab 12-03.exe_:0x401000"
                    ],
                    "mbc": [
                        "Collection::Keylogging::Application Hook [F0002.001]"
                    ],
                    "name": "log keystrokes via application hook",
                    "namespace": "collection/keylog",
                    "scopes": {
                        "dynamic": "call",
                        "static": "basic block"
                    }
                }
            }
        },
        {
            "rule": {
                "features": [
                    {
                        "or": [
                            {
                                "api": "user32.GetAsyncKeyState"
                            },
                            {
                                "api": "user32.GetKeyState"
                            },
                            {
                                "api": "user32.GetKeyboardState"
                            },
                            {
                                "api": "user32.VkKeyScan"
                            },
                            {
                                "api": "user32.VkKeyScanEx"
                            },
                            {
                                "api": "user32.GetKeyNameText"
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Collection::Input Capture::Keylogging [T1056.001]"
                    ],
                    "authors": [
                        "michael.hunhoff@mandiant.com"
                    ],
                    "examples": [
                        "Practical Malware Analysis Lab 11-03.dll_:0x10001030"
                    ],
                    "mbc": [
                        "Collection::Keylogging::Polling [F0002.002]"
                    ],
                    "name": "log keystrokes via polling",
                    "namespace": "collection/keylog",
                    "scopes": {
                        "dynamic": "call",
                        "static": "function"
                    }
                }
            }
        },
        {
            "rule": {
                "features": [
                    {
                        "or": [
                            {
                                "and": [
                                    {
                                        "api": "SetWindowsHookEx"
                                    },
                                    {
                                        "api": "GetKeyState"
                                    }
                                ]
                            },
                            {
                                "and": [
                                    {
                                        "api": "RegisterHotKey"
                                    },
                                    {
                                        "api": "user32.keybd_event"
                                    },
                                    {
                                        "api": "UnregisterHotKey"
                                    }
                                ]
                            },
                            {
                                "and": [
                                    {
                                        "api": "CallNextHookEx"
                                    },
                                    {
                                        "api": "user32.GetKeyNameText"
                                    },
                                    {
                                        "api": "user32.GetAsyncKeyState"
                                    },
                                    {
                                        "api": "user32.GetForgroundWindow"
                                    }
                                ]
                            },
                            {
                                "api": "user32.AttachThreadInput"
                            },
                            {
                                "api": "user32.MapVirtualKey"
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Collection::Input Capture::Keylogging [T1056.001]"
                    ],
                    "authors": [
                        "moritz.raabe@mandiant.com"
                    ],
                    "examples": [
                        "C91887D861D9BD4A5872249B641BC9F9:0x4015FD"
                    ],
                    "name": "log keystrokes",
                    "namespace": "collection/keylog",
                    "scopes": {
                        "dynamic": "thread",
                        "static": "function"
                    }
                }
            }
        },
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "basic block": [
                                    {
                                        "description": "get raw input"
                                    },
                                    {
                                        "and": [
                                            {
                                                "api": "user32.GetRawInputData"
                                            },
                                            {
                                                "number": "0x10000003 = RID_INPUT"
                                            },
                                            {
                                                "number": "0x10 = sizeof(RAWINPUTHEADER)"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "instruction": [
                                    {
                                        "description": "check raw data is keyboard keydown"
                                    },
                                    {
                                        "mnemonic": "cmp"
                                    },
                                    {
                                        "offset": "0x18 = RAWINPUT->data.Message"
                                    },
                                    {
                                        "number": "0x100 = WM_KEYDOWN"
                                    }
                                ]
                            },
                            {
                                "instruction": [
                                    {
                                        "description": "check raw data is keyboard"
                                    },
                                    {
                                        "mnemonic": "cmp"
                                    },
                                    {
                                        "offset": "0x0 = RAWINPUT->header.dwType"
                                    },
                                    {
                                        "number": "0x1 = RIM_TYPEKEYBOARD"
                                    }
                                ]
                            },
                            {
                                "optional": [
                                    {
                                        "offset": "0x16 = RAWINPUT->data.VKey"
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Collection::Input Capture::Keylogging [T1056.001]"
                    ],
                    "authors": [
                        "michael.hunhoff@mandiant.com"
                    ],
                    "name": "log keystrokes via raw input data",
                    "scopes": {
                        "dynamic": "unsupported",
                        "static": "function"
                    },
                    "namespace": "collection/keylog"
                }
            }
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/01/04",
            "description": "Detects PowerShell scripts that contains reference to keystroke capturing functions",
            "detection": {
                "condition": "selection",
                "selection": {
                    "ScriptBlockText|contains": "[Windows.Input.Keyboard]::IsKeyDown([System.Windows.Input.Key]::"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "965e2db9-eddb-4cf6-a986-7a967df651e4",
            "level": "medium",
            "logsource": {
                "category": "ps_script",
                "definition": "Requirements: Script Block Logging must be enabled",
                "product": "windows"
            },
            "references": [
                "https://twitter.com/ScumBots/status/1610626724257046529",
                "https://www.virustotal.com/gui/file/d4486b63512755316625230e0c9c81655093be93876e0d80732e7eeaf7d83476/content",
                "https://www.virustotal.com/gui/file/720a7ee9f2178c70501d7e3f4bcc28a4f456e200486dbd401b25af6da3b4da62/content",
                "https://learn.microsoft.com/en-us/dotnet/api/system.windows.input.keyboard.iskeydown?view=windowsdesktop-7.0"
            ],
            "status": "test",
            "tags": [
                "attack.collection",
                "attack.credential_access",
                "attack.t1056.001"
            ],
            "title": "Potential Keylogger Activity"
        },
        {
            "author": "frack113",
            "date": "2021/07/30",
            "description": "Adversaries may log user keystrokes to intercept credentials as the user types them.",
            "detection": {
                "condition": "1 of selection_*",
                "selection_basic": {
                    "ScriptBlockText|contains": "Get-Keystrokes"
                },
                "selection_high": {
                    "ScriptBlockText|contains|all": [
                        "Get-ProcAddress user32.dll GetAsyncKeyState",
                        "Get-ProcAddress user32.dll GetForegroundWindow"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "34f90d3c-c297-49e9-b26d-911b05a4866c",
            "level": "medium",
            "logsource": {
                "category": "ps_script",
                "definition": "Requirements: Script Block Logging must be enabled",
                "product": "windows"
            },
            "modified": "2022/07/11",
            "status": "test",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218/T1218.md",
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1056.001/src/Get-Keystrokes.ps1"
            ],
            "tags": [
                "attack.collection",
                "attack.t1056.001"
            ],
            "title": "Powershell Keylogging"
        },
        {
            "author": "Pawel Mazur",
            "date": "2021/05/24",
            "description": "Detect attempt to enable auditing of TTY input",
            "detection": {
                "condition": "1 of selection_*",
                "selection_path_events": {
                    "name": [
                        "/etc/pam.d/system-auth",
                        "/etc/pam.d/password-auth"
                    ],
                    "type": "PATH"
                },
                "selection_tty_events": {
                    "type": [
                        "TTY",
                        "USER_TTY"
                    ]
                }
            },
            "falsepositives": [
                "Administrative work"
            ],
            "id": "49aae26c-450e-448b-911d-b3c13d178dfc",
            "level": "high",
            "logsource": {
                "product": "linux",
                "service": "auditd"
            },
            "modified": "2022/12/18",
            "status": "test",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1056.001/T1056.001.md",
                "https://linux.die.net/man/8/pam_tty_audit",
                "https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/security_guide/sec-configuring_pam_for_auditing",
                "https://access.redhat.com/articles/4409591#audit-record-types-2"
            ],
            "tags": [
                "attack.credential_access",
                "attack.t1003",
                "attack.t1056.001"
            ],
            "title": "Linux Keylogging with Pam.d"
        }
    ]
}