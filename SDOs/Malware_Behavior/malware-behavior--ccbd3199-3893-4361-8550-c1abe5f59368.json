{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--ccbd3199-3893-4361-8550-c1abe5f59368",
    "created": "2024-08-13T14:46:36.684307Z",
    "modified": "2024-08-13T14:46:48.548851Z",
    "name": "Obfuscated Files or Information: Compile After Delivery",
    "description": "Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC/MinGW.[1]Source code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a Phishing. Payloads may also be delivered in formats unrecognizable and inherently benign to the native OS (ex: EXEs on macOS/Linux) before later being (re)compiled into a proper executable binary with a bundled compiler and execution framework.[2]",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1027/004",
            "external_id": "T1027/004"
        },
        {
            "source_name": "CAPEC 636",
            "external_id": "malware-behavior--8a9b2ecc-1aa9-485a-baca-196996b31347"
        }
    ],
    "x_mitre_capa_rules": [
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "match": "compile .NET assembly"
                            },
                            {
                                "api": "Microsoft.VisualBasic.VBCodeProvider::ctor"
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Defense Evasion::Obfuscated Files or Information::Compile After Delivery [T1027.004]"
                    ],
                    "authors": [
                        "michael.hunhoff@mandiant.com"
                    ],
                    "name": "compile Visual Basic in .NET",
                    "namespace": "load-code/dotnet/vb",
                    "scopes": {
                        "dynamic": "thread",
                        "static": "function"
                    }
                }
            }
        },
        {
            "rule": {
                "features": [
                    {
                        "or": [
                            {
                                "api": "System.CodeDom.Compiler.CodeDomProvider::CompileAssemblyFromDom"
                            },
                            {
                                "api": "System.CodeDom.Compiler.CodeDomProvider::CompileAssemblyFromFile"
                            },
                            {
                                "api": "System.CodeDom.Compiler.CodeDomProvider::CompileAssemblyFromSource"
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Defense Evasion::Obfuscated Files or Information::Compile After Delivery [T1027.004]"
                    ],
                    "authors": [
                        "anushka.virgaonkar@mandiant.com"
                    ],
                    "name": "compile .NET assembly",
                    "namespace": "load-code/dotnet",
                    "scopes": {
                        "dynamic": "call",
                        "static": "function"
                    }
                }
            }
        },
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "match": "compile .NET assembly"
                            },
                            {
                                "api": "Microsoft.CSharp.CSharpCodeProvider::ctor"
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Defense Evasion::Obfuscated Files or Information::Compile After Delivery [T1027.004]"
                    ],
                    "authors": [
                        "michael.hunhoff@mandiant.com"
                    ],
                    "name": "compile CSharp in .NET",
                    "namespace": "load-code/dotnet/csharp",
                    "scopes": {
                        "dynamic": "thread",
                        "static": "function"
                    }
                }
            }
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "frack113",
            "date": "2022/01/09",
            "description": "When C# is compiled dynamically, a .cmdline file will be created as a part of the process.\nCertain processes are not typically observed compiling C# code, but can do so without touching disk.\nThis can be used to unpack a payload for execution\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "TargetFilename|endswith": ".cmdline"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "e4a74e34-ecde-4aab-b2fb-9112dd01aed0",
            "level": "low",
            "logsource": {
                "category": "file_event",
                "product": "windows"
            },
            "modified": "2023/02/17",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1027.004/T1027.004.md#atomic-test-2---dynamic-c-compile"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1027.004"
            ],
            "title": "Dynamic CSharp Compile Artefact"
        },
        {
            "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems), X__Junior (Nextron Systems)",
            "date": "2019/02/11",
            "description": "Detects a potentially suspicious parent of \"csc.exe\", which could be a sign of payload delivery.",
            "detection": {
                "condition": "selection_img and 1 of selection_parent_* and not 1 of filter_main_* and not 1 of filter_optional_*",
                "filter_main_programfiles": {
                    "ParentImage|startswith": [
                        "C:\\Program Files (x86)\\",
                        "C:\\Program Files\\"
                    ]
                },
                "filter_main_sdiagnhost": {
                    "ParentImage": "C:\\Windows\\System32\\sdiagnhost.exe"
                },
                "filter_main_w3p": {
                    "ParentImage": "C:\\Windows\\System32\\inetsrv\\w3wp.exe"
                },
                "filter_optional_ansible": {
                    "ParentCommandLine|contains": [
                        "JwB7ACIAZgBhAGkAbABlAGQAIgA6AHQAcgB1AGUALAAiAG0AcwBnACIAOgAiAEEAbgBzAGkAYgBsAGUAIAByAGUAcQB1AGkAcgBlAHMAIABQAG8AdwBlAHIAUwBoAGUAbABsACAAdgAzAC4AMAAgAG8AcgAgAG4AZQB3AGUAcgAiAH0AJw",
                        "cAewAiAGYAYQBpAGwAZQBkACIAOgB0AHIAdQBlACwAIgBtAHMAZwAiADoAIgBBAG4AcwBpAGIAbABlACAAcgBlAHEAdQBpAHIAZQBzACAAUABvAHcAZQByAFMAaABlAGwAbAAgAHYAMwAuADAAIABvAHIAIABuAGUAdwBlAHIAIgB9ACcA",
                        "nAHsAIgBmAGEAaQBsAGUAZAAiADoAdAByAHUAZQAsACIAbQBzAGcAIgA6ACIAQQBuAHMAaQBiAGwAZQAgAHIAZQBxAHUAaQByAGUAcwAgAFAAbwB3AGUAcgBTAGgAZQBsAGwAIAB2ADMALgAwACAAbwByACAAbgBlAHcAZQByACIAfQAnA"
                    ]
                },
                "filter_optional_chocolatey": {
                    "ParentImage": "C:\\ProgramData\\chocolatey\\choco.exe"
                },
                "filter_optional_defender": {
                    "ParentCommandLine|contains": "\\ProgramData\\Microsoft\\Windows Defender Advanced Threat Protection"
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\csc.exe"
                    },
                    {
                        "OriginalFileName": "csc.exe"
                    }
                ],
                "selection_parent_generic": {
                    "ParentImage|endswith": [
                        "\\cscript.exe",
                        "\\excel.exe",
                        "\\mshta.exe",
                        "\\onenote.exe",
                        "\\outlook.exe",
                        "\\powerpnt.exe",
                        "\\winword.exe",
                        "\\wscript.exe"
                    ]
                },
                "selection_parent_powershell": {
                    "ParentCommandLine|contains": [
                        "-Encoded ",
                        "FromBase64String"
                    ],
                    "ParentImage|endswith": [
                        "\\powershell.exe",
                        "\\pwsh.exe"
                    ]
                },
                "selection_parent_susp_location": [
                    {
                        "ParentCommandLine|re": "([Pp]rogram[Dd]ata|%([Ll]ocal)?[Aa]pp[Dd]ata%|\\\\[Aa]pp[Dd]ata\\\\([Ll]ocal([Ll]ow)?|[Rr]oaming))\\\\[^\\\\]{1,256}$"
                    },
                    {
                        "ParentCommandLine|contains": [
                            ":\\PerfLogs\\",
                            ":\\Users\\Public\\",
                            ":\\Windows\\Temp\\",
                            "\\Temporary Internet"
                        ]
                    },
                    {
                        "ParentCommandLine|contains|all": [
                            ":\\Users\\",
                            "\\Favorites\\"
                        ]
                    },
                    {
                        "ParentCommandLine|contains|all": [
                            ":\\Users\\",
                            "\\Favourites\\"
                        ]
                    },
                    {
                        "ParentCommandLine|contains|all": [
                            ":\\Users\\",
                            "\\Contacts\\"
                        ]
                    },
                    {
                        "ParentCommandLine|contains|all": [
                            ":\\Users\\",
                            "\\Pictures\\"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "b730a276-6b63-41b8-bcf8-55930c8fc6ee",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2024/05/27",
            "references": [
                "https://www.uptycs.com/blog/warzonerat-can-now-evade-with-process-hollowing",
                "https://reaqta.com/2017/11/short-journey-darkvnc/",
                "https://www.pwc.com/gx/en/issues/cybersecurity/cyber-threat-intelligence/yellow-liderc-ships-its-scripts-delivers-imaploader-malware.html"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1059.005",
                "attack.t1059.007",
                "attack.defense_evasion",
                "attack.t1218.005",
                "attack.t1027.004"
            ],
            "title": "Csc.EXE Execution Form Potentially Suspicious Parent"
        },
        {
            "author": "Beyu Denis, oscd.community",
            "date": "2019/10/26",
            "description": "Detects the execution of Dnx.EXE. The Dnx utility allows for the execution of C# code.\nAttackers might abuse this in order to bypass application whitelisting.\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Image|endswith": "\\dnx.exe"
                }
            },
            "falsepositives": [
                "Legitimate use of dnx.exe by legitimate user"
            ],
            "id": "81ebd28b-9607-4478-bf06-974ed9d53ed7",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2024/04/24",
            "references": [
                "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Csi/",
                "https://enigma0x3.net/2016/11/17/bypassing-application-whitelisting-by-using-dnx-exe/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1218",
                "attack.t1027.004"
            ],
            "title": "Potential Application Whitelisting Bypass via Dnx.EXE"
        },
        {
            "author": "Florian Roth (Nextron Systems), X__Junior (Nextron Systems)",
            "date": "2019/08/24",
            "description": "Detects execution of \"csc.exe\" to compile .NET code. Attackers often leverage this to compile code on the fly and use it in other stages.",
            "detection": {
                "condition": "selection_img and 1 of selection_susp_location_* and not 1 of filter_main_* and not 1 of filter_optional_*",
                "filter_main_programfiles": {
                    "ParentImage|startswith": [
                        "C:\\Program Files (x86)\\",
                        "C:\\Program Files\\"
                    ]
                },
                "filter_main_sdiagnhost": {
                    "ParentImage": "C:\\Windows\\System32\\sdiagnhost.exe"
                },
                "filter_main_w3p": {
                    "ParentImage": "C:\\Windows\\System32\\inetsrv\\w3wp.exe"
                },
                "filter_optional_ansible": {
                    "ParentCommandLine|contains": [
                        "JwB7ACIAZgBhAGkAbABlAGQAIgA6AHQAcgB1AGUALAAiAG0AcwBnACIAOgAiAEEAbgBzAGkAYgBsAGUAIAByAGUAcQB1AGkAcgBlAHMAIABQAG8AdwBlAHIAUwBoAGUAbABsACAAdgAzAC4AMAAgAG8AcgAgAG4AZQB3AGUAcgAiAH0AJw",
                        "cAewAiAGYAYQBpAGwAZQBkACIAOgB0AHIAdQBlACwAIgBtAHMAZwAiADoAIgBBAG4AcwBpAGIAbABlACAAcgBlAHEAdQBpAHIAZQBzACAAUABvAHcAZQByAFMAaABlAGwAbAAgAHYAMwAuADAAIABvAHIAIABuAGUAdwBlAHIAIgB9ACcA",
                        "nAHsAIgBmAGEAaQBsAGUAZAAiADoAdAByAHUAZQAsACIAbQBzAGcAIgA6ACIAQQBuAHMAaQBiAGwAZQAgAHIAZQBxAHUAaQByAGUAcwAgAFAAbwB3AGUAcgBTAGgAZQBsAGwAIAB2ADMALgAwACAAbwByACAAbgBlAHcAZQByACIAfQAnA"
                    ]
                },
                "filter_optional_chocolatey": {
                    "ParentImage": [
                        "C:\\ProgramData\\chocolatey\\choco.exe",
                        "C:\\ProgramData\\chocolatey\\tools\\shimgen.exe"
                    ]
                },
                "filter_optional_defender": {
                    "ParentCommandLine|contains": "\\ProgramData\\Microsoft\\Windows Defender Advanced Threat Protection"
                },
                "selection_img": {
                    "Image|endswith": "\\csc.exe"
                },
                "selection_susp_location_1": {
                    "CommandLine|contains": [
                        ":\\Perflogs\\",
                        ":\\Users\\Public\\",
                        "\\AppData\\Local\\Temp\\",
                        "\\Temporary Internet",
                        "\\Windows\\Temp\\"
                    ]
                },
                "selection_susp_location_2": [
                    {
                        "CommandLine|contains|all": [
                            ":\\Users\\",
                            "\\Favorites\\"
                        ]
                    },
                    {
                        "CommandLine|contains|all": [
                            ":\\Users\\",
                            "\\Favourites\\"
                        ]
                    },
                    {
                        "CommandLine|contains|all": [
                            ":\\Users\\",
                            "\\Contacts\\"
                        ]
                    },
                    {
                        "CommandLine|contains|all": [
                            ":\\Users\\",
                            "\\Pictures\\"
                        ]
                    }
                ],
                "selection_susp_location_3": {
                    "CommandLine|re": "([Pp]rogram[Dd]ata|%([Ll]ocal)?[Aa]pp[Dd]ata%|\\\\[Aa]pp[Dd]ata\\\\([Ll]ocal([Ll]ow)?|[Rr]oaming))\\\\[^\\\\]{1,256}$"
                }
            },
            "falsepositives": [
                "Legitimate software from program files - https://twitter.com/gN3mes1s/status/1206874118282448897",
                "Legitimate Microsoft software - https://twitter.com/gabriele_pippi/status/1206907900268072962",
                "Ansible"
            ],
            "id": "dcaa3f04-70c3-427a-80b4-b870d73c94c4",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2024/05/27",
            "references": [
                "https://securityboulevard.com/2019/08/agent-tesla-evading-edr-by-removing-api-hooks/",
                "https://www.clearskysec.com/wp-content/uploads/2018/11/MuddyWater-Operations-in-Lebanon-and-Oman.pdf",
                "https://app.any.run/tasks/c6993447-d1d8-414e-b856-675325e5aa09/",
                "https://twitter.com/gN3mes1s/status/1206874118282448897",
                "https://github.com/redcanaryco/atomic-red-team/blob/b27a3cb25025161d49ac861cb216db68c46a3537/atomics/T1027.004/T1027.004.md#atomic-test-1---compile-after-delivery-using-cscexe"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1027.004"
            ],
            "title": "Dynamic .NET Compilation Via Csc.EXE"
        },
        {
            "author": "Ensar \u015eamil, @sblmsrsn, @oscd_initiative",
            "date": "2020/10/07",
            "description": "Detects successful code compilation via Visual Basic Command Line Compiler that utilizes Windows Resource to Object Converter.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Image|endswith": "\\cvtres.exe",
                    "ParentImage|endswith": "\\vbc.exe"
                }
            },
            "falsepositives": [
                "Utilization of this tool should not be seen in enterprise environment"
            ],
            "id": "7b10f171-7f04-47c7-9fa2-5be43c76e535",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2021/11/27",
            "references": [
                "https://lolbas-project.github.io/lolbas/Binaries/Vbc/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1027.004"
            ],
            "title": "Visual Basic Command Line Compiler Usage"
        }
    ]
}