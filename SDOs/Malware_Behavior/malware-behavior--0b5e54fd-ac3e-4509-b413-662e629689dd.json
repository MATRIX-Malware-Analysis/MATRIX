{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--0b5e54fd-ac3e-4509-b413-662e629689dd",
    "created": "2024-08-13T14:46:36.650872Z",
    "modified": "2024-08-13T14:46:36.650872Z",
    "name": "Password Brute Forcing",
    "description": "An adversary tries every possible value for a password until they succeed. A brute force attack, if feasible computationally, will always be successful because it will essentially go through all possible passwords given the alphabet used (lower case letters, upper case letters, numbers, symbols, etc.) and the maximum length of the password.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CAPEC",
            "url": "https://capec.mitre.org/data/definitions/49.html",
            "external_id": "49"
        },
        {
            "source_name": "CWE",
            "external_id": "521"
        },
        {
            "source_name": "CWE",
            "external_id": "262"
        },
        {
            "source_name": "CWE",
            "external_id": "263"
        },
        {
            "source_name": "CWE",
            "external_id": "257"
        },
        {
            "source_name": "CWE",
            "external_id": "654"
        },
        {
            "source_name": "CWE",
            "external_id": "307"
        },
        {
            "source_name": "CWE",
            "external_id": "308"
        },
        {
            "source_name": "CWE",
            "external_id": "309"
        }
    ],
    "x_mitre_consequences": [
        {
            "impact": "Gain Privileges",
            "scope": "Confidentiality"
        },
        {
            "impact": "Gain Privileges",
            "scope": "Access Control"
        },
        {
            "impact": "Gain Privileges",
            "scope": "Authorization"
        },
        {
            "impact": "Read Data",
            "scope": "Confidentiality"
        },
        {
            "impact": "Modify Data",
            "scope": "Integrity"
        }
    ],
    "x_mitre_examples": [
        {
            "description": "A system does not enforce a strong password policy and the user picks a five letter password consisting of lower case English letters only. The system does not implement any password throttling mechanism. Assuming the adversary does not know the length of the users' password, an adversary can brute force this password in maximum 1+26+26^2+26^3+26^4+26^5 = 1 + 26 + 676 + 17576 + 456976 + 11,881,376 = 12,356,631 attempts, and half these tries (6,178,316) on average. Using modern hardware this attack is trivial. If the adversary were to assume that the user password could also contain upper case letters (and it was case sensitive) and/or numbers, than the number of trials would have been larger.\n               An adversary's job would have most likely been even easier because many users who choose easy to brute force passwords like this are also likely to use a word that can be found in the dictionary. Since there are far fewer valid English words containing up to five letters than 12,356,631, an attack that tries each of the entries in the English dictionary would go even faster."
        },
        {
            "description": "A weakness exists in the automatic password generation routine of Mailman prior to 2.1.5 that causes only about five million different passwords to be generated. This makes it easy to brute force the password for all users who decided to let Mailman automatically generate their passwords for them. Users who chose their own passwords during the sign up process would not have been affected (assuming that they chose strong passwords). See also: CVE-2004-1143"
        }
    ],
    "x_mitre_execution_flows": [
        {
            "description": "[Determine application's/system's password policy] Determine the password policies of the target application/system.",
            "phase": "Explore",
            "step": "1",
            "techniques": [
                "Determine minimum and maximum allowed password lengths.",
                "Determine format of allowed passwords (whether they are required or allowed to contain numbers, special characters, etc.).",
                "Determine account lockout policy (a strict account lockout policy will prevent brute force attacks)."
            ]
        },
        {
            "description": "[Brute force password] Given the finite space of possible passwords dictated by the password policy determined in the previous step, try all possible passwords for a known user ID until application/system grants access.",
            "phase": "Exploit",
            "step": "2",
            "techniques": [
                "Manually or automatically enter all possible passwords through the application/system's interface. In most systems, start with the shortest and simplest possible passwords, because most users tend to select such passwords if allowed to do so.",
                "Perform an offline dictionary attack or a rainbow table attack against a known password hash."
            ]
        }
    ],
    "x_mitre_impact": "High",
    "x_mitre_likelihood_of_attack": "Medium",
    "x_mitre_mitigations": [
        {
            "description": "Implement a password throttling mechanism. This mechanism should take into account both the IP address and the log in name of the user."
        },
        {
            "description": "Put together a strong password policy and make sure that all user created passwords comply with it. Alternatively automatically generate strong passwords for users."
        },
        {
            "description": "Passwords need to be recycled to prevent aging, that is every once in a while a new password must be chosen."
        }
    ]
}