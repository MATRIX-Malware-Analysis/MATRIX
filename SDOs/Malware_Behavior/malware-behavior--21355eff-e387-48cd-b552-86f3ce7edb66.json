{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--21355eff-e387-48cd-b552-86f3ce7edb66",
    "created": "2024-08-13T14:46:37.15919Z",
    "modified": "2024-08-13T14:46:37.2877Z",
    "name": "Process Injection: Thread Local Storage",
    "description": "Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges. TLS callback injection is a method of executing arbitrary code in the address space of a separate live process. TLS callback injection involves manipulating pointers inside a portable executable (PE) to redirect a process to malicious code before reaching the code's legitimate entry point. TLS callbacks are normally used by the OS to setup and/or cleanup data used by threads. Manipulating TLS callbacks may be performed by allocating and writing to specific offsets within a process\u2019 memory space using other Process Injection techniques such as Process Hollowing.[1]Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via TLS callback injection may also evade detection from security products since the execution is masked under a legitimate process.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1055/005",
            "external_id": "T1055/005"
        }
    ]
}