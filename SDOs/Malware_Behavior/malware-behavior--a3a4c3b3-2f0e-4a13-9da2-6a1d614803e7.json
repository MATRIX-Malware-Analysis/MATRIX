{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--a3a4c3b3-2f0e-4a13-9da2-6a1d614803e7",
    "created": "2024-08-13T14:46:36.684307Z",
    "modified": "2024-08-13T14:46:48.628084Z",
    "name": "Impair Defenses: Disable Windows Event Logging",
    "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.[1] This data is used by security tools and analysts to generate detections.The EventLog service maintains event logs from various system components and applications.[2] By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to Security Settings\\Local Policies\\Audit Policy for basic audit policy settings or Security Settings\\Advanced Audit Policy Configuration for advanced audit policy settings.[3][4] auditpol.exe may also be used to set audit policies.[5]Adversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the Set-Service -Name EventLog -Status Stopped or sc config eventlog start=disabled commands (followed by manually stopping the service using Stop-Service  -Name EventLog).[6][7] Additionally, the service may be disabled by modifying the 'Start' value in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog then restarting the system for the change to take effect.[7]There are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the 'Start' value in the key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security, then reboot the system to disable the Security EventLog.[8] Second, with Administrator privilege, adversaries may modify the same values in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System and HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application to disable the entire EventLog.[7]Additionally, adversaries may use auditpol and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the /success or /failure parameters. For example, auditpol /set /category:'Account Logon' /success:disable /failure:disable turns off auditing for the Account Logon category.[9][10] To clear the audit policy, adversaries may run the following lines: auditpol /clear /y or auditpol /remove /allusers.[10]By disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1562/002",
            "external_id": "T1562/002"
        },
        {
            "source_name": "CAPEC 268",
            "external_id": "malware-behavior--2d937180-2912-4747-a752-17bdfa7fcab7"
        },
        {
            "source_name": "CAPEC 571",
            "external_id": "malware-behavior--9bf87662-b201-4f50-ad6e-6aa4046005c3"
        },
        {
            "source_name": "CAPEC 571",
            "external_id": "malware-behavior--9bf87662-b201-4f50-ad6e-6aa4046005c3"
        },
        {
            "source_name": "CAPEC 578",
            "external_id": "malware-behavior--2f8f9894-8e67-43f6-99d5-2527cce30d1c"
        }
    ],
    "x_mitre_capa_rules": [
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "count(api(advapi32.ElfClearEventLogFileW))": "3 or more"
                            },
                            {
                                "count(api(advapi32.OpenEventLogA))": "1 or more"
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Defense Evasion::Impair Defenses::Disable Windows Event Logging [T1562.002]"
                    ],
                    "authors": [
                        "michael.hunhoff@mandiant.com"
                    ],
                    "examples": [
                        "82BF6347ACF15E5D883715DC289D8A2B:0x14005E0C0"
                    ],
                    "name": "crash the Windows event logging service",
                    "namespace": "anti-analysis/anti-forensic",
                    "references": [
                        "https://github.com/limbenjamin/LogServiceCrash"
                    ],
                    "scopes": {
                        "dynamic": "thread",
                        "static": "basic block"
                    }
                }
            }
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2022/09/07",
            "description": "Detects the use of SysmonEnte, a tool to attack the integrity of Sysmon",
            "detection": {
                "condition": "( selection_sysmon and not 1 of filter_main_* ) or selection_calltrace",
                "filter_main_generic": {
                    "SourceImage|contains": [
                        ":\\Program Files (x86)\\",
                        ":\\Program Files\\",
                        ":\\Windows\\System32\\",
                        ":\\Windows\\SysWOW64\\"
                    ]
                },
                "filter_main_msdefender": {
                    "SourceImage|contains": ":\\ProgramData\\Microsoft\\Windows Defender\\Platform\\",
                    "SourceImage|endswith": "\\MsMpEng.exe"
                },
                "selection_calltrace": {
                    "CallTrace": "Ente"
                },
                "selection_sysmon": {
                    "GrantedAccess": "0x1400",
                    "TargetImage|contains": [
                        ":\\Windows\\Sysmon.exe",
                        ":\\Windows\\Sysmon64.exe"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "d29ada0f-af45-4f27-8f32-f7b77c3dbc4e",
            "level": "high",
            "logsource": {
                "category": "process_access",
                "product": "windows"
            },
            "modified": "2023/11/28",
            "references": [
                "https://codewhitesec.blogspot.com/2022/09/attacks-on-sysmon-revisited-sysmonente.html",
                "https://github.com/codewhitesec/SysmonEnte/",
                "https://github.com/codewhitesec/SysmonEnte/blob/main/screens/1.png"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1562.002"
            ],
            "title": "HackTool - SysmonEnte Execution"
        },
        {
            "author": "Tim Burrell",
            "date": "2020/01/02",
            "description": "Detects suspicious access to the \"svchost\" process such as that used by Invoke-Phantom to kill the thread of the Windows event logging service.",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_msbuild": {
                    "CallTrace|contains": [
                        "Microsoft.Build.ni.dll",
                        "System.ni.dll"
                    ],
                    "SourceImage|contains": ":\\Program Files\\Microsoft Visual Studio\\",
                    "SourceImage|endswith": "\\MSBuild\\Current\\Bin\\MSBuild.exe"
                },
                "selection": {
                    "CallTrace|contains": "UNKNOWN",
                    "GrantedAccess": "0x1F3FFF",
                    "TargetImage|endswith": ":\\Windows\\System32\\svchost.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "166e9c50-8cd9-44af-815d-d1f0c0e90dde",
            "level": "high",
            "logsource": {
                "category": "process_access",
                "product": "windows"
            },
            "modified": "2023/01/30",
            "references": [
                "https://github.com/hlldz/Invoke-Phant0m",
                "https://twitter.com/timbmsft/status/900724491076214784"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1562.002"
            ],
            "title": "Suspicious Svchost Process Access"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2022/09/07",
            "description": "Detects the load of EvtMuteHook.dll, a key component of SharpEvtHook, a tool that tampers with the Windows event logs",
            "detection": {
                "condition": "selection",
                "selection": [
                    {
                        "Hashes|contains": "IMPHASH=330768A4F172E10ACB6287B87289D83B"
                    },
                    {
                        "Imphash": "330768a4f172e10acb6287b87289d83b"
                    }
                ]
            },
            "falsepositives": [
                "Other DLLs with the same Imphash"
            ],
            "id": "49329257-089d-46e6-af37-4afce4290685",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2023/02/17",
            "references": [
                "https://github.com/bats3c/EvtMute"
            ],
            "related": [
                {
                    "id": "bedfc8ad-d1c7-4e37-a20e-e2b0dbee759c",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1562.002"
            ],
            "title": "HackTool - SharpEvtMute DLL Load"
        },
        {
            "author": "D3F7A5105",
            "date": "2023/01/02",
            "description": "Detects the creation of new files with the \".evtx\" extension in non-common or non-standard location.\nThis could indicate tampering with default EVTX locations in order to evade security controls or simply exfiltration of event log to search for sensitive information within.\nNote that backup software and legitimate administrator might perform similar actions during troubleshooting.\n",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_baseimage": {
                    "TargetFilename|endswith": "\\Windows\\System32\\winevt\\Logs\\",
                    "TargetFilename|startswith": "C:\\ProgramData\\Microsoft\\Windows\\Containers\\BaseImages\\"
                },
                "filter_main_path": {
                    "TargetFilename|startswith": "C:\\Windows\\System32\\winevt\\Logs\\"
                },
                "selection": {
                    "TargetFilename|endswith": ".evtx"
                }
            },
            "falsepositives": [
                "Administrator or backup activity",
                "An unknown bug seems to trigger the Windows \"svchost\" process to drop EVTX files in the \"C:\\Windows\\Temp\" directory in the form \"<log_name\">_<uuid>.evtx\". See https://superuser.com/questions/1371229/low-disk-space-after-filling-up-c-windows-temp-with-evtx-and-txt-files"
            ],
            "id": "65236ec7-ace0-4f0c-82fd-737b04fd4dcb",
            "level": "medium",
            "logsource": {
                "category": "file_event",
                "product": "windows",
                "definition": "Requirements: The \".evtx\" extension should be monitored via a Sysmon configuration. Example: <TargetFilename condition=\"end with\">.evtx<TargetFilename>"
            },
            "modified": "2024/03/26",
            "references": [
                "https://learn.microsoft.com/en-us/windows/win32/eventlog/eventlog-key"
            ],
            "status": "experimental",
            "tags": [
                "attack.defense_evasion",
                "attack.t1562.002"
            ],
            "title": "EVTX Created In Uncommon Location"
        },
        {
            "author": "frack113",
            "date": "2022/01/09",
            "description": "Disables HTTP logging on a Windows IIS web server as seen by Threat Group 3390 (Bronze Union)",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains|all": [
                        "set",
                        "config",
                        "section:httplogging",
                        "dontLog:true"
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\appcmd.exe"
                    },
                    {
                        "OriginalFileName": "appcmd.exe"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "e4ed6030-ffe5-4e6a-8a8a-ab3c1ab9d94e",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/01/22",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.002/T1562.002.md#atomic-test-1---disable-windows-iis-http-logging"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1562.002"
            ],
            "title": "Disable Windows IIS HTTP Logging"
        },
        {
            "author": "Janantha Marasinghe (https://github.com/blueteam0ps)",
            "date": "2021/02/02",
            "description": "Threat actors can use auditpol binary to change audit policy configuration to impair detection capability.\nThis can be carried out by selectively disabling/removing certain audit policies as well as restoring a custom policy owned by the threat actor.\n",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains": [
                        "disable",
                        "clear",
                        "remove",
                        "restore"
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\auditpol.exe"
                    },
                    {
                        "OriginalFileName": "AUDITPOL.EXE"
                    }
                ]
            },
            "falsepositives": [
                "Administrator or administrator scripts might leverage the flags mentioned in the detection section. Either way, it should always be monitored"
            ],
            "id": "0a13e132-651d-11eb-ae93-0242ac130002",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/22",
            "references": [
                "https://www.microsoft.com/security/blog/2021/01/20/deep-dive-into-the-solorigate-second-stage-activation-from-sunburst-to-teardrop-and-raindrop/"
            ],
            "related": [
                {
                    "id": "c6c56ada-612b-42d1-9a29-adad3c5c2c1e",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1562.002"
            ],
            "title": "Audit Policy Tampering Via Auditpol"
        },
        {
            "author": "Ecco, Daniil Yugoslavskiy, oscd.community, D3F7A5105",
            "date": "2019/09/26",
            "description": "Detects the clearing or configuration tampering of EventLog using utilities such as \"wevtutil\", \"powershell\" and \"wmic\".\nThis technique were seen used by threat actors and ransomware strains in order to evade defenses.\n",
            "detection": {
                "condition": "1 of selection_* and not 1 of filter_*",
                "filter_msiexec": {
                    "CommandLine|contains": " sl ",
                    "ParentImage": [
                        "C:\\Windows\\SysWOW64\\msiexec.exe",
                        "C:\\Windows\\System32\\msiexec.exe"
                    ]
                },
                "selection_other_ps": {
                    "CommandLine|contains": [
                        "Clear-EventLog ",
                        "Remove-EventLog ",
                        "Limit-EventLog ",
                        "Clear-WinEvent "
                    ],
                    "Image|endswith": [
                        "\\powershell.exe",
                        "\\pwsh.exe"
                    ]
                },
                "selection_other_wmi": {
                    "CommandLine|contains": "ClearEventLog",
                    "Image|endswith": [
                        "\\powershell.exe",
                        "\\pwsh.exe",
                        "\\wmic.exe"
                    ]
                },
                "selection_wevtutil": {
                    "CommandLine|contains": [
                        "clear-log ",
                        " cl ",
                        "set-log ",
                        " sl ",
                        "lfn:"
                    ],
                    "Image|endswith": "\\wevtutil.exe"
                }
            },
            "falsepositives": [
                "Admin activity",
                "Scripts and administrative tools used in the monitored environment",
                "Maintenance activity"
            ],
            "id": "cc36992a-4671-4f21-a91d-6c2b72a2edf5",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/07/13",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1070.001/T1070.001.md",
                "https://eqllib.readthedocs.io/en/latest/analytics/5b223758-07d6-4100-9e11-238cfdd0fe97.html",
                "https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/wevtutil",
                "https://gist.github.com/fovtran/ac0624983c7722e80a8f5a4babb170ee",
                "https://jdhnet.wordpress.com/2017/12/19/changing-the-location-of-the-windows-event-logs/"
            ],
            "status": "stable",
            "tags": [
                "attack.defense_evasion",
                "attack.t1070.001",
                "attack.t1562.002",
                "car.2016-04-002"
            ],
            "title": "Suspicious Eventlog Clearing or Configuration Change Activity"
        },
        {
            "id": "bedfc8ad-d1c7-4e37-a20e-e2b0dbee759c",
            "author": "Florian Roth (Nextron Systems)",
            "date": "2022/09/07",
            "description": "Detects the use of SharpEvtHook, a tool that tampers with the Windows event logs",
            "detection": {
                "condition": "selection",
                "selection": [
                    {
                        "Image|endswith": "\\SharpEvtMute.exe"
                    },
                    {
                        "Description": "SharpEvtMute"
                    },
                    {
                        "CommandLine|contains": [
                            "--Filter \"rule ",
                            "--Encoded --Filter \\\""
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/14",
            "references": [
                "https://github.com/bats3c/EvtMute"
            ],
            "related": [
                {
                    "type": "similar",
                    "id": "49329257-089d-46e6-af37-4afce4290685"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1562.002"
            ],
            "title": "HackTool - SharpEvtMute Execution"
        },
        {
            "author": "Kirill Kiryanov, oscd.community",
            "date": "2019/10/23",
            "description": "Detects possible Sysmon filter driver unloaded via fltmc.exe",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains|all": [
                        "unload",
                        "sysmon"
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\fltMC.exe"
                    },
                    {
                        "OriginalFileName": "fltMC.exe"
                    }
                ]
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "4d7cda18-1b12-4e52-b45c-d28653210df8",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/13",
            "references": [
                "https://www.darkoperator.com/blog/2018/10/5/operating-offensively-against-sysmon"
            ],
            "related": [
                {
                    "id": "4931188c-178e-4ee7-a348-39e8a7a56821",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1070",
                "attack.t1562",
                "attack.t1562.002"
            ],
            "title": "Sysmon Driver Unloaded Via Fltmc.EXE"
        },
        {
            "author": "Janantha Marasinghe",
            "date": "2022/11/18",
            "description": "Detects potential suspicious behaviour using secedit.exe. Such as exporting or modifying the security policy",
            "detection": {
                "condition": "selection_img and (1 of selection_flags_*)",
                "selection_flags_configure": {
                    "CommandLine|contains|all": [
                        "/configure",
                        "/db"
                    ]
                },
                "selection_flags_discovery": {
                    "CommandLine|contains|all": [
                        "/export",
                        "/cfg"
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\secedit.exe"
                    },
                    {
                        "OriginalFileName": "SeCEdit"
                    }
                ]
            },
            "falsepositives": [
                "Legitimate administrative use"
            ],
            "id": "c2c76b77-32be-4d1f-82c9-7e544bdfe0eb",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2022/12/30",
            "references": [
                "https://blueteamops.medium.com/secedit-and-i-know-it-595056dee53d",
                "https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/secedit"
            ],
            "status": "test",
            "tags": [
                "attack.discovery",
                "attack.persistence",
                "attack.defense_evasion",
                "attack.credential_access",
                "attack.privilege_escalation",
                "attack.t1562.002",
                "attack.t1547.001",
                "attack.t1505.005",
                "attack.t1556.002",
                "attack.t1562",
                "attack.t1574.007",
                "attack.t1564.002",
                "attack.t1546.008",
                "attack.t1546.007",
                "attack.t1547.014",
                "attack.t1547.010",
                "attack.t1547.002",
                "attack.t1557",
                "attack.t1082"
            ],
            "title": "Potential Suspicious Activity Using SeCEdit"
        },
        {
            "id": "4931188c-178e-4ee7-a348-39e8a7a56821",
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/02/13",
            "description": "Detect filter driver unloading activity via fltmc.exe",
            "detection": {
                "condition": "all of selection_* and not 1 of filter_optional_*",
                "filter_optional_avira": {
                    "CommandLine|endswith": "unload rtp_filesystem_filter",
                    "ParentImage|contains": "\\AppData\\Local\\Temp\\",
                    "ParentImage|endswith": "\\endpoint-protection-installer-x64.tmp",
                    "ParentImage|startswith": "C:\\Users\\"
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\fltMC.exe"
                    },
                    {
                        "OriginalFileName": "fltMC.exe"
                    }
                ],
                "filter_optional_manageengine": {
                    "CommandLine|endswith": "unload DFMFilter",
                    "ParentImage": "C:\\Program Files (x86)\\ManageEngine\\uems_agent\\bin\\dcfaservice64.exe"
                },
                "selection_cli": {
                    "CommandLine|contains": "unload"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2024/06/24",
            "references": [
                "https://www.darkoperator.com/blog/2018/10/5/operating-offensively-against-sysmon",
                "https://www.cybereason.com/blog/threat-analysis-report-lockbit-2.0-all-paths-lead-to-ransom"
            ],
            "related": [
                {
                    "type": "derived",
                    "id": "4d7cda18-1b12-4e52-b45c-d28653210df8"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1070",
                "attack.t1562",
                "attack.t1562.002"
            ],
            "title": "Filter Driver Unloaded Via Fltmc.EXE"
        },
        {
            "id": "c6c56ada-612b-42d1-9a29-adad3c5c2c1e",
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2021/12/18",
            "description": "Threat actors can use an older version of the auditpol binary available inside the NT resource kit to change audit policy configuration to impair detection capability.\nThis can be carried out by selectively disabling/removing certain audit policies as well as restoring a custom policy owned by the threat actor.\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains": [
                        "/logon:none",
                        "/system:none",
                        "/sam:none",
                        "/privilege:none",
                        "/object:none",
                        "/process:none",
                        "/policy:none"
                    ]
                }
            },
            "falsepositives": [
                "The old auditpol utility isn't available by default on recent versions of Windows as it was replaced by a newer version. The FP rate should be very low except for tools that use a similar flag structure"
            ],
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/21",
            "references": [
                "https://github.com/3CORESec/MAL-CL/tree/master/Descriptors/Windows%202000%20Resource%20Kit%20Tools/AuditPol"
            ],
            "related": [
                {
                    "type": "similar",
                    "id": "0a13e132-651d-11eb-ae93-0242ac130002"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1562.002"
            ],
            "title": "Audit Policy Tampering Via NT Resource Kit Auditpol"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/06/20",
            "description": "Detects scenarios where system auditing for important events such as \"Process Creation\" or \"Logon\" events is disabled.",
            "detection": {
                "condition": "1 of selection_*",
                "selection_state_success_and_failure": {
                    "AuditPolicyChanges|contains": [
                        "%%8448",
                        "%%8450"
                    ],
                    "EventID": 4719,
                    "SubcategoryGuid": [
                        "{0CCE9210-69AE-11D9-BED3-505054503030}",
                        "{0CCE9211-69AE-11D9-BED3-505054503030}",
                        "{0CCE9212-69AE-11D9-BED3-505054503030}",
                        "{0CCE9215-69AE-11D9-BED3-505054503030}",
                        "{0CCE921B-69AE-11D9-BED3-505054503030}",
                        "{0CCE922B-69AE-11D9-BED3-505054503030}",
                        "{0CCE922F-69AE-11D9-BED3-505054503030}",
                        "{0CCE9230-69AE-11D9-BED3-505054503030}",
                        "{0CCE9235-69AE-11D9-BED3-505054503030}",
                        "{0CCE9236-69AE-11D9-BED3-505054503030}",
                        "{0CCE9237-69AE-11D9-BED3-505054503030}",
                        "{0CCE923F-69AE-11D9-BED3-505054503030}",
                        "{0CCE9240-69AE-11D9-BED3-505054503030}",
                        "{0CCE9242-69AE-11D9-BED3-505054503030}"
                    ]
                },
                "selection_state_success_only": {
                    "AuditPolicyChanges|contains": "%%8448",
                    "EventID": 4719,
                    "SubcategoryGuid": "{0CCE9217-69AE-11D9-BED3-505054503030}"
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "ab4561b1-6c7e-48a7-ad08-087cfb9ce8f1",
            "level": "high",
            "logsource": {
                "definition": "dfd8c0f4-e6ad-4e07-b91b-f2fca0ddef64",
                "product": "windows",
                "service": "security"
            },
            "modified": "2023/11/17",
            "references": [
                "https://docs.google.com/presentation/d/1dkrldTTlN3La-OjWtkWJBb4hVk6vfsSMBFBERs6R8zA/edit",
                "https://github.com/SigmaHQ/sigma/blob/master/documentation/logsource-guides/windows/service/security.md"
            ],
            "related": [
                {
                    "id": "69aeb277-f15f-4d2d-b32a-55e883609563",
                    "type": "derived"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1562.002"
            ],
            "title": "Important Windows Event Auditing Disabled"
        },
        {
            "id": "69aeb277-f15f-4d2d-b32a-55e883609563",
            "author": "@neu5ron, Nasreddine Bencherchali (Nextron Systems)",
            "date": "2017/11/19",
            "description": "Detects scenarios where system auditing (i.e.: Windows event log auditing) is disabled.\nThis may be used in a scenario where an entity would want to bypass local logging to evade detection when Windows event logging is enabled and reviewed.\nAlso, it is recommended to turn off \"Local Group Policy Object Processing\" via GPO, which will make sure that Active Directory GPOs take precedence over local/edited computer policies via something such as \"gpedit.msc\".\nPlease note, that disabling \"Local Group Policy Object Processing\" may cause an issue in scenarios of one off specific GPO modifications - however, it is recommended to perform these modifications in Active Directory anyways.\n",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_guid": {
                    "SubcategoryGuid": [
                        "{0CCE9210-69AE-11D9-BED3-505054503030}",
                        "{0CCE9211-69AE-11D9-BED3-505054503030}",
                        "{0CCE9212-69AE-11D9-BED3-505054503030}",
                        "{0CCE9215-69AE-11D9-BED3-505054503030}",
                        "{0CCE9217-69AE-11D9-BED3-505054503030}",
                        "{0CCE921B-69AE-11D9-BED3-505054503030}",
                        "{0CCE922B-69AE-11D9-BED3-505054503030}",
                        "{0CCE922F-69AE-11D9-BED3-505054503030}",
                        "{0CCE9230-69AE-11D9-BED3-505054503030}",
                        "{0CCE9235-69AE-11D9-BED3-505054503030}",
                        "{0CCE9236-69AE-11D9-BED3-505054503030}",
                        "{0CCE9237-69AE-11D9-BED3-505054503030}",
                        "{0CCE923F-69AE-11D9-BED3-505054503030}",
                        "{0CCE9240-69AE-11D9-BED3-505054503030}",
                        "{0CCE9242-69AE-11D9-BED3-505054503030}"
                    ]
                },
                "selection": {
                    "AuditPolicyChanges|contains": [
                        "%%8448",
                        "%%8450"
                    ],
                    "EventID": 4719
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "level": "low",
            "logsource": {
                "definition": "dfd8c0f4-e6ad-4e07-b91b-f2fca0ddef64",
                "product": "windows",
                "service": "security"
            },
            "modified": "2023/11/15",
            "references": [
                "https://docs.google.com/presentation/d/1dkrldTTlN3La-OjWtkWJBb4hVk6vfsSMBFBERs6R8zA/edit"
            ],
            "related": [
                {
                    "type": "derived",
                    "id": "ab4561b1-6c7e-48a7-ad08-087cfb9ce8f1"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1562.002"
            ],
            "title": "Windows Event Auditing Disabled"
        },
        {
            "author": "D3F7A5105",
            "date": "2023/01/02",
            "description": "Detects tampering with EventLog service \"file\" key. In order to change the default location of an Evtx file. This technique is used to tamper with log collection and alerting",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "Details|contains": "\\System32\\Winevt\\Logs\\"
                },
                "selection": {
                    "TargetObject|contains": "\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\",
                    "TargetObject|endswith": "\\File"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "0cb8d736-995d-4ce7-a31e-1e8d452a1459",
            "level": "high",
            "logsource": {
                "category": "registry_set",
                "product": "windows"
            },
            "modified": "2023/08/17",
            "references": [
                "https://learn.microsoft.com/en-us/windows/win32/eventlog/eventlog-key"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1562.002"
            ],
            "title": "Potential EventLog File Location Tampering"
        },
        {
            "author": "frack113",
            "date": "2022/09/17",
            "description": "Detects tampering with the \"ChannelAccess\" registry key in order to change access to Windows event channel.",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_tiworker": {
                    "Image|endswith": "\\TiWorker.exe",
                    "Image|startswith": "C:\\Windows\\WinSxS\\"
                },
                "filter_main_trustedinstaller": {
                    "Image": "C:\\Windows\\servicing\\TrustedInstaller.exe"
                },
                "selection": {
                    "Details|contains": [
                        "(A;;0x1;;;LA)",
                        "(A;;0x1;;;SY)",
                        "(A;;0x5;;;BA)"
                    ],
                    "TargetObject|contains": "\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\",
                    "TargetObject|endswith": "\\ChannelAccess"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "7d9263bd-dc47-4a58-bc92-5474abab390c",
            "level": "high",
            "logsource": {
                "category": "registry_set",
                "product": "windows"
            },
            "modified": "2024/03/25",
            "references": [
                "https://app.any.run/tasks/77b2e328-8f36-46b2-b2e2-8a80398217ab/",
                "https://learn.microsoft.com/en-us/windows/win32/api/winevt/",
                "https://itconnect.uw.edu/tools-services-support/it-systems-infrastructure/msinf/other-help/understanding-sddl-syntax/"
            ],
            "status": "experimental",
            "tags": [
                "attack.defense_evasion",
                "attack.t1562.002"
            ],
            "title": "Change Winevt Channel Access Permission Via Registry"
        },
        {
            "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/07/04",
            "description": "Detects tampering with the \"Enabled\" registry key in order to disable Windows logging of a Windows event channel",
            "detection": {
                "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*",
                "filter_main_iis": {
                    "Image|endswith": "\\TiWorker.exe",
                    "Image|startswith": "C:\\Windows\\winsxs\\"
                },
                "filter_main_svchost": {
                    "Image": "C:\\Windows\\System32\\svchost.exe",
                    "TargetObject|contains": [
                        "\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\Microsoft-Windows-FileInfoMinifilter",
                        "\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\Microsoft-Windows-ASN1\\",
                        "\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\Microsoft-Windows-Kernel-AppCompat\\",
                        "\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\Microsoft-Windows-Runtime\\Error\\",
                        "\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\Microsoft-Windows-CAPI2/Operational\\"
                    ]
                },
                "filter_main_trusted_installer": {
                    "Image": "C:\\Windows\\servicing\\TrustedInstaller.exe",
                    "TargetObject|contains": "\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\Microsoft-Windows-Compat-Appraiser"
                },
                "filter_main_wevutil": {
                    "Image": "C:\\Windows\\system32\\wevtutil.exe"
                },
                "filter_optional_empty": {
                    "Image": ""
                },
                "filter_optional_null": {
                    "Image": null
                },
                "selection": {
                    "Details": "DWORD (0x00000000)",
                    "TargetObject|contains": "\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\",
                    "TargetObject|endswith": "\\Enabled"
                }
            },
            "falsepositives": [
                "Rare falsepositives may occur from legitimate administrators disabling specific event log for troubleshooting"
            ],
            "id": "2f78da12-f7c7-430b-8b19-a28f269b77a3",
            "level": "high",
            "logsource": {
                "category": "registry_set",
                "product": "windows"
            },
            "modified": "2024/03/25",
            "references": [
                "https://twitter.com/WhichbufferArda/status/1543900539280293889",
                "https://github.com/DebugPrivilege/CPP/blob/c39d365617dbfbcb01fffad200d52b6239b2918c/Windows%20Defender/RestoreDefenderConfig.cpp"
            ],
            "status": "experimental",
            "tags": [
                "attack.defense_evasion",
                "attack.t1562.002"
            ],
            "title": "Disable Windows Event Logging Via Registry"
        }
    ]
}