{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--776a26f1-5c96-4f42-892a-84d4826a8e49",
    "created": "2024-08-13T14:46:36.623687Z",
    "modified": "2024-08-13T14:46:36.623687Z",
    "name": "Flooding",
    "description": "An adversary consumes the resources of a target by rapidly engaging in a large number of interactions with the target. This type of attack generally exposes a weakness in rate limiting or flow. When successful this attack prevents legitimate users from accessing the service and can cause the target to crash. This attack differs from resource depletion through leaks or allocations in that the latter attacks do not rely on the volume of requests made to the target but instead focus on manipulation of the target's operations. The key factor in a flooding attack is the number of requests the adversary can make in a given period of time. The greater this number, the more likely an attack is to succeed against a given target.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CAPEC",
            "url": "https://capec.mitre.org/data/definitions/125.html",
            "external_id": "125"
        },
        {
            "source_name": "CWE",
            "external_id": "404"
        },
        {
            "source_name": "CWE",
            "external_id": "770"
        }
    ],
    "x_mitre_consequences": [
        {
            "impact": "Unreliable Execution",
            "scope": "Availability"
        },
        {
            "impact": "Resource Consumption",
            "scope": "Availability"
        }
    ],
    "x_mitre_impact": "Medium",
    "x_mitre_likelihood_of_attack": "High",
    "x_mitre_mitigations": [
        {
            "description": "Ensure that protocols have specific limits of scale configured."
        },
        {
            "description": "Specify expectations for capabilities and dictate which behaviors are acceptable when resource allocation reaches limits."
        },
        {
            "description": "Uniformly throttle all requests in order to make it more difficult to consume resources more quickly than they can again be freed."
        }
    ]
}