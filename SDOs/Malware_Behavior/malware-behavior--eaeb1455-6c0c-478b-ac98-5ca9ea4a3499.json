{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--eaeb1455-6c0c-478b-ac98-5ca9ea4a3499",
    "created": "2024-08-13T14:46:36.919475Z",
    "modified": "2024-08-13T14:46:44.990122Z",
    "name": "Inter-Process Communication: Component Object Model",
    "description": "Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces.[1] Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE).[2] Remote COM execution is facilitated by Remote Services such as  Distributed Component Object Model (DCOM).[1]Various COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and Visual Basic.[2] Specific COM objects also exist to directly perform functions beyond code execution, such as creating a Scheduled Task/Job, fileless download/execution, and other adversary behaviors related to privilege escalation and persistence.[1][3]",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1559/001",
            "external_id": "T1559/001"
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "Nik Seetharaman",
            "date": "2018/07/16",
            "description": "Detects various indicators of Microsoft Connection Manager Profile Installer execution",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CallTrace|contains": "cmlua.dll"
                }
            },
            "falsepositives": [
                "Legitimate CMSTP use (unlikely in modern enterprise environments)"
            ],
            "id": "3b4b232a-af90-427c-a22f-30b0c0837b95",
            "level": "high",
            "logsource": {
                "category": "process_access",
                "product": "windows"
            },
            "modified": "2021/06/27",
            "references": [
                "https://web.archive.org/web/20190720093911/http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/"
            ],
            "status": "stable",
            "tags": [
                "attack.defense_evasion",
                "attack.t1218.003",
                "attack.execution",
                "attack.t1559.001",
                "attack.g0069",
                "attack.g0080",
                "car.2019-04-001"
            ],
            "title": "CMSTP Execution Process Access"
        },
        {
            "author": "Dmitriy Lifanov, oscd.community",
            "date": "2019/10/25",
            "description": "Detects DNS queries initiated by \"Regsvr32.exe\"",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Image|endswith": "\\regsvr32.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "36e037c4-c228-4866-b6a3-48eb292b9955",
            "level": "medium",
            "logsource": {
                "category": "dns_query",
                "product": "windows"
            },
            "modified": "2023/09/18",
            "references": [
                "https://pentestlab.blog/2017/05/11/applocker-bypass-regsvr32/",
                "https://oddvar.moe/2017/12/13/applocker-case-study-how-insecure-is-it-really-part-1/"
            ],
            "related": [
                {
                    "id": "c7e91a02-d771-4a6d-a700-42587e0b1095",
                    "type": "derived"
                }
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1559.001",
                "attack.defense_evasion",
                "attack.t1218.010"
            ],
            "title": "DNS Query Request By Regsvr32.EXE"
        },
        {
            "id": "c7e91a02-d771-4a6d-a700-42587e0b1095",
            "author": "Dmitriy Lifanov, oscd.community",
            "date": "2019/10/25",
            "description": "Detects a network connection initiated by \"Regsvr32.exe\"",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Image|endswith": "\\regsvr32.exe",
                    "Initiated": "true"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "level": "medium",
            "logsource": {
                "category": "network_connection",
                "product": "windows"
            },
            "modified": "2023/09/18",
            "references": [
                "https://pentestlab.blog/2017/05/11/applocker-bypass-regsvr32/",
                "https://oddvar.moe/2017/12/13/applocker-case-study-how-insecure-is-it-really-part-1/"
            ],
            "status": "test",
            "title": "Network Connection Initiated By Regsvr32.EXE",
            "tags": [
                "attack.execution",
                "attack.t1559.001",
                "attack.defense_evasion",
                "attack.t1218.010"
            ]
        }
    ]
}