{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--644df287-b0fe-46e6-9777-980d726e7435",
    "created": "2024-08-13T14:46:36.684307Z",
    "modified": "2024-08-13T14:46:45.76358Z",
    "name": "Use Alternate Authentication Material: Application Access Token",
    "description": "Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.Application access tokens are used to make authorized API requests on behalf of a user or service and are commonly used to access resources in cloud, container-based applications, and software-as-a-service (SaaS).[1] OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.[2]For example, with a cloud-based email service, once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a 'refresh' token enabling background access is awarded.[3] With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.[4]Compromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim\u2019s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. In AWS and GCP environments, adversaries can trigger a request for a short-lived access token with the privileges of another user account.[5][6] The adversary can then use this token to request data or perform actions the original account could not. If permissions for this feature are misconfigured \u2013 for example, by allowing all users to request a token for a particular account - an adversary may be able to gain initial access to a Cloud Account or escalate their privileges.[7]Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords.  For example, in AWS environments, an adversary who compromises a user\u2019s AWS API credentials may be able to use the sts:GetFederationToken API call to create a federated user session, which will have the same permissions as the original user but may persist even if the original user credentials are deactivated.[8] Additionally, access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1550/001",
            "external_id": "T1550/001"
        },
        {
            "source_name": "CAPEC 593",
            "external_id": "malware-behavior--9df96ace-2d8a-494a-8e93-6d6d87f3e76f"
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "Austin Songer @austinsonger",
            "date": "2021/07/24",
            "description": "Identifies the suspicious use of GetSessionToken. Tokens could be created and used by attackers to move laterally and escalate privileges.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "eventName": "GetSessionToken",
                    "eventSource": "sts.amazonaws.com",
                    "userIdentity.type": "IAMUser"
                }
            },
            "falsepositives": [
                "GetSessionToken may be done by a system or network administrator. Verify whether the user identity, user agent, and/or hostname should be making changes in your environment. GetSessionToken from unfamiliar users or hosts should be investigated. If known behavior is causing false positives, it can be exempted from the rule."
            ],
            "id": "b45ab1d2-712f-4f01-a751-df3826969807",
            "level": "low",
            "logsource": {
                "product": "aws",
                "service": "cloudtrail"
            },
            "modified": "2022/10/09",
            "references": [
                "https://github.com/elastic/detection-rules/pull/1213",
                "https://docs.aws.amazon.com/STS/latest/APIReference/API_GetSessionToken.html"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.privilege_escalation",
                "attack.t1548",
                "attack.t1550",
                "attack.t1550.001"
            ],
            "title": "AWS STS GetSessionToken Misuse"
        },
        {
            "author": "Austin Songer @austinsonger",
            "date": "2021/07/24",
            "description": "Identifies the suspicious use of AssumeRole. Attackers could move laterally and escalate privileges.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "userIdentity.sessionContext.sessionIssuer.type": "Role",
                    "userIdentity.type": "AssumedRole"
                }
            },
            "falsepositives": [
                "AssumeRole may be done by a system or network administrator. Verify whether the user identity, user agent, and/or hostname should be making changes in your environment.",
                "AssumeRole from unfamiliar users or hosts should be investigated. If known behavior is causing false positives, it can be exempted from the rule.",
                "Automated processes that uses Terraform may lead to false positives."
            ],
            "id": "905d389b-b853-46d0-9d3d-dea0d3a3cd49",
            "level": "low",
            "logsource": {
                "product": "aws",
                "service": "cloudtrail"
            },
            "modified": "2022/10/09",
            "references": [
                "https://github.com/elastic/detection-rules/pull/1214",
                "https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.privilege_escalation",
                "attack.t1548",
                "attack.t1550",
                "attack.t1550.001"
            ],
            "title": "AWS STS AssumeRole Misuse"
        },
        {
            "author": "Austin Songer",
            "date": "2021/09/22",
            "description": "Identifies when suspicious SAML activity has occurred in AWS. An adversary could gain backdoor access via SAML.",
            "detection": {
                "condition": "1 of selection_*",
                "selection_iam": {
                    "eventName": "UpdateSAMLProvider",
                    "eventSource": "iam.amazonaws.com"
                },
                "selection_sts": {
                    "eventName": "AssumeRoleWithSAML",
                    "eventSource": "sts.amazonaws.com"
                }
            },
            "falsepositives": [
                "Automated processes that uses Terraform may lead to false positives.",
                "SAML Provider could be updated by a system administrator. Verify whether the user identity, user agent, and/or hostname should be making changes in your environment.",
                "SAML Provider being updated from unfamiliar users should be investigated. If known behavior is causing false positives, it can be exempted from the rule."
            ],
            "id": "f43f5d2f-3f2a-4cc8-b1af-81fde7dbaf0e",
            "level": "medium",
            "logsource": {
                "product": "aws",
                "service": "cloudtrail"
            },
            "modified": "2022/12/18",
            "references": [
                "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateSAMLProvider.html",
                "https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithSAML.html"
            ],
            "status": "test",
            "tags": [
                "attack.initial_access",
                "attack.t1078",
                "attack.lateral_movement",
                "attack.t1548",
                "attack.privilege_escalation",
                "attack.t1550",
                "attack.t1550.001"
            ],
            "title": "AWS Suspicious SAML Activity"
        },
        {
            "author": "Chester Le Bron (@123Le_Bron)",
            "date": "2024/02/26",
            "description": "Detects potentially suspicious events involving \"GetSigninToken\".\nAn adversary using the \"aws_consoler\" tool can leverage this console API to create temporary federated credential that help obfuscate which AWS credential is compromised (the original access key) and enables the adversary to pivot from the AWS CLI to console sessions without the need for MFA using the new access key issued in this request.\n",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_console_ua": {
                    "userAgent|contains": "Jersey/${project.version}"
                },
                "selection": {
                    "eventName": "GetSigninToken",
                    "eventSource": "signin.amazonaws.com"
                }
            },
            "falsepositives": [
                "GetSigninToken events will occur when using AWS SSO portal to login and will generate false positives if you do not filter for the expected user agent(s), see filter. Non-SSO configured roles would be abnormal and should be investigated."
            ],
            "id": "f8103686-e3e8-46f3-be72-65f7fcb4aa53",
            "level": "medium",
            "logsource": {
                "product": "aws",
                "service": "cloudtrail"
            },
            "references": [
                "https://github.com/NetSPI/aws_consoler",
                "https://www.crowdstrike.com/blog/analysis-of-intrusion-campaign-targeting-telecom-and-bpo-companies/"
            ],
            "status": "experimental",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.007",
                "attack.t1550.001"
            ],
            "title": "AWS Console GetSigninToken Potential Abuse"
        }
    ]
}