{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--27d5bcf2-4a3b-4dee-8ff7-03a11738ffa7",
    "created": "2024-08-13T14:46:36.684307Z",
    "modified": "2024-08-13T14:46:48.608306Z",
    "name": "Network Sniffing",
    "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.Data captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as LLMNR/NBT-NS Poisoning and SMB Relay, can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.Network sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities. Adversaries may likely also utilize network sniffing during Adversary-in-the-Middle (AiTM) to passively gain additional knowledge about the environment.In cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.[1][2][3] Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.[4][5] The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.[4]On network devices, adversaries may perform network captures using Network Device CLI commands such as monitor capture.[6][7]",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1040",
            "external_id": "T1040"
        },
        {
            "source_name": "CAPEC 158",
            "external_id": "malware-behavior--a5504306-78a8-4caa-b5ff-a5a73921edae"
        },
        {
            "source_name": "CAPEC 57",
            "external_id": "malware-behavior--a608f0e6-d072-4cbe-af91-5255cfae50bc"
        },
        {
            "source_name": "CAPEC 65",
            "external_id": "malware-behavior--f5f72790-5be2-4d81-9583-62c8469c26bb"
        },
        {
            "source_name": "mitre-attack",
            "url": "https://attack.mitre.org/techniques/T1040",
            "external_id": "T1040"
        },
        {
            "source_name": "AWS Traffic Mirroring",
            "description": "Amazon Web Services. (n.d.). How Traffic Mirroring works. Retrieved March 17, 2022.",
            "url": "https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-how-it-works.html"
        },
        {
            "source_name": "capture_embedded_packet_on_software",
            "description": "Cisco. (2022, August 17). Configure and Capture Embedded Packet on Software. Retrieved July 13, 2022.",
            "url": "https://www.cisco.com/c/en/us/support/docs/ios-nx-os-software/ios-embedded-packet-capture/116045-productconfig-epc-00.html"
        },
        {
            "source_name": "GCP Packet Mirroring",
            "description": "Google Cloud. (n.d.). Packet Mirroring overview. Retrieved March 17, 2022.",
            "url": "https://cloud.google.com/vpc/docs/packet-mirroring"
        },
        {
            "source_name": "SpecterOps AWS Traffic Mirroring",
            "description": "Luke Paine. (2020, March 11). Through the Looking Glass \u2014 Part 1. Retrieved March 17, 2022.",
            "url": "https://posts.specterops.io/through-the-looking-glass-part-1-f539ae308512"
        },
        {
            "source_name": "Azure Virtual Network TAP",
            "description": "Microsoft. (2022, February 9). Virtual network TAP. Retrieved March 17, 2022.",
            "url": "https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-tap-overview"
        },
        {
            "source_name": "Rhino Security Labs AWS VPC Traffic Mirroring",
            "description": "Spencer Gietzen. (2019, September 17). Abusing VPC Traffic Mirroring in AWS. Retrieved March 17, 2022.",
            "url": "https://rhinosecuritylabs.com/aws/abusing-vpc-traffic-mirroring-in-aws/"
        },
        {
            "source_name": "US-CERT-TA18-106A",
            "description": "US-CERT. (2018, April 20). Alert (TA18-106A) Russian State-Sponsored Cyber Actors Targeting Network Infrastructure Devices. Retrieved October 19, 2020.",
            "url": "https://www.us-cert.gov/ncas/alerts/TA18-106A"
        }
    ],
    "x_mitre_capa_rules": [
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "format": "dotnet"
                            },
                            {
                                "api": "SharpPcap.LibPcap.PcapDevice::add_OnPacketArrival"
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Discovery::Network Sniffing [T1040]"
                    ],
                    "authors": [
                        "jakub.jozwiak@mandiant.com"
                    ],
                    "examples": [
                        "aefae71bca4bbaa2c013ddf040d797628c8d3da7346108c12735239a86fdfa71:0x6000038"
                    ],
                    "name": "capture packets using SharpPcap",
                    "namespace": "collection/network",
                    "references": [
                        "https://github.com/dotpcap/sharppcap"
                    ],
                    "scopes": {
                        "dynamic": "thread",
                        "static": "function"
                    }
                }
            }
        },
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "api": "fwpkclnt.FwpsCopyStreamDataToBuffer0"
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Discovery::Network Sniffing [T1040]"
                    ],
                    "authors": [
                        "michael.hunhoff@mandiant.com"
                    ],
                    "examples": [
                        "493167E85E45363D09495D0841C30648:0x404780"
                    ],
                    "name": "copy network traffic",
                    "namespace": "host-interaction/network/traffic/copy",
                    "scopes": {
                        "dynamic": "call",
                        "static": "function"
                    }
                }
            }
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "Austin Clark",
            "date": "2019/08/11",
            "description": "Show when a monitor or a span/rspan is setup or modified",
            "detection": {
                "condition": "keywords",
                "keywords": [
                    "monitor capture point",
                    "set span",
                    "set rspan"
                ]
            },
            "falsepositives": [
                "Admins may setup new or modify old spans, or use a monitor for troubleshooting"
            ],
            "fields": [
                "CmdSet"
            ],
            "id": "b9e1f193-d236-4451-aaae-2f3d2102120d",
            "level": "medium",
            "logsource": {
                "product": "cisco",
                "service": "aaa"
            },
            "modified": "2023/01/04",
            "status": "test",
            "tags": [
                "attack.credential_access",
                "attack.discovery",
                "attack.t1040"
            ],
            "title": "Cisco Sniffing"
        },
        {
            "author": "Alejandro Ortuno, oscd.community",
            "date": "2020/10/14",
            "description": "Detects the usage of tooling to sniff network traffic.\nAn adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Image|endswith": [
                        "/tcpdump",
                        "/tshark"
                    ]
                }
            },
            "falsepositives": [
                "Legitimate administration activities"
            ],
            "id": "adc9bcc4-c39c-4f6b-a711-1884017bf043",
            "level": "informational",
            "logsource": {
                "category": "process_creation",
                "product": "macos"
            },
            "modified": "2022/11/26",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1040/T1040.md"
            ],
            "status": "test",
            "tags": [
                "attack.discovery",
                "attack.credential_access",
                "attack.t1040"
            ],
            "title": "Network Sniffing - MacOs"
        },
        {
            "author": "Andreas Hunkeler (@Karneades), oscd.community",
            "date": "2020/04/20",
            "description": "Detect the harvesting of wifi credentials using netsh.exe",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains|all": [
                        "wlan",
                        " s",
                        " p",
                        " k",
                        "=clear"
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\netsh.exe"
                    },
                    {
                        "OriginalFileName": "netsh.exe"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "42b1a5b8-353f-4f10-b256-39de4467faff",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "medium",
            "modified": "2023/02/13",
            "references": [
                "https://blog.malwarebytes.com/threat-analysis/2020/04/new-agenttesla-variant-steals-wifi-credentials/"
            ],
            "status": "test",
            "tags": [
                "attack.discovery",
                "attack.credential_access",
                "attack.t1040"
            ],
            "title": "Harvesting Of Wifi Credentials Via Netsh.EXE"
        },
        {
            "author": "frack113",
            "date": "2022/03/17",
            "description": "Detects execution of PktMon, a tool that captures network packets.",
            "detection": {
                "condition": "selection",
                "selection": [
                    {
                        "Image|endswith": "\\pktmon.exe"
                    },
                    {
                        "OriginalFileName": "PktMon.exe"
                    }
                ]
            },
            "falsepositives": [
                "Legitimate use"
            ],
            "id": "f956c7c1-0f60-4bc5-b7d7-b39ab3c08908",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "medium",
            "modified": "2023/06/23",
            "references": [
                "https://lolbas-project.github.io/lolbas/Binaries/Pktmon/"
            ],
            "status": "test",
            "tags": [
                "attack.credential_access",
                "attack.t1040"
            ],
            "title": "PktMon.EXE Execution"
        },
        {
            "author": "Timur Zinniatullin, oscd.community, Nasreddine Bencherchali (Nextron Systems)",
            "date": "2019/10/21",
            "description": "Detects potential network sniffing via use of network tools such as \"tshark\", \"windump\".\nNetwork sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection.\nAn adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n",
            "detection": {
                "condition": "1 of selection_*",
                "selection_tshark": {
                    "CommandLine|contains": "-i",
                    "Image|endswith": "\\tshark.exe"
                },
                "selection_windump": {
                    "Image|endswith": "\\windump.exe"
                }
            },
            "falsepositives": [
                "Legitimate administration activity to troubleshoot network issues"
            ],
            "id": "ba1f7802-adc7-48b4-9ecb-81e227fddfd5",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "medium",
            "modified": "2023/02/20",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1040/T1040.md"
            ],
            "status": "test",
            "tags": [
                "attack.credential_access",
                "attack.discovery",
                "attack.t1040"
            ],
            "title": "Potential Network Sniffing Activity Using Network Tools"
        },
        {
            "author": "Kutepov Anton, oscd.community",
            "date": "2019/10/24",
            "description": "Detects the execution of netsh with the \"trace\" flag in order to start a network capture",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains|all": [
                        "trace",
                        "start"
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\netsh.exe"
                    },
                    {
                        "OriginalFileName": "netsh.exe"
                    }
                ]
            },
            "falsepositives": [
                "Legitimate administration activity"
            ],
            "id": "d3c3861d-c504-4c77-ba55-224ba82d0118",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "medium",
            "modified": "2023/02/13",
            "references": [
                "https://blogs.msdn.microsoft.com/canberrapfe/2012/03/30/capture-a-network-trace-without-installing-anything-capture-a-network-trace-of-a-reboot/",
                "https://klausjochem.me/2016/02/03/netsh-the-cyber-attackers-tool-of-choice/"
            ],
            "status": "test",
            "tags": [
                "attack.discovery",
                "attack.credential_access",
                "attack.t1040"
            ],
            "title": "New Network Trace Capture Started Via Netsh.EXE"
        },
        {
            "author": "Cian Heasley",
            "date": "2020/06/10",
            "description": "Detects Windows Pcap driver installation based on a list of associated .sys files.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": 4697,
                    "ServiceFileName|contains": [
                        "pcap",
                        "npcap",
                        "npf",
                        "nm3",
                        "ndiscap",
                        "nmnt",
                        "windivert",
                        "USBPcap",
                        "pktmon"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "fields": [
                "EventID",
                "ServiceFileName",
                "Account_Name",
                "Computer_Name",
                "Originating_Computer",
                "ServiceName"
            ],
            "id": "7b687634-ab20-11ea-bb37-0242ac130002",
            "level": "medium",
            "logsource": {
                "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697",
                "product": "windows",
                "service": "security"
            },
            "modified": "2023/04/14",
            "status": "test",
            "references": [
                "https://ragged-lab.blogspot.com/2020/06/capturing-pcap-driver-installations.html#more"
            ],
            "tags": [
                "attack.discovery",
                "attack.credential_access",
                "attack.t1040"
            ],
            "title": "Windows Pcap Drivers"
        },
        {
            "author": "frack113",
            "date": "2024/05/12",
            "description": "Detects the execution of powershell scripts with calls to the \"Start-NetEventSession\" cmdlet. Which allows an attacker to start event and packet capture for a network event session.\nAdversaries may attempt to capture network to gather information over the course of an operation.\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol.\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "ScriptBlockText|contains": "Start-NetEventSession"
                }
            },
            "falsepositives": [
                "Legitimate network diagnostic scripts."
            ],
            "id": "da34e323-1e65-42db-83be-a6725ac2caa3",
            "logsource": {
                "category": "ps_script",
                "product": "windows",
                "definition": "Requirements: Script Block Logging must be enabled"
            },
            "level": "medium",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/5f866ca4517e837c4ea576e7309d0891e78080a8/atomics/T1040/T1040.md#atomic-test-16---powershell-network-sniffing",
                "https://github.com/0xsyr0/Awesome-Cybersecurity-Handbooks/blob/7b8935fe4c82cb64d61343de1a8b2e38dd968534/handbooks/10_post_exploitation.md",
                "https://github.com/forgottentq/powershell/blob/9e616363d497143dc955c4fdce68e5c18d28a6cb/captureWindows-Endpoint.ps1#L13"
            ],
            "status": "experimental",
            "title": "Potential Packet Capture Activity Via Start-NetEventSession - ScriptBlock",
            "tags": [
                "attack.credential_access",
                "attack.discovery",
                "attack.t1040"
            ]
        },
        {
            "author": "Timur Zinniatullin, oscd.community",
            "date": "2019/10/21",
            "description": "Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection.\nAn adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n",
            "detection": {
                "condition": "1 of selection_*",
                "selection_1": {
                    "a0": "tcpdump",
                    "a1": "-c",
                    "a3|contains": "-i",
                    "type": "execve"
                },
                "selection_2": {
                    "a0": "tshark",
                    "a1": "-c",
                    "a3": "-i",
                    "type": "execve"
                }
            },
            "falsepositives": [
                "Legitimate administrator or user uses network sniffing tool for legitimate reasons."
            ],
            "id": "f4d3748a-65d1-4806-bd23-e25728081d01",
            "level": "low",
            "logsource": {
                "product": "linux",
                "service": "auditd"
            },
            "modified": "2022/12/18",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1040/T1040.md"
            ],
            "status": "test",
            "tags": [
                "attack.credential_access",
                "attack.discovery",
                "attack.t1040"
            ],
            "title": "Network Sniffing - Linux"
        }
    ],
    "x_mitre_platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network",
        "IaaS"
    ],
    "x_mitre_domains": [
        "enterprise-attack"
    ],
    "x_mitre_contributors": [
        "Oleg Kolesnikov, Securonix",
        "Tiago Faria, 3CORESec",
        "Austin Clark, @c2defense",
        "Itamar Mizrahi, Cymptom",
        "Eliraz Levi, Hunters"
    ],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "credential-access"
        },
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "discovery"
        }
    ],
    "x_mitre_detection": "Detecting the events leading up to sniffing network traffic may be the best method of detection. From the host level, an adversary would likely need to perform a [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) attack against other devices on a wired network in order to capture traffic that was not to or from the current compromised system. This change in the flow of information is detectable at the enclave network level. Monitor for ARP spoofing and gratuitous ARP broadcasts. Detecting compromised network devices is a bit more challenging. Auditing administrator logins, configuration changes, and device images is required to detect malicious changes.\n\nIn cloud-based environments, monitor for the creation of new traffic mirrors or modification of existing traffic mirrors. For network infrastructure devices, collect AAA logging to monitor for the capture of network traffic.",
    "x_mitre_is_subtechnique": false,
    "x_mitre_version": "1.6",
    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
    "x_mitre_data_sources": [
        "Command: Command Execution",
        "Process: Process Creation"
    ],
    "x_mitre_permissions_required": []
}