{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--01c15da3-9f86-4d0a-aab5-fcee81a9c282",
    "created": "2024-08-13T14:46:37.093078Z",
    "modified": "2024-08-13T14:46:45.964054Z",
    "name": "Direct Volume Access",
    "description": "Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique may bypass Windows file access controls as well as file system monitoring tools. [1]Utilities, such as NinjaCopy, exist to perform these actions in PowerShell.[2] Adversaries may also use built-in or third-party utilities (such as vssadmin, wbadmin, and esentutl) to create shadow copies or backups of data from system volumes.[3]",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1006",
            "external_id": "T1006"
        },
        {
            "source_name": "mitre-attack",
            "url": "https://attack.mitre.org/techniques/T1006",
            "external_id": "T1006"
        },
        {
            "source_name": "Github PowerSploit Ninjacopy",
            "description": "Bialek, J. (2015, December 16). Invoke-NinjaCopy.ps1. Retrieved June 2, 2016.",
            "url": "https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Invoke-NinjaCopy.ps1"
        },
        {
            "source_name": "Hakobyan 2009",
            "description": "Hakobyan, A. (2009, January 8). FDump - Dumping File Sectors Directly from Disk using Logical Offsets. Retrieved November 12, 2014.",
            "url": "http://www.codeproject.com/Articles/32169/FDump-Dumping-File-Sectors-Directly-from-Disk-usin"
        },
        {
            "source_name": "LOLBAS Esentutl",
            "description": "LOLBAS. (n.d.). Esentutl.exe. Retrieved September 3, 2019.",
            "url": "https://lolbas-project.github.io/lolbas/Binaries/Esentutl/"
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "Teymur Kheirkhabarov, oscd.community",
            "date": "2019/10/22",
            "description": "Detects raw disk access using uncommon tools or tools that are located in suspicious locations (heavy filtering is required), which could indicate possible defense evasion attempts",
            "detection": {
                "condition": "not 1 of filter_main_* and not 1 of filter_optional_*",
                "filter_main_floppy": {
                    "Device|contains": "floppy"
                },
                "filter_main_generic": {
                    "Image|contains": [
                        ":\\$WINDOWS.~BT\\",
                        ":\\Program Files (x86)\\",
                        ":\\Program Files\\",
                        ":\\Windows\\CCM\\",
                        ":\\Windows\\explorer.exe",
                        ":\\Windows\\servicing\\",
                        ":\\Windows\\SoftwareDistribution\\",
                        ":\\Windows\\System32\\",
                        ":\\Windows\\SystemApps\\",
                        ":\\Windows\\uus\\",
                        ":\\Windows\\WinSxS\\"
                    ]
                },
                "filter_main_microsoft_appdata": {
                    "Image|contains|all": [
                        ":\\Users\\",
                        "\\AppData\\",
                        "\\Microsoft\\"
                    ]
                },
                "filter_main_null": {
                    "Image": null
                },
                "filter_main_ssd_nvme": {
                    "Image|contains": ":\\Windows\\Temp\\",
                    "Image|endswith": [
                        "\\Executables\\SSDUpdate.exe",
                        "\\HostMetadata\\NVMEHostmetadata.exe"
                    ]
                },
                "filter_main_system_images": {
                    "Image": [
                        "Registry",
                        "System"
                    ]
                },
                "filter_main_systemsettings": {
                    "Image|endswith": ":\\Windows\\ImmersiveControlPanel\\SystemSettings.exe"
                },
                "filter_main_windefender": {
                    "Image|contains": ":\\ProgramData\\Microsoft\\Windows Defender\\Platform\\",
                    "Image|endswith": "\\MsMpEng.exe"
                },
                "filter_optional_Keybase": {
                    "Image|contains": "\\AppData\\Local\\Keybase\\upd.exe"
                },
                "filter_optional_github_desktop": {
                    "Image|contains": "\\AppData\\Local\\GitHubDesktop\\app-",
                    "Image|endswith": "\\resources\\app\\git\\mingw64\\bin\\git.exe"
                },
                "filter_optional_nextron": {
                    "Image|contains": ":\\Windows\\Temp\\asgard2-agent\\",
                    "Image|endswith": "\\thor.exe"
                }
            },
            "falsepositives": [
                "Likely"
            ],
            "id": "db809f10-56ce-4420-8c86-d6a7d793c79c",
            "level": "low",
            "logsource": {
                "category": "raw_access_thread",
                "product": "windows"
            },
            "modified": "2023/11/28",
            "references": [
                "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1006"
            ],
            "title": "Potential Defense Evasion Via Raw Disk Access By Uncommon Tools"
        }
    ],
    "x_mitre_platforms": [
        "Windows",
        "Network"
    ],
    "x_mitre_domains": [
        "enterprise-attack"
    ],
    "x_mitre_contributors": [
        "Tom Simpson, CrowdStrike Falcon OverWatch"
    ],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "defense-evasion"
        }
    ],
    "x_mitre_detection": "Monitor handle opens on drive volumes that are made by processes to determine when they may directly access logical drives. (Citation: Github PowerSploit Ninjacopy)\n\nMonitor processes and command-line arguments for actions that could be taken to copy files from the logical drive and evade common file system protections. Since this technique may also be used through [PowerShell](https://attack.mitre.org/techniques/T1059/001), additional logging of PowerShell scripts is recommended.",
    "x_mitre_is_subtechnique": false,
    "x_mitre_version": "2.2",
    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
    "x_mitre_data_sources": [
        "File: File Creation",
        "Drive: Drive Access",
        "Command: Command Execution"
    ],
    "x_mitre_permissions_required": []
}