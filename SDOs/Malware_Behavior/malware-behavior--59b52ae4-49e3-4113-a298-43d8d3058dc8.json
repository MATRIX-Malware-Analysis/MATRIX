{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--59b52ae4-49e3-4113-a298-43d8d3058dc8",
    "created": "2024-08-13T14:46:37.035482Z",
    "modified": "2024-08-13T14:46:48.549771Z",
    "name": "Access Token Manipulation: Parent PID Spoofing",
    "description": "Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via the CreateProcess API call, which supports a parameter that defines the PPID to use.[1] This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically via svchost.exe or consent.exe) rather than the current user context.[2]Adversaries may abuse these mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of PowerShell/Rundll32 to be explorer.exe rather than an Office document delivered as part of Spearphishing Attachment.[3] This spoofing could be executed via Visual Basic within a malicious Office document or any code that can perform Native API.[4][3]Explicitly assigning the PPID may also enable elevated privileges given appropriate access rights to the parent process. For example, an adversary in a privileged user context (i.e. administrator) may spawn a new process and assign the parent as a process running as SYSTEM (such as lsass.exe), causing the new process to be elevated via the inherited access token.[5]",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1134/004",
            "external_id": "T1134/004"
        }
    ],
    "x_mitre_capa_rules": [
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "api": "kernel32.UpdateProcThreadAttribute"
                            },
                            {
                                "number": "0x20000 = PROC_THREAD_ATTRIBUTE_PARENT_PROCESS"
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Defense Evasion::Access Token Manipulation::Parent PID Spoofing [T1134.004]"
                    ],
                    "authors": [
                        "michael.hunhoff@mandiant.com"
                    ],
                    "examples": [
                        "2ebadd04f0ada89c36c1409b6e96423a68dd77b513db8db3da203c36d3753e5f:0x140002291"
                    ],
                    "name": "spoof parent PID",
                    "namespace": "anti-analysis/anti-forensic",
                    "references": [
                        "https://blog.f-secure.com/detecting-parent-pid-spoofing/"
                    ],
                    "scopes": {
                        "dynamic": "call",
                        "static": "basic block"
                    }
                }
            }
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2022/07/23",
            "description": "Detects the use of parent process ID spoofing tools like Didier Stevens tool SelectMyParent",
            "detection": {
                "condition": "selection",
                "selection": [
                    {
                        "Image|endswith": "\\SelectMyParent.exe"
                    },
                    {
                        "CommandLine|contains": [
                            "PPID-spoof",
                            "ppid_spoof",
                            "spoof-ppid",
                            "spoof_ppid",
                            "ppidspoof",
                            "spoofppid",
                            "spoofedppid",
                            " -spawnto "
                        ]
                    },
                    {
                        "OriginalFileName|contains": [
                            "PPID-spoof",
                            "ppid_spoof",
                            "spoof-ppid",
                            "spoof_ppid",
                            "ppidspoof",
                            "spoofppid",
                            "spoofedppid"
                        ]
                    },
                    {
                        "Description": "SelectMyParent"
                    },
                    {
                        "Imphash": [
                            "04d974875bd225f00902b4cad9af3fbc",
                            "a782af154c9e743ddf3f3eb2b8f3d16e",
                            "89059503d7fbf470e68f7e63313da3ad",
                            "ca28337632625c8281ab8a130b3d6bad"
                        ]
                    },
                    {
                        "Hashes|contains": [
                            "IMPHASH=04D974875BD225F00902B4CAD9AF3FBC",
                            "IMPHASH=A782AF154C9E743DDF3F3EB2B8F3D16E",
                            "IMPHASH=89059503D7FBF470E68F7E63313DA3AD",
                            "IMPHASH=CA28337632625C8281AB8A130B3D6BAD"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "52ff7941-8211-46f9-84f8-9903efb7077d",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/03/07",
            "references": [
                "https://pentestlab.blog/2020/02/24/parent-pid-spoofing/",
                "https://www.picussecurity.com/resource/blog/how-to-detect-parent-pid-ppid-spoofing-attacks",
                "https://www.ired.team/offensive-security/defense-evasion/parent-process-id-ppid-spoofing",
                "https://www.virustotal.com/gui/search/filename%253A*spoof*%2520filename%253A*ppid*/files"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1134.004"
            ],
            "title": "HackTool - PPID Spoofing SelectMyParent Tool Execution"
        }
    ]
}