{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--fcafb3ac-50a9-49db-bf24-0fdcfb5a8936",
    "created": "2024-08-13T14:46:37.045153Z",
    "modified": "2024-08-13T14:46:48.564691Z",
    "name": "Hijack Execution Flow",
    "description": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.There are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1574",
            "external_id": "T1574"
        },
        {
            "source_name": "mitre-attack",
            "url": "https://attack.mitre.org/techniques/T1574",
            "external_id": "T1574"
        },
        {
            "source_name": "Autoruns for Windows",
            "description": "Mark Russinovich. (2019, June 28). Autoruns for Windows v13.96. Retrieved March 13, 2020.",
            "url": "https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns"
        }
    ],
    "x_mitre_capa_rules": [
        {
            "rule": {
                "features": [
                    {
                        "or": [
                            {
                                "section": ".detourc"
                            },
                            {
                                "section": ".detourd"
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Defense Evasion::Hijack Execution Flow [T1574]"
                    ],
                    "authors": [
                        "moritz.raabe@mandiant.com"
                    ],
                    "examples": [
                        "071F2D1C4C2201EE95FFE2AA965000F5F615A11A12D345E33B9FB060E5597740"
                    ],
                    "name": "linked against Microsoft Detours",
                    "namespace": "linking/static/msdetours",
                    "references": [
                        "https://github.com/microsoft/Detours"
                    ],
                    "scopes": {
                        "dynamic": "file",
                        "static": "file"
                    }
                }
            }
        },
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "format": "dotnet"
                            },
                            {
                                "class": "System.AppDomainManager"
                            },
                            {
                                "class": "System.AppDomainSetup"
                            },
                            {
                                "or": [
                                    {
                                        "string": "InitializeNewDomain"
                                    },
                                    {
                                        "string": "CreateDomain"
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Persistence::Hijack Execution Flow [T1574]"
                    ],
                    "authors": [
                        "jakub.jozwiak@mandiant.com"
                    ],
                    "examples": [
                        "6f6acca4d3696e08af9ed80f237f3542c362ebc2bcc9759bb64aa3f5c007320e"
                    ],
                    "mbc": [
                        "Persistence::Hijack Execution Flow [F0015]"
                    ],
                    "name": "create new application domain in .NET",
                    "namespace": "host-interaction/memory",
                    "references": [
                        "https://learn.microsoft.com/en-us/dotnet/framework/app-domains/application-domains",
                        "https://www.rapid7.com/blog/post/2023/05/05/appdomain-manager-injection-new-techniques-for-red-teams/"
                    ],
                    "scopes": {
                        "dynamic": "unsupported",
                        "static": "file"
                    }
                }
            }
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "oscd.community, Dmitry Uchakin",
            "date": "2020/10/06",
            "description": "Attempts to load dismcore.dll after dropping it",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "ImageLoaded": "C:\\Windows\\System32\\Dism\\dismcore.dll"
                },
                "selection": {
                    "ImageLoaded|endswith": "\\dismcore.dll",
                    "Image|endswith": "\\dism.exe"
                }
            },
            "falsepositives": [
                "Actions of a legitimate telnet client"
            ],
            "id": "a5ea83a7-05a5-44c1-be2e-addccbbd8c03",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2022/12/25",
            "references": [
                "https://steemit.com/utopian-io/@ah101/uac-bypassing-utility"
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1548.002",
                "attack.t1574.002"
            ],
            "title": "UAC Bypass With Fake DLL"
        },
        {
            "author": "frack113",
            "date": "2022/12/13",
            "description": "Detects potential DLL sideloading using ClassicExplorer32.dll from the Classic Shell software",
            "detection": {
                "condition": "selection_classicexplorer and not filter_classicexplorer",
                "filter_classicexplorer": {
                    "ImageLoaded|startswith": "C:\\Program Files\\Classic Shell\\"
                },
                "selection_classicexplorer": {
                    "ImageLoaded|endswith": "\\ClassicExplorer32.dll"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "caa02837-f659-466f-bca6-48bde2826ab4",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://blogs.blackberry.com/en/2022/12/mustang-panda-uses-the-russian-ukrainian-war-to-attack-europe-and-asia-pacific-targets",
                "https://app.any.run/tasks/6d8cabb0-dcda-44b6-8050-28d6ce281687/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential DLL Sideloading Via ClassicExplorer32.dll"
        },
        {
            "author": "X__Junior (Nextron Systems)",
            "date": "2023/07/13",
            "description": "Detects potential DLL sideloading of \"CCleanerDU.dll\"",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_path": {
                    "Image|endswith": [
                        "\\CCleaner.exe",
                        "\\CCleaner64.exe"
                    ],
                    "Image|startswith": [
                        "C:\\Program Files\\CCleaner\\",
                        "C:\\Program Files (x86)\\CCleaner\\"
                    ]
                },
                "selection": {
                    "ImageLoaded|endswith": "\\CCleanerDU.dll"
                }
            },
            "falsepositives": [
                "False positives could occur from other custom installation paths. Apply additional filters accordingly."
            ],
            "id": "1fbc0671-5596-4e17-8682-f020a0b995dc",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://lab52.io/blog/2344-2/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential CCleanerDU.DLL Sideloading"
        },
        {
            "author": "X__Junior (Nextron Systems)",
            "date": "2023/08/03",
            "description": "Detects potential DLL sideloading of \"EACore.dll\"",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_legit_path": {
                    "ImageLoaded|startswith": "C:\\Program Files\\Electronic Arts\\EA Desktop\\",
                    "Image|contains|all": [
                        "C:\\Program Files\\Electronic Arts\\EA Desktop\\",
                        "\\EACoreServer.exe"
                    ]
                },
                "selection": {
                    "ImageLoaded|endswith": "\\EACore.dll"
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "edd3ddc3-386f-4ba5-9ada-4376b2cfa7b5",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://research.checkpoint.com/2023/beyond-the-horizon-traveling-the-world-on-camaro-dragons-usb-flash-drives/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential EACore.DLL Sideloading"
        },
        {
            "author": "X__Junior (Nextron Systems)",
            "date": "2023/05/07",
            "description": "Detects potential DLL sideloading of \"SolidPDFCreator.dll\"",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_path": {
                    "ImageLoaded|startswith": [
                        "C:\\Program Files (x86)\\SolidDocuments\\SolidPDFCreator\\",
                        "C:\\Program Files\\SolidDocuments\\SolidPDFCreator\\"
                    ],
                    "Image|endswith": "\\SolidPDFCreator.exe"
                },
                "selection": {
                    "ImageLoaded|endswith": "\\SolidPDFCreator.dll"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "a2edbce1-95c8-4291-8676-0d45146862b3",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://lab52.io/blog/new-mustang-pandas-campaing-against-australia/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential SolidPDFCreator.DLL Sideloading"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)",
            "date": "2022/08/17",
            "description": "Detects DLL sideloading of DLLs that are part of Microsoft Office from non standard location",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "ImageLoaded|startswith": [
                        "C:\\Program Files\\Microsoft Office\\OFFICE",
                        "C:\\Program Files (x86)\\Microsoft Office\\OFFICE",
                        "C:\\Program Files\\Microsoft Office\\Root\\OFFICE",
                        "C:\\Program Files (x86)\\Microsoft Office\\Root\\OFFICE"
                    ]
                },
                "selection": {
                    "ImageLoaded|endswith": "\\outllib.dll"
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "829a3bdf-34da-4051-9cf4-8ed221a8ae4f",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2023/03/15",
            "references": [
                "https://hijacklibs.net/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Microsoft Office DLL Sideload"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/05/05",
            "description": "Detects potential DLL sideloading of \"libcurl.dll\" by the \"gup.exe\" process from an uncommon location",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_notepad_plusplus": {
                    "Image|endswith": "\\Notepad++\\updater\\GUP.exe"
                },
                "selection": {
                    "ImageLoaded|endswith": "\\libcurl.dll",
                    "Image|endswith": "\\gup.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "e49b5745-1064-4ac1-9a2e-f687bc2dd37e",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://labs.withsecure.com/publications/fin7-target-veeam-servers"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential DLL Sideloading Of Libcurl.DLL Via GUP.EXE"
        },
        {
            "author": "X__Junior (Nextron Systems)",
            "date": "2023/06/20",
            "description": "Detects potential DLL sideloading of \"ShellDispatch.dll\"",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_legit_path": [
                    {
                        "ImageLoaded|contains|all": [
                            ":\\Users\\",
                            "\\AppData\\Local\\Temp\\"
                        ]
                    },
                    {
                        "ImageLoaded|contains": ":\\Windows\\Temp\\"
                    }
                ],
                "selection": {
                    "ImageLoaded|endswith": "\\ShellDispatch.dll"
                }
            },
            "falsepositives": [
                "Some installers may trigger some false positives"
            ],
            "id": "844f8eb2-610b-42c8-89a4-47596e089663",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://www.hexacorn.com/blog/2023/06/07/this-lolbin-doesnt-exist/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential ShellDispatch.DLL Sideloading"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/08/14",
            "description": "Detects DLL sideloading of DLLs usually located in system locations (System32, SysWOW64, etc.).",
            "detection": {
                "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*",
                "filter_main_defender": {
                    "ImageLoaded|endswith": "\\version.dll",
                    "ImageLoaded|startswith": "C:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\"
                },
                "filter_main_directx": {
                    "ImageLoaded|endswith": "\\d3dx9_43.dll",
                    "ImageLoaded|startswith": "C:\\Program Files\\WindowsApps\\Microsoft.DirectXRuntime_"
                },
                "filter_main_dot_net": {
                    "ImageLoaded|endswith": "\\cscui.dll",
                    "ImageLoaded|startswith": "C:\\Windows\\Microsoft.NET\\"
                },
                "filter_main_generic": {
                    "ImageLoaded|contains": [
                        "C:\\$WINDOWS.~BT\\",
                        "C:\\$WinREAgent\\",
                        "C:\\Windows\\SoftwareDistribution\\",
                        "C:\\Windows\\System32\\",
                        "C:\\Windows\\SystemTemp\\",
                        "C:\\Windows\\SysWOW64\\",
                        "C:\\Windows\\WinSxS\\"
                    ]
                },
                "filter_optional_arsenal_image_mounter": {
                    "ImageLoaded|endswith": [
                        "\\mi.dll",
                        "\\miutils.dl"
                    ],
                    "ImageLoaded|startswith": "C:\\Program Files\\Arsenal-Image-Mounter-"
                },
                "filter_optional_azure": {
                    "ImageLoaded|startswith": "C:\\Packages\\Plugins\\Microsoft.GuestConfiguration.ConfigurationforWindows\\"
                },
                "filter_optional_checkpoint": {
                    "ImageLoaded|endswith": "\\PolicyManager.dll",
                    "ImageLoaded|startswith": [
                        "C:\\Program Files\\CheckPoint\\",
                        "C:\\Program Files (x86)\\CheckPoint\\"
                    ],
                    "Image|endswith": "\\SmartConsole.exe",
                    "Image|startswith": [
                        "C:\\Program Files\\CheckPoint\\",
                        "C:\\Program Files (x86)\\CheckPoint\\"
                    ]
                },
                "filter_optional_dell": {
                    "ImageLoaded|startswith": "C:\\Program Files\\WindowsApps\\DellInc.DellSupportAssistforPCs",
                    "Image|contains": [
                        "C:\\Program Files\\WindowsApps\\DellInc.DellSupportAssistforPCs",
                        "C:\\Windows\\System32\\backgroundTaskHost.exe"
                    ]
                },
                "filter_optional_dell_wldp": {
                    "Image|endswith": "\\wldp.dll",
                    "Image|startswith": "C:\\Program Files\\WindowsApps\\DellInc.DellSupportAssistforPCs"
                },
                "filter_optional_exchange": {
                    "ImageLoaded|endswith": "\\mswb7.dll",
                    "ImageLoaded|startswith": "C:\\Program Files\\Microsoft\\Exchange Server\\"
                },
                "filter_optional_office_appvpolicy": {
                    "Image": "C:\\Program Files\\Common Files\\microsoft shared\\ClickToRun\\OfficeClickToRun.exe",
                    "ImageLoaded": "C:\\Program Files\\Common Files\\microsoft shared\\ClickToRun\\AppVPolicy.dll"
                },
                "selection": {
                    "ImageLoaded|endswith": [
                        "\\aclui.dll",
                        "\\activeds.dll",
                        "\\adsldpc.dll",
                        "\\aepic.dll",
                        "\\apphelp.dll",
                        "\\applicationframe.dll",
                        "\\appvpolicy.dll",
                        "\\appxalluserstore.dll",
                        "\\appxdeploymentclient.dll",
                        "\\archiveint.dll",
                        "\\atl.dll",
                        "\\audioses.dll",
                        "\\auditpolcore.dll",
                        "\\authfwcfg.dll",
                        "\\authz.dll",
                        "\\avrt.dll",
                        "\\batmeter.dll",
                        "\\bcd.dll",
                        "\\bcp47langs.dll",
                        "\\bcp47mrm.dll",
                        "\\bcrypt.dll",
                        "\\bderepair.dll",
                        "\\bootmenuux.dll",
                        "\\bootux.dll",
                        "\\cabinet.dll",
                        "\\cabview.dll",
                        "\\certcli.dll",
                        "\\certenroll.dll",
                        "\\cfgmgr32.dll",
                        "\\cldapi.dll",
                        "\\clipc.dll",
                        "\\clusapi.dll",
                        "\\cmpbk32.dll",
                        "\\cmutil.dll",
                        "\\coloradapterclient.dll",
                        "\\colorui.dll",
                        "\\comdlg32.dll",
                        "\\configmanager2.dll",
                        "\\connect.dll",
                        "\\coredplus.dll",
                        "\\coremessaging.dll",
                        "\\coreuicomponents.dll",
                        "\\credui.dll",
                        "\\cryptbase.dll",
                        "\\cryptdll.dll",
                        "\\cryptsp.dll",
                        "\\cryptui.dll",
                        "\\cryptxml.dll",
                        "\\cscapi.dll",
                        "\\cscobj.dll",
                        "\\cscui.dll",
                        "\\d2d1.dll",
                        "\\d3d10_1.dll",
                        "\\d3d10_1core.dll",
                        "\\d3d10.dll",
                        "\\d3d10core.dll",
                        "\\d3d10warp.dll",
                        "\\d3d11.dll",
                        "\\d3d12.dll",
                        "\\d3d9.dll",
                        "\\d3dx9_43.dll",
                        "\\dataexchange.dll",
                        "\\davclnt.dll",
                        "\\dcntel.dll",
                        "\\dcomp.dll",
                        "\\defragproxy.dll",
                        "\\desktopshellext.dll",
                        "\\deviceassociation.dll",
                        "\\devicecredential.dll",
                        "\\devicepairing.dll",
                        "\\devobj.dll",
                        "\\devrtl.dll",
                        "\\dhcpcmonitor.dll",
                        "\\dhcpcsvc.dll",
                        "\\dhcpcsvc6.dll",
                        "\\directmanipulation.dll",
                        "\\dismapi.dll",
                        "\\dismcore.dll",
                        "\\dmcfgutils.dll",
                        "\\dmcmnutils.dll",
                        "\\dmcommandlineutils.dll",
                        "\\dmenrollengine.dll",
                        "\\dmenterprisediagnostics.dll",
                        "\\dmiso8601utils.dll",
                        "\\dmoleaututils.dll",
                        "\\dmprocessxmlfiltered.dll",
                        "\\dmpushproxy.dll",
                        "\\dmxmlhelputils.dll",
                        "\\dnsapi.dll",
                        "\\dot3api.dll",
                        "\\dot3cfg.dll",
                        "\\dpx.dll",
                        "\\drprov.dll",
                        "\\drvstore.dll",
                        "\\dsclient.dll",
                        "\\dsparse.dll",
                        "\\dsprop.dll",
                        "\\dsreg.dll",
                        "\\dsrole.dll",
                        "\\dui70.dll",
                        "\\duser.dll",
                        "\\dusmapi.dll",
                        "\\dwmapi.dll",
                        "\\dwmcore.dll",
                        "\\dwrite.dll",
                        "\\dxcore.dll",
                        "\\dxgi.dll",
                        "\\dxva2.dll",
                        "\\dynamoapi.dll",
                        "\\eappcfg.dll",
                        "\\eappprxy.dll",
                        "\\edgeiso.dll",
                        "\\edputil.dll",
                        "\\efsadu.dll",
                        "\\efsutil.dll",
                        "\\esent.dll",
                        "\\execmodelproxy.dll",
                        "\\explorerframe.dll",
                        "\\fastprox.dll",
                        "\\faultrep.dll",
                        "\\fddevquery.dll",
                        "\\feclient.dll",
                        "\\fhcfg.dll",
                        "\\fhsvcctl.dll",
                        "\\firewallapi.dll",
                        "\\flightsettings.dll",
                        "\\fltlib.dll",
                        "\\framedynos.dll",
                        "\\fveapi.dll",
                        "\\fveskybackup.dll",
                        "\\fvewiz.dll",
                        "\\fwbase.dll",
                        "\\fwcfg.dll",
                        "\\fwpolicyiomgr.dll",
                        "\\fwpuclnt.dll",
                        "\\fxsapi.dll",
                        "\\fxsst.dll",
                        "\\fxstiff.dll",
                        "\\getuname.dll",
                        "\\gpapi.dll",
                        "\\hid.dll",
                        "\\hnetmon.dll",
                        "\\httpapi.dll",
                        "\\icmp.dll",
                        "\\idstore.dll",
                        "\\ieadvpack.dll",
                        "\\iedkcs32.dll",
                        "\\iernonce.dll",
                        "\\iertutil.dll",
                        "\\ifmon.dll",
                        "\\ifsutil.dll",
                        "\\inproclogger.dll",
                        "\\iphlpapi.dll",
                        "\\iri.dll",
                        "\\iscsidsc.dll",
                        "\\iscsium.dll",
                        "\\isv.exe_rsaenh.dll",
                        "\\iumbase.dll",
                        "\\iumsdk.dll",
                        "\\joinutil.dll",
                        "\\kdstub.dll",
                        "\\ksuser.dll",
                        "\\ktmw32.dll",
                        "\\licensemanagerapi.dll",
                        "\\licensingdiagspp.dll",
                        "\\linkinfo.dll",
                        "\\loadperf.dll",
                        "\\lockhostingframework.dll",
                        "\\logoncli.dll",
                        "\\logoncontroller.dll",
                        "\\lpksetupproxyserv.dll",
                        "\\lrwizdll.dll",
                        "\\magnification.dll",
                        "\\maintenanceui.dll",
                        "\\mapistub.dll",
                        "\\mbaexmlparser.dll",
                        "\\mdmdiagnostics.dll",
                        "\\mfc42u.dll",
                        "\\mfcore.dll",
                        "\\mfplat.dll",
                        "\\mi.dll",
                        "\\midimap.dll",
                        "\\mintdh.dll",
                        "\\miutils.dll",
                        "\\mlang.dll",
                        "\\mmdevapi.dll",
                        "\\mobilenetworking.dll",
                        "\\mpr.dll",
                        "\\mprapi.dll",
                        "\\mrmcorer.dll",
                        "\\msacm32.dll",
                        "\\mscms.dll",
                        "\\mscoree.dll",
                        "\\msctf.dll",
                        "\\msctfmonitor.dll",
                        "\\msdrm.dll",
                        "\\msdtctm.dll",
                        "\\msftedit.dll",
                        "\\msi.dll",
                        "\\msiso.dll",
                        "\\msutb.dll",
                        "\\msvcp110_win.dll",
                        "\\mswb7.dll",
                        "\\mswsock.dll",
                        "\\msxml3.dll",
                        "\\mtxclu.dll",
                        "\\napinsp.dll",
                        "\\ncrypt.dll",
                        "\\ndfapi.dll",
                        "\\netapi32.dll",
                        "\\netid.dll",
                        "\\netiohlp.dll",
                        "\\netjoin.dll",
                        "\\netplwiz.dll",
                        "\\netprofm.dll",
                        "\\netprovfw.dll",
                        "\\netsetupapi.dll",
                        "\\netshell.dll",
                        "\\nettrace.dll",
                        "\\netutils.dll",
                        "\\networkexplorer.dll",
                        "\\newdev.dll",
                        "\\ninput.dll",
                        "\\nlaapi.dll",
                        "\\nlansp_c.dll",
                        "\\npmproxy.dll",
                        "\\nshhttp.dll",
                        "\\nshipsec.dll",
                        "\\nshwfp.dll",
                        "\\ntdsapi.dll",
                        "\\ntlanman.dll",
                        "\\ntlmshared.dll",
                        "\\ntmarta.dll",
                        "\\ntshrui.dll",
                        "\\oleacc.dll",
                        "\\omadmapi.dll",
                        "\\onex.dll",
                        "\\opcservices.dll",
                        "\\osbaseln.dll",
                        "\\osksupport.dll",
                        "\\osuninst.dll",
                        "\\p2p.dll",
                        "\\p2pnetsh.dll",
                        "\\p9np.dll",
                        "\\pcaui.dll",
                        "\\pdh.dll",
                        "\\peerdistsh.dll",
                        "\\pkeyhelper.dll",
                        "\\pla.dll",
                        "\\playsndsrv.dll",
                        "\\pnrpnsp.dll",
                        "\\policymanager.dll",
                        "\\polstore.dll",
                        "\\powrprof.dll",
                        "\\printui.dll",
                        "\\prntvpt.dll",
                        "\\profapi.dll",
                        "\\propsys.dll",
                        "\\proximitycommon.dll",
                        "\\proximityservicepal.dll",
                        "\\prvdmofcomp.dll",
                        "\\puiapi.dll",
                        "\\radcui.dll",
                        "\\rasapi32.dll",
                        "\\rasdlg.dll",
                        "\\rasgcw.dll",
                        "\\rasman.dll",
                        "\\rasmontr.dll",
                        "\\reagent.dll",
                        "\\regapi.dll",
                        "\\reseteng.dll",
                        "\\resetengine.dll",
                        "\\resutils.dll",
                        "\\rmclient.dll",
                        "\\rpcnsh.dll",
                        "\\rsaenh.dll",
                        "\\rtutils.dll",
                        "\\rtworkq.dll",
                        "\\samcli.dll",
                        "\\samlib.dll",
                        "\\sapi_onecore.dll",
                        "\\sas.dll",
                        "\\scansetting.dll",
                        "\\scecli.dll",
                        "\\schedcli.dll",
                        "\\secur32.dll",
                        "\\security.dll",
                        "\\sensapi.dll",
                        "\\shell32.dll",
                        "\\shfolder.dll",
                        "\\slc.dll",
                        "\\snmpapi.dll",
                        "\\spectrumsyncclient.dll",
                        "\\spp.dll",
                        "\\sppc.dll",
                        "\\sppcext.dll",
                        "\\srclient.dll",
                        "\\srcore.dll",
                        "\\srmtrace.dll",
                        "\\srpapi.dll",
                        "\\srvcli.dll",
                        "\\ssp_isv.exe_rsaenh.dll",
                        "\\ssp.exe_rsaenh.dll",
                        "\\sspicli.dll",
                        "\\ssshim.dll",
                        "\\staterepository.core.dll",
                        "\\structuredquery.dll",
                        "\\sxshared.dll",
                        "\\systemsettingsthresholdadminflowui.dll",
                        "\\tapi32.dll",
                        "\\tbs.dll",
                        "\\tdh.dll",
                        "\\textshaping.dll",
                        "\\timesync.dll",
                        "\\tpmcoreprovisioning.dll",
                        "\\tquery.dll",
                        "\\tsworkspace.dll",
                        "\\ttdrecord.dll",
                        "\\twext.dll",
                        "\\twinapi.dll",
                        "\\twinui.appcore.dll",
                        "\\uianimation.dll",
                        "\\uiautomationcore.dll",
                        "\\uireng.dll",
                        "\\uiribbon.dll",
                        "\\umpdc.dll",
                        "\\unattend.dll",
                        "\\updatepolicy.dll",
                        "\\upshared.dll",
                        "\\urlmon.dll",
                        "\\userenv.dll",
                        "\\utildll.dll",
                        "\\uxinit.dll",
                        "\\uxtheme.dll",
                        "\\vaultcli.dll",
                        "\\vdsutil.dll",
                        "\\version.dll",
                        "\\virtdisk.dll",
                        "\\vssapi.dll",
                        "\\vsstrace.dll",
                        "\\wbemprox.dll",
                        "\\wbemsvc.dll",
                        "\\wcmapi.dll",
                        "\\wcnnetsh.dll",
                        "\\wdi.dll",
                        "\\wdscore.dll",
                        "\\webservices.dll",
                        "\\wecapi.dll",
                        "\\wer.dll",
                        "\\wevtapi.dll",
                        "\\whhelper.dll",
                        "\\wimgapi.dll",
                        "\\winbio.dll",
                        "\\winbrand.dll",
                        "\\windows.storage.dll",
                        "\\windows.storage.search.dll",
                        "\\windows.ui.immersive.dll",
                        "\\windowscodecs.dll",
                        "\\windowscodecsext.dll",
                        "\\windowsudk.shellcommon.dll",
                        "\\winhttp.dll",
                        "\\wininet.dll",
                        "\\winipsec.dll",
                        "\\winmde.dll",
                        "\\winmm.dll",
                        "\\winnsi.dll",
                        "\\winrnr.dll",
                        "\\winscard.dll",
                        "\\winsqlite3.dll",
                        "\\winsta.dll",
                        "\\winsync.dll",
                        "\\wkscli.dll",
                        "\\wlanapi.dll",
                        "\\wlancfg.dll",
                        "\\wldp.dll",
                        "\\wlidprov.dll",
                        "\\wmiclnt.dll",
                        "\\wmidcom.dll",
                        "\\wmiutils.dll",
                        "\\wmpdui.dll",
                        "\\wmsgapi.dll",
                        "\\wofutil.dll",
                        "\\wpdshext.dll",
                        "\\wscapi.dll",
                        "\\wsdapi.dll",
                        "\\wshbth.dll",
                        "\\wshelper.dll",
                        "\\wsmsvc.dll",
                        "\\wtsapi32.dll",
                        "\\wwancfg.dll",
                        "\\wwapi.dll",
                        "\\xmllite.dll",
                        "\\xolehlp.dll",
                        "\\xpsservices.dll",
                        "\\xwizards.dll",
                        "\\xwtpw32.dll",
                        "\\amsi.dll",
                        "\\appraiser.dll",
                        "\\COMRES.DLL",
                        "\\cryptnet.dll",
                        "\\DispBroker.dll",
                        "\\dsound.dll",
                        "\\dxilconv.dll",
                        "\\FxsCompose.dll",
                        "\\FXSRESM.DLL",
                        "\\msdtcVSp1res.dll",
                        "\\PrintIsolationProxy.dll",
                        "\\rdpendp.dll",
                        "\\rpchttp.dll",
                        "\\storageusage.dll",
                        "\\utcutil.dll",
                        "\\WfsR.dll",
                        "\\igd10iumd64.dll",
                        "\\igd12umd64.dll",
                        "\\igdumdim64.dll",
                        "\\igdusc64.dll",
                        "\\TSMSISrv.dll",
                        "\\TSVIPSrv.dll",
                        "\\wbemcomn.dll",
                        "\\WLBSCTRL.dll",
                        "\\wow64log.dll",
                        "\\WptsExtensions.dll"
                    ]
                }
            },
            "falsepositives": [
                "Legitimate applications loading their own versions of the DLLs mentioned in this rule"
            ],
            "id": "4fc0deee-0057-4998-ab31-d24e46e0aba4",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2024/07/11",
            "references": [
                "https://hijacklibs.net/",
                "https://blog.cyble.com/2022/07/21/qakbot-resurfaces-with-new-playbook/",
                "https://blog.cyble.com/2022/07/27/targeted-attacks-being-carried-out-via-dll-sideloading/",
                "https://github.com/XForceIR/SideLoadHunter/blob/cc7ef2e5d8908279b0c4cee4e8b6f85f7b8eed52/SideLoads/README.md",
                "https://www.hexacorn.com/blog/2023/12/26/1-little-known-secret-of-runonce-exe-32-bit/"
            ],
            "status": "experimental",
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential System DLL Sideloading From Non System Locations"
        },
        {
            "author": "X__Junior (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/05/15",
            "description": "Detects potential DLL sideloading of \"goopdate.dll\", a DLL used by googleupdate.exe",
            "detection": {
                "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*",
                "filter_main_generic": {
                    "ImageLoaded|startswith": [
                        "C:\\Program Files (x86)\\",
                        "C:\\Program Files\\"
                    ]
                },
                "filter_optional_dropbox_installer_temp": {
                    "ImageLoaded|contains|all": [
                        "\\AppData\\Local\\Temp\\GUM",
                        ".tmp\\\\goopdate.dll"
                    ],
                    "Image|contains|all": [
                        "\\AppData\\Local\\Temp\\GUM",
                        ".tmp\\Dropbox"
                    ]
                },
                "selection": {
                    "ImageLoaded|endswith": "\\goopdate.dll"
                }
            },
            "falsepositives": [
                "False positives are expected from Google Chrome installations running from user locations (AppData) and other custom locations. Apply additional filters accordingly.",
                "Other third party chromium browsers located in AppData"
            ],
            "id": "b6188d2f-b3c4-4d2c-a17d-9706e0851af0",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2023/05/20",
            "references": [
                "https://www.ncsc.gov.uk/static-assets/documents/malware-analysis-reports/goofy-guineapig/NCSC-MAR-Goofy-Guineapig.pdf"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential Goopdate.DLL Sideloading"
        },
        {
            "author": "FPT.EagleEye, Thomas Patzke (improvements)",
            "date": "2021/06/29",
            "description": "Detect DLL Load from Spooler Service backup folder",
            "detection": {
                "condition": "selection",
                "selection": {
                    "ImageLoaded|contains": [
                        "\\Windows\\System32\\spool\\drivers\\x64\\3\\",
                        "\\Windows\\System32\\spool\\drivers\\x64\\4\\"
                    ],
                    "ImageLoaded|endswith": ".dll",
                    "Image|endswith": "\\spoolsv.exe"
                }
            },
            "falsepositives": [
                "Loading of legitimate driver"
            ],
            "id": "02fb90de-c321-4e63-a6b9-25f4b03dfd14",
            "level": "informational",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2022/06/02",
            "references": [
                "https://github.com/hhlxf/PrintNightmare",
                "https://github.com/ly4k/SpoolFool"
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574",
                "cve.2021.1675",
                "cve.2021.34527"
            ],
            "title": "Windows Spooler Service Suspicious Binary Load"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems), SBousseaden",
            "date": "2022/12/09",
            "description": "Detects DLL sideloading of system DLLs that are not present on the system by default (at least not in system directories).\nUsually this technique is used to achieve UAC bypass or privilege escalation.\n",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_ms_signed": {
                    "Signature": "Microsoft Windows",
                    "SignatureStatus": "Valid",
                    "Signed": "true"
                },
                "selection": {
                    "ImageLoaded|endswith": [
                        ":\\Windows\\System32\\TSMSISrv.dll",
                        ":\\Windows\\System32\\TSVIPSrv.dll",
                        ":\\Windows\\System32\\wbem\\wbemcomn.dll",
                        ":\\Windows\\System32\\WLBSCTRL.dll",
                        ":\\Windows\\System32\\wow64log.dll",
                        ":\\Windows\\System32\\WptsExtensions.dll"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "6b98b92b-4f00-4f62-b4fe-4d1920215771",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2024/01/10",
            "references": [
                "https://decoded.avast.io/martinchlumecky/png-steganography/",
                "https://posts.specterops.io/lateral-movement-scm-and-dll-hijacking-primer-d2f61e8ab992",
                "https://clement.notin.org/blog/2020/09/12/CVE-2020-7315-McAfee-Agent-DLL-injection/",
                "https://github.com/Wh04m1001/SysmonEoP",
                "https://www.hexacorn.com/blog/2013/12/08/beyond-good-ol-run-key-part-5/",
                "http://remoteawesomethoughts.blogspot.com/2019/05/windows-10-task-schedulerservice.html"
            ],
            "related": [
                {
                    "id": "df6ecb8b-7822-4f4b-b412-08f524b4576c",
                    "type": "similar"
                },
                {
                    "id": "602a1f13-c640-4d73-b053-be9a2fa58b77",
                    "type": "obsoletes"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential DLL Sideloading Of Non-Existent DLLs From System Folders"
        },
        {
            "author": "X__Junior (Nextron Systems)",
            "date": "2023/08/03",
            "description": "Detects potential DLL sideloading of \"vivaldi_elf.dll\"",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_legit_path": {
                    "ImageLoaded|contains": "\\Vivaldi\\Application\\",
                    "Image|endswith": "\\Vivaldi\\Application\\vivaldi.exe"
                },
                "selection": {
                    "ImageLoaded|endswith": "\\vivaldi_elf.dll"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "2092cacb-d77b-4f98-ab0d-32b32f99a054",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://research.checkpoint.com/2023/beyond-the-horizon-traveling-the-world-on-camaro-dragons-usb-flash-drives/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential Vivaldi_elf.DLL Sideloading"
        },
        {
            "author": "X__Junior (Nextron Systems)",
            "date": "2023/08/03",
            "description": "Detects potential DLL sideloading of \"AVKkid.dll\"",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_legit_path": {
                    "ImageLoaded|startswith": [
                        "C:\\Program Files (x86)\\G DATA\\",
                        "C:\\Program Files\\G DATA\\"
                    ],
                    "Image|contains": [
                        "C:\\Program Files (x86)\\G DATA\\",
                        "C:\\Program Files\\G DATA\\"
                    ],
                    "Image|endswith": "\\AVKKid.exe"
                },
                "selection": {
                    "ImageLoaded|endswith": "\\AVKkid.dll"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "952ed57c-8f99-453d-aee0-53a49c22f95d",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://research.checkpoint.com/2023/beyond-the-horizon-traveling-the-world-on-camaro-dragons-usb-flash-drives/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential AVKkid.DLL Sideloading"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/10/29",
            "description": "Detects loading and execution of an unsigned thor scanner binary.",
            "detection": {
                "condition": "selection and not filter_main",
                "filter_main": {
                    "Signature": "Nextron Systems GmbH",
                    "SignatureStatus": "valid",
                    "Signed": "true"
                },
                "selection": {
                    "ImageLoaded|endswith": [
                        "\\thor.exe",
                        "\\thor64.exe"
                    ],
                    "Image|endswith": [
                        "\\thor.exe",
                        "\\thor64.exe"
                    ]
                }
            },
            "falsepositives": [
                "Other legitimate binaries named \"thor.exe\" that aren't published by Nextron Systems"
            ],
            "id": "ea5c131b-380d-49f9-aeb3-920694da4d4b",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "Internal Research"
            ],
            "status": "stable",
            "tags": [
                "attack.defense_evasion",
                "attack.t1574.002"
            ],
            "title": "Suspicious Unsigned Thor Scanner Execution"
        },
        {
            "author": "X__Junior (Nextron Systems)",
            "date": "2023/03/21",
            "description": "Detects potential DLL sideloading of \"iviewers.dll\" (OLE/COM Object Interface Viewer)",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "ImageLoaded|startswith": [
                        "C:\\Program Files (x86)\\Windows Kits\\",
                        "C:\\Program Files\\Windows Kits\\"
                    ]
                },
                "selection": {
                    "ImageLoaded|endswith": "\\iviewers.dll"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "4c21b805-4dd7-469f-b47d-7383a8fcb437",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://www.secureworks.com/research/shadowpad-malware-analysis"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential Iviewers.DLL Sideloading"
        },
        {
            "author": "X__Junior (Nextron Systems)",
            "date": "2023/06/14",
            "description": "Detects potential DLL sideloading of \"waveedit.dll\", which is part of the Nero WaveEditor audio editing software.",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_legit_path": {
                    "Image": [
                        "C:\\Program Files (x86)\\Nero\\Nero Apps\\Nero WaveEditor\\waveedit.exe",
                        "C:\\Program Files\\Nero\\Nero Apps\\Nero WaveEditor\\waveedit.exe"
                    ],
                    "ImageLoaded|startswith": [
                        "C:\\Program Files (x86)\\Nero\\Nero Apps\\Nero WaveEditor\\",
                        "C:\\Program Files\\Nero\\Nero Apps\\Nero WaveEditor\\"
                    ]
                },
                "selection": {
                    "ImageLoaded|endswith": "\\waveedit.dll"
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "71b31e99-9ad0-47d4-aeb5-c0ca3928eeeb",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://www.trendmicro.com/en_us/research/23/f/behind-the-scenes-unveiling-the-hidden-workings-of-earth-preta.html"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential Waveedit.DLL Sideloading"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)",
            "date": "2022/08/17",
            "description": "Detects potential DLL sideloading of DLLs that are part of antivirus software suchas McAfee, Symantec...etc",
            "detection": {
                "condition": "(selection_bitdefender and not 1 of filter_log_dll_*) or (selection_fsecure and not filter_fsecure) or (selection_mcafee and not filter_mcafee) or (selection_cyberark and not filter_cyberark) or (selection_avast and not filter_avast) or (selection_titanium and not filter_titanium) or (selection_eset_deslock and not filter_eset_deslock)",
                "filter_avast": {
                    "ImageLoaded|startswith": [
                        "C:\\program Files\\AVAST Software\\Avast\\",
                        "C:\\program Files (x86)\\AVAST Software\\Avast\\"
                    ]
                },
                "filter_cyberark": {
                    "ImageLoaded|startswith": [
                        "C:\\Program Files\\CyberArk\\Endpoint Privilege Manager\\Agent\\x32\\",
                        "C:\\Program Files (x86)\\CyberArk\\Endpoint Privilege Manager\\Agent\\x32\\"
                    ]
                },
                "filter_eset_deslock": {
                    "ImageLoaded|startswith": [
                        "C:\\program Files\\ESET",
                        "C:\\program Files (x86)\\ESET"
                    ]
                },
                "filter_fsecure": {
                    "ImageLoaded|startswith": [
                        "C:\\Program Files\\F-Secure\\Anti-Virus\\",
                        "C:\\Program Files (x86)\\F-Secure\\Anti-Virus\\"
                    ]
                },
                "filter_log_dll_bitdefender": {
                    "ImageLoaded|startswith": [
                        "C:\\Program Files\\Bitdefender Antivirus Free\\",
                        "C:\\Program Files (x86)\\Bitdefender Antivirus Free\\"
                    ]
                },
                "filter_log_dll_canon": {
                    "ImageLoaded|startswith": "C:\\Program Files\\Canon\\MyPrinter\\"
                },
                "filter_log_dll_dell_sar": {
                    "Image": "C:\\Program Files\\Dell\\SARemediation\\audit\\TelemetryUtility.exe",
                    "ImageLoaded": [
                        "C:\\Program Files\\Dell\\SARemediation\\plugin\\log.dll",
                        "C:\\Program Files\\Dell\\SARemediation\\audit\\log.dll"
                    ]
                },
                "filter_mcafee": {
                    "ImageLoaded|startswith": [
                        "C:\\Program Files\\McAfee\\",
                        "C:\\Program Files (x86)\\McAfee\\"
                    ]
                },
                "filter_titanium": {
                    "ImageLoaded|startswith": [
                        "C:\\program Files\\Trend Micro\\Titanium\\",
                        "C:\\program Files (x86)\\Trend Micro\\Titanium\\"
                    ]
                },
                "selection_avast": {
                    "ImageLoaded|endswith": "\\wsc.dll"
                },
                "selection_bitdefender": {
                    "ImageLoaded|endswith": "\\log.dll"
                },
                "selection_cyberark": {
                    "ImageLoaded|endswith": "\\vftrace.dll"
                },
                "selection_eset_deslock": {
                    "ImageLoaded|endswith": "\\DLPPREM32.dll"
                },
                "selection_fsecure": {
                    "ImageLoaded|endswith": "\\qrt.dll"
                },
                "selection_mcafee": {
                    "ImageLoaded|endswith": [
                        "\\ashldres.dll",
                        "\\lockdown.dll",
                        "\\vsodscpl.dll"
                    ]
                },
                "selection_titanium": {
                    "ImageLoaded|endswith": "\\tmdbglog.dll"
                }
            },
            "falsepositives": [
                "Applications that load the same dlls mentioned in the detection section. Investigate them and filter them out if a lot FPs are caused.",
                "Dell SARemediation plugin folder (C:\\Program Files\\Dell\\SARemediation\\plugin\\log.dll) is known to contain the 'log.dll' file.",
                "The Canon MyPrinter folder 'C:\\Program Files\\Canon\\MyPrinter\\' is known to contain the 'log.dll' file"
            ],
            "id": "552b6b65-df37-4d3e-a258-f2fc4771ae54",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2023/03/13",
            "references": [
                "https://hijacklibs.net/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential Antivirus Software DLL Sideloading"
        },
        {
            "author": "X__Junior (Nextron Systems)",
            "date": "2023/06/09",
            "description": "Detects loading of \"RjvPlatform.dll\" by the \"SystemResetPlatform.exe\" binary which can be abused as a method of DLL side loading since the \"$SysReset\" directory isn't created by default.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Image": "C:\\Windows\\System32\\SystemResetPlatform\\SystemResetPlatform.exe",
                    "ImageLoaded": "C:\\$SysReset\\Framework\\Stack\\RjvPlatform.dll"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "259dda31-b7a3-444f-b7d8-17f96e8a7d0d",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://twitter.com/0gtweet/status/1666716511988330499"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential RjvPlatform.DLL Sideloading From Default Location"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)",
            "date": "2022/10/25",
            "description": "Detects DLL sideloading of \"dbgcore.dll\"",
            "detection": {
                "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*",
                "filter_main_generic": {
                    "ImageLoaded|startswith": [
                        "C:\\Program Files (x86)\\",
                        "C:\\Program Files\\",
                        "C:\\Windows\\SoftwareDistribution\\",
                        "C:\\Windows\\System32\\",
                        "C:\\Windows\\SystemTemp\\",
                        "C:\\Windows\\SysWOW64\\",
                        "C:\\Windows\\WinSxS\\"
                    ]
                },
                "filter_optional_steam": {
                    "ImageLoaded|endswith": "\\Steam\\bin\\cef\\cef.win7x64\\dbgcore.dll"
                },
                "selection": {
                    "ImageLoaded|endswith": "\\dbgcore.dll"
                }
            },
            "falsepositives": [
                "Legitimate applications loading their own versions of the DLL mentioned in this rule"
            ],
            "id": "9ca2bf31-0570-44d8-a543-534c47c33ed7",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2023/05/05",
            "references": [
                "https://hijacklibs.net/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential DLL Sideloading Of DBGCORE.DLL"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/09/05",
            "description": "Detects potential DLL sideloading of a signed dbghelp.dll by the Sysinternals VMMap.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "ImageLoaded|contains": "C:\\Debuggers\\dbghelp.dll",
                    "Image|endswith": [
                        "\\vmmap.exe",
                        "\\vmmap64.exe"
                    ],
                    "Signed": "true"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "98ffaed4-aec2-4e04-9b07-31492fe68b3d",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://techcommunity.microsoft.com/t5/sysinternals-blog/zoomit-v7-1-procdump-2-0-for-linux-process-explorer-v17-05/ba-p/3884766"
            ],
            "related": [
                {
                    "id": "273a8dd8-3742-4302-bcc7-7df5a80fe425",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "VMMap Signed Dbghelp.DLL Potential Sideloading"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/08/03",
            "description": "Detects potential DLL sideloading of \"mfdetours.dll\". While using \"mftrace.exe\" it can be abused to attach to an arbitrary process and force load any DLL named \"mfdetours.dll\" from the current directory of execution.",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_legit_path": {
                    "ImageLoaded|contains": ":\\Program Files (x86)\\Windows Kits\\10\\bin\\"
                },
                "selection": {
                    "ImageLoaded|endswith": "\\mfdetours.dll"
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "d2605a99-2218-4894-8fd3-2afb7946514d",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "Internal Research"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential Mfdetours.DLL Sideloading"
        },
        {
            "author": "X__Junior",
            "date": "2023/07/13",
            "description": "Detects potential DLL sideloading of \"CCleanerReactivator.dll\"",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_path": {
                    "Image|endswith": "\\CCleanerReactivator.exe",
                    "Image|startswith": [
                        "C:\\Program Files\\CCleaner\\",
                        "C:\\Program Files (x86)\\CCleaner\\"
                    ]
                },
                "selection": {
                    "ImageLoaded|endswith": "\\CCleanerReactivator.dll"
                }
            },
            "falsepositives": [
                "False positives could occur from other custom installation paths. Apply additional filters accordingly."
            ],
            "id": "3735d5ac-d770-4da0-99ff-156b180bc600",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://lab52.io/blog/2344-2/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential CCleanerReactivator.DLL Sideloading"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)",
            "date": "2022/08/17",
            "description": "Detects DLL sideloading of DLLs that are part of third party software (zoom, discord....etc)",
            "detection": {
                "condition": "(selection_lenovo and not filter_lenovo) or (selection_toshiba and not filter_toshiba)",
                "filter_lenovo": [
                    {
                        "ImageLoaded|contains": "\\AppData\\local\\Google\\Chrome\\Application\\"
                    },
                    {
                        "ImageLoaded|startswith": [
                            "C:\\Program Files\\Lenovo\\Communications Utility\\",
                            "C:\\Program Files (x86)\\Lenovo\\Communications Utility\\"
                        ]
                    }
                ],
                "filter_toshiba": {
                    "ImageLoaded|startswith": [
                        "C:\\Program Files\\Toshiba\\Bluetooth Toshiba Stack\\",
                        "C:\\Program Files (x86)\\Toshiba\\Bluetooth Toshiba Stack\\"
                    ]
                },
                "selection_lenovo": {
                    "ImageLoaded|endswith": "\\commfunc.dll"
                },
                "selection_toshiba": {
                    "ImageLoaded|endswith": "\\tosbtkbd.dll"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "f9df325d-d7bc-4a32-8a1a-2cc61dcefc63",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://hijacklibs.net/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Third Party Software DLL Sideloading"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems), Subhash Popuri (@pbssubhash)",
            "date": "2022/12/16",
            "description": "Detects potential DLL sideloading using comctl32.dll to obtain system privileges",
            "detection": {
                "condition": "selection",
                "selection": {
                    "ImageLoaded|endswith": "\\comctl32.dll",
                    "ImageLoaded|startswith": [
                        "C:\\Windows\\System32\\logonUI.exe.local\\",
                        "C:\\Windows\\System32\\werFault.exe.local\\",
                        "C:\\Windows\\System32\\consent.exe.local\\",
                        "C:\\Windows\\System32\\narrator.exe.local\\",
                        "C:\\windows\\system32\\wermgr.exe.local\\"
                    ]
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "6360757a-d460-456c-8b13-74cf0e60cceb",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2022/12/19",
            "references": [
                "https://github.com/binderlabs/DirCreate2System",
                "https://github.com/sailay1996/awesome_windows_logical_bugs/blob/60cbb23a801f4c3195deac1cc46df27c225c3d07/dir_create2system.txt"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential DLL Sideloading Via comctl32.dll"
        },
        {
            "id": "273a8dd8-3742-4302-bcc7-7df5a80fe425",
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/07/28",
            "description": "Detects potential DLL sideloading of an unsigned dbghelp.dll by the Sysinternals VMMap.",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_signed": {
                    "Signed": "true"
                },
                "selection": {
                    "ImageLoaded|contains": "C:\\Debuggers\\dbghelp.dll",
                    "Image|endswith": [
                        "\\vmmap.exe",
                        "\\vmmap64.exe"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://techcommunity.microsoft.com/t5/sysinternals-blog/zoomit-v7-1-procdump-2-0-for-linux-process-explorer-v17-05/ba-p/3884766"
            ],
            "modified": "2023/09/05",
            "related": [
                {
                    "type": "similar",
                    "id": "98ffaed4-aec2-4e04-9b07-31492fe68b3d"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "VMMap Unsigned Dbghelp.DLL Potential Sideloading"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/12/01",
            "description": "Detects processes loading the non-existent DLL \"ShellChromeAPI\". One known example is the \"DeviceEnroller\" binary in combination with the \"PhoneDeepLink\" flag tries to load this DLL.\nAdversaries can drop their own renamed DLL and execute it via DeviceEnroller.exe using this parameter\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "ImageLoaded|endswith": "\\ShellChromeAPI.dll"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "ee4c5d06-3abc-48cc-8885-77f1c20f4451",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://mobile.twitter.com/0gtweet/status/1564131230941122561",
                "https://strontic.github.io/xcyclopedia/library/DeviceEnroller.exe-24BEF0D6B0ECED36BB41831759FDE18D.html"
            ],
            "related": [
                {
                    "id": "e173ad47-4388-4012-ae62-bd13f71c18a8",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "DLL Sideloading Of ShellChromeAPI.DLL"
        },
        {
            "author": "frack113",
            "date": "2022/12/14",
            "description": "Detects potential DLL sideloading using JUSTSYSTEMS Japanese word processor",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "ImageLoaded|startswith": "C:\\Program Files\\Common Files\\Justsystem\\JsSchHlp\\"
                },
                "selection": {
                    "ImageLoaded|endswith": "\\JSESPR.dll"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "68654bf0-4412-43d5-bfe8-5eaa393cd939",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://www.welivesecurity.com/2022/12/14/unmasking-mirrorface-operation-liberalface-targeting-japanese-political-entities/",
                "http://www.windowexe.com/bbs/board.php?q=jsschhlp-exe-c-program-files-common-files-justsystem-jsschhlp-jsschhlp"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential DLL Sideloading Via JsSchHlp"
        },
        {
            "author": "X__Junior (Nextron Systems)",
            "date": "2023/06/20",
            "description": "Detects potential DLL sideloading of \"appverifUI.dll\"",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_legit_path": {
                    "Image": [
                        "C:\\Windows\\SysWOW64\\appverif.exe",
                        "C:\\Windows\\System32\\appverif.exe"
                    ],
                    "ImageLoaded|startswith": [
                        "C:\\Windows\\System32\\",
                        "C:\\Windows\\SysWOW64\\",
                        "C:\\Windows\\WinSxS\\"
                    ]
                },
                "selection": {
                    "ImageLoaded|endswith": "\\appverifUI.dll"
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "ee6cea48-c5b6-4304-a332-10fc6446f484",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://fatrodzianko.com/2020/02/15/dll-side-loading-appverif-exe/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential appverifUI.DLL Sideloading"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/08/11",
            "description": "Detects DLL sideloading of unsigned \"mfdetours.dll\". Executing \"mftrace.exe\" can be abused to attach to an arbitrary process and force load any DLL named \"mfdetours.dll\" from the current directory of execution.",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_legit_path": {
                    "ImageLoaded|contains": ":\\Program Files (x86)\\Windows Kits\\10\\bin\\",
                    "SignatureStatus": "Valid"
                },
                "selection": {
                    "ImageLoaded|endswith": "\\mfdetours.dll"
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "948a0953-f287-4806-bbcb-3b2e396df89f",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "Internal Research"
            ],
            "related": [
                {
                    "type": "similar",
                    "id": "d2605a99-2218-4894-8fd3-2afb7946514d"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Unsigned Mfdetours.DLL Sideloading"
        },
        {
            "author": "X__Junior",
            "date": "2023/06/09",
            "description": "Detects potential DLL sideloading of \"7za.dll\"",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_legit_path": {
                    "ImageLoaded|startswith": [
                        "C:\\Program Files (x86)\\",
                        "C:\\Program Files\\"
                    ],
                    "Image|startswith": [
                        "C:\\Program Files (x86)\\",
                        "C:\\Program Files\\"
                    ]
                },
                "selection": {
                    "ImageLoaded|endswith": "\\7za.dll"
                }
            },
            "falsepositives": [
                "Legitimate third party application located in \"AppData\" may leverage this DLL to offer 7z compression functionality and may generate false positives. Apply additional filters as needed."
            ],
            "id": "4f6edb78-5c21-42ab-a558-fd2a6fc1fd57",
            "level": "low",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://www.gov.pl/attachment/ee91f24d-3e67-436d-aa50-7fa56acf789d"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential 7za.DLL Sideloading"
        },
        {
            "author": "Swachchhanda Shrawan Poudel",
            "date": "2024/04/15",
            "description": "Detects potential DLL side loading of \"KeyScramblerIE.dll\" by \"KeyScrambler.exe\".\nVarious threat actors and malware have been found side loading a masqueraded \"KeyScramblerIE.dll\" through \"KeyScrambler.exe\".\n",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_legitimate_path": {
                    "ImageLoaded|contains": [
                        "C:\\Program Files (x86)\\KeyScrambler\\",
                        "C:\\Program Files\\KeyScrambler\\"
                    ],
                    "Image|contains": [
                        "C:\\Program Files (x86)\\KeyScrambler\\",
                        "C:\\Program Files\\KeyScrambler\\"
                    ]
                },
                "filter_main_signature": {
                    "Signature": "QFX Software Corporation",
                    "SignatureStatus": "Valid"
                },
                "selection": {
                    "ImageLoaded|endswith": "\\KeyScramblerIE.dll",
                    "Image|endswith": [
                        "\\KeyScrambler.exe",
                        "\\KeyScramblerLogon.exe"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "d2451be2-b582-4e15-8701-4196ac180260",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://thehackernews.com/2024/03/two-chinese-apt-groups-ramp-up-cyber.html",
                "https://csirt-cti.net/2024/02/01/stately-taurus-continued-new-information-on-cyberespionage-attacks-against-myanmar-military-junta/",
                "https://bazaar.abuse.ch/sample/5cb9876681f78d3ee8a01a5aaa5d38b05ec81edc48b09e3865b75c49a2187831/",
                "https://twitter.com/Max_Mal_/status/1775222576639291859",
                "https://twitter.com/DTCERT/status/1712785426895839339"
            ],
            "related": [
                {
                    "id": "ca5583e9-8f80-46ac-ab91-7f314d13b984",
                    "type": "similar"
                }
            ],
            "status": "experimental",
            "tags": [
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential DLL Sideloading Of KeyScramblerIE.DLL Via KeyScrambler.EXE"
        },
        {
            "author": "X__Junior (Nextron Systems)",
            "date": "2023/05/18",
            "description": "Detects potential DLL sideloading of \"wwlib.dll\"",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_path": {
                    "ImageLoaded|startswith": [
                        "C:\\Program Files (x86)\\Microsoft Office\\",
                        "C:\\Program Files\\Microsoft Office\\"
                    ],
                    "Image|endswith": "\\winword.exe",
                    "Image|startswith": [
                        "C:\\Program Files (x86)\\Microsoft Office\\",
                        "C:\\Program Files\\Microsoft Office\\"
                    ]
                },
                "selection": {
                    "ImageLoaded|endswith": "\\wwlib.dll"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "e2e01011-5910-4267-9c3b-4149ed5479cf",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://twitter.com/WhichbufferArda/status/1658829954182774784",
                "https://news.sophos.com/en-us/2022/11/03/family-tree-dll-sideloading-cases-may-be-related/",
                "https://securelist.com/apt-luminousmoth/103332/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential WWlib.DLL Sideloading"
        },
        {
            "author": "Gary Lobermier",
            "date": "2024/07/11",
            "description": "Detects potential DLL sideloading of \"DbgModel.dll\"",
            "detection": {
                "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*",
                "filter_main_generic": {
                    "ImageLoaded|startswith": [
                        "C:\\Windows\\System32\\",
                        "C:\\Windows\\SysWOW64\\",
                        "C:\\Windows\\WinSxS\\"
                    ]
                },
                "filter_optional_windbg": {
                    "ImageLoaded|startswith": "C:\\Program Files\\WindowsApps\\Microsoft.WinDbg_"
                },
                "filter_optional_windows_kits": {
                    "ImageLoaded|startswith": [
                        "C:\\Program Files (x86)\\Windows Kits\\",
                        "C:\\Program Files\\Windows Kits\\"
                    ]
                },
                "selection": {
                    "ImageLoaded|endswith": "\\dbgmodel.dll"
                }
            },
            "falsepositives": [
                "Legitimate applications loading their own versions of the DLL mentioned in this rule"
            ],
            "id": "fef394cd-f44d-4040-9b18-95d92fe278c0",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2024/07/22",
            "references": [
                "https://hijacklibs.net/entries/microsoft/built-in/dbgmodel.html"
            ],
            "status": "experimental",
            "tags": [
                "attack.defense_evasion",
                "attack.t1574.002"
            ],
            "title": "Potential DLL Sideloading Of DbgModel.DLL"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/12/01",
            "description": "Detects DLL sideloading of VMGuestLib.dll by the WmiApSrv service.",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "Signed": "true"
                },
                "selection": {
                    "ImageLoaded|contains|all": [
                        "\\VMware\\VMware Tools\\vmStatsProvider\\win32",
                        "\\vmGuestLib.dll"
                    ],
                    "Image|endswith": "\\Windows\\System32\\wbem\\WmiApSrv.exe"
                }
            },
            "falsepositives": [
                "FP could occur if the legitimate version of vmGuestLib already exists on the system"
            ],
            "id": "70e8e9b4-6a93-4cb7-8cde-da69502e7aff",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://decoded.avast.io/martinchlumecky/png-steganography/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "VMGuestLib DLL Sideload"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)",
            "date": "2022/08/17",
            "description": "Detects potential DLL sideloading of \"chrome_frame_helper.dll\"",
            "detection": {
                "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*",
                "filter_main_path": {
                    "ImageLoaded|startswith": [
                        "C:\\Program Files\\Google\\Chrome\\Application\\",
                        "C:\\Program Files (x86)\\Google\\Chrome\\Application\\"
                    ]
                },
                "filter_optional_user_path": {
                    "ImageLoaded|contains": "\\AppData\\local\\Google\\Chrome\\Application\\"
                },
                "selection": {
                    "ImageLoaded|endswith": "\\chrome_frame_helper.dll"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "72ca7c75-bf85-45cd-aca7-255d360e423c",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2023/05/15",
            "references": [
                "https://hijacklibs.net/entries/3rd_party/google/chrome_frame_helper.html"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential Chrome Frame Helper DLL Sideloading"
        },
        {
            "author": "X__Junior (Nextron Systems)",
            "date": "2023/06/01",
            "description": "Detects potential DLL sideloading of \"SmadHook.dll\", a DLL used by SmadAV antivirus",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_legit_path": {
                    "Image": [
                        "C:\\Program Files (x86)\\SMADAV\\SmadavProtect32.exe",
                        "C:\\Program Files (x86)\\SMADAV\\SmadavProtect64.exe",
                        "C:\\Program Files\\SMADAV\\SmadavProtect32.exe",
                        "C:\\Program Files\\SMADAV\\SmadavProtect64.exe"
                    ],
                    "ImageLoaded|startswith": [
                        "C:\\Program Files (x86)\\SMADAV\\",
                        "C:\\Program Files\\SMADAV\\"
                    ]
                },
                "selection": {
                    "ImageLoaded|endswith": [
                        "\\SmadHook32c.dll",
                        "\\SmadHook64c.dll"
                    ]
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "24b6cf51-6122-469e-861a-22974e9c1e5b",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://research.checkpoint.com/2023/malware-spotlight-camaro-dragons-tinynote-backdoor/",
                "https://www.qurium.org/alerts/targeted-malware-against-crph/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential SmadHook.DLL Sideloading"
        },
        {
            "author": "X__Junior (Nextron Systems)",
            "date": "2023/03/13",
            "description": "Detects potential DLL side loading of DLLs that are part of the Wazuh security platform",
            "detection": {
                "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*",
                "filter_main_generic": {
                    "ImageLoaded|startswith": [
                        "C:\\Program Files\\",
                        "C:\\Program Files (x86)\\"
                    ]
                },
                "filter_optional_mingw64": {
                    "ImageLoaded|contains": [
                        "\\AppData\\Local\\",
                        "\\ProgramData\\"
                    ],
                    "ImageLoaded|endswith": "\\mingw64\\bin\\libwinpthread-1.dll"
                },
                "selection": {
                    "ImageLoaded|endswith": [
                        "\\libwazuhshared.dll",
                        "\\libwinpthread-1.dll"
                    ]
                }
            },
            "falsepositives": [
                "Many legitimate applications leverage this DLL. (Visual Studio, JetBrains, Ruby, Anaconda, GithubDesktop, etc.)"
            ],
            "id": "db77ce78-7e28-4188-9337-cf30e2b3ba9f",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2023/05/12",
            "references": [
                "https://www.trendmicro.com/en_us/research/23/c/iron-tiger-sysupdate-adds-linux-targeting.html"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential Wazuh Security Platform DLL Sideloading"
        },
        {
            "author": "X__Junior (Nextron Systems)",
            "date": "2023/06/09",
            "description": "Detects potential DLL sideloading of \"edputil.dll\"",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_generic": {
                    "ImageLoaded|startswith": [
                        "C:\\Windows\\System32\\",
                        "C:\\Windows\\SysWOW64\\",
                        "C\\Windows\\WinSxS\\"
                    ]
                },
                "selection": {
                    "ImageLoaded|endswith": "\\edputil.dll"
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "e4903324-1a10-4ed3-981b-f6fe3be3a2c2",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://alternativeto.net/news/2023/5/cybercriminals-use-wordpad-vulnerability-to-spread-qbot-malware/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential Edputil.DLL Sideloading"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems), Wietze Beukema",
            "date": "2024/07/11",
            "description": "Detects potential DLL sideloading of \"MpSvc.dll\".",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_generic": {
                    "ImageLoaded|startswith": [
                        "C:\\Program Files\\Windows Defender\\",
                        "C:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\",
                        "C:\\Windows\\WinSxS\\"
                    ]
                },
                "selection": {
                    "ImageLoaded|endswith": "\\MpSvc.dll"
                }
            },
            "falsepositives": [
                "Legitimate applications loading their own versions of the DLL mentioned in this rule."
            ],
            "id": "5ba243e5-8165-4cf7-8c69-e1d3669654c1",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://hijacklibs.net/entries/microsoft/built-in/mpsvc.html"
            ],
            "status": "experimental",
            "tags": [
                "attack.defense_evasion",
                "attack.t1574.002"
            ],
            "title": "Potential DLL Sideloading Of MpSvc.DLL"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)",
            "date": "2022/10/25",
            "description": "Detects potential DLL sideloading of \"dbghelp.dll\"",
            "detection": {
                "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*",
                "filter_main_generic": {
                    "ImageLoaded|startswith": [
                        "C:\\Program Files (x86)\\",
                        "C:\\Program Files\\",
                        "C:\\Windows\\SoftwareDistribution\\",
                        "C:\\Windows\\System32\\",
                        "C:\\Windows\\SystemTemp\\",
                        "C:\\Windows\\SysWOW64\\",
                        "C:\\Windows\\WinSxS\\"
                    ]
                },
                "filter_optional_anaconda": {
                    "ImageLoaded|endswith": [
                        "\\Anaconda3\\Lib\\site-packages\\vtrace\\platforms\\windll\\amd64\\dbghelp.dll",
                        "\\Anaconda3\\Lib\\site-packages\\vtrace\\platforms\\windll\\i386\\dbghelp.dll"
                    ]
                },
                "filter_optional_epicgames": {
                    "ImageLoaded|endswith": [
                        "\\Epic Games\\Launcher\\Engine\\Binaries\\ThirdParty\\DbgHelp\\dbghelp.dll",
                        "\\Epic Games\\MagicLegends\\x86\\dbghelp.dll"
                    ]
                },
                "selection": {
                    "ImageLoaded|endswith": "\\dbghelp.dll"
                }
            },
            "falsepositives": [
                "Legitimate applications loading their own versions of the DLL mentioned in this rule"
            ],
            "id": "6414b5cd-b19d-447e-bb5e-9f03940b5784",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2023/05/05",
            "references": [
                "https://hijacklibs.net/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential DLL Sideloading Of DBGHELP.DLL"
        },
        {
            "author": "NVISO",
            "date": "2020/05/04",
            "description": "The Fax service attempts to load ualapi.dll, which is non-existent. An attacker can then (side)load their own malicious DLL using this service.",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "ImageLoaded|startswith": "C:\\Windows\\WinSxS\\"
                },
                "selection": {
                    "ImageLoaded|endswith": "ualapi.dll",
                    "Image|endswith": "\\fxssvc.exe"
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "828af599-4c53-4ed2-ba4a-a9f835c434ea",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2022/06/02",
            "references": [
                "https://windows-internals.com/faxing-your-way-to-system/"
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.defense_evasion",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Fax Service DLL Search Order Hijack"
        },
        {
            "author": "X__Junior (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/05/14",
            "description": "Detects potential DLL sideloading of \"roboform.dll\", a DLL used by RoboForm Password Manager",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_path": {
                    "Image|endswith": [
                        "\\robotaskbaricon.exe",
                        "\\robotaskbaricon-x64.exe"
                    ],
                    "Image|startswith": [
                        " C:\\Program Files (x86)\\Siber Systems\\AI RoboForm\\",
                        " C:\\Program Files\\Siber Systems\\AI RoboForm\\"
                    ]
                },
                "selection": {
                    "ImageLoaded|endswith": [
                        "\\roboform.dll",
                        "\\roboform-x64.dll"
                    ]
                }
            },
            "falsepositives": [
                "If installed on a per-user level, the path would be located in \"AppData\\Local\". Add additional filters to reflect this mode of installation"
            ],
            "id": "f64c9b2d-b0ad-481d-9d03-7fc75020892a",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://twitter.com/StopMalvertisin/status/1648604148848549888",
                "https://twitter.com/t3ft3lb/status/1656194831830401024",
                "https://www.roboform.com/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential RoboForm.DLL Sideloading"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/01/22",
            "description": "Detects potential DLL sideloading activity via the Aruba Networks Virtual Intranet Access \"arubanetsvc.exe\" process using DLL Search Order Hijacking",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "ImageLoaded|startswith": [
                        "C:\\Windows\\System32\\",
                        "C:\\Windows\\SysWOW64\\",
                        "C:\\Windows\\WinSxS\\"
                    ]
                },
                "selection": {
                    "ImageLoaded|endswith": [
                        "\\wtsapi32.dll",
                        "\\msvcr100.dll",
                        "\\msvcp100.dll",
                        "\\dbghelp.dll",
                        "\\dbgcore.dll",
                        "\\wininet.dll",
                        "\\iphlpapi.dll",
                        "\\version.dll",
                        "\\cryptsp.dll",
                        "\\cryptbase.dll",
                        "\\wldp.dll",
                        "\\profapi.dll",
                        "\\sspicli.dll",
                        "\\winsta.dll",
                        "\\dpapi.dll"
                    ],
                    "Image|endswith": "\\arubanetsvc.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "90ae0469-0cee-4509-b67f-e5efcef040f7",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2023/03/15",
            "references": [
                "https://twitter.com/wdormann/status/1616581559892545537?t=XLCBO9BziGzD7Bmbt8oMEQ&s=09"
            ],
            "status": "test",
            "tags": [
                "attack.privilege_escalation",
                "attack.persistence",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Aruba Network Service Potential DLL Sideloading"
        },
        {
            "author": "X__Junior",
            "date": "2023/04/17",
            "description": "Detects potential DLL sideloading of \"libvlc.dll\", a DLL that is legitimately used by \"VLC.exe\"",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_vlc": {
                    "ImageLoaded|startswith": [
                        "C:\\Program Files (x86)\\VideoLAN\\VLC\\",
                        "C:\\Program Files\\VideoLAN\\VLC\\"
                    ]
                },
                "selection": {
                    "ImageLoaded|endswith": "\\libvlc.dll"
                }
            },
            "falsepositives": [
                "False positives are expected if VLC is installed in non-default locations"
            ],
            "id": "bf9808c4-d24f-44a2-8398-b65227d406b6",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://www.trendmicro.com/en_us/research/23/c/earth-preta-updated-stealthy-strategies.html",
                "https://hijacklibs.net/entries/3rd_party/vlc/libvlc.html"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential Libvlc.DLL Sideloading"
        },
        {
            "author": "@SerkinValery",
            "date": "2023/06/08",
            "description": "Detects unsigned module load by ClickOnce application.",
            "detection": {
                "condition": "all of selection_*",
                "selection_path": {
                    "Image|contains": "\\AppData\\Local\\Apps\\2.0\\"
                },
                "selection_sig_status": [
                    {
                        "Signed": "false"
                    },
                    {
                        "SignatureStatus": "Expired"
                    }
                ]
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "060d5ad4-3153-47bb-8382-43e5e29eda92",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://posts.specterops.io/less-smartscreen-more-caffeine-ab-using-clickonce-for-trusted-code-execution-1446ea8051c5"
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.t1574.002"
            ],
            "title": "Unsigned Module Loaded by ClickOnce Application"
        },
        {
            "author": "Bhabesh Raj",
            "date": "2022/08/02",
            "description": "Detects potential sideloading of \"mpclient.dll\" by Windows Defender processes (\"MpCmdRun\" and \"NisSrv\") from their non-default directory.",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_known_locations": {
                    "Image|startswith": [
                        "C:\\Program Files (x86)\\Windows Defender\\",
                        "C:\\Program Files\\Microsoft Security Client\\",
                        "C:\\Program Files\\Windows Defender\\",
                        "C:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\",
                        "C:\\Windows\\WinSxS\\"
                    ]
                },
                "selection": {
                    "ImageLoaded|endswith": "\\mpclient.dll",
                    "Image|endswith": [
                        "\\MpCmdRun.exe",
                        "\\NisSrv.exe"
                    ]
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "418dc89a-9808-4b87-b1d7-e5ae0cb6effc",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2023/08/04",
            "references": [
                "https://www.sentinelone.com/blog/living-off-windows-defender-lockbit-ransomware-sideloads-cobalt-strike-through-microsoft-security-tool"
            ],
            "related": [
                {
                    "id": "7002aa10-b8d4-47ae-b5ba-51ab07e228b9",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1574.002"
            ],
            "title": "Potential Mpclient.DLL Sideloading"
        },
        {
            "author": "Wietze Beukema",
            "date": "2024/07/11",
            "description": "Detects potential DLL sideloading of \"mscorsvc.dll\".",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_generic": {
                    "ImageLoaded|startswith": [
                        "C:\\Windows\\Microsoft.NET\\Framework\\",
                        "C:\\Windows\\Microsoft.NET\\Framework64\\",
                        "C:\\Windows\\WinSxS\\"
                    ]
                },
                "selection": {
                    "ImageLoaded|endswith": "\\mscorsvc.dll"
                }
            },
            "falsepositives": [
                "Legitimate applications loading their own versions of the DLL mentioned in this rule."
            ],
            "id": "cdb15e19-c2d0-432a-928e-e49c8c60dcf2",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://hijacklibs.net/entries/microsoft/built-in/mscorsvc.html"
            ],
            "status": "experimental",
            "tags": [
                "attack.defense_evasion",
                "attack.t1574.002"
            ],
            "title": "Potential DLL Sideloading Of MsCorSvc.DLL"
        },
        {
            "author": "X__Junior (Nextron Systems)",
            "date": "2023/03/13",
            "description": "Detects potential DLL sideloading of rcdll.dll",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "ImageLoaded|startswith": [
                        "C:\\Program Files (x86)\\Microsoft Visual Studio\\",
                        "C:\\Program Files (x86)\\Windows Kits\\"
                    ]
                },
                "selection": {
                    "ImageLoaded|endswith": "\\rcdll.dll"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "6e78b74f-c762-4800-82ad-f66787f10c8a",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2023/03/15",
            "references": [
                "https://www.trendmicro.com/en_us/research/23/c/iron-tiger-sysupdate-adds-linux-targeting.html"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential Rcdll.DLL Sideloading"
        },
        {
            "author": "X__Junior (Nextron Systems)",
            "date": "2023/06/09",
            "description": "Detects potential DLL sideloading of \"RjvPlatform.dll\" by \"SystemResetPlatform.exe\" located in a non-default location.",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_legit_path": {
                    "Image|startswith": "C:\\Windows\\System32\\SystemResetPlatform\\"
                },
                "selection": {
                    "Image": "\\SystemResetPlatform.exe",
                    "ImageLoaded|endswith": "\\RjvPlatform.dll"
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "0e0bc253-07ed-43f1-816d-e1b220fe8971",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "references": [
                "https://twitter.com/0gtweet/status/1666716511988330499"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Potential RjvPlatform.DLL Sideloading From Non-Default Location"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/08/02",
            "description": "Detects loading of a DLL by the VMware Xfer utility from the non-default directory which may be an attempt to sideload arbitrary DLL",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "ImageLoaded|startswith": "C:\\Program Files\\VMware\\"
                },
                "selection": {
                    "ImageLoaded|endswith": "\\glib-2.0.dll",
                    "Image|endswith": "\\VMwareXferlogs.exe"
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "9313dc13-d04c-46d8-af4a-a930cc55d93b",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2023/02/17",
            "references": [
                "https://www.sentinelone.com/labs/lockbit-ransomware-side-loads-cobalt-strike-beacon-with-legitimate-vmware-utility/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1574.002"
            ],
            "title": "Potential DLL Sideloading Via VMware Xfer"
        },
        {
            "author": "Den Iuzvyk",
            "date": "2020/07/15",
            "description": "Detects abusing Azure Browser SSO by requesting OAuth 2.0 refresh tokens for an Azure-AD-authenticated Windows user (i.e. the machine is joined to Azure AD and a user logs in with their Azure AD account) wanting to perform SSO authentication in the browser.\nAn attacker can use this to authenticate to Azure AD in a browser as that user.\n",
            "detection": {
                "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*",
                "filter_main_bgtaskhost": {
                    "Image|endswith": "\\BackgroundTaskHost.exe",
                    "Image|startswith": [
                        "C:\\Windows\\System32\\",
                        "C:\\Windows\\SysWOW64\\"
                    ]
                },
                "filter_optional_devenv": {
                    "Image|endswith": "\\IDE\\devenv.exe",
                    "Image|startswith": [
                        "C:\\Program Files\\Microsoft Visual Studio\\",
                        "C:\\Program Files (x86)\\Microsoft Visual Studio\\"
                    ]
                },
                "filter_optional_edge_1": [
                    {
                        "Image|startswith": "C:\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\"
                    },
                    {
                        "Image|endswith": "\\WindowsApps\\MicrosoftEdge.exe"
                    },
                    {
                        "Image": [
                            "C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe",
                            "C:\\Program Files\\Microsoft\\Edge\\Application\\msedge.exe"
                        ]
                    }
                ],
                "filter_optional_edge_2": {
                    "Image|endswith": [
                        "\\msedge.exe",
                        "\\msedgewebview2.exe"
                    ],
                    "Image|startswith": [
                        "C:\\Program Files (x86)\\Microsoft\\EdgeCore\\",
                        "C:\\Program Files\\Microsoft\\EdgeCore\\"
                    ]
                },
                "filter_optional_ie": {
                    "Image": [
                        "C:\\Program Files (x86)\\Internet Explorer\\iexplore.exe",
                        "C:\\Program Files\\Internet Explorer\\iexplore.exe"
                    ]
                },
                "filter_optional_null": {
                    "Image": null
                },
                "filter_optional_onedrive": {
                    "Image|endswith": "\\AppData\\Local\\Microsoft\\OneDrive\\OneDrive.exe"
                },
                "selection": {
                    "ImageLoaded": "C:\\Windows\\System32\\MicrosoftAccountTokenProvider.dll"
                }
            },
            "falsepositives": [
                "False positives are expected since this rules is only looking for the DLL load event. This rule is better used in correlation with related activity"
            ],
            "id": "50f852e6-af22-4c78-9ede-42ef36aa3453",
            "level": "low",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2023/04/18",
            "references": [
                "https://posts.specterops.io/requesting-azure-ad-request-tokens-on-azure-ad-joined-machines-for-browser-sso-2b0409caad30"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.002"
            ],
            "title": "Potential Azure Browser SSO Abuse"
        },
        {
            "author": "Bhabesh Raj",
            "date": "2021/07/01",
            "description": "Detect DLL deletions from Spooler Service driver folder. This might be a potential exploitation attempt of CVE-2021-1675",
            "detection": {
                "condition": "selection",
                "selection": {
                    "TargetFilename|contains": "C:\\Windows\\System32\\spool\\drivers\\x64\\3\\",
                    "Image|endswith": "\\spoolsv.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "5b2bbc47-dead-4ef7-8908-0cf73fcbecbf",
            "level": "high",
            "logsource": {
                "category": "file_delete",
                "product": "windows"
            },
            "modified": "2023/02/17",
            "references": [
                "https://github.com/hhlxf/PrintNightmare",
                "https://github.com/cube0x0/CVE-2021-1675"
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574",
                "cve.2021.1675"
            ],
            "title": "Potential PrintNightmare Exploitation Attempt"
        },
        {
            "id": "df6ecb8b-7822-4f4b-b412-08f524b4576c",
            "author": "Nasreddine Bencherchali (Nextron Systems), fornotes",
            "date": "2022/12/01",
            "description": "Detects the creation of system DLLs that are usually not present on the system (or at least not in system directories).\nUsually this technique is used to achieve DLL hijacking.\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "TargetFilename|endswith": [
                        ":\\Windows\\System32\\TSMSISrv.dll",
                        ":\\Windows\\System32\\TSVIPSrv.dll",
                        ":\\Windows\\System32\\wbem\\wbemcomn.dll",
                        ":\\Windows\\System32\\WLBSCTRL.dll",
                        ":\\Windows\\System32\\wow64log.dll",
                        ":\\Windows\\System32\\WptsExtensions.dll",
                        "\\SprintCSP.dll"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "level": "medium",
            "logsource": {
                "category": "file_event",
                "product": "windows"
            },
            "modified": "2024/01/10",
            "references": [
                "https://decoded.avast.io/martinchlumecky/png-steganography/",
                "https://posts.specterops.io/lateral-movement-scm-and-dll-hijacking-primer-d2f61e8ab992",
                "https://clement.notin.org/blog/2020/09/12/CVE-2020-7315-McAfee-Agent-DLL-injection/",
                "https://github.com/Wh04m1001/SysmonEoP",
                "https://www.hexacorn.com/blog/2013/12/08/beyond-good-ol-run-key-part-5/",
                "https://github.com/blackarrowsec/redteam-research/tree/26e6fc0c0d30d364758fa11c2922064a9a7fd309/LPE%20via%20StorSvc"
            ],
            "related": [
                {
                    "type": "similar",
                    "id": "6b98b92b-4f00-4f62-b4fe-4d1920215771"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.001",
                "attack.t1574.002"
            ],
            "title": "Creation Of Non-Existent System DLL"
        },
        {
            "author": "Subhash Popuri (@pbssubhash)",
            "date": "2021/08/21",
            "description": "Powerup tool's Write Hijack DLL exploits DLL hijacking for privilege escalation.\nIn it's default mode, it builds a self deleting .bat file which executes malicious command.\nThe detection rule relies on creation of the malicious bat file (debug.bat by default).\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Image|endswith": [
                        "\\powershell.exe",
                        "\\pwsh.exe"
                    ],
                    "TargetFilename|endswith": ".bat"
                }
            },
            "falsepositives": [
                "Any powershell script that creates bat files"
            ],
            "id": "602a1f13-c640-4d73-b053-be9a2fa58b96",
            "level": "high",
            "logsource": {
                "category": "file_event",
                "product": "windows"
            },
            "modified": "2024/06/27",
            "references": [
                "https://powersploit.readthedocs.io/en/latest/Privesc/Write-HijackDll/"
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.defense_evasion",
                "attack.t1574.001"
            ],
            "title": "HackTool - Powerup Write Hijack DLL"
        },
        {
            "author": "Tim Rauch (rule), Elastic (idea)",
            "date": "2022/10/21",
            "description": "Detects attempts to create a DLL file to a known desktop application dependencies folder such as Slack, Teams or OneDrive and by an unusual process. This may indicate an attempt to load a malicious module via DLL search order hijacking.",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "Image|endswith": "\\cmd.exe",
                    "TargetFilename|contains|all": [
                        "\\Users\\",
                        "\\AppData\\",
                        "\\Microsoft\\OneDrive\\",
                        "\\api-ms-win-core-"
                    ]
                },
                "selection": {
                    "Image|endswith": [
                        "\\winword.exe",
                        "\\excel.exe",
                        "\\powerpnt.exe",
                        "\\MSACCESS.EXE",
                        "\\MSPUB.EXE",
                        "\\fltldr.exe",
                        "\\cmd.exe",
                        "\\certutil.exe",
                        "\\mshta.exe",
                        "\\cscript.exe",
                        "\\wscript.exe",
                        "\\curl.exe",
                        "\\powershell.exe",
                        "\\pwsh.exe"
                    ],
                    "TargetFilename|contains": [
                        "\\Microsoft\\OneDrive\\",
                        "\\Microsoft OneDrive\\",
                        "\\Microsoft\\Teams\\",
                        "\\Local\\slack\\app-",
                        "\\Local\\Programs\\Microsoft VS Code\\"
                    ],
                    "TargetFilename|contains|all": [
                        "\\Users\\",
                        "\\AppData\\"
                    ],
                    "TargetFilename|endswith": ".dll"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "dbbd9f66-2ed3-4ca2-98a4-6ea985dd1a1c",
            "level": "medium",
            "logsource": {
                "category": "file_event",
                "product": "windows"
            },
            "references": [
                "https://github.com/elastic/protections-artifacts/commit/746086721fd385d9f5c6647cada1788db4aea95f#diff-5d46dd4ac6866b4337ec126be8cee0e115467b3e8703794ba6f6df6432c806bc",
                "https://posts.specterops.io/automating-dll-hijack-discovery-81c4295904b0"
            ],
            "status": "test",
            "tags": [
                "attack.t1566",
                "attack.t1566.001",
                "attack.initial_access",
                "attack.t1574",
                "attack.t1574.001",
                "attack.defense_evasion"
            ],
            "title": "Potential Initial Access via DLL Search Order Hijacking"
        },
        {
            "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/07/30",
            "description": "Detects when an attacker create a similar folder structure to windows system folders such as (Windows, Program Files...)\nbut with a space in order to trick DLL load search order and perform a \"DLL Search Order Hijacking\" attack\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "TargetFilename|startswith": [
                        "C:\\Windows \\",
                        "C:\\Program Files \\",
                        "C:\\Program Files (x86) \\"
                    ],
                    "TargetFilename|endswith": ".dll"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "b6f91281-20aa-446a-b986-38a92813a18f",
            "level": "high",
            "logsource": {
                "category": "file_event",
                "product": "windows"
            },
            "references": [
                "https://twitter.com/cyb3rops/status/1552932770464292864",
                "https://www.wietzebeukema.nl/blog/hijacking-dlls-in-windows"
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.defense_evasion",
                "attack.t1574.002"
            ],
            "title": "DLL Search Order Hijackig Via Additional Space in Path"
        },
        {
            "author": "frack113",
            "date": "2022/05/09",
            "description": "Detects WerFault copoed to a suspicious folder, which could be a sign of WerFault DLL hijacking",
            "detection": {
                "condition": "selection and not filter_whitelist",
                "filter_whitelist": {
                    "TargetFilename|contains": [
                        "\\System32\\",
                        "\\SysWOW64\\",
                        "\\WinSxS\\"
                    ]
                },
                "selection": {
                    "TargetFilename|endswith": [
                        "\\WerFault.exe",
                        "\\wer.dll"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "28a452f3-786c-4fd8-b8f2-bddbe9d616d1",
            "level": "high",
            "logsource": {
                "category": "file_event",
                "product": "windows"
            },
            "references": [
                "https://www.bleepingcomputer.com/news/security/hackers-are-now-hiding-malware-in-windows-event-logs/"
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.defense_evasion",
                "attack.t1574.001"
            ],
            "title": "Creation of an WerFault.exe in Unusual Folder"
        },
        {
            "author": "frack113",
            "date": "2022/08/12",
            "description": "Detects creation of a malicious DLL file in the location where the OneDrive or Team applications\nUpon execution of the Teams or OneDrive application, the dropped malicious DLL file (\"iphlpapi.dll\") is sideloaded\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "TargetFilename|contains|all": [
                        "iphlpapi.dll",
                        "\\AppData\\Local\\Microsoft"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "1908fcc1-1b92-4272-8214-0fbaf2fa5163",
            "level": "high",
            "logsource": {
                "category": "file_event",
                "product": "windows"
            },
            "references": [
                "https://blog.cyble.com/2022/07/27/targeted-attacks-being-carried-out-via-dll-sideloading/"
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.defense_evasion",
                "attack.t1574.002"
            ],
            "title": "Malicious DLL File Dropped in the Teams or OneDrive Folder"
        },
        {
            "author": "Sreeman",
            "date": "2020/01/13",
            "description": "The Tasks folder in system32 and syswow64 are globally writable paths.\nAdversaries can take advantage of this and load or influence any script hosts or ANY .NET Application\nin Tasks to load and execute a custom assembly into cscript, wscript, regsvr32, mshta, eventvwr\n",
            "detection": {
                "condition": "all of selection*",
                "selection1": {
                    "CommandLine|contains": [
                        "echo ",
                        "copy ",
                        "type ",
                        "file createnew"
                    ]
                },
                "selection2": {
                    "CommandLine|contains": [
                        " C:\\Windows\\System32\\Tasks\\",
                        " C:\\Windows\\SysWow64\\Tasks\\"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "fields": [
                "CommandLine",
                "ParentProcess"
            ],
            "id": "cc4e02ba-9c06-48e2-b09e-2500cace9ae0",
            "level": "high",
            "modified": "2022/12/25",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "status": "test",
            "references": [
                "https://twitter.com/subTee/status/1216465628946563073",
                "https://gist.github.com/am0nsec/8378da08f848424e4ab0cc5b317fdd26"
            ],
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.execution",
                "attack.t1574.002"
            ],
            "title": "Tasks Folder Evasion"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2017/05/08",
            "description": "Detects the installation of a DNS plugin DLL via ServerLevelPluginDll parameter in registry, which can be used to execute code in context of the DNS server (restart required)",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains|all": [
                        "/config",
                        "/serverlevelplugindll"
                    ],
                    "Image|endswith": "\\dnscmd.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "f63b56ee-3f79-4b8a-97fb-5c48007e8573",
            "level": "high",
            "modified": "2023/02/05",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://medium.com/@esnesenon/feature-not-bug-dnsadmin-to-dc-compromise-in-one-line-a0f779b8dc83",
                "https://blog.3or.de/hunting-dns-server-level-plugin-dll-injection.html"
            ],
            "related": [
                {
                    "id": "e61e8a88-59a9-451c-874e-70fcc9740d67",
                    "type": "derived"
                },
                {
                    "id": "cbe51394-cd93-4473-b555-edf0144952d9",
                    "type": "derived"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1574.002",
                "attack.t1112"
            ],
            "title": "New DNS ServerLevelPluginDll Installed Via Dnscmd.EXE"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/02/28",
            "description": "Detection of sc.exe utility adding a new service with special permission which hides that service.",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains": "sdset"
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\sc.exe"
                    },
                    {
                        "OriginalFileName": "sc.exe"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "98c5aeef-32d5-492f-b174-64a691896d25",
            "level": "medium",
            "references": [
                "https://blog.talosintelligence.com/2021/10/threat-hunting-in-large-datasets-by.html",
                "https://www.sans.org/blog/red-team-tactics-hiding-windows-services/",
                "https://twitter.com/Alh4zr3d/status/1580925761996828672",
                "https://twitter.com/0gtweet/status/1628720819537936386",
                "https://itconnect.uw.edu/tools-services-support/it-systems-infrastructure/msinf/other-help/understanding-sddl-syntax/"
            ],
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "related": [
                {
                    "id": "99cf1e02-00fb-4c0d-8375-563f978dfd37",
                    "type": "similar"
                },
                {
                    "id": "a537cfc3-4297-4789-92b5-345bfd845ad0",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.011"
            ],
            "title": "Service Security Descriptor Tampering Via Sc.EXE"
        },
        {
            "author": "Sreeman",
            "date": "2020/09/29",
            "description": "Detects the modification of an existing service in order to execute an arbitrary payload when the service is started or killed as a potential method for persistence.",
            "detection": {
                "condition": "selection_sc or all of selection_reg_*",
                "selection_reg_ext": {
                    "CommandLine|contains": [
                        ".sh",
                        ".exe",
                        ".dll",
                        ".bin$",
                        ".bat",
                        ".cmd",
                        ".js",
                        ".msh$",
                        ".reg$",
                        ".scr",
                        ".ps",
                        ".vb",
                        ".jar",
                        ".pl"
                    ]
                },
                "selection_reg_img": [
                    {
                        "CommandLine|contains|all": [
                            "reg ",
                            "add ",
                            "FailureCommand"
                        ]
                    },
                    {
                        "CommandLine|contains|all": [
                            "reg ",
                            "add ",
                            "ImagePath"
                        ]
                    }
                ],
                "selection_sc": [
                    {
                        "CommandLine|contains|all": [
                            "sc ",
                            "config ",
                            "binpath="
                        ]
                    },
                    {
                        "CommandLine|contains|all": [
                            "sc ",
                            "failure",
                            "command="
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "38879043-7e1e-47a9-8d46-6bec88e201df",
            "level": "medium",
            "modified": "2023/02/04",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://pentestlab.blog/2020/01/22/persistence-modify-existing-service/"
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.t1543.003",
                "attack.t1574.011"
            ],
            "title": "Potential Persistence Attempt Via Existing Service Tampering"
        },
        {
            "author": "Christian Burkard (Nextron Systems)",
            "date": "2021/09/20",
            "description": "Detects the execution of Xwizard tool from a non-default directory.\nWhen executed from a non-default directory, this utility can be abused in order to side load a custom version of \"xwizards.dll\".\n",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_legit_location": {
                    "Image|startswith": [
                        "C:\\Windows\\System32\\",
                        "C:\\Windows\\SysWOW64\\"
                    ]
                },
                "selection": [
                    {
                        "Image|endswith": "\\xwizard.exe"
                    },
                    {
                        "OriginalFileName": "xwizard.exe"
                    }
                ]
            },
            "falsepositives": [
                "Windows installed on non-C drive"
            ],
            "id": "193d5ccd-6f59-40c6-b5b0-8e32d5ddd3d1",
            "level": "high",
            "modified": "2024/04/22",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://lolbas-project.github.io/lolbas/Binaries/Xwizard/",
                "http://www.hexacorn.com/blog/2017/07/31/the-wizard-of-x-oppa-plugx-style/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1574.002"
            ],
            "title": "Xwizard.EXE Execution From Non-Default Location"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2019/02/06",
            "description": "Detects execution of the Notepad++ updater in a suspicious directory, which is often used in DLL side-loading attacks",
            "detection": {
                "condition": "selection and not 1 of filter_*",
                "filter_programfiles": {
                    "Image|endswith": [
                        "\\Program Files\\Notepad++\\updater\\GUP.exe",
                        "\\Program Files (x86)\\Notepad++\\updater\\GUP.exe"
                    ]
                },
                "filter_user": {
                    "Image|contains": "\\Users\\",
                    "Image|endswith": [
                        "\\AppData\\Local\\Notepad++\\updater\\GUP.exe",
                        "\\AppData\\Roaming\\Notepad++\\updater\\GUP.exe"
                    ]
                },
                "selection": {
                    "Image|endswith": "\\GUP.exe"
                }
            },
            "falsepositives": [
                "Execution of tools named GUP.exe and located in folders different than Notepad++\\updater"
            ],
            "id": "0a4f6091-223b-41f6-8743-f322ec84930b",
            "level": "high",
            "modified": "2022/08/13",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://www.fireeye.com/blog/threat-research/2018/09/apt10-targeting-japanese-corporations-using-updated-ttps.html"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1574.002"
            ],
            "title": "Suspicious GUP Usage"
        },
        {
            "author": "Ivan Dyachkov, Yulia Fomina, oscd.community",
            "date": "2020/10/07",
            "description": "Detects using register-cimprovider.exe to execute arbitrary dll file.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains|all": [
                        "-path",
                        "dll"
                    ],
                    "Image|endswith": "\\register-cimprovider.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "fields": [
                "CommandLine"
            ],
            "id": "a2910908-e86f-4687-aeba-76a5f996e652",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2021/11/27",
            "status": "test",
            "references": [
                "https://twitter.com/PhilipTsukerman/status/992021361106268161",
                "https://lolbas-project.github.io/lolbas/Binaries/Register-cimprovider/"
            ],
            "tags": [
                "attack.defense_evasion",
                "attack.t1574"
            ],
            "title": "DLL Execution Via Register-cimprovider.exe"
        },
        {
            "author": "elhoim",
            "date": "2022/09/09",
            "description": "Detects renamed vmnat.exe or portable version that can be used for DLL side-loading",
            "detection": {
                "condition": "selection and not 1 of filter_*",
                "filter_rename": {
                    "Image|endswith": "vmnat.exe"
                },
                "selection": {
                    "OriginalFileName": "vmnat.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "7b4f794b-590a-4ad4-ba18-7964a2832205",
            "level": "high",
            "modified": "2023/02/03",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://twitter.com/malmoeb/status/1525901219247845376"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1574.002"
            ],
            "title": "Renamed Vmnat.exe Execution"
        },
        {
            "author": "Teymur Kheirkhabarov",
            "date": "2019/10/26",
            "description": "Detection of sc.exe utility spawning by user with Medium integrity level to change service ImagePath or FailureCommand",
            "detection": {
                "condition": "scbynonadmin and 1 of selection_*",
                "scbynonadmin": {
                    "Image|endswith": "\\sc.exe",
                    "IntegrityLevel": "Medium"
                },
                "selection_binpath": {
                    "CommandLine|contains|all": [
                        "config",
                        "binPath"
                    ]
                },
                "selection_failure": {
                    "CommandLine|contains|all": [
                        "failure",
                        "command"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "d937b75f-a665-4480-88a5-2f20e9f9b22a",
            "level": "high",
            "modified": "2022/07/14",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment",
                "https://pentestlab.blog/2017/03/30/weak-service-permissions/"
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.011"
            ],
            "title": "Possible Privilege Escalation via Weak Service Permissions"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2022/08/20",
            "description": "Detects the use of SharpUp, a tool for local privilege escalation",
            "detection": {
                "condition": "selection",
                "selection": [
                    {
                        "Image|endswith": "\\SharpUp.exe"
                    },
                    {
                        "Description": "SharpUp"
                    },
                    {
                        "CommandLine|contains": [
                            "HijackablePaths",
                            "UnquotedServicePath",
                            "ProcessDLLHijack",
                            "ModifiableServiceBinaries",
                            "ModifiableScheduledTask",
                            "DomainGPPPassword",
                            "CachedGPPPassword"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "c484e533-ee16-4a93-b6ac-f0ea4868b2f1",
            "level": "critical",
            "modified": "2023/02/13",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://github.com/GhostPack/SharpUp"
            ],
            "status": "test",
            "tags": [
                "attack.privilege_escalation",
                "attack.t1615",
                "attack.t1569.002",
                "attack.t1574.005"
            ],
            "title": "HackTool - SharpUp PrivEsc Tool Execution"
        },
        {
            "id": "a537cfc3-4297-4789-92b5-345bfd845ad0",
            "author": "Andreas Hunkeler (@Karneades)",
            "date": "2021/12/20",
            "description": "Detects usage of the \"sc.exe\" utility adding a new service with special permission seen used by threat actors which makes the service hidden and unremovable.",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains|all": [
                        "sdset",
                        "DCLCWPDTSD"
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\sc.exe"
                    },
                    {
                        "OriginalFileName": "sc.exe"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "level": "high",
            "modified": "2022/08/08",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://blog.talosintelligence.com/2021/10/threat-hunting-in-large-datasets-by.html",
                "https://www.sans.org/blog/red-team-tactics-hiding-windows-services/",
                "https://twitter.com/Alh4zr3d/status/1580925761996828672",
                "https://itconnect.uw.edu/tools-services-support/it-systems-infrastructure/msinf/other-help/understanding-sddl-syntax/"
            ],
            "related": [
                {
                    "id": "99cf1e02-00fb-4c0d-8375-563f978dfd37",
                    "type": "similar"
                },
                {
                    "type": "similar",
                    "id": "98c5aeef-32d5-492f-b174-64a691896d25"
                }
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.011"
            ],
            "title": "Service DACL Abuse To Hide Services Via Sc.EXE"
        },
        {
            "author": "frack113",
            "date": "2021/12/30",
            "description": "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services.\nAdversaries may use flaws in the permissions for registry to redirect from the originally specified executable to one that they control, in order to launch their own code at Service start.\nWindows stores local service configuration information in the Registry under HKLM\\SYSTEM\\CurrentControlSet\\Services\n",
            "detection": {
                "condition": "all of selection*",
                "selection": {
                    "CommandLine|contains|all": [
                        "add ",
                        "SYSTEM\\CurrentControlSet\\Services\\",
                        " ImagePath "
                    ],
                    "Image|endswith": "\\reg.exe"
                },
                "selection_value": {
                    "CommandLine|contains|windash": " -d "
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "9b0b7ac3-6223-47aa-a3fd-e8f211e637db",
            "level": "medium",
            "modified": "2024/03/13",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1574.011/T1574.011.md#atomic-test-2---service-imagepath-change-with-regexe"
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.t1574.011"
            ],
            "title": "Changing Existing Service ImagePath Value Via Reg.EXE"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/10/17",
            "description": "Detects usage of the \"Set-Service\" powershell cmdlet to configure a new SecurityDescriptor that allows a service to be hidden from other utilities such as \"sc.exe\", \"Get-Service\"...etc. (Works only in powershell 7)",
            "detection": {
                "condition": "all of selection_*",
                "selection_cmdlet": {
                    "CommandLine|contains": [
                        "-SecurityDescriptorSddl ",
                        "-sd "
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\pwsh.exe"
                    },
                    {
                        "OriginalFileName": "pwsh.dll"
                    }
                ],
                "selection_sddl": {
                    "CommandLine|contains|all": [
                        "Set-Service ",
                        "DCLCWPDTSD"
                    ]
                }
            },
            "falsepositives": [
                "Rare intended use of hidden services"
            ],
            "id": "514e4c3a-c77d-4cde-a00f-046425e2301e",
            "level": "high",
            "references": [
                "https://twitter.com/Alh4zr3d/status/1580925761996828672",
                "https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.management/set-service?view=powershell-7.2"
            ],
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "related": [
                {
                    "id": "a537cfc3-4297-4789-92b5-345bfd845ad0",
                    "type": "derived"
                },
                {
                    "id": "953945c5-22fe-4a92-9f8a-a9edc1e522da",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.011"
            ],
            "title": "Abuse of Service Permissions to Hide Services Via Set-Service"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2019/07/17",
            "description": "Detects a \"regsvr32\" execution where the DLL doesn't contain a common file extension.",
            "detection": {
                "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*",
                "filter_main_empty_4688": {
                    "CommandLine": ""
                },
                "filter_main_legit_ext": {
                    "CommandLine|contains": [
                        ".ax",
                        ".cpl",
                        ".dll",
                        ".ocx"
                    ]
                },
                "filter_main_null_4688": {
                    "CommandLine": null
                },
                "filter_optional_avg": {
                    "CommandLine|contains": ".bav"
                },
                "filter_optional_pascal": {
                    "CommandLine|contains": ".ppl"
                },
                "selection": [
                    {
                        "Image|endswith": "\\regsvr32.exe"
                    },
                    {
                        "OriginalFileName": "REGSVR32.EXE"
                    }
                ]
            },
            "falsepositives": [
                "Other legitimate extensions currently not in the list either from third party or specific Windows components."
            ],
            "id": "50919691-7302-437f-8e10-1fe088afa145",
            "level": "medium",
            "modified": "2023/05/24",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://app.any.run/tasks/34221348-072d-4b70-93f3-aa71f6ebecad/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1574",
                "attack.execution"
            ],
            "title": "Regsvr32 DLL Execution With Uncommon Extension"
        },
        {
            "author": "Anton Kutepov, oscd.community",
            "date": "2020/02/05",
            "description": "Detects using SettingSyncHost.exe to run hijacked binary",
            "detection": {
                "condition": "not system_utility and parent_is_settingsynchost",
                "parent_is_settingsynchost": {
                    "ParentCommandLine|contains|all": [
                        "cmd.exe /c",
                        "RoamDiag.cmd",
                        "-outputpath"
                    ]
                },
                "system_utility": {
                    "Image|startswith": [
                        "C:\\Windows\\System32\\",
                        "C:\\Windows\\SysWOW64\\"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "fields": [
                "TargetFilename",
                "Image"
            ],
            "id": "b2ddd389-f676-4ac4-845a-e00781a48e5f",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2021/11/27",
            "status": "test",
            "references": [
                "https://www.hexacorn.com/blog/2020/02/02/settingsynchost-exe-as-a-lolbin"
            ],
            "tags": [
                "attack.execution",
                "attack.defense_evasion",
                "attack.t1574.008"
            ],
            "title": "Using SettingSyncHost.exe as LOLBin"
        },
        {
            "author": "Janantha Marasinghe",
            "date": "2022/11/18",
            "description": "Detects potential suspicious behaviour using secedit.exe. Such as exporting or modifying the security policy",
            "detection": {
                "condition": "selection_img and (1 of selection_flags_*)",
                "selection_flags_configure": {
                    "CommandLine|contains|all": [
                        "/configure",
                        "/db"
                    ]
                },
                "selection_flags_discovery": {
                    "CommandLine|contains|all": [
                        "/export",
                        "/cfg"
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\secedit.exe"
                    },
                    {
                        "OriginalFileName": "SeCEdit"
                    }
                ]
            },
            "falsepositives": [
                "Legitimate administrative use"
            ],
            "id": "c2c76b77-32be-4d1f-82c9-7e544bdfe0eb",
            "level": "medium",
            "modified": "2022/12/30",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://blueteamops.medium.com/secedit-and-i-know-it-595056dee53d",
                "https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/secedit"
            ],
            "status": "test",
            "tags": [
                "attack.discovery",
                "attack.persistence",
                "attack.defense_evasion",
                "attack.credential_access",
                "attack.privilege_escalation",
                "attack.t1562.002",
                "attack.t1547.001",
                "attack.t1505.005",
                "attack.t1556.002",
                "attack.t1562",
                "attack.t1574.007",
                "attack.t1564.002",
                "attack.t1546.008",
                "attack.t1546.007",
                "attack.t1547.014",
                "attack.t1547.010",
                "attack.t1547.002",
                "attack.t1557",
                "attack.t1082"
            ],
            "title": "Potential Suspicious Activity Using SeCEdit"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/08/02",
            "description": "Detects execution of VMware Xfer utility (VMwareXferlogs.exe) from the non-default directory which may be an attempt to sideload arbitrary DLL",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "Image|startswith": "C:\\Program Files\\VMware\\"
                },
                "selection": {
                    "Image|endswith": "\\VMwareXferlogs.exe"
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "ebea773c-a8f1-42ad-a856-00cb221966e8",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://www.sentinelone.com/labs/lockbit-ransomware-side-loads-cobalt-strike-beacon-with-legitimate-vmware-utility/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1574.002"
            ],
            "title": "DLL Sideloading by VMware Xfer Utility"
        },
        {
            "id": "e173ad47-4388-4012-ae62-bd13f71c18a8",
            "author": "@gott_cyber",
            "date": "2022/08/29",
            "description": "Detects the use of the PhoneDeepLink parameter to potentially sideload a DLL file that does not exist. This non-existent DLL file is named \"ShellChromeAPI.dll\".\nAdversaries can drop their own renamed DLL and execute it via DeviceEnroller.exe using this parameter\n",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains": "/PhoneDeepLink"
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\deviceenroller.exe"
                    },
                    {
                        "OriginalFileName": "deviceenroller.exe"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "level": "medium",
            "references": [
                "https://mobile.twitter.com/0gtweet/status/1564131230941122561",
                "https://strontic.github.io/xcyclopedia/library/DeviceEnroller.exe-24BEF0D6B0ECED36BB41831759FDE18D.html"
            ],
            "modified": "2023/02/04",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "related": [
                {
                    "type": "similar",
                    "id": "ee4c5d06-3abc-48cc-8885-77f1c20f4451"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1574.002"
            ],
            "title": "Potential DLL Sideloading Via DeviceEnroller.EXE"
        },
        {
            "author": "Teymur Kheirkhabarov",
            "date": "2019/10/26",
            "description": "Detect modification of services configuration (ImagePath, FailureCommand and ServiceDLL) in registry by processes with Medium integrity level",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains": [
                        "\\ImagePath",
                        "\\FailureCommand",
                        "\\ServiceDll"
                    ],
                    "IntegrityLevel": "Medium",
                    "CommandLine|contains|all": [
                        "ControlSet",
                        "services"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "0f9c21f1-6a73-4b0e-9809-cb562cb8d981",
            "level": "high",
            "modified": "2023/01/30",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment",
                "https://pentestlab.blog/2017/03/31/insecure-registry-permissions/"
            ],
            "status": "test",
            "tags": [
                "attack.privilege_escalation",
                "attack.t1574.011"
            ],
            "title": "Potential Privilege Escalation via Service Permissions Weakness"
        },
        {
            "id": "ca5583e9-8f80-46ac-ab91-7f314d13b984",
            "author": "Swachchhanda Shrawan Poudel",
            "date": "2024/05/13",
            "description": "Detects potentially suspicious child processes of KeyScrambler.exe",
            "detection": {
                "condition": "all of selection_*",
                "selection_binaries": [
                    {
                        "Image|endswith": [
                            "\\cmd.exe",
                            "\\cscript.exe",
                            "\\mshta.exe",
                            "\\powershell.exe",
                            "\\pwsh.exe",
                            "\\regsvr32.exe",
                            "\\rundll32.exe",
                            "\\wscript.exe"
                        ]
                    },
                    {
                        "OriginalFileName": [
                            "Cmd.Exe",
                            "cscript.exe",
                            "mshta.exe",
                            "PowerShell.EXE",
                            "pwsh.dll",
                            "regsvr32.exe",
                            "RUNDLL32.EXE",
                            "wscript.exe"
                        ]
                    }
                ],
                "selection_parent": {
                    "ParentImage|endswith": "\\KeyScrambler.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "level": "medium",
            "references": [
                "https://twitter.com/DTCERT/status/1712785421845790799"
            ],
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "related": [
                {
                    "type": "similar",
                    "id": "d2451be2-b582-4e15-8701-4196ac180260"
                }
            ],
            "status": "experimental",
            "tags": [
                "attack.execution",
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1203",
                "attack.t1574.002"
            ],
            "title": "Potentially Suspicious Child Process of KeyScrambler.exe"
        },
        {
            "id": "7002aa10-b8d4-47ae-b5ba-51ab07e228b9",
            "author": "Bhabesh Raj",
            "date": "2022/08/01",
            "description": "Detects potential sideloading of \"mpclient.dll\" by Windows Defender processes (\"MpCmdRun\" and \"NisSrv\") from their non-default directory.",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_known_locations": {
                    "Image|startswith": [
                        "C:\\Program Files (x86)\\Windows Defender\\",
                        "C:\\Program Files\\Microsoft Security Client\\",
                        "C:\\Program Files\\Windows Defender\\",
                        "C:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\",
                        "C:\\Windows\\WinSxS\\"
                    ]
                },
                "selection": {
                    "Image|endswith": [
                        "\\MpCmdRun.exe",
                        "\\NisSrv.exe"
                    ]
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "level": "high",
            "modified": "2023/08/04",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://www.sentinelone.com/blog/living-off-windows-defender-lockbit-ransomware-sideloads-cobalt-strike-through-microsoft-security-tool"
            ],
            "related": [
                {
                    "type": "similar",
                    "id": "418dc89a-9808-4b87-b1d7-e5ae0cb6effc"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1574.002"
            ],
            "title": "Potential Mpclient.DLL Sideloading Via Defender Binaries"
        },
        {
            "author": "Bhabesh Raj",
            "date": "2022/08/02",
            "description": "Detects Code Integrity (CI) engine blocking Microsoft Defender's processes (MpCmdRun and NisSrv) from loading unsigned DLLs which may be an attempt to sideload arbitrary DLL",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": [
                        11,
                        12
                    ],
                    "ProcessPath|endswith": [
                        "\\MpCmdRun.exe",
                        "\\NisSrv.exe"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "0b0ea3cc-99c8-4730-9c53-45deee2a4c86",
            "level": "high",
            "logsource": {
                "product": "windows",
                "service": "security-mitigations"
            },
            "modified": "2022/09/28",
            "references": [
                "https://www.sentinelone.com/blog/living-off-windows-defender-lockbit-ransomware-sideloads-cobalt-strike-through-microsoft-security-tool"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1574.002"
            ],
            "title": "Microsoft Defender Blocked from Loading Unsigned DLL"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/08/03",
            "description": "Detects Code Integrity (CI) engine blocking processes from loading unsigned DLLs residing in suspicious locations",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": [
                        11,
                        12
                    ],
                    "ImageName|contains": [
                        "\\Users\\Public\\",
                        "\\PerfLogs\\",
                        "\\Desktop\\",
                        "\\Downloads\\",
                        "\\AppData\\Local\\Temp\\",
                        "C:\\Windows\\TEMP\\"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "8289bf8c-4aca-4f5a-9db3-dc3d7afe5c10",
            "level": "high",
            "logsource": {
                "product": "windows",
                "service": "security-mitigations"
            },
            "modified": "2022/09/28",
            "references": [
                "https://github.com/nasbench/EVTX-ETW-Resources/blob/45fd5be71a51aa518b1b36d4e1f36af498084e27/ETWEventsList/CSV/Windows11/21H2/W11_21H2_Pro_20220719_22000.795/Providers/Microsoft-Windows-Security-Mitigations.csv"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1574.002"
            ],
            "title": "Unsigned Binary Loaded From Suspicious Location"
        },
        {
            "author": "Dimitrios Slamaris",
            "date": "2017/05/15",
            "description": "This rule detects a DHCP server in which a specified Callout DLL (in registry) was loaded",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": 1033,
                    "Provider_Name": "Microsoft-Windows-DHCP-Server"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "13fc89a9-971e-4ca6-b9dc-aa53a445bf40",
            "level": "high",
            "logsource": {
                "product": "windows",
                "service": "system"
            },
            "modified": "2022/12/25",
            "references": [
                "https://blog.3or.de/mimilib-dhcp-server-callout-dll-injection.html",
                "https://technet.microsoft.com/en-us/library/cc726884(v=ws.10).aspx",
                "https://msdn.microsoft.com/de-de/library/windows/desktop/aa363389(v=vs.85).aspx"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1574.002"
            ],
            "title": "DHCP Server Loaded the CallOut DLL"
        },
        {
            "author": "Dimitrios Slamaris, @atc_project (fix)",
            "date": "2017/05/15",
            "description": "This rule detects a DHCP server error in which a specified Callout DLL (in registry) could not be loaded",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": [
                        1031,
                        1032,
                        1034
                    ],
                    "Provider_Name": "Microsoft-Windows-DHCP-Server"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "75edd3fd-7146-48e5-9848-3013d7f0282c",
            "level": "high",
            "logsource": {
                "product": "windows",
                "service": "system"
            },
            "modified": "2022/12/25",
            "references": [
                "https://blog.3or.de/mimilib-dhcp-server-callout-dll-injection.html",
                "https://technet.microsoft.com/en-us/library/cc726884(v=ws.10).aspx",
                "https://msdn.microsoft.com/de-de/library/windows/desktop/aa363389(v=vs.85).aspx"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1574.002"
            ],
            "title": "DHCP Server Error Failed Loading the CallOut DLL"
        },
        {
            "author": "Center for Threat Informed Defense (CTID) Summiting the Pyramid Team",
            "date": "2023/09/28",
            "description": "Detects \"read access\" requests on the services registry key.\nAdversaries may execute their own malicious payloads by hijacking the Registry entries used by services.\nAdversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts.\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "AccessList|contains": "%%1538",
                    "EventID": 4663,
                    "ObjectName|contains|all": [
                        "\\SYSTEM\\",
                        "ControlSet\\Services\\"
                    ]
                }
            },
            "falsepositives": [
                "Likely from legitimate applications reading their key. Requires heavy tuning"
            ],
            "id": "11d00fff-5dc3-428c-8184-801f292faec0",
            "level": "low",
            "logsource": {
                "definition": "Requirements: SACLs must be enabled for \"READ_CONTROL\" on the registry keys used in this rule",
                "product": "windows",
                "service": "security"
            },
            "references": [
                "https://center-for-threat-informed-defense.github.io/summiting-the-pyramid/analytics/service_registry_permissions_weakness_check/",
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1574.011/T1574.011.md#atomic-test-1---service-registry-permissions-weakness"
            ],
            "status": "experimental",
            "tags": [
                "attack.defense_evasion",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.011"
            ],
            "title": "Service Registry Key Read Access Request"
        },
        {
            "id": "cbe51394-cd93-4473-b555-edf0144952d9",
            "author": "Florian Roth (Nextron Systems)",
            "date": "2017/05/08",
            "description": "Detects a DNS server error in which a specified plugin DLL (in registry) could not be loaded",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": [
                        150,
                        770,
                        771
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "level": "high",
            "logsource": {
                "product": "windows",
                "service": "dns-server"
            },
            "modified": "2023/02/05",
            "references": [
                "https://medium.com/@esnesenon/feature-not-bug-dnsadmin-to-dc-compromise-in-one-line-a0f779b8dc83",
                "https://technet.microsoft.com/en-us/library/cc735829(v=ws.10).aspx",
                "https://twitter.com/gentilkiwi/status/861641945944391680"
            ],
            "related": [
                {
                    "id": "e61e8a88-59a9-451c-874e-70fcc9740d67",
                    "type": "derived"
                },
                {
                    "type": "derived",
                    "id": "f63b56ee-3f79-4b8a-97fb-5c48007e8573"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1574.002"
            ],
            "title": "DNS Server Error Failed Loading the ServerLevelPluginDLL"
        },
        {
            "author": "frack113",
            "date": "2021/12/30",
            "description": "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services.\nAdversaries may use flaws in the permissions for registry to redirect from the originally specified executable to one that they control, in order to launch their own code at Service start.\nWindows stores local service configuration information in the Registry under HKLM\\SYSTEM\\CurrentControlSet\\Services\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "ScriptBlockText|contains|all": [
                        "get-acl",
                        "REGISTRY::HKLM\\SYSTEM\\CurrentControlSet\\Services\\"
                    ]
                }
            },
            "falsepositives": [
                "Legitimate administrative script"
            ],
            "id": "95afc12e-3cbb-40c3-9340-84a032e596a3",
            "level": "medium",
            "logsource": {
                "category": "ps_script",
                "product": "windows",
                "definition": "Requirements: Script Block Logging must be enabled"
            },
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1574.011/T1574.011.md#atomic-test-1---service-registry-permissions-weakness",
                "https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.security/get-acl?view=powershell-7.4"
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.t1574.011",
                "stp.2a"
            ],
            "title": "Service Registry Permissions Weakness Check"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/10/24",
            "description": "Detects usage of the \"Set-Service\" powershell cmdlet to configure a new SecurityDescriptor that allows a service to be hidden from other utilities such as \"sc.exe\", \"Get-Service\"...etc. (Works only in powershell 7)",
            "detection": {
                "condition": "all of selection_*",
                "selection_sddl_flag": {
                    "ScriptBlockText|contains": [
                        "-SecurityDescriptorSddl ",
                        "-sd "
                    ]
                },
                "selection_set_service": {
                    "ScriptBlockText|contains": [
                        ";;;IU",
                        ";;;SU",
                        ";;;BA",
                        ";;;SY",
                        ";;;WD"
                    ],
                    "ScriptBlockText|contains|all": [
                        "Set-Service ",
                        "D;;"
                    ]
                }
            },
            "falsepositives": [
                "Rare intended use of hidden services",
                "Rare FP could occur due to the non linearity of the ScriptBlockText log"
            ],
            "id": "22d80745-6f2c-46da-826b-77adaededd74",
            "level": "high",
            "logsource": {
                "category": "ps_script",
                "product": "windows",
                "definition": "Requirements: Script Block Logging must be enabled"
            },
            "references": [
                "https://twitter.com/Alh4zr3d/status/1580925761996828672",
                "https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.management/set-service?view=powershell-7.2"
            ],
            "related": [
                {
                    "id": "a95b9b42-1308-4735-a1af-abb1c5e6f5ac",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.011"
            ],
            "title": "Suspicious Service DACL Modification Via Set-Service Cmdlet - PS"
        },
        {
            "author": "frack113",
            "date": "2021/12/30",
            "description": "Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR.\nThe COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR).\nThese profiliers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR.\n(Citation: Microsoft Profiling Mar 2017)\n(Citation: Microsoft COR_PROFILER Feb 2013)\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "ScriptBlockText|contains|all": [
                        "$env:COR_ENABLE_PROFILING",
                        "$env:COR_PROFILER",
                        "$env:COR_PROFILER_PATH"
                    ]
                }
            },
            "falsepositives": [
                "Legitimate administrative script"
            ],
            "id": "23590215-4702-4a70-8805-8dc9e58314a2",
            "level": "medium",
            "logsource": {
                "category": "ps_script",
                "product": "windows",
                "definition": "Requirements: Script Block Logging must be enabled"
            },
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1574.012/T1574.012.md#atomic-test-3---registry-free-process-scope-cor_profiler"
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.t1574.012"
            ],
            "title": "Registry-Free Process Scope COR_PROFILER"
        },
        {
            "id": "953945c5-22fe-4a92-9f8a-a9edc1e522da",
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/10/17",
            "description": "Detects usage of the \"Set-Service\" powershell cmdlet to configure a new SecurityDescriptor that allows a service to be hidden from other utilities such as \"sc.exe\", \"Get-Service\"...etc. (Works only in powershell 7)",
            "detection": {
                "condition": "selection",
                "selection": {
                    "ScriptBlockText|contains": [
                        "-SecurityDescriptorSddl ",
                        "-sd "
                    ],
                    "ScriptBlockText|contains|all": [
                        "Set-Service ",
                        "DCLCWPDTSD"
                    ]
                }
            },
            "falsepositives": [
                "Rare intended use of hidden services",
                "Rare FP could occur due to the non linearity of the ScriptBlockText log"
            ],
            "level": "high",
            "logsource": {
                "category": "ps_script",
                "product": "windows",
                "definition": "Requirements: Script Block Logging must be enabled"
            },
            "references": [
                "https://twitter.com/Alh4zr3d/status/1580925761996828672",
                "https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.management/set-service?view=powershell-7.2"
            ],
            "related": [
                {
                    "type": "similar",
                    "id": "514e4c3a-c77d-4cde-a00f-046425e2301e"
                }
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1574.011"
            ],
            "title": "Abuse of Service Permissions to Hide Services Via Set-Service - PS"
        },
        {
            "id": "e61e8a88-59a9-451c-874e-70fcc9740d67",
            "author": "Florian Roth (Nextron Systems)",
            "date": "2017/05/08",
            "description": "Detects the installation of a DNS plugin DLL via ServerLevelPluginDll parameter in registry, which can be used to execute code in context of the DNS server (restart required)",
            "detection": {
                "condition": "selection",
                "selection": {
                    "TargetObject|endswith": "\\services\\DNS\\Parameters\\ServerLevelPluginDll"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "level": "high",
            "logsource": {
                "category": "registry_set",
                "product": "windows"
            },
            "modified": "2023/08/17",
            "references": [
                "https://medium.com/@esnesenon/feature-not-bug-dnsadmin-to-dc-compromise-in-one-line-a0f779b8dc83",
                "https://blog.3or.de/hunting-dns-server-level-plugin-dll-injection.html"
            ],
            "related": [
                {
                    "id": "cbe51394-cd93-4473-b555-edf0144952d9",
                    "type": "derived"
                },
                {
                    "type": "derived",
                    "id": "f63b56ee-3f79-4b8a-97fb-5c48007e8573"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1574.002",
                "attack.t1112"
            ],
            "title": "New DNS ServerLevelPluginDll Installed"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2020/07/01",
            "description": "Detects a suspicious printer driver installation with an empty Manufacturer value",
            "detection": {
                "condition": "selection and not 1 of filter_*",
                "filter_cutepdf": {
                    "TargetObject|contains": "\\CutePDF Writer v4.0\\"
                },
                "filter_pdf24": {
                    "TargetObject|contains": "\\Version-3\\PDF24\\"
                },
                "filter_vnc": {
                    "TargetObject|contains": [
                        "\\VNC Printer (PS)\\",
                        "\\VNC Printer (UD)\\"
                    ]
                },
                "selection": {
                    "Details": "(Empty)",
                    "TargetObject|contains|all": [
                        "\\Control\\Print\\Environments\\Windows x64\\Drivers",
                        "\\Manufacturer"
                    ]
                }
            },
            "falsepositives": [
                "Alerts on legitimate printer drivers that do not set any more details in the Manufacturer value"
            ],
            "id": "e0813366-0407-449a-9869-a2db1119dc41",
            "level": "high",
            "logsource": {
                "category": "registry_set",
                "product": "windows"
            },
            "modified": "2023/08/17",
            "references": [
                "https://twitter.com/SBousseaden/status/1410545674773467140"
            ],
            "status": "test",
            "tags": [
                "attack.privilege_escalation",
                "attack.t1574",
                "cve.2021.1675"
            ],
            "title": "Suspicious Printer Driver Empty Manufacturer"
        },
        {
            "author": "frack113",
            "date": "2022/08/07",
            "description": "Detects the addition of the \"Debugger\" value to the \"DbgManagedDebugger\" key in order to achieve persistence. Which will get invoked when an application crashes",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "Details": "\"C:\\Windows\\system32\\vsjitdebugger.exe\" PID %d APPDOM %d EXTEXT \"%s\" EVTHDL %d"
                },
                "selection": {
                    "TargetObject|endswith": "\\Microsoft\\.NETFramework\\DbgManagedDebugger"
                }
            },
            "falsepositives": [
                "Legitimate use of the key to setup a debugger. Which is often the case on developers machines"
            ],
            "id": "9827ae57-3802-418f-994b-d5ecf5cd974b",
            "level": "medium",
            "logsource": {
                "category": "registry_set",
                "product": "windows"
            },
            "modified": "2023/08/17",
            "references": [
                "https://www.hexacorn.com/blog/2013/09/19/beyond-good-ol-run-key-part-4/",
                "https://github.com/last-byte/PersistenceSniper"
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.t1574"
            ],
            "title": "Potential Registry Persistence Attempt Via DbgManagedDebugger"
        },
        {
            "author": "Dimitrios Slamaris",
            "date": "2017/05/15",
            "description": "Detects the installation of a Callout DLL via CalloutDlls and CalloutEnabled parameter in Registry, which can be used to execute code in context of the DHCP server (restart required)",
            "detection": {
                "condition": "selection",
                "selection": {
                    "TargetObject|endswith": [
                        "\\Services\\DHCPServer\\Parameters\\CalloutDlls",
                        "\\Services\\DHCPServer\\Parameters\\CalloutEnabled"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "9d3436ef-9476-4c43-acca-90ce06bdf33a",
            "level": "high",
            "logsource": {
                "category": "registry_set",
                "product": "windows"
            },
            "modified": "2023/08/17",
            "references": [
                "https://blog.3or.de/mimilib-dhcp-server-callout-dll-injection.html",
                "https://technet.microsoft.com/en-us/library/cc726884(v=ws.10).aspx",
                "https://msdn.microsoft.com/de-de/library/windows/desktop/aa363389(v=vs.85).aspx"
            ],
            "status": "test",
            "title": "DHCP Callout DLL Installation",
            "tags": [
                "attack.defense_evasion",
                "attack.t1574.002",
                "attack.t1112"
            ]
        },
        {
            "author": "Jose Rodriguez (@Cyb3rPandaH), OTR (Open Threat Research), Jimmy Bayne (@bohops)",
            "date": "2020/09/10",
            "description": "Detects .NET Framework CLR and .NET Core CLR \"cor_enable_profiling\" and \"cor_profiler\" variables being set and configured.",
            "detection": {
                "condition": "1 of selection_*",
                "selection_1": {
                    "TargetObject|endswith": [
                        "\\COR_ENABLE_PROFILING",
                        "\\COR_PROFILER",
                        "\\CORECLR_ENABLE_PROFILING"
                    ]
                },
                "selection_2": {
                    "TargetObject|contains": "\\CORECLR_PROFILER_PATH"
                }
            },
            "id": "ad89044a-8f49-4673-9a55-cbd88a1b374f",
            "level": "medium",
            "modified": "2023/11/24",
            "logsource": {
                "category": "registry_set",
                "product": "windows"
            },
            "references": [
                "https://twitter.com/jamieantisocial/status/1304520651248668673",
                "https://www.slideshare.net/JamieWilliams130/started-from-the-bottom-exploiting-data-sources-to-uncover-attck-behaviors",
                "https://www.sans.org/cyber-security-summit/archives",
                "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/debugging-profiling"
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.defense_evasion",
                "attack.t1574.012"
            ],
            "title": "Enabling COR Profiler Environment Variables"
        },
        {
            "author": "Christian Burkard (Nextron Systems)",
            "date": "2021/05/05",
            "description": "Detects the ld.so preload persistence file. See `man ld.so` for more information.",
            "detection": {
                "condition": "keywords",
                "keywords": [
                    "/etc/ld.so.preload"
                ]
            },
            "falsepositives": [
                "Rare temporary workaround for library misconfiguration"
            ],
            "id": "7e3c4651-c347-40c4-b1d4-d48590fdf684",
            "level": "high",
            "logsource": {
                "product": "linux"
            },
            "modified": "2022/10/09",
            "references": [
                "https://man7.org/linux/man-pages/man8/ld.so.8.html"
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1574.006"
            ],
            "title": "Code Injection by ld.so Preload"
        },
        {
            "author": "E.M. Anhaus (originally from Atomic Blue Detections, Tony Lambert), oscd.community",
            "date": "2019/10/24",
            "description": "Identifies modification of ld.so.preload for shared object injection. This technique is used by attackers to load arbitrary code into processes.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "name": "/etc/ld.so.preload",
                    "type": "PATH"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "4b3cb710-5e83-4715-8c45-8b2b5b3e5751",
            "level": "high",
            "logsource": {
                "product": "linux",
                "service": "auditd"
            },
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1574.006/T1574.006.md",
                "https://eqllib.readthedocs.io/en/latest/analytics/fd9b987a-1101-4ed3-bda6-a70300eaf57e.html"
            ],
            "modified": "2021/11/27",
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1574.006"
            ],
            "title": "Modification of ld.so.preload"
        },
        {
            "author": "David Burkett, @signalblur",
            "date": "2022/12/30",
            "description": "Detects calls to hidden files or files located in hidden directories in NIX systems.",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "name|contains": [
                        "/.cache/",
                        "/.config/",
                        "/.pyenv/",
                        "/.rustup/toolchains"
                    ]
                },
                "selection": {
                    "name|contains": "/.",
                    "type": "PATH"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "9e1bef8d-0fff-46f6-8465-9aa54e128c1e",
            "level": "low",
            "logsource": {
                "product": "linux",
                "service": "auditd"
            },
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1564.001/T1564.001.md"
            ],
            "related": [
                {
                    "id": "d08722cd-3d09-449a-80b4-83ea2d9d4616",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1574.001"
            ],
            "title": "Use Of Hidden Paths Or Files"
        }
    ],
    "x_mitre_platforms": [
        "Linux",
        "macOS",
        "Windows"
    ],
    "x_mitre_domains": [
        "enterprise-attack"
    ],
    "x_mitre_contributors": [],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "persistence"
        },
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "privilege-escalation"
        },
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "defense-evasion"
        }
    ],
    "x_mitre_detection": "Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious.\n\nLook for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.\n\nMonitor for changes to environment variables, as well as the commands to implement these changes.\n\nMonitor processes for unusual activity (e.g., a process that does not use the network begins to do so, abnormal process call trees). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.\n\nService changes are reflected in the Registry. Modification to existing services should not occur frequently. If a service binary path or failure parameters are changed to values that are not typical for that service and does not correlate with software updates, then it may be due to malicious activity. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current service information. (Citation: Autoruns for Windows) Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.",
    "x_mitre_is_subtechnique": false,
    "x_mitre_version": "1.2",
    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
    "x_mitre_data_sources": [
        "Windows Registry: Windows Registry Key Modification",
        "File: File Creation",
        "Module: Module Load",
        "Process: Process Creation",
        "Service: Service Metadata",
        "File: File Modification",
        "Command: Command Execution"
    ],
    "x_mitre_permissions_required": []
}