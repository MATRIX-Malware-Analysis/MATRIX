{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--f3dd7773-a919-47a5-b52b-5bc20850a06d",
    "created": "2024-08-13T14:46:36.684307Z",
    "modified": "2024-08-13T14:46:48.422077Z",
    "name": "Access Token Manipulation",
    "description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.An adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. Token Impersonation/Theft) or used to spawn a new process (i.e. Create Process with Token). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.[1]Any standard user can use the runas command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1134",
            "external_id": "T1134"
        },
        {
            "source_name": "CAPEC 21",
            "external_id": "malware-behavior--e848acb9-00c0-47e7-87d0-e29378d0b92f"
        },
        {
            "source_name": "CAPEC 633",
            "external_id": "malware-behavior--80bbf711-adfe-48ca-80a6-e6891cd82c32"
        },
        {
            "source_name": "mitre-attack",
            "url": "https://attack.mitre.org/techniques/T1134",
            "external_id": "T1134"
        },
        {
            "source_name": "BlackHat Atkinson Winchester Token Manipulation",
            "description": "Atkinson, J., Winchester, R. (2017, December 7). A Process is No One: Hunting for Token Manipulation. Retrieved December 21, 2017.",
            "url": "https://www.blackhat.com/docs/eu-17/materials/eu-17-Atkinson-A-Process-Is-No-One-Hunting-For-Token-Manipulation.pdf"
        },
        {
            "source_name": "Microsoft Command-line Logging",
            "description": "Mathers, B. (2017, March 7). Command line process auditing. Retrieved April 21, 2017.",
            "url": "https://technet.microsoft.com/en-us/windows-server-docs/identity/ad-ds/manage/component-updates/command-line-process-auditing"
        },
        {
            "source_name": "Microsoft LogonUser",
            "description": "Microsoft TechNet. (n.d.). Retrieved April 25, 2017.",
            "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/aa378184(v=vs.85).aspx"
        },
        {
            "source_name": "Microsoft DuplicateTokenEx",
            "description": "Microsoft TechNet. (n.d.). Retrieved April 25, 2017.",
            "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/aa446617(v=vs.85).aspx"
        },
        {
            "source_name": "Microsoft ImpersonateLoggedOnUser",
            "description": "Microsoft TechNet. (n.d.). Retrieved April 25, 2017.",
            "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/aa378612(v=vs.85).aspx"
        },
        {
            "source_name": "Pentestlab Token Manipulation",
            "description": "netbiosX. (2017, April 3). Token Manipulation. Retrieved April 21, 2017.",
            "url": "https://pentestlab.blog/2017/04/03/token-manipulation/"
        }
    ],
    "x_mitre_capa_rules": [
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "string": "SeDebugPrivilege"
                            },
                            {
                                "optional": [
                                    {
                                        "match": "modify access privileges"
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Privilege Escalation::Access Token Manipulation [T1134]"
                    ],
                    "authors": [
                        "william.ballenthin@mandiant.com"
                    ],
                    "examples": [
                        "Practical Malware Analysis Lab 01-04.exe_:0x401174"
                    ],
                    "name": "acquire debug privileges",
                    "namespace": "host-interaction/process/modify",
                    "scopes": {
                        "dynamic": "thread",
                        "static": "basic block"
                    }
                }
            }
        },
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "api": "advapi32.AdjustTokenPrivileges"
                            },
                            {
                                "optional": [
                                    {
                                        "or": [
                                            {
                                                "api": "advapi32.LookupPrivilegeValue"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Privilege Escalation::Access Token Manipulation [T1134]"
                    ],
                    "authors": [
                        "moritz.raabe@mandiant.com"
                    ],
                    "examples": [
                        "9324D1A8AE37A36AE560C37448C9705A:0x403BE0"
                    ],
                    "name": "modify access privileges",
                    "namespace": "host-interaction/process/modify",
                    "scopes": {
                        "dynamic": "thread",
                        "static": "function"
                    }
                }
            }
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2024/06/26",
            "description": "Detects the execution of the SharpDPAPI tool based on CommandLine flags and PE metadata.\nSharpDPAPI is a C# port of some DPAPI functionality from the Mimikatz project.\n",
            "detection": {
                "condition": "selection_img or (selection_other_cli and 1 of selection_other_options_*)",
                "selection_img": [
                    {
                        "Image|endswith": "\\SharpDPAPI.exe"
                    },
                    {
                        "OriginalFileName": "SharpDPAPI.exe"
                    }
                ],
                "selection_other_cli": {
                    "CommandLine|contains": [
                        " backupkey ",
                        " blob ",
                        " certificates ",
                        " credentials ",
                        " keepass ",
                        " masterkeys ",
                        " rdg ",
                        " vaults "
                    ]
                },
                "selection_other_options_flags": {
                    "CommandLine|contains": [
                        " /file:",
                        " /machine",
                        " /mkfile:",
                        " /password:",
                        " /pvk:",
                        " /server:",
                        " /target:",
                        " /unprotect"
                    ]
                },
                "selection_other_options_guid": {
                    "CommandLine|contains|all": [
                        " {",
                        "}:"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "c7d33b50-f690-4b51-8cfb-0fb912a31e57",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://github.com/GhostPack/SharpDPAPI"
            ],
            "status": "experimental",
            "tags": [
                "attack.privilege_escalation",
                "attack.defense_evasion",
                "attack.t1134.001",
                "attack.t1134.003"
            ],
            "title": "HackTool - SharpDPAPI Execution"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2022/01/20",
            "description": "Detects the execution of AdvancedRun utility",
            "detection": {
                "condition": "selection",
                "selection": [
                    {
                        "OriginalFileName": "AdvancedRun.exe"
                    },
                    {
                        "CommandLine|contains|all": [
                            " /EXEFilename ",
                            " /Run"
                        ]
                    },
                    {
                        "CommandLine|contains|all": [
                            " /WindowState 0",
                            " /RunAs ",
                            " /CommandLine "
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "d2b749ee-4225-417e-b20e-a8d2193cbb84",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/21",
            "references": [
                "https://twitter.com/splinter_code/status/1483815103279603714",
                "https://medium.com/s2wblog/analysis-of-destructive-malware-whispergate-targeting-ukraine-9d5d158f19f3",
                "https://elastic.github.io/security-research/malware/2022/01/01.operation-bleeding-bear/article/",
                "https://www.winhelponline.com/blog/run-program-as-system-localsystem-account-windows/"
            ],
            "related": [
                {
                    "id": "fa00b701-44c6-4679-994d-5a18afa8a707",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1564.003",
                "attack.t1134.002",
                "attack.t1059.003"
            ],
            "title": "PUA - AdvancedRun Execution"
        },
        {
            "author": "Teymur Kheirkhabarov, Roberto Rodriguez (@Cyb3rWard0g), Open Threat Research (OTR)",
            "date": "2019/10/26",
            "description": "Detection of child processes spawned with SYSTEM privileges by parents with LOCAL SERVICE or NETWORK SERVICE accounts",
            "detection": {
                "condition": "selection and not 1 of filter_*",
                "filter_rundll32": {
                    "CommandLine|contains": "DavSetCookie",
                    "Image|endswith": "\\rundll32.exe"
                },
                "selection": {
                    "IntegrityLevel": "System",
                    "ParentUser|contains": [
                        "AUTHORI",
                        "AUTORI"
                    ],
                    "ParentUser|endswith": [
                        "\\NETWORK SERVICE",
                        "\\LOCAL SERVICE"
                    ],
                    "User|contains": [
                        "AUTHORI",
                        "AUTORI"
                    ],
                    "User|endswith": [
                        "\\SYSTEM",
                        "\\Syst\u00e8me",
                        "\\\u0421\u0418\u0421\u0422\u0415\u041c\u0410"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "590a5f4c-6c8c-4f10-8307-89afe9453a9d",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows",
                "definition": "Requirements: ParentUser field needs sysmon >= 13.30"
            },
            "modified": "2022/12/15",
            "references": [
                "https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment",
                "https://foxglovesecurity.com/2016/09/26/rotten-potato-privilege-escalation-from-service-accounts-to-system/",
                "https://github.com/antonioCoco/RogueWinRM",
                "https://twitter.com/Cyb3rWard0g/status/1453123054243024897"
            ],
            "status": "test",
            "tags": [
                "attack.privilege_escalation",
                "attack.t1134.002"
            ],
            "title": "Suspicious Child Process Created as System"
        },
        {
            "author": "Teymur Kheirkhabarov, Ecco, Florian Roth",
            "date": "2019/10/26",
            "description": "Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting",
            "detection": {
                "condition": "selection_img and 1 of selection_technique_* and not 1 of filter_*",
                "filter_defender": {
                    "CommandLine|contains": "MpCmdRun"
                },
                "selection_img": {
                    "ParentImage|endswith": "\\services.exe"
                },
                "selection_technique_1": {
                    "CommandLine|contains": [
                        "cmd",
                        "%COMSPEC%"
                    ],
                    "CommandLine|contains|all": [
                        "/c",
                        "echo",
                        "\\pipe\\"
                    ]
                },
                "selection_technique_2": {
                    "CommandLine|contains|all": [
                        "rundll32",
                        ".dll,a",
                        "/p:"
                    ]
                }
            },
            "falsepositives": [
                "Commandlines containing components like cmd accidentally",
                "Jobs and services started with cmd"
            ],
            "fields": [
                "ComputerName",
                "User",
                "CommandLine"
            ],
            "id": "15619216-e993-4721-b590-4c520615a67d",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/05",
            "references": [
                "https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment",
                "https://blog.cobaltstrike.com/2014/04/02/what-happens-when-i-type-getsystem/"
            ],
            "status": "test",
            "tags": [
                "attack.privilege_escalation",
                "attack.t1134.001",
                "attack.t1134.002"
            ],
            "title": "Potential Meterpreter/CobaltStrike Activity"
        },
        {
            "author": "Florian Roth (Nextron Systems), David ANDRE (additional keywords)",
            "date": "2021/12/20",
            "description": "Detects a suspicious process creation as SYSTEM user (suspicious program or command line parameter)",
            "detection": {
                "condition": "all of selection* and not 1 of filter_*",
                "filter_config_mgr": {
                    "ParentImage|contains": ":\\Packages\\Plugins\\Microsoft.GuestConfiguration.ConfigurationforWindows\\"
                },
                "filter_java": {
                    "CommandLine|contains": " -ma ",
                    "Image|contains": [
                        ":\\Program Files (x86)\\Java\\",
                        ":\\Program Files\\Java\\"
                    ],
                    "Image|endswith": "\\bin\\jp2launcher.exe",
                    "ParentImage|contains": [
                        ":\\Program Files (x86)\\Java\\",
                        ":\\Program Files\\Java\\"
                    ],
                    "ParentImage|endswith": "\\bin\\javaws.exe"
                },
                "filter_main_ping": {
                    "CommandLine|contains": "ping 127.0.0.1 -n"
                },
                "filter_vs": {
                    "Image|endswith": "\\PING.EXE",
                    "ParentCommandLine|contains": "\\DismFoDInstall.cmd"
                },
                "selection": {
                    "IntegrityLevel": "System",
                    "User|contains": [
                        "AUTHORI",
                        "AUTORI"
                    ]
                },
                "selection_special": [
                    {
                        "Image|endswith": [
                            "\\calc.exe",
                            "\\cscript.exe",
                            "\\forfiles.exe",
                            "\\hh.exe",
                            "\\mshta.exe",
                            "\\ping.exe",
                            "\\wscript.exe"
                        ]
                    },
                    {
                        "CommandLine|contains": [
                            " -NoP ",
                            " -W Hidden ",
                            " -decode ",
                            " /decode ",
                            " /urlcache ",
                            " -urlcache ",
                            " -e* JAB",
                            " -e* SUVYI",
                            " -e* SQBFAFgA",
                            " -e* aWV4I",
                            " -e* IAB",
                            " -e* PAA",
                            " -e* aQBlAHgA",
                            "vssadmin delete shadows",
                            "reg SAVE HKLM",
                            " -ma ",
                            "Microsoft\\Windows\\CurrentVersion\\Run",
                            ".downloadstring(",
                            ".downloadfile(",
                            " /ticket:",
                            "dpapi::",
                            "event::clear",
                            "event::drop",
                            "id::modify",
                            "kerberos::",
                            "lsadump::",
                            "misc::",
                            "privilege::",
                            "rpc::",
                            "sekurlsa::",
                            "sid::",
                            "token::",
                            "vault::cred",
                            "vault::list",
                            " p::d ",
                            ";iex(",
                            "MiniDump",
                            "net user "
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Administrative activity",
                "Scripts and administrative tools used in the monitored environment",
                "Monitoring activity"
            ],
            "id": "2617e7ed-adb7-40ba-b0f3-8f9945fe6c09",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2024/07/22",
            "references": [
                "Internal Research",
                "https://tools.thehacker.recipes/mimikatz/modules"
            ],
            "status": "test",
            "tags": [
                "attack.credential_access",
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1134",
                "attack.t1003",
                "attack.t1027"
            ],
            "title": "Suspicious SYSTEM User Process Creation"
        },
        {
            "author": "Sai Prashanth Pulisetti @pulisettis, Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/12/27",
            "description": "Detects execution of the SharpImpersonation tool. Which can be used to manipulate tokens on a Windows computers remotely (PsExec/WmiExec) or interactively",
            "detection": {
                "condition": "1 of selection_*",
                "selection_cli": [
                    {
                        "CommandLine|contains|all": [
                            " user:",
                            " binary:"
                        ]
                    },
                    {
                        "CommandLine|contains|all": [
                            " user:",
                            " shellcode:"
                        ]
                    },
                    {
                        "CommandLine|contains": [
                            " technique:CreateProcessAsUserW",
                            " technique:ImpersonateLoggedOnuser"
                        ]
                    }
                ],
                "selection_img": [
                    {
                        "Image|endswith": "\\SharpImpersonation.exe"
                    },
                    {
                        "OriginalFileName": "SharpImpersonation.exe"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "f89b08d0-77ad-4728-817b-9b16c5a69c7a",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/13",
            "references": [
                "https://s3cur3th1ssh1t.github.io/SharpImpersonation-Introduction/",
                "https://github.com/S3cur3Th1sSh1t/SharpImpersonation"
            ],
            "related": [
                {
                    "id": "cf0c254b-22f1-4b2b-8221-e137b3c0af94",
                    "type": "similar"
                }
            ],
            "tags": [
                "attack.privilege_escalation",
                "attack.defense_evasion",
                "attack.t1134.001",
                "attack.t1134.003"
            ],
            "status": "test",
            "title": "HackTool - SharpImpersonation Execution"
        },
        {
            "id": "cf0c254b-22f1-4b2b-8221-e137b3c0af94",
            "author": "Sai Prashanth Pulisetti @pulisettis",
            "date": "2022/12/21",
            "description": "Detects execution of the Impersonate tool. Which can be used to manipulate tokens on a Windows computers remotely (PsExec/WmiExec) or interactively",
            "detection": {
                "condition": "all of selection_commandline_* or 1 of selection_hash_*",
                "selection_commandline_exe": {
                    "CommandLine|contains": "impersonate.exe"
                },
                "selection_commandline_opt": {
                    "CommandLine|contains": [
                        " list ",
                        " exec ",
                        " adduser "
                    ]
                },
                "selection_hash_ext": [
                    {
                        "md5": "9520714AB576B0ED01D1513691377D01"
                    },
                    {
                        "sha256": "E81CC96E2118DC4FBFE5BAD1604E0AC7681960143E2101E1A024D52264BB0A8A"
                    },
                    {
                        "Imphash": "0A358FFC1697B7A07D0E817AC740DF62"
                    }
                ],
                "selection_hash_plain": {
                    "Hashes|contains": [
                        "MD5=9520714AB576B0ED01D1513691377D01",
                        "SHA256=E81CC96E2118DC4FBFE5BAD1604E0AC7681960143E2101E1A024D52264BB0A8A",
                        "IMPHASH=0A358FFC1697B7A07D0E817AC740DF62"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/08",
            "references": [
                "https://sensepost.com/blog/2022/abusing-windows-tokens-to-compromise-active-directory-without-touching-lsass/",
                "https://github.com/sensepost/impersonate"
            ],
            "tags": [
                "attack.privilege_escalation",
                "attack.defense_evasion",
                "attack.t1134.001",
                "attack.t1134.003"
            ],
            "status": "test",
            "title": "HackTool - Impersonate Execution"
        },
        {
            "id": "fa00b701-44c6-4679-994d-5a18afa8a707",
            "author": "Florian Roth (Nextron Systems)",
            "date": "2022/01/20",
            "description": "Detects the execution of AdvancedRun utility in the context of the TrustedInstaller, SYSTEM, Local Service or Network Service accounts",
            "detection": {
                "condition": "all of selection*",
                "selection": {
                    "CommandLine|contains": [
                        "/EXEFilename",
                        "/CommandLine"
                    ]
                },
                "selection_runas": [
                    {
                        "CommandLine|contains": [
                            " /RunAs 8 ",
                            " /RunAs 4 ",
                            " /RunAs 10 ",
                            " /RunAs 11 "
                        ]
                    },
                    {
                        "CommandLine|endswith": [
                            "/RunAs 8",
                            "/RunAs 4",
                            "/RunAs 10",
                            "/RunAs 11"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/21",
            "references": [
                "https://twitter.com/splinter_code/status/1483815103279603714",
                "https://medium.com/s2wblog/analysis-of-destructive-malware-whispergate-targeting-ukraine-9d5d158f19f3",
                "https://elastic.github.io/security-research/malware/2022/01/01.operation-bleeding-bear/article/",
                "https://www.winhelponline.com/blog/run-program-as-system-localsystem-account-windows/"
            ],
            "related": [
                {
                    "type": "similar",
                    "id": "d2b749ee-4225-417e-b20e-a8d2193cbb84"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1134.002"
            ],
            "title": "PUA - AdvancedRun Suspicious Execution"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2022/07/23",
            "description": "Detects the use of parent process ID spoofing tools like Didier Stevens tool SelectMyParent",
            "detection": {
                "condition": "selection",
                "selection": [
                    {
                        "Image|endswith": "\\SelectMyParent.exe"
                    },
                    {
                        "CommandLine|contains": [
                            "PPID-spoof",
                            "ppid_spoof",
                            "spoof-ppid",
                            "spoof_ppid",
                            "ppidspoof",
                            "spoofppid",
                            "spoofedppid",
                            " -spawnto "
                        ]
                    },
                    {
                        "OriginalFileName|contains": [
                            "PPID-spoof",
                            "ppid_spoof",
                            "spoof-ppid",
                            "spoof_ppid",
                            "ppidspoof",
                            "spoofppid",
                            "spoofedppid"
                        ]
                    },
                    {
                        "Description": "SelectMyParent"
                    },
                    {
                        "Imphash": [
                            "04d974875bd225f00902b4cad9af3fbc",
                            "a782af154c9e743ddf3f3eb2b8f3d16e",
                            "89059503d7fbf470e68f7e63313da3ad",
                            "ca28337632625c8281ab8a130b3d6bad"
                        ]
                    },
                    {
                        "Hashes|contains": [
                            "IMPHASH=04D974875BD225F00902B4CAD9AF3FBC",
                            "IMPHASH=A782AF154C9E743DDF3F3EB2B8F3D16E",
                            "IMPHASH=89059503D7FBF470E68F7E63313DA3AD",
                            "IMPHASH=CA28337632625C8281AB8A130B3D6BAD"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "52ff7941-8211-46f9-84f8-9903efb7077d",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/03/07",
            "references": [
                "https://pentestlab.blog/2020/02/24/parent-pid-spoofing/",
                "https://www.picussecurity.com/resource/blog/how-to-detect-parent-pid-ppid-spoofing-attacks",
                "https://www.ired.team/offensive-security/defense-evasion/parent-process-id-ppid-spoofing",
                "https://www.virustotal.com/gui/search/filename%253A*spoof*%2520filename%253A*ppid*/files"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1134.004"
            ],
            "title": "HackTool - PPID Spoofing SelectMyParent Tool Execution"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/07/08",
            "description": "Detects creation of default named pipes used by the Koh tool",
            "detection": {
                "condition": "selection",
                "selection": {
                    "PipeName|contains": [
                        "\\imposecost",
                        "\\imposingcost"
                    ]
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "0adc67e0-a68f-4ffd-9c43-28905aad5d6a",
            "level": "critical",
            "logsource": {
                "category": "pipe_created",
                "product": "windows",
                "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
            },
            "modified": "2023/08/07",
            "references": [
                "https://github.com/GhostPack/Koh/blob/0283d9f3f91cf74732ad377821986cfcb088e20a/Clients/BOF/KohClient.c#L12"
            ],
            "status": "test",
            "tags": [
                "attack.privilege_escalation",
                "attack.credential_access",
                "attack.t1528",
                "attack.t1134.001"
            ],
            "title": "HackTool - Koh Default Named Pipe"
        },
        {
            "author": "Teymur Kheirkhabarov, Ecco, Florian Roth (Nextron Systems)",
            "date": "2019/10/26",
            "description": "Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service installation",
            "detection": {
                "condition": "selection_id and 1 of selection_cli_*",
                "selection_cli_cmd": {
                    "ImagePath|contains": [
                        "cmd",
                        "%COMSPEC%"
                    ],
                    "ImagePath|contains|all": [
                        "/c",
                        "echo",
                        "\\pipe\\"
                    ]
                },
                "selection_cli_rundll": {
                    "ImagePath|contains|all": [
                        "rundll32",
                        ".dll,a",
                        "/p:"
                    ]
                },
                "selection_cli_share": {
                    "ImagePath|startswith": "\\\\\\\\127.0.0.1\\\\ADMIN$\\"
                },
                "selection_id": {
                    "EventID": 7045,
                    "Provider_Name": "Service Control Manager"
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "843544a7-56e0-4dcc-a44f-5cc266dd97d6",
            "level": "high",
            "logsource": {
                "product": "windows",
                "service": "system"
            },
            "modified": "2023/11/15",
            "references": [
                "https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment",
                "https://blog.cobaltstrike.com/2014/04/02/what-happens-when-i-type-getsystem/"
            ],
            "status": "test",
            "title": "Meterpreter or Cobalt Strike Getsystem Service Installation - System",
            "tags": [
                "attack.privilege_escalation",
                "attack.t1134.001",
                "attack.t1134.002"
            ]
        },
        {
            "author": "Thomas Patzke, @atc_project (improvements)",
            "date": "2017/02/19",
            "description": "An attacker can use the SID history attribute to gain additional privileges.",
            "detection": {
                "condition": "selection1 or (selection2 and not selection3 and not filter_null)",
                "filter_null": {
                    "SidHistory": null
                },
                "selection1": {
                    "EventID": [
                        4765,
                        4766
                    ]
                },
                "selection2": {
                    "EventID": 4738
                },
                "selection3": {
                    "SidHistory": [
                        "-",
                        "%%1793"
                    ]
                }
            },
            "falsepositives": [
                "Migration of an account into a new domain"
            ],
            "id": "2632954e-db1c-49cb-9936-67d1ef1d17d2",
            "level": "medium",
            "logsource": {
                "product": "windows",
                "service": "security"
            },
            "references": [
                "https://adsecurity.org/?p=1772"
            ],
            "status": "stable",
            "tags": [
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1134.005"
            ],
            "title": "Addition of SID History to Active Directory Object"
        },
        {
            "author": "Stamatis Chatzimangou (st0pp3r)",
            "date": "2024/01/05",
            "description": "Detects execution of NoFilter, a tool for abusing the Windows Filtering Platform for privilege escalation via hardcoded policy name indicators\n",
            "detection": {
                "condition": "1 of selection_*",
                "selection_5447": {
                    "EventID": 5447,
                    "FilterName|contains": "RonPolicy"
                },
                "selection_5449": {
                    "EventID": 5449,
                    "ProviderContextName|contains": "RonPolicy"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "7b14c76a-c602-4ae6-9717-eff868153fc0",
            "level": "high",
            "logsource": {
                "definition": "Requirements: Audit Filtering Platform Policy Change needs to be enabled",
                "product": "windows",
                "service": "security"
            },
            "references": [
                "https://github.com/deepinstinct/NoFilter/blob/121d215ab130c5e8e3ad45a7e7fcd56f4de97b4d/NoFilter/Consts.cpp",
                "https://github.com/deepinstinct/NoFilter",
                "https://www.deepinstinct.com/blog/nofilter-abusing-windows-filtering-platform-for-privilege-escalation",
                "https://x.com/_st0pp3r_/status/1742203752361128162?s=20"
            ],
            "status": "experimental",
            "tags": [
                "attack.privilege_escalation",
                "attack.t1134",
                "attack.t1134.001"
            ],
            "title": "HackTool - NoFilter Execution"
        },
        {
            "author": "Teymur Kheirkhabarov, Ecco, Florian Roth (Nextron Systems)",
            "date": "2019/10/26",
            "description": "Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service installation",
            "detection": {
                "condition": "selection_eid and 1 of selection_cli_*",
                "selection_cli_cmd": {
                    "ServiceFileName|contains": [
                        "cmd",
                        "%COMSPEC%"
                    ],
                    "ServiceFileName|contains|all": [
                        "/c",
                        "echo",
                        "\\pipe\\"
                    ]
                },
                "selection_cli_rundll": {
                    "ServiceFileName|contains|all": [
                        "rundll32",
                        ".dll,a",
                        "/p:"
                    ]
                },
                "selection_cli_share": {
                    "ServiceFileName|startswith": "\\\\\\\\127.0.0.1\\\\ADMIN$\\"
                },
                "selection_eid": {
                    "EventID": 4697
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "ecbc5e16-58e0-4521-9c60-eb9a7ea4ad34",
            "level": "high",
            "logsource": {
                "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697",
                "product": "windows",
                "service": "security"
            },
            "modified": "2023/11/15",
            "related": [
                {
                    "type": "derived",
                    "id": "843544a7-56e0-4dcc-a44f-5cc266dd97d6"
                }
            ],
            "references": [
                "https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment",
                "https://blog.cobaltstrike.com/2014/04/02/what-happens-when-i-type-getsystem/"
            ],
            "status": "test",
            "tags": [
                "attack.privilege_escalation",
                "attack.t1134.001",
                "attack.t1134.002"
            ],
            "title": "Meterpreter or Cobalt Strike Getsystem Service Installation - Security"
        },
        {
            "author": "Michaela Adams, Zach Mathis",
            "date": "2022/11/06",
            "description": "Detects potential token impersonation and theft. Example, when using \"DuplicateToken(Ex)\" and \"ImpersonateLoggedOnUser\" with the \"LOGON32_LOGON_NEW_CREDENTIALS flag\".",
            "detection": {
                "condition": "selection",
                "selection": {
                    "AuthenticationPackageName": "Negotiate",
                    "EventID": 4624,
                    "ImpersonationLevel": "%%1833",
                    "LogonProcessName": "Advapi",
                    "LogonType": 9
                }
            },
            "falsepositives": [
                "Anti-Virus"
            ],
            "id": "02f7c9c1-1ae8-4c6a-8add-04693807f92f",
            "level": "medium",
            "logsource": {
                "product": "windows",
                "service": "security"
            },
            "modified": "2023/04/26",
            "references": [
                "https://www.elastic.co/fr/blog/how-attackers-abuse-access-token-manipulation",
                "https://www.manageengine.com/log-management/cyber-security/access-token-manipulation.html"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1134.001",
                "stp.4u"
            ],
            "title": "Potential Access Token Abuse"
        }
    ],
    "x_mitre_platforms": [
        "Windows"
    ],
    "x_mitre_domains": [
        "enterprise-attack"
    ],
    "x_mitre_contributors": [
        "Tom Ueltschi @c_APT_ure",
        "Travis Smith, Tripwire",
        "Robby Winchester, @robwinchester3",
        "Jared Atkinson, @jaredcatkinson"
    ],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "defense-evasion"
        },
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "privilege-escalation"
        }
    ],
    "x_mitre_detection": "If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior. \n\nThere are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., <code>LogonUser</code> (Citation: Microsoft LogonUser), <code>DuplicateTokenEx</code>(Citation: Microsoft DuplicateTokenEx), and <code>ImpersonateLoggedOnUser</code>(Citation: Microsoft ImpersonateLoggedOnUser)). Please see the referenced Windows API pages for more information.\n\nQuery systems for process and thread token information and look for inconsistencies such as user owns processes impersonating the local SYSTEM account.(Citation: BlackHat Atkinson Winchester Token Manipulation)\n\nLook for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.",
    "x_mitre_is_subtechnique": false,
    "x_mitre_version": "2.0",
    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
    "x_mitre_data_sources": [
        "Process: OS API Execution",
        "Command: Command Execution",
        "User Account: User Account Metadata",
        "Process: Process Metadata",
        "Process: Process Creation",
        "Active Directory: Active Directory Object Modification"
    ],
    "x_mitre_permissions_required": [
        "User",
        "Administrator"
    ]
}