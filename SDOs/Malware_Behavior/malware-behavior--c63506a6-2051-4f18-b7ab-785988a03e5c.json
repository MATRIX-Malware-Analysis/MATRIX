{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--c63506a6-2051-4f18-b7ab-785988a03e5c",
    "created": "2024-08-13T14:46:37.10516Z",
    "modified": "2024-08-13T14:46:48.634251Z",
    "name": "Portable Executable Injection: ",
    "description": "Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. PE injection is a method of executing arbitrary code in the address space of a separate live process. PE injection is commonly performed by copying code (perhaps without a file on disk) into the virtual address space of the target process before invoking it via a new thread. The write can be performed with native Windows API calls such as VirtualAllocEx and WriteProcessMemory, then invoked with CreateRemoteThread or additional code (ex: shellcode). The displacement of the injected code does introduce the additional requirement for functionality to remap memory references. [1] Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via PE injection may also evade detection from security products since the execution is masked under a legitimate process.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1055/002",
            "external_id": "T1055/002"
        }
    ],
    "x_mitre_capa_rules": [
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "characteristic": "loop"
                            },
                            {
                                "optional": [
                                    {
                                        "or": [
                                            {
                                                "match": "open process"
                                            },
                                            {
                                                "match": "host-interaction/process/create"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "match": "allocate or change RWX memory"
                            },
                            {
                                "basic block": [
                                    {
                                        "description": "virtual address offset calculation"
                                    },
                                    {
                                        "and": [
                                            {
                                                "mnemonic": "and"
                                            },
                                            {
                                                "number": 4095
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "match": "write process memory"
                            },
                            {
                                "match": "create thread"
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Defense Evasion::Process Injection::Portable Executable Injection [T1055.002]",
                        "Defense Evasion::Reflective Code Loading [T1620]"
                    ],
                    "authors": [
                        "0x534a@mailbox.org"
                    ],
                    "examples": [
                        "ce8d7590182db2e51372a4a04d6a0927a65b2640739f9ec01cfd6c143b1110da:0x4014E0"
                    ],
                    "name": "inject pe",
                    "namespace": "host-interaction/process/inject",
                    "references": [
                        "https://www.elastic.co/de/blog/ten-process-injection-techniques-technical-survey-common-and-trending-process"
                    ],
                    "scopes": {
                        "dynamic": "unsupported",
                        "static": "function"
                    }
                }
            }
        }
    ]
}