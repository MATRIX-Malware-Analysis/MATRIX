{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--71bc6c23-8cfa-47b9-adfc-1678e2d9b16b",
    "created": "2024-08-13T14:46:37.121408Z",
    "modified": "2024-08-13T14:46:48.652548Z",
    "name": "Container Administration Command",
    "description": "Adversaries may abuse a container administration service to execute commands within a container. A container administration service such as the Docker daemon, the Kubernetes API server, or the kubelet may allow remote management of containers within an environment.[1][2][3]In Docker, adversaries may specify an entrypoint during container deployment that executes a script or command, or they may use a command such as docker exec to execute a command within a running container.[4][5] In Kubernetes, if an adversary has sufficient permissions, they may gain remote execution in a container in the cluster via interaction with the Kubernetes API server, the kubelet, or by running a command such as kubectl exec.[6]",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1609",
            "external_id": "T1609"
        },
        {
            "source_name": "mitre-attack",
            "url": "https://attack.mitre.org/techniques/T1609",
            "external_id": "T1609"
        },
        {
            "source_name": "Docker Exec",
            "description": "Docker. (n.d.). Docker Exec. Retrieved March 29, 2021.",
            "url": "https://docs.docker.com/engine/reference/commandline/exec/"
        },
        {
            "source_name": "Docker Entrypoint",
            "description": "Docker. (n.d.). Docker run reference. Retrieved March 29, 2021.",
            "url": "https://docs.docker.com/engine/reference/run/#entrypoint-default-command-to-execute-at-runtime"
        },
        {
            "source_name": "Docker Daemon CLI",
            "description": "Docker. (n.d.). DockerD CLI. Retrieved March 29, 2021.",
            "url": "https://docs.docker.com/engine/reference/commandline/dockerd/"
        },
        {
            "source_name": "Kubectl Exec Get Shell",
            "description": "The Kubernetes Authors. (n.d.). Get a Shell to a Running Container. Retrieved March 29, 2021.",
            "url": "https://kubernetes.io/docs/tasks/debug-application-cluster/get-shell-running-container/"
        },
        {
            "source_name": "Kubernetes Kubelet",
            "description": "The Kubernetes Authors. (n.d.). Kubelet. Retrieved March 29, 2021.",
            "url": "https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/"
        },
        {
            "source_name": "Kubernetes API",
            "description": "The Kubernetes Authors. (n.d.). The Kubernetes API. Retrieved March 29, 2021.",
            "url": "https://kubernetes.io/docs/concepts/overview/kubernetes-api/"
        }
    ],
    "x_mitre_capa_rules": [
        {
            "rule": {
                "features": [
                    {
                        "or": [
                            {
                                "string": "/^docker(\\.exe)? exec/"
                            },
                            {
                                "string": "/^kubectl(\\.exe)? exec/"
                            },
                            {
                                "string": "/^kubectl(\\.exe)? run/"
                            },
                            {
                                "and": [
                                    {
                                        "match": "send HTTP request"
                                    },
                                    {
                                        "description": "docker API endpoint, e.g., /v1.24/containers/e90e34656806/exec",
                                        "string": "/\\/v1\\.[0-9]{1,2}\\/containers\\/[0-9a-fA-F]+\\/exec/"
                                    }
                                ]
                            },
                            {
                                "and": [
                                    {
                                        "match": "send HTTP request"
                                    },
                                    {
                                        "description": "docker API endpoint, e.g., /v1.24/exec/e90e34656806/start",
                                        "string": "/\\/v1\\.[0-9]{1,2}\\/exec\\/[0-9a-fA-F]+\\/start/"
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Execution::Container Administration Command [T1609]"
                    ],
                    "authors": [
                        "william.ballenthin@mandiant.com"
                    ],
                    "name": "run in container",
                    "namespace": "host-interaction/container/docker",
                    "references": [
                        "https://docs.docker.com/engine/api/v1.24/"
                    ],
                    "scopes": {
                        "dynamic": "thread",
                        "static": "function"
                    }
                }
            }
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "Leo Tsaousis (@laripping)",
            "date": "2024/03/26",
            "description": "Detects attempts to execute remote commands, within a Pod's container using e.g. the \"kubectl exec\" command.\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "objectRef.resource": "pods",
                    "objectRef.subresource": "exec",
                    "verb": "create"
                }
            },
            "falsepositives": [
                "Legitimate debugging activity. Investigate the identity performing the requests and their authorization."
            ],
            "id": "a1b0ca4e-7835-413e-8471-3ff2b8a66be6",
            "level": "medium",
            "logsource": {
                "category": "application",
                "product": "kubernetes",
                "service": "audit"
            },
            "references": [
                "https://microsoft.github.io/Threat-Matrix-for-Kubernetes/techniques/Exec%20into%20container/"
            ],
            "status": "experimental",
            "tags": [
                "attack.t1609"
            ],
            "title": "Potential Remote Command Execution In Pod Container"
        },
        {
            "author": "Leo Tsaousis (@laripping)",
            "date": "2024/03/26",
            "description": "Detects attempts to inject a sidecar container into a running deployment.\nA sidecar container is an additional container within a pod, that resides alongside the main container.\nOne way to add containers to running resources like Deployments/DeamonSets/StatefulSets, is via a \"kubectl patch\" operation.\nBy injecting a new container within a legitimate pod, an attacker can run their code and hide their activity, instead of running their own separated pod in the cluster.\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "apiGroup": "apps",
                    "objectRef.resource": "deployments",
                    "verb": "patch"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "ad9012a6-e518-4432-9890-f3b82b8fc71f",
            "level": "medium",
            "logsource": {
                "category": "application",
                "product": "kubernetes",
                "service": "audit"
            },
            "references": [
                "https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch",
                "https://microsoft.github.io/Threat-Matrix-for-Kubernetes/techniques/Sidecar%20Injection/"
            ],
            "status": "experimental",
            "tags": [
                "attack.t1609"
            ],
            "title": "Potential Sidecar Injection Into Running Deployment"
        }
    ],
    "x_mitre_platforms": [
        "Containers"
    ],
    "x_mitre_domains": [
        "enterprise-attack"
    ],
    "x_mitre_contributors": [
        "Alfredo Oliveira, Trend Micro",
        "David Fiser, @anu4is, Trend Micro",
        "Brad Geesaman, @bradgeesaman",
        "Center for Threat-Informed Defense (CTID)",
        "Magno Logan, @magnologan, Trend Micro",
        "Vishwas Manral, McAfee",
        "Yossi Weizman, Azure Defender Research Team"
    ],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "execution"
        }
    ],
    "x_mitre_detection": "Container administration service activities and executed commands can be captured through logging of process execution with command-line arguments on the container and the underlying host. In Docker, the daemon log provides insight into events at the daemon and container service level. Kubernetes system component logs may also detect activities running in and out of containers in the cluster. ",
    "x_mitre_is_subtechnique": false,
    "x_mitre_version": "1.2",
    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
    "x_mitre_data_sources": [
        "Command: Command Execution",
        "Process: Process Creation"
    ],
    "x_mitre_permissions_required": []
}