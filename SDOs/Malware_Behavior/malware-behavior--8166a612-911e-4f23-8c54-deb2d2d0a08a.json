{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--8166a612-911e-4f23-8c54-deb2d2d0a08a",
    "created": "2024-08-13T14:46:36.993685Z",
    "modified": "2024-08-13T14:46:45.333962Z",
    "name": "Visual Basic: ",
    "description": "Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as Component Object Model and the Native API through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.[1][2]Derivative languages based on VB have also been created, such as Visual Basic for Applications (VBA) and VBScript. VBA is an event-driven programming language built into Microsoft Office, as well as several third-party applications.[3][4] VBA enables documents to contain macros used to automate the execution of tasks and other functionality on the host. VBScript is a default scripting language on Windows hosts and can also be used in place of JavaScript on HTML Application (HTA) webpages served to Internet Explorer (though most modern browsers do not come with VBScript support).[5]Adversaries may use VB payloads to execute malicious commands. Common malicious usage includes automating execution of behaviors with VBScript or embedding VBA content into Spearphishing Attachment payloads (which may also involve Mark-of-the-Web Bypass to enable execution).[6]",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1059/005",
            "external_id": "T1059/005"
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "@SBousseaden (detection), Thomas Patzke (rule)",
            "date": "2019/02/01",
            "description": "Detects remote thread creation from CACTUSTORCH as described in references.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "SourceImage|endswith": [
                        "\\System32\\cscript.exe",
                        "\\System32\\wscript.exe",
                        "\\System32\\mshta.exe",
                        "\\winword.exe",
                        "\\excel.exe"
                    ],
                    "StartModule": null,
                    "TargetImage|contains": "\\SysWOW64\\"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "2e4e488a-6164-4811-9ea1-f960c7359c40",
            "level": "high",
            "logsource": {
                "category": "create_remote_thread",
                "product": "windows"
            },
            "modified": "2023/05/05",
            "references": [
                "https://twitter.com/SBousseaden/status/1090588499517079552",
                "https://github.com/mdsecactivebreach/CACTUSTORCH"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.execution",
                "attack.t1055.012",
                "attack.t1059.005",
                "attack.t1059.007",
                "attack.t1218.005"
            ],
            "title": "HackTool - CACTUSTORCH Remote Thread Creation"
        },
        {
            "author": "Florian Roth (Nextron Systems), Jonhnathan Ribeiro",
            "date": "2019/04/15",
            "description": "Detects suspicious commands that are related to scripting/powershell in WMI Event Consumers",
            "detection": {
                "condition": "selection_destination",
                "selection_destination": [
                    {
                        "Destination|contains|all": [
                            "new-object",
                            "net.webclient",
                            ".downloadstring"
                        ]
                    },
                    {
                        "Destination|contains|all": [
                            "new-object",
                            "net.webclient",
                            ".downloadfile"
                        ]
                    },
                    {
                        "Destination|contains": [
                            " iex(",
                            " -nop ",
                            " -noprofile ",
                            " -decode ",
                            " -enc ",
                            "WScript.Shell",
                            "System.Security.Cryptography.FromBase64Transform"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Legitimate administrative scripts"
            ],
            "fields": [
                "User",
                "Operation"
            ],
            "id": "fe21810c-2a8c-478f-8dd3-5a287fb2a0e0",
            "level": "high",
            "logsource": {
                "category": "wmi_event",
                "product": "windows"
            },
            "modified": "2023/09/09",
            "references": [
                "https://in.security/an-intro-into-abusing-and-identifying-wmi-event-subscriptions-for-persistence/",
                "https://github.com/Neo23x0/signature-base/blob/615bf1f6bac3c1bdc417025c40c073e6c2771a76/yara/gen_susp_lnk_files.yar#L19",
                "https://github.com/RiccardoAncarani/LiquidSnake"
            ],
            "status": "experimental",
            "tags": [
                "attack.execution",
                "attack.t1059.005"
            ],
            "title": "Suspicious Scripting in a WMI Consumer"
        },
        {
            "author": "Florian Roth (Nextron Systems), Tom Ueltschi, Jonhnathan Ribeiro, oscd.community",
            "date": "2017/11/10",
            "description": "Detects javaw.exe in AppData folder as used by Adwind / JRAT",
            "detection": {
                "condition": "selection",
                "selection": [
                    {
                        "TargetFilename|contains|all": [
                            "\\AppData\\Roaming\\Oracle\\bin\\java",
                            ".exe"
                        ]
                    },
                    {
                        "TargetFilename|contains|all": [
                            "\\Retrive",
                            ".vbs"
                        ]
                    }
                ]
            },
            "id": "0bcfabcb-7929-47f4-93d6-b33fb67d34d1",
            "logsource": {
                "category": "file_event",
                "product": "windows"
            },
            "level": "high",
            "modified": "2022/12/02",
            "references": [
                "https://www.hybrid-analysis.com/sample/ba86fa0d4b6af2db0656a88b1dd29f36fe362473ae8ad04255c4e52f214a541c?environmentId=100",
                "https://www.first.org/resources/papers/conf2017/Advanced-Incident-Detection-and-Threat-Hunting-using-Sysmon-and-Splunk.pdf"
            ],
            "related": [
                {
                    "id": "1fac1481-2dbc-48b2-9096-753c49b4ec71",
                    "type": "derived"
                }
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1059.005",
                "attack.t1059.007"
            ],
            "title": "Adwind RAT / JRAT File Artifact"
        },
        {
            "author": "Tim Shelton",
            "date": "2022/01/10",
            "description": "Detects a file ending in jse, vbe, js, vba, vbs written by cscript.exe or wscript.exe",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Image|endswith": [
                        "\\wscript.exe",
                        "\\cscript.exe"
                    ],
                    "TargetFilename|endswith": [
                        ".jse",
                        ".vbe",
                        ".js",
                        ".vba",
                        ".vbs"
                    ],
                    "TargetFilename|startswith": [
                        "C:\\Users\\",
                        "C:\\ProgramData"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "fields": [
                "Image",
                "TargetFilename"
            ],
            "id": "002bdb95-0cf1-46a6-9e08-d38c128a6127",
            "logsource": {
                "category": "file_event",
                "product": "windows"
            },
            "level": "high",
            "modified": "2022/12/02",
            "status": "test",
            "references": [
                "WScript or CScript Dropper (cea72823-df4d-4567-950c-0b579eaf0846)"
            ],
            "related": [
                {
                    "id": "cea72823-df4d-4567-950c-0b579eaf0846",
                    "type": "derived"
                }
            ],
            "tags": [
                "attack.execution",
                "attack.t1059.005",
                "attack.t1059.007"
            ],
            "title": "WScript or CScript Dropper - File"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/02/08",
            "description": "Detects execution of the built-in script located in \"C:\\Windows\\System32\\gatherNetworkInfo.vbs\". Which can be used to gather information about the target machine",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "Image|endswith": [
                        "\\cscript.exe",
                        "\\wscript.exe"
                    ]
                },
                "selection": {
                    "CommandLine|contains": "gatherNetworkInfo.vbs"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "07aa184a-870d-413d-893a-157f317f6f58",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://posts.slayerlabs.com/living-off-the-land/#gathernetworkinfovbs",
                "https://www.mandiant.com/resources/blog/trojanized-windows-installers-ukrainian-government"
            ],
            "related": [
                {
                    "id": "f92a6f1e-a512-4a15-9735-da09e78d7273",
                    "type": "similar"
                },
                {
                    "id": "575dce0c-8139-4e30-9295-1ee75969f7fe",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.discovery",
                "attack.execution",
                "attack.t1615",
                "attack.t1059.005"
            ],
            "title": "Suspicious Reconnaissance Activity Via GatherNetworkInfo.VBS"
        },
        {
            "author": "Maxim Pavlunin",
            "date": "2020/04/01",
            "description": "Detects a suspicious execution of a Microsoft HTML Help (HH.exe)",
            "detection": {
                "condition": "all of selection_*",
                "selection_img": [
                    {
                        "OriginalFileName": "HH.exe"
                    },
                    {
                        "Image|endswith": "\\hh.exe"
                    }
                ],
                "selection_paths": {
                    "CommandLine|contains": [
                        ".application",
                        "\\AppData\\Local\\Temp\\",
                        "\\Content.Outlook\\",
                        "\\Downloads\\",
                        "\\Users\\Public\\",
                        "\\Windows\\Temp\\"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "e8a95b5e-c891-46e2-b33a-93937d3abc31",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/04/12",
            "references": [
                "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/chm-badness-delivers-a-banking-trojan/",
                "https://github.com/elastic/protections-artifacts/commit/746086721fd385d9f5c6647cada1788db4aea95f#diff-27939090904026cc396b0b629c8e4314acd6f5dac40a676edbc87f4567b47eb7",
                "https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/higaisa-or-winnti-apt-41-backdoors-old-and-new/",
                "https://www.zscaler.com/blogs/security-research/unintentional-leak-glimpse-attack-vectors-apt37"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.execution",
                "attack.initial_access",
                "attack.t1047",
                "attack.t1059.001",
                "attack.t1059.003",
                "attack.t1059.005",
                "attack.t1059.007",
                "attack.t1218",
                "attack.t1218.001",
                "attack.t1218.010",
                "attack.t1218.011",
                "attack.t1566",
                "attack.t1566.001"
            ],
            "title": "Suspicious HH.EXE Execution"
        },
        {
            "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems), X__Junior (Nextron Systems)",
            "date": "2019/02/11",
            "description": "Detects a potentially suspicious parent of \"csc.exe\", which could be a sign of payload delivery.",
            "detection": {
                "condition": "selection_img and 1 of selection_parent_* and not 1 of filter_main_* and not 1 of filter_optional_*",
                "filter_main_programfiles": {
                    "ParentImage|startswith": [
                        "C:\\Program Files (x86)\\",
                        "C:\\Program Files\\"
                    ]
                },
                "filter_main_sdiagnhost": {
                    "ParentImage": "C:\\Windows\\System32\\sdiagnhost.exe"
                },
                "filter_main_w3p": {
                    "ParentImage": "C:\\Windows\\System32\\inetsrv\\w3wp.exe"
                },
                "filter_optional_ansible": {
                    "ParentCommandLine|contains": [
                        "JwB7ACIAZgBhAGkAbABlAGQAIgA6AHQAcgB1AGUALAAiAG0AcwBnACIAOgAiAEEAbgBzAGkAYgBsAGUAIAByAGUAcQB1AGkAcgBlAHMAIABQAG8AdwBlAHIAUwBoAGUAbABsACAAdgAzAC4AMAAgAG8AcgAgAG4AZQB3AGUAcgAiAH0AJw",
                        "cAewAiAGYAYQBpAGwAZQBkACIAOgB0AHIAdQBlACwAIgBtAHMAZwAiADoAIgBBAG4AcwBpAGIAbABlACAAcgBlAHEAdQBpAHIAZQBzACAAUABvAHcAZQByAFMAaABlAGwAbAAgAHYAMwAuADAAIABvAHIAIABuAGUAdwBlAHIAIgB9ACcA",
                        "nAHsAIgBmAGEAaQBsAGUAZAAiADoAdAByAHUAZQAsACIAbQBzAGcAIgA6ACIAQQBuAHMAaQBiAGwAZQAgAHIAZQBxAHUAaQByAGUAcwAgAFAAbwB3AGUAcgBTAGgAZQBsAGwAIAB2ADMALgAwACAAbwByACAAbgBlAHcAZQByACIAfQAnA"
                    ]
                },
                "filter_optional_chocolatey": {
                    "ParentImage": "C:\\ProgramData\\chocolatey\\choco.exe"
                },
                "filter_optional_defender": {
                    "ParentCommandLine|contains": "\\ProgramData\\Microsoft\\Windows Defender Advanced Threat Protection"
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\csc.exe"
                    },
                    {
                        "OriginalFileName": "csc.exe"
                    }
                ],
                "selection_parent_generic": {
                    "ParentImage|endswith": [
                        "\\cscript.exe",
                        "\\excel.exe",
                        "\\mshta.exe",
                        "\\onenote.exe",
                        "\\outlook.exe",
                        "\\powerpnt.exe",
                        "\\winword.exe",
                        "\\wscript.exe"
                    ]
                },
                "selection_parent_powershell": {
                    "ParentCommandLine|contains": [
                        "-Encoded ",
                        "FromBase64String"
                    ],
                    "ParentImage|endswith": [
                        "\\powershell.exe",
                        "\\pwsh.exe"
                    ]
                },
                "selection_parent_susp_location": [
                    {
                        "ParentCommandLine|re": "([Pp]rogram[Dd]ata|%([Ll]ocal)?[Aa]pp[Dd]ata%|\\\\[Aa]pp[Dd]ata\\\\([Ll]ocal([Ll]ow)?|[Rr]oaming))\\\\[^\\\\]{1,256}$"
                    },
                    {
                        "ParentCommandLine|contains": [
                            ":\\PerfLogs\\",
                            ":\\Users\\Public\\",
                            ":\\Windows\\Temp\\",
                            "\\Temporary Internet"
                        ]
                    },
                    {
                        "ParentCommandLine|contains|all": [
                            ":\\Users\\",
                            "\\Favorites\\"
                        ]
                    },
                    {
                        "ParentCommandLine|contains|all": [
                            ":\\Users\\",
                            "\\Favourites\\"
                        ]
                    },
                    {
                        "ParentCommandLine|contains|all": [
                            ":\\Users\\",
                            "\\Contacts\\"
                        ]
                    },
                    {
                        "ParentCommandLine|contains|all": [
                            ":\\Users\\",
                            "\\Pictures\\"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "b730a276-6b63-41b8-bcf8-55930c8fc6ee",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2024/05/27",
            "references": [
                "https://www.uptycs.com/blog/warzonerat-can-now-evade-with-process-hollowing",
                "https://reaqta.com/2017/11/short-journey-darkvnc/",
                "https://www.pwc.com/gx/en/issues/cybersecurity/cyber-threat-intelligence/yellow-liderc-ships-its-scripts-delivers-imaploader-malware.html"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1059.005",
                "attack.t1059.007",
                "attack.defense_evasion",
                "attack.t1218.005",
                "attack.t1027.004"
            ],
            "title": "Csc.EXE Execution Form Potentially Suspicious Parent"
        },
        {
            "id": "cea72823-df4d-4567-950c-0b579eaf0846",
            "author": "Margaritis Dimitrios (idea), Florian Roth (Nextron Systems), oscd.community, Nasreddine Bencherchali (Nextron Systems)",
            "date": "2019/01/16",
            "description": "Detects wscript/cscript executions of scripts located in user directories",
            "detection": {
                "condition": "all of selection_*",
                "selection_exec": {
                    "Image|endswith": [
                        "\\wscript.exe",
                        "\\cscript.exe"
                    ]
                },
                "selection_ext": {
                    "CommandLine|contains": [
                        ".js",
                        ".jse",
                        ".vba",
                        ".vbe",
                        ".vbs",
                        ".wsf"
                    ]
                },
                "selection_paths": {
                    "CommandLine|contains": [
                        ":\\Temp\\",
                        ":\\Tmp\\",
                        ":\\Users\\Public\\",
                        ":\\Windows\\Temp\\",
                        "\\AppData\\Local\\Temp\\"
                    ]
                }
            },
            "falsepositives": [
                "Some installers might generate a similar behavior. An initial baseline is required"
            ],
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2024/01/30",
            "references": [
                "https://thedfirreport.com/2023/10/30/netsupport-intrusion-results-in-domain-compromise/",
                "https://redcanary.com/blog/gootloader/"
            ],
            "related": [
                {
                    "id": "1e33157c-53b1-41ad-bbcc-780b80b58288",
                    "type": "similar"
                }
            ],
            "status": "experimental",
            "tags": [
                "attack.execution",
                "attack.t1059.005",
                "attack.t1059.007"
            ],
            "title": "Potential Dropper Script Execution Via WScript/CScript"
        },
        {
            "id": "575dce0c-8139-4e30-9295-1ee75969f7fe",
            "author": "blueteamer8699",
            "date": "2022/01/03",
            "description": "Detects execution of the built-in script located in \"C:\\Windows\\System32\\gatherNetworkInfo.vbs\". Which can be used to gather information about the target machine",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains": "gatherNetworkInfo.vbs"
                },
                "selection_img": [
                    {
                        "Image|endswith": [
                            "\\cscript.exe",
                            "\\wscript.exe"
                        ]
                    },
                    {
                        "OriginalFileName": [
                            "cscript.exe",
                            "wscript.exe"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Administrative activity"
            ],
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://posts.slayerlabs.com/living-off-the-land/#gathernetworkinfovbs",
                "https://www.mandiant.com/resources/blog/trojanized-windows-installers-ukrainian-government"
            ],
            "modified": "2023/02/08",
            "related": [
                {
                    "id": "f92a6f1e-a512-4a15-9735-da09e78d7273",
                    "type": "similar"
                },
                {
                    "type": "similar",
                    "id": "07aa184a-870d-413d-893a-157f317f6f58"
                }
            ],
            "status": "test",
            "tags": [
                "attack.discovery",
                "attack.execution",
                "attack.t1615",
                "attack.t1059.005"
            ],
            "title": "Potential Reconnaissance Activity Via GatherNetworkInfo.VBS"
        },
        {
            "author": "Florian Roth (Nextron Systems), Tim Shelton",
            "date": "2018/04/06",
            "description": "Detects suspicious child processes of a Windows shell and scripting processes such as wscript, rundll32, powershell, mshta...etc.",
            "detection": {
                "condition": "selection and not 1 of filter_*",
                "filter_amazon": {
                    "ParentCommandLine|contains": [
                        "\\Program Files\\Amazon\\WorkSpacesConfig\\Scripts\\setup-scheduledtask.ps1",
                        "\\Program Files\\Amazon\\WorkSpacesConfig\\Scripts\\set-selfhealing.ps1",
                        "\\Program Files\\Amazon\\WorkSpacesConfig\\Scripts\\check-workspacehealth.ps1",
                        "\\nessus_"
                    ]
                },
                "filter_ccmcache": {
                    "CurrentDirectory|contains": "\\ccmcache\\"
                },
                "filter_nessus": {
                    "CommandLine|contains": "\\nessus_"
                },
                "filter_sccm_install": {
                    "CommandLine|contains|all": [
                        "C:\\MEM_Configmgr_",
                        "\\SMSSETUP\\BIN\\",
                        "\\autorun.hta",
                        "{1E460BD7-F1C3-4B2E-88BF-4E770A288AF5}"
                    ],
                    "Image|endswith": "\\mshta.exe",
                    "ParentCommandLine|contains|all": [
                        "C:\\MEM_Configmgr_",
                        "\\splash.hta",
                        "{1E460BD7-F1C3-4B2E-88BF-4E770A288AF5}"
                    ],
                    "ParentImage|endswith": "\\mshta.exe"
                },
                "selection": {
                    "Image|endswith": [
                        "\\schtasks.exe",
                        "\\nslookup.exe",
                        "\\certutil.exe",
                        "\\bitsadmin.exe",
                        "\\mshta.exe"
                    ],
                    "ParentImage|endswith": [
                        "\\mshta.exe",
                        "\\powershell.exe",
                        "\\pwsh.exe",
                        "\\rundll32.exe",
                        "\\cscript.exe",
                        "\\wscript.exe",
                        "\\wmiprvse.exe",
                        "\\regsvr32.exe"
                    ]
                }
            },
            "falsepositives": [
                "Administrative scripts",
                "Microsoft SCCM"
            ],
            "fields": [
                "CommandLine",
                "ParentCommandLine",
                "CurrentDirectory",
                "Image",
                "ParentImage"
            ],
            "id": "3a6586ad-127a-4d3b-a677-1e6eacdf8fde",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/05/23",
            "status": "test",
            "references": [
                "https://mgreen27.github.io/posts/2018/04/02/DownloadCradle.html"
            ],
            "tags": [
                "attack.execution",
                "attack.defense_evasion",
                "attack.t1059.005",
                "attack.t1059.001",
                "attack.t1218"
            ],
            "title": "Windows Shell/Scripting Processes Spawning Suspicious Programs"
        },
        {
            "author": "Maxim Pavlunin, Nasreddine Bencherchali (Nextron Systems)",
            "date": "2020/04/01",
            "description": "Detects a suspicious child process of a Microsoft HTML Help (HH.exe)",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Image|endswith": [
                        "\\CertReq.exe",
                        "\\CertUtil.exe",
                        "\\cmd.exe",
                        "\\cscript.exe",
                        "\\installutil.exe",
                        "\\MSbuild.exe",
                        "\\MSHTA.EXE",
                        "\\msiexec.exe",
                        "\\powershell.exe",
                        "\\pwsh.exe",
                        "\\regsvr32.exe",
                        "\\rundll32.exe",
                        "\\schtasks.exe",
                        "\\wmic.exe",
                        "\\wscript.exe"
                    ],
                    "ParentImage|endswith": "\\hh.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "52cad028-0ff0-4854-8f67-d25dfcbc78b4",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/04/12",
            "references": [
                "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/chm-badness-delivers-a-banking-trojan/",
                "https://github.com/elastic/protections-artifacts/commit/746086721fd385d9f5c6647cada1788db4aea95f#diff-27939090904026cc396b0b629c8e4314acd6f5dac40a676edbc87f4567b47eb7",
                "https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/higaisa-or-winnti-apt-41-backdoors-old-and-new/",
                "https://www.zscaler.com/blogs/security-research/unintentional-leak-glimpse-attack-vectors-apt37"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.execution",
                "attack.initial_access",
                "attack.t1047",
                "attack.t1059.001",
                "attack.t1059.003",
                "attack.t1059.005",
                "attack.t1059.007",
                "attack.t1218",
                "attack.t1218.001",
                "attack.t1218.010",
                "attack.t1218.011",
                "attack.t1566",
                "attack.t1566.001"
            ],
            "title": "HTML Help HH.EXE Suspicious Child Process"
        },
        {
            "author": "Markus Neis, Florian Roth",
            "date": "2019/01/16",
            "description": "Detects potential SquiblyTwo attack technique with possible renamed WMIC via Imphash and OriginalFileName fields",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains|all": [
                        "format:",
                        "http"
                    ]
                },
                "selection_pe": [
                    {
                        "Image|endswith": "\\wmic.exe"
                    },
                    {
                        "OriginalFileName": "wmic.exe"
                    },
                    {
                        "Imphash": [
                            "1B1A3F43BF37B5BFE60751F2EE2F326E",
                            "37777A96245A3C74EB217308F3546F4C",
                            "9D87C9D67CE724033C0B40CC4CA1B206"
                        ]
                    },
                    {
                        "Hashes|contains": [
                            "IMPHASH=1B1A3F43BF37B5BFE60751F2EE2F326E",
                            "IMPHASH=37777A96245A3C74EB217308F3546F4C",
                            "IMPHASH=9D87C9D67CE724033C0B40CC4CA1B206"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "8d63dadf-b91b-4187-87b6-34a1114577ea",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/15",
            "references": [
                "https://web.archive.org/web/20190209154607/https://subt0x11.blogspot.com/2018/04/wmicexe-whitelisting-bypass-hacking.html",
                "https://twitter.com/mattifestation/status/986280382042595328",
                "https://atomicredteam.io/defense-evasion/T1220/",
                "https://lolbas-project.github.io/lolbas/Binaries/Wmic/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1047",
                "attack.t1220",
                "attack.execution",
                "attack.t1059.005",
                "attack.t1059.007"
            ],
            "title": "Potential SquiblyTwo Technique Execution"
        },
        {
            "author": "wagga, Jonhnathan Ribeiro, oscd.community",
            "date": "2020/01/12",
            "description": "Detects command line parameters used by Koadic hack tool",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains|all": [
                        "/q",
                        "/c",
                        "chcp"
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\cmd.exe"
                    },
                    {
                        "OriginalFileName": "Cmd.Exe"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "fields": [
                "CommandLine",
                "ParentCommandLine"
            ],
            "id": "5cddf373-ef00-4112-ad72-960ac29bac34",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/11",
            "status": "test",
            "references": [
                "https://unit42.paloaltonetworks.com/unit42-sofacy-groups-parallel-attacks/",
                "https://github.com/offsecginger/koadic/blob/457f9a3ff394c989cdb4c599ab90eb34fb2c762c/data/stager/js/stdlib.js",
                "https://blog.f-secure.com/hunting-for-koadic-a-com-based-rootkit/"
            ],
            "tags": [
                "attack.execution",
                "attack.t1059.003",
                "attack.t1059.005",
                "attack.t1059.007"
            ],
            "title": "HackTool - Koadic Execution"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/05/15",
            "description": "Detects Wscript/Cscript executing a file with an uncommon (i.e. non-script) extension",
            "detection": {
                "condition": "all of selection_*",
                "selection_extension": {
                    "CommandLine|contains": [
                        ".csv",
                        ".dat",
                        ".doc",
                        ".gif",
                        ".jpeg",
                        ".jpg",
                        ".png",
                        ".ppt",
                        ".txt",
                        ".xls",
                        ".xml"
                    ]
                },
                "selection_img": [
                    {
                        "OriginalFileName": [
                            "wscript.exe",
                            "cscript.exe"
                        ]
                    },
                    {
                        "Image|endswith": [
                            "\\wscript.exe",
                            "\\cscript.exe"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "99b7460d-c9f1-40d7-a316-1f36f61d52ee",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/06/19",
            "references": [
                "Internal Research"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1059.005",
                "attack.t1059.007"
            ],
            "title": "Cscript/Wscript Uncommon Script Extension Execution"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems), Beyu Denis, oscd.community",
            "date": "2019/10/26",
            "description": "Detects uncommon child processes of \"BgInfo.exe\" which could be a sign of potential abuse of the binary to proxy execution via external VBScript",
            "detection": {
                "condition": "selection",
                "selection": {
                    "ParentImage|endswith": [
                        "\\bginfo.exe",
                        "\\bginfo64.exe"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "aaf46cdc-934e-4284-b329-34aa701e3771",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/08/16",
            "references": [
                "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Bginfo/",
                "https://oddvar.moe/2017/05/18/bypassing-application-whitelisting-with-bginfo/"
            ],
            "related": [
                {
                    "id": "811f459f-9231-45d4-959a-0266c6311987",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1059.005",
                "attack.defense_evasion",
                "attack.t1218",
                "attack.t1202"
            ],
            "title": "Uncommon Child Process Of BgInfo.EXE"
        },
        {
            "id": "811f459f-9231-45d4-959a-0266c6311987",
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/08/16",
            "description": "Detects suspicious child processes of \"BgInfo.exe\" which could be a sign of potential abuse of the binary to proxy execution via external VBScript",
            "detection": {
                "condition": "all of selection_*",
                "selection_child": [
                    {
                        "Image|endswith": [
                            "\\calc.exe",
                            "\\cmd.exe",
                            "\\cscript.exe",
                            "\\mshta.exe",
                            "\\notepad.exe",
                            "\\powershell.exe",
                            "\\pwsh.exe",
                            "\\wscript.exe"
                        ]
                    },
                    {
                        "Image|contains": [
                            "\\AppData\\Local\\",
                            "\\AppData\\Roaming\\",
                            ":\\Users\\Public\\",
                            ":\\Temp\\",
                            ":\\Windows\\Temp\\",
                            ":\\PerfLogs\\"
                        ]
                    }
                ],
                "selection_parent": {
                    "ParentImage|endswith": [
                        "\\bginfo.exe",
                        "\\bginfo64.exe"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "related": [
                {
                    "type": "similar",
                    "id": "aaf46cdc-934e-4284-b329-34aa701e3771"
                }
            ],
            "references": [
                "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Bginfo/",
                "https://oddvar.moe/2017/05/18/bypassing-application-whitelisting-with-bginfo/"
            ],
            "status": "test",
            "title": "Suspicious Child Process Of BgInfo.EXE",
            "tags": [
                "attack.execution",
                "attack.t1059.005",
                "attack.defense_evasion",
                "attack.t1218",
                "attack.t1202"
            ]
        },
        {
            "author": "Pushkarev Dmitry",
            "date": "2020/06/28",
            "description": "Detect run not allowed files. Applocker is a very useful tool, especially on servers where unprivileged users have access. For example terminal servers. You need configure applocker and log collect to receive these events.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": [
                        8004,
                        8007,
                        8022,
                        8025
                    ]
                }
            },
            "falsepositives": [
                "Need tuning applocker or add exceptions in SIEM"
            ],
            "fields": [
                "PolicyName",
                "RuleId",
                "RuleName",
                "TargetUser",
                "TargetProcessId",
                "FilePath",
                "FileHash",
                "Fqbn"
            ],
            "id": "401e5d00-b944-11ea-8f9a-00163ecd60ae",
            "level": "medium",
            "logsource": {
                "product": "windows",
                "service": "applocker"
            },
            "modified": "2021/11/27",
            "status": "test",
            "references": [
                "https://learn.microsoft.com/en-us/windows/security/application-security/application-control/windows-defender-application-control/applocker/what-is-applocker",
                "https://learn.microsoft.com/en-us/windows/security/application-security/application-control/windows-defender-application-control/applocker/using-event-viewer-with-applocker",
                "https://nxlog.co/documentation/nxlog-user-guide/applocker.html"
            ],
            "tags": [
                "attack.execution",
                "attack.t1204.002",
                "attack.t1059.001",
                "attack.t1059.003",
                "attack.t1059.005",
                "attack.t1059.006",
                "attack.t1059.007"
            ],
            "title": "File Was Not Allowed To Run"
        }
    ]
}