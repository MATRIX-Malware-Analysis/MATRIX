{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--c8aae1bb-cfdd-4021-93fc-e7c70256bbf0",
    "created": "2024-08-13T14:46:36.684307Z",
    "modified": "2024-08-13T14:46:44.605314Z",
    "name": "Steal Application Access Token",
    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.Application access tokens are used to make authorized API requests on behalf of a user or service and are commonly used as a way to access resources in cloud and container-based applications and software-as-a-service (SaaS).[1]  Adversaries who steal account API tokens in cloud and containerized environments may be able to access data and perform actions with the permissions of these accounts, which can lead to privilege escalation and further compromise of the environment.For example, in Kubernetes environments, processes running inside a container may communicate with the Kubernetes API server using service account tokens. If a container is compromised, an adversary may be able to steal the container\u2019s token and thereby gain access to Kubernetes API commands.[2]  Similarly, instances within continuous-development / continuous-integration (CI/CD) pipelines will often use API tokens to authenticate to other services for testing and deployment.[3] If these pipelines are compromised, adversaries may be able to steal these tokens and leverage their privileges.Token theft can also occur through social engineering, in which case user action may be required to grant access. OAuth is one commonly implemented framework that issues tokens to users for access to systems. An application desiring access to cloud-based services or protected APIs can gain entry using OAuth 2.0 through a variety of authorization protocols. An example commonly-used sequence is Microsoft's Authorization Code Grant flow.[4][5] An OAuth access token enables a third-party application to interact with resources containing user data in the ways requested by the application without obtaining user credentials. Adversaries can leverage OAuth authorization by constructing a malicious application designed to be granted access to resources with the target user's OAuth token.[6][7] The adversary will need to complete registration of their application with the authorization server, for example Microsoft Identity Platform using Azure Portal, the Visual Studio IDE, the command-line interface, PowerShell, or REST API calls.[8] Then, they can send a Spearphishing Link to the target user to entice them to grant access to the application. Once the OAuth access token is granted, the application can gain potentially long-term access to features of the user account through Application Access Token.[9]Application access tokens may function within a limited lifetime, limiting how long an adversary can utilize the stolen token. However, in some cases, adversaries can also steal application refresh tokens[10], allowing them to obtain new access tokens without prompting the user.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1528",
            "external_id": "T1528"
        },
        {
            "source_name": "CAPEC 21",
            "external_id": "malware-behavior--e848acb9-00c0-47e7-87d0-e29378d0b92f"
        },
        {
            "source_name": "mitre-attack",
            "url": "https://attack.mitre.org/techniques/T1528",
            "external_id": "T1528"
        },
        {
            "source_name": "Amnesty OAuth Phishing Attacks, August 2019",
            "description": "Amnesty International. (2019, August 16). Evolving Phishing Attacks Targeting Journalists and Human Rights Defenders from the Middle-East and North Africa. Retrieved October 8, 2019.",
            "url": "https://www.amnesty.org/en/latest/research/2019/08/evolving-phishing-attacks-targeting-journalists-and-human-rights-defenders-from-the-middle-east-and-north-africa/"
        },
        {
            "source_name": "Auth0 Understanding Refresh Tokens",
            "description": "Auth0 Inc.. (n.d.). Understanding Refresh Tokens. Retrieved December 16, 2021.",
            "url": "https://auth0.com/learn/refresh-tokens/"
        },
        {
            "source_name": "Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019",
            "description": "Auth0. (n.d.). Why You Should Always Use Access Tokens to Secure APIs. Retrieved September 12, 2019.",
            "url": "https://auth0.com/blog/why-should-use-accesstokens-to-secure-an-api/"
        },
        {
            "source_name": "Cider Security Top 10 CICD Security Risks",
            "description": "Daniel Krivelevich and Omer Gil. (n.d.). Top 10 CI/CD Security Risks. Retrieved March 24, 2024.",
            "url": "https://www.cidersecurity.io/top-10-cicd-security-risks/"
        },
        {
            "source_name": "Trend Micro Pawn Storm OAuth 2017",
            "description": "Hacquebord, F.. (2017, April 25). Pawn Storm Abuses Open Authentication in Advanced Social Engineering Attacks. Retrieved October 4, 2019.",
            "url": "https://blog.trendmicro.com/trendlabs-security-intelligence/pawn-storm-abuses-open-authentication-advanced-social-engineering-attacks"
        },
        {
            "source_name": "Kubernetes Service Accounts",
            "description": "Kubernetes. (2022, February 26). Configure Service Accounts for Pods. Retrieved April 1, 2022.",
            "url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"
        },
        {
            "source_name": "Microsoft - Azure AD Identity Tokens - Aug 2019",
            "description": "Microsoft. (2019, August 29). Microsoft identity platform access tokens. Retrieved September 12, 2019.",
            "url": "https://docs.microsoft.com/en-us/azure/active-directory/develop/access-tokens"
        },
        {
            "source_name": "Microsoft - Azure AD App Registration - May 2019",
            "description": "Microsoft. (2019, May 8). Quickstart: Register an application with the Microsoft identity platform. Retrieved September 12, 2019.",
            "url": "https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app"
        },
        {
            "source_name": "Microsoft - OAuth Code Authorization flow - June 2019",
            "description": "Microsoft. (n.d.). Microsoft identity platform and OAuth 2.0 authorization code flow. Retrieved September 12, 2019.",
            "url": "https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow"
        },
        {
            "source_name": "Microsoft Identity Platform Protocols May 2019",
            "description": "Microsoft. (n.d.). Retrieved September 12, 2019.",
            "url": "https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-v2-protocols"
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "Bailey Bercik '@baileybercik', Mark Morowczynski '@markmorow'",
            "date": "2022/07/28",
            "description": "Detects when an end user consents to an application",
            "detection": {
                "condition": "selection",
                "selection": {
                    "ConsentContext.IsAdminConsent": "false"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "9b2cc4c4-2ad4-416d-8e8e-ee6aa6f5035a",
            "level": "low",
            "logsource": {
                "product": "azure",
                "service": "auditlogs"
            },
            "references": [
                "https://learn.microsoft.com/en-us/entra/architecture/security-operations-applications#end-user-consent"
            ],
            "status": "test",
            "tags": [
                "attack.credential_access",
                "attack.t1528"
            ],
            "title": "End User Consent"
        },
        {
            "author": "Mark Morowczynski '@markmorow', Bailey Bercik '@baileybercik'",
            "date": "2022/06/02",
            "description": "Detects when a configuration change is made to an applications URI.\nURIs for domain names that no longer exist (dangling URIs), not using HTTPS, wildcards at the end of the domain, URIs that are no unique to that app, or URIs that point to domains you do not control should be investigated.\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "properties.message": "Update Application Sucess- Property Name AppAddress"
                }
            },
            "falsepositives": [
                "When and administrator is making legitimate URI configuration changes to an application. This should be a planned event."
            ],
            "id": "0055ad1f-be85-4798-83cf-a6da17c993b3",
            "level": "high",
            "logsource": {
                "product": "azure",
                "service": "auditlogs"
            },
            "references": [
                "https://learn.microsoft.com/en-us/entra/architecture/security-operations-applications#application-configuration-changes"
            ],
            "status": "test",
            "tags": [
                "attack.t1528",
                "attack.t1078.004",
                "attack.persistence",
                "attack.credential_access",
                "attack.privilege_escalation"
            ],
            "title": "Application URI Configuration Changes"
        },
        {
            "author": "Bailey Bercik '@baileybercik', Mark Morowczynski '@markmorow'",
            "date": "2022/07/28",
            "description": "Detects when highly privileged delegated permissions are granted on behalf of all users",
            "detection": {
                "condition": "selection",
                "selection": {
                    "properties.message": "Add delegated permission grant"
                }
            },
            "falsepositives": [
                "When the permission is legitimately needed for the app"
            ],
            "id": "a6355fbe-f36f-45d8-8efc-ab42465cbc52",
            "level": "high",
            "logsource": {
                "product": "azure",
                "service": "auditlogs"
            },
            "references": [
                "https://learn.microsoft.com/en-us/entra/architecture/security-operations-applications#application-granted-highly-privileged-permissions"
            ],
            "status": "test",
            "tags": [
                "attack.credential_access",
                "attack.t1528"
            ],
            "title": "Delegated Permissions Granted For All Users"
        },
        {
            "author": "Bailey Bercik '@baileybercik', Mark Morowczynski '@markmorow'",
            "date": "2022/07/10",
            "description": "Detects when an application is granted delegated or app role permissions for Microsoft Graph, Exchange, Sharepoint, or Azure AD",
            "detection": {
                "condition": "selection",
                "selection": {
                    "properties.message": [
                        "Add delegated permission grant",
                        "Add app role assignment to service principal"
                    ]
                }
            },
            "falsepositives": [
                "When the permission is legitimately needed for the app"
            ],
            "id": "c1d147ae-a951-48e5-8b41-dcd0170c7213",
            "level": "high",
            "logsource": {
                "product": "azure",
                "service": "auditlogs"
            },
            "references": [
                "https://learn.microsoft.com/en-us/entra/architecture/security-operations-applications#application-granted-highly-privileged-permissions"
            ],
            "status": "test",
            "tags": [
                "attack.credential_access",
                "attack.t1528"
            ],
            "title": "App Granted Microsoft Permissions"
        },
        {
            "author": "Bailey Bercik '@baileybercik', Mark Morowczynski '@markmorow'",
            "date": "2022/07/10",
            "description": "Detects when end user consent is blocked due to risk-based consent.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "failure_status_reason": "Microsoft.online.Security.userConsentBlockedForRiskyAppsExceptions"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "7091372f-623c-4293-bc37-20c32b3492be",
            "level": "medium",
            "logsource": {
                "product": "azure",
                "service": "auditlogs"
            },
            "references": [
                "https://learn.microsoft.com/en-us/entra/architecture/security-operations-applications#end-user-stopped-due-to-risk-based-consent"
            ],
            "status": "test",
            "tags": [
                "attack.credential_access",
                "attack.t1528"
            ],
            "title": "End User Consent Blocked"
        },
        {
            "author": "Mark Morowczynski '@markmorow', Gloria Lee, '@gleeiamglo'",
            "date": "2023/09/07",
            "description": "Indicates access attempt to the PRT resource which can be used to move laterally into an organization or perform credential theft",
            "detection": {
                "condition": "selection",
                "selection": {
                    "riskEventType": "attemptedPrtAccess"
                }
            },
            "falsepositives": [
                "This detection is low-volume and is seen infrequently in most organizations. When this detection appears it's high risk, and users should be remediated."
            ],
            "id": "a84fc3b1-c9ce-4125-8e74-bdcdb24021f1",
            "level": "high",
            "logsource": {
                "product": "azure",
                "service": "riskdetection"
            },
            "references": [
                "https://learn.microsoft.com/en-us/entra/id-protection/concept-identity-protection-risks#possible-attempt-to-access-primary-refresh-token-prt",
                "https://learn.microsoft.com/en-us/entra/architecture/security-operations-user-accounts#unusual-sign-ins"
            ],
            "status": "experimental",
            "tags": [
                "attack.t1528",
                "attack.credential_access"
            ],
            "title": "Primary Refresh Token Access Attempt"
        },
        {
            "author": "Gloria Lee, '@gleeiamglo'",
            "date": "2023/08/22",
            "description": "Indicates sign-ins from an anonymous IP address, for example, using an anonymous browser or VPN.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "riskEventType": "anonymizedIPAddress"
                }
            },
            "falsepositives": [
                "We recommend investigating the sessions flagged by this detection in the context of other sign-ins"
            ],
            "id": "53acd925-2003-440d-a1f3-71a5253fe237",
            "level": "high",
            "logsource": {
                "product": "azure",
                "service": "riskdetection"
            },
            "references": [
                "https://learn.microsoft.com/en-us/graph/api/resources/riskdetection?view=graph-rest-1.0",
                "https://learn.microsoft.com/en-us/entra/id-protection/concept-identity-protection-risks#anonymous-ip-address"
            ],
            "status": "test",
            "tags": [
                "attack.t1528",
                "attack.credential_access"
            ],
            "title": "Anonymous IP Address"
        },
        {
            "author": "Mark Morowczynski '@markmorow'",
            "date": "2023/08/07",
            "description": "Indicates that there are abnormal characteristics in the token such as an unusual token lifetime or a token that is played from an unfamiliar location.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "riskEventType": "anomalousToken"
                }
            },
            "falsepositives": [
                "We recommend investigating the sessions flagged by this detection in the context of other sign-ins from the user."
            ],
            "id": "6555754e-5e7f-4a67-ad1c-4041c413a007",
            "level": "high",
            "logsource": {
                "product": "azure",
                "service": "riskdetection"
            },
            "references": [
                "https://learn.microsoft.com/en-us/entra/id-protection/concept-identity-protection-risks#anomalous-token",
                "https://learn.microsoft.com/en-us/entra/architecture/security-operations-user-accounts#unusual-sign-ins"
            ],
            "status": "test",
            "tags": [
                "attack.t1528",
                "attack.credential_access"
            ],
            "title": "Anomalous Token"
        },
        {
            "author": "@SerkinValery",
            "date": "2024/07/22",
            "description": "Detects file access attempts to sensitive Microsoft teams files (leveldb, cookies) by an uncommon process.\n",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_legit_location": {
                    "Image|endswith": "\\Microsoft\\Teams\\current\\Teams.exe"
                },
                "selection": {
                    "FileName|contains": [
                        "\\Microsoft\\Teams\\Cookies",
                        "\\Microsoft\\Teams\\Local Storage\\leveldb"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "65744385-8541-44a6-8630-ffc824d7d4cc",
            "level": "medium",
            "logsource": {
                "category": "file_access",
                "definition": "Requirements: Microsoft-Windows-Kernel-File ETW provider",
                "product": "windows"
            },
            "references": [
                "https://www.bleepingcomputer.com/news/security/microsoft-teams-stores-auth-tokens-as-cleartext-in-windows-linux-macs/",
                "https://www.vectra.ai/blog/undermining-microsoft-teams-security-by-mining-tokens"
            ],
            "status": "experimental",
            "tags": [
                "attack.credential_access",
                "attack.t1528"
            ],
            "title": "Microsoft Teams Sensitive File Access By Uncommon Application"
        },
        {
            "author": "Max Altgelt (Nextron Systems)",
            "date": "2022/06/02",
            "description": "Detects process creation with a renamed BrowserCore.exe (used to extract Azure tokens)",
            "detection": {
                "condition": "selection and not 1 of filter_*",
                "filter_realbrowsercore": {
                    "Image|endswith": "\\BrowserCore.exe"
                },
                "selection": {
                    "OriginalFileName": "BrowserCore.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "8a4519e8-e64a-40b6-ae85-ba8ad2177559",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/03",
            "status": "test",
            "references": [
                "https://twitter.com/mariuszbit/status/1531631015139102720"
            ],
            "tags": [
                "attack.t1528",
                "attack.t1036.003"
            ],
            "title": "Renamed BrowserCore.EXE Execution"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/10/25",
            "description": "Detects possible search for office tokens via CLI by looking for the string \"eyJ0eX\". This string is used as an anchor to look for the start of the JWT token used by office and similar apps.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains": [
                        "eyJ0eXAiOi",
                        " eyJ0eX",
                        " \"eyJ0eX\"",
                        " 'eyJ0eX'"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "6d3a3952-6530-44a3-8554-cf17c116c615",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://mrd0x.com/stealing-tokens-from-office-applications/"
            ],
            "status": "test",
            "tags": [
                "attack.credential_access",
                "attack.t1528"
            ],
            "title": "Suspicious Office Token Search Via CLI"
        },
        {
            "author": "@SerkinValery",
            "date": "2022/09/16",
            "description": "Detects a commandline containing references to the Microsoft Teams database or cookies files from a process other than Teams.\nThe database might contain authentication tokens and other sensitive information about the logged in accounts.\n",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_legit_locations": {
                    "Image|endswith": "\\Microsoft\\Teams\\current\\Teams.exe"
                },
                "selection": {
                    "CommandLine|contains": [
                        "\\Microsoft\\Teams\\Cookies",
                        "\\Microsoft\\Teams\\Local Storage\\leveldb"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "d2eb17db-1d39-41dc-b57f-301f6512fa75",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/12/18",
            "status": "experimental",
            "references": [
                "https://www.bleepingcomputer.com/news/security/microsoft-teams-stores-auth-tokens-as-cleartext-in-windows-linux-macs/",
                "https://www.vectra.ai/blogpost/undermining-microsoft-teams-security-by-mining-tokens"
            ],
            "tags": [
                "attack.credential_access",
                "attack.t1528"
            ],
            "title": "Potentially Suspicious Command Targeting Teams Sensitive Files"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/07/08",
            "description": "Detects creation of default named pipes used by the Koh tool",
            "detection": {
                "condition": "selection",
                "selection": {
                    "PipeName|contains": [
                        "\\imposecost",
                        "\\imposingcost"
                    ]
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "0adc67e0-a68f-4ffd-9c43-28905aad5d6a",
            "level": "critical",
            "logsource": {
                "category": "pipe_created",
                "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575",
                "product": "windows"
            },
            "modified": "2023/08/07",
            "status": "test",
            "references": [
                "https://github.com/GhostPack/Koh/blob/0283d9f3f91cf74732ad377821986cfcb088e20a/Clients/BOF/KohClient.c#L12"
            ],
            "tags": [
                "attack.privilege_escalation",
                "attack.credential_access",
                "attack.t1528",
                "attack.t1134.001"
            ],
            "title": "HackTool - Koh Default Named Pipe"
        },
        {
            "author": "@SerkinValery",
            "date": "2022/09/16",
            "description": "Detects an access to authentication tokens and accounts of Microsoft Teams desktop application.",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "ProcessName|contains": "\\Microsoft\\Teams\\current\\Teams.exe"
                },
                "selection": {
                    "EventID": 4663,
                    "ObjectName|contains": [
                        "\\Microsoft\\Teams\\Cookies",
                        "\\Microsoft\\Teams\\Local Storage\\leveldb"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "25cde13e-8e20-4c29-b949-4e795b76f16f",
            "level": "high",
            "logsource": {
                "service": "security",
                "product": "windows"
            },
            "status": "test",
            "references": [
                "https://www.bleepingcomputer.com/news/security/microsoft-teams-stores-auth-tokens-as-cleartext-in-windows-linux-macs/",
                "https://www.vectra.ai/blogpost/undermining-microsoft-teams-security-by-mining-tokens"
            ],
            "tags": [
                "attack.credential_access",
                "attack.t1528"
            ],
            "title": "Suspicious Teams Application Related ObjectAcess Event"
        }
    ],
    "x_mitre_platforms": [
        "SaaS",
        "Office 365",
        "Azure AD",
        "Google Workspace",
        "Containers"
    ],
    "x_mitre_domains": [
        "enterprise-attack"
    ],
    "x_mitre_contributors": [
        "Suzy Schapperle - Microsoft Azure Red Team",
        "Shailesh Tiwary (Indian Army)",
        "Mark Wee",
        "Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services)",
        "Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC)",
        "Ram Pliskin, Microsoft Azure Security Center",
        "Jack Burns, HubSpot"
    ],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "credential-access"
        }
    ],
    "x_mitre_detection": "Administrators should set up monitoring to trigger automatic alerts when policy criteria are met. For example, using a Cloud Access Security Broker (CASB), admins can create a \u201cHigh severity app permissions\u201d policy that generates alerts if apps request high severity permissions or send permissions requests for too many users.\n\nSecurity analysts can hunt for malicious apps using the tools available in their CASB, identity provider, or resource provider (depending on platform.) For example, they can filter for apps that are authorized by a small number of users, apps requesting high risk permissions, permissions incongruous with the app\u2019s purpose, or apps with old \u201cLast authorized\u201d fields. A specific app can be investigated using an activity log displaying activities the app has performed, although some activities may be mis-logged as being performed by the user. App stores can be useful resources to further investigate suspicious apps.\n\nAdministrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.",
    "x_mitre_is_subtechnique": false,
    "x_mitre_version": "1.3",
    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
    "x_mitre_data_sources": [
        "Active Directory: Active Directory Object Modification",
        "User Account: User Account Modification"
    ],
    "x_mitre_permissions_required": []
}