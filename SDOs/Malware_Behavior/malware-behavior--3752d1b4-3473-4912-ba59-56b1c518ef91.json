{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--3752d1b4-3473-4912-ba59-56b1c518ef91",
    "created": "2024-08-13T14:46:37.033857Z",
    "modified": "2024-08-13T14:46:48.547149Z",
    "name": "Process Injection: Asynchronous Procedure Call",
    "description": "Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. APC injection is a method of executing arbitrary code in the address space of a separate live process. APC injection is commonly performed by attaching malicious code to the APC Queue [1] of a process's thread. Queued APC functions are executed when the thread enters an alterable state.[1] A handle to an existing victim process is first created with native Windows API calls such as OpenThread. At this point QueueUserAPC can be used to invoke a function (such as LoadLibrayA pointing to a malicious DLL). A variation of APC injection, dubbed 'Early Bird injection', involves creating a suspended process in which malicious code can be written and executed before the process' entry point (and potentially subsequent anti-malware hooks) via an APC. [2] AtomBombing [3] is another variation that utilizes APCs to invoke malicious code previously written to the global atom table.[4]Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via APC injection may also evade detection from security products since the execution is masked under a legitimate process.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1055/004",
            "external_id": "T1055/004"
        }
    ],
    "x_mitre_capa_rules": [
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "or": [
                                    {
                                        "match": "write process memory"
                                    },
                                    {
                                        "match": "create or open section object"
                                    },
                                    {
                                        "api": "kernel32.MapViewOfFile"
                                    }
                                ]
                            },
                            {
                                "or": [
                                    {
                                        "api": "kernel32.QueueUserAPC"
                                    },
                                    {
                                        "api": "ntdll.NtQueueApcThread"
                                    }
                                ]
                            },
                            {
                                "optional": [
                                    {
                                        "or": [
                                            {
                                                "number": "0x1fffff = THREAD_ALL_ACCESS"
                                            },
                                            {
                                                "api": "kernel32.CreateProcess"
                                            },
                                            {
                                                "api": "kernel32.OpenProcess"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Defense Evasion::Process Injection::Asynchronous Procedure Call [T1055.004]"
                    ],
                    "authors": [
                        "william.ballenthin@mandiant.com"
                    ],
                    "examples": [
                        "al-khaser_x64.exe_:0x140019348"
                    ],
                    "name": "inject APC",
                    "namespace": "host-interaction/process/inject",
                    "scopes": {
                        "dynamic": "thread",
                        "static": "function"
                    }
                }
            }
        }
    ]
}