{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--15237766-3581-4389-bfed-4844a0893296",
    "created": "2024-08-13T14:46:36.684307Z",
    "modified": "2024-08-13T14:46:48.372103Z",
    "name": "Screen Capture",
    "description": "Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as CopyFromScreen, xwd, or screencapture.[1][2]",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1113",
            "external_id": "T1113"
        },
        {
            "source_name": "CAPEC 648",
            "external_id": "malware-behavior--e597ce5e-1514-4332-91d1-6b384c26eb66"
        },
        {
            "source_name": "mitre-attack",
            "url": "https://attack.mitre.org/techniques/T1113",
            "external_id": "T1113"
        },
        {
            "source_name": "CopyFromScreen .NET",
            "description": "Microsoft. (n.d.). Graphics.CopyFromScreen Method. Retrieved March 24, 2020.",
            "url": "https://docs.microsoft.com/en-us/dotnet/api/system.drawing.graphics.copyfromscreen?view=netframework-4.8"
        },
        {
            "source_name": "Antiquated Mac Malware",
            "description": "Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017.",
            "url": "https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/"
        }
    ],
    "x_mitre_capa_rules": [
        {
            "rule": {
                "features": [
                    {
                        "or": [
                            {
                                "and": [
                                    {
                                        "or": [
                                            {
                                                "api": "user32.GetWindowDC"
                                            },
                                            {
                                                "api": "user32.GetDC"
                                            },
                                            {
                                                "and": [
                                                    {
                                                        "api": "gdi32.CreateDC"
                                                    },
                                                    {
                                                        "string": "DISPLAY"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "or": [
                                            {
                                                "api": "gdi32.BitBlt"
                                            },
                                            {
                                                "api": "gdi32.GetDIBits"
                                            }
                                        ]
                                    },
                                    {
                                        "api": "gdi32.CreateCompatibleDC"
                                    },
                                    {
                                        "api": "gdi32.CreateCompatibleBitmap"
                                    },
                                    {
                                        "optional": [
                                            {
                                                "or": [
                                                    {
                                                        "api": "user32.GetSystemMetrics = fetch screen dimensions"
                                                    },
                                                    {
                                                        "api": "user32.GetDesktopWindow = get entire desktop"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "basic block": [
                                    {
                                        "and": [
                                            {
                                                "api": "BitBlt"
                                            },
                                            {
                                                "characteristic": "tight loop"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "call": [
                                    {
                                        "and": [
                                            {
                                                "api": "BitBlt"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "api": "System.Drawing.Graphics::CopyFromScreen"
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Collection::Screen Capture [T1113]"
                    ],
                    "authors": [
                        "moritz.raabe@mandiant.com",
                        "@_re_fox",
                        "michael.hunhoff@mandiant.com"
                    ],
                    "examples": [
                        "BFB9B5391A13D0AFD787E87AB90F14F5:0x1314610A",
                        "7204e3efc2434012e13ca939db0d0b02:0x414070",
                        "50D5EE1CE2CA5E30C6B1019EE64EEEC2:0x406E07"
                    ],
                    "mbc": [
                        "Collection::Screen Capture::WinAPI [E1113.m01]"
                    ],
                    "name": "capture screenshot",
                    "namespace": "collection/screenshot",
                    "scopes": {
                        "dynamic": "thread",
                        "static": "function"
                    }
                }
            }
        },
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "or": [
                                    {
                                        "basic block": [
                                            {
                                                "and": [
                                                    {
                                                        "number": "0x2C = VK_SNAPSHOT"
                                                    },
                                                    {
                                                        "count(api(user32.keybd_event))": 2
                                                    },
                                                    {
                                                        "or": [
                                                            {
                                                                "number": "0x3 = KEYEVENTF_KEYUP|KEYEVENTF_EXTENDEDKEY"
                                                            },
                                                            {
                                                                "number": "0x2 = KEYEVENTF_KEYUP"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "call": [
                                            {
                                                "and": [
                                                    {
                                                        "number": "0x2C = VK_SNAPSHOT"
                                                    },
                                                    {
                                                        "count(api(user32.keybd_event))": 2
                                                    },
                                                    {
                                                        "or": [
                                                            {
                                                                "number": "0x3 = KEYEVENTF_KEYUP|KEYEVENTF_EXTENDEDKEY"
                                                            },
                                                            {
                                                                "number": "0x2 = KEYEVENTF_KEYUP"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "match": "read clipboard data"
                            },
                            {
                                "match": "open clipboard"
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Collection::Screen Capture [T1113]"
                    ],
                    "authors": [
                        "@_re_fox"
                    ],
                    "examples": [
                        "3f3bbcf8fd90bdcdcdc5494314ed4225:0x402D10"
                    ],
                    "mbc": [
                        "Collection::Screen Capture [E1113]"
                    ],
                    "name": "capture screenshot via keybd event",
                    "namespace": "collection/screenshot",
                    "scopes": {
                        "dynamic": "thread",
                        "static": "function"
                    }
                }
            }
        },
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "match": "compiled with Go"
                            },
                            {
                                "and": [
                                    {
                                        "description": "Dynamic loading of DLLs",
                                        "string": "syscall.NewLazyDLL"
                                    },
                                    {
                                        "or": [
                                            {
                                                "and": [
                                                    {
                                                        "substring": "user32.dll"
                                                    },
                                                    {
                                                        "or": [
                                                            {
                                                                "substring": "GetWindowDC"
                                                            },
                                                            {
                                                                "substring": "GetDC"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "and": [
                                                    {
                                                        "substring": "gdi32.dll"
                                                    },
                                                    {
                                                        "or": [
                                                            {
                                                                "substring": "BitBlt"
                                                            },
                                                            {
                                                                "substring": "GetDIBits"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "substring": "CreateCompatibleDC"
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Collection::Screen Capture [T1113]"
                    ],
                    "authors": [
                        "joakim@intezer.com"
                    ],
                    "description": "Detects screenshot capability via WinAPI for Go files.",
                    "mbc": [
                        "Collection::Screen Capture::WinAPI [E1113.m01]"
                    ],
                    "name": "capture screenshot in Go",
                    "namespace": "collection/screenshot",
                    "scopes": {
                        "dynamic": "file",
                        "static": "file"
                    }
                }
            }
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "remotephone, oscd.community",
            "date": "2020/10/13",
            "description": "Detects attempts to use screencapture to collect macOS screenshots",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Image": "/usr/sbin/screencapture"
                }
            },
            "falsepositives": [
                "Legitimate user activity taking screenshots"
            ],
            "id": "0877ed01-da46-4c49-8476-d49cdd80dfa7",
            "level": "low",
            "logsource": {
                "category": "process_creation",
                "product": "macos"
            },
            "modified": "2021/11/27",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1113/T1113.md",
                "https://github.com/EmpireProject/Empire/blob/08cbd274bef78243d7a8ed6443b8364acd1fc48b/lib/modules/python/collection/osx/screenshot.py"
            ],
            "status": "test",
            "tags": [
                "attack.collection",
                "attack.t1113"
            ],
            "title": "Screen Capture - macOS"
        },
        {
            "author": "Sajid Nawaz Khan",
            "date": "2024/06/02",
            "description": "Detects the enabling of the Windows Recall feature via registry manipulation.\nWindows Recall can be enabled by deleting the existing \"DisableAIDataAnalysis\" value, or setting it to 0.\nAdversaries may enable Windows Recall as part of post-exploitation discovery and collection activities.\nThis rule assumes that Recall is already explicitly disabled on the host, and subsequently enabled by the adversary.\n",
            "detection": {
                "condition": "selection_img and selection_value and 1 of selection_action_*",
                "selection_action_add": {
                    "CommandLine|contains": [
                        "add",
                        "0"
                    ]
                },
                "selection_action_delete": {
                    "CommandLine|contains": "delete"
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\reg.exe"
                    },
                    {
                        "OriginalFileName": "reg.exe"
                    }
                ],
                "selection_value": {
                    "CommandLine|contains|all": [
                        "Microsoft\\Windows\\WindowsAI",
                        "DisableAIDataAnalysis"
                    ]
                }
            },
            "falsepositives": [
                "Legitimate use/activation of Windows Recall"
            ],
            "id": "817f252c-5143-4dae-b418-48c3e9f63728",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://learn.microsoft.com/en-us/windows/client-management/manage-recall",
                "https://learn.microsoft.com/en-us/windows/client-management/mdm/policy-csp-windowsai#disableaidataanalysis"
            ],
            "related": [
                {
                    "id": "5dfc1465-8f65-4fde-8eb5-6194380c6a62",
                    "type": "similar"
                },
                {
                    "id": "75180c5f-4ea1-461a-a4f6-6e4700c065d4",
                    "type": "similar"
                }
            ],
            "status": "experimental",
            "tags": [
                "attack.collection",
                "attack.t1113"
            ],
            "title": "Windows Recall Feature Enabled Via Reg.EXE"
        },
        {
            "author": "Beyu Denis, oscd.community",
            "date": "2019/10/12",
            "description": "Detects execution of Windows Problem Steps Recorder (psr.exe), a utility used to record the user screen and clicks.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains": [
                        "/start",
                        "-start"
                    ],
                    "Image|endswith": "\\Psr.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "2158f96f-43c2-43cb-952a-ab4580f32382",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2024/01/04",
            "references": [
                "https://lolbas-project.github.io/lolbas/Binaries/Psr/",
                "https://web.archive.org/web/20200229201156/https://www.sans.org/cyber-security-summit/archives/file/summit-archive-1493861893.pdf",
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1560.001/T1560.001.md"
            ],
            "status": "test",
            "tags": [
                "attack.collection",
                "attack.t1113"
            ],
            "title": "Screen Capture Activity Via Psr.EXE"
        },
        {
            "author": "frack113",
            "date": "2021/12/28",
            "description": "Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation.\nScreen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "ScriptBlockText|contains": ".CopyFromScreen"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "d4a11f63-2390-411c-9adf-d791fd152830",
            "level": "medium",
            "logsource": {
                "category": "ps_script",
                "product": "windows",
                "definition": "Requirements: Script Block Logging must be enabled"
            },
            "modified": "2022/07/07",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1113/T1113.md#atomic-test-6---windows-screen-capture-copyfromscreen"
            ],
            "status": "test",
            "tags": [
                "attack.collection",
                "attack.t1113"
            ],
            "title": "Windows Screen Capture with CopyFromScreen"
        },
        {
            "id": "5dfc1465-8f65-4fde-8eb5-6194380c6a62",
            "author": "Sajid Nawaz Khan",
            "date": "2024/06/02",
            "description": "Detects the enabling of the Windows Recall feature via registry manipulation. Windows Recall can be enabled by deleting the existing \"DisableAIDataAnalysis\" registry value.\nAdversaries may enable Windows Recall as part of post-exploitation discovery and collection activities.\nThis rule assumes that Recall is already explicitly disabled on the host, and subsequently enabled by the adversary.\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventType": "DeleteValue",
                    "TargetObject|endswith": "\\Microsoft\\Windows\\WindowsAI\\DisableAIDataAnalysis"
                }
            },
            "falsepositives": [
                "Legitimate use/activation of Windows Recall"
            ],
            "level": "medium",
            "logsource": {
                "category": "registry_delete",
                "product": "windows"
            },
            "references": [
                "https://learn.microsoft.com/en-us/windows/client-management/manage-recall",
                "https://learn.microsoft.com/en-us/windows/client-management/mdm/policy-csp-windowsai#disableaidataanalysis"
            ],
            "related": [
                {
                    "id": "75180c5f-4ea1-461a-a4f6-6e4700c065d4",
                    "type": "similar"
                },
                {
                    "type": "similar",
                    "id": "817f252c-5143-4dae-b418-48c3e9f63728"
                }
            ],
            "status": "experimental",
            "tags": [
                "attack.collection",
                "attack.t1113"
            ],
            "title": "Windows Recall Feature Enabled - DisableAIDataAnalysis Value Deleted"
        },
        {
            "id": "75180c5f-4ea1-461a-a4f6-6e4700c065d4",
            "author": "Sajid Nawaz Khan",
            "date": "2024/06/02",
            "description": "Detects the enabling of the Windows Recall feature via registry manipulation. Windows Recall can be enabled by setting the value of \"DisableAIDataAnalysis\" to \"0\".\nAdversaries may enable Windows Recall as part of post-exploitation discovery and collection activities.\nThis rule assumes that Recall is already explicitly disabled on the host, and subsequently enabled by the adversary.\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Details": "DWORD (0x00000000)",
                    "TargetObject|endswith": "\\Software\\Policies\\Microsoft\\Windows\\WindowsAI\\DisableAIDataAnalysis"
                }
            },
            "falsepositives": [
                "Legitimate use/activation of Windows Recall"
            ],
            "level": "medium",
            "logsource": {
                "category": "registry_set",
                "product": "windows"
            },
            "references": [
                "https://learn.microsoft.com/en-us/windows/client-management/manage-recall",
                "https://learn.microsoft.com/en-us/windows/client-management/mdm/policy-csp-windowsai#disableaidataanalysis"
            ],
            "related": [
                {
                    "id": "5dfc1465-8f65-4fde-8eb5-6194380c6a62",
                    "type": "similar"
                },
                {
                    "type": "similar",
                    "id": "817f252c-5143-4dae-b418-48c3e9f63728"
                }
            ],
            "status": "experimental",
            "tags": [
                "attack.collection",
                "attack.t1113"
            ],
            "title": "Windows Recall Feature Enabled - Registry"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2024/07/01",
            "description": "Detects the enabling of the \"EnablePeriodicBackup\" registry value. Once enabled, The OS will backup System registry hives on restarts to the \"C:\\Windows\\System32\\config\\RegBack\" folder. Windows creates a \"RegIdleBackup\" task to manage subsequent backups.\nRegistry backup was a default behavior on Windows and was disabled as of \"Windows 10, version 1803\".\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Details": "DWORD (0x00000001)",
                    "TargetObject|endswith": "\\Control\\Session Manager\\Configuration Manager\\EnablePeriodicBackup"
                }
            },
            "falsepositives": [
                "Legitimate need for RegBack feature by administrators."
            ],
            "id": "973ef012-8f1a-4c40-93b4-7e659a5cd17f",
            "level": "medium",
            "logsource": {
                "category": "registry_set",
                "product": "windows"
            },
            "references": [
                "https://learn.microsoft.com/en-us/troubleshoot/windows-client/installing-updates-features-roles/system-registry-no-backed-up-regback-folder"
            ],
            "status": "experimental",
            "title": "Periodic Backup For System Registry Hives Enabled",
            "tags": [
                "attack.collection",
                "attack.t1113"
            ]
        },
        {
            "author": "Pawel Mazur",
            "date": "2021/09/13",
            "description": "Detects adversary creating screen capture of a full with xwd. Highly recommended using rule on servers, due high usage of screenshot utilities on user workstations",
            "detection": {
                "condition": "selection and 1 of xwd_*",
                "selection": {
                    "a0": "xwd",
                    "type": "EXECVE"
                },
                "xwd_no_root_window": {
                    "a1": "-out",
                    "a2|endswith": ".xwd"
                },
                "xwd_root_window": {
                    "a1": "-root",
                    "a2": "-out",
                    "a3|endswith": ".xwd"
                }
            },
            "falsepositives": [
                "Legitimate use of screenshot utility"
            ],
            "id": "e2f17c5d-b02a-442b-9052-6eb89c9fec9c",
            "level": "low",
            "logsource": {
                "product": "linux",
                "service": "auditd"
            },
            "modified": "2022/12/18",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1113/T1113.md#atomic-test-3---x-windows-capture",
                "https://linux.die.net/man/1/xwd"
            ],
            "status": "test",
            "tags": [
                "attack.collection",
                "attack.t1113"
            ],
            "title": "Screen Capture with Xwd"
        },
        {
            "author": "Pawel Mazur",
            "date": "2021/09/21",
            "description": "Detects adversary creating screen capture of a desktop with Import Tool.\nHighly recommended using rule on servers, due to high usage of screenshot utilities on user workstations.\nImageMagick must be installed.\n",
            "detection": {
                "condition": "import and (import_window_root or import_no_window_root)",
                "import": {
                    "a0": "import",
                    "type": "EXECVE"
                },
                "import_no_window_root": {
                    "a1|endswith": [
                        ".png",
                        ".jpg",
                        ".jpeg"
                    ]
                },
                "import_window_root": {
                    "a1": "-window",
                    "a2": "root",
                    "a3|endswith": [
                        ".png",
                        ".jpg",
                        ".jpeg"
                    ]
                }
            },
            "falsepositives": [
                "Legitimate use of screenshot utility"
            ],
            "id": "dbe4b9c5-c254-4258-9688-d6af0b7967fd",
            "level": "low",
            "logsource": {
                "product": "linux",
                "service": "auditd"
            },
            "modified": "2022/10/09",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1113/T1113.md",
                "https://linux.die.net/man/1/import",
                "https://imagemagick.org/"
            ],
            "status": "test",
            "tags": [
                "attack.collection",
                "attack.t1113"
            ],
            "title": "Screen Capture with Import Tool"
        }
    ],
    "x_mitre_platforms": [
        "Linux",
        "macOS",
        "Windows"
    ],
    "x_mitre_domains": [
        "enterprise-attack"
    ],
    "x_mitre_contributors": [],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "collection"
        }
    ],
    "x_mitre_detection": "Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.",
    "x_mitre_is_subtechnique": false,
    "x_mitre_version": "1.1",
    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
    "x_mitre_data_sources": [
        "Command: Command Execution",
        "Process: OS API Execution"
    ],
    "x_mitre_permissions_required": []
}