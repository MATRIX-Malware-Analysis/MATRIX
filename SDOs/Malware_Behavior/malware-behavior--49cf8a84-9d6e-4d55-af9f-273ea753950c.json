{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--49cf8a84-9d6e-4d55-af9f-273ea753950c",
    "created": "2024-08-13T14:46:36.653892Z",
    "modified": "2024-08-13T14:46:36.653892Z",
    "name": "Malicious Software Implanted",
    "description": "An attacker implants malicious software into the system in the supply chain distribution channel, with purpose of causing malicious disruption or allowing for additional compromise when the system is deployed.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CAPEC",
            "url": "https://capec.mitre.org/data/definitions/523.html",
            "external_id": "523"
        }
    ],
    "x_mitre_examples": [
        {
            "description": "An attacker has created a piece of malicious software designed to function as a backdoor in a system that is to be deployed at the victim location. During shipment of the system, the attacker has physical access to the system at a loading dock of an integrator for a short time. The attacker unpacks and powers up the system and installs the malicious piece of software, and configures it to run upon system boot. The system is repackaged and returned to its place on the loading dock, and is shipped and installed at the victim location with the malicious software in place, allowing the attacker to bypass firewalls and remotely gain access to the victim's network for further malicious activities."
        }
    ],
    "x_mitre_execution_flows": [
        {
            "description": "[Determine Entry Point] The adversary must first identify a system that they wish to target and search for an entry point they can use to install the malicious software. This could be a system which they have prior knowledge of, giving them insight into the software and environment.",
            "phase": "Explore",
            "step": "1",
            "techniques": [
                "Use a JTAGulator to identify exposed JTAG and UART interfaces in smaller embedded systems.",
                "Identify exposed USB connectors that could be used to load software."
            ]
        },
        {
            "description": "[Discover Vulnerability in Supply Chain] The adversary maps out the supply chain for the targeted system. They look for ooportunities to gain physical access to the system after it has left the manufacturer, but before it is deployed to the victim.",
            "phase": "Explore",
            "step": "2",
            "techniques": [
                "Procure a system and observe the steps it takes in the shipment process.",
                "Identify possible warehouses that systems are stored after manufacturing."
            ]
        },
        {
            "description": "[Test Malicious Software] Before performing the attack in the wild, an adversary will test the attack on a system they have procured to ensure that the desired outcome will be achieved.",
            "phase": "Experiment",
            "step": "3",
            "techniques": [
                "Design malicious software that will give an adversary a backdoor into the system once it is deployed to the victim.",
                "Obtain already designed malicious software that just need to be placed into the system."
            ]
        },
        {
            "description": "[Implant Software in the Supply Chain] Using the vulnerability in the supply chain of the system discovered in the explore phase, the adversary implants the malicious software into the system. This results in the adversary gaining unintended access to systems once they reach the victim and can lead to a variety of follow up attacks.",
            "phase": "Exploit",
            "step": "4",
            "techniques": []
        }
    ],
    "x_mitre_impact": "High",
    "x_mitre_likelihood_of_attack": "Low",
    "x_mitre_mitigations": [
        {
            "description": "Deploy strong code integrity policies to allow only authorized apps to run."
        },
        {
            "description": "Use endpoint detection and response solutions that can automaticalkly detect and remediate suspicious activities."
        },
        {
            "description": "Maintain a highly secure build and update infrastructure by immediately applying security patches for OS and software, implementing mandatory integrity controls to ensure only trusted tools run, and requiring multi-factor authentication for admins."
        },
        {
            "description": "Require SSL for update channels and implement certificate transparency based verification."
        },
        {
            "description": "Sign everything, including configuration files, XML files and packages."
        },
        {
            "description": "Develop an incident response process, disclose supply chain incidents and notify customers with accurate and timely information."
        }
    ]
}