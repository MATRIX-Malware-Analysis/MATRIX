{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--6dec538a-ed02-4b1f-85de-3bee8396ff83",
    "created": "2024-08-13T14:46:36.861009Z",
    "modified": "2024-08-13T14:46:48.313288Z",
    "name": "Deobfuscate/Decode Files or Information",
    "description": "Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.One such example is the use of certutil to decode a remote access tool portable executable file that has been hidden inside a certificate file.[1] Another example is using the Windows copy /b command to reassemble binary fragments into a malicious payload.[2]Sometimes a user's action may be required to open it for deobfuscation or decryption as part of User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. [3]",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1140",
            "external_id": "T1140"
        },
        {
            "source_name": "mitre-attack",
            "url": "https://attack.mitre.org/techniques/T1140",
            "external_id": "T1140"
        },
        {
            "source_name": "Volexity PowerDuke November 2016",
            "description": "Adair, S.. (2016, November 9). PowerDuke: Widespread Post-Election Spear Phishing Campaigns Targeting Think Tanks and NGOs. Retrieved January 11, 2017.",
            "url": "https://www.volexity.com/blog/2016/11/09/powerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos/"
        },
        {
            "source_name": "Malwarebytes Targeted Attack against Saudi Arabia",
            "description": "Malwarebytes Labs. (2017, March 27). New targeted attack against Saudi Arabia Government. Retrieved July 3, 2017.",
            "url": "https://blog.malwarebytes.com/cybercrime/social-engineering-cybercrime/2017/03/new-targeted-attack-saudi-arabia-government/"
        },
        {
            "source_name": "Carbon Black Obfuscation Sept 2016",
            "description": "Tedesco, B. (2016, September 23). Security Alert Summary. Retrieved February 12, 2018.",
            "url": "https://www.carbonblack.com/2016/09/23/security-advisory-variants-well-known-adware-families-discovered-include-sophisticated-obfuscation-techniques-previously-associated-nation-state-attacks/"
        }
    ],
    "x_mitre_capa_rules": [
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "or": [
                                    {
                                        "number": "0x1 = dwFlags=CRYPT_STRING_BASE64"
                                    },
                                    {
                                        "number": "0x6 = dwFlags=CRYPT_STRING_BASE64_ANY"
                                    },
                                    {
                                        "number": "0x7 = dwFlags=CRYPT_STRING_ANY"
                                    }
                                ]
                            },
                            {
                                "api": "CryptStringToBinary"
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Defense Evasion::Deobfuscate/Decode Files or Information [T1140]"
                    ],
                    "authors": [
                        "michael.hunhoff@mandiant.com"
                    ],
                    "examples": [
                        "mimikatz.exe_:0x40D742"
                    ],
                    "name": "decode data using Base64 via WinAPI",
                    "namespace": "data-manipulation/encoding/base64",
                    "scopes": {
                        "dynamic": "call",
                        "static": "basic block"
                    }
                }
            }
        },
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "match": "create File Decompression Interface context on Windows"
                            },
                            {
                                "or": [
                                    {
                                        "api": "cabinet.FDICopy"
                                    },
                                    {
                                        "api": "cabinet.FDIDestroy"
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Defense Evasion::Deobfuscate/Decode Files or Information [T1140]"
                    ],
                    "authors": [
                        "jakub.jozwiak@mandiant.com"
                    ],
                    "examples": [
                        "44bad2e2a9e387b86870f009d01833ea4618d2a7cda5f64fa84a19f3bdf4efaf:0x1400028E0"
                    ],
                    "mbc": [
                        "Data::Decompress Data [C0025]"
                    ],
                    "name": "extract Cabinet on Windows",
                    "namespace": "data-manipulation/compression",
                    "references": [
                        "https://learn.microsoft.com/en-us/windows/win32/devnotes/extracting-files-from-a-cabinet"
                    ],
                    "scopes": {
                        "dynamic": "thread",
                        "static": "function"
                    }
                }
            }
        },
        {
            "rule": {
                "features": [
                    {
                        "or": [
                            {
                                "mnemonic": "aesdec = Perform One Round of an AES Decryption Flow"
                            },
                            {
                                "mnemonic": "vaesdec"
                            },
                            {
                                "mnemonic": "aesdeclast = Perform Last Round of an AES Decryption Flow"
                            },
                            {
                                "mnemonic": "vaesdeclast"
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Defense Evasion::Deobfuscate/Decode Files or Information [T1140]"
                    ],
                    "authors": [
                        "moritz.raabe@mandiant.com"
                    ],
                    "examples": [
                        "66602B5FAB602CB4E6F754748D249542:0x4097D0"
                    ],
                    "mbc": [
                        "Cryptography::Decrypt Data::AES [C0031.001]"
                    ],
                    "name": "decrypt data using AES via x86 extensions",
                    "namespace": "data-manipulation/encryption/aes",
                    "scopes": {
                        "dynamic": "unsupported",
                        "static": "function"
                    }
                }
            }
        },
        {
            "rule": {
                "features": [
                    {
                        "or": [
                            {
                                "api": "System.Convert::FromBase64String"
                            },
                            {
                                "api": "System.Convert::FromBase64CharArray"
                            },
                            {
                                "api": "System.Convert::TryFromBase64Chars"
                            },
                            {
                                "api": "System.Convert::TryFromBase64String"
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Defense Evasion::Deobfuscate/Decode Files or Information [T1140]"
                    ],
                    "authors": [
                        "michael.hunhoff@mandiant.com"
                    ],
                    "mbc": [
                        "Data::Decode Data::Base64 [C0053.001]"
                    ],
                    "name": "decode data using Base64 in .NET",
                    "namespace": "data-manipulation/encoding/base64",
                    "scopes": {
                        "dynamic": "call",
                        "static": "function"
                    }
                }
            }
        },
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "api": "secur32.DecryptMessage"
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Defense Evasion::Deobfuscate/Decode Files or Information [T1140]"
                    ],
                    "authors": [
                        "matthew.williams@mandiant.com"
                    ],
                    "name": "decrypt data via SSPI",
                    "namespace": "data-manipulation/encryption",
                    "references": [
                        "https://docs.microsoft.com/en-us/windows/win32/api/sspi/nf-sspi-decryptmessage"
                    ],
                    "scopes": {
                        "dynamic": "call",
                        "static": "basic block"
                    }
                }
            }
        },
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "optional": [
                                    {
                                        "api": "System.IO.Compression.ZipFile::Open"
                                    },
                                    {
                                        "api": "System.IO.Compression.ZipFile::OpenRead"
                                    }
                                ]
                            },
                            {
                                "or": [
                                    {
                                        "api": "System.IO.Compression.ZipFileExtensions::ExtractToFile"
                                    },
                                    {
                                        "api": "System.IO.Compression.ZipFileExtensions::ExtractToDirectory"
                                    },
                                    {
                                        "api": "System.IO.Compression.ZipFile::ExtractToDirectory"
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Defense Evasion::Deobfuscate/Decode Files or Information [T1140]"
                    ],
                    "authors": [
                        "anushka.virgaonkar@mandiant.com",
                        "michael.hunhoff@mandiant.com"
                    ],
                    "name": "extract zip archive in .NET",
                    "scopes": {
                        "dynamic": "unsupported",
                        "static": "basic block"
                    },
                    "namespace": "data-manipulation/compression"
                }
            }
        },
        {
            "rule": {
                "features": [
                    {
                        "or": [
                            {
                                "api": "System.Security.Cryptography.RSACryptoServiceProvider::Decrypt"
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Defense Evasion::Deobfuscate/Decode Files or Information [T1140]"
                    ],
                    "authors": [
                        "michael.hunhoff@mandiant.com"
                    ],
                    "mbc": [
                        "Cryptography::Decrypt Data::RSA [C0031.010]"
                    ],
                    "name": "decrypt data using RSA",
                    "namespace": "data-manipulation/encryption/rsa",
                    "scopes": {
                        "dynamic": "call",
                        "static": "function"
                    },
                    "references": [
                        "https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.rsacryptoserviceprovider.decrypt"
                    ]
                }
            }
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "Mark Morowczynski '@markmorow', Gloria Lee, '@gleeiamglo'",
            "date": "2023/09/03",
            "description": "Detects suspicious rules that delete or move messages or folders are set on a user's inbox.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "riskEventType": "mcasSuspiciousInboxManipulationRules"
                }
            },
            "falsepositives": [
                "Actual mailbox rules that are moving items based on their workflow."
            ],
            "id": "ceb55fd0-726e-4656-bf4e-b585b7f7d572",
            "level": "high",
            "logsource": {
                "product": "azure",
                "service": "riskdetection"
            },
            "references": [
                "https://learn.microsoft.com/en-us/entra/id-protection/concept-identity-protection-risks#suspicious-inbox-manipulation-rules",
                "https://learn.microsoft.com/en-us/entra/architecture/security-operations-user-accounts#unusual-sign-ins"
            ],
            "status": "test",
            "tags": [
                "attack.t1140",
                "attack.defense_evasion"
            ],
            "title": "Suspicious Inbox Manipulation Rules"
        },
        {
            "author": "Mark Morowczynski '@markmorow', Gloria Lee, '@gleeiamglo'",
            "date": "2023/09/03",
            "description": "Indicates suspicious rules such as an inbox rule that forwards a copy of all emails to an external address",
            "detection": {
                "condition": "selection",
                "selection": {
                    "riskEventType": "suspiciousInboxForwarding"
                }
            },
            "falsepositives": [
                "A legitimate forwarding rule."
            ],
            "id": "27e4f1d6-ae72-4ea0-8a67-77a73a289c3d",
            "level": "high",
            "logsource": {
                "product": "azure",
                "service": "riskdetection"
            },
            "references": [
                "https://learn.microsoft.com/en-us/entra/id-protection/concept-identity-protection-risks#suspicious-inbox-forwarding",
                "https://learn.microsoft.com/en-us/entra/architecture/security-operations-user-accounts#unusual-sign-ins"
            ],
            "status": "test",
            "tags": [
                "attack.t1140",
                "attack.defense_evasion"
            ],
            "title": "Suspicious Inbox Forwarding Identity Protection"
        },
        {
            "author": "Joseliyo Sanchez, @Joseliyo_Jstnk",
            "date": "2023/12/20",
            "description": "Detects the use of tail to extract bytes at an offset from an image and then decode the base64 value to create a new file with the decoded content. The detected execution is a bash one-liner.\n",
            "detection": {
                "condition": "all of selection_*",
                "selection_b64": {
                    "CommandLine|contains|all": [
                        "base64",
                        "-d",
                        ">"
                    ]
                },
                "selection_files": {
                    "CommandLine|contains": [
                        ".avif",
                        ".gif",
                        ".jfif",
                        ".jpeg",
                        ".jpg",
                        ".pjp",
                        ".pjpeg",
                        ".png",
                        ".svg",
                        ".webp"
                    ]
                },
                "selection_image": {
                    "Image|endswith": "/bash"
                },
                "selection_view": {
                    "CommandLine|contains|all": [
                        "tail",
                        "-c"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "09a910bf-f71f-4737-9c40-88880ba5913d",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "macos"
            },
            "references": [
                "https://www.virustotal.com/gui/file/16bafdf741e7a13137c489f3c8db1334f171c7cb13b62617d691b0a64783cc48/behavior",
                "https://www.virustotal.com/gui/file/483fafc64a2b84197e1ef6a3f51e443f84dc5742602e08b9e8ec6ad690b34ed0/behavior"
            ],
            "status": "experimental",
            "tags": [
                "attack.defense_evasion",
                "attack.t1140"
            ],
            "title": "Potential Base64 Decoded From Images"
        },
        {
            "author": "Tim Rauch (rule), Elastic (idea)",
            "date": "2022/10/17",
            "description": "Detects when a built-in utility is used to decode and decrypt a payload after a macOS disk image (DMG) is executed. Malware authors may attempt to evade detection and trick users into executing malicious code by encoding and encrypting their payload and placing it in a disk image file. This behavior is consistent with adware or malware families such as Bundlore and Shlayer.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains|all": [
                        "/Volumes/",
                        "enc",
                        "-base64",
                        " -d "
                    ],
                    "Image|endswith": "/openssl"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "234dc5df-40b5-49d1-bf53-0d44ce778eca",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "macos"
            },
            "references": [
                "https://github.com/elastic/protections-artifacts/commit/746086721fd385d9f5c6647cada1788db4aea95f#diff-5d42c3d772e04f1e8d0eb60f5233bc79def1ea73105a2d8822f44164f77ef823"
            ],
            "status": "test",
            "tags": [
                "attack.t1059",
                "attack.t1204",
                "attack.execution",
                "attack.t1140",
                "attack.defense_evasion",
                "attack.s0482",
                "attack.s0402"
            ],
            "title": "Payload Decoded and Decrypted via Built-in Utilities"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2018/03/23",
            "description": "Detects a ping command that uses a hex encoded IP address",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains": "0x",
                    "Image|endswith": "\\ping.exe"
                }
            },
            "falsepositives": [
                "Unlikely, because no sane admin pings IP addresses in a hexadecimal form"
            ],
            "fields": [
                "ParentCommandLine"
            ],
            "id": "1a0d4aba-7668-4365-9ce4-6d79ab088dfd",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "status": "test",
            "modified": "2022/01/07",
            "references": [
                "https://github.com/vysecurity/Aggressor-VYSEC/blob/0d61c80387b9432dab64b8b8a9fb52d20cfef80e/ping.cna",
                "https://twitter.com/vysecurity/status/977198418354491392"
            ],
            "tags": [
                "attack.defense_evasion",
                "attack.t1140",
                "attack.t1027"
            ],
            "title": "Ping Hex IP"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2019/08/24",
            "description": "Detects usage of a base64 encoded \"FromBase64String\" cmdlet in a process command line",
            "detection": {
                "condition": "selection",
                "selection": [
                    {
                        "CommandLine|base64offset|contains": "::FromBase64String"
                    },
                    {
                        "CommandLine|contains": [
                            "OgA6AEYAcgBvAG0AQgBhAHMAZQA2ADQAUwB0AHIAaQBuAGcA",
                            "oAOgBGAHIAbwBtAEIAYQBzAGUANgA0AFMAdAByAGkAbgBnA",
                            "6ADoARgByAG8AbQBCAGEAcwBlADYANABTAHQAcgBpAG4AZw"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "fdb62a13-9a81-4e5c-a38f-ea93a16f6d7c",
            "level": "high",
            "modified": "2023/04/06",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "status": "test",
            "references": [
                "Internal Research"
            ],
            "tags": [
                "attack.defense_evasion",
                "attack.t1140",
                "attack.execution",
                "attack.t1059.001"
            ],
            "title": "PowerShell Base64 Encoded FromBase64String Cmdlet"
        },
        {
            "author": "Diego Perez (@darkquassar), Markus Neis, Swisscom (Improve Rule)",
            "date": "2019/02/22",
            "description": "Detection for mshta.exe suspicious execution patterns sometimes involving file polyglotism",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains": [
                        "vbscript",
                        ".jpg",
                        ".png",
                        ".lnk",
                        ".xls",
                        ".doc",
                        ".zip",
                        ".dll"
                    ],
                    "Image|endswith": "\\mshta.exe"
                }
            },
            "falsepositives": [
                "False positives depend on scripts and administrative tools used in the monitored environment"
            ],
            "id": "cc7abbd0-762b-41e3-8a26-57ad50d2eea3",
            "level": "high",
            "modified": "2022/11/07",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "status": "test",
            "references": [
                "http://blog.sevagas.com/?Hacking-around-HTA-files",
                "https://0x00sec.org/t/clientside-exploitation-in-2018-how-pentesting-has-changed/7356",
                "https://learn.microsoft.com/en-us/previous-versions/dotnet/framework/data/xml/xslt/xslt-stylesheet-scripting-using-msxsl-script",
                "https://medium.com/tsscyber/pentesting-and-hta-bypassing-powershell-constrained-language-mode-53a42856c997",
                "https://twitter.com/mattifestation/status/1326228491302563846"
            ],
            "tags": [
                "attack.defense_evasion",
                "attack.t1140",
                "attack.t1218.005",
                "attack.execution",
                "attack.t1059.007",
                "cve.2020.1599"
            ],
            "title": "MSHTA Suspicious Execution 01"
        },
        {
            "author": "Sami Ruohonen, Harish Segar, Tim Shelton, Teymur Kheirkhabarov, Vasiliy Burov, oscd.community, Nasreddine Bencherchali",
            "date": "2018/09/05",
            "description": "Detects presence of a potentially xor encoded powershell command",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli_other": {
                    "CommandLine|contains": [
                        "ForEach",
                        "for(",
                        "for ",
                        "-join ",
                        "-join'",
                        "-join\"",
                        "-join`",
                        "::Join",
                        "[char]"
                    ]
                },
                "selection_cli_xor": {
                    "CommandLine|contains": "bxor"
                },
                "selection_img": [
                    {
                        "Image|endswith": [
                            "\\powershell.exe",
                            "\\pwsh.exe"
                        ]
                    },
                    {
                        "OriginalFileName": [
                            "PowerShell.EXE",
                            "pwsh.dll"
                        ]
                    },
                    {
                        "Description": "Windows PowerShell"
                    },
                    {
                        "Product": "PowerShell Core 6"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "bb780e0c-16cf-4383-8383-1e5471db6cf9",
            "level": "medium",
            "modified": "2023/01/30",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "status": "test",
            "references": [
                "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=65",
                "https://redcanary.com/blog/yellow-cockatoo/",
                "https://zero2auto.com/2020/05/19/netwalker-re/",
                "https://mez0.cc/posts/cobaltstrike-powershell-exec/"
            ],
            "related": [
                {
                    "id": "5b572dcf-254b-425c-a8c5-d9af6bea35a6",
                    "type": "obsoletes"
                }
            ],
            "tags": [
                "attack.defense_evasion",
                "attack.execution",
                "attack.t1059.001",
                "attack.t1140",
                "attack.t1027"
            ],
            "title": "Suspicious XOR Encoded PowerShell Command"
        },
        {
            "author": "juju4",
            "date": "2018/12/11",
            "description": "Detects potential commandline obfuscation using known escape characters",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains": [
                        "h^t^t^p",
                        "h\"t\"t\"p"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "f0cdd048-82dc-4f7a-8a7a-b87a52b6d0fd",
            "level": "medium",
            "modified": "2023/03/03",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "status": "test",
            "references": [
                "https://twitter.com/vysecurity/status/885545634958385153",
                "https://twitter.com/Hexacorn/status/885553465417756673",
                "https://twitter.com/Hexacorn/status/885570278637678592",
                "https://www.mandiant.com/resources/blog/obfuscation-wild-targeted-attackers-lead-way-evasion-techniques",
                "https://web.archive.org/web/20190213114956/http://www.windowsinspired.com/understanding-the-command-line-string-and-arguments-received-by-a-windows-program/"
            ],
            "tags": [
                "attack.defense_evasion",
                "attack.t1140"
            ],
            "title": "Potential Commandline Obfuscation Using Escape Characters"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2020/01/29",
            "description": "Detects usage of the \"FromBase64String\" function in the commandline which is used to decode a base64 encoded string",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains": "::FromBase64String("
                }
            },
            "falsepositives": [
                "Administrative script libraries"
            ],
            "id": "e32d4572-9826-4738-b651-95fa63747e8a",
            "level": "high",
            "modified": "2023/01/26",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "status": "test",
            "references": [
                "https://gist.github.com/Neo23x0/6af876ee72b51676c82a2db8d2cd3639"
            ],
            "tags": [
                "attack.t1027",
                "attack.defense_evasion",
                "attack.t1140",
                "attack.t1059.001"
            ],
            "title": "Base64 Encoded PowerShell Command Detected"
        },
        {
            "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
            "date": "2020/05/02",
            "description": "A General detection for specific decompress commands in PowerShell logs. This could be an adversary decompressing files.",
            "detection": {
                "condition": "selection_4103",
                "selection_4103": {
                    "Payload|contains": "Expand-Archive"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "1ddc1472-8e52-4f7d-9f11-eab14fc171f5",
            "level": "informational",
            "logsource": {
                "category": "ps_module",
                "product": "windows",
                "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
            },
            "modified": "2022/12/25",
            "status": "test",
            "references": [
                "https://github.com/OTRF/detection-hackathon-apt29/issues/8",
                "https://github.com/OTRF/ThreatHunter-Playbook/blob/2d4257f630f4c9770f78d0c1df059f891ffc3fec/docs/evals/apt29/detections/4.A.3_09F29912-8E93-461E-9E89-3F06F6763383.md"
            ],
            "related": [
                {
                    "id": "81fbdce6-ee49-485a-908d-1a728c5dcb09",
                    "type": "derived"
                }
            ],
            "tags": [
                "attack.defense_evasion",
                "attack.t1140"
            ],
            "title": "PowerShell Decompress Commands"
        },
        {
            "author": "Austin Songer",
            "date": "2021/07/22",
            "description": "Detects when a user enables DNS-over-HTTPS.\nThis can be used to hide internet activity or be used to hide the process of exfiltrating data.\nWith this enabled organization will lose visibility into data such as query type, response and originating IP that are used to determine bad actors.\n",
            "detection": {
                "condition": "1 of selection_*",
                "selection_chrome": {
                    "Details": "secure",
                    "TargetObject|endswith": "\\SOFTWARE\\Google\\Chrome\\DnsOverHttpsMode"
                },
                "selection_edge": {
                    "Details": "DWORD (0x00000001)",
                    "TargetObject|endswith": "\\SOFTWARE\\Policies\\Microsoft\\Edge\\BuiltInDnsClientEnabled"
                },
                "selection_firefox": {
                    "Details": "DWORD (0x00000001)",
                    "TargetObject|endswith": "\\SOFTWARE\\Policies\\Mozilla\\Firefox\\DNSOverHTTPS\\Enabled"
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "04b45a8a-d11d-49e4-9acc-4a1b524407a5",
            "level": "medium",
            "logsource": {
                "category": "registry_set",
                "product": "windows"
            },
            "modified": "2023/08/17",
            "status": "test",
            "references": [
                "https://www.tenforums.com/tutorials/151318-how-enable-disable-dns-over-https-doh-microsoft-edge.html",
                "https://github.com/elastic/detection-rules/issues/1371",
                "https://chromeenterprise.google/policies/?policy=DnsOverHttpsMode",
                "https://admx.help/HKLM/Software/Policies/Mozilla/Firefox/DNSOverHTTPS"
            ],
            "tags": [
                "attack.defense_evasion",
                "attack.t1140",
                "attack.t1112"
            ],
            "title": "DNS-over-HTTPS Enabled by Registry"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/09/15",
            "description": "Detects the presence of a base64 version of the shebang in the commandline, which could indicate a malicious payload about to be decoded",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains": [
                        "IyEvYmluL2Jhc2",
                        "IyEvYmluL2Rhc2",
                        "IyEvYmluL3pza",
                        "IyEvYmluL2Zpc2",
                        "IyEvYmluL3No"
                    ]
                }
            },
            "falsepositives": [
                "Legitimate administration activities"
            ],
            "id": "fe2f9663-41cb-47e2-b954-8a228f3b9dff",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "linux"
            },
            "references": [
                "https://www.trendmicro.com/pl_pl/research/20/i/the-evolution-of-malicious-shell-scripts.html",
                "https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1140"
            ],
            "title": "Linux Base64 Encoded Shebang In CLI"
        },
        {
            "author": "pH-T (Nextron Systems)",
            "date": "2022/07/26",
            "description": "Detects suspicious process command line that uses base64 encoded input for execution with a shell",
            "detection": {
                "condition": "all of selection_*",
                "selection_base64": {
                    "CommandLine|contains": "base64 "
                },
                "selection_exec": [
                    {
                        "CommandLine|contains": [
                            "| bash ",
                            "| sh ",
                            "|bash ",
                            "|sh "
                        ]
                    },
                    {
                        "CommandLine|endswith": [
                            " |sh",
                            "| bash",
                            "| sh",
                            "|bash"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Legitimate administration activities"
            ],
            "id": "ba592c6d-6888-43c3-b8c6-689b8fe47337",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "linux"
            },
            "modified": "2023/06/16",
            "status": "test",
            "references": [
                "https://github.com/arget13/DDexec",
                "https://www.mandiant.com/resources/blog/barracuda-esg-exploited-globally"
            ],
            "tags": [
                "attack.defense_evasion",
                "attack.t1140"
            ],
            "title": "Linux Base64 Encoded Pipe to Shell"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2022/03/14",
            "description": "Detects suspicious process command line that starts with a shell that executes something and finally gets piped into another shell",
            "detection": {
                "condition": "all of selection*",
                "selection": {
                    "CommandLine|startswith": [
                        "sh -c ",
                        "bash -c "
                    ]
                },
                "selection_exec": [
                    {
                        "CommandLine|contains": [
                            "| bash ",
                            "| sh ",
                            "|bash ",
                            "|sh "
                        ]
                    },
                    {
                        "CommandLine|endswith": [
                            "| bash",
                            "| sh",
                            "|bash",
                            " |sh"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Legitimate software that uses these patterns"
            ],
            "id": "880973f3-9708-491c-a77b-2a35a1921158",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "linux"
            },
            "modified": "2022/07/26",
            "status": "test",
            "references": [
                "Internal Research"
            ],
            "tags": [
                "attack.defense_evasion",
                "attack.t1140"
            ],
            "title": "Linux Shell Pipe to Shell"
        }
    ],
    "x_mitre_platforms": [
        "Windows",
        "Linux",
        "macOS"
    ],
    "x_mitre_domains": [
        "enterprise-attack"
    ],
    "x_mitre_contributors": [
        "Matthew Demaske, Adaptforward",
        "Red Canary"
    ],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "defense-evasion"
        }
    ],
    "x_mitre_detection": "Detecting the action of deobfuscating or decoding files or information may be difficult depending on the implementation. If the functionality is contained within malware and uses the Windows API, then attempting to detect malicious behavior before or after the action may yield better results than attempting to perform analysis on loaded libraries or API calls. If scripts are used, then collecting the scripts for analysis may be necessary. Perform process and command-line monitoring to detect potentially malicious behavior related to scripts and system utilities such as [certutil](https://attack.mitre.org/software/S0160).\n\nMonitor the execution file paths and command-line arguments for common archive file applications and extensions, such as those for Zip and RAR archive tools, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.",
    "x_mitre_is_subtechnique": false,
    "x_mitre_version": "1.3",
    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
    "x_mitre_data_sources": [
        "Process: Process Creation",
        "Script: Script Execution",
        "File: File Modification"
    ],
    "x_mitre_permissions_required": []
}