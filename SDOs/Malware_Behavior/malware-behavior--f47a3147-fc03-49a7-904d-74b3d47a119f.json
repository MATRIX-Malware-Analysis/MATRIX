{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--f47a3147-fc03-49a7-904d-74b3d47a119f",
    "created": "2024-08-13T14:46:36.681102Z",
    "modified": "2024-08-13T14:46:36.681102Z",
    "name": "Spoof Open-Source Software Metadata",
    "description": "An adversary spoofs open-source software metadata in an attempt to masquerade malicious software as popular, maintained, and trusted.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CAPEC",
            "url": "https://capec.mitre.org/data/definitions/691.html",
            "external_id": "691"
        },
        {
            "source_name": "CWE",
            "external_id": "494"
        }
    ],
    "x_mitre_consequences": [
        {
            "impact": "Modify Data",
            "scope": "Integrity"
        },
        {
            "impact": "Hide Activities",
            "scope": "Accountability"
        },
        {
            "impact": "Execute Unauthorized Commands",
            "scope": "Access Control"
        },
        {
            "impact": "Alter Execution Logic",
            "scope": "Access Control"
        },
        {
            "impact": "Gain Privileges",
            "scope": "Access Control"
        },
        {
            "impact": "Execute Unauthorized Commands",
            "scope": "Authorization"
        },
        {
            "impact": "Alter Execution Logic",
            "scope": "Authorization"
        },
        {
            "impact": "Gain Privileges",
            "scope": "Authorization"
        }
    ],
    "x_mitre_examples": [
        {
            "description": "An adversary provides a malicious open-source library, claiming to provide extended logging features and functionality, and spoofs the metadata with that of a widely used legitimate library. The adversary then tricks victims into including this library in their underlying application. Once the malicious software is incorporated into the application, the adversary is able to manipulate and exfiltrate log data."
        }
    ],
    "x_mitre_impact": "High",
    "x_mitre_likelihood_of_attack": "Medium",
    "x_mitre_mitigations": [
        {
            "description": "Before downloading open-source software, perform precursory metadata checks to determine the author(s), frequency of updates, when the software was last updated, and if the software is widely leveraged."
        },
        {
            "description": "Within package managers, look for conflicting or non-unique repository references to determine if multiple packages share the same repository reference."
        },
        {
            "description": "Reference vulnerability databases to determine if the software contains known vulnerabilities."
        },
        {
            "description": "Only download open-source software from reputable hosting sites or package managers."
        },
        {
            "description": "Only download open-source software that has been adequately signed by the developer(s). For repository commits/tags, look for the \"Verified\" status and for developers leveraging \"Vigilant Mode\" (GitHub) or similar modes."
        },
        {
            "description": "After downloading open-source software, ensure integrity values have not changed."
        },
        {
            "description": "Before executing or incorporating the software, leverage automated testing techniques (e.g., static and dynamic analysis) to determine if the software behaves maliciously."
        }
    ]
}