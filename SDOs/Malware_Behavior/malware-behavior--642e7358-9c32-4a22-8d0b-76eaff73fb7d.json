{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--642e7358-9c32-4a22-8d0b-76eaff73fb7d",
    "created": "2024-08-13T14:46:36.684307Z",
    "modified": "2024-08-13T14:46:48.624301Z",
    "name": "Account Discovery",
    "description": "Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., Valid Accounts).Adversaries may use several methods to enumerate accounts, including abuse of existing tools, built-in commands, and potential misconfigurations that leak account names and roles or permissions in the targeted environment.For examples, cloud environments typically provide easily accessible interfaces to obtain user lists.[1][2] On hosts, adversaries can use default PowerShell and other command line functionality to identify accounts. Information about email addresses and accounts may also be extracted by searching an infected system\u2019s files.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1087",
            "external_id": "T1087"
        },
        {
            "source_name": "CAPEC 575",
            "external_id": "malware-behavior--04b4d6d9-58a7-4eed-ae60-744e9dba70a1"
        },
        {
            "source_name": "mitre-attack",
            "url": "https://attack.mitre.org/techniques/T1087",
            "external_id": "T1087"
        },
        {
            "source_name": "AWS List Users",
            "description": "Amazon. (n.d.). List Users. Retrieved August 11, 2020.",
            "url": "https://docs.aws.amazon.com/cli/latest/reference/iam/list-users.html"
        },
        {
            "source_name": "Google Cloud - IAM Servie Accounts List API",
            "description": "Google. (2020, June 23). gcloud iam service-accounts list. Retrieved August 4, 2020.",
            "url": "https://cloud.google.com/sdk/gcloud/reference/iam/service-accounts/list"
        },
        {
            "source_name": "Elastic - Koadiac Detection with EQL",
            "description": "Stepanic, D.. (2020, January 13). Embracing offensive tooling: Building detections against Koadic using EQL. Retrieved November 30, 2020.",
            "url": "https://www.elastic.co/blog/embracing-offensive-tooling-building-detections-against-koadic-using-eql"
        }
    ],
    "x_mitre_capa_rules": [
        {
            "rule": {
                "features": [
                    {
                        "or": [
                            {
                                "api": "netapi32.NetUserGetGroups"
                            },
                            {
                                "api": "netapi32.NetUserGetLocalGroups"
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Discovery::Account Discovery [T1087]"
                    ],
                    "authors": [
                        "michael.hunhoff@mandiant.com"
                    ],
                    "description": "enumerates all the groups to which a user account belongs",
                    "name": "list groups for user account",
                    "namespace": "host-interaction/accounts",
                    "scopes": {
                        "dynamic": "call",
                        "static": "basic block"
                    }
                }
            }
        },
        {
            "rule": {
                "features": [
                    {
                        "or": [
                            {
                                "api": "netapi32.NetUserEnum"
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Discovery::Account Discovery [T1087]"
                    ],
                    "authors": [
                        "michael.hunhoff@mandiant.com"
                    ],
                    "name": "list user accounts",
                    "namespace": "host-interaction/accounts",
                    "scopes": {
                        "dynamic": "call",
                        "static": "basic block"
                    }
                }
            }
        },
        {
            "rule": {
                "features": [
                    {
                        "or": [
                            {
                                "api": "advapi32.GetUserName"
                            },
                            {
                                "api": "secur32.GetUserNameEx"
                            },
                            {
                                "basic block": [
                                    {
                                        "and": [
                                            {
                                                "api": "wtsapi32.WTSQuerySessionInformation"
                                            },
                                            {
                                                "number": "5 = WTSUserName"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "call": [
                                    {
                                        "and": [
                                            {
                                                "api": "wtsapi32.WTSQuerySessionInformation"
                                            },
                                            {
                                                "number": "5 = WTSUserName"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "api": "System.Security.Principal.WindowsIdentity::GetCurrent"
                            },
                            {
                                "property/read": "System.Environment::UserName"
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Discovery::System Owner/User Discovery [T1033]",
                        "Discovery::Account Discovery [T1087]"
                    ],
                    "authors": [
                        "moritz.raabe@mandiant.com",
                        "anushka.virgaonkar@mandiant.com"
                    ],
                    "examples": [
                        "Practical Malware Analysis Lab 14-01.exe_:0x401285"
                    ],
                    "name": "get session user name",
                    "namespace": "host-interaction/session",
                    "scopes": {
                        "dynamic": "thread",
                        "static": "function"
                    }
                }
            }
        },
        {
            "rule": {
                "features": [
                    {
                        "or": [
                            {
                                "api": "advapi32.LookupAccountName"
                            },
                            {
                                "api": "advapi32.LsaLookupNames"
                            },
                            {
                                "api": "advapi32.LsaLookupNames2"
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Discovery::Account Discovery [T1087]"
                    ],
                    "authors": [
                        "michael.hunhoff@mandiant.com"
                    ],
                    "examples": [
                        "mimikatz.exe_:0x40DC42"
                    ],
                    "name": "get user security identifier",
                    "namespace": "host-interaction/session",
                    "scopes": {
                        "dynamic": "call",
                        "static": "basic block"
                    }
                }
            }
        },
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "api": "secur32.LsaEnumerateLogonSessions"
                            },
                            {
                                "optional": [
                                    {
                                        "api": "secur32.LsaGetLogonSessionData"
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Discovery::Account Discovery [T1087]"
                    ],
                    "authors": [
                        "awillia2@cisco.com"
                    ],
                    "description": "Looks for imported Windows APIs being called to enumerate user sessions.",
                    "examples": [
                        "9B7CCAA2AE6A5B96E3110EBCBC4311F6:0x1001C1AC"
                    ],
                    "name": "get logon sessions",
                    "namespace": "host-interaction/session",
                    "scopes": {
                        "dynamic": "thread",
                        "static": "function"
                    }
                }
            }
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "Janantha Marasinghe",
            "date": "2022/11/27",
            "description": "Detects AzureHound (A BloodHound data collector for Microsoft Azure) activity via the default User-Agent that is used during its operation after successful authentication.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "ResultType": 0,
                    "userAgent|contains": "azurehound"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "35b781cc-1a08-4a5a-80af-42fd7c315c6b",
            "level": "high",
            "logsource": {
                "product": "azure",
                "service": "signinlogs"
            },
            "references": [
                "https://github.com/BloodHoundAD/AzureHound"
            ],
            "status": "test",
            "tags": [
                "attack.discovery",
                "attack.t1087.004",
                "attack.t1526"
            ],
            "title": "Discovery Using AzureHound"
        },
        {
            "author": "Leo Tsaousis (@laripping)",
            "date": "2024/03/26",
            "description": "Detects identities attempting to enumerate their Kubernetes RBAC permissions.\nIn the early stages of a breach, attackers will aim to list the permissions they have within the compromised environment.\nIn a Kubernetes cluster, this can be achieved by interacting with the API server, and querying the SelfSubjectAccessReview API via e.g. a \"kubectl auth can-i --list\" command.\nThis will enumerate the Role-Based Access Controls (RBAC) rules defining the compromised user's authorization.\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "apiGroup": "authorization.k8s.io",
                    "objectRef.resource": "selfsubjectrulesreviews",
                    "verb": "create"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "84b777bd-c946-4d17-aa2e-c39f5a454325",
            "level": "low",
            "logsource": {
                "category": "application",
                "product": "kubernetes",
                "service": "audit"
            },
            "references": [
                "https://www.elastic.co/guide/en/security/current/kubernetes-suspicious-self-subject-review.html"
            ],
            "status": "experimental",
            "tags": [
                "attack.t1069.003",
                "attack.t1087.004"
            ],
            "title": "RBAC Permission Enumeration Attempt"
        },
        {
            "author": "Sagie Dulce, Dekel Paz",
            "date": "2022/01/01",
            "description": "Detects remote RPC calls useb by SharpHound to map remote connections and local group membership.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": 3,
                    "EventLog": "RPCFW",
                    "InterfaceUuid": "6bffd098-a112-3610-9833-46c3f87e345a",
                    "OpNum": 2
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "65f77b1e-8e79-45bf-bb67-5988a8ce45a5",
            "level": "high",
            "logsource": {
                "category": "application",
                "definition": "Requirements: install and apply the RPC Firewall to all processes with \"audit:true action:block uuid:6bffd098-a112-3610-9833-46c3f87e345a opnum:2",
                "product": "rpc_firewall"
            },
            "modified": "2022/01/01",
            "status": "test",
            "references": [
                "https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-wkst/55118c55-2122-4ef9-8664-0c1ff9e168f3",
                "https://github.com/jsecurity101/MSRPC-to-ATTACK/blob/ddd4608fe8684fcf2fcf9b48c5f0b3c28097f8a3/documents/MS-WKST.md",
                "https://github.com/zeronetworks/rpcfirewall",
                "https://zeronetworks.com/blog/stopping-lateral-movement-via-the-rpc-firewall/"
            ],
            "tags": [
                "attack.t1087",
                "attack.discovery"
            ],
            "title": "SharpHound Recon Account Discovery"
        },
        {
            "author": "Austin Clark",
            "date": "2019/08/11",
            "description": "Collect pertinent data from the configuration files",
            "detection": {
                "condition": "keywords",
                "keywords": [
                    "show running-config",
                    "show startup-config",
                    "show archive config",
                    "more"
                ]
            },
            "falsepositives": [
                "Commonly run by administrators"
            ],
            "id": "cd072b25-a418-4f98-8ebc-5093fb38fe1a",
            "level": "low",
            "logsource": {
                "product": "cisco",
                "service": "aaa"
            },
            "modified": "2023/01/04",
            "status": "test",
            "references": [
                "https://blog.router-switch.com/2013/11/show-running-config/",
                "https://www.cisco.com/E-Learning/bulk/public/tac/cim/cib/using_cisco_ios_software/cmdrefs/show_startup-config.htm",
                "https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/config-mgmt/configuration/15-sy/config-mgmt-15-sy-book/cm-config-diff.html"
            ],
            "tags": [
                "attack.discovery",
                "attack.credential_access",
                "attack.collection",
                "attack.t1087.001",
                "attack.t1552.001",
                "attack.t1005"
            ],
            "title": "Cisco Collect Data"
        },
        {
            "author": "Alejandro Ortuno, oscd.community",
            "date": "2020/10/08",
            "description": "Detects enumeration of local systeam accounts on MacOS",
            "detection": {
                "condition": "1 of selection*",
                "selection_1": {
                    "CommandLine|contains|all": [
                        "list",
                        "/users"
                    ],
                    "Image|endswith": "/dscl"
                },
                "selection_2": {
                    "CommandLine|contains|all": [
                        "-q",
                        "user"
                    ],
                    "Image|endswith": "/dscacheutil"
                },
                "selection_3": {
                    "CommandLine|contains": "'x:0:'"
                },
                "selection_4": {
                    "CommandLine|contains": [
                        "/etc/passwd",
                        "/etc/sudoers"
                    ],
                    "Image|endswith": "/cat"
                },
                "selection_5": {
                    "Image|endswith": "/id"
                },
                "selection_6": {
                    "CommandLine|contains": "-u",
                    "Image|endswith": "/lsof"
                }
            },
            "falsepositives": [
                "Legitimate administration activities"
            ],
            "id": "ddf36b67-e872-4507-ab2e-46bda21b842c",
            "level": "low",
            "logsource": {
                "category": "process_creation",
                "product": "macos"
            },
            "modified": "2022/11/27",
            "status": "test",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1087.001/T1087.001.md"
            ],
            "tags": [
                "attack.discovery",
                "attack.t1087.001"
            ],
            "title": "Local System Accounts Discovery - MacOs"
        },
        {
            "author": "C.J. May",
            "date": "2022/08/09",
            "description": "Detects default file names outputted by the BloodHound collection tool SharpHound",
            "detection": {
                "condition": "selection and not 1 of filter_optional_*",
                "filter_optional_ms_winapps": {
                    "Image|endswith": "\\svchost.exe",
                    "TargetFilename|endswith": "\\pocket_containers.json",
                    "TargetFilename|startswith": "C:\\Program Files\\WindowsApps\\Microsoft."
                },
                "selection": {
                    "TargetFilename|endswith": [
                        "BloodHound.zip",
                        "_computers.json",
                        "_containers.json",
                        "_domains.json",
                        "_gpos.json",
                        "_groups.json",
                        "_ous.json",
                        "_users.json"
                    ]
                }
            },
            "falsepositives": [
                "Some false positives may arise in some environment and this may require some tuning. Add additional filters or reduce level depending on the level of noise"
            ],
            "id": "02773bed-83bf-469f-b7ff-e676e7d78bab",
            "level": "high",
            "logsource": {
                "category": "file_event",
                "product": "windows"
            },
            "modified": "2023/03/29",
            "status": "test",
            "references": [
                "https://academy.hackthebox.com/course/preview/active-directory-bloodhound/bloodhound--data-collection"
            ],
            "tags": [
                "attack.discovery",
                "attack.t1087.001",
                "attack.t1087.002",
                "attack.t1482",
                "attack.t1069.001",
                "attack.t1069.002",
                "attack.execution",
                "attack.t1059.001"
            ],
            "title": "BloodHound Collection Files"
        },
        {
            "author": "Florian Roth (Nextron Systems), Jonhnathan Ribeiro, Anton Kutepov, oscd.community",
            "date": "2017/01/01",
            "description": "Detects certain command line parameters often used during reconnaissance activity via web shells",
            "detection": {
                "condition": "1 of selection_webserver_* and 1 of selection_susp_*",
                "selection_susp_change_dir": {
                    "CommandLine|contains": [
                        "&cd&echo",
                        "cd /d "
                    ]
                },
                "selection_susp_misc_discovery_binaries": [
                    {
                        "Image|endswith": [
                            "\\dsquery.exe",
                            "\\find.exe",
                            "\\findstr.exe",
                            "\\ipconfig.exe",
                            "\\netstat.exe",
                            "\\nslookup.exe",
                            "\\pathping.exe",
                            "\\quser.exe",
                            "\\schtasks.exe",
                            "\\systeminfo.exe",
                            "\\tasklist.exe",
                            "\\tracert.exe",
                            "\\ver.exe",
                            "\\wevtutil.exe",
                            "\\whoami.exe"
                        ]
                    },
                    {
                        "OriginalFileName": [
                            "dsquery.exe",
                            "find.exe",
                            "findstr.exe",
                            "ipconfig.exe",
                            "netstat.exe",
                            "nslookup.exe",
                            "pathping.exe",
                            "quser.exe",
                            "schtasks.exe",
                            "sysinfo.exe",
                            "tasklist.exe",
                            "tracert.exe",
                            "ver.exe",
                            "VSSADMIN.EXE",
                            "wevtutil.exe",
                            "whoami.exe"
                        ]
                    }
                ],
                "selection_susp_misc_discovery_commands": {
                    "CommandLine|contains": [
                        " Test-NetConnection ",
                        "dir \\"
                    ]
                },
                "selection_susp_net_utility": {
                    "CommandLine|contains": [
                        " user ",
                        " use ",
                        " group "
                    ],
                    "OriginalFileName": [
                        "net.exe",
                        "net1.exe"
                    ]
                },
                "selection_susp_ping_utility": {
                    "CommandLine|contains": " -n ",
                    "OriginalFileName": "ping.exe"
                },
                "selection_susp_wmic_utility": {
                    "CommandLine|contains": " /node:",
                    "OriginalFileName": "wmic.exe"
                },
                "selection_webserver_characteristics_tomcat1": {
                    "ParentImage|contains": [
                        "-tomcat-",
                        "\\tomcat"
                    ],
                    "ParentImage|endswith": [
                        "\\java.exe",
                        "\\javaw.exe"
                    ]
                },
                "selection_webserver_characteristics_tomcat2": {
                    "CommandLine|contains": [
                        "catalina.jar",
                        "CATALINA_HOME"
                    ],
                    "ParentImage|endswith": [
                        "\\java.exe",
                        "\\javaw.exe"
                    ]
                },
                "selection_webserver_image": {
                    "ParentImage|endswith": [
                        "\\w3wp.exe",
                        "\\php-cgi.exe",
                        "\\nginx.exe",
                        "\\httpd.exe",
                        "\\caddy.exe",
                        "\\ws_tomcatservice.exe"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "bed2a484-9348-4143-8a8a-b801c979301c",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2022/05/13",
            "status": "test",
            "references": [
                "https://www.fireeye.com/blog/threat-research/2013/08/breaking-down-the-china-chopper-web-shell-part-ii.html",
                "https://unit42.paloaltonetworks.com/bumblebee-webshell-xhunt-campaign/"
            ],
            "tags": [
                "attack.persistence",
                "attack.t1505.003",
                "attack.t1018",
                "attack.t1033",
                "attack.t1087"
            ],
            "title": "Webshell Detection With Command Line Keywords"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/03/14",
            "description": "Detects the execution of \"csvde.exe\" in order to export organizational Active Directory structure.",
            "detection": {
                "condition": "all of selection_* and not 1 of filter_*",
                "filter_import": {
                    "CommandLine|contains": " -i"
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\csvde.exe"
                    },
                    {
                        "OriginalFileName": "csvde.exe"
                    }
                ],
                "selection_remote": {
                    "CommandLine|contains": " -f"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "e5d36acd-acb4-4c6f-a13f-9eb203d50099",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://www.cybereason.com/blog/research/operation-ghostshell-novel-rat-targets-global-aerospace-and-telecoms-firms",
                "https://web.archive.org/web/20180725233601/https://www.pwc.co.uk/cyber-security/pdf/cloud-hopper-annex-b-final.pdf",
                "https://businessinsights.bitdefender.com/deep-dive-into-a-backdoordiplomacy-attack-a-study-of-an-attackers-toolkit",
                "https://redcanary.com/blog/msix-installers/"
            ],
            "status": "test",
            "tags": [
                "attack.exfiltration",
                "attack.discovery",
                "attack.t1087.002"
            ],
            "title": "Active Directory Structure Export Via Csvde.EXE"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2021/12/18",
            "description": "Detects usage of the PsLogList utility to dump event log in order to extract admin accounts and perform account discovery or delete events logs",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli_eventlog": {
                    "CommandLine|contains": [
                        " security",
                        " application",
                        " system"
                    ]
                },
                "selection_cli_flags": {
                    "CommandLine|contains|windash": [
                        " -d",
                        " -x",
                        " -s",
                        " -c",
                        " -g"
                    ]
                },
                "selection_img": [
                    {
                        "OriginalFileName": "psloglist.exe"
                    },
                    {
                        "Image|endswith": [
                            "\\psloglist.exe",
                            "\\psloglist64.exe"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Another tool that uses the command line switches of PsLogList",
                "Legitimate use of PsLogList by an administrator"
            ],
            "id": "aae1243f-d8af-40d8-ab20-33fc6d0c55bc",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2024/03/05",
            "status": "test",
            "references": [
                "https://research.nccgroup.com/2021/01/12/abusing-cloud-services-to-fly-under-the-radar/",
                "https://www.cybereason.com/blog/deadringer-exposing-chinese-threat-actors-targeting-major-telcos",
                "https://github.com/3CORESec/MAL-CL/tree/master/Descriptors/Sysinternals/PsLogList",
                "https://twitter.com/EricaZelic/status/1614075109827874817"
            ],
            "tags": [
                "attack.discovery",
                "attack.t1087",
                "attack.t1087.001",
                "attack.t1087.002"
            ],
            "title": "Suspicious Use of PsLogList"
        },
        {
            "author": "Janantha Marasinghe (https://github.com/blueteam0ps), FPT.EagleEye Team, omkar72, oscd.community",
            "date": "2021/02/02",
            "description": "Detects AdFind execution with common flags seen used during attacks",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains": [
                        "domainlist",
                        "trustdmp",
                        "dcmodes",
                        "adinfo",
                        " dclist ",
                        "computer_pwdnotreqd",
                        "objectcategory=",
                        "-subnets -f",
                        "name=\"Domain Admins\"",
                        "-sc u:",
                        "domainncs",
                        "dompol",
                        " oudmp ",
                        "subnetdmp",
                        "gpodmp",
                        "fspdmp",
                        "users_noexpire",
                        "computers_active",
                        "computers_pwdnotreqd"
                    ]
                }
            },
            "falsepositives": [
                "Legitimate admin activity"
            ],
            "id": "9a132afa-654e-11eb-ae93-0242ac130002",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/03/05",
            "status": "test",
            "references": [
                "https://www.joeware.net/freetools/tools/adfind/",
                "https://thedfirreport.com/2020/05/08/adfind-recon/",
                "https://thedfirreport.com/2021/01/11/trickbot-still-alive-and-well/",
                "https://www.microsoft.com/security/blog/2021/01/20/deep-dive-into-the-solorigate-second-stage-activation-from-sunburst-to-teardrop-and-raindrop/",
                "https://social.technet.microsoft.com/wiki/contents/articles/7535.adfind-command-examples.aspx",
                "https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/bf62ece1c679b07b5fb49c4bae947fe24c81811f/fin6/Emulation_Plan/Phase1.md",
                "https://github.com/redcanaryco/atomic-red-team/blob/0f229c0e42bfe7ca736a14023836d65baa941ed2/atomics/T1087.002/T1087.002.md#atomic-test-7---adfind---enumerate-active-directory-user-objects"
            ],
            "related": [
                {
                    "id": "455b9d50-15a1-4b99-853f-8d37655a4c1b",
                    "type": "similar"
                },
                {
                    "id": "75df3b17-8bcc-4565-b89b-c9898acef911",
                    "type": "obsoletes"
                }
            ],
            "tags": [
                "attack.discovery",
                "attack.t1018",
                "attack.t1087.002",
                "attack.t1482",
                "attack.t1069.002",
                "stp.1u"
            ],
            "title": "PUA - AdFind Suspicious Execution"
        },
        {
            "author": "Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community",
            "date": "2019/10/21",
            "description": "Local accounts, System Owner/User discovery using operating systems utilities",
            "detection": {
                "condition": "(selection_cmd and not filter_cmd) or (selection_net and not filter_net) or 1 of selection_other_*",
                "filter_cmd": {
                    "CommandLine|contains": " rmdir "
                },
                "filter_net": {
                    "CommandLine|contains": [
                        "/domain",
                        "/add",
                        "/delete",
                        "/active",
                        "/expires",
                        "/passwordreq",
                        "/scriptpath",
                        "/times",
                        "/workstations"
                    ]
                },
                "selection_cmd": {
                    "CommandLine|contains|all": [
                        " /c",
                        "dir ",
                        "\\Users\\"
                    ],
                    "Image|endswith": "\\cmd.exe"
                },
                "selection_net": {
                    "CommandLine|contains": "user",
                    "Image|endswith": [
                        "\\net.exe",
                        "\\net1.exe"
                    ]
                },
                "selection_other_cmdkey": {
                    "CommandLine|contains": " /l",
                    "Image|endswith": "\\cmdkey.exe"
                },
                "selection_other_img": {
                    "Image|endswith": [
                        "\\whoami.exe",
                        "\\quser.exe",
                        "\\qwinsta.exe"
                    ]
                },
                "selection_other_wmi": {
                    "CommandLine|contains|all": [
                        "useraccount",
                        "get"
                    ],
                    "Image|endswith": "\\wmic.exe"
                }
            },
            "falsepositives": [
                "Legitimate administrator or user enumerates local users for legitimate reason"
            ],
            "id": "502b42de-4306-40b4-9596-6f590c81f073",
            "level": "low",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/01/03",
            "status": "test",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1033/T1033.md"
            ],
            "tags": [
                "attack.discovery",
                "attack.t1033",
                "attack.t1087.001"
            ],
            "title": "Local Accounts Discovery"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2019/12/20",
            "description": "Detects command line parameters used by Bloodhound and Sharphound hack tools",
            "detection": {
                "condition": "1 of selection_*",
                "selection_cli_1": {
                    "CommandLine|contains": [
                        " -CollectionMethod All ",
                        " --CollectionMethods Session ",
                        " --Loop --Loopduration ",
                        " --PortScanTimeout ",
                        ".exe -c All -d ",
                        "Invoke-Bloodhound",
                        "Get-BloodHoundData"
                    ]
                },
                "selection_cli_2": {
                    "CommandLine|contains|all": [
                        " -JsonFolder ",
                        " -ZipFileName "
                    ]
                },
                "selection_cli_3": {
                    "CommandLine|contains|all": [
                        " DCOnly ",
                        " --NoSaveCache "
                    ]
                },
                "selection_img": [
                    {
                        "Product|contains": "SharpHound"
                    },
                    {
                        "Description|contains": "SharpHound"
                    },
                    {
                        "Company|contains": [
                            "SpecterOps",
                            "evil corp"
                        ]
                    },
                    {
                        "Image|contains": [
                            "\\Bloodhound.exe",
                            "\\SharpHound.exe"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Other programs that use these command line option and accepts an 'All' parameter"
            ],
            "id": "f376c8a7-a2d0-4ddc-aa0c-16c17236d962",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/04",
            "status": "test",
            "references": [
                "https://github.com/BloodHoundAD/BloodHound",
                "https://github.com/BloodHoundAD/SharpHound"
            ],
            "tags": [
                "attack.discovery",
                "attack.t1087.001",
                "attack.t1087.002",
                "attack.t1482",
                "attack.t1069.001",
                "attack.t1069.002",
                "attack.execution",
                "attack.t1059.001"
            ],
            "title": "HackTool - Bloodhound/Sharphound Execution"
        },
        {
            "author": "Florian Roth (Nextron Systems), MSTI (query)",
            "date": "2022/10/01",
            "description": "Detects patterns found in process executions cause by China Chopper like tiny (ASPX) webshells",
            "detection": {
                "condition": "all of selection_*",
                "selection_cmdline": {
                    "CommandLine|contains": [
                        "&ipconfig&echo",
                        "&quser&echo",
                        "&whoami&echo",
                        "&c:&echo",
                        "&cd&echo",
                        "&dir&echo",
                        "&echo [E]",
                        "&echo [S]"
                    ]
                },
                "selection_origin": [
                    {
                        "Image|endswith": "\\w3wp.exe"
                    },
                    {
                        "ParentImage|endswith": "\\w3wp.exe"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "fa3c117a-bc0d-416e-a31b-0c0e80653efb",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://www.microsoft.com/security/blog/2022/09/30/analyzing-attacks-using-the-exchange-vulnerabilities-cve-2022-41040-and-cve-2022-41082/"
            ],
            "status": "test",
            "title": "Chopper Webshell Process Pattern",
            "tags": [
                "attack.persistence",
                "attack.t1505.003",
                "attack.t1018",
                "attack.t1033",
                "attack.t1087"
            ]
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2022/03/17",
            "description": "Detects certain parent child patterns found in cases in which a web shell is used to perform certain credential dumping or exfiltration activities on a compromised system\n",
            "detection": {
                "condition": "1 of selection_webserver_* and 1 of selection_child_*",
                "selection_child_1": {
                    "CommandLine|contains|all": [
                        "rundll32",
                        "comsvcs"
                    ]
                },
                "selection_child_2": {
                    "CommandLine|contains|all": [
                        " -hp",
                        " a ",
                        " -m"
                    ]
                },
                "selection_child_3": {
                    "CommandLine|contains|all": [
                        "net",
                        " user ",
                        " /add"
                    ]
                },
                "selection_child_4": {
                    "CommandLine|contains|all": [
                        "net",
                        " localgroup ",
                        " administrators ",
                        "/add"
                    ]
                },
                "selection_child_5": {
                    "Image|endswith": [
                        "\\ntdsutil.exe",
                        "\\ldifde.exe",
                        "\\adfind.exe",
                        "\\procdump.exe",
                        "\\Nanodump.exe",
                        "\\vssadmin.exe",
                        "\\fsutil.exe"
                    ]
                },
                "selection_child_6": {
                    "CommandLine|contains": [
                        " -decode ",
                        " -NoP ",
                        " -W Hidden ",
                        " /decode ",
                        " /ticket:",
                        " sekurlsa",
                        ".dmp full",
                        ".downloadfile(",
                        ".downloadstring(",
                        "FromBase64String",
                        "process call create",
                        "reg save ",
                        "whoami /priv"
                    ]
                },
                "selection_webserver_characteristics_tomcat1": {
                    "ParentImage|contains": [
                        "-tomcat-",
                        "\\tomcat"
                    ],
                    "ParentImage|endswith": [
                        "\\java.exe",
                        "\\javaw.exe"
                    ]
                },
                "selection_webserver_characteristics_tomcat2": {
                    "CommandLine|contains": [
                        "catalina.jar",
                        "CATALINA_HOME"
                    ],
                    "ParentImage|endswith": [
                        "\\java.exe",
                        "\\javaw.exe"
                    ]
                },
                "selection_webserver_image": {
                    "ParentImage|endswith": [
                        "\\caddy.exe",
                        "\\httpd.exe",
                        "\\nginx.exe",
                        "\\php-cgi.exe",
                        "\\w3wp.exe",
                        "\\ws_tomcatservice.exe"
                    ]
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "4ebc877f-4612-45cb-b3a5-8e3834db36c9",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/11/09",
            "status": "test",
            "references": [
                "https://youtu.be/7aemGhaE9ds?t=641"
            ],
            "tags": [
                "attack.persistence",
                "attack.t1505.003",
                "attack.t1018",
                "attack.t1033",
                "attack.t1087"
            ],
            "title": "Webshell Hacking Activity Patterns"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2022/02/07",
            "description": "Detects a set of suspicious network related commands often used in recon stages",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains|all": [
                        "nslookup",
                        "_ldap._tcp.dc._msdcs."
                    ]
                }
            },
            "falsepositives": [
                "False positives depend on scripts and administrative tools used in the monitored environment"
            ],
            "id": "e6313acd-208c-44fc-a0ff-db85d572e90e",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://thedfirreport.com/2022/02/07/qbot-likes-to-move-it-move-it/"
            ],
            "status": "test",
            "tags": [
                "attack.discovery",
                "attack.t1087",
                "attack.t1082",
                "car.2016-03-001"
            ],
            "title": "Network Reconnaissance Activity"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/01/02",
            "description": "Detects Commandlet names from well-known PowerShell exploitation frameworks",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains": [
                        "Add-Exfiltration",
                        "Add-Persistence",
                        "Add-RegBackdoor",
                        "Add-RemoteRegBackdoor",
                        "Add-ScrnSaveBackdoor",
                        "Check-VM",
                        "ConvertTo-Rc4ByteStream",
                        "Decrypt-Hash",
                        "Disable-ADIDNSNode",
                        "Disable-MachineAccount",
                        "Do-Exfiltration",
                        "Enable-ADIDNSNode",
                        "Enable-MachineAccount",
                        "Enabled-DuplicateToken",
                        "Exploit-Jboss",
                        "Export-ADR",
                        "Export-ADRCSV",
                        "Export-ADRExcel",
                        "Export-ADRHTML",
                        "Export-ADRJSON",
                        "Export-ADRXML",
                        "Find-Fruit",
                        "Find-GPOLocation",
                        "Find-TrustedDocuments",
                        "Get-ADIDNS",
                        "Get-ApplicationHost",
                        "Get-ChromeDump",
                        "Get-ClipboardContents",
                        "Get-FoxDump",
                        "Get-GPPPassword",
                        "Get-IndexedItem",
                        "Get-KerberosAESKey",
                        "Get-Keystrokes",
                        "Get-LSASecret",
                        "Get-MachineAccountAttribute",
                        "Get-MachineAccountCreator",
                        "Get-PassHashes",
                        "Get-RegAlwaysInstallElevated",
                        "Get-RegAutoLogon",
                        "Get-RemoteBootKey",
                        "Get-RemoteCachedCredential",
                        "Get-RemoteLocalAccountHash",
                        "Get-RemoteLSAKey",
                        "Get-RemoteMachineAccountHash",
                        "Get-RemoteNLKMKey",
                        "Get-RickAstley",
                        "Get-Screenshot",
                        "Get-SecurityPackages",
                        "Get-ServiceFilePermission",
                        "Get-ServicePermission",
                        "Get-ServiceUnquoted",
                        "Get-SiteListPassword",
                        "Get-System",
                        "Get-TimedScreenshot",
                        "Get-UnattendedInstallFile",
                        "Get-Unconstrained",
                        "Get-USBKeystrokes",
                        "Get-VaultCredential",
                        "Get-VulnAutoRun",
                        "Get-VulnSchTask",
                        "Grant-ADIDNSPermission",
                        "Gupt-Backdoor",
                        "HTTP-Login",
                        "Install-ServiceBinary",
                        "Install-SSP",
                        "Invoke-ACLScanner",
                        "Invoke-ADRecon",
                        "Invoke-ADSBackdoor",
                        "Invoke-AgentSmith",
                        "Invoke-AllChecks",
                        "Invoke-ARPScan",
                        "Invoke-AzureHound",
                        "Invoke-BackdoorLNK",
                        "Invoke-BadPotato",
                        "Invoke-BetterSafetyKatz",
                        "Invoke-BypassUAC",
                        "Invoke-Carbuncle",
                        "Invoke-Certify",
                        "Invoke-ConPtyShell",
                        "Invoke-CredentialInjection",
                        "Invoke-DAFT",
                        "Invoke-DCSync",
                        "Invoke-DinvokeKatz",
                        "Invoke-DllInjection",
                        "Invoke-DNSUpdate",
                        "Invoke-DomainPasswordSpray",
                        "Invoke-DowngradeAccount",
                        "Invoke-EgressCheck",
                        "Invoke-Eyewitness",
                        "Invoke-FakeLogonScreen",
                        "Invoke-Farmer",
                        "Invoke-Get-RBCD-Threaded",
                        "Invoke-Gopher",
                        "Invoke-Grouper",
                        "Invoke-HandleKatz",
                        "Invoke-ImpersonatedProcess",
                        "Invoke-ImpersonateSystem",
                        "Invoke-InteractiveSystemPowerShell",
                        "Invoke-Internalmonologue",
                        "Invoke-Inveigh",
                        "Invoke-InveighRelay",
                        "Invoke-KrbRelay",
                        "Invoke-LdapSignCheck",
                        "Invoke-Lockless",
                        "Invoke-MalSCCM",
                        "Invoke-Mimikatz",
                        "Invoke-Mimikittenz",
                        "Invoke-MITM6",
                        "Invoke-NanoDump",
                        "Invoke-NetRipper",
                        "Invoke-Nightmare",
                        "Invoke-NinjaCopy",
                        "Invoke-OfficeScrape",
                        "Invoke-OxidResolver",
                        "Invoke-P0wnedshell",
                        "Invoke-Paranoia",
                        "Invoke-PortScan",
                        "Invoke-PoshRatHttp",
                        "Invoke-PostExfil",
                        "Invoke-PowerDump",
                        "Invoke-PowerShellTCP",
                        "Invoke-PowerShellWMI",
                        "Invoke-PPLDump",
                        "Invoke-PsExec",
                        "Invoke-PSInject",
                        "Invoke-PsUaCme",
                        "Invoke-ReflectivePEInjection",
                        "Invoke-ReverseDNSLookup",
                        "Invoke-Rubeus",
                        "Invoke-RunAs",
                        "Invoke-SafetyKatz",
                        "Invoke-SauronEye",
                        "Invoke-SCShell",
                        "Invoke-Seatbelt",
                        "Invoke-ServiceAbuse",
                        "Invoke-ShadowSpray",
                        "Invoke-Sharp",
                        "Invoke-Shellcode",
                        "Invoke-SMBScanner",
                        "Invoke-Snaffler",
                        "Invoke-Spoolsample",
                        "Invoke-SpraySinglePassword",
                        "Invoke-SSHCommand",
                        "Invoke-StandIn",
                        "Invoke-StickyNotesExtract",
                        "Invoke-SystemCommand",
                        "Invoke-Tasksbackdoor",
                        "Invoke-Tater",
                        "Invoke-Thunderfox",
                        "Invoke-ThunderStruck",
                        "Invoke-TokenManipulation",
                        "Invoke-Tokenvator",
                        "Invoke-TotalExec",
                        "Invoke-UrbanBishop",
                        "Invoke-UserHunter",
                        "Invoke-VoiceTroll",
                        "Invoke-Whisker",
                        "Invoke-WinEnum",
                        "Invoke-winPEAS",
                        "Invoke-WireTap",
                        "Invoke-WmiCommand",
                        "Invoke-WMIExec",
                        "Invoke-WScriptBypassUAC",
                        "Invoke-Zerologon",
                        "MailRaider",
                        "New-ADIDNSNode",
                        "New-DNSRecordArray",
                        "New-HoneyHash",
                        "New-InMemoryModule",
                        "New-MachineAccount",
                        "New-SOASerialNumberArray",
                        "Out-Minidump",
                        "Port-Scan",
                        "PowerBreach",
                        "powercat ",
                        "PowerUp",
                        "PowerView",
                        "Remove-ADIDNSNode",
                        "Remove-MachineAccount",
                        "Remove-Update",
                        "Rename-ADIDNSNode",
                        "Revoke-ADIDNSPermission",
                        "Set-ADIDNSNode",
                        "Set-MacAttribute",
                        "Set-MachineAccountAttribute",
                        "Set-Wallpaper",
                        "Show-TargetScreen",
                        "Start-CaptureServer",
                        "Start-Dnscat2",
                        "Start-WebcamRecorder",
                        "VolumeShadowCopyTools"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "02030f2f-6199-49ec-b258-ea71b07e03dc",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2024/01/25",
            "status": "experimental",
            "references": [
                "https://adsecurity.org/?p=2921",
                "https://github.com/S3cur3Th1sSh1t/PowerSharpPack/tree/master/PowerSharpBinaries",
                "https://github.com/BC-SECURITY/Invoke-ZeroLogon/blob/111d17c7fec486d9bb23387e2e828b09a26075e4/Invoke-ZeroLogon.ps1",
                "https://github.com/xorrior/RandomPS-Scripts/blob/848c919bfce4e2d67b626cbcf4404341cfe3d3b6/Get-DXWebcamVideo.ps1",
                "https://github.com/rvrsh3ll/Misc-Powershell-Scripts/blob/6f23bb41f9675d7e2d32bacccff75e931ae00554/OfficeMemScraper.ps1",
                "https://github.com/dafthack/DomainPasswordSpray/blob/b13d64a5834694aa73fd2aea9911a83027c465a7/DomainPasswordSpray.ps1",
                "https://unit42.paloaltonetworks.com/threat-assessment-black-basta-ransomware/",
                "https://research.nccgroup.com/2022/06/06/shining-the-light-on-black-basta/",
                "https://github.com/calebstewart/CVE-2021-1675",
                "https://github.com/BloodHoundAD/BloodHound/blob/0927441f67161cc6dc08a53c63ceb8e333f55874/Collectors/AzureHound.ps1",
                "https://bloodhound.readthedocs.io/en/latest/data-collection/azurehound.html",
                "https://github.com/HarmJ0y/DAMP",
                "https://github.com/samratashok/nishang",
                "https://github.com/DarkCoderSc/PowerRunAsSystem/",
                "https://github.com/besimorhino/powercat",
                "https://github.com/Kevin-Robertson/Powermad",
                "https://github.com/adrecon/ADRecon",
                "https://github.com/adrecon/AzureADRecon"
            ],
            "related": [
                {
                    "id": "89819aa4-bbd6-46bc-88ec-c7f7fe30efa6",
                    "type": "derived"
                },
                {
                    "id": "7d0d0329-0ef1-4e84-a9f5-49500f9d7c6c",
                    "type": "similar"
                }
            ],
            "tags": [
                "attack.execution",
                "attack.discovery",
                "attack.t1482",
                "attack.t1087",
                "attack.t1087.001",
                "attack.t1087.002",
                "attack.t1069.001",
                "attack.t1069.002",
                "attack.t1069",
                "attack.t1059.001"
            ],
            "title": "Malicious PowerShell Commandlets - ProcessCreation"
        },
        {
            "author": "Florian Roth (Nextron Systems), omkar72, @svch0st, Nasreddine Bencherchali (Nextron Systems)",
            "date": "2019/01/16",
            "description": "Detects suspicious reconnaissance command line activity on Windows systems using Net.EXE\nCheck if the user that executed the commands is suspicious (e.g. service accounts, LOCAL_SYSTEM)\n",
            "detection": {
                "condition": "selection_img and ((all of selection_group_* and not filter_group_add) or all of selection_accounts_*)",
                "filter_group_add": {
                    "CommandLine|contains": " /add"
                },
                "selection_accounts_flags": {
                    "CommandLine|contains": " /do"
                },
                "selection_accounts_root": {
                    "CommandLine|contains": " accounts "
                },
                "selection_group_flags": {
                    "CommandLine|contains": [
                        "domain admins",
                        " administrator",
                        " administrateur",
                        "enterprise admins",
                        "Exchange Trusted Subsystem",
                        "Remote Desktop Users",
                        "Utilisateurs du Bureau \u00e0 distance",
                        "Usuarios de escritorio remoto",
                        " /do"
                    ]
                },
                "selection_group_root": {
                    "CommandLine|contains": [
                        " group ",
                        " localgroup "
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": [
                            "\\net.exe",
                            "\\net1.exe"
                        ]
                    },
                    {
                        "OriginalFileName": [
                            "net.exe",
                            "net1.exe"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Inventory tool runs",
                "Administrative activity"
            ],
            "id": "d95de845-b83c-4a9a-8a6a-4fc802ebf6c0",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/03/02",
            "status": "test",
            "references": [
                "https://redcanary.com/blog/how-one-hospital-thwarted-a-ryuk-ransomware-outbreak/",
                "https://thedfirreport.com/2020/10/18/ryuk-in-5-hours/",
                "https://research.nccgroup.com/2022/08/19/back-in-black-unlocking-a-lockbit-3-0-ransomware-attack/"
            ],
            "tags": [
                "attack.discovery",
                "attack.t1087.001",
                "attack.t1087.002"
            ],
            "title": "Suspicious Group And Account Reconnaissance Activity Using Net.EXE"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2022/08/21",
            "description": "Detects the use of a renamed Adfind.exe. AdFind continues to be seen across majority of breaches. It is used to domain trust discovery to plan out subsequent steps in the attack chain.",
            "detection": {
                "condition": "1 of selection* and not filter",
                "filter": {
                    "Image|endswith": "\\AdFind.exe"
                },
                "selection_1": {
                    "CommandLine|contains": [
                        "domainlist",
                        "trustdmp",
                        "dcmodes",
                        "adinfo",
                        " dclist ",
                        "computer_pwdnotreqd",
                        "objectcategory=",
                        "-subnets -f",
                        "name=\"Domain Admins\"",
                        "-sc u:",
                        "domainncs",
                        "dompol",
                        " oudmp ",
                        "subnetdmp",
                        "gpodmp",
                        "fspdmp",
                        "users_noexpire",
                        "computers_active",
                        "computers_pwdnotreqd"
                    ]
                },
                "selection_2": [
                    {
                        "Imphash": [
                            "bca5675746d13a1f246e2da3c2217492",
                            "53e117a96057eaf19c41380d0e87f1c2"
                        ]
                    },
                    {
                        "Hashes|contains": [
                            "IMPHASH=BCA5675746D13A1F246E2DA3C2217492",
                            "IMPHASH=53E117A96057EAF19C41380D0E87F1C2"
                        ]
                    }
                ],
                "selection_3": {
                    "OriginalFileName": "AdFind.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "df55196f-f105-44d3-a675-e9dfb6cc2f2b",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/14",
            "status": "test",
            "references": [
                "https://www.joeware.net/freetools/tools/adfind/",
                "https://thedfirreport.com/2020/05/08/adfind-recon/",
                "https://thedfirreport.com/2021/01/11/trickbot-still-alive-and-well/",
                "https://www.microsoft.com/security/blog/2021/01/20/deep-dive-into-the-solorigate-second-stage-activation-from-sunburst-to-teardrop-and-raindrop/",
                "https://social.technet.microsoft.com/wiki/contents/articles/7535.adfind-command-examples.aspx",
                "https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/bf62ece1c679b07b5fb49c4bae947fe24c81811f/fin6/Emulation_Plan/Phase1.md"
            ],
            "tags": [
                "attack.discovery",
                "attack.t1018",
                "attack.t1087.002",
                "attack.t1482",
                "attack.t1069.002"
            ],
            "title": "Renamed AdFind Execution"
        },
        {
            "id": "455b9d50-15a1-4b99-853f-8d37655a4c1b",
            "author": "frack113",
            "date": "2021/12/13",
            "description": "Detects active directory enumeration activity using known AdFind CLI flags",
            "detection": {
                "condition": "1 of selection_*",
                "selection_enum_ad": {
                    "CommandLine|contains": "-sc admincountdmp"
                },
                "selection_enum_exchange": {
                    "CommandLine|contains": "-sc exchaddresses"
                },
                "selection_password": {
                    "CommandLine|contains": [
                        "lockoutduration",
                        "lockoutthreshold",
                        "lockoutobservationwindow",
                        "maxpwdage",
                        "minpwdage",
                        "minpwdlength",
                        "pwdhistorylength",
                        "pwdproperties"
                    ]
                }
            },
            "falsepositives": [
                "Authorized administrative activity"
            ],
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/03/05",
            "status": "test",
            "references": [
                "https://www.joeware.net/freetools/tools/adfind/",
                "https://social.technet.microsoft.com/wiki/contents/articles/7535.adfind-command-examples.aspx",
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1087.002/T1087.002.md"
            ],
            "related": [
                {
                    "type": "similar",
                    "id": "9a132afa-654e-11eb-ae93-0242ac130002"
                }
            ],
            "tags": [
                "attack.discovery",
                "attack.t1087.002"
            ],
            "title": "PUA - Suspicious ActiveDirectory Enumeration Via AdFind.EXE"
        },
        {
            "author": "Georg Lauenstein (sure[secure])",
            "date": "2022/09/19",
            "description": "WinPEAS is a script that search for possible paths to escalate privileges on Windows hosts. The checks are explained on book.hacktricks.xyz",
            "detection": {
                "condition": "1 of selection_*",
                "selection_cli_dl": {
                    "CommandLine|contains": "https://github.com/carlospolop/PEASS-ng/releases/latest/download/"
                },
                "selection_cli_option": {
                    "CommandLine|contains": [
                        " applicationsinfo",
                        " browserinfo",
                        " eventsinfo",
                        " fileanalysis",
                        " filesinfo",
                        " processinfo",
                        " servicesinfo",
                        " windowscreds"
                    ]
                },
                "selection_cli_specific": [
                    {
                        "ParentCommandLine|endswith": " -linpeas"
                    },
                    {
                        "CommandLine|endswith": " -linpeas"
                    }
                ],
                "selection_img": [
                    {
                        "OriginalFileName": "winPEAS.exe"
                    },
                    {
                        "Image|endswith": [
                            "\\winPEASany_ofs.exe",
                            "\\winPEASany.exe",
                            "\\winPEASx64_ofs.exe",
                            "\\winPEASx64.exe",
                            "\\winPEASx86_ofs.exe",
                            "\\winPEASx86.exe"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "98b53e78-ebaf-46f8-be06-421aafd176d9",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/03/23",
            "status": "test",
            "references": [
                "https://github.com/carlospolop/PEASS-ng",
                "https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation"
            ],
            "tags": [
                "attack.privilege_escalation",
                "attack.t1082",
                "attack.t1087",
                "attack.t1046"
            ],
            "title": "HackTool - winPEAS Execution"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/10/10",
            "description": "Detects suspicious reconnaissance command line activity on Windows systems using the PowerShell Get-LocalGroupMember Cmdlet",
            "detection": {
                "condition": "all of selection_*",
                "selection_cmdlet": {
                    "CommandLine|contains": "Get-LocalGroupMember "
                },
                "selection_group": {
                    "CommandLine|contains": [
                        "domain admins",
                        " administrator",
                        " administrateur",
                        "enterprise admins",
                        "Exchange Trusted Subsystem",
                        "Remote Desktop Users",
                        "Utilisateurs du Bureau \u00e0 distance",
                        "Usuarios de escritorio remoto"
                    ]
                }
            },
            "falsepositives": [
                "Administrative activity"
            ],
            "fields": [
                "CommandLine",
                "ParentCommandLine"
            ],
            "id": "c8a180d6-47a3-4345-a609-53f9c3d834fc",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "status": "test",
            "references": [
                "https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/"
            ],
            "related": [
                {
                    "id": "cef24b90-dddc-4ae1-a09a-8764872f69fc",
                    "type": "similar"
                }
            ],
            "tags": [
                "attack.discovery",
                "attack.t1087.001"
            ],
            "title": "Suspicious Reconnaissance Activity Using Get-LocalGroupMember Cmdlet"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/10/18",
            "description": "Detects the execution of the PUA/Recon tool Seatbelt via PE information of command line parameters",
            "detection": {
                "condition": "selection_img or all of selection_group_*",
                "selection_group_list": {
                    "CommandLine|contains": [
                        " -group=misc",
                        " -group=remote",
                        " -group=chromium",
                        " -group=slack",
                        " -group=system",
                        " -group=user",
                        " -group=all"
                    ]
                },
                "selection_group_output": {
                    "CommandLine|contains": " -outputfile="
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\Seatbelt.exe"
                    },
                    {
                        "OriginalFileName": "Seatbelt.exe"
                    },
                    {
                        "Description": "Seatbelt"
                    },
                    {
                        "CommandLine|contains": [
                            " DpapiMasterKeys",
                            " InterestingProcesses",
                            " InterestingFiles",
                            " CertificateThumbprints",
                            " ChromiumBookmarks",
                            " ChromiumHistory",
                            " ChromiumPresence",
                            " CloudCredentials",
                            " CredEnum",
                            " CredGuard",
                            " FirefoxHistory",
                            " ProcessCreationEvents"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "38646daa-e78f-4ace-9de0-55547b2d30da",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/04",
            "status": "test",
            "references": [
                "https://github.com/GhostPack/Seatbelt",
                "https://www.bluetangle.dev/2022/08/fastening-seatbelt-on-threat-hunting.html"
            ],
            "tags": [
                "attack.discovery",
                "attack.t1526",
                "attack.t1087",
                "attack.t1083"
            ],
            "title": "PUA - Seatbelt Execution"
        },
        {
            "author": "Adeem Mawani",
            "date": "2021/06/22",
            "description": "Detects potential Active Directory enumeration via LDAP",
            "detection": {
                "condition": "(generic_search and not narrow_down_filter) or suspicious_flag",
                "generic_search": {
                    "EventID": 30,
                    "SearchFilter|contains": [
                        "(groupType:1.2.840.113556.1.4.803:=2147483648)",
                        "(groupType:1.2.840.113556.1.4.803:=2147483656)",
                        "(groupType:1.2.840.113556.1.4.803:=2147483652)",
                        "(groupType:1.2.840.113556.1.4.803:=2147483650)",
                        "(sAMAccountType=805306369)",
                        "(sAMAccountType=805306368)",
                        "(sAMAccountType=536870913)",
                        "(sAMAccountType=536870912)",
                        "(sAMAccountType=268435457)",
                        "(sAMAccountType=268435456)",
                        "(objectCategory=groupPolicyContainer)",
                        "(objectCategory=organizationalUnit)",
                        "(objectCategory=Computer)",
                        "(objectCategory=nTDSDSA)",
                        "(objectCategory=server)",
                        "(objectCategory=domain)",
                        "(objectCategory=person)",
                        "(objectCategory=group)",
                        "(objectCategory=user)",
                        "(objectClass=trustedDomain)",
                        "(objectClass=computer)",
                        "(objectClass=server)",
                        "(objectClass=group)",
                        "(objectClass=user)",
                        "(primaryGroupID=521)",
                        "(primaryGroupID=516)",
                        "(primaryGroupID=515)",
                        "(primaryGroupID=512)",
                        "Domain Admins",
                        "objectGUID=\\*",
                        "(schemaIDGUID=\\*)"
                    ]
                },
                "narrow_down_filter": {
                    "EventID": 30,
                    "SearchFilter|contains": [
                        "(domainSid=*)",
                        "(objectSid=*)"
                    ]
                },
                "suspicious_flag": {
                    "EventID": 30,
                    "SearchFilter|contains": [
                        "(userAccountControl:1.2.840.113556.1.4.803:=4194304)",
                        "(userAccountControl:1.2.840.113556.1.4.803:=2097152)",
                        "!(userAccountControl:1.2.840.113556.1.4.803:=1048574)",
                        "(userAccountControl:1.2.840.113556.1.4.803:=524288)",
                        "(userAccountControl:1.2.840.113556.1.4.803:=65536)",
                        "(userAccountControl:1.2.840.113556.1.4.803:=8192)",
                        "(userAccountControl:1.2.840.113556.1.4.803:=544)",
                        "!(UserAccountControl:1.2.840.113556.1.4.803:=2)",
                        "msDS-AllowedToActOnBehalfOfOtherIdentity",
                        "msDS-AllowedToDelegateTo",
                        "msDS-GroupManagedServiceAccount",
                        "(accountExpires=9223372036854775807)",
                        "(accountExpires=0)",
                        "(adminCount=1)",
                        "ms-MCS-AdmPwd"
                    ]
                }
            },
            "id": "31d68132-4038-47c7-8f8e-635a39a7c174",
            "logsource": {
                "definition": "Requirements: Microsoft-Windows-LDAP-Client/Debug ETW logging",
                "product": "windows",
                "service": "ldap"
            },
            "level": "medium",
            "modified": "2023/11/03",
            "references": [
                "https://techcommunity.microsoft.com/t5/microsoft-defender-for-endpoint/hunting-for-reconnaissance-activities-using-ldap-search-filters/ba-p/824726",
                "https://github.com/PowerShellMafia/PowerSploit/blob/d943001a7defb5e0d1657085a77a0e78609be58f/Recon/PowerView.ps1",
                "https://github.com/BloodHoundAD/SharpHound3/blob/7d96b991b1887ff50349ce59c80980bc0d95c86a/SharpHound3/LdapBuilder.cs",
                "https://medium.com/falconforce/falconfriday-detecting-active-directory-data-collection-0xff21-c22d1a57494c",
                "https://github.com/fox-it/BloodHound.py/blob/d65eb614831cd30f26028ccb072f5e77ca287e0b/bloodhound/ad/domain.py#L427"
            ],
            "status": "test",
            "tags": [
                "attack.discovery",
                "attack.t1069.002",
                "attack.t1087.002",
                "attack.t1482"
            ],
            "title": "Potential Active Directory Reconnaissance/Enumeration Via LDAP"
        },
        {
            "author": "Samir Bousseaden",
            "date": "2019/04/03",
            "description": "Detect priv users or groups recon based on 4661 eventid and known privileged users or groups SIDs",
            "detection": {
                "condition": "selection and selection_object and not filter",
                "filter": {
                    "SubjectUserName|endswith": "$"
                },
                "selection": {
                    "EventID": 4661,
                    "ObjectType": [
                        "SAM_USER",
                        "SAM_GROUP"
                    ]
                },
                "selection_object": [
                    {
                        "ObjectName|endswith": [
                            "-512",
                            "-502",
                            "-500",
                            "-505",
                            "-519",
                            "-520",
                            "-544",
                            "-551",
                            "-555"
                        ]
                    },
                    {
                        "ObjectName|contains": "admin"
                    }
                ]
            },
            "falsepositives": [
                "If source account name is not an admin then its super suspicious"
            ],
            "id": "35ba1d85-724d-42a3-889f-2e2362bcaf23",
            "level": "high",
            "logsource": {
                "definition": "Requirements: enable Object Access SAM on your Domain Controllers",
                "product": "windows",
                "service": "security"
            },
            "modified": "2022/07/13",
            "status": "test",
            "references": [
                "https://blog.menasec.net/2019/02/threat-hunting-5-detecting-enumeration.html"
            ],
            "title": "AD Privileged Users or Groups Reconnaissance",
            "tags": [
                "attack.discovery",
                "attack.t1087.002"
            ]
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2017/05/31",
            "description": "This events that are generated when using the hacktool Ruler by Sensepost",
            "detection": {
                "condition": "(1 of selection*)",
                "selection1": {
                    "EventID": 4776,
                    "Workstation": "RULER"
                },
                "selection2": {
                    "EventID": [
                        4624,
                        4625
                    ],
                    "WorkstationName": "RULER"
                }
            },
            "falsepositives": [
                "Go utilities that use staaldraad awesome NTLM library"
            ],
            "id": "24549159-ac1b-479c-8175-d42aea947cae",
            "level": "high",
            "logsource": {
                "product": "windows",
                "service": "security"
            },
            "modified": "2022/10/09",
            "status": "test",
            "references": [
                "https://github.com/sensepost/ruler",
                "https://github.com/sensepost/ruler/issues/47",
                "https://github.com/staaldraad/go-ntlm/blob/cd032d41aa8ce5751c07cb7945400c0f5c81e2eb/ntlm/ntlmv1.go#L427",
                "https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-10/security/threat-protection/auditing/event-4776",
                "https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-10/security/threat-protection/auditing/event-4624"
            ],
            "tags": [
                "attack.discovery",
                "attack.execution",
                "attack.t1087",
                "attack.t1114",
                "attack.t1059",
                "attack.t1550.002"
            ],
            "title": "Hacktool Ruler"
        },
        {
            "author": "Maxime Thiebaut (@0xThiebaut)",
            "date": "2020/03/30",
            "description": "Detects read access to a domain user from a non-machine account",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_machine_accounts": {
                    "SubjectUserName|endswith": "$"
                },
                "filter_main_msql": {
                    "SubjectUserName|startswith": "MSOL_"
                },
                "selection": {
                    "AccessMask|endswith": [
                        "1?",
                        "3?",
                        "4?",
                        "7?",
                        "9?",
                        "B?",
                        "D?",
                        "F?"
                    ],
                    "EventID": 4662,
                    "ObjectType|contains": "bf967aba-0de6-11d0-a285-00aa003049e2"
                }
            },
            "falsepositives": [
                "Administrators configuring new users."
            ],
            "id": "ab6bffca-beff-4baa-af11-6733f296d57a",
            "level": "medium",
            "logsource": {
                "definition": "Requirements: The \"Read all properties\" permission on the user object needs to be audited for the \"Everyone\" principal",
                "product": "windows",
                "service": "security"
            },
            "modified": "2022/11/08",
            "status": "test",
            "references": [
                "https://www.specterops.io/assets/resources/an_ace_up_the_sleeve.pdf",
                "http://www.stuffithoughtiknew.com/2019/02/detecting-bloodhound.html",
                "https://learn.microsoft.com/en-us/windows/win32/adschema/attributes-all",
                "https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-10/security/threat-protection/auditing/event-4662"
            ],
            "title": "Potential AD User Enumeration From Non-Machine Account",
            "tags": [
                "attack.discovery",
                "attack.t1087.002"
            ]
        },
        {
            "author": "Florian Roth (Nextron Systems), Jack Croock (method), Jonhnathan Ribeiro (improvements), oscd.community",
            "date": "2017/03/07",
            "description": "Detects activity as \"net user administrator /domain\" and \"net group domain admins /domain\"",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": 4661,
                    "AccessMask": "0x2d",
                    "ObjectType": [
                        "SAM_USER",
                        "SAM_GROUP"
                    ],
                    "ObjectName|endswith": [
                        "-500",
                        "-512"
                    ],
                    "ObjectName|startswith": "S-1-5-21-"
                }
            },
            "falsepositives": [
                "Administrator activity"
            ],
            "id": "968eef52-9cff-4454-8992-1e74b9cbad6c",
            "level": "high",
            "logsource": {
                "definition": "The volume of Event ID 4661 is high on Domain Controllers and therefore \"Audit SAM\" and \"Audit Kernel Object\" advanced audit policy settings are not configured in the recommendations for server systems",
                "product": "windows",
                "service": "security"
            },
            "modified": "2022/08/22",
            "status": "test",
            "references": [
                "https://findingbad.blogspot.de/2017/01/hunting-what-does-it-look-like.html"
            ],
            "tags": [
                "attack.discovery",
                "attack.t1087.002",
                "attack.t1069.002",
                "attack.s0039"
            ],
            "title": "Reconnaissance Activity"
        },
        {
            "author": "frack113",
            "date": "2022/03/17",
            "description": "Detects usage of the \"Get-AdComputer\" to enumerate Computers or properties within Active Directory.",
            "detection": {
                "condition": "all of selection_*",
                "selection_cmdlet": {
                    "ScriptBlockText|contains": "Get-AdComputer "
                },
                "selection_option": {
                    "ScriptBlockText|contains": [
                        "-Filter ",
                        "-LDAPFilter ",
                        "-Properties "
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "36bed6b2-e9a0-4fff-beeb-413a92b86138",
            "level": "low",
            "logsource": {
                "category": "ps_script",
                "product": "windows",
                "definition": "Requirements: Script Block Logging must be enabled"
            },
            "modified": "2023/07/08",
            "status": "test",
            "references": [
                "https://learn.microsoft.com/en-us/powershell/module/activedirectory/get-adcomputer",
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1018/T1018.md",
                "https://github.com/redcanaryco/atomic-red-team/blob/02cb591f75064ffe1e0df9ac3ed5972a2e491c97/atomics/T1087.002/T1087.002.md"
            ],
            "tags": [
                "attack.discovery",
                "attack.t1018",
                "attack.t1087.002"
            ],
            "title": "Active Directory Computers Enumeration With Get-AdComputer"
        },
        {
            "id": "89819aa4-bbd6-46bc-88ec-c7f7fe30efa6",
            "author": "Sean Metcalf, Florian Roth, Bartlomiej Czyz @bczyz1, oscd.community, Nasreddine Bencherchali, Tim Shelton, Mustafa Kaan Demir, Georg Lauenstein, Max Altgelt, Tobias Michalski, Austin Songer",
            "date": "2017/03/05",
            "description": "Detects Commandlet names from well-known PowerShell exploitation frameworks",
            "detection": {
                "condition": "selection and not 1 of filter_optional_*",
                "filter_optional_amazon_ec2": {
                    "ScriptBlockText|contains": [
                        "Get-SystemDriveInfo",
                        "C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Module\\"
                    ]
                },
                "selection": {
                    "ScriptBlockText|contains": [
                        "Add-Exfiltration",
                        "Add-Persistence",
                        "Add-RegBackdoor",
                        "Add-RemoteRegBackdoor",
                        "Add-ScrnSaveBackdoor",
                        "ConvertTo-Rc4ByteStream",
                        "Decrypt-Hash",
                        "Disable-ADIDNSNode",
                        "Do-Exfiltration",
                        "Enable-ADIDNSNode",
                        "Enabled-DuplicateToken",
                        "Exploit-Jboss",
                        "Export-ADRCSV",
                        "Export-ADRExcel",
                        "Export-ADRHTML",
                        "Export-ADRJSON",
                        "Export-ADRXML",
                        "Find-Fruit",
                        "Find-GPOLocation",
                        "Find-TrustedDocuments",
                        "Get-ADIDNSNodeAttribute",
                        "Get-ADIDNSNodeOwner",
                        "Get-ADIDNSNodeTombstoned",
                        "Get-ADIDNSPermission",
                        "Get-ADIDNSZone",
                        "Get-ChromeDump",
                        "Get-ClipboardContents",
                        "Get-FoxDump",
                        "Get-GPPPassword",
                        "Get-IndexedItem",
                        "Get-KerberosAESKey",
                        "Get-Keystrokes",
                        "Get-LSASecret",
                        "Get-PassHashes",
                        "Get-RegAlwaysInstallElevated",
                        "Get-RegAutoLogon",
                        "Get-RemoteBootKey",
                        "Get-RemoteCachedCredential",
                        "Get-RemoteLocalAccountHash",
                        "Get-RemoteLSAKey",
                        "Get-RemoteMachineAccountHash",
                        "Get-RemoteNLKMKey",
                        "Get-RickAstley",
                        "Get-SecurityPackages",
                        "Get-ServiceFilePermission",
                        "Get-ServicePermission",
                        "Get-ServiceUnquoted",
                        "Get-SiteListPassword",
                        "Get-System",
                        "Get-TimedScreenshot",
                        "Get-UnattendedInstallFile",
                        "Get-Unconstrained",
                        "Get-USBKeystrokes",
                        "Get-VaultCredential",
                        "Get-VulnAutoRun",
                        "Get-VulnSchTask",
                        "Grant-ADIDNSPermission",
                        "Gupt-Backdoor",
                        "Invoke-ACLScanner",
                        "Invoke-ADRecon",
                        "Invoke-ADSBackdoor",
                        "Invoke-AgentSmith",
                        "Invoke-AllChecks",
                        "Invoke-ARPScan",
                        "Invoke-AzureHound",
                        "Invoke-BackdoorLNK",
                        "Invoke-BadPotato",
                        "Invoke-BetterSafetyKatz",
                        "Invoke-BypassUAC",
                        "Invoke-Carbuncle",
                        "Invoke-Certify",
                        "Invoke-ConPtyShell",
                        "Invoke-CredentialInjection",
                        "Invoke-DAFT",
                        "Invoke-DCSync",
                        "Invoke-DinvokeKatz",
                        "Invoke-DllInjection",
                        "Invoke-DNSUpdate",
                        "Invoke-DomainPasswordSpray",
                        "Invoke-DowngradeAccount",
                        "Invoke-EgressCheck",
                        "Invoke-Eyewitness",
                        "Invoke-FakeLogonScreen",
                        "Invoke-Farmer",
                        "Invoke-Get-RBCD-Threaded",
                        "Invoke-Gopher",
                        "Invoke-Grouper",
                        "Invoke-HandleKatz",
                        "Invoke-ImpersonatedProcess",
                        "Invoke-ImpersonateSystem",
                        "Invoke-InteractiveSystemPowerShell",
                        "Invoke-Internalmonologue",
                        "Invoke-Inveigh",
                        "Invoke-InveighRelay",
                        "Invoke-KrbRelay",
                        "Invoke-LdapSignCheck",
                        "Invoke-Lockless",
                        "Invoke-MalSCCM",
                        "Invoke-Mimikatz",
                        "Invoke-Mimikittenz",
                        "Invoke-MITM6",
                        "Invoke-NanoDump",
                        "Invoke-NetRipper",
                        "Invoke-Nightmare",
                        "Invoke-NinjaCopy",
                        "Invoke-OfficeScrape",
                        "Invoke-OxidResolver",
                        "Invoke-P0wnedshell",
                        "Invoke-Paranoia",
                        "Invoke-PortScan",
                        "Invoke-PoshRatHttp",
                        "Invoke-PostExfil",
                        "Invoke-PowerDump",
                        "Invoke-PowerShellTCP",
                        "Invoke-PowerShellWMI",
                        "Invoke-PPLDump",
                        "Invoke-PsExec",
                        "Invoke-PSInject",
                        "Invoke-PsUaCme",
                        "Invoke-ReflectivePEInjection",
                        "Invoke-ReverseDNSLookup",
                        "Invoke-Rubeus",
                        "Invoke-RunAs",
                        "Invoke-SafetyKatz",
                        "Invoke-SauronEye",
                        "Invoke-SCShell",
                        "Invoke-Seatbelt",
                        "Invoke-ServiceAbuse",
                        "Invoke-ShadowSpray",
                        "Invoke-Sharp",
                        "Invoke-Shellcode",
                        "Invoke-SMBScanner",
                        "Invoke-Snaffler",
                        "Invoke-Spoolsample",
                        "Invoke-SpraySinglePassword",
                        "Invoke-SSHCommand",
                        "Invoke-StandIn",
                        "Invoke-StickyNotesExtract",
                        "Invoke-SystemCommand",
                        "Invoke-Tasksbackdoor",
                        "Invoke-Tater",
                        "Invoke-Thunderfox",
                        "Invoke-ThunderStruck",
                        "Invoke-TokenManipulation",
                        "Invoke-Tokenvator",
                        "Invoke-TotalExec",
                        "Invoke-UrbanBishop",
                        "Invoke-UserHunter",
                        "Invoke-VoiceTroll",
                        "Invoke-Whisker",
                        "Invoke-WinEnum",
                        "Invoke-winPEAS",
                        "Invoke-WireTap",
                        "Invoke-WmiCommand",
                        "Invoke-WMIExec",
                        "Invoke-WScriptBypassUAC",
                        "Invoke-Zerologon",
                        "MailRaider",
                        "New-ADIDNSNode",
                        "New-HoneyHash",
                        "New-InMemoryModule",
                        "New-SOASerialNumberArray",
                        "Out-Minidump",
                        "PowerBreach",
                        "powercat ",
                        "PowerUp",
                        "PowerView",
                        "Remove-ADIDNSNode",
                        "Remove-Update",
                        "Rename-ADIDNSNode",
                        "Revoke-ADIDNSPermission",
                        "Set-ADIDNSNode",
                        "Show-TargetScreen",
                        "Start-CaptureServer",
                        "Start-Dnscat2",
                        "Start-WebcamRecorder",
                        "VolumeShadowCopyTools"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "level": "high",
            "logsource": {
                "category": "ps_script",
                "product": "windows",
                "definition": "Requirements: Script Block Logging must be enabled"
            },
            "modified": "2024/01/25",
            "status": "test",
            "references": [
                "https://adsecurity.org/?p=2921",
                "https://github.com/S3cur3Th1sSh1t/PowerSharpPack/tree/master/PowerSharpBinaries",
                "https://github.com/BC-SECURITY/Invoke-ZeroLogon/blob/111d17c7fec486d9bb23387e2e828b09a26075e4/Invoke-ZeroLogon.ps1",
                "https://github.com/xorrior/RandomPS-Scripts/blob/848c919bfce4e2d67b626cbcf4404341cfe3d3b6/Get-DXWebcamVideo.ps1",
                "https://github.com/rvrsh3ll/Misc-Powershell-Scripts/blob/6f23bb41f9675d7e2d32bacccff75e931ae00554/OfficeMemScraper.ps1",
                "https://github.com/dafthack/DomainPasswordSpray/blob/b13d64a5834694aa73fd2aea9911a83027c465a7/DomainPasswordSpray.ps1",
                "https://unit42.paloaltonetworks.com/threat-assessment-black-basta-ransomware/",
                "https://research.nccgroup.com/2022/06/06/shining-the-light-on-black-basta/",
                "https://github.com/calebstewart/CVE-2021-1675",
                "https://github.com/BloodHoundAD/BloodHound/blob/0927441f67161cc6dc08a53c63ceb8e333f55874/Collectors/AzureHound.ps1",
                "https://bloodhound.readthedocs.io/en/latest/data-collection/azurehound.html",
                "https://github.com/HarmJ0y/DAMP",
                "https://github.com/samratashok/nishang",
                "https://github.com/DarkCoderSc/PowerRunAsSystem/",
                "https://github.com/besimorhino/powercat",
                "https://github.com/Kevin-Robertson/Powermad",
                "https://github.com/adrecon/ADRecon",
                "https://github.com/adrecon/AzureADRecon"
            ],
            "related": [
                {
                    "id": "7d0d0329-0ef1-4e84-a9f5-49500f9d7c6c",
                    "type": "similar"
                },
                {
                    "type": "similar",
                    "id": "02030f2f-6199-49ec-b258-ea71b07e03dc"
                },
                {
                    "id": "6d3f1399-a81c-4409-aff3-1ecfe9330baf",
                    "type": "obsoletes"
                },
                {
                    "id": "83083ac6-1816-4e76-97d7-59af9a9ae46e",
                    "type": "obsoletes"
                }
            ],
            "tags": [
                "attack.execution",
                "attack.discovery",
                "attack.t1482",
                "attack.t1087",
                "attack.t1087.001",
                "attack.t1087.002",
                "attack.t1069.001",
                "attack.t1069.002",
                "attack.t1069",
                "attack.t1059.001"
            ],
            "title": "Malicious PowerShell Commandlets - ScriptBlock"
        },
        {
            "id": "7d0d0329-0ef1-4e84-a9f5-49500f9d7c6c",
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/01/20",
            "description": "Detects Commandlet names from well-known PowerShell exploitation frameworks",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Payload|contains": [
                        "Add-Exfiltration",
                        "Add-Persistence",
                        "Add-RegBackdoor",
                        "Add-RemoteRegBackdoor",
                        "Add-ScrnSaveBackdoor",
                        "Check-VM",
                        "ConvertTo-Rc4ByteStream",
                        "Decrypt-Hash",
                        "Disable-ADIDNSNode",
                        "Disable-MachineAccount",
                        "Do-Exfiltration",
                        "Enable-ADIDNSNode",
                        "Enable-MachineAccount",
                        "Enabled-DuplicateToken",
                        "Exploit-Jboss",
                        "Export-ADR",
                        "Export-ADRCSV",
                        "Export-ADRExcel",
                        "Export-ADRHTML",
                        "Export-ADRJSON",
                        "Export-ADRXML",
                        "Find-Fruit",
                        "Find-GPOLocation",
                        "Find-TrustedDocuments",
                        "Get-ADIDNS",
                        "Get-ApplicationHost",
                        "Get-ChromeDump",
                        "Get-ClipboardContents",
                        "Get-FoxDump",
                        "Get-GPPPassword",
                        "Get-IndexedItem",
                        "Get-KerberosAESKey",
                        "Get-Keystrokes",
                        "Get-LSASecret",
                        "Get-MachineAccountAttribute",
                        "Get-MachineAccountCreator",
                        "Get-PassHashes",
                        "Get-RegAlwaysInstallElevated",
                        "Get-RegAutoLogon",
                        "Get-RemoteBootKey",
                        "Get-RemoteCachedCredential",
                        "Get-RemoteLocalAccountHash",
                        "Get-RemoteLSAKey",
                        "Get-RemoteMachineAccountHash",
                        "Get-RemoteNLKMKey",
                        "Get-RickAstley",
                        "Get-Screenshot",
                        "Get-SecurityPackages",
                        "Get-ServiceFilePermission",
                        "Get-ServicePermission",
                        "Get-ServiceUnquoted",
                        "Get-SiteListPassword",
                        "Get-System",
                        "Get-TimedScreenshot",
                        "Get-UnattendedInstallFile",
                        "Get-Unconstrained",
                        "Get-USBKeystrokes",
                        "Get-VaultCredential",
                        "Get-VulnAutoRun",
                        "Get-VulnSchTask",
                        "Grant-ADIDNSPermission",
                        "Gupt-Backdoor",
                        "HTTP-Login",
                        "Install-ServiceBinary",
                        "Install-SSP",
                        "Invoke-ACLScanner",
                        "Invoke-ADRecon",
                        "Invoke-ADSBackdoor",
                        "Invoke-AgentSmith",
                        "Invoke-AllChecks",
                        "Invoke-ARPScan",
                        "Invoke-AzureHound",
                        "Invoke-BackdoorLNK",
                        "Invoke-BadPotato",
                        "Invoke-BetterSafetyKatz",
                        "Invoke-BypassUAC",
                        "Invoke-Carbuncle",
                        "Invoke-Certify",
                        "Invoke-ConPtyShell",
                        "Invoke-CredentialInjection",
                        "Invoke-DAFT",
                        "Invoke-DCSync",
                        "Invoke-DinvokeKatz",
                        "Invoke-DllInjection",
                        "Invoke-DNSUpdate",
                        "Invoke-DomainPasswordSpray",
                        "Invoke-DowngradeAccount",
                        "Invoke-EgressCheck",
                        "Invoke-Eyewitness",
                        "Invoke-FakeLogonScreen",
                        "Invoke-Farmer",
                        "Invoke-Get-RBCD-Threaded",
                        "Invoke-Gopher",
                        "Invoke-Grouper",
                        "Invoke-HandleKatz",
                        "Invoke-ImpersonatedProcess",
                        "Invoke-ImpersonateSystem",
                        "Invoke-InteractiveSystemPowerShell",
                        "Invoke-Internalmonologue",
                        "Invoke-Inveigh",
                        "Invoke-InveighRelay",
                        "Invoke-KrbRelay",
                        "Invoke-LdapSignCheck",
                        "Invoke-Lockless",
                        "Invoke-MalSCCM",
                        "Invoke-Mimikatz",
                        "Invoke-Mimikittenz",
                        "Invoke-MITM6",
                        "Invoke-NanoDump",
                        "Invoke-NetRipper",
                        "Invoke-Nightmare",
                        "Invoke-NinjaCopy",
                        "Invoke-OfficeScrape",
                        "Invoke-OxidResolver",
                        "Invoke-P0wnedshell",
                        "Invoke-Paranoia",
                        "Invoke-PortScan",
                        "Invoke-PoshRatHttp",
                        "Invoke-PostExfil",
                        "Invoke-PowerDump",
                        "Invoke-PowerShellTCP",
                        "Invoke-PowerShellWMI",
                        "Invoke-PPLDump",
                        "Invoke-PsExec",
                        "Invoke-PSInject",
                        "Invoke-PsUaCme",
                        "Invoke-ReflectivePEInjection",
                        "Invoke-ReverseDNSLookup",
                        "Invoke-Rubeus",
                        "Invoke-RunAs",
                        "Invoke-SafetyKatz",
                        "Invoke-SauronEye",
                        "Invoke-SCShell",
                        "Invoke-Seatbelt",
                        "Invoke-ServiceAbuse",
                        "Invoke-ShadowSpray",
                        "Invoke-Sharp",
                        "Invoke-Shellcode",
                        "Invoke-SMBScanner",
                        "Invoke-Snaffler",
                        "Invoke-Spoolsample",
                        "Invoke-SpraySinglePassword",
                        "Invoke-SSHCommand",
                        "Invoke-StandIn",
                        "Invoke-StickyNotesExtract",
                        "Invoke-SystemCommand",
                        "Invoke-Tasksbackdoor",
                        "Invoke-Tater",
                        "Invoke-Thunderfox",
                        "Invoke-ThunderStruck",
                        "Invoke-TokenManipulation",
                        "Invoke-Tokenvator",
                        "Invoke-TotalExec",
                        "Invoke-UrbanBishop",
                        "Invoke-UserHunter",
                        "Invoke-VoiceTroll",
                        "Invoke-Whisker",
                        "Invoke-WinEnum",
                        "Invoke-winPEAS",
                        "Invoke-WireTap",
                        "Invoke-WmiCommand",
                        "Invoke-WMIExec",
                        "Invoke-WScriptBypassUAC",
                        "Invoke-Zerologon",
                        "MailRaider",
                        "New-ADIDNSNode",
                        "New-DNSRecordArray",
                        "New-HoneyHash",
                        "New-InMemoryModule",
                        "New-MachineAccount",
                        "New-SOASerialNumberArray",
                        "Out-Minidump",
                        "Port-Scan",
                        "PowerBreach",
                        "powercat ",
                        "PowerUp",
                        "PowerView",
                        "Remove-ADIDNSNode",
                        "Remove-MachineAccount",
                        "Remove-Update",
                        "Rename-ADIDNSNode",
                        "Revoke-ADIDNSPermission",
                        "Set-ADIDNSNode",
                        "Set-MacAttribute",
                        "Set-MachineAccountAttribute",
                        "Set-Wallpaper",
                        "Show-TargetScreen",
                        "Start-CaptureServer",
                        "Start-Dnscat2",
                        "Start-WebcamRecorder",
                        "VolumeShadowCopyTools"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "level": "high",
            "logsource": {
                "category": "ps_module",
                "product": "windows",
                "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
            },
            "modified": "2024/01/25",
            "status": "test",
            "references": [
                "https://adsecurity.org/?p=2921",
                "https://github.com/S3cur3Th1sSh1t/PowerSharpPack/tree/master/PowerSharpBinaries",
                "https://github.com/BC-SECURITY/Invoke-ZeroLogon/blob/111d17c7fec486d9bb23387e2e828b09a26075e4/Invoke-ZeroLogon.ps1",
                "https://github.com/xorrior/RandomPS-Scripts/blob/848c919bfce4e2d67b626cbcf4404341cfe3d3b6/Get-DXWebcamVideo.ps1",
                "https://github.com/rvrsh3ll/Misc-Powershell-Scripts/blob/6f23bb41f9675d7e2d32bacccff75e931ae00554/OfficeMemScraper.ps1",
                "https://github.com/dafthack/DomainPasswordSpray/blob/b13d64a5834694aa73fd2aea9911a83027c465a7/DomainPasswordSpray.ps1",
                "https://unit42.paloaltonetworks.com/threat-assessment-black-basta-ransomware/",
                "https://research.nccgroup.com/2022/06/06/shining-the-light-on-black-basta/",
                "https://github.com/calebstewart/CVE-2021-1675",
                "https://github.com/BloodHoundAD/BloodHound/blob/0927441f67161cc6dc08a53c63ceb8e333f55874/Collectors/AzureHound.ps1",
                "https://bloodhound.readthedocs.io/en/latest/data-collection/azurehound.html",
                "https://github.com/HarmJ0y/DAMP",
                "https://github.com/samratashok/nishang",
                "https://github.com/DarkCoderSc/PowerRunAsSystem/",
                "https://github.com/besimorhino/powercat",
                "https://github.com/Kevin-Robertson/Powermad",
                "https://github.com/adrecon/ADRecon",
                "https://github.com/adrecon/AzureADRecon"
            ],
            "related": [
                {
                    "id": "89819aa4-bbd6-46bc-88ec-c7f7fe30efa6",
                    "type": "similar"
                },
                {
                    "type": "similar",
                    "id": "02030f2f-6199-49ec-b258-ea71b07e03dc"
                }
            ],
            "tags": [
                "attack.execution",
                "attack.discovery",
                "attack.t1482",
                "attack.t1087",
                "attack.t1087.001",
                "attack.t1087.002",
                "attack.t1069.001",
                "attack.t1069.002",
                "attack.t1069",
                "attack.t1059.001"
            ],
            "title": "Malicious PowerShell Commandlets - PoshModule"
        },
        {
            "author": "Alejandro Ortuno, oscd.community",
            "date": "2020/10/08",
            "description": "Detects enumeration of local systeam accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior.",
            "detection": {
                "condition": "1 of selection*",
                "selection_1": {
                    "Image|endswith": "/lastlog"
                },
                "selection_2": {
                    "CommandLine|contains": "'x:0:'"
                },
                "selection_3": {
                    "CommandLine|contains": [
                        "/etc/passwd",
                        "/etc/shadow",
                        "/etc/sudoers"
                    ],
                    "Image|endswith": [
                        "/cat",
                        "/head",
                        "/tail",
                        "/more"
                    ]
                },
                "selection_4": {
                    "Image|endswith": "/id"
                },
                "selection_5": {
                    "CommandLine|contains": "-u",
                    "Image|endswith": "/lsof"
                }
            },
            "falsepositives": [
                "Legitimate administration activities"
            ],
            "id": "b45e3d6f-42c6-47d8-a478-df6bd6cf534c",
            "level": "low",
            "logsource": {
                "category": "process_creation",
                "product": "linux"
            },
            "modified": "2022/11/27",
            "status": "test",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1087.001/T1087.001.md"
            ],
            "tags": [
                "attack.discovery",
                "attack.t1087.001"
            ],
            "title": "Local System Accounts Discovery - Linux"
        }
    ],
    "x_mitre_platforms": [
        "Windows",
        "Azure AD",
        "Office 365",
        "SaaS",
        "IaaS",
        "Linux",
        "macOS",
        "Google Workspace"
    ],
    "x_mitre_domains": [
        "enterprise-attack"
    ],
    "x_mitre_contributors": [
        "Daniel Stepanic, Elastic",
        "Microsoft Threat Intelligence Center (MSTIC)",
        "Travis Smith, Tripwire"
    ],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "discovery"
        }
    ],
    "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nMonitor for processes that can be used to enumerate user accounts, such as <code>net.exe</code> and <code>net1.exe</code>, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)",
    "x_mitre_is_subtechnique": false,
    "x_mitre_version": "2.4",
    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
    "x_mitre_data_sources": [
        "Process: Process Creation",
        "Command: Command Execution",
        "File: File Access"
    ],
    "x_mitre_permissions_required": []
}