{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--c7ec06a4-469c-4dd0-8127-0263504645d1",
    "created": "2024-08-13T14:46:36.85715Z",
    "modified": "2024-08-13T14:46:44.595135Z",
    "name": "Permission Groups Discovery: Cloud Groups",
    "description": "Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.With authenticated access there are several tools that can be used to find permissions groups. The Get-MsolRole PowerShell cmdlet can be used to obtain roles and permissions groups for Exchange and Office 365 accounts [1][2].Azure CLI (AZ CLI) and the Google Cloud Identity Provider API also provide interfaces to obtain permissions groups. The command az ad user get-member-groups will list groups associated to a user account for Azure while the API endpoint GET https://cloudidentity.googleapis.com/v1/groups lists group resources available to a user for Google.[3][4][5] In AWS, the commands ListRolePolicies and ListAttachedRolePolicies allow users to enumerate the policies attached to a role.[6]Adversaries may attempt to list ACLs for objects to determine the owner and other accounts with access to the object, for example, via the AWS GetBucketAcl API [7]. Using this information an adversary can target accounts with permissions to a given object or leverage accounts they have already compromised to access the object.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1069/003",
            "external_id": "T1069/003"
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "Leo Tsaousis (@laripping)",
            "date": "2024/03/26",
            "description": "Detects identities attempting to enumerate their Kubernetes RBAC permissions.\nIn the early stages of a breach, attackers will aim to list the permissions they have within the compromised environment.\nIn a Kubernetes cluster, this can be achieved by interacting with the API server, and querying the SelfSubjectAccessReview API via e.g. a \"kubectl auth can-i --list\" command.\nThis will enumerate the Role-Based Access Controls (RBAC) rules defining the compromised user's authorization.\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "apiGroup": "authorization.k8s.io",
                    "objectRef.resource": "selfsubjectrulesreviews",
                    "verb": "create"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "84b777bd-c946-4d17-aa2e-c39f5a454325",
            "level": "low",
            "logsource": {
                "category": "application",
                "product": "kubernetes",
                "service": "audit"
            },
            "references": [
                "https://www.elastic.co/guide/en/security/current/kubernetes-suspicious-self-subject-review.html"
            ],
            "status": "experimental",
            "tags": [
                "attack.t1069.003",
                "attack.t1087.004"
            ],
            "title": "RBAC Permission Enumeration Attempt"
        }
    ]
}