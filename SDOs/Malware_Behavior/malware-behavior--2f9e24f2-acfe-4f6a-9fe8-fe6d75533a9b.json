{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--2f9e24f2-acfe-4f6a-9fe8-fe6d75533a9b",
    "created": "2024-08-13T14:46:36.633559Z",
    "modified": "2024-08-13T14:46:36.633559Z",
    "name": "Signing Malicious Code",
    "description": "The adversary extracts credentials used for code signing from a production environment and then uses these credentials to sign malicious content with the developer's key. Many developers use signing keys to sign code or hashes of code. When users or applications verify the signatures are accurate they are led to believe that the code came from the owner of the signing key and that the code has not been modified since the signature was applied. If the adversary has extracted the signing credentials then they can use those credentials to sign their own code bundles. Users or tools that verify the signatures attached to the code will likely assume the code came from the legitimate developer and install or run the code, effectively allowing the adversary to execute arbitrary code on the victim's computer. This differs from CAPEC-673, because the adversary is performing the code signing.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CAPEC",
            "url": "https://capec.mitre.org/data/definitions/206.html",
            "external_id": "206"
        },
        {
            "source_name": "CWE",
            "external_id": "732"
        }
    ],
    "x_mitre_examples": [
        {
            "description": "In the famous Stuxnet malware incident, two digital certificates were compromised in order to sign malicious device drivers with legitimate credentials. The signing resulted in the malware appearing as trusted by the system it was running on, which facilitated the installation of the malware in kernel mode. This further resulted in Stuxnet remaining undetected for a significant amount of time. [REF-699]"
        },
        {
            "description": "The cyber espionage group CyberKittens leveraged a stolen certificate from AI Squared that allowed them to leverage a signed executable within Operation Wilted Tulip. This ultimately allowed the executable to run as trusted on the system, allowing a Crowd Strike stager to be loaded within the system's memory. [REF-714]"
        }
    ],
    "x_mitre_execution_flows": [
        {
            "description": "The adversary first attempts to obtain a digital certificate in order to sign their malware or tools. This certificate could be stolen, created by the adversary, or acquired normally through a certificate authority.",
            "phase": "Explore",
            "step": "1",
            "techniques": []
        },
        {
            "description": "Based on the type of certificate obtained, the adversary will create a goal for their attack. This is either a broad or targeted attack. If an adversary was able to steal a certificate from a targeted organization, they could target this organization by pretending to have legitimate code signed by them. In other cases, the adversary would simply sign their malware and pose as legitimate software such that any user might trust it. This is the more broad approach",
            "phase": "Explore",
            "step": "2",
            "techniques": []
        },
        {
            "description": "The adversary creates their malware and signs it with the obtained digital certificate. The adversary then checks if the code that they signed is valid either through downloading from the targeted source or testing locally.",
            "phase": "Experiment",
            "step": "3",
            "techniques": []
        },
        {
            "description": "Once the malware has been signed, it is then deployed to the desired location. They wait for a trusting user to run their malware, thinking that it is legitimate software. This malware could do a variety of things based on the motivation of the adversary.",
            "phase": "Exploit",
            "step": "4",
            "techniques": []
        }
    ],
    "x_mitre_impact": "Very High",
    "x_mitre_likelihood_of_attack": "Unknown",
    "x_mitre_mitigations": [
        {
            "description": "Ensure digital certificates are protected and inaccessible by unauthorized uses."
        },
        {
            "description": "If a digital certificate has been compromised it should be revoked and regenerated."
        },
        {
            "description": "Even if a piece of software has a valid and trusted digital signature, it should be assessed for any weaknesses and vulnerabilities."
        }
    ]
}