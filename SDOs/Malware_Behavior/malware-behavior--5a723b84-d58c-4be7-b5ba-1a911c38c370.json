{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--5a723b84-d58c-4be7-b5ba-1a911c38c370",
    "created": "2024-08-13T14:46:36.681841Z",
    "modified": "2024-08-13T14:46:36.681841Z",
    "name": "Repo Jacking",
    "description": "An adversary takes advantage of the redirect property of directly linked Version Control System (VCS) repositories to trick users into incorporating malicious code into their applications.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CAPEC",
            "url": "https://capec.mitre.org/data/definitions/695.html",
            "external_id": "695"
        },
        {
            "source_name": "CWE",
            "external_id": "494"
        },
        {
            "source_name": "CWE",
            "external_id": "829"
        }
    ],
    "x_mitre_consequences": [
        {
            "impact": "Read Data",
            "scope": "Integrity"
        },
        {
            "impact": "Modify Data",
            "scope": "Integrity"
        },
        {
            "impact": "Execute Unauthorized Commands",
            "scope": "Access Control"
        },
        {
            "impact": "Alter Execution Logic",
            "scope": "Access Control"
        },
        {
            "impact": "Gain Privileges",
            "scope": "Access Control"
        },
        {
            "impact": "Execute Unauthorized Commands",
            "scope": "Authorization"
        },
        {
            "impact": "Alter Execution Logic",
            "scope": "Authorization"
        },
        {
            "impact": "Gain Privileges",
            "scope": "Authorization"
        }
    ],
    "x_mitre_examples": [
        {
            "description": "In May 2022, the CTX Python package and PhPass PHP package were both exploited by the same adversary via Repo Jacking attacks. For the CTX package, the adversary performed an account takeover via a password reset, due to an expired domain-hosting email. The attack on PhPass entailed bypassing GitHub's authentication for retired repositories. In both cases, sensitive data in the form of API keys and passwords, each stored in the form of environment variables, were exfiltrated. [REF-732] [REF-733]"
        },
        {
            "description": "In October 2021, the popular JavaScript library UAParser.js was exploited via the takeover of the author's Node Package Manager (NPM) account. The adversary-provided malware downloaded and executed binaries from a remote server to conduct crypto-mining and to exfiltrate sensitive data on Windows systems. This was a wide-scale attack as the package receives 8 to 9 million downloads per week. [REF-732]"
        }
    ],
    "x_mitre_execution_flows": [
        {
            "description": "[Identify target] The adversary must first identify a target repository that is commonly used and whose owner/maintainer has either changed/deleted their username or transferred ownership of the repository and then deleted their account. The target should typically be a popular and widely used package, as to increase the scope of the attack.",
            "phase": "Explore",
            "step": "1",
            "techniques": []
        },
        {
            "description": "[Recreate initial repository path] The adversary re-registers the account that was renamed/deleted by the target repository's owner/maintainer and recreates the target repository with malicious code intended to exploit an application. These steps may need to happen in reverse (i.e., recreate repository and then rename an existing account to the target account) if protections are in place to prevent repository reuse.",
            "phase": "Experiment",
            "step": "2",
            "techniques": []
        },
        {
            "description": "[Exploit victims] The adversary's malicious code is incorporated into applications that directly reference the initial repository, which further allows the adversary to conduct additional attacks.",
            "phase": "Exploit",
            "step": "3",
            "techniques": []
        }
    ],
    "x_mitre_impact": "High",
    "x_mitre_likelihood_of_attack": "Medium",
    "x_mitre_mitigations": [
        {
            "description": "Leverage dedicated package managers instead of directly linking to VCS repositories."
        },
        {
            "description": "Utilize version pinning and lock files to prevent use of maliciously modified repositories."
        },
        {
            "description": "Implement \"vendoring\" (i.e., including third-party dependencies locally) and leverage automated testing techniques (e.g., static analysis) to determine if the software behaves maliciously."
        },
        {
            "description": "Leverage automated tools, such as Checkmarx's \"ChainJacking\" tool, to determine susceptibility to Repo Jacking attacks."
        }
    ]
}