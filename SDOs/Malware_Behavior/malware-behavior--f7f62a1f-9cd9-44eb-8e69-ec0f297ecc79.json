{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--f7f62a1f-9cd9-44eb-8e69-ec0f297ecc79",
    "created": "2024-08-13T14:46:37.160176Z",
    "modified": "2024-08-13T14:46:46.376871Z",
    "name": "Indirect Command Execution",
    "description": "Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking cmd. For example, Forfiles, the Program Compatibility Assistant (pcalua.exe), components of the Windows Subsystem for Linux (WSL), as well as other utilities may invoke the execution of programs and commands from a Command and Scripting Interpreter, Run window, or via scripts. [1] [2]Adversaries may abuse these features for Defense Evasion, specifically to perform arbitrary execution while subverting detections and/or mitigation controls (such as Group Policy) that limit/prevent the usage of cmd or file extensions more commonly associated with malicious payloads.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1202",
            "external_id": "T1202"
        },
        {
            "source_name": "mitre-attack",
            "external_id": "T1202",
            "url": "https://attack.mitre.org/techniques/T1202"
        },
        {
            "source_name": "Evi1cg Forfiles Nov 2017",
            "url": "https://twitter.com/Evi1cg/status/935027922397573120",
            "description": "Evi1cg. (2017, November 26). block cmd.exe ? try this :. Retrieved January 22, 2018."
        },
        {
            "source_name": "RSA Forfiles Aug 2017",
            "url": "https://community.rsa.com/community/products/netwitness/blog/2017/08/14/are-you-looking-out-for-forfilesexe-if-you-are-watching-for-cmdexe",
            "description": "Partington, E. (2017, August 14). Are you looking out for forfiles.exe (if you are watching for cmd.exe). Retrieved January 22, 2018."
        },
        {
            "source_name": "VectorSec ForFiles Aug 2017",
            "url": "https://twitter.com/vector_sec/status/896049052642533376",
            "description": "vector_sec. (2017, August 11). Defenders watching launches of cmd? What about forfiles?. Retrieved January 22, 2018."
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "Greg (rule)",
            "date": "2022/06/17",
            "description": "Detects both of CVE-2022-30190 (Follina) and DogWalk vulnerabilities exploiting msdt.exe binary to load the \"sdiageng.dll\" library",
            "detection": {
                "condition": "selection",
                "selection": {
                    "ImageLoaded|endswith": "\\sdiageng.dll",
                    "Image|endswith": "\\msdt.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "ec8c4047-fad9-416a-8c81-0f479353d7f6",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2023/02/17",
            "references": [
                "https://www.securonix.com/blog/detecting-microsoft-msdt-dogwalk/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1202",
                "cve.2022.30190"
            ],
            "title": "Diagnostic Library Sdiageng.DLL Loaded By Msdt.EXE"
        },
        {
            "author": "Markus Neis, Nasreddine Bencherchali (Nextron Systems)",
            "date": "2018/12/27",
            "description": "Detects a suspicious child process spawning from Outlook where the image is located in a remote location (SMB/WebDav shares).",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Image|startswith": "\\\\\\\\",
                    "ParentImage|endswith": "\\outlook.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "e212d415-0e93-435f-9e1a-f29005bb4723",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/09",
            "references": [
                "https://github.com/sensepost/ruler",
                "https://www.fireeye.com/blog/threat-research/2018/12/overruled-containing-a-potentially-destructive-adversary.html",
                "https://speakerdeck.com/heirhabarov/hunting-for-persistence-via-microsoft-exchange-server-or-outlook?slide=49"
            ],
            "related": [
                {
                    "id": "208748f7-881d-47ac-a29c-07ea84bf691d",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1059",
                "attack.t1202"
            ],
            "title": "Suspicious Remote Child Process From Outlook"
        },
        {
            "author": "Victor Sergeev, oscd.community",
            "date": "2020/10/09",
            "description": "Detects execution of powershell scripts via Runscripthelper.exe",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains": "surfacecheck",
                    "Image|endswith": "\\Runscripthelper.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "fields": [
                "CommandLine"
            ],
            "id": "eca49c87-8a75-4f13-9c73-a5a29e845f03",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "medium",
            "modified": "2022/07/11",
            "status": "test",
            "references": [
                "https://lolbas-project.github.io/lolbas/Binaries/Runscripthelper/"
            ],
            "tags": [
                "attack.execution",
                "attack.t1059",
                "attack.defense_evasion",
                "attack.t1202"
            ],
            "title": "Suspicious Runscripthelper.exe"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/01/23",
            "description": "Detects uncommon or suspicious child processes spawning from a WSL process. This could indicate an attempt to evade parent/child relationship detections or persistence attempts via cron using WSL",
            "detection": {
                "condition": "selection_parent and 1 of selection_children_*",
                "selection_children_images": {
                    "Image|endswith": [
                        "\\calc.exe",
                        "\\cmd.exe",
                        "\\cscript.exe",
                        "\\mshta.exe",
                        "\\powershell.exe",
                        "\\pwsh.exe",
                        "\\regsvr32.exe",
                        "\\rundll32.exe",
                        "\\wscript.exe"
                    ]
                },
                "selection_children_paths": {
                    "Image|contains": [
                        "\\AppData\\Local\\Temp\\",
                        "C:\\Users\\Public\\",
                        "C:\\Windows\\Temp\\",
                        "C:\\Temp\\",
                        "\\Downloads\\",
                        "\\Desktop\\"
                    ]
                },
                "selection_parent": {
                    "ParentImage|endswith": [
                        "\\wsl.exe",
                        "\\wslhost.exe"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "2267fe65-0681-42ad-9a6d-46553d3f3480",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "medium",
            "modified": "2023/08/15",
            "references": [
                "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Wsl/",
                "https://twitter.com/nas_bench/status/1535431474429808642"
            ],
            "related": [
                {
                    "id": "dec44ca7-61ad-493c-bfd7-8819c5faa09b",
                    "type": "derived"
                }
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.defense_evasion",
                "attack.t1218",
                "attack.t1202"
            ],
            "title": "WSL Child Process Anomaly"
        },
        {
            "author": "frack113",
            "date": "2021/11/24",
            "description": "Detects execution of Microsoft bash launcher with the \"-c\" flag.\nThis can be used to potentially bypass defenses and execute Linux or Windows-based binaries directly via bash.\n",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains": " -c "
                },
                "selection_img": [
                    {
                        "Image|endswith": [
                            ":\\Windows\\System32\\bash.exe",
                            ":\\Windows\\SysWOW64\\bash.exe"
                        ]
                    },
                    {
                        "OriginalFileName": "Bash.exe"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "5edc2273-c26f-406c-83f3-f4d948e740dd",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "medium",
            "modified": "2023/08/15",
            "references": [
                "https://lolbas-project.github.io/lolbas/Binaries/Bash/"
            ],
            "related": [
                {
                    "id": "2d22a514-e024-4428-9dba-41505bd63a5b",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1202"
            ],
            "title": "Indirect Inline Command Execution Via Bash.EXE"
        },
        {
            "author": "Markus Neis, Nasreddine Bencherchali (Nextron Systems)",
            "date": "2018/12/27",
            "description": "Detects an attacker trying to enable the outlook security setting \"EnableUnsafeClientMailRules\" which allows outlook to run applications or execute macros",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains": "\\Outlook\\Security\\EnableUnsafeClientMailRules"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "55f0a3a1-846e-40eb-8273-677371b8d912",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/09",
            "references": [
                "https://www.fireeye.com/blog/threat-research/2018/12/overruled-containing-a-potentially-destructive-adversary.html",
                "https://speakerdeck.com/heirhabarov/hunting-for-persistence-via-microsoft-exchange-server-or-outlook?slide=44",
                "https://support.microsoft.com/en-us/topic/how-to-control-the-rule-actions-to-start-an-application-or-run-a-macro-in-outlook-2016-and-outlook-2013-e4964b72-173c-959d-5d7b-ead562979048"
            ],
            "related": [
                {
                    "id": "6763c6c8-bd01-4687-bc8d-4fa52cf8ba08",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1059",
                "attack.t1202"
            ],
            "title": "Outlook EnableUnsafeClientMailRules Setting Enabled"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2021/08/23",
            "description": "Detects suspicious Splwow64.exe process without any command line parameters",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|endswith": "splwow64.exe",
                    "Image|endswith": "\\splwow64.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "1f1a8509-2cbb-44f5-8751-8e1571518ce2",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2022/12/25",
            "references": [
                "https://twitter.com/sbousseaden/status/1429401053229891590?s=12"
            ],
            "status": "test",
            "title": "Suspicious Splwow64 Without Params",
            "tags": [
                "attack.defense_evasion",
                "attack.t1202"
            ]
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2021/03/09",
            "description": "Detects a service binary running in a suspicious directory",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Image|contains": [
                        "\\Users\\Public\\",
                        "\\$Recycle.bin",
                        "\\Users\\All Users\\",
                        "\\Users\\Default\\",
                        "\\Users\\Contacts\\",
                        "\\Users\\Searches\\",
                        "C:\\Perflogs\\",
                        "\\config\\systemprofile\\",
                        "\\Windows\\Fonts\\",
                        "\\Windows\\IME\\",
                        "\\Windows\\addins\\"
                    ],
                    "ParentImage|endswith": [
                        "\\services.exe",
                        "\\svchost.exe"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "883faa95-175a-4e22-8181-e5761aeb373c",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2022/10/09",
            "references": [
                "https://blog.truesec.com/2021/03/07/exchange-zero-day-proxylogon-and-hafnium/"
            ],
            "status": "test",
            "title": "Suspicious Service Binary Directory",
            "tags": [
                "attack.defense_evasion",
                "attack.t1202"
            ]
        },
        {
            "author": "Victor Sergeev, oscd.community",
            "date": "2020/10/09",
            "description": "Detects potential DLL sideloading using the Microsoft Office winword process via the '/l' flag.",
            "detection": {
                "condition": "all of selection_*",
                "selection_dll": {
                    "CommandLine|contains|all": [
                        "/l ",
                        ".dll"
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\WINWORD.exe"
                    },
                    {
                        "OriginalFileName": "WinWord.exe"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "f7375e28-5c14-432f-b8d1-1db26c832df3",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "medium",
            "modified": "2023/03/29",
            "references": [
                "https://github.com/D4Vinci/One-Lin3r/blob/9fdfa5f0b9c698dfbd4cdfe7d2473192777ae1c6/one_lin3r/core/liners/windows/cmd/dll_loader_word.py"
            ],
            "related": [
                {
                    "id": "2621b3a6-3840-4810-ac14-a02426086171",
                    "type": "obsoletes"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1202"
            ],
            "title": "Potential Arbitrary DLL Load Using Winword"
        },
        {
            "author": "frack113, Nasreddine Bencherchali",
            "date": "2022/12/29",
            "description": "Detect usage of the \"ssh.exe\" binary as a proxy to launch other programs",
            "detection": {
                "condition": "selection_parent or all of selection_cli_*",
                "selection_cli_flags": [
                    {
                        "CommandLine|contains": "ProxyCommand="
                    },
                    {
                        "CommandLine|contains|all": [
                            "PermitLocalCommand",
                            "LocalCommand"
                        ]
                    }
                ],
                "selection_cli_img": {
                    "Image|endswith": "\\ssh.exe"
                },
                "selection_parent": {
                    "ParentImage": "C:\\Windows\\System32\\OpenSSH\\sshd.exe"
                }
            },
            "falsepositives": [
                "Legitimate usage for administration purposes"
            ],
            "id": "7d6d30b8-5b91-4b90-a891-46cccaf29598",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "medium",
            "modified": "2023/01/25",
            "references": [
                "https://lolbas-project.github.io/lolbas/Binaries/Ssh/",
                "https://github.com/LOLBAS-Project/LOLBAS/pull/211/files",
                "https://gtfobins.github.io/gtfobins/ssh/",
                "https://man.openbsd.org/ssh_config#ProxyCommand",
                "https://man.openbsd.org/ssh_config#LocalCommand"
            ],
            "status": "test",
            "title": "Lolbin Ssh.exe Use As Proxy",
            "tags": [
                "attack.defense_evasion",
                "attack.t1202"
            ]
        },
        {
            "author": "@gott_cyber, Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/12/11",
            "description": "Detects uncommon child process of Setres.EXE.\nSetres.EXE is a Windows server only process and tool that can be used to set the screen resolution.\nIt can potentially be abused in order to launch any arbitrary file with a name containing the word \"choice\" from the current execution path.\n",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_legit_location": {
                    "Image|endswith": [
                        "C:\\Windows\\System32\\choice.exe",
                        "C:\\Windows\\SysWOW64\\choice.exe"
                    ]
                },
                "selection": {
                    "Image|contains": "\\choice",
                    "ParentImage|endswith": "\\setres.exe"
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "835e75bf-4bfd-47a4-b8a6-b766cac8bcb7",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2024/06/26",
            "references": [
                "https://lolbas-project.github.io/lolbas/Binaries/Setres/",
                "https://twitter.com/0gtweet/status/1583356502340870144",
                "https://strontic.github.io/xcyclopedia/library/setres.exe-0E30E4C09637D7A128A37B59A3BC4D09.html",
                "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc731033(v=ws.11)"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1218",
                "attack.t1202"
            ],
            "title": "Uncommon Child Process Of Setres.EXE"
        },
        {
            "author": "Trent Liffick",
            "date": "2020/05/01",
            "description": "Detects usage of findstr to identify and execute a lnk file as seen within the HHS redirect attack",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|endswith": [
                        ".lnk",
                        ".lnk\"",
                        ".lnk'"
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": [
                            "\\find.exe",
                            "\\findstr.exe"
                        ]
                    },
                    {
                        "OriginalFileName": [
                            "FIND.EXE",
                            "FINDSTR.EXE"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "33339be3-148b-4e16-af56-ad16ec6c7e7b",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "medium",
            "modified": "2024/01/15",
            "references": [
                "https://www.bleepingcomputer.com/news/security/hhsgov-open-redirect-used-by-coronavirus-phishing-to-spread-malware/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1036",
                "attack.t1202",
                "attack.t1027.003"
            ],
            "title": "Findstr Launching .lnk File"
        },
        {
            "author": "frack113",
            "date": "2022/12/09",
            "description": "ForceV1 asks for information directly from the kernel space. Conhost connects to the console application. High IntegrityLevel means the process is running with elevated privileges, such as an Administrator context.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains|all": [
                        "conhost.exe",
                        "0xffffffff",
                        "-ForceV1"
                    ],
                    "IntegrityLevel": "High"
                }
            },
            "falsepositives": [
                "Very Likely, including launching cmd.exe via Run As Administrator"
            ],
            "id": "3037d961-21e9-4732-b27a-637bcc7bf539",
            "level": "informational",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://cybercryptosec.medium.com/covid-19-cyber-infection-c615ead7c29",
                "https://thedfirreport.com/2022/04/04/stolen-images-campaign-ends-in-conti-ransomware/",
                "https://learn.microsoft.com/en-us/windows/win32/secauthz/mandatory-integrity-control"
            ],
            "status": "test",
            "title": "Suspicious High IntegrityLevel Conhost Legacy Option",
            "tags": [
                "attack.defense_evasion",
                "attack.t1202"
            ]
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/05/29",
            "description": "Detects processes leveraging the \"ms-msdt\" handler or the \"msdt.exe\" binary to execute arbitrary commands as seen in the follina (CVE-2022-30190) vulnerability",
            "detection": {
                "condition": "selection_img and (selection_cmd_inline or all of selection_cmd_answerfile_*)",
                "selection_cmd_answerfile_flag": {
                    "CommandLine|contains": " PCWDiagnostic"
                },
                "selection_cmd_answerfile_param": {
                    "CommandLine|contains|windash": " -af "
                },
                "selection_cmd_inline": {
                    "CommandLine|contains": "IT_BrowseForFile="
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\msdt.exe"
                    },
                    {
                        "OriginalFileName": "msdt.exe"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "258fc8ce-8352-443a-9120-8a11e4857fa5",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2024/03/13",
            "references": [
                "https://twitter.com/nao_sec/status/1530196847679401984",
                "https://app.any.run/tasks/713f05d2-fe78-4b9d-a744-f7c133e3fafb/",
                "https://twitter.com/_JohnHammond/status/1531672601067675648"
            ],
            "status": "test",
            "title": "Potential Arbitrary Command Execution Using Msdt.EXE",
            "tags": [
                "attack.defense_evasion",
                "attack.t1202"
            ]
        },
        {
            "author": "omkar72",
            "date": "2020/10/25",
            "description": "Detects uncommon \"conhost\" child processes. This could be a sign of \"conhost\" usage as a LOLBIN or potential process injection activity.",
            "detection": {
                "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*",
                "filter_main_conhost": {
                    "Image|endswith": ":\\Windows\\System32\\conhost.exe"
                },
                "filter_main_empty": {
                    "Image": ""
                },
                "filter_main_null": {
                    "Image": null
                },
                "filter_optional_provider": {
                    "Provider_Name": "SystemTraceProvider-Process"
                },
                "selection": {
                    "ParentImage|endswith": "\\conhost.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "7dc2dedd-7603-461a-bc13-15803d132355",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "medium",
            "modified": "2023/12/11",
            "references": [
                "http://www.hexacorn.com/blog/2020/05/25/how-to-con-your-host/"
            ],
            "status": "experimental",
            "title": "Uncommon Child Process Of Conhost.EXE",
            "tags": [
                "attack.defense_evasion",
                "attack.t1202"
            ]
        },
        {
            "id": "2d22a514-e024-4428-9dba-41505bd63a5b",
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/08/15",
            "description": "Detects execution of Microsoft bash launcher without any flags to execute the content of a bash script directly.\nThis can be used to potentially bypass defenses and execute Linux or Windows-based binaries directly via bash.\n",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_cli_flag": {
                    "CommandLine|contains": [
                        "bash.exe -",
                        "bash -"
                    ]
                },
                "filter_main_empty": {
                    "CommandLine": ""
                },
                "filter_main_no_cli": {
                    "CommandLine": null
                },
                "filter_main_no_flag": {
                    "CommandLine": [
                        "bash.exe",
                        "bash"
                    ]
                },
                "selection": [
                    {
                        "Image|endswith": [
                            ":\\Windows\\System32\\bash.exe",
                            ":\\Windows\\SysWOW64\\bash.exe"
                        ]
                    },
                    {
                        "OriginalFileName": "Bash.exe"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "medium",
            "references": [
                "https://lolbas-project.github.io/lolbas/Binaries/Bash/",
                "https://linux.die.net/man/1/bash",
                "Internal Research"
            ],
            "related": [
                {
                    "type": "similar",
                    "id": "5edc2273-c26f-406c-83f3-f4d948e740dd"
                }
            ],
            "status": "test",
            "title": "Indirect Command Execution From Script File Via Bash.EXE",
            "tags": [
                "attack.defense_evasion",
                "attack.t1202"
            ]
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2021/05/27",
            "description": "Detects suspicious start of rundll32.exe without any parameters as found in CobaltStrike beacon activity",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "ParentImage|contains": [
                        "\\AppData\\Local\\",
                        "\\Microsoft\\Edge\\"
                    ]
                },
                "selection": {
                    "CommandLine|endswith": [
                        "\\rundll32.exe",
                        "\\rundll32.exe\"",
                        "\\rundll32"
                    ]
                }
            },
            "falsepositives": [
                "Possible but rare"
            ],
            "id": "1775e15e-b61b-4d14-a1a3-80981298085a",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/08/31",
            "references": [
                "https://www.cobaltstrike.com/help-opsec",
                "https://twitter.com/ber_m1ng/status/1397948048135778309"
            ],
            "status": "test",
            "title": "Rundll32 Execution Without CommandLine Parameters",
            "tags": [
                "attack.defense_evasion",
                "attack.t1202"
            ]
        },
        {
            "author": "X__Junior (Nextron Systems)",
            "date": "2023/09/11",
            "description": "Detects the execution of a renamed \"CURL.exe\" binary based on the PE metadata fields",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_img": {
                    "Image|contains": "\\curl"
                },
                "selection": [
                    {
                        "OriginalFileName": "curl.exe"
                    },
                    {
                        "Description": "The curl executable"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "7530cd3d-7671-43e3-b209-976966f6ea48",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "medium",
            "modified": "2023/10/12",
            "references": [
                "https://twitter.com/Kostastsale/status/1700965142828290260"
            ],
            "status": "experimental",
            "title": "Renamed CURL.EXE Execution",
            "tags": [
                "attack.execution",
                "attack.t1059",
                "attack.defense_evasion",
                "attack.t1202"
            ]
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems), X__Junior (Nextron Systems)",
            "date": "2024/01/11",
            "description": "Detects the execution of a renamed \"PingCastle\" binary based on the PE metadata fields.",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_img": {
                    "Image|endswith": [
                        "\\PingCastleReporting.exe",
                        "\\PingCastleCloud.exe",
                        "\\PingCastle.exe"
                    ]
                },
                "selection": [
                    {
                        "OriginalFileName": [
                            "PingCastleReporting.exe",
                            "PingCastleCloud.exe",
                            "PingCastle.exe"
                        ]
                    },
                    {
                        "CommandLine|contains": [
                            "--scanner aclcheck",
                            "--scanner antivirus",
                            "--scanner computerversion",
                            "--scanner foreignusers",
                            "--scanner laps_bitlocker",
                            "--scanner localadmin",
                            "--scanner nullsession",
                            "--scanner nullsession-trust",
                            "--scanner oxidbindings",
                            "--scanner remote",
                            "--scanner share",
                            "--scanner smb",
                            "--scanner smb3querynetwork",
                            "--scanner spooler",
                            "--scanner startup",
                            "--scanner zerologon"
                        ]
                    },
                    {
                        "CommandLine|contains": "--no-enum-limit"
                    },
                    {
                        "CommandLine|contains|all": [
                            "--healthcheck",
                            "--level Full"
                        ]
                    },
                    {
                        "CommandLine|contains|all": [
                            "--healthcheck",
                            "--server "
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "2433a154-bb3d-42e4-86c3-a26bdac91c45",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://thedfirreport.com/2023/10/30/netsupport-intrusion-results-in-domain-compromise/",
                "https://www.pingcastle.com/documentation/scanner/"
            ],
            "status": "experimental",
            "title": "Renamed PingCastle Binary Execution",
            "tags": [
                "attack.execution",
                "attack.t1059",
                "attack.defense_evasion",
                "attack.t1202"
            ]
        },
        {
            "id": "dec44ca7-61ad-493c-bfd7-8819c5faa09b",
            "author": "oscd.community, Zach Stanford @svch0st, Nasreddine Bencherchali (Nextron Systems)",
            "date": "2020/10/05",
            "description": "Detects potential abuse of Windows Subsystem for Linux (WSL) binary as a LOLBIN to execute arbitrary Linux or Windows commands",
            "detection": {
                "condition": "all of selection_* and not 1 of filter_main_*",
                "filter_main_kill": {
                    "CommandLine|contains|all": [
                        " -d ",
                        " -e kill "
                    ],
                    "ParentImage|endswith": "\\cmd.exe"
                },
                "selection_cli": {
                    "CommandLine|contains": [
                        " -e ",
                        " --exec",
                        " --system",
                        " --shell-type ",
                        " /mnt/c",
                        " --user root",
                        " -u root",
                        "--debug-shell"
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\wsl.exe"
                    },
                    {
                        "OriginalFileName": "wsl.exe"
                    }
                ]
            },
            "falsepositives": [
                "Automation and orchestration scripts may use this method to execute scripts etc.",
                "Legitimate use by Windows to kill processes opened via WSL (example VsCode WSL server)"
            ],
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "medium",
            "modified": "2023/04/12",
            "references": [
                "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Wsl/",
                "https://twitter.com/nas_bench/status/1535431474429808642"
            ],
            "related": [
                {
                    "type": "similar",
                    "id": "2267fe65-0681-42ad-9a6d-46553d3f3480"
                }
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.defense_evasion",
                "attack.t1218",
                "attack.t1202"
            ],
            "title": "Arbitrary Command Execution Using WSL"
        },
        {
            "author": "X__Junior (Nextron Systems)",
            "date": "2024/03/11",
            "description": "Detects the execution of a renamed \"NirCmd.exe\" binary based on the PE metadata fields.",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_img": {
                    "Image|endswith": [
                        "\\nircmd.exe",
                        "\\nircmdc.exe"
                    ]
                },
                "selection": {
                    "OriginalFileName": "NirCmd.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "264982dc-dbad-4dce-b707-1e0d3e0f73d9",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://www.microsoft.com/en-us/security/blog/2024/01/17/new-ttps-observed-in-mint-sandstorm-campaign-targeting-high-profile-individuals-at-universities-and-research-orgs/",
                "https://www.nirsoft.net/utils/nircmd.html"
            ],
            "status": "experimental",
            "title": "Renamed NirCmd.EXE Execution",
            "tags": [
                "attack.execution",
                "attack.t1059",
                "attack.defense_evasion",
                "attack.t1202"
            ]
        },
        {
            "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
            "date": "2020/01/28",
            "description": "Detects a renamed \"dctask64.exe\" execution, a signed binary by ZOHO Corporation part of ManageEngine Endpoint Central.\nThis binary can be abused for DLL injection, arbitrary command and process execution.\n",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_legit_name": {
                    "Image|endswith": "\\dctask64.exe"
                },
                "selection": {
                    "Hashes|contains": [
                        "6834B1B94E49701D77CCB3C0895E1AFD",
                        "1BB6F93B129F398C7C4A76BB97450BBA",
                        "FAA2AC19875FADE461C8D89DCF2710A3",
                        "F1039CED4B91572AB7847D26032E6BBF"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "340a090b-c4e9-412e-bb36-b4b16fe96f9b",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2024/04/22",
            "references": [
                "https://twitter.com/gN3mes1s/status/1222088214581825540",
                "https://twitter.com/gN3mes1s/status/1222095963789111296",
                "https://twitter.com/gN3mes1s/status/1222095371175911424"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1036",
                "attack.t1055.001",
                "attack.t1202",
                "attack.t1218"
            ],
            "title": "Renamed ZOHO Dctask64 Execution"
        },
        {
            "author": "frack113",
            "date": "2021/11/07",
            "description": "ZipExec is a Proof-of-Concept (POC) tool to wrap binary-based tools into a password-protected zip file.",
            "detection": {
                "condition": "run or delete",
                "delete": {
                    "CommandLine|contains|all": [
                        "/delete",
                        "Microsoft_Windows_Shell_ZipFolder:filename=",
                        ".zip"
                    ]
                },
                "run": {
                    "CommandLine|contains|all": [
                        "/generic:Microsoft_Windows_Shell_ZipFolder:filename=",
                        ".zip",
                        "/pass:",
                        "/user:"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "90dcf730-1b71-4ae7-9ffc-6fcf62bd0132",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "medium",
            "modified": "2022/12/25",
            "references": [
                "https://twitter.com/SBousseaden/status/1451237393017839616",
                "https://github.com/Tylous/ZipExec"
            ],
            "status": "test",
            "title": "Suspicious ZipExec Execution",
            "tags": [
                "attack.execution",
                "attack.defense_evasion",
                "attack.t1218",
                "attack.t1202"
            ]
        },
        {
            "author": "Florian Roth (Nextron Systems), Jason Lynch",
            "date": "2021/05/22",
            "description": "Detects execution of renamed version of PAExec. Often used by attackers",
            "detection": {
                "condition": "selection and not filter",
                "filter": [
                    {
                        "Image|endswith": "\\paexec.exe"
                    },
                    {
                        "Image|startswith": "C:\\Windows\\PAExec-"
                    }
                ],
                "selection": [
                    {
                        "Description": "PAExec Application"
                    },
                    {
                        "OriginalFileName": "PAExec.exe"
                    },
                    {
                        "Product|contains": "PAExec"
                    },
                    {
                        "Imphash": [
                            "11D40A7B7876288F919AB819CC2D9802",
                            "6444f8a34e99b8f7d9647de66aabe516",
                            "dfd6aa3f7b2b1035b76b718f1ddc689f",
                            "1a6cca4d5460b1710a12dea39e4a592c"
                        ]
                    },
                    {
                        "Hashes|contains": [
                            "IMPHASH=11D40A7B7876288F919AB819CC2D9802",
                            "IMPHASH=6444f8a34e99b8f7d9647de66aabe516",
                            "IMPHASH=dfd6aa3f7b2b1035b76b718f1ddc689f",
                            "IMPHASH=1a6cca4d5460b1710a12dea39e4a592c"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Weird admins that rename their tools",
                "Software companies that bundle PAExec with their software and rename it, so that it is less embarrassing",
                "When executed with the \"-s\" flag. PAExec will copy itself to the \"C:\\Windows\\\" directory with a different name. Usually like this \"PAExec-[XXXXX]-[ComputerName]\""
            ],
            "id": "c4e49831-1496-40cf-8ce1-b53f942b02f9",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/14",
            "references": [
                "https://www.poweradmin.com/paexec/",
                "https://summit.fireeye.com/content/dam/fireeye-www/summit/cds-2018/presentations/cds18-technical-s05-att&cking-fin7.pdf"
            ],
            "related": [
                {
                    "id": "7b0666ad-3e38-4e3d-9bab-78b06de85f7b",
                    "type": "obsoletes"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1202"
            ],
            "title": "Renamed PAExec Execution"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems), Beyu Denis, oscd.community",
            "date": "2019/10/26",
            "description": "Detects uncommon child processes of \"BgInfo.exe\" which could be a sign of potential abuse of the binary to proxy execution via external VBScript",
            "detection": {
                "condition": "selection",
                "selection": {
                    "ParentImage|endswith": [
                        "\\bginfo.exe",
                        "\\bginfo64.exe"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "aaf46cdc-934e-4284-b329-34aa701e3771",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "medium",
            "modified": "2023/08/16",
            "references": [
                "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Bginfo/",
                "https://oddvar.moe/2017/05/18/bypassing-application-whitelisting-with-bginfo/"
            ],
            "related": [
                {
                    "id": "811f459f-9231-45d4-959a-0266c6311987",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1059.005",
                "attack.defense_evasion",
                "attack.t1218",
                "attack.t1202"
            ],
            "title": "Uncommon Child Process Of BgInfo.EXE"
        },
        {
            "author": "Victor Sergeev, oscd.community",
            "date": "2020/10/09",
            "description": "Detects the execution of a renamed \"ftp.exe\" binary based on the PE metadata fields",
            "detection": {
                "condition": "selection_original and not filter_img",
                "filter_img": {
                    "Image|endswith": "\\ftp.exe"
                },
                "selection_original": {
                    "OriginalFileName": "ftp.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "fields": [
                "CommandLine",
                "ParentImage"
            ],
            "id": "277a4393-446c-449a-b0ed-7fdc7795244c",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "medium",
            "modified": "2023/02/03",
            "status": "test",
            "references": [
                "https://lolbas-project.github.io/lolbas/Binaries/Ftp/"
            ],
            "tags": [
                "attack.execution",
                "attack.t1059",
                "attack.defense_evasion",
                "attack.t1202"
            ],
            "title": "Renamed FTP.EXE Execution"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/06/21",
            "description": "Detects the execution of an Office application that points to a document that is located in a trusted location. Attackers often used this to avoid macro security and execute their malicious code.",
            "detection": {
                "condition": "all of selection_* and not 1 of filter_main_*",
                "filter_main_dotx": {
                    "CommandLine|endswith": [
                        ".dotx",
                        ".xltx",
                        ".potx"
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": [
                            "\\EXCEL.EXE",
                            "\\POWERPNT.EXE",
                            "\\WINWORD.exe"
                        ]
                    },
                    {
                        "OriginalFileName": [
                            "Excel.exe",
                            "POWERPNT.EXE",
                            "WinWord.exe"
                        ]
                    }
                ],
                "selection_parent": {
                    "ParentImage|endswith": [
                        "\\explorer.exe",
                        "\\dopus.exe"
                    ]
                },
                "selection_trusted_location": {
                    "CommandLine|contains": [
                        "\\AppData\\Roaming\\Microsoft\\Templates",
                        "\\AppData\\Roaming\\Microsoft\\Word\\Startup\\",
                        "\\Microsoft Office\\root\\Templates\\",
                        "\\Microsoft Office\\Templates\\"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "f99abdf0-6283-4e71-bd2b-b5c048a94743",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/10/18",
            "references": [
                "Internal Research",
                "https://twitter.com/Max_Mal_/status/1633863678909874176",
                "https://techcommunity.microsoft.com/t5/microsoft-365-blog/new-security-hardening-policies-for-trusted-documents/ba-p/3023465",
                "https://twitter.com/_JohnHammond/status/1588155401752788994"
            ],
            "status": "experimental",
            "title": "Potentially Suspicious Office Document Executed From Trusted Location",
            "tags": [
                "attack.defense_evasion",
                "attack.t1202"
            ]
        },
        {
            "id": "811f459f-9231-45d4-959a-0266c6311987",
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/08/16",
            "description": "Detects suspicious child processes of \"BgInfo.exe\" which could be a sign of potential abuse of the binary to proxy execution via external VBScript",
            "detection": {
                "condition": "all of selection_*",
                "selection_child": [
                    {
                        "Image|endswith": [
                            "\\calc.exe",
                            "\\cmd.exe",
                            "\\cscript.exe",
                            "\\mshta.exe",
                            "\\notepad.exe",
                            "\\powershell.exe",
                            "\\pwsh.exe",
                            "\\wscript.exe"
                        ]
                    },
                    {
                        "Image|contains": [
                            "\\AppData\\Local\\",
                            "\\AppData\\Roaming\\",
                            ":\\Users\\Public\\",
                            ":\\Temp\\",
                            ":\\Windows\\Temp\\",
                            ":\\PerfLogs\\"
                        ]
                    }
                ],
                "selection_parent": {
                    "ParentImage|endswith": [
                        "\\bginfo.exe",
                        "\\bginfo64.exe"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "related": [
                {
                    "type": "similar",
                    "id": "aaf46cdc-934e-4284-b329-34aa701e3771"
                }
            ],
            "references": [
                "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Bginfo/",
                "https://oddvar.moe/2017/05/18/bypassing-application-whitelisting-with-bginfo/"
            ],
            "status": "test",
            "title": "Suspicious Child Process Of BgInfo.EXE",
            "tags": [
                "attack.execution",
                "attack.t1059.005",
                "attack.defense_evasion",
                "attack.t1218",
                "attack.t1202"
            ]
        },
        {
            "author": "Victor Sergeev, oscd.community",
            "date": "2020/10/09",
            "description": "Detects execution of \"ftp.exe\" script with the \"-s\" or \"/s\" flag and any child processes ran by \"ftp.exe\".",
            "detection": {
                "condition": "selection_parent or all of selection_child_*",
                "selection_child_cli": {
                    "CommandLine|contains|windash": "-s:"
                },
                "selection_child_img": [
                    {
                        "Image|endswith": "\\ftp.exe"
                    },
                    {
                        "OriginalFileName": "ftp.exe"
                    }
                ],
                "selection_parent": {
                    "ParentImage|endswith": "\\ftp.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "06b401f4-107c-4ff9-947f-9ec1e7649f1e",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "medium",
            "modified": "2024/04/23",
            "status": "test",
            "references": [
                "https://lolbas-project.github.io/lolbas/Binaries/Ftp/"
            ],
            "title": "Potential Arbitrary Command Execution Via FTP.EXE",
            "tags": [
                "attack.execution",
                "attack.t1059",
                "attack.defense_evasion",
                "attack.t1202"
            ]
        },
        {
            "author": "frack113",
            "date": "2021/12/20",
            "description": "Detects binaries that use the same name as legitimate sysinternals tools to evade detection",
            "detection": {
                "condition": "selection_exe and not 1 of filter*",
                "filter_empty": {
                    "Company": null
                },
                "filter_valid": {
                    "Company": [
                        "Sysinternals - www.sysinternals.com",
                        "Sysinternals"
                    ]
                },
                "selection_exe": {
                    "Image|endswith": [
                        "\\accesschk.exe",
                        "\\accesschk64.exe",
                        "\\AccessEnum.exe",
                        "\\ADExplorer.exe",
                        "\\ADExplorer64.exe",
                        "\\ADInsight.exe",
                        "\\ADInsight64.exe",
                        "\\adrestore.exe",
                        "\\adrestore64.exe",
                        "\\Autologon.exe",
                        "\\Autologon64.exe",
                        "\\Autoruns.exe",
                        "\\Autoruns64.exe",
                        "\\autorunsc.exe",
                        "\\autorunsc64.exe",
                        "\\Bginfo.exe",
                        "\\Bginfo64.exe",
                        "\\Cacheset.exe",
                        "\\Cacheset64.exe",
                        "\\Clockres.exe",
                        "\\Clockres64.exe",
                        "\\Contig.exe",
                        "\\Contig64.exe",
                        "\\Coreinfo.exe",
                        "\\Coreinfo64.exe",
                        "\\CPUSTRES.EXE",
                        "\\CPUSTRES64.EXE",
                        "\\ctrl2cap.exe",
                        "\\Dbgview.exe",
                        "\\dbgview64.exe",
                        "\\Desktops.exe",
                        "\\Desktops64.exe",
                        "\\disk2vhd.exe",
                        "\\disk2vhd64.exe",
                        "\\diskext.exe",
                        "\\diskext64.exe",
                        "\\Diskmon.exe",
                        "\\Diskmon64.exe",
                        "\\DiskView.exe",
                        "\\DiskView64.exe",
                        "\\du.exe",
                        "\\du64.exe",
                        "\\efsdump.exe",
                        "\\FindLinks.exe",
                        "\\FindLinks64.exe",
                        "\\handle.exe",
                        "\\handle64.exe",
                        "\\hex2dec.exe",
                        "\\hex2dec64.exe",
                        "\\junction.exe",
                        "\\junction64.exe",
                        "\\ldmdump.exe",
                        "\\listdlls.exe",
                        "\\listdlls64.exe",
                        "\\livekd.exe",
                        "\\livekd64.exe",
                        "\\loadOrd.exe",
                        "\\loadOrd64.exe",
                        "\\loadOrdC.exe",
                        "\\loadOrdC64.exe",
                        "\\logonsessions.exe",
                        "\\logonsessions64.exe",
                        "\\movefile.exe",
                        "\\movefile64.exe",
                        "\\notmyfault.exe",
                        "\\notmyfault64.exe",
                        "\\notmyfaultc.exe",
                        "\\notmyfaultc64.exe",
                        "\\ntfsinfo.exe",
                        "\\ntfsinfo64.exe",
                        "\\pendmoves.exe",
                        "\\pendmoves64.exe",
                        "\\pipelist.exe",
                        "\\pipelist64.exe",
                        "\\portmon.exe",
                        "\\procdump.exe",
                        "\\procdump64.exe",
                        "\\procexp.exe",
                        "\\procexp64.exe",
                        "\\Procmon.exe",
                        "\\Procmon64.exe",
                        "\\psExec.exe",
                        "\\psExec64.exe",
                        "\\psfile.exe",
                        "\\psfile64.exe",
                        "\\psGetsid.exe",
                        "\\psGetsid64.exe",
                        "\\psInfo.exe",
                        "\\psInfo64.exe",
                        "\\pskill.exe",
                        "\\pskill64.exe",
                        "\\pslist.exe",
                        "\\pslist64.exe",
                        "\\psLoggedon.exe",
                        "\\psLoggedon64.exe",
                        "\\psloglist.exe",
                        "\\psloglist64.exe",
                        "\\pspasswd.exe",
                        "\\pspasswd64.exe",
                        "\\psping.exe",
                        "\\psping64.exe",
                        "\\psService.exe",
                        "\\psService64.exe",
                        "\\psshutdown.exe",
                        "\\psshutdown64.exe",
                        "\\pssuspend.exe",
                        "\\pssuspend64.exe",
                        "\\RAMMap.exe",
                        "\\RDCMan.exe",
                        "\\RegDelNull.exe",
                        "\\RegDelNull64.exe",
                        "\\regjump.exe",
                        "\\ru.exe",
                        "\\ru64.exe",
                        "\\sdelete.exe",
                        "\\sdelete64.exe",
                        "\\ShareEnum.exe",
                        "\\ShareEnum64.exe",
                        "\\shellRunas.exe",
                        "\\sigcheck.exe",
                        "\\sigcheck64.exe",
                        "\\streams.exe",
                        "\\streams64.exe",
                        "\\strings.exe",
                        "\\strings64.exe",
                        "\\sync.exe",
                        "\\sync64.exe",
                        "\\Sysmon.exe",
                        "\\Sysmon64.exe",
                        "\\tcpvcon.exe",
                        "\\tcpvcon64.exe",
                        "\\tcpview.exe",
                        "\\tcpview64.exe",
                        "\\Testlimit.exe",
                        "\\Testlimit64.exe",
                        "\\vmmap.exe",
                        "\\vmmap64.exe",
                        "\\Volumeid.exe",
                        "\\Volumeid64.exe",
                        "\\whois.exe",
                        "\\whois64.exe",
                        "\\Winobj.exe",
                        "\\Winobj64.exe",
                        "\\ZoomIt.exe",
                        "\\ZoomIt64.exe"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "7cce6fc8-a07f-4d84-a53e-96e1879843c9",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "medium",
            "modified": "2022/12/08",
            "references": [
                "https://learn.microsoft.com/en-us/sysinternals/downloads/sysinternals-suite"
            ],
            "status": "test",
            "title": "Potential Binary Impersonating Sysinternals Tools",
            "tags": [
                "attack.execution",
                "attack.defense_evasion",
                "attack.t1218",
                "attack.t1202"
            ]
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems), GossiTheDog, frack113",
            "date": "2022/06/21",
            "description": "Detects execution of msdt.exe using the \"cab\" flag which could indicates suspicious diagcab files with embedded answer files leveraging CVE-2022-30190",
            "detection": {
                "condition": "all of selection_*",
                "selection_cmd": {
                    "CommandLine|contains|windash": " -cab "
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\msdt.exe"
                    },
                    {
                        "OriginalFileName": "msdt.exe"
                    }
                ]
            },
            "falsepositives": [
                "Legitimate usage of \".diagcab\" files"
            ],
            "id": "dc4576d4-7467-424f-9eee-fd2b02855fe0",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "medium",
            "modified": "2024/03/13",
            "references": [
                "https://twitter.com/nas_bench/status/1537896324837781506",
                "https://github.com/GossiTheDog/ThreatHunting/blob/e85884abbf05d5b41efc809ea6532b10b45bd05c/AdvancedHuntingQueries/DogWalk-DiagCab",
                "https://github.com/elastic/protections-artifacts/commit/746086721fd385d9f5c6647cada1788db4aea95f#diff-9015912909545e72ed42cbac4d1e96295e8964579c406d23fd9c47a8091576a0",
                "https://irsl.medium.com/the-trouble-with-microsofts-troubleshooters-6e32fc80b8bd"
            ],
            "related": [
                {
                    "id": "6545ce61-a1bd-4119-b9be-fcbee42c0cf3",
                    "type": "obsoletes"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1202"
            ],
            "title": "Suspicious Cabinet File Execution Via Msdt.EXE"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems), Beyu Denis, oscd.community",
            "date": "2022/05/17",
            "description": "Detects potential arbitrary file download using a Microsoft Office application",
            "detection": {
                "condition": "all of selection_*",
                "selection_http": {
                    "CommandLine|contains": [
                        "http://",
                        "https://"
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": [
                            "\\EXCEL.EXE",
                            "\\POWERPNT.EXE",
                            "\\WINWORD.exe"
                        ]
                    },
                    {
                        "OriginalFileName": [
                            "Excel.exe",
                            "POWERPNT.EXE",
                            "WinWord.exe"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "4ae3e30b-b03f-43aa-87e3-b622f4048eed",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/06/22",
            "references": [
                "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Winword/",
                "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Powerpnt/",
                "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Excel/",
                "https://medium.com/@reegun/unsanitized-file-validation-leads-to-malicious-payload-download-via-office-binaries-202d02db7191"
            ],
            "related": [
                {
                    "id": "0c79148b-118e-472b-bdb7-9b57b444cc19",
                    "type": "obsoletes"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1202"
            ],
            "title": "Potential Arbitrary File Download Using Office Application"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/01/26",
            "description": "Detects uncommon or suspicious child processes spawning from a VsCode \"code.exe\" process. This could indicate an attempt of persistence via VsCode tasks or terminal profiles.",
            "detection": {
                "condition": "selection_parent and 1 of selection_children_*",
                "selection_children_cli": {
                    "CommandLine|contains": [
                        "Invoke-Expressions",
                        "IEX",
                        "Invoke-Command",
                        "ICM",
                        "DownloadString",
                        "rundll32",
                        "regsvr32",
                        "wscript",
                        "cscript"
                    ],
                    "Image|endswith": [
                        "\\powershell.exe",
                        "\\pwsh.exe",
                        "\\cmd.exe"
                    ]
                },
                "selection_children_images": {
                    "Image|endswith": [
                        "\\calc.exe",
                        "\\regsvr32.exe",
                        "\\rundll32.exe",
                        "\\cscript.exe",
                        "\\wscript.exe"
                    ]
                },
                "selection_children_paths": {
                    "Image|contains": [
                        ":\\Users\\Public\\",
                        ":\\Windows\\Temp\\",
                        ":\\Temp\\"
                    ]
                },
                "selection_parent": {
                    "ParentImage|endswith": "\\code.exe"
                }
            },
            "falsepositives": [
                "In development environment where VsCode is used heavily. False positives may occur when developers use task to compile or execute different types of code. Remove or add processes accordingly"
            ],
            "id": "5a3164f2-b373-4152-93cf-090b13c12d27",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "medium",
            "modified": "2023/10/25",
            "references": [
                "https://twitter.com/nas_bench/status/1618021838407495681",
                "https://twitter.com/nas_bench/status/1618021415852335105"
            ],
            "status": "experimental",
            "title": "Potentially Suspicious Child Process Of VsCode",
            "tags": [
                "attack.execution",
                "attack.defense_evasion",
                "attack.t1218",
                "attack.t1202"
            ]
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/02/14",
            "description": "Detects the execution of Windows binaries from within a WSL instance. This could be used to masquerade parent-child relationships",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CurrentDirectory|contains": "\\\\\\\\wsl.localhost",
                    "Image|re": "[a-zA-Z]:\\\\"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "ed825c86-c009-4014-b413-b76003e33d35",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "medium",
            "references": [
                "Internal Research"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.defense_evasion",
                "attack.t1202"
            ],
            "title": "Windows Binary Executed From WSL"
        },
        {
            "author": "frack113",
            "date": "2021/11/03",
            "description": "Detects execution of Cmdl32 with the \"/vpn\" and \"/lan\" flags.\nAttackers can abuse this utility in order to download arbitrary files via a configuration file.\nInspect the location and the content of the file passed as an argument in order to determine if it is suspicious.\n",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains|all": [
                        "/vpn",
                        "/lan"
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\cmdl32.exe"
                    },
                    {
                        "OriginalFileName": "CMDL32.EXE"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "f37aba28-a9e6-4045-882c-d5004043b337",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "medium",
            "modified": "2024/04/22",
            "references": [
                "https://lolbas-project.github.io/lolbas/Binaries/Cmdl32/",
                "https://twitter.com/SwiftOnSecurity/status/1455897435063074824",
                "https://github.com/LOLBAS-Project/LOLBAS/pull/151"
            ],
            "status": "test",
            "title": "Potential Arbitrary File Download Via Cmdl32.EXE",
            "tags": [
                "attack.execution",
                "attack.defense_evasion",
                "attack.t1218",
                "attack.t1202"
            ]
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/06/21",
            "description": "Detects execution of \"TroubleshootingPack\" cmdlets to leverage CVE-2022-30190 or action similar to \"msdt\" lolbin (as described in LOLBAS)",
            "detection": {
                "condition": "selection",
                "selection": {
                    "ScriptBlockText|contains|all": [
                        "Invoke-TroubleshootingPack",
                        "C:\\Windows\\Diagnostics\\System\\PCW",
                        "-AnswerFile",
                        "-Unattended"
                    ]
                }
            },
            "falsepositives": [
                "Legitimate usage of \"TroubleshootingPack\" cmdlet for troubleshooting purposes"
            ],
            "id": "03409c93-a7c7-49ba-9a4c-a00badf2a153",
            "logsource": {
                "category": "ps_script",
                "product": "windows",
                "definition": "Requirements: Script Block Logging must be enabled"
            },
            "level": "medium",
            "references": [
                "https://twitter.com/nas_bench/status/1537919885031772161",
                "https://lolbas-project.github.io/lolbas/Binaries/Msdt/"
            ],
            "status": "test",
            "title": "Troubleshooting Pack Cmdlet Execution",
            "tags": [
                "attack.defense_evasion",
                "attack.t1202"
            ]
        },
        {
            "author": "CD_R0M_",
            "date": "2022/06/11",
            "description": "Detects the abuse of custom file open handler, executing powershell",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Details|contains|all": [
                        "powershell",
                        "-command"
                    ],
                    "TargetObject|contains": "shell\\open\\command\\"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "7530b96f-ad8e-431d-a04d-ac85cc461fdc",
            "level": "high",
            "logsource": {
                "category": "registry_set",
                "product": "windows"
            },
            "modified": "2023/08/17",
            "references": [
                "https://news.sophos.com/en-us/2022/02/01/solarmarker-campaign-used-novel-registry-changes-to-establish-persistence/?cmp=30728"
            ],
            "status": "test",
            "title": "Custom File Open Handler Executes PowerShell",
            "tags": [
                "attack.defense_evasion",
                "attack.t1202"
            ]
        }
    ],
    "x_mitre_platforms": [
        "Windows"
    ],
    "x_mitre_domains": [
        "enterprise-attack"
    ],
    "x_mitre_contributors": [
        "Matthew Demaske, Adaptforward"
    ],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "defense-evasion"
        }
    ],
    "x_mitre_detection": "Monitor and analyze logs from host-based detection mechanisms, such as Sysmon, for events such as process creations that include or are resulting from parameters associated with invoking programs/commands/files and/or spawning child processes/network connections. (Citation: RSA Forfiles Aug 2017)",
    "x_mitre_is_subtechnique": false,
    "x_mitre_version": "1.1",
    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
    "x_mitre_data_sources": [
        "Command: Command Execution",
        "Process: Process Creation"
    ],
    "x_mitre_permissions_required": []
}