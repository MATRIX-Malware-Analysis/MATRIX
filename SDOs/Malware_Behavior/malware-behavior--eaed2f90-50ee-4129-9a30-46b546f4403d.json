{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--eaed2f90-50ee-4129-9a30-46b546f4403d",
    "created": "2024-08-13T14:46:36.684307Z",
    "modified": "2024-08-13T14:46:48.427878Z",
    "name": "Access Token Manipulation: Token Impersonation/Theft",
    "description": "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using DuplicateToken or DuplicateTokenEx.[1] The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user's security context, or with SetThreadToken to assign the impersonated token to a thread.An adversary may perform Token Impersonation/Theft when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.When an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally Create Process with Token using CreateProcessWithTokenW or CreateProcessAsUserW. Token Impersonation/Theft is also distinct from Make and Impersonate Token in that it refers to duplicating an existing token, rather than creating a new one.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1134/001",
            "external_id": "T1134/001"
        },
        {
            "source_name": "CAPEC 60",
            "external_id": "malware-behavior--b6e2ca58-fe4d-4b44-bccf-fabe6ba366f2"
        }
    ],
    "x_mitre_capa_rules": [
        {
            "rule": {
                "features": [
                    {
                        "or": [
                            {
                                "api": "advapi32.LogonUser"
                            },
                            {
                                "and": [
                                    {
                                        "api": "userenv.LoadUserProfile"
                                    },
                                    {
                                        "optional": [
                                            {
                                                "api": "advapi32.GetUserName"
                                            },
                                            {
                                                "api": "advapi32.GetUserNameEx"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Privilege Escalation::Access Token Manipulation::Token Impersonation/Theft [T1134.001]"
                    ],
                    "authors": [
                        "michael.hunhoff@mandiant.com"
                    ],
                    "name": "impersonate user",
                    "namespace": "host-interaction/user",
                    "scopes": {
                        "dynamic": "thread",
                        "static": "function"
                    }
                }
            }
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2024/06/26",
            "description": "Detects the execution of the SharpDPAPI tool based on CommandLine flags and PE metadata.\nSharpDPAPI is a C# port of some DPAPI functionality from the Mimikatz project.\n",
            "detection": {
                "condition": "selection_img or (selection_other_cli and 1 of selection_other_options_*)",
                "selection_img": [
                    {
                        "Image|endswith": "\\SharpDPAPI.exe"
                    },
                    {
                        "OriginalFileName": "SharpDPAPI.exe"
                    }
                ],
                "selection_other_cli": {
                    "CommandLine|contains": [
                        " backupkey ",
                        " blob ",
                        " certificates ",
                        " credentials ",
                        " keepass ",
                        " masterkeys ",
                        " rdg ",
                        " vaults "
                    ]
                },
                "selection_other_options_flags": {
                    "CommandLine|contains": [
                        " /file:",
                        " /machine",
                        " /mkfile:",
                        " /password:",
                        " /pvk:",
                        " /server:",
                        " /target:",
                        " /unprotect"
                    ]
                },
                "selection_other_options_guid": {
                    "CommandLine|contains|all": [
                        " {",
                        "}:"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "c7d33b50-f690-4b51-8cfb-0fb912a31e57",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://github.com/GhostPack/SharpDPAPI"
            ],
            "status": "experimental",
            "tags": [
                "attack.privilege_escalation",
                "attack.defense_evasion",
                "attack.t1134.001",
                "attack.t1134.003"
            ],
            "title": "HackTool - SharpDPAPI Execution"
        },
        {
            "author": "Teymur Kheirkhabarov, Ecco, Florian Roth",
            "date": "2019/10/26",
            "description": "Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting",
            "detection": {
                "condition": "selection_img and 1 of selection_technique_* and not 1 of filter_*",
                "filter_defender": {
                    "CommandLine|contains": "MpCmdRun"
                },
                "selection_img": {
                    "ParentImage|endswith": "\\services.exe"
                },
                "selection_technique_1": {
                    "CommandLine|contains": [
                        "cmd",
                        "%COMSPEC%"
                    ],
                    "CommandLine|contains|all": [
                        "/c",
                        "echo",
                        "\\pipe\\"
                    ]
                },
                "selection_technique_2": {
                    "CommandLine|contains|all": [
                        "rundll32",
                        ".dll,a",
                        "/p:"
                    ]
                }
            },
            "falsepositives": [
                "Commandlines containing components like cmd accidentally",
                "Jobs and services started with cmd"
            ],
            "fields": [
                "ComputerName",
                "User",
                "CommandLine"
            ],
            "id": "15619216-e993-4721-b590-4c520615a67d",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/05",
            "references": [
                "https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment",
                "https://blog.cobaltstrike.com/2014/04/02/what-happens-when-i-type-getsystem/"
            ],
            "status": "test",
            "tags": [
                "attack.privilege_escalation",
                "attack.t1134.001",
                "attack.t1134.002"
            ],
            "title": "Potential Meterpreter/CobaltStrike Activity"
        },
        {
            "author": "Sai Prashanth Pulisetti @pulisettis, Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/12/27",
            "description": "Detects execution of the SharpImpersonation tool. Which can be used to manipulate tokens on a Windows computers remotely (PsExec/WmiExec) or interactively",
            "detection": {
                "condition": "1 of selection_*",
                "selection_cli": [
                    {
                        "CommandLine|contains|all": [
                            " user:",
                            " binary:"
                        ]
                    },
                    {
                        "CommandLine|contains|all": [
                            " user:",
                            " shellcode:"
                        ]
                    },
                    {
                        "CommandLine|contains": [
                            " technique:CreateProcessAsUserW",
                            " technique:ImpersonateLoggedOnuser"
                        ]
                    }
                ],
                "selection_img": [
                    {
                        "Image|endswith": "\\SharpImpersonation.exe"
                    },
                    {
                        "OriginalFileName": "SharpImpersonation.exe"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "f89b08d0-77ad-4728-817b-9b16c5a69c7a",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/13",
            "references": [
                "https://s3cur3th1ssh1t.github.io/SharpImpersonation-Introduction/",
                "https://github.com/S3cur3Th1sSh1t/SharpImpersonation"
            ],
            "related": [
                {
                    "id": "cf0c254b-22f1-4b2b-8221-e137b3c0af94",
                    "type": "similar"
                }
            ],
            "tags": [
                "attack.privilege_escalation",
                "attack.defense_evasion",
                "attack.t1134.001",
                "attack.t1134.003"
            ],
            "status": "test",
            "title": "HackTool - SharpImpersonation Execution"
        },
        {
            "id": "cf0c254b-22f1-4b2b-8221-e137b3c0af94",
            "author": "Sai Prashanth Pulisetti @pulisettis",
            "date": "2022/12/21",
            "description": "Detects execution of the Impersonate tool. Which can be used to manipulate tokens on a Windows computers remotely (PsExec/WmiExec) or interactively",
            "detection": {
                "condition": "all of selection_commandline_* or 1 of selection_hash_*",
                "selection_commandline_exe": {
                    "CommandLine|contains": "impersonate.exe"
                },
                "selection_commandline_opt": {
                    "CommandLine|contains": [
                        " list ",
                        " exec ",
                        " adduser "
                    ]
                },
                "selection_hash_ext": [
                    {
                        "md5": "9520714AB576B0ED01D1513691377D01"
                    },
                    {
                        "sha256": "E81CC96E2118DC4FBFE5BAD1604E0AC7681960143E2101E1A024D52264BB0A8A"
                    },
                    {
                        "Imphash": "0A358FFC1697B7A07D0E817AC740DF62"
                    }
                ],
                "selection_hash_plain": {
                    "Hashes|contains": [
                        "MD5=9520714AB576B0ED01D1513691377D01",
                        "SHA256=E81CC96E2118DC4FBFE5BAD1604E0AC7681960143E2101E1A024D52264BB0A8A",
                        "IMPHASH=0A358FFC1697B7A07D0E817AC740DF62"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/08",
            "references": [
                "https://sensepost.com/blog/2022/abusing-windows-tokens-to-compromise-active-directory-without-touching-lsass/",
                "https://github.com/sensepost/impersonate"
            ],
            "tags": [
                "attack.privilege_escalation",
                "attack.defense_evasion",
                "attack.t1134.001",
                "attack.t1134.003"
            ],
            "status": "test",
            "title": "HackTool - Impersonate Execution"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/07/08",
            "description": "Detects creation of default named pipes used by the Koh tool",
            "detection": {
                "condition": "selection",
                "selection": {
                    "PipeName|contains": [
                        "\\imposecost",
                        "\\imposingcost"
                    ]
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "0adc67e0-a68f-4ffd-9c43-28905aad5d6a",
            "level": "critical",
            "logsource": {
                "category": "pipe_created",
                "product": "windows",
                "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
            },
            "modified": "2023/08/07",
            "references": [
                "https://github.com/GhostPack/Koh/blob/0283d9f3f91cf74732ad377821986cfcb088e20a/Clients/BOF/KohClient.c#L12"
            ],
            "status": "test",
            "tags": [
                "attack.privilege_escalation",
                "attack.credential_access",
                "attack.t1528",
                "attack.t1134.001"
            ],
            "title": "HackTool - Koh Default Named Pipe"
        },
        {
            "author": "Teymur Kheirkhabarov, Ecco, Florian Roth (Nextron Systems)",
            "date": "2019/10/26",
            "description": "Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service installation",
            "detection": {
                "condition": "selection_id and 1 of selection_cli_*",
                "selection_cli_cmd": {
                    "ImagePath|contains": [
                        "cmd",
                        "%COMSPEC%"
                    ],
                    "ImagePath|contains|all": [
                        "/c",
                        "echo",
                        "\\pipe\\"
                    ]
                },
                "selection_cli_rundll": {
                    "ImagePath|contains|all": [
                        "rundll32",
                        ".dll,a",
                        "/p:"
                    ]
                },
                "selection_cli_share": {
                    "ImagePath|startswith": "\\\\\\\\127.0.0.1\\\\ADMIN$\\"
                },
                "selection_id": {
                    "EventID": 7045,
                    "Provider_Name": "Service Control Manager"
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "843544a7-56e0-4dcc-a44f-5cc266dd97d6",
            "level": "high",
            "logsource": {
                "product": "windows",
                "service": "system"
            },
            "modified": "2023/11/15",
            "references": [
                "https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment",
                "https://blog.cobaltstrike.com/2014/04/02/what-happens-when-i-type-getsystem/"
            ],
            "status": "test",
            "title": "Meterpreter or Cobalt Strike Getsystem Service Installation - System",
            "tags": [
                "attack.privilege_escalation",
                "attack.t1134.001",
                "attack.t1134.002"
            ]
        },
        {
            "author": "Stamatis Chatzimangou (st0pp3r)",
            "date": "2024/01/05",
            "description": "Detects execution of NoFilter, a tool for abusing the Windows Filtering Platform for privilege escalation via hardcoded policy name indicators\n",
            "detection": {
                "condition": "1 of selection_*",
                "selection_5447": {
                    "EventID": 5447,
                    "FilterName|contains": "RonPolicy"
                },
                "selection_5449": {
                    "EventID": 5449,
                    "ProviderContextName|contains": "RonPolicy"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "7b14c76a-c602-4ae6-9717-eff868153fc0",
            "level": "high",
            "logsource": {
                "definition": "Requirements: Audit Filtering Platform Policy Change needs to be enabled",
                "product": "windows",
                "service": "security"
            },
            "references": [
                "https://github.com/deepinstinct/NoFilter/blob/121d215ab130c5e8e3ad45a7e7fcd56f4de97b4d/NoFilter/Consts.cpp",
                "https://github.com/deepinstinct/NoFilter",
                "https://www.deepinstinct.com/blog/nofilter-abusing-windows-filtering-platform-for-privilege-escalation",
                "https://x.com/_st0pp3r_/status/1742203752361128162?s=20"
            ],
            "status": "experimental",
            "tags": [
                "attack.privilege_escalation",
                "attack.t1134",
                "attack.t1134.001"
            ],
            "title": "HackTool - NoFilter Execution"
        },
        {
            "author": "Teymur Kheirkhabarov, Ecco, Florian Roth (Nextron Systems)",
            "date": "2019/10/26",
            "description": "Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service installation",
            "detection": {
                "condition": "selection_eid and 1 of selection_cli_*",
                "selection_cli_cmd": {
                    "ServiceFileName|contains": [
                        "cmd",
                        "%COMSPEC%"
                    ],
                    "ServiceFileName|contains|all": [
                        "/c",
                        "echo",
                        "\\pipe\\"
                    ]
                },
                "selection_cli_rundll": {
                    "ServiceFileName|contains|all": [
                        "rundll32",
                        ".dll,a",
                        "/p:"
                    ]
                },
                "selection_cli_share": {
                    "ServiceFileName|startswith": "\\\\\\\\127.0.0.1\\\\ADMIN$\\"
                },
                "selection_eid": {
                    "EventID": 4697
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "ecbc5e16-58e0-4521-9c60-eb9a7ea4ad34",
            "level": "high",
            "logsource": {
                "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697",
                "product": "windows",
                "service": "security"
            },
            "modified": "2023/11/15",
            "related": [
                {
                    "type": "derived",
                    "id": "843544a7-56e0-4dcc-a44f-5cc266dd97d6"
                }
            ],
            "references": [
                "https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment",
                "https://blog.cobaltstrike.com/2014/04/02/what-happens-when-i-type-getsystem/"
            ],
            "status": "test",
            "tags": [
                "attack.privilege_escalation",
                "attack.t1134.001",
                "attack.t1134.002"
            ],
            "title": "Meterpreter or Cobalt Strike Getsystem Service Installation - Security"
        },
        {
            "author": "Michaela Adams, Zach Mathis",
            "date": "2022/11/06",
            "description": "Detects potential token impersonation and theft. Example, when using \"DuplicateToken(Ex)\" and \"ImpersonateLoggedOnUser\" with the \"LOGON32_LOGON_NEW_CREDENTIALS flag\".",
            "detection": {
                "condition": "selection",
                "selection": {
                    "AuthenticationPackageName": "Negotiate",
                    "EventID": 4624,
                    "ImpersonationLevel": "%%1833",
                    "LogonProcessName": "Advapi",
                    "LogonType": 9
                }
            },
            "falsepositives": [
                "Anti-Virus"
            ],
            "id": "02f7c9c1-1ae8-4c6a-8add-04693807f92f",
            "level": "medium",
            "logsource": {
                "product": "windows",
                "service": "security"
            },
            "modified": "2023/04/26",
            "references": [
                "https://www.elastic.co/fr/blog/how-attackers-abuse-access-token-manipulation",
                "https://www.manageengine.com/log-management/cyber-security/access-token-manipulation.html"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1134.001",
                "stp.4u"
            ],
            "title": "Potential Access Token Abuse"
        }
    ]
}