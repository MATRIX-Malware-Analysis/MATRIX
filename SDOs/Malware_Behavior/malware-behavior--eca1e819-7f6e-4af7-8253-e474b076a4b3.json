{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--eca1e819-7f6e-4af7-8253-e474b076a4b3",
    "created": "2024-08-13T14:46:36.684307Z",
    "modified": "2024-08-13T14:46:48.43432Z",
    "name": "Boot or Logon Autostart Execution: Shortcut Modification",
    "description": "Adversaries may create or modify shortcuts that can execute a program during system boot or user login. Shortcuts or symbolic links are used to reference other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.Adversaries may abuse shortcuts in the startup folder to execute their tools and achieve persistence.[1] Although often used as payloads in an infection chain (e.g. Spearphishing Attachment), adversaries may also create a new shortcut as a means of indirection, while also abusing Masquerading to make the malicious shortcut appear as a legitimate program. Adversaries can also edit the target path or entirely replace an existing shortcut so their malware will be executed instead of the intended legitimate program.Shortcuts can also be abused to establish persistence by implementing other methods. For example, LNK browser extensions may be modified (e.g. Browser Extensions) to persistently launch malware.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1547/009",
            "external_id": "T1547/009"
        },
        {
            "source_name": "CAPEC 132",
            "external_id": "malware-behavior--a96420fa-513e-4de3-a626-ffab8d8bc83b"
        }
    ],
    "x_mitre_capa_rules": [
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "bytes": "01 14 02 00 00 00 00 00 C0 00 00 00 00 00 00 46 = CLSID_ShellLink"
                            },
                            {
                                "or": [
                                    {
                                        "bytes": "EE 14 02 00 00 00 00 00 C0 00 00 00 00 00 00 46 = IID_IShellLinkA"
                                    },
                                    {
                                        "bytes": "F9 14 02 00 00 00 00 00 C0 00 00 00 00 00 00 46 = IID_IShellLinkW"
                                    }
                                ]
                            },
                            {
                                "bytes": "0B 01 00 00 00 00 00 00 C0 00 00 00 00 00 00 46 = IID_IPersistFile"
                            },
                            {
                                "offset": "0x50 = psl->SetPath"
                            },
                            {
                                "offset": "0x18 = ppf->Save"
                            },
                            {
                                "api": "ole32.CoCreateInstance"
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Persistence::Boot or Logon Autostart Execution::Shortcut Modification [T1547.009]"
                    ],
                    "authors": [
                        "matthew.williams@mandiant.com"
                    ],
                    "examples": [
                        "7f403f7d643d90c7cbadf3ccfc68bd1badf06f89a35af5fc7811920e820bbcc9:0x10001380"
                    ],
                    "name": "create shortcut via IShellLink",
                    "namespace": "persistence",
                    "references": [
                        "https://docs.microsoft.com/en-us/windows/win32/shell/links#creating-a-shortcut-and-a-folder-shortcut-to-a-file"
                    ],
                    "scopes": {
                        "dynamic": "unsupported",
                        "static": "function"
                    }
                }
            }
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "frack113",
            "date": "2021/12/30",
            "description": "Adversaries may execute their own malicious payloads by hijacking vulnerable file path references.\nAdversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch.\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "TargetFilename": "C:\\program.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "8c3c76ca-8f8b-4b1d-aaf3-81aebcd367c9",
            "level": "high",
            "logsource": {
                "category": "file_event",
                "product": "windows"
            },
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1574.009/T1574.009.md"
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.t1547.009"
            ],
            "title": "Creation Exe for Service with Unquoted Path"
        },
        {
            "author": "Maxime Thiebaut (@0xThiebaut), Tim Shelton (HAWK.IO)",
            "date": "2020/03/19",
            "description": "Detects unusual processes accessing desktop.ini, which can be leveraged to alter how Explorer displays a folder's content (i.e. renaming files) without changing them on disk.",
            "detection": {
                "condition": "selection and not 1 of filter_*",
                "filter_generic": {
                    "Image|startswith": [
                        "C:\\Windows\\",
                        "C:\\Program Files\\",
                        "C:\\Program Files (x86)\\"
                    ]
                },
                "filter_jetbrains": {
                    "Image|endswith": "\\AppData\\Local\\JetBrains\\Toolbox\\bin\\7z.exe",
                    "TargetFilename|contains": "\\JetBrains\\apps\\"
                },
                "filter_upgrade": {
                    "TargetFilename|startswith": "C:\\$WINDOWS.~BT\\NewOS\\"
                },
                "selection": {
                    "TargetFilename|endswith": "\\desktop.ini"
                }
            },
            "falsepositives": [
                "Operations performed through Windows SCCM or equivalent",
                "Read only access list authority"
            ],
            "id": "81315b50-6b60-4d8f-9928-3466e1022515",
            "level": "medium",
            "logsource": {
                "category": "file_event",
                "product": "windows"
            },
            "modified": "2022/10/07",
            "status": "test",
            "references": [
                "https://isc.sans.edu/forums/diary/Desktopini+as+a+postexploitation+tool/25912/"
            ],
            "tags": [
                "attack.persistence",
                "attack.t1547.009"
            ],
            "title": "Suspicious desktop.ini Action"
        },
        {
            "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
            "date": "2021/12/29",
            "description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims.\nThe Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time.\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "TargetFilename|contains": [
                        ":\\Windows\\apppatch\\Custom\\",
                        ":\\Windows\\apppatch\\CustomSDB\\"
                    ]
                }
            },
            "falsepositives": [
                "Legitimate custom SHIM installations will also trigger this rule"
            ],
            "id": "ee63c85c-6d51-4d12-ad09-04e25877a947",
            "level": "medium",
            "logsource": {
                "category": "file_event",
                "product": "windows"
            },
            "modified": "2023/12/06",
            "status": "test",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1546.011/T1546.011.md#atomic-test-2---new-shim-database-files-created-in-the-default-shim-database-directory",
                "https://www.mandiant.com/resources/blog/fin7-shim-databases-persistence",
                "https://liberty-shell.com/sec/2020/02/25/shim-persistence/",
                "https://andreafortuna.org/2018/11/12/process-injection-and-persistence-using-application-shimming/"
            ],
            "tags": [
                "attack.persistence",
                "attack.t1547.009"
            ],
            "title": "New Custom Shim Database Created"
        },
        {
            "author": "Tim Shelton (HAWK.IO)",
            "date": "2021/12/06",
            "description": "Detects unusual processes accessing desktop.ini remotely over network share, which can be leveraged to alter how Explorer displays a folder's content (i.e. renaming files) without changing them on disk.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "AccessList|contains": [
                        "WriteData",
                        "DELETE",
                        "WriteDAC",
                        "AppendData",
                        "AddSubdirectory"
                    ],
                    "EventID": 5145,
                    "ObjectType": "File",
                    "RelativeTargetName|endswith": "\\desktop.ini"
                }
            },
            "falsepositives": [
                "Read only access list authority"
            ],
            "id": "35bc7e28-ee6b-492f-ab04-da58fcf6402e",
            "level": "medium",
            "logsource": {
                "product": "windows",
                "service": "security"
            },
            "modified": "2022/01/16",
            "status": "test",
            "references": [
                "https://isc.sans.edu/forums/diary/Desktopini+as+a+postexploitation+tool/25912/"
            ],
            "tags": [
                "attack.persistence",
                "attack.t1547.009"
            ],
            "title": "Windows Network Access Suspicious desktop.ini Action"
        }
    ]
}