{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--090d7388-8245-4653-8195-c49eab0c3036",
    "created": "2024-08-13T14:46:36.684307Z",
    "modified": "2024-08-13T14:46:48.517055Z",
    "name": "Group Policy Discovery",
    "description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path \\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\.[1][2]Adversaries may use commands such as gpresult or various publicly available PowerShell functions, such as Get-DomainGPO and Get-DomainGPOLocalGroup, to gather information on Group Policy settings.[3][4] Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. Domain or Tenant Policy Modification) for their benefit.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1615",
            "external_id": "T1615"
        },
        {
            "source_name": "CAPEC 576",
            "external_id": "malware-behavior--46538d03-15e2-40e9-8298-09a3b4ea7dfb"
        },
        {
            "source_name": "mitre-attack",
            "url": "https://attack.mitre.org/techniques/T1615",
            "external_id": "T1615"
        },
        {
            "source_name": "ADSecurity GPO Persistence 2016",
            "description": "Metcalf, S. (2016, March 14). Sneaky Active Directory Persistence #17: Group Policy. Retrieved March 5, 2019.",
            "url": "https://adsecurity.org/?p=2716"
        },
        {
            "source_name": "Microsoft gpresult",
            "description": "Microsoft. (2017, October 16). gpresult. Retrieved August 6, 2021.",
            "url": "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/gpresult"
        },
        {
            "source_name": "Github PowerShell Empire",
            "description": "Schroeder, W., Warner, J., Nelson, M. (n.d.). Github PowerShellEmpire. Retrieved April 28, 2016.",
            "url": "https://github.com/PowerShellEmpire/Empire"
        },
        {
            "source_name": "TechNet Group Policy Basics",
            "description": "srachui. (2012, February 13). Group Policy Basics \u2013 Part 1: Understanding the Structure of a Group Policy Object. Retrieved March 5, 2019.",
            "url": "https://blogs.technet.microsoft.com/musings_of_a_technical_tam/2012/02/13/group-policy-basics-part-1-understanding-the-structure-of-a-group-policy-object/"
        }
    ],
    "x_mitre_capa_rules": [
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "os": "windows"
                            },
                            {
                                "or": [
                                    {
                                        "substring": "gpresult"
                                    },
                                    {
                                        "substring": "GPRESULT"
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Discovery::Group Policy Discovery [T1615]"
                    ],
                    "authors": [
                        "william.ballenthin@mandiant.com"
                    ],
                    "examples": [
                        "9e4d06759f278255073f9ac7b31a115a:0x100068B7"
                    ],
                    "name": "discover Group Policy via gpresult",
                    "namespace": "collection/group-policy",
                    "scopes": {
                        "dynamic": "thread",
                        "static": "function"
                    }
                }
            }
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/02/08",
            "description": "Detects execution of the built-in script located in \"C:\\Windows\\System32\\gatherNetworkInfo.vbs\". Which can be used to gather information about the target machine",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "Image|endswith": [
                        "\\cscript.exe",
                        "\\wscript.exe"
                    ]
                },
                "selection": {
                    "CommandLine|contains": "gatherNetworkInfo.vbs"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "07aa184a-870d-413d-893a-157f317f6f58",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://posts.slayerlabs.com/living-off-the-land/#gathernetworkinfovbs",
                "https://www.mandiant.com/resources/blog/trojanized-windows-installers-ukrainian-government"
            ],
            "related": [
                {
                    "id": "f92a6f1e-a512-4a15-9735-da09e78d7273",
                    "type": "similar"
                },
                {
                    "id": "575dce0c-8139-4e30-9295-1ee75969f7fe",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.discovery",
                "attack.execution",
                "attack.t1615",
                "attack.t1059.005"
            ],
            "title": "Suspicious Reconnaissance Activity Via GatherNetworkInfo.VBS"
        },
        {
            "author": "frack113",
            "date": "2022/05/01",
            "description": "Detects cases in which a user uses the built-in Windows utility gpresult to display the Resultant Set of Policy (RSoP) information",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains": [
                        "/z",
                        "/v"
                    ],
                    "Image|endswith": "\\gpresult.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "e56d3073-83ff-4021-90fe-c658e0709e72",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1615/T1615.md",
                "https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/gpresult",
                "https://unit42.paloaltonetworks.com/emissary-trojan-changelog-did-operation-lotus-blossom-cause-it-to-evolve/",
                "https://www.welivesecurity.com/wp-content/uploads/2020/05/ESET_Turla_ComRAT.pdf"
            ],
            "status": "test",
            "tags": [
                "attack.discovery",
                "attack.t1615"
            ],
            "title": "Gpresult Display Group Policy Information"
        },
        {
            "id": "575dce0c-8139-4e30-9295-1ee75969f7fe",
            "author": "blueteamer8699",
            "date": "2022/01/03",
            "description": "Detects execution of the built-in script located in \"C:\\Windows\\System32\\gatherNetworkInfo.vbs\". Which can be used to gather information about the target machine",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains": "gatherNetworkInfo.vbs"
                },
                "selection_img": [
                    {
                        "Image|endswith": [
                            "\\cscript.exe",
                            "\\wscript.exe"
                        ]
                    },
                    {
                        "OriginalFileName": [
                            "cscript.exe",
                            "wscript.exe"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Administrative activity"
            ],
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://posts.slayerlabs.com/living-off-the-land/#gathernetworkinfovbs",
                "https://www.mandiant.com/resources/blog/trojanized-windows-installers-ukrainian-government"
            ],
            "modified": "2023/02/08",
            "related": [
                {
                    "id": "f92a6f1e-a512-4a15-9735-da09e78d7273",
                    "type": "similar"
                },
                {
                    "type": "similar",
                    "id": "07aa184a-870d-413d-893a-157f317f6f58"
                }
            ],
            "status": "test",
            "tags": [
                "attack.discovery",
                "attack.execution",
                "attack.t1615",
                "attack.t1059.005"
            ],
            "title": "Potential Reconnaissance Activity Via GatherNetworkInfo.VBS"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2022/08/20",
            "description": "Detects the use of SharpUp, a tool for local privilege escalation",
            "detection": {
                "condition": "selection",
                "selection": [
                    {
                        "Image|endswith": "\\SharpUp.exe"
                    },
                    {
                        "Description": "SharpUp"
                    },
                    {
                        "CommandLine|contains": [
                            "HijackablePaths",
                            "UnquotedServicePath",
                            "ProcessDLLHijack",
                            "ModifiableServiceBinaries",
                            "ModifiableScheduledTask",
                            "DomainGPPPassword",
                            "CachedGPPPassword"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "c484e533-ee16-4a93-b6ac-f0ea4868b2f1",
            "level": "critical",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/13",
            "references": [
                "https://github.com/GhostPack/SharpUp"
            ],
            "status": "test",
            "tags": [
                "attack.privilege_escalation",
                "attack.t1615",
                "attack.t1569.002",
                "attack.t1574.005"
            ],
            "title": "HackTool - SharpUp PrivEsc Tool Execution"
        },
        {
            "author": "frack113",
            "date": "2022/06/04",
            "description": "Detect use of Get-GPO to get one GPO or all the GPOs in a domain.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "ScriptBlockText|contains": "Get-GPO"
                }
            },
            "falsepositives": [
                "Legitimate PowerShell scripts"
            ],
            "id": "eb2fd349-ec67-4caa-9143-d79c7fb34441",
            "level": "low",
            "logsource": {
                "category": "ps_script",
                "product": "windows",
                "definition": "Requirements: Script Block Logging must be enabled"
            },
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1615/T1615.md",
                "https://learn.microsoft.com/en-us/powershell/module/grouppolicy/get-gpo?view=windowsserver2022-ps"
            ],
            "status": "test",
            "tags": [
                "attack.discovery",
                "attack.t1615"
            ],
            "title": "Suspicious GPO Discovery With Get-GPO"
        }
    ],
    "x_mitre_platforms": [
        "Windows"
    ],
    "x_mitre_domains": [
        "enterprise-attack"
    ],
    "x_mitre_contributors": [
        "Ted Samuels, Rapid7",
        "Jonhnathan Ribeiro, 3CORESec, @_w0rk3r"
    ],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "discovery"
        }
    ],
    "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor for suspicious use of <code>gpresult</code>. Monitor for the use of PowerShell functions such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code> and processes spawning with command-line arguments containing <code>GPOLocalGroup</code>.\n\nMonitor for abnormal LDAP queries with filters for <code>groupPolicyContainer</code> and high volumes of LDAP traffic to domain controllers. Windows Event ID 4661 can also be used to detect when a directory service has been accessed.",
    "x_mitre_is_subtechnique": false,
    "x_mitre_version": "1.1",
    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
    "x_mitre_data_sources": [
        "Script: Script Execution",
        "Active Directory: Active Directory Object Access",
        "Process: Process Creation",
        "Command: Command Execution",
        "Network Traffic: Network Traffic Content"
    ],
    "x_mitre_permissions_required": []
}