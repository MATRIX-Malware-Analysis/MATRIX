{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--b01f9f1d-faf9-4abe-9902-6d4e96d2fcc8",
    "created": "2024-08-13T14:46:36.684307Z",
    "modified": "2024-08-13T14:46:45.860488Z",
    "name": "Boot or Logon Autostart Execution: Kernel Modules and Extensions",
    "description": "Adversaries may modify the kernel to automatically execute programs on system boot. Loadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system.[1]\u00a0When used maliciously, LKMs can be a type of kernel-mode Rootkit that run with the highest operating system privilege (Ring 0).[2]\u00a0Common features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors, and enabling root access to non-privileged users.[3]Kernel extensions, also called kext, are used in macOS to load functionality onto a system similar to LKMs for Linux. Since the kernel is responsible for enforcing security and the kernel extensions run as apart of the kernel, kexts are not governed by macOS security policies. Kexts are loaded and unloaded through kextload and kextunload commands. Kexts need to be signed with a developer ID that is granted privileges by Apple allowing it to sign Kernel extensions. Developers without these privileges may still sign kexts but they will not load unless SIP is disabled. If SIP is enabled, the kext signature is verified before being added to the AuxKC.[4]Since macOS Catalina 10.15, kernel extensions have been deprecated in favor of System Extensions. However, kexts are still allowed as 'Legacy System Extensions' since there is no System Extension for Kernel Programming Interfaces.[5]Adversaries can use LKMs and kexts to conduct Persistence and/or Privilege Escalation on a system. Examples have been found in the wild, and there are some relevant open source projects as well.[6][7][8][9][10][11][12][13]",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1547/006",
            "external_id": "T1547/006"
        },
        {
            "source_name": "CAPEC 552",
            "external_id": "malware-behavior--6e2813cf-fb3d-4491-9d22-46b492ff8de9"
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "Pawel Mazur",
            "date": "2021/11/02",
            "description": "Detects loading of kernel modules with insmod command.\nLoadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand.\nAdversaries may use LKMs to obtain persistence within the system or elevate the privileges.\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "comm": "insmod",
                    "exe": "/usr/bin/kmod",
                    "type": "SYSCALL"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "106d7cbd-80ff-4985-b682-a7043e5acb72",
            "level": "high",
            "logsource": {
                "product": "linux",
                "service": "auditd"
            },
            "modified": "2022/12/25",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1547.006/T1547.006.md",
                "https://linux.die.net/man/8/insmod",
                "https://man7.org/linux/man-pages/man8/kmod.8.html"
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.t1547.006"
            ],
            "title": "Loading of Kernel Module via Insmod"
        }
    ]
}