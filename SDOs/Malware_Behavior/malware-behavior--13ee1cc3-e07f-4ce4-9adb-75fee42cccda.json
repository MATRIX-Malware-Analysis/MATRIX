{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--13ee1cc3-e07f-4ce4-9adb-75fee42cccda",
    "created": "2024-08-13T14:46:36.99311Z",
    "modified": "2024-08-13T14:46:48.490031Z",
    "name": "Windows Command Shell: ",
    "description": "Adversaries may abuse the Windows command shell for execution. The Windows command shell (cmd) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via Remote Services such as SSH.[1]Batch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.Adversaries may leverage cmd to execute various commands and payloads. Common uses include cmd to execute a single command, or abusing cmd interactively with input and output forwarded over a command and control channel.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1059/003",
            "external_id": "T1059/003"
        }
    ],
    "x_mitre_capa_rules": [
        {
            "rule": {
                "features": [
                    {
                        "or": [
                            {
                                "and": [
                                    {
                                        "match": "create pipe"
                                    },
                                    {
                                        "api": "kernel32.PeekNamedPipe"
                                    },
                                    {
                                        "api": "kernel32.CreateProcess"
                                    },
                                    {
                                        "api": "kernel32.ReadFile"
                                    },
                                    {
                                        "api": "kernel32.WriteFile"
                                    }
                                ]
                            },
                            {
                                "and": [
                                    {
                                        "match": "host-interaction/process/create"
                                    },
                                    {
                                        "match": "read pipe"
                                    },
                                    {
                                        "match": "write pipe"
                                    }
                                ]
                            },
                            {
                                "and": [
                                    {
                                        "match": "create pipe"
                                    },
                                    {
                                        "match": "host-interaction/process/create"
                                    },
                                    {
                                        "or": [
                                            {
                                                "basic block": [
                                                    {
                                                        "and": [
                                                            {
                                                                "count(api(SetHandleInformation))": "2 or more"
                                                            },
                                                            {
                                                                "number": "1 = HANDLE_FLAG_INHERIT"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "call": [
                                                    {
                                                        "and": [
                                                            {
                                                                "count(api(SetHandleInformation))": "2 or more"
                                                            },
                                                            {
                                                                "number": "1 = HANDLE_FLAG_INHERIT"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Execution::Command and Scripting Interpreter::Windows Command Shell [T1059.003]"
                    ],
                    "authors": [
                        "moritz.raabe@mandiant.com"
                    ],
                    "examples": [
                        "C91887D861D9BD4A5872249B641BC9F9:0x401A77"
                    ],
                    "mbc": [
                        "Impact::Remote Access::Reverse Shell [B0022.001]"
                    ],
                    "name": "create reverse shell",
                    "namespace": "communication/c2/shell",
                    "scopes": {
                        "dynamic": "thread",
                        "static": "function"
                    }
                }
            }
        },
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "match": "create a process with modified I/O handles and window"
                            },
                            {
                                "match": "create pipe"
                            },
                            {
                                "or": [
                                    {
                                        "match": "get COMSPEC environment variable"
                                    },
                                    {
                                        "string": "\\cmd.exe"
                                    },
                                    {
                                        "string": "cmd.exe"
                                    },
                                    {
                                        "string": "cmd.exe /c "
                                    },
                                    {
                                        "string": "C:\\Windows\\system32\\cmd.exe"
                                    }
                                ]
                            },
                            {
                                "optional": [
                                    {
                                        "api": "kernel32.GetSystemDirectory"
                                    },
                                    {
                                        "api": "kernel32.SetCurrentDirectory"
                                    },
                                    {
                                        "match": "create thread"
                                    },
                                    {
                                        "match": "read pipe"
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Execution::Command and Scripting Interpreter::Windows Command Shell [T1059.003]"
                    ],
                    "authors": [
                        "matthew.williams@mandiant.com"
                    ],
                    "examples": [
                        "Practical Malware Analysis Lab 14-02.exe_:0x4011C0"
                    ],
                    "name": "execute shell command and capture output",
                    "namespace": "communication/c2/shell",
                    "references": [
                        "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/ns-processthreadsapi-startupinfoa"
                    ],
                    "scopes": {
                        "dynamic": "thread",
                        "static": "function"
                    }
                }
            }
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "faloker",
            "date": "2020/02/12",
            "description": "Detects changes to the EC2 instance startup script. The shell script will be executed as root/SYSTEM every time the specific instances are booted up.",
            "detection": {
                "condition": "selection_source",
                "selection_source": {
                    "eventName": "ModifyInstanceAttribute",
                    "eventSource": "ec2.amazonaws.com",
                    "requestParameters.attribute": "userData"
                }
            },
            "falsepositives": [
                "Valid changes to the startup script"
            ],
            "id": "1ab3c5ed-5baf-417b-bb6b-78ca33f6c3df",
            "level": "high",
            "logsource": {
                "product": "aws",
                "service": "cloudtrail"
            },
            "modified": "2022/06/07",
            "references": [
                "https://github.com/RhinoSecurityLabs/pacu/blob/866376cd711666c775bbfcde0524c817f2c5b181/pacu/modules/ec2__startup_shell_script/main.py#L9"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1059.001",
                "attack.t1059.003",
                "attack.t1059.004"
            ],
            "title": "AWS EC2 Startup Shell Script Change"
        },
        {
            "author": "Ali Alwashali",
            "date": "2023/10/10",
            "description": "Detects the creation of files in a specific location by ScreenConnect RMM.\nScreenConnect has feature to remotely execute binaries on a target machine. These binaries will be dropped to \":\\Users\\<username>\\Documents\\ConnectWiseControl\\Temp\\\" before execution.\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Image|endswith": "\\ScreenConnect.WindowsClient.exe",
                    "TargetFilename|contains": "\\Documents\\ConnectWiseControl\\Temp\\"
                }
            },
            "falsepositives": [
                "Legitimate use of ScreenConnect"
            ],
            "id": "0afecb6e-6223-4a82-99fb-bf5b981e92a5",
            "level": "low",
            "logsource": {
                "category": "file_event",
                "product": "windows"
            },
            "references": [
                "https://github.com/SigmaHQ/sigma/pull/4467"
            ],
            "related": [
                {
                    "id": "b1f73849-6329-4069-bc8f-78a604bb8b23",
                    "type": "similar"
                }
            ],
            "status": "experimental",
            "tags": [
                "attack.execution",
                "attack.t1059.003"
            ],
            "title": "Remote Access Tool - ScreenConnect Temporary File"
        },
        {
            "author": "Maxim Pavlunin",
            "date": "2020/04/01",
            "description": "Detects a suspicious execution of a Microsoft HTML Help (HH.exe)",
            "detection": {
                "condition": "all of selection_*",
                "selection_img": [
                    {
                        "OriginalFileName": "HH.exe"
                    },
                    {
                        "Image|endswith": "\\hh.exe"
                    }
                ],
                "selection_paths": {
                    "CommandLine|contains": [
                        ".application",
                        "\\AppData\\Local\\Temp\\",
                        "\\Content.Outlook\\",
                        "\\Downloads\\",
                        "\\Users\\Public\\",
                        "\\Windows\\Temp\\"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "e8a95b5e-c891-46e2-b33a-93937d3abc31",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/04/12",
            "references": [
                "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/chm-badness-delivers-a-banking-trojan/",
                "https://github.com/elastic/protections-artifacts/commit/746086721fd385d9f5c6647cada1788db4aea95f#diff-27939090904026cc396b0b629c8e4314acd6f5dac40a676edbc87f4567b47eb7",
                "https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/higaisa-or-winnti-apt-41-backdoors-old-and-new/",
                "https://www.zscaler.com/blogs/security-research/unintentional-leak-glimpse-attack-vectors-apt37"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.execution",
                "attack.initial_access",
                "attack.t1047",
                "attack.t1059.001",
                "attack.t1059.003",
                "attack.t1059.005",
                "attack.t1059.007",
                "attack.t1218",
                "attack.t1218.001",
                "attack.t1218.010",
                "attack.t1218.011",
                "attack.t1566",
                "attack.t1566.001"
            ],
            "title": "Suspicious HH.EXE Execution"
        },
        {
            "author": "_pete_0, TheDFIRReport",
            "date": "2022/05/06",
            "description": "Detects use of Cobalt Strike commands accidentally entered in the CMD shell",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains": [
                        "psinject",
                        "spawnas",
                        "make_token",
                        "remote-exec",
                        "rev2self",
                        "dcsync",
                        "logonpasswords",
                        "execute-assembly",
                        "getsystem"
                    ],
                    "CommandLine|startswith": [
                        "cmd ",
                        "cmd.exe",
                        "c:\\windows\\system32\\cmd.exe"
                    ]
                },
                "selection_img": [
                    {
                        "OriginalFileName": "Cmd.Exe"
                    },
                    {
                        "Image|endswith": "\\cmd.exe"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "647c7b9e-d784-4fda-b9a0-45c565a7b729",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/01/30",
            "references": [
                "https://hstechdocs.helpsystems.com/manuals/cobaltstrike/current/userguide/content/cobalt-4-5-user-guide.pdf",
                "https://thedfirreport.com/2021/10/04/bazarloader-and-the-conti-leaks/",
                "https://thedfirreport.com/2022/06/16/sans-ransomware-summit-2022-can-you-detect-this/"
            ],
            "related": [
                {
                    "id": "4f154fb6-27d1-4813-a759-78b93e0b9c48",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1059.003",
                "stp.1u"
            ],
            "title": "Operator Bloopers Cobalt Strike Commands"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2022/01/20",
            "description": "Detects the execution of AdvancedRun utility",
            "detection": {
                "condition": "selection",
                "selection": [
                    {
                        "OriginalFileName": "AdvancedRun.exe"
                    },
                    {
                        "CommandLine|contains|all": [
                            " /EXEFilename ",
                            " /Run"
                        ]
                    },
                    {
                        "CommandLine|contains|all": [
                            " /WindowState 0",
                            " /RunAs ",
                            " /CommandLine "
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "d2b749ee-4225-417e-b20e-a8d2193cbb84",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/21",
            "references": [
                "https://twitter.com/splinter_code/status/1483815103279603714",
                "https://medium.com/s2wblog/analysis-of-destructive-malware-whispergate-targeting-ukraine-9d5d158f19f3",
                "https://elastic.github.io/security-research/malware/2022/01/01.operation-bleeding-bear/article/",
                "https://www.winhelponline.com/blog/run-program-as-system-localsystem-account-windows/"
            ],
            "related": [
                {
                    "id": "fa00b701-44c6-4679-994d-5a18afa8a707",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.defense_evasion",
                "attack.privilege_escalation",
                "attack.t1564.003",
                "attack.t1134.002",
                "attack.t1059.003"
            ],
            "title": "PUA - AdvancedRun Execution"
        },
        {
            "author": "Jose Luis Sanchez Martinez (@Joseliyo_Jstnk)",
            "date": "2022/05/24",
            "description": "Detects the use of Jlaive to execute assemblies in a copied PowerShell",
            "detection": {
                "condition": "parent_selection and (1 of selection*)",
                "parent_selection": {
                    "ParentCommandLine|endswith": ".bat",
                    "ParentImage|endswith": "\\cmd.exe"
                },
                "selection1": {
                    "CommandLine|contains|all": [
                        "powershell.exe",
                        ".bat.exe"
                    ],
                    "Image|endswith": "\\xcopy.exe"
                },
                "selection2": {
                    "CommandLine|contains|all": [
                        "pwsh.exe",
                        ".bat.exe"
                    ],
                    "Image|endswith": "\\xcopy.exe"
                },
                "selection3": {
                    "CommandLine|contains|all": [
                        "+s",
                        "+h",
                        ".bat.exe"
                    ],
                    "Image|endswith": "\\attrib.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "0a99eb3e-1617-41bd-b095-13dc767f3def",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/22",
            "references": [
                "https://jstnk9.github.io/jstnk9/research/Jlaive-Antivirus-Evasion-Tool",
                "https://web.archive.org/web/20220514073704/https://github.com/ch2sh/Jlaive"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1059.003"
            ],
            "title": "HackTool - Jlaive In-Memory Assembly Execution"
        },
        {
            "author": "Thomas Patzke",
            "date": "2020/05/22",
            "description": "Detects various execution patterns of the CrackMapExec pentesting framework",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains": [
                        "cmd.exe /Q /c * 1> \\\\\\\\*\\\\*\\\\* 2>&1",
                        "cmd.exe /C * > \\\\\\\\*\\\\*\\\\* 2>&1",
                        "cmd.exe /C * > *\\\\Temp\\\\* 2>&1",
                        "powershell.exe -exec bypass -noni -nop -w 1 -C \"",
                        "powershell.exe -noni -nop -w 1 -enc "
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "058f4380-962d-40a5-afce-50207d36d7e2",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/11/06",
            "references": [
                "https://github.com/byt3bl33d3r/CrackMapExec"
            ],
            "status": "stable",
            "tags": [
                "attack.execution",
                "attack.t1047",
                "attack.t1053",
                "attack.t1059.003",
                "attack.t1059.001",
                "attack.s0106"
            ],
            "title": "HackTool - CrackMapExec Execution Patterns"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2022/02/25",
            "description": "This rule detect common flag combinations used by CrackMapExec in order to detect its use even if the binary has been replaced.",
            "detection": {
                "condition": "1 of selection_* or all of part_localauth*",
                "part_localauth_1": {
                    "CommandLine|contains|all": [
                        " --local-auth",
                        " -u ",
                        " -p "
                    ]
                },
                "part_localauth_2": {
                    "CommandLine|contains|all": [
                        " 10.",
                        " 192.168.",
                        "/24 "
                    ]
                },
                "selection_binary": {
                    "Image|endswith": "\\crackmapexec.exe"
                },
                "selection_execute": {
                    "CommandLine|contains|all": [
                        " --local-auth",
                        " -u ",
                        " -x "
                    ]
                },
                "selection_hash": {
                    "CommandLine|contains|all": [
                        " --local-auth",
                        " -u ",
                        " -p ",
                        " -H 'NTHASH'"
                    ]
                },
                "selection_module_mssql": {
                    "CommandLine|contains|all": [
                        " mssql ",
                        " -u ",
                        " -p ",
                        " -M ",
                        " -d "
                    ]
                },
                "selection_module_smb1": {
                    "CommandLine|contains|all": [
                        " smb ",
                        " -u ",
                        " -H ",
                        " -M ",
                        " -o "
                    ]
                },
                "selection_module_smb2": {
                    "CommandLine|contains|all": [
                        " smb ",
                        " -u ",
                        " -p ",
                        " --local-auth"
                    ]
                },
                "selection_special": {
                    "CommandLine|contains": " -M pe_inject "
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "fields": [
                "ComputerName",
                "User",
                "CommandLine"
            ],
            "id": "42a993dd-bb3e-48c8-b372-4d6684c4106c",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/03/08",
            "status": "test",
            "references": [
                "https://mpgn.gitbook.io/crackmapexec/smb-protocol/authentication/checking-credentials-local",
                "https://www.mandiant.com/resources/telegram-malware-iranian-espionage",
                "https://www.infosecmatter.com/crackmapexec-module-library/?cmem=mssql-mimikatz",
                "https://www.infosecmatter.com/crackmapexec-module-library/?cmem=smb-pe_inject"
            ],
            "tags": [
                "attack.execution",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.credential_access",
                "attack.discovery",
                "attack.t1047",
                "attack.t1053",
                "attack.t1059.003",
                "attack.t1059.001",
                "attack.t1110",
                "attack.t1201"
            ],
            "title": "HackTool - CrackMapExec Execution"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/06/14",
            "description": "detects the usage of path traversal in conhost.exe indicating possible command/argument confusion/hijacking",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains": "/../../",
                    "ParentCommandLine|contains": "conhost"
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "ee5e119b-1f75-4b34-add8-3be976961e39",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://pentestlab.blog/2020/07/06/indirect-command-execution/"
            ],
            "status": "test",
            "title": "Conhost.exe CommandLine Path Traversal",
            "tags": [
                "attack.execution",
                "attack.t1059.003"
            ]
        },
        {
            "id": "4f154fb6-27d1-4813-a759-78b93e0b9c48",
            "author": "_pete_0, TheDFIRReport",
            "date": "2022/05/06",
            "description": "Detects Cobalt Strike module/commands accidentally entered in CMD shell",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains": [
                        "Invoke-UserHunter",
                        "Invoke-ShareFinder",
                        "Invoke-Kerberoast",
                        "Invoke-SMBAutoBrute",
                        "Invoke-Nightmare",
                        "zerologon",
                        "av_query"
                    ]
                },
                "selection_img": [
                    {
                        "OriginalFileName": "Cmd.Exe"
                    },
                    {
                        "Image|endswith": "\\cmd.exe"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/01/30",
            "references": [
                "https://hstechdocs.helpsystems.com/manuals/cobaltstrike/current/userguide/content/cobalt-4-5-user-guide.pdf",
                "https://thedfirreport.com/2021/10/04/bazarloader-and-the-conti-leaks/",
                "https://thedfirreport.com/2022/06/16/sans-ransomware-summit-2022-can-you-detect-this/"
            ],
            "related": [
                {
                    "type": "similar",
                    "id": "647c7b9e-d784-4fda-b9a0-45c565a7b729"
                }
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1059.003"
            ],
            "title": "Operator Bloopers Cobalt Strike Modules"
        },
        {
            "author": "Maxim Pavlunin, Nasreddine Bencherchali (Nextron Systems)",
            "date": "2020/04/01",
            "description": "Detects a suspicious child process of a Microsoft HTML Help (HH.exe)",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Image|endswith": [
                        "\\CertReq.exe",
                        "\\CertUtil.exe",
                        "\\cmd.exe",
                        "\\cscript.exe",
                        "\\installutil.exe",
                        "\\MSbuild.exe",
                        "\\MSHTA.EXE",
                        "\\msiexec.exe",
                        "\\powershell.exe",
                        "\\pwsh.exe",
                        "\\regsvr32.exe",
                        "\\rundll32.exe",
                        "\\schtasks.exe",
                        "\\wmic.exe",
                        "\\wscript.exe"
                    ],
                    "ParentImage|endswith": "\\hh.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "52cad028-0ff0-4854-8f67-d25dfcbc78b4",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/04/12",
            "references": [
                "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/chm-badness-delivers-a-banking-trojan/",
                "https://github.com/elastic/protections-artifacts/commit/746086721fd385d9f5c6647cada1788db4aea95f#diff-27939090904026cc396b0b629c8e4314acd6f5dac40a676edbc87f4567b47eb7",
                "https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/higaisa-or-winnti-apt-41-backdoors-old-and-new/",
                "https://www.zscaler.com/blogs/security-research/unintentional-leak-glimpse-attack-vectors-apt37"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.execution",
                "attack.initial_access",
                "attack.t1047",
                "attack.t1059.001",
                "attack.t1059.003",
                "attack.t1059.005",
                "attack.t1059.007",
                "attack.t1218",
                "attack.t1218.001",
                "attack.t1218.010",
                "attack.t1218.011",
                "attack.t1566",
                "attack.t1566.001"
            ],
            "title": "HTML Help HH.EXE Suspicious Child Process"
        },
        {
            "author": "Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community",
            "date": "2019/01/16",
            "description": "Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Image|endswith": "\\cmd.exe",
                    "CommandLine|contains|all": [
                        "http",
                        "://",
                        "%AppData%"
                    ]
                }
            },
            "falsepositives": [
                "High"
            ],
            "fields": [
                "CommandLine",
                "ParentCommandLine"
            ],
            "id": "1ac8666b-046f-4201-8aba-1951aaec03a3",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2021/11/27",
            "status": "test",
            "references": [
                "https://www.hybrid-analysis.com/sample/3a1f01206684410dbe8f1900bbeaaa543adfcd07368ba646b499fa5274b9edf6?environmentId=100",
                "https://www.hybrid-analysis.com/sample/f16c729aad5c74f19784a24257236a8bbe27f7cdc4a89806031ec7f1bebbd475?environmentId=100"
            ],
            "tags": [
                "attack.execution",
                "attack.command_and_control",
                "attack.t1059.003",
                "attack.t1059.001",
                "attack.t1105"
            ],
            "title": "Command Line Execution with Suspicious URL and AppData Strings"
        },
        {
            "author": "wagga, Jonhnathan Ribeiro, oscd.community",
            "date": "2020/01/12",
            "description": "Detects command line parameters used by Koadic hack tool",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains|all": [
                        "/q",
                        "/c",
                        "chcp"
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\cmd.exe"
                    },
                    {
                        "OriginalFileName": "Cmd.Exe"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "fields": [
                "CommandLine",
                "ParentCommandLine"
            ],
            "id": "5cddf373-ef00-4112-ad72-960ac29bac34",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/11",
            "status": "test",
            "references": [
                "https://unit42.paloaltonetworks.com/unit42-sofacy-groups-parallel-attacks/",
                "https://github.com/offsecginger/koadic/blob/457f9a3ff394c989cdb4c599ab90eb34fb2c762c/data/stager/js/stdlib.js",
                "https://blog.f-secure.com/hunting-for-koadic-a-com-based-rootkit/"
            ],
            "tags": [
                "attack.execution",
                "attack.t1059.003",
                "attack.t1059.005",
                "attack.t1059.007"
            ],
            "title": "HackTool - Koadic Execution"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2019/10/24",
            "description": "Detects suspicious Hangul Word Processor (Hanword) sub processes that could indicate an exploitation",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Image|endswith": "\\gbb.exe",
                    "ParentImage|endswith": "\\Hwp.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "023394c4-29d5-46ab-92b8-6a534c6f447b",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://www.securitynewspaper.com/2016/11/23/technical-teardown-exploit-malware-hwp-files/",
                "https://www.hybrid-analysis.com/search?query=context:74940dcc5b38f9f9b1a0fea760d344735d7d91b610e6d5bd34533dd0153402c5&from_sample=5db135000388385a7644131f&block_redirect=1",
                "https://twitter.com/cyberwar_15/status/1187287262054076416",
                "https://blog.alyac.co.kr/1901",
                "https://en.wikipedia.org/wiki/Hangul_(word_processor)"
            ],
            "modified": "2021/11/27",
            "status": "test",
            "tags": [
                "attack.initial_access",
                "attack.t1566.001",
                "attack.execution",
                "attack.t1203",
                "attack.t1059.003",
                "attack.g0032"
            ],
            "title": "Suspicious HWP Sub Processes"
        },
        {
            "author": "Alexander Rausch",
            "date": "2020/06/24",
            "description": "Detects actions caused by the RedMimicry Winnti playbook a automated breach emulations utility",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains": [
                        "gthread-3.6.dll",
                        "\\Windows\\Temp\\tmp.bat",
                        "sigcmm-2.4.dll"
                    ],
                    "Image|endswith": [
                        "\\rundll32.exe",
                        "\\cmd.exe"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "95022b85-ff2a-49fa-939a-d7b8f56eeb9b",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/03/01",
            "references": [
                "https://redmimicry.com/posts/redmimicry-winnti/"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.defense_evasion",
                "attack.t1106",
                "attack.t1059.003",
                "attack.t1218.011"
            ],
            "title": "HackTool - RedMimicry Winnti Playbook Execution"
        },
        {
            "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/03/07",
            "description": "Detect the use of \"<\" to read and potentially execute a file via cmd.exe",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains": "<"
                },
                "selection_cmd": [
                    {
                        "OriginalFileName": "Cmd.Exe"
                    },
                    {
                        "Image|endswith": "\\cmd.exe"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "241e802a-b65e-484f-88cd-c2dc10f9206d",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/40b77d63808dd4f4eafb83949805636735a1fd15/atomics/T1059.003/T1059.003.md",
                "https://web.archive.org/web/20220306121156/https://www.x86matthew.com/view_post?id=ntdll_pipe"
            ],
            "related": [
                {
                    "id": "00a4bacd-6db4-46d5-9258-a7d5ebff4003",
                    "type": "obsoletes"
                }
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1059.003"
            ],
            "title": "Read Contents From Stdin Via Cmd.EXE"
        },
        {
            "id": "b1f73849-6329-4069-bc8f-78a604bb8b23",
            "author": "Ali Alwashali",
            "date": "2023/10/10",
            "description": "Detects the execution of a system command via the ScreenConnect RMM service.",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains": "\\TEMP\\ScreenConnect\\"
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\cmd.exe"
                    },
                    {
                        "OriginalFileName": "Cmd.Exe"
                    }
                ],
                "selection_parent": {
                    "ParentImage|endswith": "\\ScreenConnect.ClientService.exe"
                }
            },
            "falsepositives": [
                "Legitimate use of ScreenConnect. Disable this rule if ScreenConnect is heavily used."
            ],
            "level": "low",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://github.com/SigmaHQ/sigma/pull/4467"
            ],
            "modified": "2024/02/26",
            "status": "experimental",
            "tags": [
                "attack.execution",
                "attack.t1059.003"
            ],
            "title": "Remote Access Tool - ScreenConnect Remote Command Execution"
        },
        {
            "author": "xknow @xknow_infosec, Tim Shelton",
            "date": "2020/06/11",
            "description": "Detects potential path traversal attempt via cmd.exe. Could indicate possible command/argument confusion/hijacking",
            "detection": {
                "condition": "all of selection_* and not 1 of filter_*",
                "filter_java": {
                    "CommandLine|contains": "\\Tasktop\\keycloak\\bin\\/../../jre\\bin\\java"
                },
                "selection_flags": [
                    {
                        "ParentCommandLine|contains": [
                            "/c",
                            "/k",
                            "/r"
                        ]
                    },
                    {
                        "CommandLine|contains": [
                            "/c",
                            "/k",
                            "/r"
                        ]
                    }
                ],
                "selection_img": [
                    {
                        "ParentImage|endswith": "\\cmd.exe"
                    },
                    {
                        "Image|endswith": "\\cmd.exe"
                    },
                    {
                        "OriginalFileName": "cmd.exe"
                    }
                ],
                "selection_path_traversal": [
                    {
                        "ParentCommandLine": "/../../"
                    },
                    {
                        "CommandLine|contains": "/../../"
                    }
                ]
            },
            "falsepositives": [
                "Java tools are known to produce false-positive when loading libraries"
            ],
            "id": "087790e3-3287-436c-bccf-cbd0184a7db1",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/03/06",
            "references": [
                "https://hackingiscool.pl/cmdhijack-command-argument-confusion-with-path-traversal-in-cmd-exe/",
                "https://twitter.com/Oddvarmoe/status/1270633613449723905"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1059.003"
            ],
            "title": "Potential CommandLine Path Traversal Via Cmd.EXE"
        },
        {
            "author": "Matt Anderson (Huntress)",
            "date": "2024/07/23",
            "description": "Detects the use of powershell commands from headless ConHost window.\nThe \"--headless\" flag hides the windows from the user upon execution.\n",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains|all": [
                        "--headless",
                        "powershell"
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\conhost.exe"
                    },
                    {
                        "OriginalFileName": "CONHOST.EXE"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "056c7317-9a09-4bd4-9067-d051312752ea",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://www.huntress.com/blog/fake-browser-updates-lead-to-boinc-volunteer-computing-software"
            ],
            "related": [
                {
                    "id": "00ca75ab-d5ce-43be-b86c-55ff39c6abfc",
                    "type": "derived"
                }
            ],
            "status": "experimental",
            "tags": [
                "attack.defense_evasion",
                "attack.t1059.001",
                "attack.t1059.003"
            ],
            "title": "Powershell Executed From Headless ConHost Process"
        },
        {
            "author": "Ali Alwashali",
            "date": "2023/10/10",
            "description": "Detects file being transferred via ScreenConnect RMM",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Data|contains": "Transferred files with action",
                    "EventID": 201,
                    "Provider_Name": "ScreenConnect"
                }
            },
            "falsepositives": [
                "Legitimate use of ScreenConnect"
            ],
            "id": "5d19eb78-5b5b-4ef2-a9f0-4bfa94d58a13",
            "level": "low",
            "logsource": {
                "service": "application",
                "product": "windows"
            },
            "references": [
                "https://www.huntandhackett.com/blog/revil-the-usage-of-legitimate-remote-admin-tooling",
                "https://github.com/SigmaHQ/sigma/pull/4467"
            ],
            "related": [
                {
                    "id": "b1f73849-6329-4069-bc8f-78a604bb8b23",
                    "type": "similar"
                }
            ],
            "status": "experimental",
            "tags": [
                "attack.execution",
                "attack.t1059.003"
            ],
            "title": "Remote Access Tool - ScreenConnect File Transfer"
        },
        {
            "author": "Ali Alwashali",
            "date": "2023/10/10",
            "description": "Detects command execution via ScreenConnect RMM",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Data|contains": "Executed command of length",
                    "EventID": 200,
                    "Provider_Name": "ScreenConnect"
                }
            },
            "falsepositives": [
                "Legitimate use of ScreenConnect"
            ],
            "id": "076ebe48-cc05-4d8f-9d41-89245cd93a14",
            "level": "low",
            "logsource": {
                "service": "application",
                "product": "windows"
            },
            "references": [
                "https://www.huntandhackett.com/blog/revil-the-usage-of-legitimate-remote-admin-tooling",
                "https://github.com/SigmaHQ/sigma/pull/4467"
            ],
            "related": [
                {
                    "id": "b1f73849-6329-4069-bc8f-78a604bb8b23",
                    "type": "similar"
                }
            ],
            "status": "experimental",
            "tags": [
                "attack.execution",
                "attack.t1059.003"
            ],
            "title": "Remote Access Tool - ScreenConnect Command Execution"
        },
        {
            "author": "Pushkarev Dmitry",
            "date": "2020/06/28",
            "description": "Detect run not allowed files. Applocker is a very useful tool, especially on servers where unprivileged users have access. For example terminal servers. You need configure applocker and log collect to receive these events.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": [
                        8004,
                        8007,
                        8022,
                        8025
                    ]
                }
            },
            "falsepositives": [
                "Need tuning applocker or add exceptions in SIEM"
            ],
            "fields": [
                "PolicyName",
                "RuleId",
                "RuleName",
                "TargetUser",
                "TargetProcessId",
                "FilePath",
                "FileHash",
                "Fqbn"
            ],
            "id": "401e5d00-b944-11ea-8f9a-00163ecd60ae",
            "level": "medium",
            "logsource": {
                "product": "windows",
                "service": "applocker"
            },
            "modified": "2021/11/27",
            "status": "test",
            "references": [
                "https://learn.microsoft.com/en-us/windows/security/application-security/application-control/windows-defender-application-control/applocker/what-is-applocker",
                "https://learn.microsoft.com/en-us/windows/security/application-security/application-control/windows-defender-application-control/applocker/using-event-viewer-with-applocker",
                "https://nxlog.co/documentation/nxlog-user-guide/applocker.html"
            ],
            "tags": [
                "attack.execution",
                "attack.t1204.002",
                "attack.t1059.001",
                "attack.t1059.003",
                "attack.t1059.005",
                "attack.t1059.006",
                "attack.t1059.007"
            ],
            "title": "File Was Not Allowed To Run"
        },
        {
            "author": "frack113",
            "date": "2022/01/02",
            "description": "Adversaries may abuse the Windows command shell for execution.\nThe Windows command shell ([cmd](https://attack.mitre.org/software/S0106)) is the primary command prompt on Windows systems.\nThe Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands.\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops.\nCommon uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple system\n",
            "detection": {
                "condition": "all of selection_*",
                "selection_batch": {
                    "ScriptBlockText|contains": [
                        ".cmd",
                        ".bat"
                    ]
                },
                "selection_start": {
                    "ScriptBlockText|contains": "Start-Process"
                }
            },
            "falsepositives": [
                "Legitimate administration script"
            ],
            "id": "b5522a23-82da-44e5-9c8b-e10ed8955f88",
            "level": "medium",
            "logsource": {
                "category": "ps_script",
                "product": "windows",
                "definition": "Requirements: Script Block Logging must be enabled"
            },
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1059.003/T1059.003.md#atomic-test-1---create-and-execute-batch-script"
            ],
            "status": "test",
            "title": "Powershell Execute Batch Script",
            "tags": [
                "attack.execution",
                "attack.t1059.003"
            ]
        }
    ]
}