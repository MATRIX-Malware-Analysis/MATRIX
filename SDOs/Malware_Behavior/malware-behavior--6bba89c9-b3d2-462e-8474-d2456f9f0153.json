{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--6bba89c9-b3d2-462e-8474-d2456f9f0153",
    "created": "2024-08-13T14:46:36.684307Z",
    "modified": "2024-08-13T14:46:45.507124Z",
    "name": "Remote Services",
    "description": "Adversaries may use Valid Accounts to log into a service that accepts remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.In an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).[1][2] They could also login to accessible SaaS or IaaS services, such as those that federate their identities to the domain. Legitimate applications (such as Software Deployment Tools and other administrative programs) may utilize Remote Services to access remote hosts. For example, Apple Remote Desktop (ARD) on macOS is native software used for remote management. ARD leverages a blend of protocols, including VNC to send the screen and control buffers and SSH for secure file transfer.[3][4][5] Adversaries can abuse applications such as ARD to gain remote code execution and perform lateral movement. In versions of macOS prior to 10.14, an adversary can escalate an SSH session to an ARD session which enables an adversary to accept TCC (Transparency, Consent, and Control) prompts without user interaction and gain access to data.[6][7][4]",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1021",
            "external_id": "T1021"
        },
        {
            "source_name": "CAPEC 555",
            "external_id": "malware-behavior--b2024f2a-6324-4f64-b50a-a4f697c37fbc"
        },
        {
            "source_name": "mitre-attack",
            "url": "https://attack.mitre.org/techniques/T1021",
            "external_id": "T1021"
        },
        {
            "source_name": "Apple Remote Desktop Admin Guide 3.3",
            "description": "Apple. (n.d.). Apple Remote Desktop Administrator Guide Version 3.3. Retrieved October 5, 2021.",
            "url": "https://images.apple.com/remotedesktop/pdf/ARD_Admin_Guide_v3.3.pdf"
        },
        {
            "source_name": "Remote Management MDM macOS",
            "description": "Apple. (n.d.). Use MDM to enable Remote Management in macOS. Retrieved September 23, 2021.",
            "url": "https://support.apple.com/en-us/HT209161"
        },
        {
            "source_name": "Kickstart Apple Remote Desktop commands",
            "description": "Apple. (n.d.). Use the kickstart command-line utility in Apple Remote Desktop. Retrieved September 23, 2021.",
            "url": "https://support.apple.com/en-us/HT201710"
        },
        {
            "source_name": "Lockboxx ARD 2019",
            "description": "Dan Borges. (2019, July 21). MacOS Red Teaming 206: ARD (Apple Remote Desktop Protocol). Retrieved September 10, 2021.",
            "url": "http://lockboxx.blogspot.com/2019/07/macos-red-teaming-206-ard-apple-remote.html"
        },
        {
            "source_name": "FireEye 2019 Apple Remote Desktop",
            "description": "Jake Nicastro, Willi Ballenthin. (2019, October 9). Living off the Orchard: Leveraging Apple Remote Desktop for Good and Evil. Retrieved August 16, 2021.",
            "url": "https://www.fireeye.com/blog/threat-research/2019/10/leveraging-apple-remote-desktop-for-good-and-evil.html"
        },
        {
            "source_name": "TechNet Remote Desktop Services",
            "description": "Microsoft. (n.d.). Remote Desktop Services. Retrieved June 1, 2016.",
            "url": "https://technet.microsoft.com/en-us/windowsserver/ee236407.aspx"
        },
        {
            "source_name": "Apple Unified Log Analysis Remote Login and Screen Sharing",
            "description": "Sarah Edwards. (2020, April 30). Analysis of Apple Unified Logs: Quarantine Edition [Entry 6] \u2013 Working From Home? Remote Logins. Retrieved August 19, 2021.",
            "url": "https://sarah-edwards-xzkc.squarespace.com/blog/2020/4/30/analysis-of-apple-unified-logs-quarantine-edition-entry-6-working-from-home-remote-logins"
        },
        {
            "source_name": "SSH Secure Shell",
            "description": "SSH.COM. (n.d.). SSH (Secure Shell). Retrieved March 23, 2020.",
            "url": "https://www.ssh.com/ssh"
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "Muhammad Faisal (@faisalusuf)",
            "date": "2024/02/25",
            "description": "Detects SSH user login access failures.\nPlease note that this rule can be noisy and is recommended to use with correlation based on \"author.name\" field.\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "auditType.action": "User login failed(SSH)",
                    "auditType.category": "Authentication"
                }
            },
            "falsepositives": [
                "Legitimate user wrong password attempts."
            ],
            "id": "d3f90469-fb05-42ce-b67d-0fded91bbef3",
            "level": "medium",
            "logsource": {
                "definition": "Requirements: \"Advance\" log level is required to receive these audit events.",
                "product": "bitbucket",
                "service": "audit"
            },
            "references": [
                "https://confluence.atlassian.com/bitbucketserver/view-and-configure-the-audit-log-776640417.html",
                "https://confluence.atlassian.com/bitbucketserver/enable-ssh-access-to-git-repositories-776640358.html"
            ],
            "status": "experimental",
            "tags": [
                "attack.t1021.004",
                "attack.t1110"
            ],
            "title": "Bitbucket User Login Failure Via SSH"
        },
        {
            "author": "Muhammad Faisal (@faisalusuf)",
            "date": "2024/02/25",
            "description": "Detects Bitbucket global SSH access configuration changes.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "auditType.action": "SSH settings changed",
                    "auditType.category": "Global administration"
                }
            },
            "falsepositives": [
                "Legitimate user activity."
            ],
            "id": "16ab6143-510a-44e2-a615-bdb80b8317fc",
            "level": "medium",
            "logsource": {
                "definition": "Requirements: \"Advance\" log level is required to receive these audit events.",
                "product": "bitbucket",
                "service": "audit"
            },
            "references": [
                "https://confluence.atlassian.com/bitbucketserver/audit-log-events-776640423.html",
                "https://confluence.atlassian.com/bitbucketserver/enable-ssh-access-to-git-repositories-776640358.html"
            ],
            "status": "experimental",
            "tags": [
                "attack.lateral_movement",
                "attack.defense_evasion",
                "attack.t1562.001",
                "attack.t1021.004"
            ],
            "title": "Bitbucket Global SSH Settings Changed"
        },
        {
            "author": "Chester Le Bron (@123Le_Bron)",
            "date": "2024/02/26",
            "description": "Detects potentially suspicious events involving \"GetSigninToken\".\nAn adversary using the \"aws_consoler\" tool can leverage this console API to create temporary federated credential that help obfuscate which AWS credential is compromised (the original access key) and enables the adversary to pivot from the AWS CLI to console sessions without the need for MFA using the new access key issued in this request.\n",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_console_ua": {
                    "userAgent|contains": "Jersey/${project.version}"
                },
                "selection": {
                    "eventName": "GetSigninToken",
                    "eventSource": "signin.amazonaws.com"
                }
            },
            "falsepositives": [
                "GetSigninToken events will occur when using AWS SSO portal to login and will generate false positives if you do not filter for the expected user agent(s), see filter. Non-SSO configured roles would be abnormal and should be investigated."
            ],
            "id": "f8103686-e3e8-46f3-be72-65f7fcb4aa53",
            "level": "medium",
            "logsource": {
                "product": "aws",
                "service": "cloudtrail"
            },
            "references": [
                "https://github.com/NetSPI/aws_consoler",
                "https://www.crowdstrike.com/blog/analysis-of-intrusion-campaign-targeting-telecom-and-bpo-companies/"
            ],
            "status": "experimental",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.007",
                "attack.t1550.001"
            ],
            "title": "AWS Console GetSigninToken Potential Abuse"
        },
        {
            "author": "Security Onion Solutions",
            "date": "2024/03/08",
            "description": "Detects instances where an FTP service on an OpenCanary node has had a login attempt.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "logtype": 2000
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "6991bc2b-ae2e-447f-bc55-3a1ba04c14e5",
            "level": "high",
            "logsource": {
                "category": "application",
                "product": "opencanary"
            },
            "references": [
                "https://opencanary.readthedocs.io/en/latest/starting/configuration.html#services-configuration",
                "https://github.com/thinkst/opencanary/blob/a0896adfcaf0328cfd5829fe10d2878c7445138e/opencanary/logger.py#L52"
            ],
            "status": "experimental",
            "tags": [
                "attack.initial_access",
                "attack.exfiltration",
                "attack.t1190",
                "attack.t1021"
            ],
            "title": "OpenCanary - FTP Login Attempt"
        },
        {
            "author": "Security Onion Solutions",
            "date": "2024/03/08",
            "description": "Detects instances where an SSH service on an OpenCanary node has had a login attempt.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "logtype": 4002
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "ff7139bc-fdb1-4437-92f2-6afefe8884cb",
            "level": "high",
            "logsource": {
                "category": "application",
                "product": "opencanary"
            },
            "references": [
                "https://opencanary.readthedocs.io/en/latest/starting/configuration.html#services-configuration",
                "https://github.com/thinkst/opencanary/blob/a0896adfcaf0328cfd5829fe10d2878c7445138e/opencanary/logger.py#L52"
            ],
            "status": "experimental",
            "tags": [
                "attack.initial_access",
                "attack.lateral_movement",
                "attack.persistence",
                "attack.t1133",
                "attack.t1021",
                "attack.t1078"
            ],
            "title": "OpenCanary - SSH Login Attempt"
        },
        {
            "author": "Security Onion Solutions",
            "date": "2024/03/08",
            "description": "Detects instances where an SSH service on an OpenCanary node has had a connection attempt.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "logtype": 4000
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "cd55f721-5623-4663-bd9b-5229cab5237d",
            "level": "high",
            "logsource": {
                "category": "application",
                "product": "opencanary"
            },
            "references": [
                "https://opencanary.readthedocs.io/en/latest/starting/configuration.html#services-configuration",
                "https://github.com/thinkst/opencanary/blob/a0896adfcaf0328cfd5829fe10d2878c7445138e/opencanary/logger.py#L52"
            ],
            "status": "experimental",
            "tags": [
                "attack.initial_access",
                "attack.lateral_movement",
                "attack.persistence",
                "attack.t1133",
                "attack.t1021",
                "attack.t1078"
            ],
            "title": "OpenCanary - SSH New Connection Attempt"
        },
        {
            "author": "Security Onion Solutions",
            "date": "2024/03/08",
            "description": "Detects instances where an SNMP service on an OpenCanary node has had an OID request.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "logtype": 13001
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "e9856028-fd4e-46e6-b3d1-10f7ceb95078",
            "level": "high",
            "logsource": {
                "category": "application",
                "product": "opencanary"
            },
            "references": [
                "https://opencanary.readthedocs.io/en/latest/starting/configuration.html#services-configuration",
                "https://github.com/thinkst/opencanary/blob/a0896adfcaf0328cfd5829fe10d2878c7445138e/opencanary/logger.py#L52"
            ],
            "status": "experimental",
            "tags": [
                "attack.discovery",
                "attack.lateral_movement",
                "attack.t1016",
                "attack.t1021"
            ],
            "title": "OpenCanary - SNMP OID Request"
        },
        {
            "author": "Security Onion Solutions",
            "date": "2024/03/08",
            "description": "Detects instances where a VNC service on an OpenCanary node has had a connection attempt.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "logtype": 12001
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "9db5446c-b44a-4291-8b89-fcab5609c3b3",
            "level": "high",
            "logsource": {
                "category": "application",
                "product": "opencanary"
            },
            "references": [
                "https://opencanary.readthedocs.io/en/latest/starting/configuration.html#services-configuration",
                "https://github.com/thinkst/opencanary/blob/a0896adfcaf0328cfd5829fe10d2878c7445138e/opencanary/logger.py#L52"
            ],
            "status": "experimental",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021"
            ],
            "title": "OpenCanary - VNC Connection Attempt"
        },
        {
            "author": "Security Onion Solutions",
            "date": "2024/03/08",
            "description": "Detects instances where an SMB service on an OpenCanary node has had a file open request.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "logtype": 5000
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "22777c9e-873a-4b49-855f-6072ab861a52",
            "level": "high",
            "logsource": {
                "category": "application",
                "product": "opencanary"
            },
            "references": [
                "https://opencanary.readthedocs.io/en/latest/starting/configuration.html#services-configuration",
                "https://github.com/thinkst/opencanary/blob/a0896adfcaf0328cfd5829fe10d2878c7445138e/opencanary/logger.py#L52"
            ],
            "status": "experimental",
            "tags": [
                "attack.lateral_movement",
                "attack.collection",
                "attack.t1021",
                "attack.t1005"
            ],
            "title": "OpenCanary - SMB File Open Request"
        },
        {
            "author": "Sagie Dulce, Dekel Paz",
            "date": "2022/01/01",
            "description": "Detects remote RPC calls that performs remote DCOM operations. These could be abused for lateral movement via DCOM or WMI.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": 3,
                    "EventLog": "RPCFW",
                    "InterfaceUuid": [
                        "4d9f4ab8-7d1c-11cf-861e-0020af6e7c57",
                        "99fcfec4-5260-101b-bbcb-00aa0021347a",
                        "000001a0-0000-0000-c000-000000000046",
                        "00000131-0000-0000-c000-000000000046",
                        "00000143-0000-0000-c000-000000000046",
                        "00000000-0000-0000-c000-000000000046"
                    ]
                }
            },
            "falsepositives": [
                "Some administrative tasks on remote host"
            ],
            "id": "68050b10-e477-4377-a99b-3721b422d6ef",
            "level": "high",
            "logsource": {
                "category": "application",
                "definition": "Requirements: install and apply the RPC Firewall to all processes with \"audit:true action:block uuid:367abb81-9844-35f1-ad32-98f038001003",
                "product": "rpc_firewall"
            },
            "modified": "2022/01/01",
            "references": [
                "https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-srvs/accf23b0-0f57-441c-9185-43041f1b0ee9",
                "https://github.com/zeronetworks/rpcfirewall",
                "https://zeronetworks.com/blog/stopping-lateral-movement-via-the-rpc-firewall/"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.003",
                "attack.t1047"
            ],
            "title": "Remote DCOM/WMI Lateral Movement"
        },
        {
            "author": "Nate Guagenti (neu5ron)",
            "date": "2021/09/20",
            "description": "Detects the exploitation of OMIGOD (CVE-2021-38647) which allows remote execute (RCE) commands as root with just a single unauthenticated HTTP request.\nVerify, successful, exploitation by viewing the HTTP client (request) body to see what was passed to the server (using PCAP).\nWithin the client body is where the code execution would occur. Additionally, check the endpoint logs to see if suspicious commands or activity occurred within the timeframe of this HTTP request.\n",
            "detection": {
                "auth_header": {
                    "client_header_names|contains": "AUTHORIZATION"
                },
                "condition": "selection and not auth_header and not too_small_http_client_body",
                "selection": {
                    "method": "POST",
                    "status_code": 200,
                    "uri": "/wsman"
                },
                "too_small_http_client_body": {
                    "request_body_len": 0
                }
            },
            "falsepositives": [
                "Exploits that were attempted but unsuccessful.",
                "Scanning attempts with the abnormal use of the HTTP POST method with no indication of code execution within the HTTP Client (Request) body. An example would be vulnerability scanners trying to identify unpatched versions while not actually exploiting the vulnerability. See description for investigation tips."
            ],
            "fields": [
                "id.orig_h",
                "id.resp_h",
                "id.resp_p",
                "status_code",
                "method",
                "uri",
                "request_body_len",
                "response_body_len",
                "user_agent"
            ],
            "id": "ab6b1a39-a9ee-4ab4-b075-e83acf6e346b",
            "level": "high",
            "logsource": {
                "definition": "Enable the builtin Zeek script that logs all HTTP header names by adding \"@load policy/protocols/http/header-names\" to your local.zeek config file. The script can be seen here for reference https://github.com/zeek/zeek/blob/d957f883df242ef159cfd846884e673addeea7a5/scripts/policy/protocols/http/header-names.zeek",
                "product": "zeek",
                "service": "http"
            },
            "modified": "2019/09/20",
            "references": [
                "https://www.wiz.io/blog/omigod-critical-vulnerabilities-in-omi-azure",
                "https://twitter.com/neu5ron/status/1438987292971053057?s=20"
            ],
            "status": "stable",
            "tags": [
                "attack.privilege_escalation",
                "attack.initial_access",
                "attack.execution",
                "attack.lateral_movement",
                "attack.t1068",
                "attack.t1190",
                "attack.t1203",
                "attack.t1021.006",
                "attack.t1210"
            ],
            "title": "OMIGOD HTTP No Authentication RCE"
        },
        {
            "author": "OTR (Open Threat Research), @neu5ron",
            "date": "2018/11/28",
            "description": "Detects the use of the spoolss named pipe over SMB. This can be used to trigger the authentication via NTLM of any machine that has the spoolservice enabled.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "name": "spoolss",
                    "path|endswith": "IPC$"
                }
            },
            "falsepositives": [
                "Domain Controllers that are sometimes, commonly although should not be, acting as printer servers too"
            ],
            "id": "bae2865c-5565-470d-b505-9496c87d0c30",
            "level": "medium",
            "logsource": {
                "product": "zeek",
                "service": "smb_files"
            },
            "modified": "2022/10/09",
            "references": [
                "https://posts.specterops.io/hunting-in-active-directory-unconstrained-delegation-forests-trusts-71f2b33688e1",
                "https://dirkjanm.io/a-different-way-of-abusing-zerologon/",
                "https://twitter.com/_dirkjan/status/1309214379003588608"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002"
            ],
            "title": "SMB Spoolss Name Piped Usage"
        },
        {
            "author": "Samir Bousseaden, @neu5ron, Tim Shelton",
            "date": "2020/04/02",
            "description": "This detection excludes known namped pipes accessible remotely and notify on newly observed ones, may help to detect lateral movement and remote exec using named pipes",
            "detection": {
                "condition": "selection and not 1 of filter_*",
                "filter_keywords": [
                    "samr",
                    "lsarpc",
                    "winreg",
                    "netlogon",
                    "srvsvc",
                    "protected_storage",
                    "wkssvc",
                    "browser",
                    "netdfs",
                    "svcctl",
                    "spoolss",
                    "ntsvcs",
                    "LSM_API_service",
                    "HydraLsPipe",
                    "TermSrv_API_service",
                    "MsFteWds"
                ],
                "selection": {
                    "path": "\\\\\\\\\\*\\\\IPC$"
                }
            },
            "falsepositives": [
                "Update the excluded named pipe to filter out any newly observed legit named pipe"
            ],
            "id": "021310d9-30a6-480a-84b7-eaa69aeb92bb",
            "level": "high",
            "logsource": {
                "product": "zeek",
                "service": "smb_files"
            },
            "modified": "2022/12/27",
            "references": [
                "https://twitter.com/menasec1/status/1104489274387451904"
            ],
            "related": [
                {
                    "id": "52d8b0c6-53d6-439a-9e41-52ad442ad9ad",
                    "type": "derived"
                }
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002"
            ],
            "title": "First Time Seen Remote Named Pipe - Zeek"
        },
        {
            "author": "Samir Bousseaden, @neu5ron, Tim Shelton",
            "date": "2020/04/02",
            "description": "detects execution of psexec or paexec with renamed service name, this rule helps to filter out the noise if psexec is used for legit purposes or if attacker uses a different psexec client other than sysinternal one",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "name|startswith": "PSEXESVC"
                },
                "selection": {
                    "name|endswith": [
                        "-stdin",
                        "-stdout",
                        "-stderr"
                    ],
                    "path|contains|all": [
                        "\\\\",
                        "\\IPC$"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "f1b3a22a-45e6-4004-afb5-4291f9c21166",
            "level": "high",
            "logsource": {
                "product": "zeek",
                "service": "smb_files"
            },
            "modified": "2022/12/27",
            "references": [
                "https://blog.menasec.net/2019/02/threat-hunting-3-detecting-psexec.html"
            ],
            "related": [
                {
                    "id": "c462f537-a1e3-41a6-b5fc-b2c2cef9bf82",
                    "type": "derived"
                }
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002"
            ],
            "title": "Suspicious PsExec Execution - Zeek"
        },
        {
            "author": "Josh Brower @DefensiveDepth",
            "date": "2020/08/22",
            "description": "Detects connections from routable IPs to an RDP listener. Which is indicative of a publicly-accessible RDP service.\n",
            "detection": {
                "condition": "not selection",
                "selection": {
                    "id.orig_h|cidr": [
                        "::1/128",
                        "10.0.0.0/8",
                        "127.0.0.0/8",
                        "172.16.0.0/12",
                        "192.168.0.0/16",
                        "169.254.0.0/16",
                        "2620:83:8000::/48",
                        "fc00::/7",
                        "fe80::/10"
                    ]
                }
            },
            "falsepositives": [
                "Although it is recommended to NOT have RDP exposed to the internet, verify that this is a) allowed b) the server has not already been compromised via some brute force or remote exploit since it has been exposed to the internet. Work to secure the server if you are unable to remove it from being exposed to the internet."
            ],
            "id": "1fc0809e-06bf-4de3-ad52-25e5263b7623",
            "level": "high",
            "logsource": {
                "product": "zeek",
                "service": "rdp"
            },
            "modified": "2024/03/13",
            "references": [
                "https://attack.mitre.org/techniques/T1021/001/"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.001"
            ],
            "title": "Publicly Accessible RDP Service"
        },
        {
            "author": "Patryk Prauze - ING Tech",
            "date": "2019/05/20",
            "description": "Detects remote access to the LSASS process via WinRM. This could be a sign of credential dumping from tools like mimikatz.",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_access": {
                    "GrantedAccess": "0x80000000"
                },
                "selection": {
                    "SourceImage|endswith": ":\\Windows\\system32\\wsmprovhost.exe",
                    "TargetImage|endswith": "\\lsass.exe"
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "aa35a627-33fb-4d04-a165-d33b4afca3e8",
            "level": "high",
            "logsource": {
                "category": "process_access",
                "product": "windows"
            },
            "modified": "2023/11/29",
            "references": [
                "https://pentestlab.blog/2018/05/15/lateral-movement-winrm/"
            ],
            "status": "stable",
            "tags": [
                "attack.credential_access",
                "attack.execution",
                "attack.t1003.001",
                "attack.t1059.001",
                "attack.lateral_movement",
                "attack.t1021.006",
                "attack.s0002"
            ],
            "title": "Remote LSASS Process Access Through Windows Remote Management"
        },
        {
            "author": "Samir Bousseaden",
            "date": "2019/02/16",
            "description": "Detects svchost hosting RDP termsvcs communicating with the loopback address and on TCP port 3389",
            "detection": {
                "condition": "all of selection_*",
                "selection_destination": {
                    "DestinationIp|cidr": [
                        "127.0.0.0/8",
                        "::1/128"
                    ]
                },
                "selection_img": {
                    "Image|endswith": "\\svchost.exe",
                    "Initiated": "true",
                    "SourcePort": 3389
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "5f699bc5-5446-4a4a-a0b7-5ef2885a3eb4",
            "level": "high",
            "logsource": {
                "category": "network_connection",
                "product": "windows"
            },
            "modified": "2024/03/12",
            "references": [
                "https://twitter.com/cyb3rops/status/1096842275437625346"
            ],
            "status": "test",
            "tags": [
                "attack.command_and_control",
                "attack.t1572",
                "attack.lateral_movement",
                "attack.t1021.001",
                "car.2013-07-002"
            ],
            "title": "RDP Over Reverse SSH Tunnel"
        },
        {
            "author": "Roberto Rodriguez @Cyb3rWard0g",
            "date": "2019/09/12",
            "description": "Detects a process that initiated a network connection over ports 5985 or 5986 from a non-network service account.\nThis could potentially indicates a remote PowerShell connection.\n",
            "detection": {
                "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*",
                "filter_main_localhost": {
                    "DestinationIp": [
                        "::1",
                        "127.0.0.1"
                    ],
                    "SourceIp": [
                        "::1",
                        "127.0.0.1"
                    ]
                },
                "filter_main_service_users": [
                    {
                        "User|contains": [
                            "NETWORK SERVICE",
                            "NETZWERKDIENST",
                            "SERVICIO DE RED",
                            "SERVIZIO DI RETE"
                        ]
                    },
                    {
                        "User|contains|all": [
                            "SERVICE R",
                            "SEAU"
                        ]
                    }
                ],
                "filter_optional_avast": {
                    "Image": [
                        "C:\\Program Files\\Avast Software\\Avast\\AvastSvc.exe",
                        "C:\\Program Files (x86)\\Avast Software\\Avast\\AvastSvc.exe"
                    ]
                },
                "selection": {
                    "DestinationPort": [
                        5985,
                        5986
                    ],
                    "Initiated": "true",
                    "SourceIsIpv6": "false"
                }
            },
            "falsepositives": [
                "Legitimate usage of remote PowerShell, e.g. remote administration and monitoring.",
                "Network Service user name of a not-covered localization"
            ],
            "id": "c539afac-c12a-46ed-b1bd-5a5567c9f045",
            "level": "high",
            "logsource": {
                "category": "network_connection",
                "product": "windows"
            },
            "modified": "2024/02/02",
            "references": [
                "https://threathunterplaybook.com/hunts/windows/190511-RemotePwshExecution/notebook.html"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1059.001",
                "attack.lateral_movement",
                "attack.t1021.006"
            ],
            "title": "Potential Remote PowerShell Session Initiated"
        },
        {
            "author": "Markus Neis",
            "date": "2019/05/15",
            "description": "Detects Non-Standard tools initiating a connection over port 3389 indicating possible lateral movement.\nAn initial baseline is required before using this utility to exclude third party RDP tooling that you might use.\n",
            "detection": {
                "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*",
                "filter_main_mstsc": {
                    "Image": [
                        "C:\\Windows\\System32\\mstsc.exe",
                        "C:\\Windows\\SysWOW64\\mstsc.exe"
                    ]
                },
                "filter_optional_avast": {
                    "Image|endswith": [
                        "\\Avast Software\\Avast\\AvastSvc.exe",
                        "\\Avast\\AvastSvc.exe"
                    ]
                },
                "filter_optional_chrome": {
                    "Image": "C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"
                },
                "filter_optional_dns": {
                    "Image": "C:\\Windows\\System32\\dns.exe",
                    "Protocol": "udp",
                    "SourcePort": 53
                },
                "filter_optional_empty": {
                    "Image": ""
                },
                "filter_optional_firefox": {
                    "Image": "C:\\Program Files\\Mozilla Firefox\\firefox.exe"
                },
                "filter_optional_null": {
                    "Image": null
                },
                "filter_optional_sentinel_one": {
                    "Image|endswith": "\\Ranger\\SentinelRanger.exe"
                },
                "filter_optional_splunk": {
                    "Image|startswith": "C:\\Program Files\\SplunkUniversalForwarder\\bin\\"
                },
                "filter_optional_sysinternals_rdcman": {
                    "Image|endswith": "\\RDCMan.exe"
                },
                "filter_optional_third_party": {
                    "Image|endswith": [
                        "\\FSAssessment.exe",
                        "\\FSDiscovery.exe",
                        "\\MobaRTE.exe",
                        "\\mRemote.exe",
                        "\\mRemoteNG.exe",
                        "\\Passwordstate.exe",
                        "\\RemoteDesktopManager.exe",
                        "\\RemoteDesktopManager64.exe",
                        "\\RemoteDesktopManagerFree.exe",
                        "\\RSSensor.exe",
                        "\\RTS2App.exe",
                        "\\RTSApp.exe",
                        "\\spiceworks-finder.exe",
                        "\\Terminals.exe",
                        "\\ws_TunnelService.exe"
                    ]
                },
                "filter_optional_thor": {
                    "Image|endswith": [
                        "\\thor.exe",
                        "\\thor64.exe"
                    ]
                },
                "filter_optional_tsplus": {
                    "Image": [
                        "C:\\Program Files\\TSplus\\Java\\bin\\HTML5service.exe",
                        "C:\\Program Files (x86)\\TSplus\\Java\\bin\\HTML5service.exe"
                    ]
                },
                "filter_optional_unknown": {
                    "Image": "<unknown process>"
                },
                "selection": {
                    "DestinationPort": 3389,
                    "Initiated": "true"
                }
            },
            "falsepositives": [
                "Third party RDP tools"
            ],
            "id": "ed74fe75-7594-4b4b-ae38-e38e3fd2eb23",
            "level": "high",
            "logsource": {
                "category": "network_connection",
                "product": "windows"
            },
            "modified": "2024/02/09",
            "references": [
                "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-0708"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.001",
                "car.2013-07-002"
            ],
            "title": "Outbound RDP Connections Over Non-Standard Tools"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2022/04/29",
            "description": "Detects svchost hosting RDP termsvcs communicating to target systems on TCP port 80 or 443",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Image|endswith": "\\svchost.exe",
                    "DestinationPort": [
                        80,
                        443
                    ],
                    "Initiated": "true",
                    "SourcePort": 3389
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "b1e5da3b-ca8e-4adf-915c-9921f3d85481",
            "level": "high",
            "logsource": {
                "category": "network_connection",
                "product": "windows"
            },
            "modified": "2022/07/14",
            "references": [
                "https://twitter.com/tekdefense/status/1519711183162556416?s=12&t=OTsHCBkQOTNs1k3USz65Zg",
                "https://www.mandiant.com/resources/bypassing-network-restrictions-through-rdp-tunneling"
            ],
            "status": "test",
            "tags": [
                "attack.command_and_control",
                "attack.t1572",
                "attack.lateral_movement",
                "attack.t1021.001",
                "car.2013-07-002"
            ],
            "title": "RDP to HTTP or HTTPS Target Ports"
        },
        {
            "author": "Roberto Rodriguez @Cyb3rWard0g, Open Threat Research (OTR), wagga",
            "date": "2020/10/12",
            "description": "Detects potential DLL hijack of \"iertutil.dll\" found in the DCOM InternetExplorer.Application Class",
            "detection": {
                "condition": "selection",
                "selection": {
                    "ImageLoaded|endswith": "\\Internet Explorer\\iertutil.dll",
                    "Image|endswith": "\\Internet Explorer\\iexplore.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "f354eba5-623b-450f-b073-0b5b2773b6aa",
            "level": "critical",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2022/12/18",
            "references": [
                "https://threathunterplaybook.com/hunts/windows/201009-RemoteDCOMIErtUtilDLLHijack/notebook.html"
            ],
            "related": [
                {
                    "id": "e554f142-5cf3-4e55-ace9-a1b59e0def65",
                    "type": "obsoletes"
                },
                {
                    "id": "2f7979ae-f82b-45af-ac1d-2b10e93b0baa",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002",
                "attack.t1021.003"
            ],
            "title": "Potential DCOM InternetExplorer.Application DLL Hijack - Image Load"
        },
        {
            "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
            "date": "2020/06/24",
            "description": "Detects signs of potential use of the WSMAN provider from uncommon processes locally and remote execution.",
            "detection": {
                "commandline_null": {
                    "CommandLine": null
                },
                "condition": "( request_client or respond_server ) and not 1 of filter* and not ( svchost and commandline_null )",
                "filter_citrix": {
                    "Image|startswith": "C:\\Program Files\\Citrix\\"
                },
                "filter_general": {
                    "Image|endswith": [
                        "\\powershell.exe",
                        "C:\\Windows\\System32\\sdiagnhost.exe",
                        "C:\\Windows\\System32\\services.exe"
                    ]
                },
                "filter_mscorsvw": {
                    "Image|endswith": "\\mscorsvw.exe",
                    "Image|startswith": [
                        "C:\\Windows\\Microsoft.NET\\Framework64\\v",
                        "C:\\Windows\\Microsoft.NET\\Framework\\v"
                    ]
                },
                "filter_nextron": {
                    "Image|startswith": "C:\\Windows\\Temp\\asgard2-agent\\"
                },
                "filter_ps_ise": {
                    "Image|endswith": "\\powershell_ise.exe"
                },
                "filter_svchost": {
                    "CommandLine|contains": [
                        "svchost.exe -k netsvcs -p -s BITS",
                        "svchost.exe -k GraphicsPerfSvcGroup -s GraphicsPerfSvc",
                        "svchost.exe -k NetworkService -p -s Wecsvc",
                        "svchost.exe -k netsvcs"
                    ]
                },
                "filter_svr_2019": {
                    "Image": [
                        "C:\\Windows\\System32\\Configure-SMRemoting.exe",
                        "C:\\Windows\\System32\\ServerManager.exe"
                    ]
                },
                "filter_upgrade": {
                    "Image|startswith": "C:\\$WINDOWS.~BT\\Sources\\"
                },
                "request_client": [
                    {
                        "ImageLoaded|endswith": [
                            "\\WsmSvc.dll",
                            "\\WsmAuto.dll",
                            "\\Microsoft.WSMan.Management.ni.dll"
                        ]
                    },
                    {
                        "OriginalFileName": [
                            "WsmSvc.dll",
                            "WSMANAUTOMATION.DLL",
                            "Microsoft.WSMan.Management.dll"
                        ]
                    }
                ],
                "respond_server": {
                    "Image|endswith": "\\svchost.exe",
                    "OriginalFileName": "WsmWmiPl.dll"
                },
                "svchost": {
                    "Image|endswith": "\\svchost.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "ad1f4bb9-8dfb-4765-adb6-2a7cfb6c0f94",
            "level": "medium",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2022/10/07",
            "references": [
                "https://twitter.com/chadtilbury/status/1275851297770610688",
                "https://bohops.com/2020/05/12/ws-management-com-another-approach-for-winrm-lateral-movement/",
                "https://learn.microsoft.com/en-us/windows/win32/winrm/windows-remote-management-architecture",
                "https://github.com/bohops/WSMan-WinRM"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1059.001",
                "attack.lateral_movement",
                "attack.t1021.003"
            ],
            "title": "Suspicious WSMAN Provider Image Loads"
        },
        {
            "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
            "date": "2020/10/12",
            "description": "Detects a threat actor creating a file named `wbemcomn.dll` in the `C:\\Windows\\System32\\wbem\\` directory over the network and loading it for a WMI DLL Hijack scenario.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "ImageLoaded|endswith": "\\wbem\\wbemcomn.dll",
                    "Image|endswith": "\\wmiprvse.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "7707a579-e0d8-4886-a853-ce47e4575aaa",
            "level": "high",
            "logsource": {
                "category": "image_load",
                "product": "windows"
            },
            "modified": "2022/10/09",
            "references": [
                "https://threathunterplaybook.com/hunts/windows/201009-RemoteWMIWbemcomnDLLHijack/notebook.html"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1047",
                "attack.lateral_movement",
                "attack.t1021.002"
            ],
            "title": "Wmiprvse Wbemcomn DLL Hijack"
        },
        {
            "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
            "date": "2020/10/12",
            "description": "Detects a threat actor creating a file named `wbemcomn.dll` in the `C:\\Windows\\System32\\wbem\\` directory over the network and loading it for a WMI DLL Hijack scenario.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Image": "System",
                    "TargetFilename|endswith": "\\wbem\\wbemcomn.dll"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "614a7e17-5643-4d89-b6fe-f9df1a79641c",
            "level": "critical",
            "logsource": {
                "category": "file_event",
                "product": "windows"
            },
            "modified": "2022/12/02",
            "references": [
                "https://threathunterplaybook.com/hunts/windows/201009-RemoteWMIWbemcomnDLLHijack/notebook.html"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1047",
                "attack.lateral_movement",
                "attack.t1021.002"
            ],
            "title": "Wmiprvse Wbemcomn DLL Hijack - File"
        },
        {
            "id": "2f7979ae-f82b-45af-ac1d-2b10e93b0baa",
            "author": "Roberto Rodriguez @Cyb3rWard0g, Open Threat Research (OTR), wagga",
            "date": "2020/10/12",
            "description": "Detects potential DLL hijack of \"iertutil.dll\" found in the DCOM InternetExplorer.Application Class over the network",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Image": "System",
                    "TargetFilename|endswith": "\\Internet Explorer\\iertutil.dll"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "level": "critical",
            "logsource": {
                "category": "file_event",
                "product": "windows"
            },
            "modified": "2022/12/18",
            "references": [
                "https://threathunterplaybook.com/hunts/windows/201009-RemoteDCOMIErtUtilDLLHijack/notebook.html"
            ],
            "related": [
                {
                    "id": "e554f142-5cf3-4e55-ace9-a1b59e0def65",
                    "type": "obsoletes"
                },
                {
                    "type": "similar",
                    "id": "f354eba5-623b-450f-b073-0b5b2773b6aa"
                }
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002",
                "attack.t1021.003"
            ],
            "title": "Potential DCOM InternetExplorer.Application DLL Hijack"
        },
        {
            "author": "Florian Roth (Nextron Systems), oscd.community, Teymur Kheirkhabarov @HeirhabarovT, Zach Stanford @svch0st, Nasreddine Bencherchali",
            "date": "2019/12/30",
            "description": "Detects a copy command or a copy utility execution to or from an Admin share or remote",
            "detection": {
                "condition": "selection_target and (selection_other_tools or all of selection_cmd_* or all of selection_pwsh_*)",
                "selection_cmd_cli": {
                    "CommandLine|contains": "copy"
                },
                "selection_cmd_img": [
                    {
                        "Image|endswith": "\\cmd.exe"
                    },
                    {
                        "OriginalFileName": "Cmd.Exe"
                    }
                ],
                "selection_other_tools": [
                    {
                        "Image|endswith": [
                            "\\robocopy.exe",
                            "\\xcopy.exe"
                        ]
                    },
                    {
                        "OriginalFileName": [
                            "robocopy.exe",
                            "XCOPY.EXE"
                        ]
                    }
                ],
                "selection_pwsh_cli": {
                    "CommandLine|contains": [
                        "copy-item",
                        "copy ",
                        "cpi ",
                        " cp ",
                        "move ",
                        "move-item",
                        " mi ",
                        " mv "
                    ]
                },
                "selection_pwsh_img": [
                    {
                        "Image|contains": [
                            "\\powershell.exe",
                            "\\pwsh.exe"
                        ]
                    },
                    {
                        "OriginalFileName": [
                            "PowerShell.EXE",
                            "pwsh.dll"
                        ]
                    }
                ],
                "selection_target": {
                    "CommandLine|contains": [
                        "\\\\\\\\*$",
                        "\\Sysvol\\"
                    ]
                }
            },
            "falsepositives": [
                "Administrative scripts"
            ],
            "id": "855bc8b5-2ae8-402e-a9ed-b889e6df1900",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/11/15",
            "references": [
                "https://twitter.com/SBousseaden/status/1211636381086339073",
                "https://drive.google.com/file/d/1lKya3_mLnR3UQuCoiYruO3qgu052_iS_/view",
                "https://www.elastic.co/guide/en/security/current/remote-file-copy-to-a-hidden-share.html",
                "https://www.microsoft.com/en-us/security/blog/2022/10/18/defenders-beware-a-case-for-post-ransomware-investigations/"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.collection",
                "attack.exfiltration",
                "attack.t1039",
                "attack.t1048",
                "attack.t1021.002"
            ],
            "title": "Copy From Or To Admin Share Or Sysvol Folder"
        },
        {
            "author": "oscd.community, Teymur Kheirkhabarov @HeirhabarovT, Zach Stanford @svch0st, wagga",
            "date": "2020/10/05",
            "description": "Detects when an admin share is mounted using net.exe",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains|all": [
                        " use ",
                        " \\\\\\\\*\\\\*$"
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": [
                            "\\net.exe",
                            "\\net1.exe"
                        ]
                    },
                    {
                        "OriginalFileName": [
                            "net.exe",
                            "net1.exe"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Administrators"
            ],
            "id": "3abd6094-7027-475f-9630-8ab9be7b9725",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/21",
            "references": [
                "https://drive.google.com/file/d/1lKya3_mLnR3UQuCoiYruO3qgu052_iS_/view"
            ],
            "related": [
                {
                    "id": "f117933c-980c-4f78-b384-e3d838111165",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002"
            ],
            "title": "Windows Admin Share Mount Via Net.EXE"
        },
        {
            "author": "Bartlomiej Czyz, Relativity",
            "date": "2021/01/31",
            "description": "Detects rundll32 execution without parameters as observed when running Metasploit windows/smb/psexec exploit module",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine": [
                        "rundll32.exe",
                        "rundll32"
                    ]
                }
            },
            "falsepositives": [
                "False positives may occur if a user called rundll32 from CLI with no options"
            ],
            "fields": [
                "ComputerName",
                "SubjectUserName",
                "CommandLine",
                "Image",
                "ParentImage"
            ],
            "id": "5bb68627-3198-40ca-b458-49f973db8752",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/28",
            "status": "test",
            "references": [
                "https://bczyz1.github.io/2021/01/30/psexec.html"
            ],
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002",
                "attack.t1570",
                "attack.execution",
                "attack.t1569.002"
            ],
            "title": "Rundll32 Execution Without Parameters"
        },
        {
            "author": "Ecco, oscd.community, Jonhnathan Ribeiro, Tim Rauch",
            "date": "2019/09/03",
            "description": "Detects wmiexec/dcomexec/atexec/smbexec from Impacket framework",
            "detection": {
                "condition": "1 of selection_*",
                "selection_atexec": {
                    "CommandLine|contains|all": [
                        "cmd.exe",
                        "/C",
                        "Windows\\Temp\\",
                        "&1"
                    ],
                    "ParentCommandLine|contains": [
                        "svchost.exe -k netsvcs",
                        "taskeng.exe"
                    ]
                },
                "selection_other": {
                    "CommandLine|contains|all": [
                        "cmd.exe",
                        "/Q",
                        "/c",
                        "\\\\\\\\127.0.0.1\\\\",
                        "&1"
                    ],
                    "ParentImage|endswith": [
                        "\\wmiprvse.exe",
                        "\\mmc.exe",
                        "\\explorer.exe",
                        "\\services.exe"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "fields": [
                "CommandLine",
                "ParentCommandLine"
            ],
            "id": "10c14723-61c7-4c75-92ca-9af245723ad2",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/21",
            "references": [
                "https://github.com/SecureAuthCorp/impacket/blob/8b1a99f7c715702eafe3f24851817bb64721b156/examples/wmiexec.py",
                "https://github.com/SecureAuthCorp/impacket/blob/8b1a99f7c715702eafe3f24851817bb64721b156/examples/atexec.py",
                "https://github.com/SecureAuthCorp/impacket/blob/8b1a99f7c715702eafe3f24851817bb64721b156/examples/smbexec.py",
                "https://github.com/SecureAuthCorp/impacket/blob/8b1a99f7c715702eafe3f24851817bb64721b156/examples/dcomexec.py",
                "https://www.elastic.co/guide/en/security/current/suspicious-cmd-execution-via-wmi.html"
            ],
            "related": [
                {
                    "id": "e31f89f7-36fb-4697-8ab6-48823708353b",
                    "type": "obsoletes"
                }
            ],
            "status": "stable",
            "tags": [
                "attack.execution",
                "attack.t1047",
                "attack.lateral_movement",
                "attack.t1021.003"
            ],
            "title": "HackTool - Potential Impacket Lateral Movement Activity"
        },
        {
            "author": "@2xxeformyshirt (Security Risk Advisors) - rule; Teymur Kheirkhabarov (idea)",
            "date": "2020/03/04",
            "description": "Detects MMC20.Application Lateral Movement; specifically looks for the spawning of the parent MMC.exe with a command line of \"-Embedding\" as a child of svchost.exe",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains": "-Embedding",
                    "Image|endswith": "\\mmc.exe",
                    "ParentImage|endswith": "\\svchost.exe"
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "f1f3bf22-deb2-418d-8cce-e1a45e46a5bd",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2021/11/27",
            "references": [
                "https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/",
                "https://drive.google.com/file/d/1lKya3_mLnR3UQuCoiYruO3qgu052_iS_/view?usp=sharing"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1021.003"
            ],
            "title": "MMC20 Lateral Movement"
        },
        {
            "author": "Karneades, Swisscom CSIRT",
            "date": "2019/08/05",
            "description": "Detects a Windows command line executable started from MMC",
            "detection": {
                "condition": "all of selection*",
                "selection1": {
                    "ParentImage|endswith": "\\mmc.exe"
                },
                "selection2": [
                    {
                        "Image|endswith": [
                            "\\cmd.exe",
                            "\\powershell.exe",
                            "\\pwsh.exe",
                            "\\wscript.exe",
                            "\\cscript.exe",
                            "\\sh.exe",
                            "\\bash.exe",
                            "\\reg.exe",
                            "\\regsvr32.exe"
                        ]
                    },
                    {
                        "Image|contains": "\\BITSADMIN"
                    }
                ]
            },
            "fields": [
                "CommandLine",
                "Image",
                "ParentCommandLine"
            ],
            "id": "05a2ab7e-ce11-4b63-86db-ab32e763e11d",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2022/07/14",
            "references": [
                "https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.003"
            ],
            "title": "MMC Spawning Windows Shell"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/02/21",
            "description": "Detects when an internet hosted webdav share is mounted using the \"net.exe\" utility",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains|all": [
                        " use ",
                        " http"
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": [
                            "\\net.exe",
                            "\\net1.exe"
                        ]
                    },
                    {
                        "OriginalFileName": [
                            "net.exe",
                            "net1.exe"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "7e6237fe-3ddb-438f-9381-9bf9de5af8d0",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/07/25",
            "references": [
                "https://drive.google.com/file/d/1lKya3_mLnR3UQuCoiYruO3qgu052_iS_/view"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002"
            ],
            "title": "Windows Internet Hosted WebDav Share Mount Via Net.EXE"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2021/01/19",
            "description": "Detects suspicious Plink tunnel port forwarding to a local port",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains": " -R ",
                    "Description": "Command-line SSH, Telnet, and Rlogin client"
                }
            },
            "falsepositives": [
                "Administrative activity using a remote port forwarding to a local port"
            ],
            "id": "48a61b29-389f-4032-b317-b30de6b95314",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2022/10/09",
            "references": [
                "https://www.real-sec.com/2019/04/bypassing-network-restrictions-through-rdp-tunneling/",
                "https://medium.com/@informationsecurity/remote-ssh-tunneling-with-plink-exe-7831072b3d7d"
            ],
            "status": "test",
            "tags": [
                "attack.command_and_control",
                "attack.t1572",
                "attack.lateral_movement",
                "attack.t1021.001"
            ],
            "title": "Suspicious Plink Port Forwarding"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2018/03/17",
            "description": "Detects a suspicious RDP session redirect using tscon.exe",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains": " /dest:rdp-tcp#"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "f72aa3e8-49f9-4c7d-bd74-f8ab84ff9bbb",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/05/16",
            "references": [
                "http://www.korznikov.com/2017/03/0-day-or-feature-privilege-escalation.html",
                "https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6",
                "https://www.hackingarticles.in/rdp-session-hijacking-with-tscon/"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1563.002",
                "attack.t1021.001",
                "car.2013-07-002"
            ],
            "title": "Suspicious RDP Redirect Using TSCON"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/10/12",
            "description": "Detects port forwarding activity via SSH.exe",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains|windash": " -R ",
                    "Image|endswith": "\\ssh.exe"
                }
            },
            "falsepositives": [
                "Administrative activity using a remote port forwarding to a local port"
            ],
            "id": "327f48c1-a6db-4eb8-875a-f6981f1b0183",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2024/03/05",
            "status": "experimental",
            "references": [
                "https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/"
            ],
            "tags": [
                "attack.command_and_control",
                "attack.lateral_movement",
                "attack.t1572",
                "attack.t1021.001",
                "attack.t1021.004"
            ],
            "title": "Port Forwarding Activity Via SSH.EXE"
        },
        {
            "id": "f117933c-980c-4f78-b384-e3d838111165",
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/02/02",
            "description": "Detects when a share is mounted using the \"net.exe\" utility",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains": [
                        " use ",
                        " \\\\\\\\"
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": [
                            "\\net.exe",
                            "\\net1.exe"
                        ]
                    },
                    {
                        "OriginalFileName": [
                            "net.exe",
                            "net1.exe"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Legitimate activity by administrators and scripts"
            ],
            "level": "low",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/21",
            "references": [
                "https://drive.google.com/file/d/1lKya3_mLnR3UQuCoiYruO3qgu052_iS_/view"
            ],
            "related": [
                {
                    "type": "similar",
                    "id": "3abd6094-7027-475f-9630-8ab9be7b9725"
                }
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002"
            ],
            "title": "Windows Share Mount Via Net.EXE"
        },
        {
            "author": "Aaron Stratton",
            "date": "2023/11/13",
            "description": "Detects suspicious child processes of Excel which could be an indicator of lateral movement leveraging the \"ActivateMicrosoftApp\" Excel DCOM object.\n",
            "detection": {
                "condition": "all of selection_*",
                "selection_child": [
                    {
                        "OriginalFileName": [
                            "foxprow.exe",
                            "schdplus.exe",
                            "winproj.exe"
                        ]
                    },
                    {
                        "Image|endswith": [
                            "\\foxprow.exe",
                            "\\schdplus.exe",
                            "\\winproj.exe"
                        ]
                    }
                ],
                "selection_parent": {
                    "ParentImage|endswith": "\\excel.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "551d9c1f-816c-445b-a7a6-7a3864720d60",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://posts.specterops.io/lateral-movement-abuse-the-power-of-dcom-excel-application-3c016d0d9922",
                "https://github.com/grayhatkiller/SharpExShell",
                "https://learn.microsoft.com/en-us/office/vba/api/excel.xlmsapplication"
            ],
            "status": "experimental",
            "tags": [
                "attack.t1021.003",
                "attack.lateral_movement"
            ],
            "title": "Potential Excel.EXE DCOM Lateral Movement Via ActivateMicrosoftApp"
        },
        {
            "author": "Tim Rauch, Elastic (idea)",
            "date": "2022/09/27",
            "description": "Detects a remote file copy attempt to a hidden network share. This may indicate lateral movement or data staging activity.",
            "detection": {
                "condition": "all of selection*",
                "selection_args": {
                    "CommandLine|contains|all": [
                        "echo",
                        ">",
                        "\\\\\\\\.\\\\pipe\\\\"
                    ]
                },
                "selection_name": [
                    {
                        "Image|endswith": [
                            "\\cmd.exe",
                            "\\powershell.exe"
                        ]
                    },
                    {
                        "OriginalFileName": [
                            "Cmd.Exe",
                            "PowerShell.EXE"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Other programs that cause these patterns (please report)"
            ],
            "id": "9bd04a79-dabe-4f1f-a5ff-92430265c96b",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2022/12/30",
            "references": [
                "https://www.elastic.co/guide/en/security/current/privilege-escalation-via-named-pipe-impersonation.html"
            ],
            "related": [
                {
                    "id": "f35c5d71-b489-4e22-a115-f003df287317",
                    "type": "derived"
                }
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021"
            ],
            "title": "Privilege Escalation via Named Pipe Impersonation"
        },
        {
            "author": "Roberto Rodriguez @Cyb3rWard0g",
            "date": "2019/09/12",
            "description": "Detects remote PowerShell sections by monitoring for wsmprovhost (WinRM host process) as a parent or child process (sign of an active PowerShell remote session).",
            "detection": {
                "condition": "selection",
                "selection": [
                    {
                        "Image|endswith": "\\wsmprovhost.exe"
                    },
                    {
                        "ParentImage|endswith": "\\wsmprovhost.exe"
                    }
                ]
            },
            "falsepositives": [
                "Legitimate usage of remote Powershell, e.g. for monitoring purposes."
            ],
            "fields": [
                "ComputerName",
                "User",
                "CommandLine"
            ],
            "id": "734f8d9b-42b8-41b2-bcf5-abaf49d5a3c8",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2022/10/09",
            "references": [
                "https://threathunterplaybook.com/hunts/windows/190511-RemotePwshExecution/notebook.html"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1059.001",
                "attack.t1021.006"
            ],
            "title": "Remote PowerShell Session Host Process (WinRM)"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2021/12/06",
            "description": "Detects addition of users to the local Remote Desktop Users group via \"Net\" or \"Add-LocalGroupMember\".",
            "detection": {
                "condition": "all of selection_*",
                "selection_group": {
                    "CommandLine|contains": [
                        "Remote Desktop Users",
                        "Utilisateurs du Bureau \u00e0 distance",
                        "Usuarios de escritorio remoto"
                    ]
                },
                "selection_main": [
                    {
                        "CommandLine|contains|all": [
                            "localgroup ",
                            " /add"
                        ]
                    },
                    {
                        "CommandLine|contains|all": [
                            "Add-LocalGroupMember ",
                            " -Group "
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Administrative activity"
            ],
            "id": "ffa28e60-bdb1-46e0-9f82-05f7a61cc06e",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2022/09/09",
            "references": [
                "https://www.microsoft.com/security/blog/2021/11/16/evolving-trends-in-iranian-threat-actor-activity-mstic-presentation-at-cyberwarcon-2021/"
            ],
            "related": [
                {
                    "id": "ad720b90-25ad-43ff-9b5e-5c841facc8e5",
                    "type": "similar"
                },
                {
                    "id": "10fb649c-3600-4d37-b1e6-56ea90bb7e09",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.lateral_movement",
                "attack.t1133",
                "attack.t1136.001",
                "attack.t1021.001"
            ],
            "title": "User Added to Remote Desktop Users Group"
        },
        {
            "author": "Tim Rauch, Elastic (idea)",
            "date": "2022/09/27",
            "description": "Detects potential use of an SSH utility to establish RDP over a reverse SSH Tunnel. This can be used by attackers to enable routing of network packets that would otherwise not reach their intended destination.",
            "detection": {
                "condition": "all of selection*",
                "selection": {
                    "CommandLine|contains": ":3389"
                },
                "selection_opt": {
                    "CommandLine|contains": [
                        " -L ",
                        " -P ",
                        " -R ",
                        " -pw ",
                        " -ssh "
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "8a3038e8-9c9d-46f8-b184-66234a160f6f",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://www.elastic.co/guide/en/security/current/potential-remote-desktop-tunneling-detected.html"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021"
            ],
            "title": "Potential Remote Desktop Tunneling"
        },
        {
            "author": "Tim Shelton (HAWK.IO)",
            "date": "2021/12/09",
            "description": "Detects a when net.exe is called with a password in the command line",
            "detection": {
                "condition": "all of selection_* and not 1 of filter_main_*",
                "filter_main_empty": {
                    "CommandLine|endswith": " "
                },
                "selection_img": [
                    {
                        "Image|endswith": [
                            "\\net.exe",
                            "\\net1.exe"
                        ]
                    },
                    {
                        "OriginalFileName": [
                            "net.exe",
                            "net1.exe"
                        ]
                    }
                ],
                "selection_cli": {
                    "CommandLine|contains|all": [
                        " use ",
                        ":*\\\\",
                        "/USER:* *"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "d4498716-1d52-438f-8084-4a603157d131",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/21",
            "references": [
                "Internal Research"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.initial_access",
                "attack.persistence",
                "attack.privilege_escalation",
                "attack.lateral_movement",
                "attack.t1021.002",
                "attack.t1078"
            ],
            "title": "Password Provided In Command Line Of Net.EXE"
        },
        {
            "author": "Bhabesh Raj",
            "date": "2022/03/04",
            "description": "Detects suspicious UltraVNC command line flag combination that indicate a auto reconnect upon execution, e.g. startup (as seen being used by Gamaredon threat group)",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains|all": [
                        "-autoreconnect ",
                        "-connect ",
                        "-id:"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "871b9555-69ca-4993-99d3-35a59f9f3599",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2022/03/09",
            "references": [
                "https://web.archive.org/web/20220224045756/https://www.ria.ee/sites/default/files/content-editors/kuberturve/tale_of_gamaredon_infection.pdf",
                "https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/shuckworm-gamaredon-espionage-ukraine",
                "https://unit42.paloaltonetworks.com/unit-42-title-gamaredon-group-toolset-evolution",
                "https://uvnc.com/docs/uvnc-viewer/52-ultravnc-viewer-commandline-parameters.html"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.g0047",
                "attack.t1021.005"
            ],
            "title": "Suspicious UltraVNC Execution"
        },
        {
            "author": "Luca Di Bartolomeo (CrimpSec)",
            "date": "2024/01/29",
            "description": "Detects the execution of SharpMove, a .NET utility performing multiple tasks such as \"Task Creation\", \"SCM\" query, VBScript execution using WMI via its PE metadata and command line options.\n",
            "detection": {
                "condition": "selection_img or all of selection_cli_*",
                "selection_cli_actions": {
                    "CommandLine|contains": [
                        "action=create",
                        "action=dcom",
                        "action=executevbs",
                        "action=hijackdcom",
                        "action=modschtask",
                        "action=modsvc",
                        "action=query",
                        "action=scm",
                        "action=startservice",
                        "action=taskscheduler"
                    ]
                },
                "selection_cli_computer": {
                    "CommandLine|contains": "computername="
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\SharpMove.exe"
                    },
                    {
                        "OriginalFileName": "SharpMove.exe"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "055fb54c-a8f4-4aee-bd44-f74cf30a0d9d",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://github.com/0xthirteen/SharpMove/",
                "https://pentestlab.blog/tag/sharpmove/"
            ],
            "status": "experimental",
            "title": "HackTool - SharpMove Tool Execution",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002"
            ]
        },
        {
            "author": "pH-T (Nextron Systems), @Kostastsale, @TheDFIRReport",
            "date": "2022/02/12",
            "description": "Detects the execution of \"reg.exe\" for enabling/disabling the RDP service on the host by tampering with the 'CurrentControlSet\\Control\\Terminal Server' values",
            "detection": {
                "condition": "all of selection_main_* and 1 of selection_values_*",
                "selection_main_cli": {
                    "CommandLine|contains|all": [
                        " add ",
                        "\\CurrentControlSet\\Control\\Terminal Server",
                        "REG_DWORD",
                        " /f"
                    ]
                },
                "selection_main_img": [
                    {
                        "Image|endswith": "\\reg.exe"
                    },
                    {
                        "OriginalFileName": "reg.exe"
                    }
                ],
                "selection_values_1": {
                    "CommandLine|contains|all": [
                        "Licensing Core",
                        "EnableConcurrentSessions"
                    ]
                },
                "selection_values_2": {
                    "CommandLine|contains": [
                        "WinStations\\RDP-Tcp",
                        "MaxInstanceCount",
                        "fEnableWinStation",
                        "TSUserEnabled",
                        "TSEnabled",
                        "TSAppCompat",
                        "IdleWinStationPoolCount",
                        "TSAdvertise",
                        "AllowTSConnections",
                        "fSingleSessionPerUser",
                        "fDenyTSConnections"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "0d5675be-bc88-4172-86d3-1e96a4476536",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/05",
            "references": [
                "https://thedfirreport.com/2022/02/21/qbot-and-zerologon-lead-to-full-domain-compromise/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.lateral_movement",
                "attack.t1021.001",
                "attack.t1112"
            ],
            "title": "Potential Tampering With RDP Related Registry Keys Via Reg.EXE"
        },
        {
            "author": "frack113",
            "date": "2022/01/07",
            "description": "Adversaries may use Valid Accounts to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains|all": [
                        "-i ",
                        "-u ",
                        "-p "
                    ],
                    "Image|endswith": "\\ruby.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "a197e378-d31b-41c0-9635-cfdf1c1bb423",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/13",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1021.006/T1021.006.md#atomic-test-3---winrm-access-with-evil-winrm",
                "https://github.com/Hackplayers/evil-winrm"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.006"
            ],
            "title": "HackTool - WinRM Access Via Evil-WinRM"
        },
        {
            "author": "omkar72",
            "date": "2020/10/30",
            "description": "Detects user accept agreement execution in psexec commandline",
            "detection": {
                "condition": "selection",
                "selection": [
                    {
                        "Image|endswith": "\\psexec.exe"
                    },
                    {
                        "OriginalFileName": "psexec.c"
                    }
                ]
            },
            "falsepositives": [
                "Administrative scripts."
            ],
            "id": "730fc21b-eaff-474b-ad23-90fd265d4988",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html"
            ],
            "modified": "2023/02/28",
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1569",
                "attack.t1021"
            ],
            "title": "Psexec Execution"
        },
        {
            "author": "frack113",
            "date": "2022/01/07",
            "description": "Detects the usage of \"mstsc.exe\" with the \"/v\" flag to initiate a connection to a remote server.\nAdversaries may use valid accounts to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.\n",
            "detection": {
                "condition": "all of selection_* and not 1 of filter_optional_*",
                "filter_optional_wsl": {
                    "CommandLine|contains": "C:\\ProgramData\\Microsoft\\WSL\\wslg.rdp",
                    "ParentImage": "C:\\Windows\\System32\\lxss\\wslhost.exe"
                },
                "selection_cli": {
                    "CommandLine|contains|windash": " /v:"
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\mstsc.exe"
                    },
                    {
                        "OriginalFileName": "mstsc.exe"
                    }
                ]
            },
            "falsepositives": [
                "WSL (Windows Sub System For Linux)"
            ],
            "id": "954f0af7-62dd-418f-b3df-a84bc2c7a774",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2024/06/04",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1021.001/T1021.001.md#t1021001---remote-desktop-protocol",
                "https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/mstsc"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.001"
            ],
            "title": "New Remote Desktop Connection Initiated Via Mstsc.EXE"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/08/10",
            "description": "Detects rundll32 execution where the DLL is located on a remote location (share)",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains": " \\\\\\\\"
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\rundll32.exe"
                    },
                    {
                        "OriginalFileName": "RUNDLL32.EXE"
                    },
                    {
                        "CommandLine|contains": "rundll32"
                    }
                ]
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "5cdb711b-5740-4fb2-ba88-f7945027afac",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "references": [
                "https://www.cybereason.com/blog/rundll32-the-infamous-proxy-for-executing-malicious-code"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.execution",
                "attack.t1021.002",
                "attack.t1218.011"
            ],
            "title": "Rundll32 UNC Path Execution"
        },
        {
            "author": "Nikita Nazarov, oscd.community, Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/08/07",
            "description": "Detects default CSExec pipe creation",
            "detection": {
                "condition": "selection",
                "selection": {
                    "PipeName|contains": "\\csexecsvc"
                }
            },
            "falsepositives": [
                "Legitimate Administrator activity"
            ],
            "id": "f318b911-ea88-43f4-9281-0de23ede628e",
            "level": "medium",
            "logsource": {
                "category": "pipe_created",
                "product": "windows",
                "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
            },
            "modified": "2023/11/30",
            "references": [
                "https://drive.google.com/file/d/1lKya3_mLnR3UQuCoiYruO3qgu052_iS_/view",
                "https://github.com/malcomvetter/CSExec"
            ],
            "related": [
                {
                    "id": "9e77ed63-2ecf-4c7b-b09d-640834882028",
                    "type": "obsoletes"
                }
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002",
                "attack.execution",
                "attack.t1569.002"
            ],
            "title": "PUA - CSExec Default Named Pipe"
        },
        {
            "author": "Nikita Nazarov, oscd.community, Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/08/07",
            "description": "Detects default RemCom pipe creation",
            "detection": {
                "condition": "selection",
                "selection": {
                    "PipeName|contains": "\\RemCom"
                }
            },
            "falsepositives": [
                "Legitimate Administrator activity"
            ],
            "id": "d36f87ea-c403-44d2-aa79-1a0ac7c24456",
            "level": "medium",
            "logsource": {
                "category": "pipe_created",
                "product": "windows",
                "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
            },
            "modified": "2023/11/30",
            "references": [
                "https://drive.google.com/file/d/1lKya3_mLnR3UQuCoiYruO3qgu052_iS_/view",
                "https://github.com/kavika13/RemCom"
            ],
            "related": [
                {
                    "id": "9e77ed63-2ecf-4c7b-b09d-640834882028",
                    "type": "obsoletes"
                }
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002",
                "attack.execution",
                "attack.t1569.002"
            ],
            "title": "PUA - RemCom Default Named Pipe"
        },
        {
            "author": "mdecrevoisier",
            "date": "2022/10/25",
            "description": "Detects scenarios where an attacker enables the OpenSSH server and server starts to listening on SSH socket.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": 4,
                    "payload|startswith": "Server listening on ",
                    "process": "sshd"
                }
            },
            "falsepositives": [
                "Legitimate administrator activity"
            ],
            "id": "3ce8e9a4-bc61-4c9b-8e69-d7e2492a8781",
            "level": "medium",
            "logsource": {
                "product": "windows",
                "service": "openssh"
            },
            "references": [
                "https://github.com/mdecrevoisier/EVTX-to-MITRE-Attack/tree/master/TA0008-Lateral%20Movement/T1021.004-Remote%20Service%20SSH",
                "https://winaero.com/enable-openssh-server-windows-10/",
                "https://learn.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse",
                "https://virtualizationreview.com/articles/2020/05/21/ssh-server-on-windows-10.aspx",
                "https://medium.com/threatpunter/detecting-adversary-tradecraft-with-image-load-event-logging-and-eql-8de93338c16"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.004"
            ],
            "title": "OpenSSH Server Listening On Socket"
        },
        {
            "author": "Florian Roth (Nextron Systems), Wojciech Lesicki",
            "date": "2021/05/26",
            "description": "Detects known malicious service installs that appear in cases in which a Cobalt Strike beacon elevates privileges or lateral movement",
            "detection": {
                "condition": "selection_id and (selection1 or selection2 or selection3 or selection4)",
                "selection1": {
                    "ImagePath|contains|all": [
                        "ADMIN$",
                        ".exe"
                    ]
                },
                "selection2": {
                    "ImagePath|contains|all": [
                        "%COMSPEC%",
                        "start",
                        "powershell"
                    ]
                },
                "selection3": {
                    "ImagePath|contains": "powershell -nop -w hidden -encodedcommand"
                },
                "selection4": {
                    "ImagePath|base64offset|contains": "IEX (New-Object Net.Webclient).DownloadString('http://127.0.0.1:"
                },
                "selection_id": {
                    "EventID": 7045,
                    "Provider_Name": "Service Control Manager"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "5a105d34-05fc-401e-8553-272b45c1522d",
            "level": "critical",
            "logsource": {
                "product": "windows",
                "service": "system"
            },
            "modified": "2022/11/27",
            "references": [
                "https://www.sans.org/webcasts/119395",
                "https://www.crowdstrike.com/blog/getting-the-bacon-from-cobalt-strike-beacon/",
                "https://thedfirreport.com/2021/08/29/cobalt-strike-a-defenders-guide/"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.privilege_escalation",
                "attack.lateral_movement",
                "attack.t1021.002",
                "attack.t1543.003",
                "attack.t1569.002"
            ],
            "title": "CobaltStrike Service Installations - System"
        },
        {
            "author": "Omer Faruk Celik",
            "date": "2018/03/20",
            "description": "Detects the use of smbexec.py tool by detecting a specific service installation",
            "detection": {
                "condition": "selection_eid and 1 of selection_service_*",
                "selection_eid": {
                    "EventID": 7045,
                    "Provider_Name": "Service Control Manager"
                },
                "selection_service_image": {
                    "ImagePath|contains": [
                        ".bat & del ",
                        "__output 2^>^&1 >"
                    ]
                },
                "selection_service_name": {
                    "ServiceName": "BTOBTO"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "52a85084-6989-40c3-8f32-091e12e13f09",
            "level": "high",
            "logsource": {
                "product": "windows",
                "service": "system"
            },
            "modified": "2023/11/09",
            "references": [
                "https://blog.ropnop.com/using-credentials-to-own-windows-boxes-part-2-psexec-and-services/",
                "https://github.com/fortra/impacket/blob/33058eb2fde6976ea62e04bc7d6b629d64d44712/examples/smbexec.py#L286-L296",
                "https://github.com/fortra/impacket/blob/edef71f17bc1240f9f8c957bbda98662951ac3ec/examples/smbexec.py#L60"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.execution",
                "attack.t1021.002",
                "attack.t1569.002"
            ],
            "title": "smbexec.py Service Installation"
        },
        {
            "author": "Roberto Rodriguez @Cyb3rWard0g, Open Threat Research (OTR)",
            "date": "2020/10/12",
            "description": "Detects a threat actor creating a file named `iertutil.dll` in the `C:\\Program Files\\Internet Explorer\\` directory over the network for a DCOM InternetExplorer DLL Hijack scenario.",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "SubjectUserName|endswith": "$"
                },
                "selection": {
                    "EventID": 5145,
                    "RelativeTargetName|endswith": "\\Internet Explorer\\iertutil.dll"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "c39f0c81-7348-4965-ab27-2fde35a1b641",
            "level": "high",
            "logsource": {
                "product": "windows",
                "service": "security"
            },
            "modified": "2022/11/26",
            "references": [
                "https://threathunterplaybook.com/hunts/windows/201009-RemoteDCOMIErtUtilDLLHijack/notebook.html"
            ],
            "status": "test",
            "title": "DCOM InternetExplorer.Application Iertutil DLL Hijack - Security",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002",
                "attack.t1021.003"
            ]
        },
        {
            "author": "Roberto Rodriguez @Cyb3rWard0g, Open Threat Research (OTR)",
            "date": "2020/10/12",
            "description": "Detects a threat actor creating a file named `wbemcomn.dll` in the `C:\\Windows\\System32\\wbem\\` directory over the network for a WMI DLL Hijack scenario.",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "SubjectUserName|endswith": "$"
                },
                "selection": {
                    "EventID": 5145,
                    "RelativeTargetName|endswith": "\\wbem\\wbemcomn.dll"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "f6c68d5f-e101-4b86-8c84-7d96851fd65c",
            "level": "high",
            "logsource": {
                "product": "windows",
                "service": "security"
            },
            "modified": "2022/02/24",
            "references": [
                "https://threathunterplaybook.com/hunts/windows/201009-RemoteWMIWbemcomnDLLHijack/notebook.html"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1047",
                "attack.lateral_movement",
                "attack.t1021.002"
            ],
            "title": "T1047 Wmiprvse Wbemcomn DLL Hijack"
        },
        {
            "author": "Bartlomiej Czyz, Relativity",
            "date": "2021/01/21",
            "description": "Detects usage of Metasploit SMB PsExec (exploit/windows/smb/psexec) and Impacket psexec.py by triggering on specific service installation",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "ServiceName": "PSEXESVC"
                },
                "selection": {
                    "EventID": 4697,
                    "ServiceFileName|re": "^%systemroot%\\\\[a-zA-Z]{8}\\.exe$",
                    "ServiceName|re": "(^[a-zA-Z]{4}$)|(^[a-zA-Z]{8}$)|(^[a-zA-Z]{16}$)",
                    "ServiceStartType": 3,
                    "ServiceType": "0x10"
                }
            },
            "falsepositives": [
                "Possible, different agents with a 8 character binary and a 4, 8 or 16 character service name"
            ],
            "fields": [
                "ComputerName",
                "SubjectDomainName",
                "SubjectUserName",
                "ServiceName",
                "ServiceFileName"
            ],
            "id": "6fb63b40-e02a-403e-9ffd-3bcc1d749442",
            "level": "high",
            "logsource": {
                "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697",
                "product": "windows",
                "service": "security"
            },
            "modified": "2022/10/05",
            "status": "test",
            "references": [
                "https://bczyz1.github.io/2021/01/30/psexec.html"
            ],
            "related": [
                {
                    "id": "1a17ce75-ff0d-4f02-9709-2b7bb5618cf0",
                    "type": "derived"
                }
            ],
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002",
                "attack.t1570",
                "attack.execution",
                "attack.t1569.002"
            ],
            "title": "Metasploit Or Impacket Service Installation Via SMB PsExec"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2017/03/04",
            "description": "Detects access to ADMIN$ network share",
            "detection": {
                "condition": "selection and not 1 of filter_*",
                "filter_main_computer_account": {
                    "SubjectUserName|endswith": "$"
                },
                "selection": {
                    "EventID": 5140,
                    "ShareName": "Admin$"
                }
            },
            "falsepositives": [
                "Legitimate administrative activity"
            ],
            "id": "098d7118-55bc-4912-a836-dc6483a8d150",
            "level": "low",
            "logsource": {
                "definition": "Requirements: The advanced audit policy setting \"Object Access > Audit File Share\" must be configured for Success/Failure",
                "product": "windows",
                "service": "security"
            },
            "modified": "2024/01/16",
            "references": [
                "https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-10/security/threat-protection/auditing/event-5140"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002"
            ],
            "title": "Access To ADMIN$ Network Share"
        },
        {
            "id": "52d8b0c6-53d6-439a-9e41-52ad442ad9ad",
            "author": "Samir Bousseaden",
            "date": "2019/04/03",
            "description": "This detection excludes known namped pipes accessible remotely and notify on newly observed ones, may help to detect lateral movement and remote exec using named pipes",
            "detection": {
                "condition": "selection1 and not false_positives",
                "false_positives": {
                    "RelativeTargetName": [
                        "atsvc",
                        "samr",
                        "lsarpc",
                        "lsass",
                        "winreg",
                        "netlogon",
                        "srvsvc",
                        "protected_storage",
                        "wkssvc",
                        "browser",
                        "netdfs",
                        "svcctl",
                        "spoolss",
                        "ntsvcs",
                        "LSM_API_service",
                        "HydraLsPipe",
                        "TermSrv_API_service",
                        "MsFteWds",
                        "sql\\query",
                        "eventlog"
                    ]
                },
                "selection1": {
                    "EventID": 5145,
                    "ShareName": "\\\\\\\\\\*\\\\IPC$"
                }
            },
            "falsepositives": [
                "Update the excluded named pipe to filter out any newly observed legit named pipe"
            ],
            "level": "high",
            "logsource": {
                "definition": "The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure",
                "product": "windows",
                "service": "security"
            },
            "modified": "2023/03/14",
            "references": [
                "https://twitter.com/menasec1/status/1104489274387451904"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002"
            ],
            "title": "First Time Seen Remote Named Pipe"
        },
        {
            "author": "Samir Bousseaden",
            "date": "2019/04/03",
            "description": "Detects remote service activity via remote access to the svcctl named pipe",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": 5145,
                    "Accesses|contains": "WriteData",
                    "ShareName": "\\\\\\\\\\*\\\\IPC$",
                    "RelativeTargetName": "svcctl"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "586a8d6b-6bfe-4ad9-9d78-888cd2fe50c3",
            "level": "medium",
            "logsource": {
                "definition": "The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure",
                "product": "windows",
                "service": "security"
            },
            "modified": "2022/08/11",
            "references": [
                "https://blog.menasec.net/2019/03/threat-hunting-26-remote-windows.html"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.persistence",
                "attack.t1021.002"
            ],
            "title": "Remote Service Activity via SVCCTL Named Pipe"
        },
        {
            "author": "Bhabesh Raj",
            "date": "2020/12/14",
            "description": "Detects execution of Impacket's psexec.py.",
            "detection": {
                "condition": "selection1",
                "selection1": {
                    "EventID": 5145,
                    "ShareName": "\\\\\\\\\\*\\\\IPC$",
                    "RelativeTargetName|contains": [
                        "RemCom_stdin",
                        "RemCom_stdout",
                        "RemCom_stderr"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "32d56ea1-417f-44ff-822b-882873f5f43b",
            "level": "high",
            "logsource": {
                "definition": "The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure",
                "product": "windows",
                "service": "security"
            },
            "modified": "2022/09/22",
            "references": [
                "https://blog.menasec.net/2019/02/threat-hunting-3-detecting-psexec.html"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002"
            ],
            "title": "Impacket PsExec Execution"
        },
        {
            "id": "c462f537-a1e3-41a6-b5fc-b2c2cef9bf82",
            "author": "Samir Bousseaden",
            "date": "2019/04/03",
            "description": "detects execution of psexec or paexec with renamed service name, this rule helps to filter out the noise if psexec is used for legit purposes or if attacker uses a different psexec client other than sysinternal one",
            "detection": {
                "condition": "selection1 and not filter",
                "filter": {
                    "RelativeTargetName|startswith": "PSEXESVC"
                },
                "selection1": {
                    "EventID": 5145,
                    "ShareName": "\\\\\\\\\\*\\\\IPC$",
                    "RelativeTargetName|endswith": [
                        "-stdin",
                        "-stdout",
                        "-stderr"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "level": "high",
            "logsource": {
                "definition": "The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure",
                "product": "windows",
                "service": "security"
            },
            "modified": "2022/08/11",
            "references": [
                "https://blog.menasec.net/2019/02/threat-hunting-3-detecting-psexec.html"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002"
            ],
            "title": "Suspicious PsExec Execution"
        },
        {
            "author": "Roberto Rodriguez @Cyb3rWard0g",
            "date": "2019/08/10",
            "description": "Detects access to a protected_storage service over the network. Potential abuse of DPAPI to extract domain backup keys from Domain Controllers",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": 5145,
                    "RelativeTargetName": "protected_storage",
                    "ShareName|contains": "IPC"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "45545954-4016-43c6-855e-eae8f1c369dc",
            "level": "high",
            "logsource": {
                "product": "windows",
                "service": "security"
            },
            "modified": "2021/11/27",
            "references": [
                "https://threathunterplaybook.com/hunts/windows/190620-DomainDPAPIBackupKeyExtraction/notebook.html"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002"
            ],
            "title": "Protected Storage Service Access"
        },
        {
            "author": "Florian Roth (Nextron Systems), Wojciech Lesicki",
            "date": "2021/05/26",
            "description": "Detects known malicious service installs that appear in cases in which a Cobalt Strike beacon elevates privileges or lateral movement",
            "detection": {
                "condition": "event_id and 1 of selection*",
                "event_id": {
                    "EventID": 4697
                },
                "selection1": {
                    "ServiceFileName|contains|all": [
                        "ADMIN$",
                        ".exe"
                    ]
                },
                "selection2": {
                    "ServiceFileName|contains|all": [
                        "%COMSPEC%",
                        "start",
                        "powershell"
                    ]
                },
                "selection3": {
                    "ServiceFileName|contains": "powershell -nop -w hidden -encodedcommand"
                },
                "selection4": {
                    "ServiceFileName|base64offset|contains": "IEX (New-Object Net.Webclient).DownloadString('http://127.0.0.1:"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "d7a95147-145f-4678-b85d-d1ff4a3bb3f6",
            "level": "high",
            "modified": "2022/11/27",
            "logsource": {
                "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697",
                "product": "windows",
                "service": "security"
            },
            "references": [
                "https://www.sans.org/webcasts/119395",
                "https://www.crowdstrike.com/blog/getting-the-bacon-from-cobalt-strike-beacon/",
                "https://thedfirreport.com/2021/08/29/cobalt-strike-a-defenders-guide/"
            ],
            "related": [
                {
                    "type": "derived",
                    "id": "5a105d34-05fc-401e-8553-272b45c1522d"
                }
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.privilege_escalation",
                "attack.lateral_movement",
                "attack.t1021.002",
                "attack.t1543.003",
                "attack.t1569.002"
            ],
            "title": "CobaltStrike Service Installations - Security"
        },
        {
            "author": "Samir Bousseaden",
            "date": "2019/02/16",
            "description": "Detects svchost hosting RDP termsvcs communicating with the loopback address",
            "detection": {
                "condition": "selection and ( sourceRDP or destinationRDP ) and not 1 of filter*",
                "destinationRDP": {
                    "DestPort": 3389,
                    "SourceAddress": [
                        "127.*",
                        "::1"
                    ]
                },
                "filter_app_container": {
                    "FilterOrigin": "AppContainer Loopback"
                },
                "filter_thor": {
                    "Application|endswith": [
                        "\\thor.exe",
                        "\\thor64.exe"
                    ]
                },
                "selection": {
                    "EventID": 5156
                },
                "sourceRDP": {
                    "DestAddress": [
                        "127.*",
                        "::1"
                    ],
                    "SourcePort": 3389
                }
            },
            "falsepositives": [
                "Programs that connect locally to the RDP port"
            ],
            "id": "5bed80b6-b3e8-428e-a3ae-d3c757589e41",
            "level": "high",
            "logsource": {
                "product": "windows",
                "service": "security"
            },
            "modified": "2022/09/02",
            "references": [
                "https://twitter.com/SBousseaden/status/1096148422984384514",
                "https://github.com/sbousseaden/EVTX-ATTACK-SAMPLES/blob/44fbe85f72ee91582876b49678f9a26292a155fb/Command%20and%20Control/DE_RDP_Tunnel_5156.evtx"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.command_and_control",
                "attack.lateral_movement",
                "attack.t1090.001",
                "attack.t1090.002",
                "attack.t1021.001",
                "car.2013-07-002"
            ],
            "title": "RDP over Reverse SSH Tunnel WFP"
        },
        {
            "author": "Pushkarev Dmitry",
            "date": "2020/06/27",
            "description": "This event is generated when an authenticated user who is not allowed to log on remotely attempts to connect to this computer through Remote Desktop.\nOften, this event can be generated by attackers when searching for available windows servers in the network.\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": 4825
                }
            },
            "falsepositives": [
                "Valid user was not added to RDP group"
            ],
            "fields": [
                "EventCode",
                "AccountName",
                "ClientAddress"
            ],
            "id": "8e5c03fa-b7f0-11ea-b242-07e0576828d9",
            "level": "medium",
            "logsource": {
                "product": "windows",
                "service": "security"
            },
            "modified": "2021/11/27",
            "status": "test",
            "references": [
                "https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventid=4825"
            ],
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.001"
            ],
            "title": "Denied Access To Remote Desktop"
        },
        {
            "author": "Jose Rodriguez (@Cyb3rPandaH), OTR (Open Threat Research)",
            "date": "2020/08/06",
            "description": "Look for non-system accounts SMB accessing a file with write (0x2) access mask via administrative share (i.e C$).",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "SubjectUserName|endswith": "$"
                },
                "selection": {
                    "EventID": 5145,
                    "AccessMask": "0x2",
                    "ShareName|endswith": "C$"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "b210394c-ba12-4f89-9117-44a2464b9511",
            "level": "high",
            "logsource": {
                "product": "windows",
                "service": "security"
            },
            "modified": "2021/11/27",
            "references": [
                "https://github.com/OTRF/ThreatHunter-Playbook/blob/f7a58156dbfc9b019f17f638b8c62d22e557d350/playbooks/WIN-201012004336.yaml",
                "https://securitydatasets.com/notebooks/atomic/windows/lateral_movement/SDWIN-200806015757.html?highlight=create%20file"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002"
            ],
            "title": "SMB Create Remote File Admin Share"
        },
        {
            "author": "OTR (Open Threat Research)",
            "date": "2018/11/28",
            "description": "Detects the use of the spoolss named pipe over SMB. This can be used to trigger the authentication via NTLM of any machine that has the spoolservice enabled.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": 5145,
                    "ShareName": "\\\\\\\\\\*\\\\IPC$",
                    "RelativeTargetName": "spoolss"
                }
            },
            "falsepositives": [
                "Domain Controllers acting as printer servers too? :)"
            ],
            "id": "214e8f95-100a-4e04-bb31-ef6cba8ce07e",
            "level": "medium",
            "logsource": {
                "product": "windows",
                "service": "security"
            },
            "modified": "2022/08/11",
            "references": [
                "https://posts.specterops.io/hunting-in-active-directory-unconstrained-delegation-forests-trusts-71f2b33688e1",
                "https://dirkjanm.io/a-different-way-of-abusing-zerologon/",
                "https://twitter.com/_dirkjan/status/1309214379003588608"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002"
            ],
            "title": "DCERPC SMB Spoolss Named Pipe"
        },
        {
            "author": "Chakib Gzenayi (@Chak092), Hosni Mribah",
            "date": "2020/05/06",
            "description": "Alerts on Metasploit host's authentications on the domain.",
            "detection": {
                "condition": "1 of selection*",
                "selection1": {
                    "AuthenticationPackageName": "NTLM",
                    "EventID": [
                        4625,
                        4624
                    ],
                    "LogonType": 3,
                    "WorkstationName|re": "^[A-Za-z0-9]{16}$"
                },
                "selection2": {
                    "EventID": 4776,
                    "Workstation|re": "^[A-Za-z0-9]{16}$"
                }
            },
            "falsepositives": [
                "Linux hostnames composed of 16 characters."
            ],
            "id": "72124974-a68b-4366-b990-d30e0b2a190d",
            "level": "high",
            "logsource": {
                "product": "windows",
                "service": "security"
            },
            "modified": "2024/01/25",
            "references": [
                "https://github.com/rapid7/metasploit-framework/blob/1416b5776d963f21b7b5b45d19f3e961201e0aed/lib/rex/proto/smb/client.rb"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002"
            ],
            "title": "Metasploit SMB Authentication"
        },
        {
            "author": "Thomas Patzke",
            "date": "2019/01/28",
            "description": "RDP login with localhost source address may be a tunnelled login",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": 4624,
                    "IpAddress": [
                        "::1",
                        "127.0.0.1"
                    ],
                    "LogonType": 10
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "51e33403-2a37-4d66-a574-1fda1782cc31",
            "level": "high",
            "logsource": {
                "product": "windows",
                "service": "security"
            },
            "modified": "2022/10/09",
            "references": [
                "https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "car.2013-07-002",
                "attack.t1021.001"
            ],
            "title": "RDP Login from Localhost"
        },
        {
            "author": "Roberto Rodriguez @Cyb3rWard0g",
            "date": "2019/08/10",
            "description": "Detects remote PowerShell sessions",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Data|contains|all": [
                        "HostName=ServerRemoteHost",
                        "wsmprovhost.exe"
                    ]
                }
            },
            "falsepositives": [
                "Legitimate use remote PowerShell sessions"
            ],
            "id": "60167e5c-84b2-4c95-a7ac-86281f27c445",
            "level": "low",
            "logsource": {
                "category": "ps_classic_start",
                "product": "windows"
            },
            "modified": "2024/01/03",
            "references": [
                "https://threathunterplaybook.com/hunts/windows/190511-RemotePwshExecution/notebook.html"
            ],
            "related": [
                {
                    "id": "96b9f619-aa91-478f-bacb-c3e50f8df575",
                    "type": "derived"
                }
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1059.001",
                "attack.lateral_movement",
                "attack.t1021.006"
            ],
            "title": "Remote PowerShell Session (PS Classic)"
        },
        {
            "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
            "date": "2020/06/24",
            "description": "Detects suspicious use of the WSMAN provider without PowerShell.exe as the host application.",
            "detection": {
                "condition": "selection and not 1 of filter_main_*",
                "filter_main_ps": {
                    "Data|contains": [
                        "HostApplication=powershell",
                        "HostApplication=C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell",
                        "HostApplication=C:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell",
                        "HostApplication=C:/Windows/System32/WindowsPowerShell/v1.0/powershell",
                        "HostApplication=C:/Windows/SysWOW64/WindowsPowerShell/v1.0/powershell"
                    ]
                },
                "selection": {
                    "Data|contains": "ProviderName=WSMan"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "df9a0e0e-fedb-4d6c-8668-d765dfc92aa7",
            "level": "medium",
            "logsource": {
                "product": "windows",
                "service": "powershell-classic"
            },
            "modified": "2023/10/27",
            "references": [
                "https://twitter.com/chadtilbury/status/1275851297770610688",
                "https://bohops.com/2020/05/12/ws-management-com-another-approach-for-winrm-lateral-movement/",
                "https://github.com/bohops/WSMan-WinRM"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1059.001",
                "attack.lateral_movement",
                "attack.t1021.003"
            ],
            "title": "Suspicious Non PowerShell WSMAN COM Provider"
        },
        {
            "author": "frack113",
            "date": "2022/08/13",
            "description": "Adversaries may use to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "ScriptBlockText|contains|all": [
                        "New-PSDrive",
                        "-psprovider ",
                        "filesystem",
                        "-root ",
                        "\\\\\\\\",
                        "$"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "1c563233-030e-4a07-af8c-ee0490a66d3a",
            "level": "medium",
            "logsource": {
                "category": "ps_script",
                "product": "windows",
                "definition": "Requirements: Script Block Logging must be enabled"
            },
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1021.002/T1021.002.md#atomic-test-2---map-admin-share-powershell",
                "https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.management/new-psdrive?view=powershell-7.2"
            ],
            "status": "test",
            "title": "Suspicious New-PSDrive to Admin Share",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002"
            ]
        },
        {
            "author": "frack113",
            "date": "2022/01/07",
            "description": "Adversaries may use Valid Accounts to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.",
            "detection": {
                "condition": "selection_cmdlet",
                "selection_cmdlet": {
                    "ScriptBlockText|contains": "Enable-PSRemoting "
                }
            },
            "falsepositives": [
                "Legitimate script"
            ],
            "id": "991a9744-f2f0-44f2-bd33-9092eba17dc3",
            "level": "medium",
            "logsource": {
                "category": "ps_script",
                "product": "windows",
                "definition": "Requirements: Script Block Logging must be enabled"
            },
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1021.006/T1021.006.md#atomic-test-1---enable-windows-remote-management",
                "https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/enable-psremoting?view=powershell-7.2"
            ],
            "status": "test",
            "title": "Enable Windows Remote Management",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.006"
            ]
        },
        {
            "author": "frack113",
            "date": "2022/01/07",
            "description": "Adversaries may use Valid Accounts to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.",
            "detection": {
                "condition": "selection_cmdlet",
                "selection_cmdlet": {
                    "ScriptBlockText|contains|all": [
                        "invoke-command ",
                        " -ComputerName "
                    ]
                }
            },
            "falsepositives": [
                "Legitimate script"
            ],
            "id": "7b836d7f-179c-4ba4-90a7-a7e60afb48e6",
            "level": "medium",
            "logsource": {
                "category": "ps_script",
                "product": "windows",
                "definition": "Requirements: Script Block Logging must be enabled"
            },
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1021.006/T1021.006.md#atomic-test-2---invoke-command",
                "https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/invoke-command?view=powershell-7.4"
            ],
            "status": "test",
            "title": "Execute Invoke-command on Remote Host",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.006"
            ]
        },
        {
            "id": "96b9f619-aa91-478f-bacb-c3e50f8df575",
            "author": "Roberto Rodriguez @Cyb3rWard0g, Tim Shelton",
            "date": "2019/08/10",
            "description": "Detects remote PowerShell sessions",
            "detection": {
                "condition": "selection and not 1 of filter_*",
                "filter_pwsh_archive": {
                    "ContextInfo|contains": "\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\Microsoft.PowerShell.Archive\\Microsoft.PowerShell.Archive.psm1"
                },
                "selection": {
                    "ContextInfo|contains|all": [
                        " = ServerRemoteHost ",
                        "wsmprovhost.exe"
                    ]
                }
            },
            "falsepositives": [
                "Legitimate use remote PowerShell sessions"
            ],
            "level": "high",
            "logsource": {
                "category": "ps_module",
                "product": "windows",
                "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
            },
            "modified": "2023/01/20",
            "references": [
                "https://threathunterplaybook.com/hunts/windows/190511-RemotePwshExecution/notebook.html"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1059.001",
                "attack.lateral_movement",
                "attack.t1021.006"
            ],
            "title": "Remote PowerShell Session (PS Module)"
        },
        {
            "author": "Wojciech Lesicki",
            "date": "2021/06/29",
            "description": "Detects known malicious service installs that appear in cases in which a Cobalt Strike beacon elevates privileges or lateral movement.\n",
            "detection": {
                "condition": "all of selection_*",
                "selection_details": [
                    {
                        "Details|contains|all": [
                            "ADMIN$",
                            ".exe"
                        ]
                    },
                    {
                        "Details|contains|all": [
                            "%COMSPEC%",
                            "start",
                            "powershell"
                        ]
                    }
                ],
                "selection_key": [
                    {
                        "TargetObject|contains": "\\System\\CurrentControlSet\\Services"
                    },
                    {
                        "TargetObject|contains|all": [
                            "\\System\\ControlSet",
                            "\\Services"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "61a7697c-cb79-42a8-a2ff-5f0cdfae0130",
            "level": "high",
            "logsource": {
                "category": "registry_set",
                "product": "windows"
            },
            "modified": "2024/03/25",
            "references": [
                "https://www.sans.org/webcasts/tech-tuesday-workshop-cobalt-strike-detection-log-analysis-119395"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.privilege_escalation",
                "attack.lateral_movement",
                "attack.t1021.002",
                "attack.t1543.003",
                "attack.t1569.002"
            ],
            "title": "Potential CobaltStrike Service Installations - Registry"
        }
    ],
    "x_mitre_platforms": [
        "Linux",
        "macOS",
        "Windows",
        "IaaS"
    ],
    "x_mitre_domains": [
        "enterprise-attack"
    ],
    "x_mitre_contributors": [
        "Dan Borges, @1njection"
    ],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "lateral-movement"
        }
    ],
    "x_mitre_detection": "Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through Discovery techniques prior to attempting Lateral Movement. \n\nUse of applications such as ARD may be legitimate depending on the environment and how it\u2019s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using these applications. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. \n\nIn macOS, you can review logs for \"screensharingd\" and \"Authentication\" event messages. Monitor network connections regarding remote management (ports tcp:3283 and tcp:5900) and for remote login (port tcp:22).(Citation: Lockboxx ARD 2019)(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)",
    "x_mitre_is_subtechnique": false,
    "x_mitre_version": "1.5",
    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
    "x_mitre_data_sources": [
        "Module: Module Load",
        "Network Traffic: Network Connection Creation",
        "Command: Command Execution",
        "Network Share: Network Share Access",
        "WMI: WMI Creation",
        "Logon Session: Logon Session Creation",
        "Network Traffic: Network Traffic Flow",
        "Process: Process Creation"
    ],
    "x_mitre_permissions_required": []
}