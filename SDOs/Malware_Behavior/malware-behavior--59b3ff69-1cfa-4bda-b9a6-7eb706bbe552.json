{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--59b3ff69-1cfa-4bda-b9a6-7eb706bbe552",
    "created": "2024-08-13T14:46:36.650287Z",
    "modified": "2024-08-13T14:46:36.650287Z",
    "name": "HTTP Flood",
    "description": "An adversary may execute a flooding attack using the HTTP protocol with the intent to deny legitimate users access to a service by consuming resources at the application layer such as web services and their infrastructure. These attacks use legitimate session-based HTTP GET requests designed to consume large amounts of a server's resources. Since these are legitimate sessions this attack is very difficult to detect.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CAPEC",
            "url": "https://capec.mitre.org/data/definitions/488.html",
            "external_id": "488"
        },
        {
            "source_name": "CWE",
            "external_id": "770"
        }
    ],
    "x_mitre_impact": "Unknown",
    "x_mitre_likelihood_of_attack": "Unknown",
    "x_mitre_mitigations": [
        {
            "description": "Design: Use a Web Application Firewall (WAF) to help filter out malicious traffic. This can be setup with rules to block IP addresses found in IP reputation databases, which contains lists of known bad IP addresses. Analysts should also monitor when the traffic flow becomes abnormally large, and be able to add on-the-fly rules to block malicious traffic. Special care should be taken to ensure low false positive rates in block rules and functionality should be implemented to allow a legitimate user to resume sending traffic if they have been blocked."
        },
        {
            "description": "Hire a third party provider to implement a Web Application Firewall (WAF) for your application. Third party providers have dedicated resources and expertise that could allow them to update rules and prevent HTTP Floods very quickly."
        },
        {
            "description": "Design: Use a load balancer such as nginx to prevent small scale HTTP Floods by dispersing traffic between a group of servers."
        },
        {
            "description": "Implementation: Make a requesting machine solve some kind of challenge before allowing them to send an HTTP request. This could be a captcha or something similar that works to deter bots."
        }
    ]
}