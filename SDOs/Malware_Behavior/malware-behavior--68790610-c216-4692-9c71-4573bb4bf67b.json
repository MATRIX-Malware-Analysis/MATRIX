{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--68790610-c216-4692-9c71-4573bb4bf67b",
    "created": "2024-08-13T14:46:37.047277Z",
    "modified": "2024-08-13T14:46:37.246401Z",
    "name": "Hide Artifacts: Process Argument Spoofing",
    "description": "Adversaries may attempt to hide process command-line arguments by overwriting process memory. Process command-line arguments are stored in the process environment block (PEB), a data structure used by Windows to store various information about/used by a process. The PEB includes the process command-line arguments that are referenced when executing the process. When a process is created, defensive tools/sensors that monitor process creations may retrieve the process arguments from the PEB.[1][2]Adversaries may manipulate a process PEB to evade defenses. For example, Process Hollowing can be abused to spawn a process in a suspended state with benign arguments. After the process is spawned and the PEB is initialized (and process information is potentially logged by tools/sensors), adversaries may override the PEB to modify the command-line arguments (ex: using the Native API WriteProcessMemory() function) then resume process execution with malicious arguments.[3][2][4]Adversaries may also execute a process with malicious command-line arguments then patch the memory with benign arguments that may bypass subsequent process memory analysis.[5]This behavior may also be combined with other tricks (such as Parent PID Spoofing) to manipulate or further evade process-based detections.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1564/010",
            "external_id": "T1564/010"
        }
    ]
}