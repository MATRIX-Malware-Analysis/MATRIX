{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--62312eb7-b956-495b-b145-d82860635303",
    "created": "2024-08-13T14:46:36.91514Z",
    "modified": "2024-08-13T14:46:48.397141Z",
    "name": "System Services: Service Execution",
    "description": "Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (services.exe) is an interface to manage and manipulate services.[1] The service control manager is accessible to users via GUI components as well as system utilities such as sc.exe and Net.PsExec can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API.[2] Tools such as PsExec and sc.exe can accept remote servers as arguments and may be used to conduct remote execution.Adversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with Windows Service during service persistence or privilege escalation.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1569/002",
            "external_id": "T1569/002"
        }
    ],
    "x_mitre_capa_rules": [
        {
            "rule": {
                "features": [
                    {
                        "or": [
                            {
                                "and": [
                                    {
                                        "or": [
                                            {
                                                "basic block": [
                                                    {
                                                        "and": [
                                                            {
                                                                "number": "2 = SERVICE_AUTO_START"
                                                            },
                                                            {
                                                                "api": "advapi32.CreateService"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "call": [
                                                    {
                                                        "and": [
                                                            {
                                                                "number": "2 = SERVICE_AUTO_START"
                                                            },
                                                            {
                                                                "api": "advapi32.CreateService"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "optional": [
                                            {
                                                "or": [
                                                    {
                                                        "api": "advapi32.OpenService"
                                                    },
                                                    {
                                                        "api": "advapi32.StartService"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "and": [
                                    {
                                        "match": "host-interaction/process/create"
                                    },
                                    {
                                        "or": [
                                            {
                                                "and": [
                                                    {
                                                        "string": "/^sc(|\\.exe)$/i"
                                                    },
                                                    {
                                                        "string": "/create /i"
                                                    }
                                                ]
                                            },
                                            {
                                                "string": "/^sc(|\\.exe) create/i"
                                            },
                                            {
                                                "string": "/New-Service /i"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "and": [
                                    {
                                        "match": "set registry value"
                                    },
                                    {
                                        "string": "/System\\\\(CurrentControlSet|ControlSet001)\\\\Services/i"
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Persistence::Create or Modify System Process::Windows Service [T1543.003]",
                        "Execution::System Services::Service Execution [T1569.002]"
                    ],
                    "authors": [
                        "moritz.raabe@mandiant.com"
                    ],
                    "examples": [
                        "Practical Malware Analysis Lab 03-02.dll_:0x10004706",
                        "9f012d7e3ae8f62370278e372691eb73b878fe2280b6083e1be637b278021855:0x40113A"
                    ],
                    "name": "persist via Windows service",
                    "namespace": "persistence/service",
                    "scopes": {
                        "dynamic": "thread",
                        "static": "function"
                    }
                }
            }
        },
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "api": "advapi32.CreateService"
                            },
                            {
                                "optional": [
                                    {
                                        "api": "advapi32.OpenSCManager"
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Persistence::Create or Modify System Process::Windows Service [T1543.003]",
                        "Execution::System Services::Service Execution [T1569.002]"
                    ],
                    "authors": [
                        "moritz.raabe@mandiant.com"
                    ],
                    "examples": [
                        "Practical Malware Analysis Lab 03-02.dll_:0x10004706"
                    ],
                    "name": "create service",
                    "namespace": "host-interaction/service/create",
                    "scopes": {
                        "dynamic": "thread",
                        "static": "function"
                    }
                }
            }
        },
        {
            "rule": {
                "features": [
                    {
                        "and": [
                            {
                                "optional": [
                                    {
                                        "match": "get service handle"
                                    }
                                ]
                            },
                            {
                                "or": [
                                    {
                                        "api": "advapi32.ChangeServiceConfig"
                                    },
                                    {
                                        "api": "advapi32.ChangeServiceConfig2"
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "meta": {
                    "att&ck": [
                        "Persistence::Create or Modify System Process::Windows Service [T1543.003]",
                        "Execution::System Services::Service Execution [T1569.002]"
                    ],
                    "authors": [
                        "moritz.raabe@mandiant.com"
                    ],
                    "examples": [
                        "7D16EFD0078F22C17A4BD78B0F0CC468:0x401000"
                    ],
                    "name": "modify service",
                    "namespace": "host-interaction/service/modify",
                    "scopes": {
                        "dynamic": "thread",
                        "static": "function"
                    }
                }
            }
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "Sagie Dulce, Dekel Paz",
            "date": "2022/01/01",
            "description": "Detects remote RPC calls to possibly abuse remote encryption service via MS-EFSR",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": 3,
                    "EventLog": "RPCFW",
                    "InterfaceUuid": "367abb81-9844-35f1-ad32-98f038001003"
                }
            },
            "falsepositives": [
                "Administrative tasks on remote services"
            ],
            "id": "10018e73-06ec-46ec-8107-9172f1e04ff2",
            "level": "high",
            "logsource": {
                "category": "application",
                "definition": "Requirements: install and apply the RPC Firewall to all processes with \"audit:true action:block uuid:367abb81-9844-35f1-ad32-98f038001003",
                "product": "rpc_firewall"
            },
            "modified": "2022/01/01",
            "references": [
                "https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-srvs/accf23b0-0f57-441c-9185-43041f1b0ee9",
                "https://github.com/jsecurity101/MSRPC-to-ATTACK/blob/ddd4608fe8684fcf2fcf9b48c5f0b3c28097f8a3/documents/MS-SCMR.md",
                "https://github.com/zeronetworks/rpcfirewall",
                "https://zeronetworks.com/blog/stopping-lateral-movement-via-the-rpc-firewall/"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1569.002"
            ],
            "title": "Remote Server Service Abuse for Lateral Movement"
        },
        {
            "author": "@neu5ron, SOC Prime",
            "date": "2020/03/19",
            "description": "Windows DCE-RPC functions which indicate an execution techniques on the remote system. All credit for the Zeek mapping of the suspicious endpoint/operation field goes to MITRE",
            "detection": {
                "condition": "1 of op*",
                "op1": {
                    "endpoint": "JobAdd",
                    "operation": "atsvc"
                },
                "op10": {
                    "endpoint": "svcctl",
                    "operation": "StartServiceW"
                },
                "op2": {
                    "endpoint": "ITaskSchedulerService",
                    "operation": "SchRpcEnableTask"
                },
                "op3": {
                    "endpoint": "ITaskSchedulerService",
                    "operation": "SchRpcRegisterTask"
                },
                "op4": {
                    "endpoint": "ITaskSchedulerService",
                    "operation": "SchRpcRun"
                },
                "op5": {
                    "endpoint": "IWbemServices",
                    "operation": "ExecMethod"
                },
                "op6": {
                    "endpoint": "IWbemServices",
                    "operation": "ExecMethodAsync"
                },
                "op7": {
                    "endpoint": "svcctl",
                    "operation": "CreateServiceA"
                },
                "op8": {
                    "endpoint": "svcctl",
                    "operation": "CreateServiceW"
                },
                "op9": {
                    "endpoint": "svcctl",
                    "operation": "StartServiceA"
                }
            },
            "falsepositives": [
                "Windows administrator tasks or troubleshooting",
                "Windows management scripts or software"
            ],
            "id": "b640c0b8-87f8-4daa-aef8-95a24261dd1d",
            "level": "medium",
            "logsource": {
                "product": "zeek",
                "service": "dce_rpc"
            },
            "modified": "2021/11/27",
            "references": [
                "https://github.com/mitre-attack/bzar#indicators-for-attck-execution"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1047",
                "attack.t1053.002",
                "attack.t1569.002"
            ],
            "title": "MITRE BZAR Indicators for Execution"
        },
        {
            "author": "Saw Winn Naung, Azure-Sentinel, @neu5ron",
            "date": "2021/08/19",
            "description": "Identifies clients that may be performing DNS lookups associated with common currency mining pools.",
            "detection": {
                "condition": "selection and not 1 of exclude_*",
                "exclude_answers": {
                    "answers": [
                        "127.0.0.1",
                        "0.0.0.0"
                    ]
                },
                "exclude_rejected": {
                    "rejected": "true"
                },
                "selection": {
                    "query|endswith": [
                        "monerohash.com",
                        "do-dear.com",
                        "xmrminerpro.com",
                        "secumine.net",
                        "xmrpool.com",
                        "minexmr.org",
                        "hashanywhere.com",
                        "xmrget.com",
                        "mininglottery.eu",
                        "minergate.com",
                        "moriaxmr.com",
                        "multipooler.com",
                        "moneropools.com",
                        "xmrpool.eu",
                        "coolmining.club",
                        "supportxmr.com",
                        "minexmr.com",
                        "hashvault.pro",
                        "xmrpool.net",
                        "crypto-pool.fr",
                        "xmr.pt",
                        "miner.rocks",
                        "walpool.com",
                        "herominers.com",
                        "gntl.co.uk",
                        "semipool.com",
                        "coinfoundry.org",
                        "cryptoknight.cc",
                        "fairhash.org",
                        "baikalmine.com",
                        "tubepool.xyz",
                        "fairpool.xyz",
                        "asiapool.io",
                        "coinpoolit.webhop.me",
                        "nanopool.org",
                        "moneropool.com",
                        "miner.center",
                        "prohash.net",
                        "poolto.be",
                        "cryptoescrow.eu",
                        "monerominers.net",
                        "cryptonotepool.org",
                        "extrmepool.org",
                        "webcoin.me",
                        "kippo.eu",
                        "hashinvest.ws",
                        "monero.farm",
                        "linux-repository-updates.com",
                        "1gh.com",
                        "dwarfpool.com",
                        "hash-to-coins.com",
                        "pool-proxy.com",
                        "hashfor.cash",
                        "fairpool.cloud",
                        "litecoinpool.org",
                        "mineshaft.ml",
                        "abcxyz.stream",
                        "moneropool.ru",
                        "cryptonotepool.org.uk",
                        "extremepool.org",
                        "extremehash.com",
                        "hashinvest.net",
                        "unipool.pro",
                        "crypto-pools.org",
                        "monero.net",
                        "backup-pool.com",
                        "mooo.com",
                        "freeyy.me",
                        "cryptonight.net",
                        "shscrypto.net"
                    ]
                }
            },
            "falsepositives": [
                "A DNS lookup does not necessarily  mean a successful attempt, verify a) if there was a response using the zeek answers field, if there was then verify the connections (conn.log) to those IPs. b) verify if HTTP, SSL, or TLS activity to the domain that was queried. http.log field is 'host' and ssl/tls is 'server_name'."
            ],
            "fields": [
                "id.orig_h",
                "id.resp_h",
                "query",
                "answers",
                "qtype_name",
                "rcode_name"
            ],
            "id": "bf74135c-18e8-4a72-a926-0e4f47888c19",
            "level": "low",
            "logsource": {
                "product": "zeek",
                "service": "dns"
            },
            "modified": "2022/07/07",
            "status": "test",
            "references": [
                "https://github.com/Azure/Azure-Sentinel/blob/fa0411f9424b6c47b4d5a20165e4f1b168c1f103/Detections/ASimDNS/imDNS_Miners.yaml"
            ],
            "tags": [
                "attack.execution",
                "attack.t1569.002",
                "attack.impact",
                "attack.t1496"
            ],
            "title": "DNS Events Related To Mining Pools"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/08/04",
            "description": "Detects default RemCom service filename which indicates RemCom service installation and execution",
            "detection": {
                "condition": "selection",
                "selection": {
                    "TargetFilename|endswith": "\\RemComSvc.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "7eff1a7f-dd45-4c20-877a-f21e342a7611",
            "level": "medium",
            "logsource": {
                "category": "file_event",
                "product": "windows"
            },
            "references": [
                "https://github.com/kavika13/RemCom/"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1569.002",
                "attack.s0029"
            ],
            "title": "RemCom Service File Creation"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/08/04",
            "description": "Detects default CSExec service filename which indicates CSExec service installation and execution",
            "detection": {
                "condition": "selection",
                "selection": {
                    "TargetFilename|endswith": "\\csexecsvc.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "f0e2b768-5220-47dd-b891-d57b96fc0ec1",
            "level": "medium",
            "logsource": {
                "category": "file_event",
                "product": "windows"
            },
            "references": [
                "https://github.com/malcomvetter/CSExec"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1569.002",
                "attack.s0029"
            ],
            "title": "CSExec Service File Creation"
        },
        {
            "author": "Thomas Patzke",
            "date": "2017/06/12",
            "description": "Detects default PsExec service filename which indicates PsExec service installation and execution",
            "detection": {
                "condition": "selection",
                "selection": {
                    "TargetFilename|endswith": "\\PSEXESVC.exe"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "259e5a6a-b8d2-4c38-86e2-26c5e651361d",
            "logsource": {
                "category": "file_event",
                "product": "windows"
            },
            "level": "low",
            "modified": "2022/10/26",
            "references": [
                "https://www.jpcert.or.jp/english/pub/sr/ir_research.html",
                "https://jpcertcc.github.io/ToolAnalysisResultSheet"
            ],
            "related": [
                {
                    "id": "42c575ea-e41e-41f1-b248-8093c3e82a28",
                    "type": "derived"
                }
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1569.002",
                "attack.s0029"
            ],
            "title": "PsExec Service File Creation"
        },
        {
            "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali",
            "date": "2022/01/24",
            "description": "Detects the use of NSudo tool for command execution",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains": [
                        "-U:S ",
                        "-U:T ",
                        "-U:E ",
                        "-P:E ",
                        "-M:S ",
                        "-M:H ",
                        "-U=S ",
                        "-U=T ",
                        "-U=E ",
                        "-P=E ",
                        "-M=S ",
                        "-M=H ",
                        "-ShowWindowMode:Hide"
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": [
                            "\\NSudo.exe",
                            "\\NSudoLC.exe",
                            "\\NSudoLG.exe"
                        ]
                    },
                    {
                        "OriginalFileName": [
                            "NSudo.exe",
                            "NSudoLC.exe",
                            "NSudoLG.exe"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Legitimate use by administrators"
            ],
            "id": "771d1eb5-9587-4568-95fb-9ec44153a012",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/13",
            "references": [
                "https://nsudo.m2team.org/en-us/",
                "https://www.winhelponline.com/blog/run-program-as-system-localsystem-account-windows/"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1569.002",
                "attack.s0029"
            ],
            "title": "PUA - NSudo Execution"
        },
        {
            "author": "Bartlomiej Czyz, Relativity",
            "date": "2021/01/31",
            "description": "Detects rundll32 execution without parameters as observed when running Metasploit windows/smb/psexec exploit module",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine": [
                        "rundll32.exe",
                        "rundll32"
                    ]
                }
            },
            "falsepositives": [
                "False positives may occur if a user called rundll32 from CLI with no options"
            ],
            "fields": [
                "ComputerName",
                "SubjectUserName",
                "CommandLine",
                "Image",
                "ParentImage"
            ],
            "id": "5bb68627-3198-40ca-b458-49f973db8752",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/28",
            "status": "test",
            "references": [
                "https://bczyz1.github.io/2021/01/30/psexec.html"
            ],
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002",
                "attack.t1570",
                "attack.execution",
                "attack.t1569.002"
            ],
            "title": "Rundll32 Execution Without Parameters"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2022/01/24",
            "description": "Detects the use of the RunXCmd tool to execute commands with System or TrustedInstaller accounts",
            "detection": {
                "condition": "all of selection_*",
                "selection_account": {
                    "CommandLine|contains": [
                        " /account=system ",
                        " /account=ti "
                    ]
                },
                "selection_exec": {
                    "CommandLine|contains": "/exec="
                }
            },
            "falsepositives": [
                "Legitimate use by administrators"
            ],
            "fields": [
                "CommandLine",
                "ParentCommandLine"
            ],
            "id": "93199800-b52a-4dec-b762-75212c196542",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/14",
            "status": "test",
            "references": [
                "https://www.d7xtech.com/free-software/runx/",
                "https://www.winhelponline.com/blog/run-program-as-system-localsystem-account-windows/"
            ],
            "tags": [
                "attack.execution",
                "attack.t1569.002",
                "attack.s0029"
            ],
            "title": "PUA - RunXCmd Execution"
        },
        {
            "author": "Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community",
            "date": "2019/10/21",
            "description": "Detects the usage of the \"net.exe\" command to start a service using the \"start\" flag",
            "detection": {
                "condition": "all of selection_*",
                "selection_cli": {
                    "CommandLine|contains": " start "
                },
                "selection_img": [
                    {
                        "Image|endswith": [
                            "\\net.exe",
                            "\\net1.exe"
                        ]
                    },
                    {
                        "OriginalFileName": [
                            "net.exe",
                            "net1.exe"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Legitimate administrator or user executes a service for legitimate reasons."
            ],
            "id": "2a072a96-a086-49fa-bcb5-15cc5a619093",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "level": "low",
            "modified": "2023/03/05",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1569.002/T1569.002.md"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1569.002"
            ],
            "title": "Start Windows Service Via Net.EXE"
        },
        {
            "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/01/24",
            "description": "Detects the use of NirCmd tool for command execution as SYSTEM user",
            "detection": {
                "condition": "selection",
                "selection": {
                    "CommandLine|contains": " runassystem "
                }
            },
            "falsepositives": [
                "Legitimate use by administrators"
            ],
            "fields": [
                "CommandLine",
                "ParentCommandLine"
            ],
            "id": "d9047477-0359-48c9-b8c7-792cedcdc9c4",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/13",
            "status": "test",
            "references": [
                "https://www.nirsoft.net/utils/nircmd.html",
                "https://www.winhelponline.com/blog/run-program-as-system-localsystem-account-windows/",
                "https://www.nirsoft.net/utils/nircmd2.html#using"
            ],
            "tags": [
                "attack.execution",
                "attack.t1569.002",
                "attack.s0029"
            ],
            "title": "PUA - NirCmd Execution As LOCAL SYSTEM"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2022/08/20",
            "description": "Detects the use of SharpUp, a tool for local privilege escalation",
            "detection": {
                "condition": "selection",
                "selection": [
                    {
                        "Image|endswith": "\\SharpUp.exe"
                    },
                    {
                        "Description": "SharpUp"
                    },
                    {
                        "CommandLine|contains": [
                            "HijackablePaths",
                            "UnquotedServicePath",
                            "ProcessDLLHijack",
                            "ModifiableServiceBinaries",
                            "ModifiableScheduledTask",
                            "DomainGPPPassword",
                            "CachedGPPPassword"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "c484e533-ee16-4a93-b6ac-f0ea4868b2f1",
            "level": "critical",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/13",
            "references": [
                "https://github.com/GhostPack/SharpUp"
            ],
            "status": "test",
            "tags": [
                "attack.privilege_escalation",
                "attack.t1615",
                "attack.t1569.002",
                "attack.t1574.005"
            ],
            "title": "HackTool - SharpUp PrivEsc Tool Execution"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2022/08/22",
            "description": "Detects the use of the lesser known remote execution tool named CsExec a PsExec alternative",
            "detection": {
                "condition": "1 of selection*",
                "selection": {
                    "Image|endswith": "\\csexec.exe"
                },
                "selection_pe": {
                    "Description": "csexec"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "d08a2711-ee8b-4323-bdec-b7d85e892b31",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/21",
            "references": [
                "https://github.com/malcomvetter/CSExec",
                "https://www.microsoft.com/security/blog/2022/05/09/ransomware-as-a-service-understanding-the-cybercrime-gig-economy-and-how-to-protect-yourself/"
            ],
            "status": "test",
            "tags": [
                "attack.resource_development",
                "attack.t1587.001",
                "attack.execution",
                "attack.t1569.002"
            ],
            "title": "PUA - CsExec Execution"
        },
        {
            "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/01/24",
            "description": "Detects the use of NirCmd tool for command execution, which could be the result of legitimate administrative activity",
            "detection": {
                "combo_exec": {
                    "CommandLine|contains": [
                        " exec ",
                        " exec2 "
                    ]
                },
                "combo_exec_params": {
                    "CommandLine|contains": [
                        " show ",
                        " hide "
                    ]
                },
                "condition": "1 of selection_* or all of combo_*",
                "selection_cmd": {
                    "CommandLine|contains": [
                        " execmd ",
                        ".exe script ",
                        ".exe shexec ",
                        " runinteractive "
                    ]
                },
                "selection_org": [
                    {
                        "Image|endswith": "\\NirCmd.exe"
                    },
                    {
                        "OriginalFileName": "NirCmd.exe"
                    }
                ]
            },
            "falsepositives": [
                "Legitimate use by administrators"
            ],
            "fields": [
                "CommandLine",
                "ParentCommandLine"
            ],
            "id": "4e2ed651-1906-4a59-a78a-18220fca1b22",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/02/13",
            "status": "test",
            "references": [
                "https://www.nirsoft.net/utils/nircmd.html",
                "https://www.winhelponline.com/blog/run-program-as-system-localsystem-account-windows/",
                "https://www.nirsoft.net/utils/nircmd2.html#using"
            ],
            "tags": [
                "attack.execution",
                "attack.t1569.002",
                "attack.s0029"
            ],
            "title": "PUA - NirCmd Execution"
        },
        {
            "author": "Nikita Nazarov, oscd.community, Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/08/07",
            "description": "Detects default CSExec pipe creation",
            "detection": {
                "condition": "selection",
                "selection": {
                    "PipeName|contains": "\\csexecsvc"
                }
            },
            "falsepositives": [
                "Legitimate Administrator activity"
            ],
            "id": "f318b911-ea88-43f4-9281-0de23ede628e",
            "level": "medium",
            "logsource": {
                "category": "pipe_created",
                "product": "windows",
                "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
            },
            "modified": "2023/11/30",
            "references": [
                "https://drive.google.com/file/d/1lKya3_mLnR3UQuCoiYruO3qgu052_iS_/view",
                "https://github.com/malcomvetter/CSExec"
            ],
            "related": [
                {
                    "id": "9e77ed63-2ecf-4c7b-b09d-640834882028",
                    "type": "obsoletes"
                }
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002",
                "attack.execution",
                "attack.t1569.002"
            ],
            "title": "PUA - CSExec Default Named Pipe"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/10/26",
            "description": "Detects PAExec default named pipe",
            "detection": {
                "condition": "selection",
                "selection": {
                    "PipeName|startswith": "\\PAExec"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "f6451de4-df0a-41fa-8d72-b39f54a08db5",
            "level": "medium",
            "logsource": {
                "category": "pipe_created",
                "product": "windows",
                "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
            },
            "references": [
                "https://github.com/microsoft/Microsoft-365-Defender-Hunting-Queries/blob/efa17a600b43c897b4b7463cc8541daa1987eeb4/Command%20and%20Control/C2-NamedPipe.md",
                "https://github.com/poweradminllc/PAExec"
            ],
            "status": "test",
            "title": "PUA - PAExec Default Named Pipe",
            "tags": [
                "attack.execution",
                "attack.t1569.002"
            ]
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/08/04",
            "description": "Detects PsExec default pipe creation where the image executed is located in a suspicious location. Which could indicate that the tool is being used in an attack",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Image|contains": [
                        ":\\Users\\Public\\",
                        ":\\Windows\\Temp\\",
                        "\\AppData\\Local\\Temp\\",
                        "\\Desktop\\",
                        "\\Downloads\\"
                    ],
                    "PipeName": "\\PSEXESVC"
                }
            },
            "falsepositives": [
                "Rare legitimate use of psexec from the locations mentioned above. This will require initial tuning based on your environment."
            ],
            "id": "41504465-5e3a-4a5b-a5b4-2a0baadd4463",
            "level": "medium",
            "logsource": {
                "category": "pipe_created",
                "product": "windows",
                "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
            },
            "modified": "2023/09/20",
            "references": [
                "https://www.jpcert.or.jp/english/pub/sr/ir_research.html",
                "https://jpcertcc.github.io/ToolAnalysisResultSheet"
            ],
            "related": [
                {
                    "id": "f3f3a972-f982-40ad-b63c-bca6afdfad7c",
                    "type": "derived"
                }
            ],
            "tags": [
                "attack.execution",
                "attack.t1569.002",
                "attack.s0029"
            ],
            "status": "experimental",
            "title": "PsExec Tool Execution From Suspicious Locations - PipeName"
        },
        {
            "author": "Nikita Nazarov, oscd.community, Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/08/07",
            "description": "Detects default RemCom pipe creation",
            "detection": {
                "condition": "selection",
                "selection": {
                    "PipeName|contains": "\\RemCom"
                }
            },
            "falsepositives": [
                "Legitimate Administrator activity"
            ],
            "id": "d36f87ea-c403-44d2-aa79-1a0ac7c24456",
            "level": "medium",
            "logsource": {
                "category": "pipe_created",
                "product": "windows",
                "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
            },
            "modified": "2023/11/30",
            "references": [
                "https://drive.google.com/file/d/1lKya3_mLnR3UQuCoiYruO3qgu052_iS_/view",
                "https://github.com/kavika13/RemCom"
            ],
            "related": [
                {
                    "id": "9e77ed63-2ecf-4c7b-b09d-640834882028",
                    "type": "obsoletes"
                }
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002",
                "attack.execution",
                "attack.t1569.002"
            ],
            "title": "PUA - RemCom Default Named Pipe"
        },
        {
            "author": "Bhabesh Raj",
            "date": "2020/07/14",
            "description": "Detects blocking of process creations originating from PSExec and WMI commands",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": 1121,
                    "ProcessName|endswith": [
                        "\\wmiprvse.exe",
                        "\\psexesvc.exe"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "97b9ce1e-c5ab-11ea-87d0-0242ac130003",
            "level": "high",
            "logsource": {
                "definition": "Requirements:Enabled Block process creations originating from PSExec and WMI commands from Attack Surface Reduction (GUID: d1e49aac-8f56-4280-b9ba-993a6d77406c)",
                "product": "windows",
                "service": "windefend"
            },
            "modified": "2022/12/25",
            "references": [
                "https://learn.microsoft.com/en-us/defender-endpoint/attack-surface-reduction-rules-reference?view=o365-worldwide#block-process-creations-originating-from-psexec-and-wmi-commands",
                "https://twitter.com/duff22b/status/1280166329660497920"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.lateral_movement",
                "attack.t1047",
                "attack.t1569.002"
            ],
            "title": "PSExec and WMI Process Creations Block"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2021/05/27",
            "description": "Detects a ProcessHacker tool that elevated privileges to a very high level",
            "detection": {
                "condition": "selection",
                "selection": {
                    "AccountName": "LocalSystem",
                    "EventID": 7045,
                    "Provider_Name": "Service Control Manager",
                    "ServiceName|startswith": "ProcessHacker"
                }
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "c4ff1eac-84ad-44dd-a6fb-d56a92fc43a9",
            "level": "high",
            "logsource": {
                "product": "windows",
                "service": "system"
            },
            "modified": "2022/12/25",
            "references": [
                "https://twitter.com/1kwpeter/status/1397816101455765504"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.privilege_escalation",
                "attack.t1543.003",
                "attack.t1569.002"
            ],
            "title": "ProcessHacker Privilege Elevation"
        },
        {
            "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/08/25",
            "description": "Detects known malicious service installation that appear in cases in which a Sliver implants execute the PsExec commands",
            "detection": {
                "condition": "selection_eid and 1 of selection_service_*",
                "selection_eid": {
                    "EventID": 7045,
                    "Provider_Name": "Service Control Manager"
                },
                "selection_service_1": {
                    "ImagePath|re": "^[a-zA-Z]:\\\\windows\\\\temp\\\\[a-zA-Z0-9]{10}\\.exe"
                },
                "selection_service_2": {
                    "ServiceName": [
                        "Sliver",
                        "Sliver implant"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "31c51af6-e7aa-4da7-84d4-8f32cc580af2",
            "level": "high",
            "logsource": {
                "product": "windows",
                "service": "system"
            },
            "references": [
                "https://github.com/BishopFox/sliver/blob/79f2d48fcdfc2bee4713b78d431ea4b27f733f30/client/command/commands.go#L1231",
                "https://www.microsoft.com/security/blog/2022/08/24/looking-for-the-sliver-lining-hunting-for-emerging-command-and-control-frameworks/"
            ],
            "status": "test",
            "title": "Sliver C2 Default Service Installation",
            "tags": [
                "attack.execution",
                "attack.privilege_escalation",
                "attack.t1543.003",
                "attack.t1569.002"
            ]
        },
        {
            "author": "Florian Roth (Nextron Systems), Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community",
            "date": "2017/03/05",
            "description": "Detects well-known credential dumping tools execution via service execution events",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": 7045,
                    "ImagePath|contains": [
                        "cachedump",
                        "dumpsvc",
                        "fgexec",
                        "gsecdump",
                        "mimidrv",
                        "pwdump",
                        "servpw"
                    ],
                    "Provider_Name": "Service Control Manager"
                }
            },
            "falsepositives": [
                "Legitimate Administrator using credential dumping tool for password recovery"
            ],
            "id": "4976aa50-8f41-45c6-8b15-ab3fc10e79ed",
            "level": "high",
            "logsource": {
                "product": "windows",
                "service": "system"
            },
            "modified": "2022/11/29",
            "references": [
                "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment"
            ],
            "status": "test",
            "tags": [
                "attack.credential_access",
                "attack.execution",
                "attack.t1003.001",
                "attack.t1003.002",
                "attack.t1003.004",
                "attack.t1003.005",
                "attack.t1003.006",
                "attack.t1569.002",
                "attack.s0005"
            ],
            "title": "Credential Dumping Tools Service Execution - System"
        },
        {
            "author": "Florian Roth (Nextron Systems), Wojciech Lesicki",
            "date": "2021/05/26",
            "description": "Detects known malicious service installs that appear in cases in which a Cobalt Strike beacon elevates privileges or lateral movement",
            "detection": {
                "condition": "selection_id and (selection1 or selection2 or selection3 or selection4)",
                "selection1": {
                    "ImagePath|contains|all": [
                        "ADMIN$",
                        ".exe"
                    ]
                },
                "selection2": {
                    "ImagePath|contains|all": [
                        "%COMSPEC%",
                        "start",
                        "powershell"
                    ]
                },
                "selection3": {
                    "ImagePath|contains": "powershell -nop -w hidden -encodedcommand"
                },
                "selection4": {
                    "ImagePath|base64offset|contains": "IEX (New-Object Net.Webclient).DownloadString('http://127.0.0.1:"
                },
                "selection_id": {
                    "EventID": 7045,
                    "Provider_Name": "Service Control Manager"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "5a105d34-05fc-401e-8553-272b45c1522d",
            "level": "critical",
            "logsource": {
                "product": "windows",
                "service": "system"
            },
            "modified": "2022/11/27",
            "references": [
                "https://www.sans.org/webcasts/119395",
                "https://www.crowdstrike.com/blog/getting-the-bacon-from-cobalt-strike-beacon/",
                "https://thedfirreport.com/2021/08/29/cobalt-strike-a-defenders-guide/"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.privilege_escalation",
                "attack.lateral_movement",
                "attack.t1021.002",
                "attack.t1543.003",
                "attack.t1569.002"
            ],
            "title": "CobaltStrike Service Installations - System"
        },
        {
            "author": "Connor Martin, Nasreddine Bencherchali",
            "date": "2022/12/23",
            "description": "Detects service installation of different remote access tools software. These software are often abused by threat actors to perform",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": [
                        7045,
                        7036
                    ],
                    "Provider_Name": "Service Control Manager",
                    "ServiceName|contains": [
                        "AmmyyAdmin",
                        "Atera",
                        "BASupportExpressSrvcUpdater",
                        "BASupportExpressStandaloneService",
                        "chromoting",
                        "GoToAssist",
                        "GoToMyPC",
                        "jumpcloud",
                        "LMIGuardianSvc",
                        "LogMeIn",
                        "monblanking",
                        "Parsec",
                        "RManService",
                        "RPCPerformanceService",
                        "RPCService",
                        "SplashtopRemoteService",
                        "SSUService",
                        "TeamViewer",
                        "TightVNC",
                        "vncserver",
                        "Zoho"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "1a31b18a-f00c-4061-9900-f735b96c99fc",
            "level": "medium",
            "logsource": {
                "product": "windows",
                "service": "system"
            },
            "modified": "2023/06/22",
            "references": [
                "https://redcanary.com/blog/misbehaving-rats/"
            ],
            "related": [
                {
                    "id": "c8b00925-926c-47e3-beea-298fd563728e",
                    "type": "similar"
                }
            ],
            "status": "test",
            "tags": [
                "attack.persistence",
                "attack.t1543.003",
                "attack.t1569.002"
            ],
            "title": "Remote Access Tool Services Have Been Installed - System"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/08/07",
            "description": "Detects RemCom service installation and execution events",
            "detection": {
                "condition": "all of selection_*",
                "selection_eid": {
                    "EventID": 7045,
                    "Provider_Name": "Service Control Manager"
                },
                "selection_service": [
                    {
                        "ServiceName": "RemComSvc"
                    },
                    {
                        "ImagePath|endswith": "\\RemComSvc.exe"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "9e36ed87-4986-482e-8e3b-5c23ffff11bf",
            "level": "medium",
            "logsource": {
                "product": "windows",
                "service": "system"
            },
            "references": [
                "https://github.com/kavika13/RemCom/"
            ],
            "status": "test",
            "title": "RemCom Service Installation",
            "tags": [
                "attack.execution",
                "attack.t1569.002"
            ]
        },
        {
            "author": "oscd.community, Natalia Shornikova",
            "date": "2020/10/06",
            "description": "Detects powershell script installed as a Service",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": 7045,
                    "ImagePath|contains": [
                        "powershell",
                        "pwsh"
                    ],
                    "Provider_Name": "Service Control Manager"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "a2e5019d-a658-4c6a-92bf-7197b54e2cae",
            "level": "high",
            "logsource": {
                "product": "windows",
                "service": "system"
            },
            "modified": "2022/12/25",
            "references": [
                "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1569.002"
            ],
            "title": "PowerShell Scripts Installed as Services"
        },
        {
            "author": "Florian Roth (Nextron Systems)",
            "date": "2022/03/21",
            "description": "Detects installation or execution of services",
            "detection": {
                "condition": "selection_eid and 1 of selection_service_*",
                "selection_eid": {
                    "EventID": [
                        7045,
                        7036
                    ],
                    "Provider_Name": "Service Control Manager"
                },
                "selection_service_image": {
                    "ImagePath|contains": "bypass"
                },
                "selection_service_name": {
                    "ServiceName|contains": [
                        "cachedump",
                        "DumpSvc",
                        "gsecdump",
                        "pwdump",
                        "UACBypassedService",
                        "WCE SERVICE",
                        "WCESERVICE",
                        "winexesvc"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "d26ce60c-2151-403c-9a42-49420d87b5e4",
            "level": "high",
            "logsource": {
                "product": "windows",
                "service": "system"
            },
            "modified": "2023/08/07",
            "references": [
                "Internal Research"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1569.002",
                "attack.s0029"
            ],
            "title": "HackTool Service Registration or Execution"
        },
        {
            "author": "Omer Faruk Celik",
            "date": "2018/03/20",
            "description": "Detects the use of smbexec.py tool by detecting a specific service installation",
            "detection": {
                "condition": "selection_eid and 1 of selection_service_*",
                "selection_eid": {
                    "EventID": 7045,
                    "Provider_Name": "Service Control Manager"
                },
                "selection_service_image": {
                    "ImagePath|contains": [
                        ".bat & del ",
                        "__output 2^>^&1 >"
                    ]
                },
                "selection_service_name": {
                    "ServiceName": "BTOBTO"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "52a85084-6989-40c3-8f32-091e12e13f09",
            "level": "high",
            "logsource": {
                "product": "windows",
                "service": "system"
            },
            "modified": "2023/11/09",
            "references": [
                "https://blog.ropnop.com/using-credentials-to-own-windows-boxes-part-2-psexec-and-services/",
                "https://github.com/fortra/impacket/blob/33058eb2fde6976ea62e04bc7d6b629d64d44712/examples/smbexec.py#L286-L296",
                "https://github.com/fortra/impacket/blob/edef71f17bc1240f9f8c957bbda98662951ac3ec/examples/smbexec.py#L60"
            ],
            "status": "test",
            "tags": [
                "attack.lateral_movement",
                "attack.execution",
                "attack.t1021.002",
                "attack.t1569.002"
            ],
            "title": "smbexec.py Service Installation"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2023/08/07",
            "description": "Detects CSExec service installation and execution events",
            "detection": {
                "condition": "all of selection_*",
                "selection_eid": {
                    "EventID": 7045,
                    "Provider_Name": "Service Control Manager"
                },
                "selection_service": [
                    {
                        "ServiceName": "csexecsvc"
                    },
                    {
                        "ImagePath|endswith": "\\csexecsvc.exe"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "a27e5fa9-c35e-4e3d-b7e0-1ce2af66ad12",
            "level": "medium",
            "logsource": {
                "product": "windows",
                "service": "system"
            },
            "references": [
                "https://github.com/malcomvetter/CSExec"
            ],
            "status": "test",
            "title": "CSExec Service Installation",
            "tags": [
                "attack.execution",
                "attack.t1569.002"
            ]
        },
        {
            "id": "42c575ea-e41e-41f1-b248-8093c3e82a28",
            "author": "Thomas Patzke",
            "date": "2017/06/12",
            "description": "Detects PsExec service installation and execution events",
            "detection": {
                "condition": "all of selection_*",
                "selection_eid": {
                    "EventID": 7045,
                    "Provider_Name": "Service Control Manager"
                },
                "selection_service": [
                    {
                        "ServiceName": "PSEXESVC"
                    },
                    {
                        "ImagePath|endswith": "\\PSEXESVC.exe"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "level": "medium",
            "logsource": {
                "product": "windows",
                "service": "system"
            },
            "modified": "2023/08/04",
            "references": [
                "https://www.jpcert.or.jp/english/pub/sr/ir_research.html",
                "https://jpcertcc.github.io/ToolAnalysisResultSheet"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1569.002",
                "attack.s0029"
            ],
            "title": "PsExec Service Installation"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/10/26",
            "description": "Detects PAExec service installation",
            "detection": {
                "condition": "all of selection_*",
                "selection_eid": {
                    "EventID": 7045,
                    "Provider_Name": "Service Control Manager"
                },
                "selection_image": [
                    {
                        "ServiceName|startswith": "PAExec-"
                    },
                    {
                        "ImagePath|startswith": "C:\\WINDOWS\\PAExec-"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "de7ce410-b3fb-4e8a-b38c-3b999e2c3420",
            "level": "medium",
            "logsource": {
                "product": "windows",
                "service": "system"
            },
            "references": [
                "https://www.poweradmin.com/paexec/"
            ],
            "status": "test",
            "title": "PAExec Service Installation",
            "tags": [
                "attack.execution",
                "attack.t1569.002"
            ]
        },
        {
            "id": "c8b00925-926c-47e3-beea-298fd563728e",
            "author": "Connor Martin, Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/12/23",
            "description": "Detects service installation of different remote access tools software. These software are often abused by threat actors to perform",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": 4697,
                    "ServiceName|contains": [
                        "AmmyyAdmin",
                        "Atera",
                        "BASupportExpressSrvcUpdater",
                        "BASupportExpressStandaloneService",
                        "chromoting",
                        "GoToAssist",
                        "GoToMyPC",
                        "jumpcloud",
                        "LMIGuardianSvc",
                        "LogMeIn",
                        "monblanking",
                        "Parsec",
                        "RManService",
                        "RPCPerformanceService",
                        "RPCService",
                        "SplashtopRemoteService",
                        "SSUService",
                        "TeamViewer",
                        "TightVNC",
                        "vncserver",
                        "Zoho"
                    ]
                }
            },
            "falsepositives": [
                "The rule doesn't look for anything suspicious so false positives are expected. If you use one of the tools mentioned, comment it out"
            ],
            "level": "medium",
            "logsource": {
                "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697",
                "product": "windows",
                "service": "security"
            },
            "modified": "2023/11/15",
            "references": [
                "https://redcanary.com/blog/misbehaving-rats/"
            ],
            "related": [
                {
                    "type": "similar",
                    "id": "1a31b18a-f00c-4061-9900-f735b96c99fc"
                }
            ],
            "status": "experimental",
            "tags": [
                "attack.persistence",
                "attack.t1543.003",
                "attack.t1569.002"
            ],
            "title": "Remote Access Tool Services Have Been Installed - Security"
        },
        {
            "author": "Florian Roth (Nextron Systems), Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community",
            "date": "2017/03/05",
            "description": "Detects well-known credential dumping tools execution via service execution events",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": 4697,
                    "ServiceFileName|contains": [
                        "cachedump",
                        "dumpsvc",
                        "fgexec",
                        "gsecdump",
                        "mimidrv",
                        "pwdump",
                        "servpw"
                    ]
                }
            },
            "falsepositives": [
                "Legitimate Administrator using credential dumping tool for password recovery"
            ],
            "id": "f0d1feba-4344-4ca9-8121-a6c97bd6df52",
            "level": "high",
            "logsource": {
                "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697",
                "product": "windows",
                "service": "security"
            },
            "modified": "2022/11/29",
            "references": [
                "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment"
            ],
            "related": [
                {
                    "type": "derived",
                    "id": "4976aa50-8f41-45c6-8b15-ab3fc10e79ed"
                }
            ],
            "status": "test",
            "tags": [
                "attack.credential_access",
                "attack.execution",
                "attack.t1003.001",
                "attack.t1003.002",
                "attack.t1003.004",
                "attack.t1003.005",
                "attack.t1003.006",
                "attack.t1569.002",
                "attack.s0005"
            ],
            "title": "Credential Dumping Tools Service Execution - Security"
        },
        {
            "author": "oscd.community, Natalia Shornikova",
            "date": "2020/10/06",
            "description": "Detects powershell script installed as a Service",
            "detection": {
                "condition": "selection",
                "selection": {
                    "EventID": 4697,
                    "ServiceFileName|contains": [
                        "powershell",
                        "pwsh"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "2a926e6a-4b81-4011-8a96-e36cc8c04302",
            "level": "high",
            "logsource": {
                "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697",
                "product": "windows",
                "service": "security"
            },
            "modified": "2022/11/29",
            "references": [
                "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse"
            ],
            "related": [
                {
                    "type": "derived",
                    "id": "a2e5019d-a658-4c6a-92bf-7197b54e2cae"
                }
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1569.002"
            ],
            "title": "PowerShell Scripts Installed as Services - Security"
        },
        {
            "author": "Bartlomiej Czyz, Relativity",
            "date": "2021/01/21",
            "description": "Detects usage of Metasploit SMB PsExec (exploit/windows/smb/psexec) and Impacket psexec.py by triggering on specific service installation",
            "detection": {
                "condition": "selection and not filter",
                "filter": {
                    "ServiceName": "PSEXESVC"
                },
                "selection": {
                    "EventID": 4697,
                    "ServiceFileName|re": "^%systemroot%\\\\[a-zA-Z]{8}\\.exe$",
                    "ServiceName|re": "(^[a-zA-Z]{4}$)|(^[a-zA-Z]{8}$)|(^[a-zA-Z]{16}$)",
                    "ServiceStartType": 3,
                    "ServiceType": "0x10"
                }
            },
            "falsepositives": [
                "Possible, different agents with a 8 character binary and a 4, 8 or 16 character service name"
            ],
            "fields": [
                "ComputerName",
                "SubjectDomainName",
                "SubjectUserName",
                "ServiceName",
                "ServiceFileName"
            ],
            "id": "6fb63b40-e02a-403e-9ffd-3bcc1d749442",
            "level": "high",
            "logsource": {
                "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697",
                "product": "windows",
                "service": "security"
            },
            "modified": "2022/10/05",
            "status": "test",
            "references": [
                "https://bczyz1.github.io/2021/01/30/psexec.html"
            ],
            "related": [
                {
                    "id": "1a17ce75-ff0d-4f02-9709-2b7bb5618cf0",
                    "type": "derived"
                }
            ],
            "tags": [
                "attack.lateral_movement",
                "attack.t1021.002",
                "attack.t1570",
                "attack.execution",
                "attack.t1569.002"
            ],
            "title": "Metasploit Or Impacket Service Installation Via SMB PsExec"
        },
        {
            "author": "Florian Roth (Nextron Systems), Wojciech Lesicki",
            "date": "2021/05/26",
            "description": "Detects known malicious service installs that appear in cases in which a Cobalt Strike beacon elevates privileges or lateral movement",
            "detection": {
                "condition": "event_id and 1 of selection*",
                "event_id": {
                    "EventID": 4697
                },
                "selection1": {
                    "ServiceFileName|contains|all": [
                        "ADMIN$",
                        ".exe"
                    ]
                },
                "selection2": {
                    "ServiceFileName|contains|all": [
                        "%COMSPEC%",
                        "start",
                        "powershell"
                    ]
                },
                "selection3": {
                    "ServiceFileName|contains": "powershell -nop -w hidden -encodedcommand"
                },
                "selection4": {
                    "ServiceFileName|base64offset|contains": "IEX (New-Object Net.Webclient).DownloadString('http://127.0.0.1:"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "d7a95147-145f-4678-b85d-d1ff4a3bb3f6",
            "level": "high",
            "logsource": {
                "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697",
                "product": "windows",
                "service": "security"
            },
            "modified": "2022/11/27",
            "references": [
                "https://www.sans.org/webcasts/119395",
                "https://www.crowdstrike.com/blog/getting-the-bacon-from-cobalt-strike-beacon/",
                "https://thedfirreport.com/2021/08/29/cobalt-strike-a-defenders-guide/"
            ],
            "related": [
                {
                    "type": "derived",
                    "id": "5a105d34-05fc-401e-8553-272b45c1522d"
                }
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.privilege_escalation",
                "attack.lateral_movement",
                "attack.t1021.002",
                "attack.t1543.003",
                "attack.t1569.002"
            ],
            "title": "CobaltStrike Service Installations - Security"
        },
        {
            "author": "Wojciech Lesicki",
            "date": "2021/06/29",
            "description": "Detects known malicious service installs that appear in cases in which a Cobalt Strike beacon elevates privileges or lateral movement.\n",
            "detection": {
                "condition": "all of selection_*",
                "selection_details": [
                    {
                        "Details|contains|all": [
                            "ADMIN$",
                            ".exe"
                        ]
                    },
                    {
                        "Details|contains|all": [
                            "%COMSPEC%",
                            "start",
                            "powershell"
                        ]
                    }
                ],
                "selection_key": [
                    {
                        "TargetObject|contains": "\\System\\CurrentControlSet\\Services"
                    },
                    {
                        "TargetObject|contains|all": [
                            "\\System\\ControlSet",
                            "\\Services"
                        ]
                    }
                ]
            },
            "falsepositives": [
                "Unlikely"
            ],
            "id": "61a7697c-cb79-42a8-a2ff-5f0cdfae0130",
            "level": "high",
            "logsource": {
                "category": "registry_set",
                "product": "windows"
            },
            "modified": "2024/03/25",
            "references": [
                "https://www.sans.org/webcasts/tech-tuesday-workshop-cobalt-strike-detection-log-analysis-119395"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.privilege_escalation",
                "attack.lateral_movement",
                "attack.t1021.002",
                "attack.t1543.003",
                "attack.t1569.002"
            ],
            "title": "Potential CobaltStrike Service Installations - Registry"
        },
        {
            "author": "oscd.community, Natalia Shornikova",
            "date": "2020/10/06",
            "description": "Detects that a powershell code is written to the registry as a service.",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Details|contains": [
                        "powershell",
                        "pwsh"
                    ],
                    "TargetObject|contains": "\\Services\\",
                    "TargetObject|endswith": "\\ImagePath"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "4a5f5a5e-ac01-474b-9b4e-d61298c9df1d",
            "level": "high",
            "logsource": {
                "category": "registry_set",
                "product": "windows"
            },
            "modified": "2023/08/17",
            "references": [
                "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse"
            ],
            "status": "test",
            "tags": [
                "attack.execution",
                "attack.t1569.002"
            ],
            "title": "PowerShell as a Service in Registry"
        }
    ]
}