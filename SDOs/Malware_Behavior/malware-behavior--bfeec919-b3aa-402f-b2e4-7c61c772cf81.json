{
    "type": "malware-behavior",
    "spec_version": "2.1",
    "id": "malware-behavior--bfeec919-b3aa-402f-b2e4-7c61c772cf81",
    "created": "2024-08-13T14:46:37.177048Z",
    "modified": "2024-08-13T14:46:46.484502Z",
    "name": "Hidden Files and Directories: ",
    "description": "Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a \u2018hidden\u2019 file. These files don\u2019t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (dir /a for Windows and ls \u2013a for Linux and macOS).On Linux and Mac, users can mark specific files as hidden simply by putting a '.' as the first character in the file or folder name  [1] [2]. Files and folders that start with a period, \u2018.\u2019, are by default hidden from being viewed in the Finder application and standard command-line utilities like 'ls'. Users must specifically change settings to have these files viewable.Files on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app [3]. On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn\u2019t clutter up the user\u2019s workspace. For example, SSH utilities create a .ssh folder that\u2019s hidden and contains the user\u2019s known hosts and keys.Adversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "MITRE ATT&CK",
            "url": "https://attack.mitre.org/techniques/T1564/001",
            "external_id": "T1564/001"
        }
    ],
    "x_mitre_detection_rules": [
        {
            "author": "frack113",
            "date": "2022/07/18",
            "description": "Detect use of icacls to deny access for everyone in Users folder sometimes used to hide malicious files",
            "detection": {
                "condition": "all of selection_*",
                "selection_cmd": {
                    "CommandLine|contains|all": [
                        "/deny",
                        "*S-1-1-0:"
                    ]
                },
                "selection_icacls": [
                    {
                        "OriginalFileName": "iCACLS.EXE"
                    },
                    {
                        "Image|endswith": "\\icacls.exe"
                    }
                ]
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "4ae81040-fc1c-4249-bfa3-938d260214d9",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2024/04/29",
            "references": [
                "https://app.any.run/tasks/1df999e6-1cb8-45e3-8b61-499d1b7d5a9b/"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1564.001"
            ],
            "title": "Use Icacls to Hide File to Everyone"
        },
        {
            "author": "Nasreddine Bencherchali (Nextron Systems)",
            "date": "2022/06/28",
            "description": "Detects the usage of attrib with the \"+s\" option to set scripts or executables located in suspicious locations as system files to hide them from users and make them unable to be deleted with simple rights. The rule limits the search to specific extensions and directories to avoid FPs\n",
            "detection": {
                "condition": "all of selection* and not 1 of filter_optional_*",
                "filter_optional_installer": {
                    "CommandLine|contains|all": [
                        "\\Windows\\TEMP\\",
                        ".exe"
                    ]
                },
                "selection_cli": {
                    "CommandLine|contains": " +s"
                },
                "selection_ext": {
                    "CommandLine|contains": [
                        ".bat",
                        ".dll",
                        ".exe",
                        ".hta",
                        ".ps1",
                        ".vbe",
                        ".vbs"
                    ]
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\attrib.exe"
                    },
                    {
                        "OriginalFileName": "ATTRIB.EXE"
                    }
                ],
                "selection_paths": {
                    "CommandLine|contains": [
                        " %",
                        "\\Users\\Public\\",
                        "\\AppData\\Local\\",
                        "\\ProgramData\\",
                        "\\Downloads\\",
                        "\\Windows\\Temp\\"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "efec536f-72e8-4656-8960-5e85d091345b",
            "level": "high",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/03/14",
            "references": [
                "https://app.any.run/tasks/c28cabc8-a19f-40f3-a78b-cae506a5c0d4",
                "https://app.any.run/tasks/cfc8870b-ccd7-4210-88cf-a8087476a6d0",
                "https://unit42.paloaltonetworks.com/unit42-sure-ill-take-new-combojack-malware-alters-clipboards-steal-cryptocurrency/"
            ],
            "related": [
                {
                    "id": "bb19e94c-59ae-4c15-8c12-c563d23fe52b",
                    "type": "derived"
                }
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1564.001"
            ],
            "title": "Set Suspicious Files as System Files Using Attrib.EXE"
        },
        {
            "author": "Sami Ruohonen",
            "date": "2019/01/16",
            "description": "Detects usage of attrib.exe to hide files from users.",
            "detection": {
                "condition": "all of selection_* and not 1 of filter_main_* and not 1 of filter_optional_*",
                "filter_main_msiexec": {
                    "CommandLine|contains": "\\desktop.ini "
                },
                "filter_optional_intel": {
                    "CommandLine": "+R +H +S +A \\\\\\*.cui",
                    "ParentCommandLine": "C:\\\\WINDOWS\\\\system32\\\\\\*.bat",
                    "ParentImage|endswith": "\\cmd.exe"
                },
                "selection_cli": {
                    "CommandLine|contains": " +h "
                },
                "selection_img": [
                    {
                        "Image|endswith": "\\attrib.exe"
                    },
                    {
                        "OriginalFileName": "ATTRIB.EXE"
                    }
                ]
            },
            "falsepositives": [
                "IgfxCUIService.exe hiding *.cui files via .bat script (attrib.exe a child of cmd.exe and igfxCUIService.exe is the parent of the cmd.exe)",
                "Msiexec.exe hiding desktop.ini"
            ],
            "id": "4281cb20-2994-4580-aa63-c8b86d019934",
            "level": "medium",
            "logsource": {
                "category": "process_creation",
                "product": "windows"
            },
            "modified": "2023/03/14",
            "references": [
                "https://unit42.paloaltonetworks.com/unit42-sure-ill-take-new-combojack-malware-alters-clipboards-steal-cryptocurrency/",
                "https://www.uptycs.com/blog/lolbins-are-no-laughing-matter"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1564.001"
            ],
            "title": "Hiding Files with Attrib.exe"
        },
        {
            "author": "frack113",
            "date": "2022/04/02",
            "description": "Detects changes to the registry for the currently logged-in user. In order to disable PowerShell module logging, script block logging or transcription and script execution logging",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Details": "DWORD (0x00000000)",
                    "TargetObject|contains": [
                        "\\Microsoft\\Windows\\PowerShell\\",
                        "\\Microsoft\\PowerShellCore\\"
                    ],
                    "TargetObject|endswith": [
                        "\\ModuleLogging\\EnableModuleLogging",
                        "\\ScriptBlockLogging\\EnableScriptBlockLogging",
                        "\\ScriptBlockLogging\\EnableScriptBlockInvocationLogging",
                        "\\Transcription\\EnableTranscripting",
                        "\\Transcription\\EnableInvocationHeader",
                        "\\EnableScripts"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "fecfd1a1-cc78-4313-a1ea-2ee2e8ec27a7",
            "level": "high",
            "logsource": {
                "category": "registry_set",
                "product": "windows"
            },
            "modified": "2023/08/17",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1112/T1112.md#atomic-test-32---windows-powershell-logging-disabled"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1564.001"
            ],
            "title": "PowerShell Logging Disabled Via Registry Key Tampering"
        },
        {
            "author": "frack113",
            "date": "2022/04/02",
            "description": "Detects modifications to the \"Hidden\" and \"ShowSuperHidden\" explorer registry values in order to disable showing of hidden files and system files.\nThis technique is abused by several malware families to hide their files from normal users.\n",
            "detection": {
                "condition": "selection",
                "selection": {
                    "Details": "DWORD (0x00000000)",
                    "TargetObject|endswith": [
                        "\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\ShowSuperHidden",
                        "\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\Hidden"
                    ]
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "5a5152f1-463f-436b-b2f5-8eceb3964b42",
            "level": "medium",
            "logsource": {
                "category": "registry_set",
                "product": "windows"
            },
            "modified": "2024/03/26",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1564.001/T1564.001.md#atomic-test-8---hide-files-through-registry"
            ],
            "status": "experimental",
            "tags": [
                "attack.defense_evasion",
                "attack.t1564.001"
            ],
            "title": "Displaying Hidden Files Feature Disabled"
        },
        {
            "author": "frack113",
            "date": "2022/04/04",
            "description": "Detects the modification of the registry to allow a driver or service to persist in Safe Mode.",
            "detection": {
                "condition": "selection and not 1 of filter_optional_*",
                "filter_optional_sophos": {
                    "Image": "C:\\WINDOWS\\system32\\msiexec.exe",
                    "TargetObject|endswith": [
                        "\\Control\\SafeBoot\\Minimal\\SAVService\\(Default)",
                        "\\Control\\SafeBoot\\Network\\SAVService\\(Default)"
                    ]
                },
                "selection": {
                    "Details": "Service",
                    "TargetObject|contains": [
                        "\\Control\\SafeBoot\\Minimal\\",
                        "\\Control\\SafeBoot\\Network\\"
                    ],
                    "TargetObject|endswith": "\\(Default)"
                }
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "1547e27c-3974-43e2-a7d7-7f484fb928ec",
            "level": "high",
            "logsource": {
                "category": "registry_set",
                "product": "windows"
            },
            "modified": "2024/03/25",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1112/T1112.md#atomic-test-33---windows-add-registry-value-to-load-service-in-safe-mode-without-network",
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1112/T1112.md#atomic-test-34---windows-add-registry-value-to-load-service-in-safe-mode-with-network"
            ],
            "status": "experimental",
            "tags": [
                "attack.defense_evasion",
                "attack.t1564.001"
            ],
            "title": "Registry Persistence via Service in Safe Mode"
        },
        {
            "author": "Pawel Mazur",
            "date": "2021/09/06",
            "description": "Detects adversary creating hidden file or directory, by detecting directories or files with . as the first character",
            "detection": {
                "arguments": [
                    {
                        "a1|contains": "/."
                    },
                    {
                        "a1|startswith": "."
                    },
                    {
                        "a2|contains": "/."
                    },
                    {
                        "a2|startswith": "."
                    }
                ],
                "commands": {
                    "a0": [
                        "mkdir",
                        "touch",
                        "vim",
                        "nano",
                        "vi"
                    ],
                    "type": "EXECVE"
                },
                "condition": "commands and arguments"
            },
            "falsepositives": [
                "Unknown"
            ],
            "id": "d08722cd-3d09-449a-80b4-83ea2d9d4616",
            "level": "low",
            "logsource": {
                "product": "linux",
                "service": "auditd"
            },
            "modified": "2022/10/09",
            "references": [
                "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1564.001/T1564.001.md"
            ],
            "status": "test",
            "tags": [
                "attack.defense_evasion",
                "attack.t1564.001"
            ],
            "title": "Hidden Files and Directories"
        }
    ]
}