{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--45f99f1c-f3b7-4148-8374-a681eb38d99e",
    "created": "2024-08-13T14:46:48.781333Z",
    "modified": "2024-08-13T14:46:48.781333Z",
    "name": "Improper Validation of Array Index",
    "description": "The product uses untrusted input when calculating or using an array index, but the product does not validate or incorrectly validates the index to ensure the index references a valid position within the array.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "129"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "DoS: Crash, Exit, or Restart",
            "scope": "Integrity"
        },
        {
            "impact": "DoS: Crash, Exit, or Restart",
            "scope": "Availability"
        },
        {
            "impact": "Modify Memory",
            "scope": "Integrity"
        },
        {
            "impact": "Modify Memory",
            "scope": "Confidentiality"
        },
        {
            "impact": "Read Memory",
            "scope": "Confidentiality"
        },
        {
            "impact": "Modify Memory",
            "scope": "Integrity"
        },
        {
            "impact": "Read Memory",
            "scope": "Integrity"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Integrity"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Confidentiality"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Availability"
        },
        {
            "impact": "DoS: Crash, Exit, or Restart",
            "scope": "Integrity"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Integrity"
        },
        {
            "impact": "Read Memory",
            "scope": "Integrity"
        },
        {
            "impact": "Modify Memory",
            "scope": "Integrity"
        },
        {
            "impact": "DoS: Crash, Exit, or Restart",
            "scope": "Availability"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Availability"
        },
        {
            "impact": "Read Memory",
            "scope": "Availability"
        },
        {
            "impact": "Modify Memory",
            "scope": "Availability"
        },
        {
            "impact": "DoS: Crash, Exit, or Restart",
            "scope": "Confidentiality"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Confidentiality"
        },
        {
            "impact": "Read Memory",
            "scope": "Confidentiality"
        },
        {
            "impact": "Modify Memory",
            "scope": "Confidentiality"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2006-07-19",
            "submission_name": "CLASP",
            "submission_organization": null
        }
    ],
    "x_mitre_detection_methods": [
        {
            "description": "\n                  ",
            "effectiveness": "High",
            "method": "Automated Static Analysis"
        },
        {
            "description": "This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results.",
            "effectiveness": null,
            "method": "Automated Dynamic Analysis"
        },
        {
            "description": "Black box methods might not get the needed code coverage within limited time constraints, and a dynamic test might not produce any noticeable side effects even if it is successful.",
            "effectiveness": null,
            "method": "Black Box"
        }
    ],
    "x_mitre_likelihood_of_exploit": "High",
    "x_mitre_observed_examples": [
        {
            "description": "large ID in packet used as array index",
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-0369",
            "reference": "CVE-2005-0369"
        },
        {
            "description": "negative array index as argument to POP LIST command",
            "link": "https://www.cve.org/CVERecord?id=CVE-2001-1009",
            "reference": "CVE-2001-1009"
        },
        {
            "description": "Integer signedness error leads to negative array index",
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-0721",
            "reference": "CVE-2003-0721"
        },
        {
            "description": "product does not properly track a count and a maximum number, which can lead to resultant array index overflow.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-1189",
            "reference": "CVE-2004-1189"
        },
        {
            "description": "Chain: device driver for packet-capturing software allows access to an unintended IOCTL with resultant array index error.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-5756",
            "reference": "CVE-2007-5756"
        },
        {
            "description": "Chain: array index error (CWE-129) leads to deadlock (CWE-833)",
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-2456",
            "reference": "CVE-2005-2456"
        }
    ],
    "x_mitre_potential_mitigations": [
        {
            "description": "Use an input validation framework such as Struts or the OWASP ESAPI Validation API. Note that using a framework does not automatically address all input validation problems; be mindful of weaknesses that could arise from misusing the framework itself (CWE-1173).",
            "effectiveness": null,
            "phase": "Architecture and Design"
        },
        {
            "description": "\n                  ",
            "effectiveness": null,
            "phase": "Architecture and Design"
        },
        {
            "description": "\n                  ",
            "effectiveness": null,
            "phase": "Requirements"
        },
        {
            "description": "\n\t\t ",
            "effectiveness": "Defense in Depth",
            "phase": "Operation"
        },
        {
            "description": " \n\t\t ",
            "effectiveness": "Defense in Depth",
            "phase": "Operation"
        },
        {
            "description": "\n                  ",
            "effectiveness": null,
            "phase": "Implementation"
        },
        {
            "description": "Be especially careful to validate all input when invoking code that crosses language boundaries, such as from an interpreted language to native code. This could create an unexpected interaction between the language boundaries. Ensure that you are not violating any of the expectations of the language with which you are interfacing. For example, even though Java may not be susceptible to buffer overflows, providing a large argument in a call to native code might trigger an overflow.",
            "effectiveness": null,
            "phase": "Implementation"
        },
        {
            "description": "Run your code using the lowest privileges that are required to accomplish the necessary tasks [REF-76]. If possible, create isolated accounts with limited privileges that are only used for a single task. That way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations.",
            "effectiveness": null,
            "phase": "Architecture and Design"
        },
        {
            "description": "\n                  ",
            "effectiveness": "Limited",
            "phase": "Architecture and Design"
        }
    ],
    "x_mitre_references": [
        {
            "external_reference_id": "REF-7"
        },
        {
            "external_reference_id": "REF-96"
        },
        {
            "external_reference_id": "REF-58"
        },
        {
            "external_reference_id": "REF-60"
        },
        {
            "external_reference_id": "REF-61"
        },
        {
            "external_reference_id": "REF-76"
        },
        {
            "external_reference_id": "REF-44"
        },
        {
            "external_reference_id": "REF-64"
        },
        {
            "external_reference_id": "REF-962"
        },
        {
            "external_reference_id": "REF-18"
        },
        {
            "external_reference_id": "REF-1332"
        },
        {
            "external_reference_id": "REF-1333"
        },
        {
            "external_reference_id": "REF-1335"
        },
        {
            "external_reference_id": "REF-1336"
        },
        {
            "external_reference_id": "REF-1337"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "1285",
            "nature": "ChildOf"
        },
        {
            "cwe_id": "20",
            "nature": "ChildOf"
        },
        {
            "cwe_id": "119",
            "nature": "CanPrecede"
        },
        {
            "cwe_id": "823",
            "nature": "CanPrecede"
        },
        {
            "cwe_id": "789",
            "nature": "CanPrecede"
        }
    ]
}