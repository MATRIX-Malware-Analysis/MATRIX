{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--a3259c40-2850-4b04-accd-f7dc05c504c5",
    "created": "2024-08-13T14:46:48.89371Z",
    "modified": "2024-08-13T14:46:48.89371Z",
    "name": "Use of Hard-coded Cryptographic Key",
    "description": "The use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "321"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Access Control"
        },
        {
            "impact": "Gain Privileges or Assume Identity",
            "scope": "Access Control"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2006-07-19",
            "submission_name": "CLASP",
            "submission_organization": null
        }
    ],
    "x_mitre_detection_methods": [
        {
            "description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
            "effectiveness": "High",
            "method": "Automated Static Analysis"
        }
    ],
    "x_mitre_likelihood_of_exploit": "High",
    "x_mitre_observed_examples": [
        {
            "description": "Engineering Workstation uses hard-coded cryptographic keys that could allow for unathorized filesystem access and privilege escalation",
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-29960",
            "reference": "CVE-2022-29960"
        },
        {
            "description": "Remote Terminal Unit (RTU) uses a hard-coded SSH private key that is likely to be used by default.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30271",
            "reference": "CVE-2022-30271"
        },
        {
            "description": "WiFi router service has a hard-coded encryption key, allowing root access",
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-10884",
            "reference": "CVE-2020-10884"
        },
        {
            "description": "Communications / collaboration product has a hardcoded SSH private key, allowing access to root account",
            "link": "https://www.cve.org/CVERecord?id=CVE-2014-2198",
            "reference": "CVE-2014-2198"
        }
    ],
    "x_mitre_potential_mitigations": [
        {
            "description": "Prevention schemes mirror that of hard-coded password storage.",
            "effectiveness": null,
            "phase": "Architecture and Design"
        }
    ],
    "x_mitre_references": [
        {
            "external_reference_id": "REF-18"
        },
        {
            "external_reference_id": "REF-1283"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "798",
            "nature": "ChildOf"
        },
        {
            "cwe_id": "798",
            "nature": "ChildOf"
        },
        {
            "cwe_id": "798",
            "nature": "ChildOf"
        }
    ]
}