{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--a648b5c1-10c8-490f-97d7-4969d30e7c83",
    "created": "2024-08-13T14:46:48.816747Z",
    "modified": "2024-08-13T14:46:48.816747Z",
    "name": "Integer Coercion Error",
    "description": "Integer coercion refers to a set of flaws pertaining to the type casting, extension, or truncation of primitive data types.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "192"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "DoS: Resource Consumption (CPU)",
            "scope": "Availability"
        },
        {
            "impact": "DoS: Resource Consumption (Memory)",
            "scope": "Availability"
        },
        {
            "impact": "DoS: Crash, Exit, or Restart",
            "scope": "Availability"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Integrity"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Confidentiality"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Availability"
        },
        {
            "impact": "Other",
            "scope": "Integrity"
        },
        {
            "impact": "Other",
            "scope": "Other"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2006-07-19",
            "submission_name": "CLASP",
            "submission_organization": null
        }
    ],
    "x_mitre_detection_methods": [
        {
            "description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
            "effectiveness": "High",
            "method": "Automated Static Analysis"
        }
    ],
    "x_mitre_likelihood_of_exploit": "Medium",
    "x_mitre_observed_examples": [
        {
            "description": "Chain: integer coercion error (CWE-192) prevents a return value from indicating an error, leading to out-of-bounds write (CWE-787)",
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-2639",
            "reference": "CVE-2022-2639"
        }
    ],
    "x_mitre_potential_mitigations": [
        {
            "description": "A language which throws exceptions on ambiguous data casts might be chosen.",
            "effectiveness": null,
            "phase": "Requirements"
        },
        {
            "description": "Design objects and program flow such that multiple or complex casts are unnecessary",
            "effectiveness": null,
            "phase": "Architecture and Design"
        },
        {
            "description": "Ensure that any data type casting that you must used is entirely understood in order to reduce the plausibility of error in use.",
            "effectiveness": null,
            "phase": "Implementation"
        }
    ],
    "x_mitre_references": [
        {
            "external_reference_id": "REF-44"
        },
        {
            "external_reference_id": "REF-62"
        },
        {
            "external_reference_id": "REF-18"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "681",
            "nature": "ChildOf"
        }
    ]
}