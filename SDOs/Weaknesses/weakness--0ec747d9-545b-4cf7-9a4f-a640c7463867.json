{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--0ec747d9-545b-4cf7-9a4f-a640c7463867",
    "created": "2024-08-13T14:46:48.901618Z",
    "modified": "2024-08-13T14:46:48.901618Z",
    "name": "Improper Verification of Cryptographic Signature",
    "description": "The product does not verify, or incorrectly verifies, the cryptographic signature for data.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "347"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "Gain Privileges or Assume Identity",
            "scope": "Access Control"
        },
        {
            "impact": "Modify Application Data",
            "scope": "Access Control"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Access Control"
        },
        {
            "impact": "Gain Privileges or Assume Identity",
            "scope": "Integrity"
        },
        {
            "impact": "Modify Application Data",
            "scope": "Integrity"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Integrity"
        },
        {
            "impact": "Gain Privileges or Assume Identity",
            "scope": "Confidentiality"
        },
        {
            "impact": "Modify Application Data",
            "scope": "Confidentiality"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Confidentiality"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2006-07-19",
            "submission_name": "PLOVER",
            "submission_organization": null
        }
    ],
    "x_mitre_detection_methods": [
        {
            "description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
            "effectiveness": "High",
            "method": "Automated Static Analysis"
        }
    ],
    "x_mitre_likelihood_of_exploit": "Unknown",
    "x_mitre_observed_examples": [
        {
            "description": "Does not properly verify signatures for \"trusted\" entities.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1796",
            "reference": "CVE-2002-1796"
        },
        {
            "description": "Insufficient verification allows spoofing.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-2181",
            "reference": "CVE-2005-2181"
        },
        {
            "description": "Insufficient verification allows spoofing.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-2182",
            "reference": "CVE-2005-2182"
        },
        {
            "description": "Accepts a configuration file without a Message Integrity Check (MIC) signature.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1706",
            "reference": "CVE-2002-1706"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "345",
            "nature": "ChildOf"
        },
        {
            "cwe_id": "345",
            "nature": "ChildOf"
        }
    ]
}