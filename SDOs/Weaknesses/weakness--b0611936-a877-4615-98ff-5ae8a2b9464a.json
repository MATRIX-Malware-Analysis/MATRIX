{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--b0611936-a877-4615-98ff-5ae8a2b9464a",
    "created": "2024-08-13T14:46:48.760384Z",
    "modified": "2024-08-13T14:46:48.760384Z",
    "name": "Stack-based Buffer Overflow",
    "description": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "121"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "Modify Memory",
            "scope": "Availability"
        },
        {
            "impact": "DoS: Crash, Exit, or Restart",
            "scope": "Availability"
        },
        {
            "impact": "DoS: Resource Consumption (CPU)",
            "scope": "Availability"
        },
        {
            "impact": "DoS: Resource Consumption (Memory)",
            "scope": "Availability"
        },
        {
            "impact": "Modify Memory",
            "scope": "Integrity"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Integrity"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Integrity"
        },
        {
            "impact": "Modify Memory",
            "scope": "Confidentiality"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Confidentiality"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Confidentiality"
        },
        {
            "impact": "Modify Memory",
            "scope": "Availability"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Availability"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Availability"
        },
        {
            "impact": "Modify Memory",
            "scope": "Access Control"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Access Control"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Access Control"
        },
        {
            "impact": "Modify Memory",
            "scope": "Integrity"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Integrity"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Integrity"
        },
        {
            "impact": "Other",
            "scope": "Integrity"
        },
        {
            "impact": "Modify Memory",
            "scope": "Confidentiality"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Confidentiality"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Confidentiality"
        },
        {
            "impact": "Other",
            "scope": "Confidentiality"
        },
        {
            "impact": "Modify Memory",
            "scope": "Availability"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Availability"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Availability"
        },
        {
            "impact": "Other",
            "scope": "Availability"
        },
        {
            "impact": "Modify Memory",
            "scope": "Access Control"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Access Control"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Access Control"
        },
        {
            "impact": "Other",
            "scope": "Access Control"
        },
        {
            "impact": "Modify Memory",
            "scope": "Other"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Other"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Other"
        },
        {
            "impact": "Other",
            "scope": "Other"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2006-07-19",
            "submission_name": "CLASP",
            "submission_organization": null
        }
    ],
    "x_mitre_detection_methods": [
        {
            "description": "Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often capable of generating unexpected results such as crashes, memory corruption, or resource consumption. Fuzzing effectively produces repeatable test cases that clearly indicate bugs, which helps developers to diagnose the issues.",
            "effectiveness": "High",
            "method": "Fuzzing"
        },
        {
            "description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
            "effectiveness": "High",
            "method": "Automated Static Analysis"
        }
    ],
    "x_mitre_likelihood_of_exploit": "High",
    "x_mitre_observed_examples": [
        {
            "description": "Stack-based buffer overflows in SFK for wifi chipset used for IoT/embedded devices, as exploited in the wild per CISA KEV.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-35395",
            "reference": "CVE-2021-35395"
        }
    ],
    "x_mitre_potential_mitigations": [
        {
            "description": " \n\t\t",
            "effectiveness": "Defense in Depth",
            "phase": "Operation"
        },
        {
            "description": "Use an abstraction library to abstract away risky APIs. Not a complete solution.",
            "effectiveness": null,
            "phase": "Architecture and Design"
        },
        {
            "description": "Implement and perform bounds checking on input.",
            "effectiveness": null,
            "phase": "Implementation"
        },
        {
            "description": "Do not use dangerous functions such as gets. Use safer, equivalent functions which check for boundary errors.",
            "effectiveness": null,
            "phase": "Implementation"
        },
        {
            "description": "\n\t\t ",
            "effectiveness": "Defense in Depth",
            "phase": "Operation"
        }
    ],
    "x_mitre_references": [
        {
            "external_reference_id": "REF-1029"
        },
        {
            "external_reference_id": "REF-7"
        },
        {
            "external_reference_id": "REF-44"
        },
        {
            "external_reference_id": "REF-62"
        },
        {
            "external_reference_id": "REF-62"
        },
        {
            "external_reference_id": "REF-18"
        },
        {
            "external_reference_id": "REF-58"
        },
        {
            "external_reference_id": "REF-60"
        },
        {
            "external_reference_id": "REF-64"
        },
        {
            "external_reference_id": "REF-1332"
        },
        {
            "external_reference_id": "REF-1333"
        },
        {
            "external_reference_id": "REF-1334"
        },
        {
            "external_reference_id": "REF-1335"
        },
        {
            "external_reference_id": "REF-1337"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "788",
            "nature": "ChildOf"
        },
        {
            "cwe_id": "787",
            "nature": "ChildOf"
        }
    ]
}