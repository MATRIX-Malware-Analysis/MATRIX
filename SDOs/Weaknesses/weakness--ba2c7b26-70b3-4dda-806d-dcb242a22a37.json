{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--ba2c7b26-70b3-4dda-806d-dcb242a22a37",
    "created": "2024-08-13T14:46:48.909363Z",
    "modified": "2024-08-13T14:46:48.909363Z",
    "name": "Returning a Mutable Object to an Untrusted Caller",
    "description": "Sending non-cloned mutable data as a return value may result in that data being altered or deleted by the calling function.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "375"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "Modify Memory",
            "scope": "Access Control"
        },
        {
            "impact": "Modify Memory",
            "scope": "Integrity"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2006-07-19",
            "submission_name": "CLASP",
            "submission_organization": null
        }
    ],
    "x_mitre_likelihood_of_exploit": "Medium",
    "x_mitre_potential_mitigations": [
        {
            "description": "Declare returned data which should not be altered as constant or immutable.",
            "effectiveness": null,
            "phase": "Implementation"
        },
        {
            "description": "Clone all mutable data before returning references to it. This is the preferred mitigation. This way, regardless of what changes are made to the data, a valid copy is retained for use by the class.",
            "effectiveness": null,
            "phase": "Implementation"
        }
    ],
    "x_mitre_references": [
        {
            "external_reference_id": "REF-18"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "668",
            "nature": "ChildOf"
        }
    ]
}