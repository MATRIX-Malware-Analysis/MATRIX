{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--81e14aca-b927-4b39-aa29-89f4316d9542",
    "created": "2024-08-13T14:46:48.934254Z",
    "modified": "2024-08-13T14:46:48.934254Z",
    "name": "NULL Pointer Dereference",
    "description": "The product dereferences a pointer that it expects to be valid but is NULL.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "476"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "DoS: Crash, Exit, or Restart",
            "scope": "Availability"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Integrity"
        },
        {
            "impact": "Read Memory",
            "scope": "Integrity"
        },
        {
            "impact": "Modify Memory",
            "scope": "Integrity"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Confidentiality"
        },
        {
            "impact": "Read Memory",
            "scope": "Confidentiality"
        },
        {
            "impact": "Modify Memory",
            "scope": "Confidentiality"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2006-07-19",
            "submission_name": "7 Pernicious Kingdoms",
            "submission_organization": null
        }
    ],
    "x_mitre_detection_methods": [
        {
            "description": "This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results.",
            "effectiveness": "Moderate",
            "method": "Automated Dynamic Analysis"
        },
        {
            "description": "Identify error conditions that are not likely to occur during normal usage and trigger them. For example, run the program under low memory conditions, run with insufficient privileges or permissions, interrupt a transaction before it is completed, or disable connectivity to basic network services such as DNS. Monitor the software for any unexpected behavior. If you trigger an unhandled exception or similar error that was discovered and handled by the application's environment, it may still indicate unexpected conditions that were not handled by the application itself.",
            "effectiveness": null,
            "method": "Manual Dynamic Analysis"
        },
        {
            "description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
            "effectiveness": "High",
            "method": "Automated Static Analysis"
        }
    ],
    "x_mitre_likelihood_of_exploit": "Medium",
    "x_mitre_observed_examples": [
        {
            "description": "race condition causes a table to be corrupted if a timer activates while it is being modified, leading to resultant NULL dereference; also involves locking.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-3274",
            "reference": "CVE-2005-3274"
        },
        {
            "description": "large number of packets leads to NULL dereference",
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1912",
            "reference": "CVE-2002-1912"
        },
        {
            "description": "packet with invalid error status value triggers NULL dereference",
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-0772",
            "reference": "CVE-2005-0772"
        },
        {
            "description": "Chain: race condition for an argument value, possibly resulting in NULL dereference",
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-4895",
            "reference": "CVE-2009-4895"
        },
        {
            "description": "ssh component for Go allows clients to cause a denial of service (nil pointer dereference) against SSH servers.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-29652",
            "reference": "CVE-2020-29652"
        },
        {
            "description": "Chain: Use of an unimplemented network socket operation pointing to an uninitialized handler function (CWE-456) causes a crash because of a null pointer dereference (CWE-476).",
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2692",
            "reference": "CVE-2009-2692"
        },
        {
            "description": "Chain: race condition (CWE-362) might allow resource to be released before operating on it, leading to NULL dereference (CWE-476)",
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3547",
            "reference": "CVE-2009-3547"
        },
        {
            "description": "Chain: some unprivileged ioctls do not verify that a structure has been initialized before invocation, leading to NULL dereference",
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3620",
            "reference": "CVE-2009-3620"
        },
        {
            "description": "Chain: IP and UDP layers each track the same value with different mechanisms that can get out of sync, possibly resulting in a NULL dereference",
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2698",
            "reference": "CVE-2009-2698"
        },
        {
            "description": "Chain: uninitialized function pointers can be dereferenced allowing code execution",
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2692",
            "reference": "CVE-2009-2692"
        },
        {
            "description": "Chain: improper initialization of memory can lead to NULL dereference",
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0949",
            "reference": "CVE-2009-0949"
        },
        {
            "description": "Chain: game server can access player data structures before initialization has happened leading to NULL dereference",
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-3597",
            "reference": "CVE-2008-3597"
        },
        {
            "description": "Chain: The return value of a function returning a pointer is not checked for success (CWE-252) resulting in the later use of an uninitialized variable (CWE-456) and a null pointer dereference (CWE-476)",
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-6078",
            "reference": "CVE-2020-6078"
        },
        {
            "description": "Chain: a message having an unknown message type may cause a reference to uninitialized memory resulting in a null pointer dereference (CWE-476) or dangling pointer (CWE-825), possibly crashing the system or causing heap corruption.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-0062",
            "reference": "CVE-2008-0062"
        },
        {
            "description": "Chain: unchecked return value can lead to NULL dereference",
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5183",
            "reference": "CVE-2008-5183"
        },
        {
            "description": "SSL software allows remote attackers to cause a denial of service (crash) via a crafted SSL/TLS handshake that triggers a null dereference.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-0079",
            "reference": "CVE-2004-0079"
        },
        {
            "description": "Network monitor allows remote attackers to cause a denial of service (crash) via a malformed RADIUS packet that triggers a null dereference.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-0365",
            "reference": "CVE-2004-0365"
        },
        {
            "description": "Network monitor allows remote attackers to cause a denial of service (crash) via a malformed Q.931, which triggers a null dereference.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-1013",
            "reference": "CVE-2003-1013"
        },
        {
            "description": "Chat client allows remote attackers to cause a denial of service (crash) via a passive DCC request with an invalid ID number, which causes a null dereference.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-1000",
            "reference": "CVE-2003-1000"
        },
        {
            "description": "Server allows remote attackers to cause a denial of service (crash) via malformed requests that trigger a null dereference.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-0389",
            "reference": "CVE-2004-0389"
        },
        {
            "description": "OS allows remote attackers to cause a denial of service (crash from null dereference) or execute arbitrary code via a crafted request during authentication protocol selection.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-0119",
            "reference": "CVE-2004-0119"
        },
        {
            "description": "Game allows remote attackers to cause a denial of service (server crash) via a missing argument, which triggers a null pointer dereference.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-0458",
            "reference": "CVE-2004-0458"
        },
        {
            "description": "Network monitor allows remote attackers to cause a denial of service (crash) or execute arbitrary code via malformed packets that cause a NULL pointer dereference.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-0401",
            "reference": "CVE-2002-0401"
        },
        {
            "description": "Chain: System call returns wrong value (CWE-393), leading to a resultant NULL dereference (CWE-476).",
            "link": "https://www.cve.org/CVERecord?id=CVE-2001-1559",
            "reference": "CVE-2001-1559"
        }
    ],
    "x_mitre_potential_mitigations": [
        {
            "description": "If all pointers that could have been modified are checked for NULL before use, nearly all NULL pointer dereferences can be prevented.",
            "effectiveness": null,
            "phase": "Implementation"
        },
        {
            "description": "Select a programming language that is not susceptible to these issues.",
            "effectiveness": null,
            "phase": "Requirements"
        },
        {
            "description": "Check the results of all functions that return a value and verify that the value is non-null before acting upon it.",
            "effectiveness": "Moderate",
            "phase": "Implementation"
        },
        {
            "description": "Identify all variables and data stores that receive information from external sources, and apply input validation to make sure that they are only initialized to expected values.",
            "effectiveness": null,
            "phase": "Architecture and Design"
        },
        {
            "description": "Explicitly initialize all variables and other data stores, either during declaration or just before the first usage.",
            "effectiveness": null,
            "phase": "Implementation"
        }
    ],
    "x_mitre_references": [
        {
            "external_reference_id": "REF-6"
        },
        {
            "external_reference_id": "REF-18"
        },
        {
            "external_reference_id": "REF-1031"
        },
        {
            "external_reference_id": "REF-1032"
        },
        {
            "external_reference_id": "REF-1033"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "710",
            "nature": "ChildOf"
        },
        {
            "cwe_id": "754",
            "nature": "ChildOf"
        },
        {
            "cwe_id": "754",
            "nature": "ChildOf"
        }
    ]
}