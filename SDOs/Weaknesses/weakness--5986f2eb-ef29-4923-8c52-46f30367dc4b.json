{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--5986f2eb-ef29-4923-8c52-46f30367dc4b",
    "created": "2024-08-13T14:46:49.003526Z",
    "modified": "2024-08-13T14:46:49.003526Z",
    "name": "Insufficient Logging",
    "description": "When a security-critical event occurs, the product either does not record the event or omits important details about the event when logging it.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "778"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "Hide Activities",
            "scope": "Non-Repudiation"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2009-07-02",
            "submission_name": "CWE Content Team",
            "submission_organization": "MITRE"
        }
    ],
    "x_mitre_detection_methods": [
        {
            "description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
            "effectiveness": "High",
            "method": "Automated Static Analysis"
        }
    ],
    "x_mitre_likelihood_of_exploit": "Medium",
    "x_mitre_observed_examples": [
        {
            "description": "server does not log failed authentication attempts, making it easier for attackers to perform brute force password guessing without being detected",
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-4315",
            "reference": "CVE-2008-4315"
        },
        {
            "description": "admin interface does not log failed authentication attempts, making it easier for attackers to perform brute force password guessing without being detected",
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-1203",
            "reference": "CVE-2008-1203"
        },
        {
            "description": "default configuration for POP server does not log source IP or username for login attempts",
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-3730",
            "reference": "CVE-2007-3730"
        },
        {
            "description": "proxy does not log requests without \"http://\" in the URL, allowing web surfers to access restricted web content without detection",
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-1225",
            "reference": "CVE-2007-1225"
        },
        {
            "description": "web server does not log requests for a non-standard request type",
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-1566",
            "reference": "CVE-2003-1566"
        }
    ],
    "x_mitre_potential_mitigations": [
        {
            "description": "Use a centralized logging mechanism that supports multiple levels of detail.",
            "effectiveness": null,
            "phase": "Architecture and Design"
        },
        {
            "description": "Ensure that all security-related successes and failures can be logged. When storing data in the cloud (e.g., AWS S3 buckets, Azure blobs, Google Cloud Storage, etc.), use the provider's controls to enable and capture detailed logging information.",
            "effectiveness": null,
            "phase": "Implementation"
        },
        {
            "description": "Be sure to set the level of logging appropriately in a production environment. Sufficient data should be logged to enable system administrators to detect attacks, diagnose errors, and recover from attacks. At the same time, logging too much data (CWE-779) can cause the same problems, including unexpected costs when using a cloud environment.",
            "effectiveness": null,
            "phase": "Operation"
        },
        {
            "description": "To enable storage logging using Azure's Portal, navigate to the name of the Storage Account, locate Monitoring (CLASSIC) section, and select Diagnostic settings (classic). For each of the various properties (blob, file, table, queue), ensure the status is properly set for the desired logging data. If using PowerShell, the Set-AzStorageServiceLoggingProperty command could be called using appropriate -ServiceType, -LoggingOperations, and -RetentionDays arguments.",
            "effectiveness": null,
            "phase": "Operation"
        }
    ],
    "x_mitre_references": [
        {
            "external_reference_id": "REF-62"
        },
        {
            "external_reference_id": "REF-1307"
        },
        {
            "external_reference_id": "REF-1308"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "223",
            "nature": "ChildOf"
        },
        {
            "cwe_id": "693",
            "nature": "ChildOf"
        }
    ]
}