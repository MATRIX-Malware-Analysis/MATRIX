{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--1bacd767-038f-4f9f-9985-f91fc617a7c8",
    "created": "2024-08-13T14:46:48.995544Z",
    "modified": "2024-08-13T14:46:48.995544Z",
    "name": "Exposed Dangerous Method or Function",
    "description": "The product provides an Applications Programming Interface (API) or similar interface for interaction with external actors, but the interface includes a dangerous method or function that is not properly restricted.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "749"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "Gain Privileges or Assume Identity",
            "scope": "Integrity"
        },
        {
            "impact": "Read Application Data",
            "scope": "Integrity"
        },
        {
            "impact": "Modify Application Data",
            "scope": "Integrity"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Integrity"
        },
        {
            "impact": "Other",
            "scope": "Integrity"
        },
        {
            "impact": "Gain Privileges or Assume Identity",
            "scope": "Confidentiality"
        },
        {
            "impact": "Read Application Data",
            "scope": "Confidentiality"
        },
        {
            "impact": "Modify Application Data",
            "scope": "Confidentiality"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Confidentiality"
        },
        {
            "impact": "Other",
            "scope": "Confidentiality"
        },
        {
            "impact": "Gain Privileges or Assume Identity",
            "scope": "Availability"
        },
        {
            "impact": "Read Application Data",
            "scope": "Availability"
        },
        {
            "impact": "Modify Application Data",
            "scope": "Availability"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Availability"
        },
        {
            "impact": "Other",
            "scope": "Availability"
        },
        {
            "impact": "Gain Privileges or Assume Identity",
            "scope": "Access Control"
        },
        {
            "impact": "Read Application Data",
            "scope": "Access Control"
        },
        {
            "impact": "Modify Application Data",
            "scope": "Access Control"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Access Control"
        },
        {
            "impact": "Other",
            "scope": "Access Control"
        },
        {
            "impact": "Gain Privileges or Assume Identity",
            "scope": "Other"
        },
        {
            "impact": "Read Application Data",
            "scope": "Other"
        },
        {
            "impact": "Modify Application Data",
            "scope": "Other"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Other"
        },
        {
            "impact": "Other",
            "scope": "Other"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2008-11-24",
            "submission_name": "CWE Content Team",
            "submission_organization": "MITRE"
        }
    ],
    "x_mitre_detection_methods": [
        {
            "description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
            "effectiveness": "High",
            "method": "Automated Static Analysis"
        }
    ],
    "x_mitre_likelihood_of_exploit": "Low",
    "x_mitre_observed_examples": [
        {
            "description": "arbitrary Java code execution via exposed method",
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-6382",
            "reference": "CVE-2007-6382"
        },
        {
            "description": "security tool ActiveX control allows download or upload of files",
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-1112",
            "reference": "CVE-2007-1112"
        }
    ],
    "x_mitre_potential_mitigations": [
        {
            "description": "If you must expose a method, make sure to perform input validation on all arguments, limit access to authorized parties, and protect against all possible vulnerabilities.",
            "effectiveness": null,
            "phase": "Architecture and Design"
        },
        {
            "description": "\n                  ",
            "effectiveness": null,
            "phase": "Architecture and Design"
        }
    ],
    "x_mitre_references": [
        {
            "external_reference_id": "REF-503"
        },
        {
            "external_reference_id": "REF-510"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "284",
            "nature": "ChildOf"
        }
    ]
}