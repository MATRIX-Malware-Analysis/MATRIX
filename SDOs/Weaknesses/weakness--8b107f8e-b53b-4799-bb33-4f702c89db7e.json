{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--8b107f8e-b53b-4799-bb33-4f702c89db7e",
    "created": "2024-08-13T14:46:48.777121Z",
    "modified": "2024-08-13T14:46:48.777121Z",
    "name": "Sensitive Cookie with Improper SameSite Attribute",
    "description": "The SameSite attribute for sensitive cookies is not set, or an insecure value is used.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "1275"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "Modify Application Data",
            "scope": "Confidentiality"
        },
        {
            "impact": "Modify Application Data",
            "scope": "Integrity"
        },
        {
            "impact": "Modify Application Data",
            "scope": "Non-Repudiation"
        },
        {
            "impact": "Modify Application Data",
            "scope": "Access Control"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2020-06-19",
            "submission_name": "Michael Stepankin",
            "submission_organization": "Veracode"
        }
    ],
    "x_mitre_detection_methods": [
        {
            "description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
            "effectiveness": "High",
            "method": "Automated Static Analysis"
        }
    ],
    "x_mitre_likelihood_of_exploit": "Medium",
    "x_mitre_observed_examples": [
        {
            "description": "Web application for a room automation system has client-side JavaScript that sets a sensitive cookie without the SameSite security attribute, allowing the cookie to be sniffed",
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-24045",
            "reference": "CVE-2022-24045"
        }
    ],
    "x_mitre_potential_mitigations": [
        {
            "description": "Set the SameSite attribute of a sensitive cookie to 'Lax' or 'Strict'. This instructs the browser to apply this cookie only to same-domain requests, which provides a good Defense in Depth against CSRF attacks. When the 'Lax' value is in use, cookies are also sent for top-level cross-domain navigation via HTTP GET, HEAD, OPTIONS, and TRACE methods, but not for other HTTP methods that are more like to cause side-effects of state mutation.",
            "effectiveness": "High",
            "phase": "Implementation"
        }
    ],
    "x_mitre_references": [
        {
            "external_reference_id": "REF-1104"
        },
        {
            "external_reference_id": "REF-1105"
        },
        {
            "external_reference_id": "REF-1106"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "923",
            "nature": "ChildOf"
        },
        {
            "cwe_id": "352",
            "nature": "CanPrecede"
        }
    ]
}