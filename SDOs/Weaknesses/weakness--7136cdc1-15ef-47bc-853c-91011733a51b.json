{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--7136cdc1-15ef-47bc-853c-91011733a51b",
    "created": "2024-08-13T14:46:48.727887Z",
    "modified": "2024-08-13T14:46:48.727887Z",
    "name": "Use of Web Link to Untrusted Target with window.opener Access",
    "description": "The web application produces links to untrusted external sites outside of its sphere of control, but it does not properly prevent the external site from modifying  security-critical properties of the window.opener object, such as the location property.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "1022"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "Alter Execution Logic",
            "scope": "Confidentiality"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2017-09-26",
            "submission_name": "David Deatherage",
            "submission_organization": "Silicon Valley Bank"
        }
    ],
    "x_mitre_detection_methods": [
        {
            "description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
            "effectiveness": "High",
            "method": "Automated Static Analysis"
        }
    ],
    "x_mitre_likelihood_of_exploit": "Medium",
    "x_mitre_observed_examples": [
        {
            "description": "Library software does not use rel: \"noopener noreferrer\" setting, allowing tabnabbing attacks to redirect to a malicious page",
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-4927",
            "reference": "CVE-2022-4927"
        }
    ],
    "x_mitre_potential_mitigations": [
        {
            "description": "Specify in the design that any linked external document must not be granted access to the location object of the calling page.",
            "effectiveness": null,
            "phase": "Architecture and Design"
        },
        {
            "description": "\n                  ",
            "effectiveness": null,
            "phase": "Implementation"
        },
        {
            "description": "\n                  ",
            "effectiveness": null,
            "phase": "Implementation"
        }
    ],
    "x_mitre_references": [
        {
            "external_reference_id": "REF-39"
        },
        {
            "external_reference_id": "REF-40"
        },
        {
            "external_reference_id": "REF-958"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "266",
            "nature": "ChildOf"
        }
    ]
}