{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--cbe98bba-e311-488a-94d4-d7361028d273",
    "created": "2024-08-13T14:46:49.007518Z",
    "modified": "2024-08-13T14:46:49.007518Z",
    "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "79"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Access Control"
        },
        {
            "impact": "Read Application Data",
            "scope": "Access Control"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Confidentiality"
        },
        {
            "impact": "Read Application Data",
            "scope": "Confidentiality"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Integrity"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Confidentiality"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Availability"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Confidentiality"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Confidentiality"
        },
        {
            "impact": "Read Application Data",
            "scope": "Confidentiality"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Integrity"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Integrity"
        },
        {
            "impact": "Read Application Data",
            "scope": "Integrity"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Availability"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Availability"
        },
        {
            "impact": "Read Application Data",
            "scope": "Availability"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Access Control"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Access Control"
        },
        {
            "impact": "Read Application Data",
            "scope": "Access Control"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2006-07-19",
            "submission_name": "PLOVER",
            "submission_organization": null
        }
    ],
    "x_mitre_detection_methods": [
        {
            "description": "Use automated static analysis tools that target this type of weakness. Many modern techniques use data flow analysis to minimize the number of false positives. This is not a perfect solution, since 100% accuracy and coverage are not feasible, especially when multiple components are involved.",
            "effectiveness": "Moderate",
            "method": "Automated Static Analysis"
        },
        {
            "description": "Use the XSS Cheat Sheet [REF-714] or automated test-generation tools to help launch a wide variety of attacks against your web application. The Cheat Sheet contains many subtle XSS variations that are specifically targeted against weak XSS defenses.",
            "effectiveness": "Moderate",
            "method": "Black Box"
        }
    ],
    "x_mitre_likelihood_of_exploit": "High",
    "x_mitre_observed_examples": [
        {
            "description": "Python Library Manager did not sufficiently neutralize a user-supplied search term, allowing reflected XSS.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-25926",
            "reference": "CVE-2021-25926"
        },
        {
            "description": "Python-based e-commerce platform did not escape returned content on error pages, allowing for reflected Cross-Site Scripting attacks.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-25963",
            "reference": "CVE-2021-25963"
        },
        {
            "description": "Universal XSS in mobile operating system, as exploited in the wild per CISA KEV.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-1879",
            "reference": "CVE-2021-1879"
        },
        {
            "description": "Chain: improper input validation (CWE-20) in firewall product leads to XSS (CWE-79), as exploited in the wild per CISA KEV.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-3580",
            "reference": "CVE-2020-3580"
        },
        {
            "description": "Admin GUI allows XSS through cookie.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2014-8958",
            "reference": "CVE-2014-8958"
        },
        {
            "description": "Web stats program allows XSS through crafted HTTP header.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2017-9764",
            "reference": "CVE-2017-9764"
        },
        {
            "description": "Web log analysis product allows XSS through crafted HTTP Referer header.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2014-5198",
            "reference": "CVE-2014-5198"
        },
        {
            "description": "Chain: protection mechanism failure allows XSS",
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5080",
            "reference": "CVE-2008-5080"
        },
        {
            "description": "Chain: incomplete denylist (CWE-184) only checks \"javascript:\" tag, allowing XSS (CWE-79) using other tags",
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-4308",
            "reference": "CVE-2006-4308"
        },
        {
            "description": "Chain: incomplete denylist (CWE-184) only removes SCRIPT tags, enabling XSS (CWE-79)",
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-5727",
            "reference": "CVE-2007-5727"
        },
        {
            "description": "Reflected XSS using the PATH_INFO in a URL",
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5770",
            "reference": "CVE-2008-5770"
        },
        {
            "description": "Reflected XSS not properly handled when generating an error message",
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-4730",
            "reference": "CVE-2008-4730"
        },
        {
            "description": "Reflected XSS sent through email message.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5734",
            "reference": "CVE-2008-5734"
        },
        {
            "description": "Stored XSS in a security product.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-0971",
            "reference": "CVE-2008-0971"
        },
        {
            "description": "Stored XSS using a wiki page.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5249",
            "reference": "CVE-2008-5249"
        },
        {
            "description": "Stored XSS in a guestbook application.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-3568",
            "reference": "CVE-2006-3568"
        },
        {
            "description": "Stored XSS in a guestbook application using a javascript: URI in a bbcode img tag.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-3211",
            "reference": "CVE-2006-3211"
        },
        {
            "description": "Chain: library file is not protected against a direct request (CWE-425), leading to reflected XSS (CWE-79).",
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-3295",
            "reference": "CVE-2006-3295"
        }
    ],
    "x_mitre_potential_mitigations": [
        {
            "description": "\n                  ",
            "effectiveness": null,
            "phase": "Architecture and Design"
        },
        {
            "description": "\n                  ",
            "effectiveness": null,
            "phase": "Implementation"
        },
        {
            "description": "Understand all the potential areas where untrusted inputs can enter your software: parameters or arguments, cookies, anything read from the network, environment variables, reverse DNS lookups, query results, request headers, URL components, e-mail, files, filenames, databases, and any external systems that provide data to the application. Remember that such inputs may be obtained indirectly through API calls.",
            "effectiveness": "Limited",
            "phase": "Architecture and Design"
        },
        {
            "description": "For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.",
            "effectiveness": null,
            "phase": "Architecture and Design"
        },
        {
            "description": "If available, use structured mechanisms that automatically enforce the separation between data and code. These mechanisms may be able to provide the relevant quoting, encoding, and validation automatically, instead of relying on the developer to provide this capability at every point where output is generated.",
            "effectiveness": null,
            "phase": "Architecture and Design"
        },
        {
            "description": "\n                  ",
            "effectiveness": null,
            "phase": "Implementation"
        },
        {
            "description": "With Struts, write all data from form beans with the bean's filter attribute set to true.",
            "effectiveness": null,
            "phase": "Implementation"
        },
        {
            "description": "To help mitigate XSS attacks against the user's session cookie, set the session cookie to be HttpOnly. In browsers that support the HttpOnly feature (such as more recent versions of Internet Explorer and Firefox), this attribute can prevent the user's session cookie from being accessible to malicious client-side scripts that use document.cookie. This is not a complete solution, since HttpOnly is not supported by all browsers. More importantly, XMLHTTPRequest and other powerful browser technologies provide read access to HTTP headers, including the Set-Cookie header in which the HttpOnly flag is set.",
            "effectiveness": "Defense in Depth",
            "phase": "Implementation"
        },
        {
            "description": "\n                  ",
            "effectiveness": null,
            "phase": "Implementation"
        },
        {
            "description": "When the set of acceptable objects, such as filenames or URLs, is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames or URLs, and reject all other inputs.",
            "effectiveness": null,
            "phase": "Architecture and Design"
        },
        {
            "description": "Use an application firewall that can detect attacks against this weakness. It can be beneficial in cases in which the code cannot be fixed (because it is controlled by a third party), as an emergency prevention measure while more comprehensive software assurance measures are applied, or to provide defense in depth.",
            "effectiveness": "Moderate",
            "phase": "Operation"
        },
        {
            "description": "When using PHP, configure the application so that it does not use register_globals. During implementation, develop the application so that it does not rely on this feature, but be wary of implementing a register_globals emulation that is subject to weaknesses such as CWE-95, CWE-621, and similar issues.",
            "effectiveness": null,
            "phase": "Operation"
        }
    ],
    "x_mitre_references": [
        {
            "external_reference_id": "REF-709"
        },
        {
            "external_reference_id": "REF-44"
        },
        {
            "external_reference_id": "REF-44"
        },
        {
            "external_reference_id": "REF-712"
        },
        {
            "external_reference_id": "REF-7"
        },
        {
            "external_reference_id": "REF-714"
        },
        {
            "external_reference_id": "REF-715"
        },
        {
            "external_reference_id": "REF-716"
        },
        {
            "external_reference_id": "REF-45"
        },
        {
            "external_reference_id": "REF-718"
        },
        {
            "external_reference_id": "REF-719"
        },
        {
            "external_reference_id": "REF-720"
        },
        {
            "external_reference_id": "REF-721"
        },
        {
            "external_reference_id": "REF-722"
        },
        {
            "external_reference_id": "REF-723"
        },
        {
            "external_reference_id": "REF-724"
        },
        {
            "external_reference_id": "REF-725"
        },
        {
            "external_reference_id": "REF-726"
        },
        {
            "external_reference_id": "REF-62"
        },
        {
            "external_reference_id": "REF-956"
        },
        {
            "external_reference_id": "REF-962"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "74",
            "nature": "ChildOf"
        },
        {
            "cwe_id": "74",
            "nature": "ChildOf"
        },
        {
            "cwe_id": "494",
            "nature": "CanPrecede"
        },
        {
            "cwe_id": "352",
            "nature": "PeerOf"
        }
    ]
}