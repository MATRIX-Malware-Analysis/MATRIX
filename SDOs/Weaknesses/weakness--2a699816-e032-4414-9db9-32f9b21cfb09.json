{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--2a699816-e032-4414-9db9-32f9b21cfb09",
    "created": "2024-08-13T14:46:48.816461Z",
    "modified": "2024-08-13T14:46:48.816461Z",
    "name": "Integer Underflow (Wrap or Wraparound)",
    "description": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "191"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "DoS: Crash, Exit, or Restart",
            "scope": "Availability"
        },
        {
            "impact": "DoS: Resource Consumption (CPU)",
            "scope": "Availability"
        },
        {
            "impact": "DoS: Resource Consumption (Memory)",
            "scope": "Availability"
        },
        {
            "impact": "DoS: Instability",
            "scope": "Availability"
        },
        {
            "impact": "Modify Memory",
            "scope": "Integrity"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Confidentiality"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Confidentiality"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Availability"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Availability"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Access Control"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Access Control"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2006-07-19",
            "submission_name": "PLOVER",
            "submission_organization": null
        }
    ],
    "x_mitre_detection_methods": [
        {
            "description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
            "effectiveness": "High",
            "method": "Automated Static Analysis"
        }
    ],
    "x_mitre_likelihood_of_exploit": "Unknown",
    "x_mitre_observed_examples": [
        {
            "description": "Integer underflow in firewall via malformed packet.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-0816",
            "reference": "CVE-2004-0816"
        },
        {
            "description": "Integer underflow by packet with invalid length.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-1002",
            "reference": "CVE-2004-1002"
        },
        {
            "description": "Long input causes incorrect length calculation.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-0199",
            "reference": "CVE-2005-0199"
        },
        {
            "description": "Malformed icon causes integer underflow in loop counter variable.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-1891",
            "reference": "CVE-2005-1891"
        }
    ],
    "x_mitre_references": [
        {
            "external_reference_id": "REF-44"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "682",
            "nature": "ChildOf"
        },
        {
            "cwe_id": "682",
            "nature": "ChildOf"
        }
    ]
}