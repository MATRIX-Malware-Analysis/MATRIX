{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--3c9ed16a-2b64-4a25-b762-fe3df6dbc9dd",
    "created": "2024-08-13T14:46:48.760763Z",
    "modified": "2024-08-13T14:46:48.760763Z",
    "name": "Heap-based Buffer Overflow",
    "description": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "122"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "DoS: Crash, Exit, or Restart",
            "scope": "Availability"
        },
        {
            "impact": "DoS: Resource Consumption (CPU)",
            "scope": "Availability"
        },
        {
            "impact": "DoS: Resource Consumption (Memory)",
            "scope": "Availability"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Integrity"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Integrity"
        },
        {
            "impact": "Modify Memory",
            "scope": "Integrity"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Confidentiality"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Confidentiality"
        },
        {
            "impact": "Modify Memory",
            "scope": "Confidentiality"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Availability"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Availability"
        },
        {
            "impact": "Modify Memory",
            "scope": "Availability"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Access Control"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Access Control"
        },
        {
            "impact": "Modify Memory",
            "scope": "Access Control"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Integrity"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Integrity"
        },
        {
            "impact": "Other",
            "scope": "Integrity"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Confidentiality"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Confidentiality"
        },
        {
            "impact": "Other",
            "scope": "Confidentiality"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Availability"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Availability"
        },
        {
            "impact": "Other",
            "scope": "Availability"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Access Control"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Access Control"
        },
        {
            "impact": "Other",
            "scope": "Access Control"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Other"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Other"
        },
        {
            "impact": "Other",
            "scope": "Other"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2006-07-19",
            "submission_name": "CLASP",
            "submission_organization": null
        }
    ],
    "x_mitre_detection_methods": [
        {
            "description": "Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often capable of generating unexpected results such as crashes, memory corruption, or resource consumption. Fuzzing effectively produces repeatable test cases that clearly indicate bugs, which helps developers to diagnose the issues.",
            "effectiveness": "High",
            "method": "Fuzzing"
        }
    ],
    "x_mitre_likelihood_of_exploit": "High",
    "x_mitre_observed_examples": [
        {
            "description": "Chain: in a web browser, an unsigned 64-bit integer is forcibly cast to a 32-bit integer (CWE-681) and potentially leading to an integer overflow (CWE-190). If an integer overflow occurs, this can cause heap memory corruption (CWE-122)",
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-43537",
            "reference": "CVE-2021-43537"
        },
        {
            "description": "Chain: integer signedness error (CWE-195) passes signed comparison, leading to heap overflow (CWE-122)",
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-4268",
            "reference": "CVE-2007-4268"
        },
        {
            "description": "Chain: product does not handle when an input string is not NULL terminated (CWE-170), leading to buffer over-read (CWE-125) or heap-based buffer overflow (CWE-122).",
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2523",
            "reference": "CVE-2009-2523"
        },
        {
            "description": "Chain: machine-learning product can have a heap-based\n\t      buffer overflow (CWE-122) when some integer-oriented bounds are\n\t      calculated by using ceiling() and floor() on floating point values\n\t      (CWE-1339)",
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-29529",
            "reference": "CVE-2021-29529"
        },
        {
            "description": "Chain: integer overflow (CWE-190) causes a negative signed value, which later bypasses a maximum-only check (CWE-839), leading to heap-based buffer overflow (CWE-122).",
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-1866",
            "reference": "CVE-2010-1866"
        }
    ],
    "x_mitre_potential_mitigations": [
        {
            "description": "Pre-design: Use a language or compiler that performs automatic bounds checking.",
            "effectiveness": null,
            "phase": null
        },
        {
            "description": "Use an abstraction library to abstract away risky APIs. Not a complete solution.",
            "effectiveness": null,
            "phase": "Architecture and Design"
        },
        {
            "description": " \n\t\t",
            "effectiveness": "Defense in Depth",
            "phase": "Operation"
        },
        {
            "description": "\n\t\t ",
            "effectiveness": "Defense in Depth",
            "phase": "Operation"
        },
        {
            "description": "Implement and perform bounds checking on input.",
            "effectiveness": null,
            "phase": "Implementation"
        },
        {
            "description": "Do not use dangerous functions such as gets. Look for their safe equivalent, which checks for the boundary.",
            "effectiveness": null,
            "phase": "Implementation"
        },
        {
            "description": "Use OS-level preventative functionality. This is not a complete solution, but it provides some defense in depth.",
            "effectiveness": null,
            "phase": "Operation"
        }
    ],
    "x_mitre_references": [
        {
            "external_reference_id": "REF-7"
        },
        {
            "external_reference_id": "REF-44"
        },
        {
            "external_reference_id": "REF-62"
        },
        {
            "external_reference_id": "REF-62"
        },
        {
            "external_reference_id": "REF-58"
        },
        {
            "external_reference_id": "REF-60"
        },
        {
            "external_reference_id": "REF-64"
        },
        {
            "external_reference_id": "REF-18"
        },
        {
            "external_reference_id": "REF-1337"
        },
        {
            "external_reference_id": "REF-1332"
        },
        {
            "external_reference_id": "REF-1333"
        },
        {
            "external_reference_id": "REF-1334"
        },
        {
            "external_reference_id": "REF-1335"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "788",
            "nature": "ChildOf"
        },
        {
            "cwe_id": "787",
            "nature": "ChildOf"
        }
    ]
}