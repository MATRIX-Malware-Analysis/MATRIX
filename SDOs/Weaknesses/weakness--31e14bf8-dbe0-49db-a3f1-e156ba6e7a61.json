{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--31e14bf8-dbe0-49db-a3f1-e156ba6e7a61",
    "created": "2024-08-13T14:46:48.999806Z",
    "modified": "2024-08-13T14:46:48.999806Z",
    "name": "Multiple Unlocks of a Critical Resource",
    "description": "The product unlocks a critical resource more times than intended, leading to an unexpected state in the system.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "765"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "DoS: Crash, Exit, or Restart",
            "scope": "Availability"
        },
        {
            "impact": "Modify Memory",
            "scope": "Availability"
        },
        {
            "impact": "Unexpected State",
            "scope": "Availability"
        },
        {
            "impact": "DoS: Crash, Exit, or Restart",
            "scope": "Integrity"
        },
        {
            "impact": "Modify Memory",
            "scope": "Integrity"
        },
        {
            "impact": "Unexpected State",
            "scope": "Integrity"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2009-03-03",
            "submission_name": "CWE Content Team",
            "submission_organization": "MITRE"
        }
    ],
    "x_mitre_likelihood_of_exploit": "Unknown",
    "x_mitre_observed_examples": [
        {
            "description": "Attacker provides invalid address to a memory-reading function, causing a mutex to be unlocked twice",
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0935",
            "reference": "CVE-2009-0935"
        }
    ],
    "x_mitre_potential_mitigations": [
        {
            "description": "When locking and unlocking a resource, try to be sure that all control paths through the code in which the resource is locked one or more times correspond to exactly as many unlocks. If the product acquires a lock and then determines it is not able to perform its intended behavior, be sure to release the lock(s) before waiting for conditions to improve. Reacquire the lock(s) before trying again.",
            "effectiveness": null,
            "phase": "Implementation"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "667",
            "nature": "ChildOf"
        },
        {
            "cwe_id": "675",
            "nature": "ChildOf"
        }
    ]
}