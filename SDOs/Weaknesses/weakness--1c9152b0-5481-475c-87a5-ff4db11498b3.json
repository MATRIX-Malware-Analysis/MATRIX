{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--1c9152b0-5481-475c-87a5-ff4db11498b3",
    "created": "2024-08-13T14:46:48.72662Z",
    "modified": "2024-08-13T14:46:48.72662Z",
    "name": "Sensitive Cookie Without 'HttpOnly' Flag",
    "description": "The product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "1004"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "Read Application Data",
            "scope": "Confidentiality"
        },
        {
            "impact": "Gain Privileges or Assume Identity",
            "scope": "Integrity"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2017-01-02",
            "submission_name": "CWE Content Team",
            "submission_organization": "MITRE"
        }
    ],
    "x_mitre_detection_methods": [
        {
            "description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
            "effectiveness": "High",
            "method": "Automated Static Analysis"
        }
    ],
    "x_mitre_likelihood_of_exploit": "Medium",
    "x_mitre_observed_examples": [
        {
            "description": "Web application for a room automation system has client-side Javascript that sets a sensitive cookie without the HTTPOnly security attribute, allowing the cookie to be accessed.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-24045",
            "reference": "CVE-2022-24045"
        },
        {
            "description": "CMS written in Python does not include the HTTPOnly flag in a Set-Cookie header, allowing remote attackers to obtain potentially sensitive information via script access to this cookie.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2014-3852",
            "reference": "CVE-2014-3852"
        },
        {
            "description": "Appliance for managing encrypted communications does not use HttpOnly flag.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2015-4138",
            "reference": "CVE-2015-4138"
        }
    ],
    "x_mitre_potential_mitigations": [
        {
            "description": "Leverage the HttpOnly flag when setting a sensitive cookie in a response.",
            "effectiveness": "High",
            "phase": "Implementation"
        }
    ],
    "x_mitre_references": [
        {
            "external_reference_id": "REF-2"
        },
        {
            "external_reference_id": "REF-3"
        },
        {
            "external_reference_id": "REF-4"
        },
        {
            "external_reference_id": "REF-5"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "732",
            "nature": "ChildOf"
        }
    ]
}