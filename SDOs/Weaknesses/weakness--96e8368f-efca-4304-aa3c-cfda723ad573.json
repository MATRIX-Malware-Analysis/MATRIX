{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--96e8368f-efca-4304-aa3c-cfda723ad573",
    "created": "2024-08-13T14:46:49.012583Z",
    "modified": "2024-08-13T14:46:49.012583Z",
    "name": "Improper Neutralization of Script in Attributes of IMG Tags in a Web Page",
    "description": "The web application does not neutralize or incorrectly neutralizes scripting elements within attributes of HTML IMG tags, such as the src attribute.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "82"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "Read Application Data",
            "scope": "Confidentiality"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Confidentiality"
        },
        {
            "impact": "Read Application Data",
            "scope": "Integrity"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Integrity"
        },
        {
            "impact": "Read Application Data",
            "scope": "Availability"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Availability"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2006-07-19",
            "submission_name": "PLOVER",
            "submission_organization": null
        }
    ],
    "x_mitre_likelihood_of_exploit": "Unknown",
    "x_mitre_observed_examples": [
        {
            "description": "Stored XSS in a guestbook application using a javascript: URI in a bbcode img tag.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-3211",
            "reference": "CVE-2006-3211"
        },
        {
            "description": "javascript URI scheme in IMG tag.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1649",
            "reference": "CVE-2002-1649"
        },
        {
            "description": "javascript URI scheme in IMG tag.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1803",
            "reference": "CVE-2002-1803"
        },
        {
            "description": "javascript URI scheme in IMG tag.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1804",
            "reference": "CVE-2002-1804"
        },
        {
            "description": "javascript URI scheme in IMG tag.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1805",
            "reference": "CVE-2002-1805"
        },
        {
            "description": "javascript URI scheme in IMG tag.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1806",
            "reference": "CVE-2002-1806"
        },
        {
            "description": "javascript URI scheme in IMG tag.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1807",
            "reference": "CVE-2002-1807"
        },
        {
            "description": "javascript URI scheme in IMG tag.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1808",
            "reference": "CVE-2002-1808"
        }
    ],
    "x_mitre_potential_mitigations": [
        {
            "description": "\n                  ",
            "effectiveness": null,
            "phase": "Implementation"
        },
        {
            "description": "To help mitigate XSS attacks against the user's session cookie, set the session cookie to be HttpOnly. In browsers that support the HttpOnly feature (such as more recent versions of Internet Explorer and Firefox), this attribute can prevent the user's session cookie from being accessible to malicious client-side scripts that use document.cookie. This is not a complete solution, since HttpOnly is not supported by all browsers. More importantly, XMLHTTPRequest and other powerful browser technologies provide read access to HTTP headers, including the Set-Cookie header in which the HttpOnly flag is set.",
            "effectiveness": "Defense in Depth",
            "phase": "Implementation"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "83",
            "nature": "ChildOf"
        }
    ]
}