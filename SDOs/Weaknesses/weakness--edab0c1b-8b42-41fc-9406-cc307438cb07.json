{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--edab0c1b-8b42-41fc-9406-cc307438cb07",
    "created": "2024-08-13T14:46:48.8009Z",
    "modified": "2024-08-13T14:46:48.8009Z",
    "name": "Improper Neutralization of Delimiters",
    "description": "The product does not neutralize or incorrectly neutralizes delimiters.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "140"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "Unexpected State",
            "scope": "Integrity"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2006-07-19",
            "submission_name": "PLOVER",
            "submission_organization": null
        }
    ],
    "x_mitre_likelihood_of_exploit": "Unknown",
    "x_mitre_observed_examples": [
        {
            "description": "Attacker inserts field separator into input to specify admin privileges.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-0307",
            "reference": "CVE-2003-0307"
        },
        {
            "description": "Multiple internal space, insufficient quoting - program does not use proper delimiter between values.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2000-0293",
            "reference": "CVE-2000-0293"
        },
        {
            "description": "Attacker inserts carriage returns and \"|\" field separator characters to add new user/privileges.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2001-0527",
            "reference": "CVE-2001-0527"
        },
        {
            "description": "Linebreak in field of PHP script allows admin privileges when written to data file.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-0267",
            "reference": "CVE-2002-0267"
        }
    ],
    "x_mitre_potential_mitigations": [
        {
            "description": "Developers should anticipate that delimiters will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate input is processed by the system.",
            "effectiveness": null,
            "phase": "Implementation"
        },
        {
            "description": "\n                  ",
            "effectiveness": null,
            "phase": "Implementation"
        },
        {
            "description": "While it is risky to use dynamically-generated query strings, code, or commands that mix control and data together, sometimes it may be unavoidable. Properly quote arguments and escape any special characters within those arguments. The most conservative approach is to escape or filter all characters that do not pass an extremely strict allowlist (such as everything that is not alphanumeric or white space). If some special characters are still needed, such as white space, wrap each argument in quotes after the escaping/filtering step. Be careful of argument injection (CWE-88).",
            "effectiveness": null,
            "phase": "Implementation"
        },
        {
            "description": "Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.",
            "effectiveness": null,
            "phase": "Implementation"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "138",
            "nature": "ChildOf"
        }
    ]
}