{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--9a331f7f-28f5-4d54-95a8-a1a5f140942c",
    "created": "2024-08-13T14:46:48.97558Z",
    "modified": "2024-08-13T14:46:48.97558Z",
    "name": "Unnecessary Complexity in Protection Mechanism (Not Using 'Economy of Mechanism')",
    "description": "The product uses a more complex mechanism than necessary, which could lead to resultant weaknesses when the mechanism is not correctly understood, modeled, configured, implemented, or used.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "637"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "Other",
            "scope": "Other"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2008-01-18",
            "submission_name": "Pascal Meunier",
            "submission_organization": "Purdue University"
        }
    ],
    "x_mitre_likelihood_of_exploit": "Unknown",
    "x_mitre_observed_examples": [
        {
            "description": "Support for complex regular expressions leads to a resultant algorithmic complexity weakness (CWE-407).",
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-6067",
            "reference": "CVE-2007-6067"
        },
        {
            "description": "Either a filename extension and a Content-Type header could be used to infer the file type, but the developer only checks the Content-Type, enabling unrestricted file upload (CWE-434).",
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-1552",
            "reference": "CVE-2007-1552"
        },
        {
            "description": "In Apache environments, a \"filename.php.gif\" can be redirected to the PHP interpreter instead of being sent as an image/gif directly to the user. Not knowing this, the developer only checks the last extension of a submitted filename, enabling arbitrary code execution.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-6479",
            "reference": "CVE-2007-6479"
        },
        {
            "description": "The developer cleanses the $_REQUEST superglobal array, but PHP also populates $_GET, allowing attackers to bypass the protection mechanism and conduct SQL injection attacks against code that uses $_GET.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-2148",
            "reference": "CVE-2005-2148"
        }
    ],
    "x_mitre_potential_mitigations": [
        {
            "description": "Avoid complex security mechanisms when simpler ones would meet requirements. Avoid complex data models, and unnecessarily complex operations. Adopt architectures that provide guarantees, simplify understanding through elegance and abstraction, and that can be implemented similarly. Modularize, isolate and do not trust complex code, and apply other secure programming principles on these modules (e.g., least privilege) to mitigate vulnerabilities.",
            "effectiveness": null,
            "phase": "Architecture and Design"
        }
    ],
    "x_mitre_references": [
        {
            "external_reference_id": "REF-196"
        },
        {
            "external_reference_id": "REF-524"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "657",
            "nature": "ChildOf"
        }
    ]
}