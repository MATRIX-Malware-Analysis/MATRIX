{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--c46e112e-b422-4006-9c44-9cb8d0b6c7d3",
    "created": "2024-08-13T14:46:48.988532Z",
    "modified": "2024-08-13T14:46:48.988532Z",
    "name": "Function Call With Incorrect Variable or Reference as Argument",
    "description": "The product calls a function, procedure, or routine, but the caller specifies the wrong variable or reference as one of the arguments, which may lead to undefined behavior and resultant weaknesses.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "688"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "Quality Degradation",
            "scope": "Other"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2008-04-11",
            "submission_name": "CWE Content Team",
            "submission_organization": "MITRE"
        }
    ],
    "x_mitre_detection_methods": [
        {
            "description": "While this weakness might be caught by the compiler in some languages, it can occur more frequently in cases in which the called function accepts variable numbers of arguments, such as format strings in C. It also can occur in loosely typed languages or environments. This might require an understanding of intended program behavior or design to determine whether the value is incorrect.",
            "effectiveness": null,
            "method": "Other"
        }
    ],
    "x_mitre_likelihood_of_exploit": "Unknown",
    "x_mitre_observed_examples": [
        {
            "description": "Kernel code specifies the wrong variable in first argument, leading to resultant NULL pointer dereference.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-2548",
            "reference": "CVE-2005-2548"
        }
    ],
    "x_mitre_potential_mitigations": [
        {
            "description": "Because this function call often produces incorrect behavior it will usually be detected during testing or normal operation of the product. During testing exercise all possible control paths will typically expose this weakness except in rare cases when the incorrect function call accidentally produces the correct results or if the provided argument type is very similar to the expected argument type.",
            "effectiveness": null,
            "phase": "Testing"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "628",
            "nature": "ChildOf"
        }
    ]
}