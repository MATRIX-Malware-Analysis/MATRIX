{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--44f204ce-6b8b-455c-8e96-2997dbe64744",
    "created": "2024-08-13T14:46:48.749068Z",
    "modified": "2024-08-13T14:46:48.749068Z",
    "name": "Direct Use of Unsafe JNI",
    "description": "When a Java application uses the Java Native Interface (JNI) to call code written in another programming language, it can expose the application to weaknesses in that code, even if those weaknesses cannot occur in Java.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "111"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Access Control"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2006-07-19",
            "submission_name": "7 Pernicious Kingdoms",
            "submission_organization": null
        }
    ],
    "x_mitre_detection_methods": [
        {
            "description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
            "effectiveness": "High",
            "method": "Automated Static Analysis"
        }
    ],
    "x_mitre_likelihood_of_exploit": "Unknown",
    "x_mitre_potential_mitigations": [
        {
            "description": "Implement error handling around the JNI call.",
            "effectiveness": null,
            "phase": "Implementation"
        },
        {
            "description": "Do not use JNI calls if you don't trust the native library.",
            "effectiveness": null,
            "phase": "Implementation"
        },
        {
            "description": "Be reluctant to use JNI calls. A Java API equivalent may exist.",
            "effectiveness": null,
            "phase": "Implementation"
        }
    ],
    "x_mitre_references": [
        {
            "external_reference_id": "REF-6"
        },
        {
            "external_reference_id": "REF-41"
        },
        {
            "external_reference_id": "REF-42"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "695",
            "nature": "ChildOf"
        },
        {
            "cwe_id": "20",
            "nature": "ChildOf"
        }
    ]
}