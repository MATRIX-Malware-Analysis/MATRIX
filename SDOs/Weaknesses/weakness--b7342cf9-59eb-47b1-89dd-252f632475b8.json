{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--b7342cf9-59eb-47b1-89dd-252f632475b8",
    "created": "2024-08-13T14:46:48.817921Z",
    "modified": "2024-08-13T14:46:48.817921Z",
    "name": "Unsigned to Signed Conversion Error",
    "description": "The product uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value if the value of the unsigned primitive can not be represented using a signed primitive.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "196"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "DoS: Crash, Exit, or Restart",
            "scope": "Availability"
        },
        {
            "impact": "Modify Memory",
            "scope": "Integrity"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Integrity"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Integrity"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Confidentiality"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Confidentiality"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Availability"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Availability"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Access Control"
        },
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Access Control"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2006-07-19",
            "submission_name": "CLASP",
            "submission_organization": null
        }
    ],
    "x_mitre_likelihood_of_exploit": "Medium",
    "x_mitre_potential_mitigations": [
        {
            "description": "Choose a language which is not subject to these casting flaws.",
            "effectiveness": null,
            "phase": "Requirements"
        },
        {
            "description": "Design object accessor functions to implicitly check values for valid sizes. Ensure that all functions which will be used as a size are checked previous to use as a size. If the language permits, throw exceptions rather than using in-band errors.",
            "effectiveness": null,
            "phase": "Architecture and Design"
        },
        {
            "description": "Error check the return values of all functions. Be aware of implicit casts made, and use unsigned variables for sizes if at all possible.",
            "effectiveness": null,
            "phase": "Implementation"
        }
    ],
    "x_mitre_references": [
        {
            "external_reference_id": "REF-62"
        },
        {
            "external_reference_id": "REF-18"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "681",
            "nature": "ChildOf"
        },
        {
            "cwe_id": "681",
            "nature": "ChildOf"
        },
        {
            "cwe_id": "681",
            "nature": "ChildOf"
        },
        {
            "cwe_id": "124",
            "nature": "CanAlsoBe"
        },
        {
            "cwe_id": "120",
            "nature": "CanAlsoBe"
        }
    ]
}