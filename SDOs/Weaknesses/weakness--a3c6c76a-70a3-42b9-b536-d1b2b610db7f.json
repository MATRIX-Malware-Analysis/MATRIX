{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--a3c6c76a-70a3-42b9-b536-d1b2b610db7f",
    "created": "2024-08-13T14:46:48.998489Z",
    "modified": "2024-08-13T14:46:48.998489Z",
    "name": "Mismatched Memory Management Routines",
    "description": "The product attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "762"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "Modify Memory",
            "scope": "Integrity"
        },
        {
            "impact": "DoS: Crash, Exit, or Restart",
            "scope": "Integrity"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Integrity"
        },
        {
            "impact": "Modify Memory",
            "scope": "Availability"
        },
        {
            "impact": "DoS: Crash, Exit, or Restart",
            "scope": "Availability"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Availability"
        },
        {
            "impact": "Modify Memory",
            "scope": "Confidentiality"
        },
        {
            "impact": "DoS: Crash, Exit, or Restart",
            "scope": "Confidentiality"
        },
        {
            "impact": "Execute Unauthorized Code or Commands",
            "scope": "Confidentiality"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2009-05-08",
            "submission_name": "CWE Content Team",
            "submission_organization": "MITRE"
        }
    ],
    "x_mitre_likelihood_of_exploit": "Low",
    "x_mitre_potential_mitigations": [
        {
            "description": "Only call matching memory management functions. Do not mix and match routines. For example, when you allocate a buffer with malloc(), dispose of the original pointer with free().",
            "effectiveness": null,
            "phase": "Implementation"
        },
        {
            "description": "\n                  ",
            "effectiveness": null,
            "phase": "Implementation"
        },
        {
            "description": "\n                  ",
            "effectiveness": null,
            "phase": "Architecture and Design"
        },
        {
            "description": "Use a language that provides abstractions for memory allocation and deallocation.",
            "effectiveness": null,
            "phase": "Architecture and Design"
        },
        {
            "description": "Use a tool that dynamically detects memory management problems, such as valgrind.",
            "effectiveness": null,
            "phase": "Testing"
        }
    ],
    "x_mitre_references": [
        {
            "external_reference_id": "REF-657"
        },
        {
            "external_reference_id": "REF-480"
        },
        {
            "external_reference_id": "REF-391"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "763",
            "nature": "ChildOf"
        },
        {
            "cwe_id": "404",
            "nature": "ChildOf"
        }
    ]
}