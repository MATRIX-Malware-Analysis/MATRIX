{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--15a1e819-247c-4366-afb7-f13bd06c63b2",
    "created": "2024-08-13T14:46:48.977543Z",
    "modified": "2024-08-13T14:46:48.977543Z",
    "name": "Improper Neutralization of Data within XPath Expressions ('XPath Injection')",
    "description": "The product uses external input to dynamically construct an XPath expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "643"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "Bypass Protection Mechanism",
            "scope": "Access Control"
        },
        {
            "impact": "Read Application Data",
            "scope": "Confidentiality"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2008-01-30",
            "submission_name": "Evgeny Lebanidze",
            "submission_organization": "Cigital"
        }
    ],
    "x_mitre_detection_methods": [
        {
            "description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
            "effectiveness": "High",
            "method": "Automated Static Analysis"
        }
    ],
    "x_mitre_likelihood_of_exploit": "High",
    "x_mitre_potential_mitigations": [
        {
            "description": "Use parameterized XPath queries (e.g. using XQuery). This will help ensure separation between data plane and control plane.",
            "effectiveness": null,
            "phase": "Implementation"
        },
        {
            "description": "Properly validate user input. Reject data where appropriate, filter where appropriate and escape where appropriate. Make sure input that will be used in XPath queries is safe in that context.",
            "effectiveness": null,
            "phase": "Implementation"
        }
    ],
    "x_mitre_references": [
        {
            "external_reference_id": "REF-531"
        },
        {
            "external_reference_id": "REF-62"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "943",
            "nature": "ChildOf"
        },
        {
            "cwe_id": "91",
            "nature": "ChildOf"
        }
    ]
}