{
    "type": "weakness",
    "spec_version": "2.1",
    "id": "weakness--b2e9ff60-3975-429c-b109-64f921f3b89b",
    "created": "2024-08-13T14:46:48.835003Z",
    "modified": "2024-08-13T14:46:48.835003Z",
    "name": "Plaintext Storage of a Password",
    "description": "Storing a password in plaintext may result in a system compromise.",
    "object_marking_refs": [
        "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"
    ],
    "external_references": [
        {
            "source_name": "CWE",
            "external_id": "256"
        }
    ],
    "x_mitre_common_consequences": [
        {
            "impact": "Gain Privileges or Assume Identity",
            "scope": "Access Control"
        }
    ],
    "x_mitre_content_history": [
        {
            "submission_date": "2006-07-19",
            "submission_name": "7 Pernicious Kingdoms",
            "submission_organization": null
        }
    ],
    "x_mitre_detection_methods": [
        {
            "description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
            "effectiveness": "High",
            "method": "Automated Static Analysis"
        }
    ],
    "x_mitre_likelihood_of_exploit": "High",
    "x_mitre_observed_examples": [
        {
            "description": "Remote Terminal Unit (RTU) uses a driver that relies on a password stored in plaintext.",
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30275",
            "reference": "CVE-2022-30275"
        }
    ],
    "x_mitre_potential_mitigations": [
        {
            "description": "Avoid storing passwords in easily accessible locations.",
            "effectiveness": null,
            "phase": "Architecture and Design"
        },
        {
            "description": "Consider storing cryptographic hashes of passwords as an alternative to storing in plaintext.",
            "effectiveness": null,
            "phase": "Architecture and Design"
        },
        {
            "description": "A programmer might attempt to remedy the password management problem by obscuring the password with an encoding function, such as base 64 encoding, but this effort does not adequately protect the password because the encoding can be detected and decoded easily.",
            "effectiveness": "None",
            "phase": null
        }
    ],
    "x_mitre_references": [
        {
            "external_reference_id": "REF-6"
        },
        {
            "external_reference_id": "REF-207"
        },
        {
            "external_reference_id": "REF-1283"
        }
    ],
    "x_mitre_related_weaknesses": [
        {
            "cwe_id": "522",
            "nature": "ChildOf"
        }
    ]
}