{
    "type": "course-of-action",
    "spec_version": "2.1",
    "id": "course-of-action--1ac94b18-969f-4c3a-8477-589b2c0f7677",
    "created": "2024-08-14T07:36:40.914951Z",
    "modified": "2024-08-14T07:36:40.914951Z",
    "name": "Executable Denylisting",
    "description": "Blocking the execution of files on a host in accordance with defined application policy rules.",
    "x_d3fend_id": "D3-EDL",
    "x_kb_article": "## How it works\n\n#### Criteria\n\nA policy-enforcing application can register an application for denylisting based on conditions including the following:\n\n* File attributes\n    * file name\n    * file path\n    * file hash\n    * file publisher, as obtained from the digital signature\n    * permissions of the file\n* File malware scan (eg. Windows SmartScreen)\n* User-File combination\n\nThis may be done to prevent execution of applications which are:\n\n* an old version with known vulnerabilities\n* without a valid license, which could cause legal issues\n* in a directory that is accessible to low-privileged users, that could be accessed by a malware dropper\n* known trojan horse programs\n* too open in their permissions, possibly set to run as a user other than the originator or allowing execution when they should not be\n* a match to the hash of other known malware\n* are detected as undesirable based on a file scan runtime behavior\n\nSystem administrators will customize the rules for the given environment.\n\n#### Backend\n\nThe policy-enforcing program may work by running in kernel mode, and [intercepting] [system calls which execute a process].\n\n## Considerations\n\n* If denylisting is done by filename, filepath, or hash, these mechanisms may be a worthy first line of defense and detection, but could still be evaded by an attacker.\n* Continuous management is needed to keep the denylist up to date, whether it is based on hash, publisher, behavior, or any other digital artifact.\n* Although denylists based on attributes such as file path and virus scan could defend against some threats which they have not been explicitly coded to block, denylists may not provide protection from new, unknown, or zero day attacks.\n\n\n## Examples\nOn a Windows machine the Windows Defender Application Control (WDAC) policy enforcement is run in the kernel and allows for restricting applications.",
    "x_synonym": "Executable Blacklisting"
}