{
    "type": "course-of-action",
    "spec_version": "2.1",
    "id": "course-of-action--e879d119-cb9a-4998-8bf1-d73773176c57",
    "created": "2024-08-14T07:36:37.003738Z",
    "modified": "2024-08-14T07:36:37.003738Z",
    "name": "Reference - Pointer Authentication Project Zero",
    "description": "No description available",
    "x_kb_abstract": "In this post I examine Apple's implementation of Pointer Authentication on the A12 SoC used in the iPhone XS, with a focus on how Apple has improved over the ARM standard. I then demonstrate a way to use an arbitrary kernel read/write primitive to forge kernel PAC signatures for the A keys, which is sufficient to execute arbitrary code in the kernel using JOP. The technique I discovered was (mostly) fixed in iOS 12.1.3. In fact, this fix first appeared in the 16D5032a beta while my research was still ongoing.",
    "x_kb_author": "Brandon Azad",
    "x_kb_organization": "Project Zero, Google, Inc",
    "x_kb_reference_of": "http://d3fend.mitre.org/ontologies/d3fend.owl#PointerAuthentication",
    "x_kb_reference_title": "Examining Pointer Authentication on the iPhone XS"
}