{
    "type": "course-of-action",
    "spec_version": "2.1",
    "id": "course-of-action--36ac6548-29ff-4351-a4df-0e025a1cfea4",
    "created": "2024-08-14T07:36:41.353341Z",
    "modified": "2024-08-14T07:36:41.353341Z",
    "name": "Reverse Resolution IP Denylisting",
    "description": "Blocking a reverse lookup based on the query's IP address value.",
    "x_d3fend_id": "D3-RRID",
    "x_kb_article": "## How it works\nThis technique prevents a client from learning domains deemed to be potentially malicious, which would have been delivered via reverse resolution responses over the DNS protocol.\n\nQueries for reverse resolution requests (that is, requests where IP(s) are sent and a domain is returned) are collected, and the IP address(es) included in the query are examined. If the IP address(es) are in a range included in the blacklist, then the query is dropped.\n\n## Considerations\n- The blacklist will have to be maintained and will need to be kept up to date with identified maintenance cycles to ensure lists are not stale.\n- DNS query traffic can be transmitted over many different protocols, which presents a challenge to implementing methods to extract all DNS query IP address value(s).\n  - DNS has historically used UDP port 53, with TCP port 53 instead used for responses over 512 bytes or after a lack of response over UDP.\n  - Usage of new protocols to provide confidentiality for DNS traffic, such as DoH (DNS over HTTPS) and DoT (DNS over TLS), complicates collection of the IP address(es) in DNS queries. These protocols have often been enabled in browser settings transparently after a browser update, with DNS queries proxied over one of these cryptographic protocols through a specified host.",
    "x_synonym": "Reverse Resolution IP Blacklisting"
}