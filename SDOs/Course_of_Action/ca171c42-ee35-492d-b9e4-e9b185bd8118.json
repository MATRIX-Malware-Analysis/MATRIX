{
    "type": "course-of-action",
    "spec_version": "2.1",
    "id": "course-of-action--ca171c42-ee35-492d-b9e4-e9b185bd8118",
    "created": "2024-08-14T07:36:37.80813Z",
    "modified": "2024-08-14T07:36:37.80813Z",
    "name": "Reference - CAR-2015-04-002: Remotely Scheduled Tasks via Schtasks - MITRE",
    "description": "No description available",
    "x_kb_abstract": "An adversary can move laterally using the schtasks command to remotely schedule tasks. Although these events can be detected with command line analytics CAR-2013-08-001, it is possible for an adversary to use the API directly, via the Task Scheduler GUI or with a scripting language such as PowerShell. In this cases, an additional source of data becomes necessary to detect adversarial behavior. When scheduled tasks are created remotely, Windows uses RPC (135/tcp) to communicate with the Task Scheduler on the remote machine. Once an RPC connection is established (CAR-2014-05-001), the client communicates with the Scheduled Tasks endpoint, which runs within the service group netsvcs. With packet capture and the right packet decoders or byte-stream based signatures, remote invocations of these functions can be identified.\n\nCertain strings can be identifiers of the schtasks, by looking up the interface UUID of ITaskSchedulerService in different formats\n\n* UUID 86d35949-83c9-4044-b424-db363231fd0c (decoded)\n* Hex 49 59 d3 86 c9 83 44 40 b4 24 db 36 32 31 fd 0c (raw)\n* ASCII IYD@$621 (printable bytes only)\n\nThis identifier is present three times during the RPC request phase. Any sensor that has access to the byte code as raw, decoded, or ASCII could implement this analytic.",
    "x_kb_author": "MITRE",
    "x_kb_organization": "MITRE",
    "x_kb_reference_of": "http://d3fend.mitre.org/ontologies/d3fend.owl#RPCTrafficAnalysis",
    "x_kb_reference_title": "CAR-2015-04-002: Remotely Scheduled Tasks via Schtasks"
}