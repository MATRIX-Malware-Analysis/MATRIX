{
    "type": "course-of-action",
    "spec_version": "2.1",
    "id": "course-of-action--8175bd1e-5f0e-479d-8128-b95a163633d4",
    "created": "2024-08-14T07:36:41.163944Z",
    "modified": "2024-08-14T07:36:41.163944Z",
    "name": "Reference - Security Technologies: Stack Smashing Protection (StackGuard) - Red Hat",
    "description": "No description available",
    "x_kb_abstract": "In our previous blog, we saw how arbitrary code execution resulting from stack-buffer overflows can be partly mitigated by marking segments of memory as non-executable, a technology known as Execshield. However stack-buffer overflow exploits can still effectively overwrite the function return address, which leads to several interesting exploitation techniques like ret2libc, ret2gets, and ret2plt. With all of these methods, the function return address is overwritten and attacker controlled code is executed when the program control transfers to overwritten address on the stack.",
    "x_kb_author": "Huzaifa Sidhpurwala",
    "x_kb_organization": "Red Hat",
    "x_kb_reference_of": "http://d3fend.mitre.org/ontologies/d3fend.owl#StackFrameCanaryValidation",
    "x_kb_reference_title": "Security Technologies: Stack Smashing Protection (StackGuard)"
}