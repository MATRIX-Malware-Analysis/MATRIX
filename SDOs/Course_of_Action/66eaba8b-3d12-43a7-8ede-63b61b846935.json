{
    "type": "course-of-action",
    "spec_version": "2.1",
    "id": "course-of-action--66eaba8b-3d12-43a7-8ede-63b61b846935",
    "created": "2024-08-14T07:36:37.954978Z",
    "modified": "2024-08-14T07:36:37.954978Z",
    "name": "Reference - CAR-2014-03-006: RunDLL32.exe monitoring - MITRE",
    "description": "No description available",
    "x_kb_abstract": "Adversaries may find it necessary to use Dyanamic-link Libraries (DLLs) to evade defenses. One way these DLLs can be \"executed\" is through the use of the built-in Windows utility RunDLL32, which allows a user to execute code in a DLL, providing the name and optional arguments to an exported entry point. Windows uses RunDll32 legitimately in its normal operation, but with a proper baseline and understanding of the environment, monitoring its usage could be fruitful.",
    "x_kb_author": "MITRE",
    "x_kb_organization": "MITRE",
    "x_kb_reference_of": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessSpawnAnalysis",
    "x_kb_reference_title": "CAR-2014-03-006: RunDLL32.exe monitoring"
}