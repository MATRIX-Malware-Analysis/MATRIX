{
    "type": "course-of-action",
    "spec_version": "2.1",
    "id": "course-of-action--a0d9ea0b-a26d-46c2-9279-003f780827e2",
    "created": "2024-08-14T07:36:37.221334Z",
    "modified": "2024-08-14T07:36:37.221334Z",
    "name": "Reference - Software vulnerability graph database",
    "description": "No description available",
    "x_kb_abstract": "To analyze open-source code at a large scale, a security domain graph language (\"GL\") has been created that functions as a vulnerability description language and facilitates program analysis queries. The SGL facilitates building and maintaining a graph database to catalogue vulnerabilities found in open-source components. This graphical database can be accessed via a database interface directly or accessed by an agent that interacts with the database interface. To build the graph database, a database interface processes an open-source component and creates graph structures which represent relationships present in the open-source component. The database interface transforms a vulnerability description into a canonical form based on a schema for the graph database and updates the database based on a determination of whether the vulnerability is a duplicate. This ensures quality and consistency of the vulnerability dataset maintained in the graph database.",
    "x_kb_author": "Darius Tsien Wei FOO, Ming Yi ANG, Asankhaya Sharma, Jie Shun YEO",
    "x_kb_organization": "Veracode, Inc.",
    "x_kb_reference_of": "http://d3fend.mitre.org/ontologies/d3fend.owl#AssetVulnerabilityEnumeration",
    "x_kb_reference_title": "Software vulnerability graph database"
}