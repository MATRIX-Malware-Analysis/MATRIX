{
    "type": "course-of-action",
    "spec_version": "2.1",
    "id": "course-of-action--29ea2a32-717a-46ba-83b3-91b2b1985889",
    "created": "2024-08-14T07:36:40.525859Z",
    "modified": "2024-08-14T07:36:40.525859Z",
    "name": "Reference - System and method for detecting malware injected into memory of a computing device - Endgame Inc",
    "description": "No description available",
    "x_kb_abstract": "In the embodiments described herein, a malicious code detection module identifies potentially malicious instructions in memory of a computing device. The malicious code detection module examines the call stack for each thread running within the operating system of the computing device. Within each call stack, the malicious code detection module identifies the originating module for each stack frame and determines whether the originating module is backed by an image on disk. If an originating module is not backed by an image on disk, the thread containing that originating module is flagged as potentially malicious, execution of the thread optionally is suspended, and an alert is generated for the user or administrator.",
    "x_kb_author": "Joseph W. Desimone",
    "x_kb_organization": "Endgame Inc",
    "x_kb_reference_of": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegmentVerification",
    "x_kb_reference_title": "System and method for detecting malware injected into memory of a computing device"
}