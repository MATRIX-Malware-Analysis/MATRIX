{
    "type": "course-of-action",
    "spec_version": "2.1",
    "id": "course-of-action--8ffb5ae2-d78a-4460-95f5-26e9b2fc3154",
    "created": "2024-08-14T07:36:36.842028Z",
    "modified": "2024-08-14T07:36:36.842028Z",
    "name": "File Carving",
    "description": "Identifying and extracting files from network application protocols through the use of network stream reassembly software.",
    "x_d3fend_id": "D3-FC",
    "x_kb_article": "## How it works\nProtocol stream reassembly software recreates a directional byte stream by analyzing captured network packets. Once the stream is reassembled pattern matching is applied to determine if it contains a file of interest. Files of interest range from executable, archive, or document file formats. Once the file is captured, it is then processed with standard File Analysis Techniques. Example network protocols include HTTP, SMTP, FTP, HTTP/2, and TLS/HTTP/Dropbox.\n\n## Considerations\n- This is an error prone process due to the intricacies of network protocols and network packet capture.  For example reassembly may be done in real-time or streaming fashion, or packets may be written to disk, then bulk processed.  The packets may arrive out of order, with fragmentation, duplicates, or re-transmissions.  The reassembly software must compensate for the imperfect packet stream in order to recreate the well formed file which was transmitted.\n- File type identification can be a difficult process which can be exploited by adversaries."
}