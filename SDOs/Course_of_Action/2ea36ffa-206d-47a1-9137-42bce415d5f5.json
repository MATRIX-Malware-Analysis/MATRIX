{
    "type": "course-of-action",
    "spec_version": "2.1",
    "id": "course-of-action--2ea36ffa-206d-47a1-9137-42bce415d5f5",
    "created": "2024-08-14T07:36:38.681577Z",
    "modified": "2024-08-14T07:36:38.681577Z",
    "name": "System Dependency Mapping",
    "description": "System dependency mapping identifies and models the dependencies of system components on each other to carry out their function.",
    "x_d3fend_id": "D3-SYSDM",
    "x_kb_article": "## How it works\nThe organization collects and models architectural information about the software, hardware, and products and maps the dependencies between systems, including each system's internal components and dependencies.\n\n## Considerations\n* Data exchanges identified in the network mapping efforts usually indicate such dependencies, but may not be part of the intended design.\n* Architectural design artifacts and SMEs may need to be consulted to determine if dependencies are intended or otherwise essential.\n* System depedency mapping can identify internal dependencies of standard and pre-built systems that should be incorporated into a complete system dependency model.\n* System dependencies for critical systems--those supporting critical organizational activities--should be prioritized for supply chain risk analysis.\n* System dependencies should identify the integral components of a given named system and their structure to form a system.\n* System dependencies with a given system may be fixed by a particular product's configuration, and leveraging external knowledge bases about dependencies available (e.g., from package managers) is essential."
}