{
    "type": "course-of-action",
    "spec_version": "2.1",
    "id": "course-of-action--e177ed27-5cbc-44bd-9293-08180d740455",
    "created": "2024-08-14T07:36:40.587564Z",
    "modified": "2024-08-14T07:36:40.587564Z",
    "name": "Reference - Malware detection using local computational models - Crowdstrike Inc",
    "description": "No description available",
    "x_kb_abstract": "Example techniques herein determine that a trial data stream is associated with malware (\"dirty\") using a local computational model (CM). The data stream can be represented by a feature vector. A control unit can receive a first, dirty feature vector (e.g., a false miss) and determine the local CM based on the first feature vector. The control unit can receive a trial feature vector representing the trial data stream. The control unit can determine that the trial data stream is dirty if a broad CM or the local CM determines that the trial feature vector is dirty. In some examples, the local CM can define a dirty region in a feature space. The control unit can determine the local CM based on the first feature vector and other clean or dirty feature vectors, e.g., a clean feature vector nearest to the first feature vector.",
    "x_kb_author": "Sven Krasser,David Elkind, Patrick Crenshaw, Kirby James Koster",
    "x_kb_organization": "Crowdstrike Inc",
    "x_kb_reference_of": "http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessTermination",
    "x_kb_reference_title": "Malware detection using local computational models"
}