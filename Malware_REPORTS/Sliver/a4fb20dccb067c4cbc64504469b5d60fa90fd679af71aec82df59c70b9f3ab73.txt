{
    "data": [
        {
            "id": "a4fb20dccb067c4cbc64504469b5d60fa90fd679af71aec82df59c70b9f3ab73_C2AE",
            "type": "file_behaviour",
            "links": {
                "self": "https://www.virustotal.com/api/v3/file_behaviours/a4fb20dccb067c4cbc64504469b5d60fa90fd679af71aec82df59c70b9f3ab73_C2AE"
            },
            "attributes": {
                "has_evtx": false,
                "has_html_report": false,
                "command_executions": [
                    "%SAMPLEPATH%"
                ],
                "processes_tree": [
                    {
                        "process_id": "2624",
                        "name": "%SAMPLEPATH%",
                        "time_offset": 1
                    },
                    {
                        "process_id": "2692",
                        "name": "%CONHOST% \"152523308-18745030721711626387-924702419-460843614822329452-970281088-539079241"
                    },
                    {
                        "process_id": "2252",
                        "name": "%windir%\\System32\\svchost.exe -k WerSvcGroup",
                        "children": [
                            {
                                "process_id": "2708",
                                "name": "%windir%\\system32\\WerFault.exe -u -p 2624 -s 28"
                            }
                        ]
                    },
                    {
                        "process_id": "2908",
                        "name": "wmiadap.exe /F /T /R"
                    },
                    {
                        "process_id": "2944",
                        "name": "%windir%\\system32\\wbem\\wmiprvse.exe"
                    }
                ],
                "behash": "f2a96f92c36218030b7cf2462e1a62dd",
                "has_pcap": false,
                "registry_keys_set": [
                    {
                        "key": "HKEY_USERS\\S-1-5-21-575823232-3065301323-1442773979-1000\\Software\\Microsoft\\SystemCertificates\\Root\\Certificates\\0174E68C97DDF1E0EEEA415EA336A163D2B61AFD\\Blob",
                        "value": "5C 00 00 00 01 00 00 00 04 00 00 00 00 10 00 00 04 00 00 00 01 00 00 00 10 00 00 00 0D BE 92 DE FF 7D 36 BB 48 C4 A6 B1 15 24 95 38 0F 00 00 00 01 00 00 00 20 00 00 00 53 FE B9 19 2E D4 80 F2 09 12 4A 2C 57 D7 E8 97 7A 2E 9F 39 46 1D BF 21 4D F1 12 CB 16 02 4F A2 14 00 00 00 01 00 00 00 14 00 00 00 78 B8 30 FD 63 AC 7B 89 4A 07 3B ED F6 8A 83 9C C3 52 02 65 19 00 00 00 01 00 00 00 10 00 00 00 B5 74 AF 30 C5 C1 BA 3A 69 A7 10 02 00 82 4D D0 03 00 00 00 01 00 00 00 14 00 00 00 01 74 E6 8C 97 DD F1 E0 EE EA 41 5E A3 36 A1 63 D2 B6 1A FD 20 00 00 00 01 00 00 00 F8 05 00 00 30 82 05 F4 30 82 03 DC A0 03 02 01 02 02 09 00 E0 EA 61 4C 28 56 32 64 30 0D 06 09 2A 86 48 86 F7 0D 01 01 0B 05 00 30 81 8E 31 0B 30 09 06 03 55 04 06 13 02 49 4C 31 0F 30 0D 06 03 55 04 08 0C 06 43 65 6E 74 65 72 31 0C 30 0A 06 03 55 04 07 0C 03 4C 6F 64 31 10 30 0E 06 03 55 04 0A 0C 07 47 6F 50 72 6F 78 79 31 10 30 0E 06 03 55 04 0B 0C 07 47 6F 50 72 6F 78 79 31 1A 30 18 06 03 55 04 03 0C 11 67 6F 70 72 6F 78 79 2E 67 69 74 68 75 62 2E 69 6"
                    },
                    {
                        "key": "HKEY_USERS\\S-1-5-21-575823232-3065301323-1442773979-1000\\Software\\Microsoft\\Windows\\Windows Error Reporting\\Debug\\StoreLocation",
                        "value": "%LOCALAPPDATA%\\Microsoft\\Windows\\WER\\ReportArchive\\AppCrash_M2XYYLJ12F3P0NYS_e4f4e8757c8cb43299e27125f4549a1471f733_0a9537c2"
                    }
                ],
                "processes_terminated": [
                    "%SAMPLEPATH%",
                    "%CONHOST% \"152523308-18745030721711626387-924702419-460843614822329452-970281088-539079241",
                    "%windir%\\System32\\svchost.exe -k WerSvcGroup",
                    "%windir%\\system32\\WerFault.exe -u -p 2624 -s 28",
                    "wmiadap.exe /F /T /R"
                ],
                "analysis_date": 1718711247,
                "has_memdump": false,
                "sandbox_name": "C2AE",
                "last_modification_date": 1718830085,
                "verdicts": [
                    "UNKNOWN_VERDICT"
                ]
            }
        },
        {
            "id": "a4fb20dccb067c4cbc64504469b5d60fa90fd679af71aec82df59c70b9f3ab73_CAPA",
            "type": "file_behaviour",
            "links": {
                "self": "https://www.virustotal.com/api/v3/file_behaviours/a4fb20dccb067c4cbc64504469b5d60fa90fd679af71aec82df59c70b9f3ab73_CAPA"
            },
            "attributes": {
                "has_evtx": false,
                "has_html_report": false,
                "behash": "597072cf025516a143a39b2a33ec90cf",
                "has_pcap": false,
                "analysis_date": 1718771590,
                "mitre_attack_techniques": [
                    {
                        "id": "T1129",
                        "severity": "IMPACT_SEVERITY_INFO",
                        "signature_description": "access PEB ldr_data",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "access PEB ldr_data"
                            }
                        ]
                    },
                    {
                        "id": "T1129",
                        "severity": "IMPACT_SEVERITY_INFO",
                        "signature_description": "get kernel32 base address",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "get kernel32 base address"
                            }
                        ]
                    },
                    {
                        "id": "T1027",
                        "severity": "IMPACT_SEVERITY_INFO",
                        "signature_description": "encode data using XOR",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encode data using XOR"
                            }
                        ]
                    },
                    {
                        "id": "T1027",
                        "severity": "IMPACT_SEVERITY_INFO",
                        "signature_description": "encode data using Base64",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encode data using Base64"
                            }
                        ]
                    },
                    {
                        "id": "T1027",
                        "severity": "IMPACT_SEVERITY_INFO",
                        "signature_description": "encrypt data using RC4 PRGA",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encrypt data using RC4 PRGA"
                            }
                        ]
                    },
                    {
                        "id": "T1027",
                        "severity": "IMPACT_SEVERITY_INFO",
                        "signature_description": "encrypt data using AES via x86 extensions",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encrypt data using AES via x86 extensions"
                            }
                        ]
                    },
                    {
                        "id": "T1027",
                        "severity": "IMPACT_SEVERITY_INFO",
                        "signature_description": "encrypt data using Salsa20 or ChaCha",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encrypt data using Salsa20 or ChaCha"
                            }
                        ]
                    }
                ],
                "has_memdump": false,
                "signature_matches": [
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "name": "PEB access",
                        "authors": [
                            "michael.hunhoff@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: PEB access\n    authors:\n      - michael.hunhoff@mandiant.com\n    lib: true\n    scopes:\n      static: basic block\n      dynamic: unsupported  # requires characteristic, offset, mnemonic features\n    mbc:\n      - Anti-Behavioral Analysis::Debugger Detection::Process Environment Block [B0001.019]\n    references:\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/NtGlobalFlag.cpp\n    examples:\n      - al-khaser_x86.exe_:0x420D20\n  features:\n    - or:\n      - characteristic: peb access\n      - and:\n        # https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/NtGlobalFlag.cpp#L41\n        - arch: i386\n        - characteristic: fs access\n        - or:\n          # in 0f5d5d07c6533bc6d991836ce79daaa1\n          # then we have:\n          #\n          #     xor edx, edx\n          #     mov edx, fs:[edx+30h]\n          - offset: 0x30\n          - instruction:\n            # in the case of CallObfuscator, gs:[rax]\n            - mnemonic: add\n            - number: 0x30\n      - and:\n        - arch: amd64\n        - characteristic: gs access\n        - or:\n          - offset: 0x60\n          - instruction:\n            - mnemonic: add\n            - number: 0x60\n      - and:\n        # WoW64 PEB address is fetched via the WoW64 Thread Environment Block (TEB) at FS:[0x18]-0x2000\n        # https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/NtGlobalFlag.cpp#L45\n        - characteristic: fs access\n        - instruction:\n          - mnemonic: sub\n          - number: 0x2000\n",
                        "refs": [
                            {
                                "ref": "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/NtGlobalFlag.cpp"
                            }
                        ]
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "name": "access PEB ldr_data",
                        "description": "linking/runtime-linking",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: access PEB ldr_data\n    namespace: linking/runtime-linking\n    authors:\n      - moritz.raabe@mandiant.com\n    scopes:\n      static: basic block\n      dynamic: unsupported  # requires offset features\n    att&ck:\n      - Execution::Shared Modules [T1129]\n    references:\n      - https://www.geoffchappell.com/studies/windows/win32/ntdll/structs/peb_ldr_data.htm\n      - https://github.com/d35ha/CallObfuscator/blob/5834aff9ff4511f1408ae4ce80b79737af4ae77b/ShellCode/shell_x64.asm#L8\n    examples:\n      - 3FDFB2D522E7DEECAAAF2F87420F7E75:0x4117B7\n  features:\n    - or:\n      - and:\n        - arch: i386\n        - description: x32\n\n        - match: PEB access\n\n        # x86 Windows uses fs:0 to access the TIB which contains SEH information at offset 0\n        # checking for fs:0 and a (possibly unrelated) number or offset often results in false positives\n\n        - offset: 0x0C = PEB.LDR_DATA\n\n        - or:\n          - description: resolve a module list\n          - offset: 0x0C = PEB.LDR_DATA.InLoadOrderModuleList\n          - offset: 0x14 = PEB.LDR_DATA.InMemoryOrderModuleList\n          - offset: 0x1C = PEB.LDR_DATA.InInitializationOrderModuleList\n\n      - and:\n        - arch: amd64\n        - description: x64\n\n        - match: PEB access\n\n        - offset: 0x18 = PEB.LDR_DATA\n\n        - or:\n          - description: resolve a module list\n          - offset: 0x10 = PEB.LDR_DATA.InLoadOrderModuleList\n          - offset: 0x20 = PEB.LDR_DATA.InMemoryOrderModuleList\n          - offset: 0x30 = PEB.LDR_DATA.InInitializationOrderModuleList\n",
                        "refs": [
                            {
                                "ref": "https://www.geoffchappell.com/studies/windows/win32/ntdll/structs/peb_ldr_data.htm"
                            },
                            {
                                "ref": "https://github.com/d35ha/CallObfuscator/blob/5834aff9ff4511f1408ae4ce80b79737af4ae77b/ShellCode/shell_x64.asm#L8"
                            }
                        ]
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "name": "get kernel32 base address",
                        "description": "linking/runtime-linking",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: get kernel32 base address\n    namespace: linking/runtime-linking\n    authors:\n      - moritz.raabe@mandiant.com\n    scopes:\n      static: basic block\n      dynamic: unsupported  # requires offset features\n    att&ck:\n      - Execution::Shared Modules [T1129]\n    references:\n      - https://idafchev.github.io/exploit/2017/09/26/writing_windows_shellcode.html\n      - https://www.geoffchappell.com/studies/windows/win32/ntdll/structs/ldr_data_table_entry.htm\n    examples:\n      - 67f8302a2fd28d15f62d6d20d748bfe350334e5353cbdef112bd1f8231b5599d:0x406936\n  features:\n    - and:\n      # PEB -> PEB.Ldr -> PEB_LDR_DATA.InLoadOrderModuleList.Flink\n      - match: access PEB ldr_data\n      # -> current module -> ntdll\n      - count(offset(0)): 2\n      # -> kernel32 -> LDR_DATA_TABLE_ENTRY.DllBase\n      - or:\n        - and:\n          - arch: i386\n          - offset: 0x18 = LDR_DATA_TABLE_ENTRY.DllBase\n        - and:\n          - arch: amd64\n          - offset: 0x30 = LDR_DATA_TABLE_ENTRY.DllBase\n",
                        "refs": [
                            {
                                "ref": "https://idafchev.github.io/exploit/2017/09/26/writing_windows_shellcode.html"
                            },
                            {
                                "ref": "https://www.geoffchappell.com/studies/windows/win32/ntdll/structs/ldr_data_table_entry.htm"
                            }
                        ]
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "name": "encode data using XOR",
                        "description": "data-manipulation/encoding/xor",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: encode data using XOR\n    namespace: data-manipulation/encoding/xor\n    authors:\n      - moritz.raabe@mandiant.com\n    scopes:\n      static: basic block\n      dynamic: unsupported  # requires characteristic, Not features\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information [T1027]\n    mbc:\n      - Defense Evasion::Obfuscated Files or Information::Encoding-Standard Algorithm [E1027.m02]\n      - Data::Encode Data::XOR [C0026.002]\n    examples:\n      - 2D3EDC218A90F03089CC01715A9F047F:0x403D7E\n  features:\n    - and:\n      - characteristic: tight loop\n      - characteristic: nzxor\n      - not:\n        - description: filter for potential false positives\n        - or:\n          - or:\n            - description: unsigned bitwise negation operation (~i)\n            - number: 0xFFFFFFFF = bitwise negation for unsigned 32 bits\n            - number: 0xFFFFFFFFFFFFFFFF = bitwise negation for unsigned 64 bits\n          - or:\n            - description: signed bitwise negation operation (~i)\n            - number: 0x0FFFFFFF = bitwise negation for signed 32 bits\n            - number: 0x0FFFFFFFFFFFFFFF = bitwise negation for signed 64 bits\n          - or:\n            - description: Magic constants used in the implementation of strings functions.\n            # such as `strlen` and `strcat` in the Windows standard library:\n            # (((i - 0x81010101) ^ ~i) & 0x81010100)\n            ## 32 bits\n            - number: 0x7EFEFEFF = optimized string constant for 32 bits\n            - number: 0x81010101 = -0x81010101 = 0x7EFEFEFF\n            - number: 0x81010100 = 0x81010100 = ~0x7EFEFEFF\n            ## 64 bits\n            - number: 0x7EFEFEFEFEFEFEFF = optimized string constant for 64 bits\n            - number: 0x8101010101010101 = -0x8101010101010101 = 0x7EFEFEFEFEFEFEFF\n            - number: 0x8101010101010100 = 0x8101010101010100 = ~0x7EFEFEFEFEFEFEFF\n"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "name": "contain loop",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: contain loop\n    authors:\n      - moritz.raabe@mandiant.com\n    lib: true\n    scopes:\n      static: function\n      dynamic: unsupported  # requires characteristic features\n    examples:\n      - 08AC667C65D36D6542917655571E61C8:0x406EAA\n  features:\n    - or:\n      - characteristic: loop\n      - characteristic: tight loop\n      - characteristic: recursive call\n"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "name": "hash data using murmur3",
                        "description": "data-manipulation/hashing/murmur",
                        "authors": [
                            "william.ballenthin@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: hash data using murmur3\n    namespace: data-manipulation/hashing/murmur\n    authors:\n      - william.ballenthin@mandiant.com\n    scopes:\n      static: function\n      dynamic: unsupported  # requires characteristic, mnemonic features\n    mbc:\n      - Data::Non-Cryptographic Hash::MurmurHash [C0030.001]\n    references:\n      - https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp\n    examples:\n      - c66172b12971a329f8d5ff01665f204b:0x404A18\n  features:\n    - or:\n      - and:\n        - number: 0x85ebca6b = 32-bit finalization mix constant 1\n        - number: 0xc2b2ae35 = 32-bit finalization mix constant 2\n      - and:\n        - number: 0xff51afd7ed558ccd = 64-bit finalization mix constant 1\n        - number: 0xc4ceb9fe1a85ec53 = 64-bit finalization mix constant 2\n      - and:\n        - number: 0xcc9e2d51 = c1 32-bit hash\n        - number: 0x1b873593 = c2 32-bit hash\n      - and:\n        - number: 0x239b961b = 32-bit c1 for 128-bit hash\n        - number: 0xab0e9789 = 32-bit c2 for 128-bit hash\n        - number: 0x38b34ae5 = 32-bit c3 for 128-bit hash\n        - number: 0xa1e38b93 = 32-bit c4 for 128-bit hash\n      - and:\n        - number: 0x87c37b91114253d5 = 64-bit c1 for 128-bit hash\n        - number: 0x4cf5ad432745937f = 64-bit c2 for 128-bit hash\n      - basic block:\n        - and:\n          - description: 'hash >> 16; hash >> 13; hash >> 16'\n          - count(mnemonic(shr)): 3\n          - instruction:\n            - mnemonic: shr\n            - number: 16\n          - instruction:\n            - mnemonic: shr\n            - number: 13\n          - optional:\n            - count(characteristic(nzxor)): 3 or more\n      - and:\n        # Group this two blocks under an `and` as on their own they are not\n        # unique enough and would cause false positives\n        - instruction:\n          - description: k ROL r1\n          - mnemonic: rol\n          - number: 15 = r1\n        - instruction:\n          - description: hash ROL r2\n          - mnemonic: rol\n          - number: 13 = r2\n",
                        "refs": [
                            {
                                "ref": "https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp"
                            }
                        ]
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "name": "encode data using Base64",
                        "description": "data-manipulation/encoding/base64",
                        "authors": [
                            "moritz.raabe@mandiant.com",
                            "anushka.virgaonkar@mandiant.com",
                            "michael.hunhoff@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: encode data using Base64\n    namespace: data-manipulation/encoding/base64\n    authors:\n      - moritz.raabe@mandiant.com\n      - anushka.virgaonkar@mandiant.com\n      - michael.hunhoff@mandiant.com\n    scopes:\n      static: function\n      dynamic: unsupported\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information [T1027]\n    mbc:\n      - Defense Evasion::Obfuscated Files or Information::Encoding-Standard Algorithm [E1027.m02]\n      - Data::Encode Data::Base64 [C0026.001]\n    examples:\n      - BFB9B5391A13D0AFD787E87AB90F14F5:0x1314889C\n      - 074072B261FC27B65C72671F13510C05:0x100049B2\n      - 5DB2D2BE20D59AA0BE6709A6850F1775:0x18001CC30\n      - 08AC667C65D36D6542917655571E61C8:0x406EAA\n  features:\n    - or:\n      - and:\n        - mnemonic: shl\n        - mnemonic: shr\n        - number: 0x3F = modulo 64\n        - or:\n          - number: 0x3D = '='\n          - number: 0x3D3D = '=='\n        - match: contain loop\n        - optional:\n          - number: 2\n          - number: 3\n          - number: 4\n          - number: 6\n          - number: 0xF\n          - string: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"\n      - api: System.Convert::ToBase64String\n      - api: System.Convert::ToBase64CharArray\n      - api: System.Convert::TryToBase64Chars\n"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "name": "get OS version",
                        "authors": [
                            "@mr-tz"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: get OS version\n    authors:\n      - \"@mr-tz\"\n    lib: true\n    scopes:\n      static: function\n      dynamic: call\n    examples:\n      - 493167E85E45363D09495D0841C30648:0x401000\n      - 5f66b82558ca92e54e77f216ef4c066c:0x44580A\n  features:\n    - or:\n      - api: RtlGetVersion\n      - api: ntoskrnl.PsGetVersion\n      - api: GetVersion\n      - api: GetVersionEx\n      - api: VerifyVersionInfo\n      - api: VerSetConditionMask\n      - api: RtlGetNtVersionNumbers\n      - api: GetProductInfo\n      - and:\n        - match: PEB access\n        - or:\n          - and:\n            - arch: i386\n            - or:\n              - offset: 0xA4 = PEB->OSMajorVersion\n              - offset: 0xA8 = PEB->OSMinorVersion\n              - offset: 0xAC = PEB->OSBuildNumber\n          - and:\n            - arch: amd64\n            - or:\n              - offset: 0x118 = PEB->OSMajorVersion\n              - offset: 0x11C = PEB->OSMinorVersion\n              - offset: 0x120 = PEB->OSBuildNumber\n"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "name": "encrypt data using RC4 PRGA",
                        "description": "data-manipulation/encryption/rc4",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: encrypt data using RC4 PRGA\n    namespace: data-manipulation/encryption/rc4\n    authors:\n      - moritz.raabe@mandiant.com\n    scopes:\n      static: function\n      dynamic: unsupported  # requires characteristic, mnemonic, basicblock features\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information [T1027]\n    mbc:\n      - Cryptography::Encrypt Data::RC4 [C0027.009]\n      - Cryptography::Generate Pseudo-random Sequence::RC4 PRGA [C0021.004]\n    examples:\n      - 34404A3FB9804977C6AB86CB991FB130:0x403DB0\n      - 34404A3FB9804977C6AB86CB991FB130:0x403E50\n      - 9324D1A8AE37A36AE560C37448C9705A:0x4049F0\n      - 73CE04892E5F39EC82B00C02FC04C70F:0x4064C6\n  features:\n    - and:\n      # TODO: maybe add characteristic for nzxor reg size\n      - count(characteristic(nzxor)): 1\n      - or:\n        - match: calculate modulo 256 via x86 assembly\n        # compiler may do this via zero-extended mov from 8-bit register\n        - count(mnemonic(movzx)): 4 or more\n      # should not call (many) functions\n      - count(characteristic(calls from)): (0, 4)\n      # should not be too simple or too complex (50 is picked by intuition)\n      - count(basic blocks): (4, 50)\n      - match: contain loop\n      - optional:\n        - or:\n          - number: 0xFF\n          - number: 0x100\n"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "name": "resolve function by parsing PE exports",
                        "description": "load-code/pe",
                        "authors": [
                            "sara-rn"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: resolve function by parsing PE exports\n    namespace: load-code/pe\n    authors:\n      - sara-rn\n    scopes:\n      static: function\n      dynamic: unsupported  # requires characteristic, offset, mnemonic features\n    examples:\n      - 73CE04892E5F39EC82B00C02FC04C70F:0x406BA1\n  features:\n    - and:\n      - os: windows\n      - or:\n        - characteristic: loop\n        - mnemonic: movzx\n      - and:\n        - offset: 0x3C = IMAGE_DOS_HEADER.PE.e_lfanew\n        - or:\n          - and:\n            - arch: i386\n            - offset: 0x78 = offset to IMAGE_DATA_DIRECTORY[IMAGE_DIRECTORY_ENTRY_EXPORT]\n          - and:\n            - arch: amd64\n            - offset: 0x88 = offset to IMAGE_DATA_DIRECTORY[IMAGE_DIRECTORY_ENTRY_EXPORT]\n        - 3 or more:\n          - offset: 0x14 = IMAGE_EXPORT_DIRECTORY.NumberOfFunctions\n          - offset: 0x24 = IMAGE_EXPORT_DIRECTORY.AddressOfNameOrdinals\n          - offset: 0x20 = IMAGE_EXPORT_DIRECTORY.AddressOfNames\n          - offset: 0x18 = IMAGE_EXPORT_DIRECTORY.NumberOfNames\n          - offset: 0x1C = IMAGE_EXPORT_DIRECTORY.AddressOfFunctions\n      - optional:\n        - or:\n          - api: LoadLibrary\n          - api: strcmp\n"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "name": "encrypt data using AES via x86 extensions",
                        "description": "data-manipulation/encryption/aes",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: encrypt data using AES via x86 extensions\n    namespace: data-manipulation/encryption/aes\n    authors:\n      - moritz.raabe@mandiant.com\n    scopes:\n      static: function\n      dynamic: unsupported  # requires mnemonic features\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information [T1027]\n    mbc:\n      - Defense Evasion::Obfuscated Files or Information::Encryption-Standard Algorithm [E1027.m05]\n      - Cryptography::Encrypt Data::AES [C0027.001]\n  features:\n    - or:\n      - mnemonic: aesenc = Perform One Round of an AES Encryption Flow\n      - mnemonic: vaesenc\n      - mnemonic: aesenclast = Perform Last Round of an AES Encryption Flow\n      - mnemonic: vaesenclast\n      - mnemonic: aesimc = Perform the AES InvMixColumn Transformation\n      - mnemonic: vaesimc\n      - mnemonic: aeskeygenassist = AES Round Key Generation Assist\n      - mnemonic: vaeskeygenassist\n"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "name": "encrypt data using Salsa20 or ChaCha",
                        "description": "data-manipulation/encryption/salsa20",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: encrypt data using Salsa20 or ChaCha\n    namespace: data-manipulation/encryption/salsa20\n    authors:\n      - moritz.raabe@mandiant.com\n    scopes:\n      static: function\n      dynamic: thread\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information [T1027]\n    references:\n      - http://cr.yp.to/snuffle/ecrypt.c\n  features:\n    # The constant words spell \"expand 32-byte k\" in ASCII (i.e. the 4 words are \"expa\", \"nd 3\", \"2-by\", and \"te k\")\n    - or:\n      - description: part of key setup\n      - string: \"expand 32-byte k\"\n        description: sigma\n      - string: \"expand 16-byte k\"\n        description: tau\n      # if sigma and tau are in contiguous memory, may result in concatenated string\n      - string: \"expand 32-byte kexpand 16-byte k\"\n      - bytes: 65 78 70 61 6E 64 20 33 32 2D 62 79 74 65 20 6B = \"expand 32-byte k\"\n      - bytes: 65 78 70 61 6E 64 20 31 36 2D 62 79 74 65 20 6B = \"expand 16-byte k\"\n      - and:\n        - string: \"expa\"\n        - string: \"nd 3\"\n        - string: \"2-by\"\n        - string: \"te k\"\n      - and:\n        - number: 0x61707865 = \"apxe\"\n        - number: 0x3320646E = \"3 dn\"\n        - number: 0x79622D32 = \"yb-2\"\n        - number: 0x6B206574 = \"k et\"\n",
                        "refs": [
                            {
                                "ref": "http://cr.yp.to/snuffle/ecrypt.c"
                            }
                        ]
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "name": "compiled with Go",
                        "description": "compiler/go",
                        "authors": [
                            "michael.hunhoff@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: compiled with Go\n    namespace: compiler/go\n    authors:\n      - michael.hunhoff@mandiant.com\n    scopes:\n      static: file\n      dynamic: file\n    examples:\n      - 49a34cfbeed733c24392c9217ef46bb6\n  features:\n    - or:\n      - string: /^Go build ID:/\n      - substring: \"go.buildid\"\n      - string: /^Go buildinf:/\n      - string: /\\bgo1\\.\\d/\n      - substring: \"runtime.main\"\n      - substring: \"main.main\"\n      - substring: \"runtime.gcWork\"\n"
                    }
                ],
                "sandbox_name": "CAPA",
                "last_modification_date": 1718771591,
                "mbc": [
                    {
                        "id": "B0001.019",
                        "objective": "Anti-Behavioral Analysis",
                        "behavior": "Debugger Detection",
                        "method": "Process Environment Block",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "PEB access"
                            }
                        ]
                    },
                    {
                        "id": "E1027.m02",
                        "objective": "Defense Evasion",
                        "behavior": "Obfuscated Files or Information",
                        "method": "Encoding-Standard Algorithm",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encode data using XOR"
                            }
                        ]
                    },
                    {
                        "id": "C0026.002",
                        "objective": "Data",
                        "behavior": "Encode Data",
                        "method": "XOR",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encode data using XOR"
                            }
                        ]
                    },
                    {
                        "id": "C0030.001",
                        "objective": "Data",
                        "behavior": "Non-Cryptographic Hash",
                        "method": "MurmurHash",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "hash data using murmur3"
                            }
                        ]
                    },
                    {
                        "id": "E1027.m02",
                        "objective": "Defense Evasion",
                        "behavior": "Obfuscated Files or Information",
                        "method": "Encoding-Standard Algorithm",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encode data using Base64"
                            }
                        ]
                    },
                    {
                        "id": "C0026.001",
                        "objective": "Data",
                        "behavior": "Encode Data",
                        "method": "Base64",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encode data using Base64"
                            }
                        ]
                    },
                    {
                        "id": "C0027.009",
                        "objective": "Cryptography",
                        "behavior": "Encrypt Data",
                        "method": "RC4",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encrypt data using RC4 PRGA"
                            }
                        ]
                    },
                    {
                        "id": "C0021.004",
                        "objective": "Cryptography",
                        "behavior": "Generate Pseudo-random Sequence",
                        "method": "RC4 PRGA",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encrypt data using RC4 PRGA"
                            }
                        ]
                    },
                    {
                        "id": "E1027.m05",
                        "objective": "Defense Evasion",
                        "behavior": "Obfuscated Files or Information",
                        "method": "Encryption-Standard Algorithm",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encrypt data using AES via x86 extensions"
                            }
                        ]
                    },
                    {
                        "id": "C0027.001",
                        "objective": "Cryptography",
                        "behavior": "Encrypt Data",
                        "method": "AES",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encrypt data using AES via x86 extensions"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "a4fb20dccb067c4cbc64504469b5d60fa90fd679af71aec82df59c70b9f3ab73_Yomi Hunter",
            "type": "file_behaviour",
            "links": {
                "self": "https://www.virustotal.com/api/v3/file_behaviours/a4fb20dccb067c4cbc64504469b5d60fa90fd679af71aec82df59c70b9f3ab73_Yomi Hunter"
            },
            "attributes": {
                "has_evtx": true,
                "has_html_report": true,
                "processes_tree": [
                    {
                        "process_id": "992",
                        "name": "e5173cc7dc9e643e8497abb1a2b647d6.15510",
                        "time_offset": 25157
                    }
                ],
                "behash": "d098039889ef5e7211d3800556a40427",
                "has_pcap": true,
                "analysis_date": 1718744642,
                "mitre_attack_techniques": [
                    {
                        "id": "T1045",
                        "signature_description": "Manalize Local SandBox Packer Harvesting"
                    }
                ],
                "http_conversations": [
                    {
                        "url": "http://crt.sectigo.com/SectigoPublicCodeSigningCAR36.crt",
                        "request_method": "GET",
                        "request_headers": {
                            "User-Agent": "Microsoft-CryptoAPI/6.1",
                            "Host": "crt.sectigo.com"
                        },
                        "response_headers": {
                            "Content-Length": "1566",
                            "Content-Type": "application/pkix-cert"
                        },
                        "response_status_code": 200
                    },
                    {
                        "url": "http://crt.sectigo.com/SectigoPublicCodeSigningRootR46.p7c",
                        "request_method": "GET",
                        "request_headers": {
                            "User-Agent": "Microsoft-CryptoAPI/6.1",
                            "Host": "crt.sectigo.com"
                        },
                        "response_headers": {
                            "Content-Length": "4515",
                            "Content-Type": "application/pkcs7-mime"
                        },
                        "response_status_code": 200
                    }
                ],
                "files_dropped": [
                    {
                        "path": "/msdownload/update/v3/static/trustedr/en/authrootstl.cab",
                        "sha256": "b33efcb95235b98b48508e019afa4b7655e80cf071defabd8b2123fc8b29307f",
                        "type": "CAB",
                        "download_url": "ctldl.windowsupdate.comhttp://ctldl.windowsupdate.com/msdownload/update/v3/static/trustedr/en/authrootstl.cab?44382531edde5dee"
                    }
                ],
                "dns_lookups": [
                    {
                        "hostname": "crt.sectigo.com",
                        "resolved_ips": [
                            "172.64.149.23"
                        ]
                    }
                ],
                "has_memdump": false,
                "modules_loaded": [
                    "SspiCli",
                    "rpcrt4"
                ],
                "sandbox_name": "Yomi Hunter",
                "last_modification_date": 1718744677,
                "verdicts": [
                    "MALWARE"
                ]
            }
        }
    ],
    "meta": {
        "count": 3
    },
    "links": {
        "self": "https://www.virustotal.com/api/v3/files/a4fb20dccb067c4cbc64504469b5d60fa90fd679af71aec82df59c70b9f3ab73/behaviours?limit=10"
    }
}