{
    "data": [
        {
            "id": "2fbd7ad28bbf3e178fd6e94d8fa3345ab235ed274b7b8de56d63b7be3b6b16ab_CAPA",
            "type": "file_behaviour",
            "links": {
                "self": "https://www.virustotal.com/api/v3/file_behaviours/2fbd7ad28bbf3e178fd6e94d8fa3345ab235ed274b7b8de56d63b7be3b6b16ab_CAPA"
            },
            "attributes": {
                "has_html_report": false,
                "has_evtx": false,
                "mbc": [
                    {
                        "objective": "Anti-Static Analysis",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "contain obfuscated stackstrings"
                            }
                        ],
                        "id": "B0032.020",
                        "behavior": "Executable Code Obfuscation",
                        "method": "Argument Obfuscation"
                    },
                    {
                        "objective": "Anti-Static Analysis",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "contain obfuscated stackstrings"
                            }
                        ],
                        "id": "B0032.017",
                        "behavior": "Executable Code Obfuscation",
                        "method": "Stack Strings"
                    },
                    {
                        "objective": "Memory",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "allocate memory"
                            }
                        ],
                        "id": "C0007",
                        "behavior": "Allocate Memory"
                    },
                    {
                        "objective": "Memory",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "allocate RW memory"
                            }
                        ],
                        "id": "C0007",
                        "behavior": "Allocate Memory"
                    },
                    {
                        "objective": "Memory",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "allocate RWX memory"
                            }
                        ],
                        "id": "C0007",
                        "behavior": "Allocate Memory"
                    },
                    {
                        "objective": "Memory",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "execute shellcode via indirect call"
                            }
                        ],
                        "id": "C0007",
                        "behavior": "Allocate Memory"
                    },
                    {
                        "objective": "Discovery",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "inspect section memory permissions"
                            }
                        ],
                        "id": "B0046.002",
                        "behavior": "Code Discovery",
                        "method": "Inspect Section Memory Permissions"
                    },
                    {
                        "objective": "Anti-Behavioral Analysis",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "reference anti-VM strings targeting VMWare"
                            }
                        ],
                        "id": "B0009",
                        "behavior": "Virtual Machine Detection"
                    },
                    {
                        "objective": "Anti-Behavioral Analysis",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "reference anti-VM strings targeting Qemu"
                            }
                        ],
                        "id": "B0009",
                        "behavior": "Virtual Machine Detection"
                    },
                    {
                        "objective": "Anti-Behavioral Analysis",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "reference anti-VM strings targeting VirtualBox"
                            }
                        ],
                        "id": "B0009",
                        "behavior": "Virtual Machine Detection"
                    }
                ],
                "analysis_date": 1705791204,
                "sandbox_name": "CAPA",
                "mitre_attack_techniques": [
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "contain obfuscated stackstrings"
                            }
                        ],
                        "signature_description": "contain obfuscated stackstrings",
                        "id": "T1027.005",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "link function at runtime on Windows"
                            }
                        ],
                        "signature_description": "link function at runtime on Windows",
                        "id": "T1129",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "reference anti-VM strings targeting VMWare"
                            }
                        ],
                        "signature_description": "reference anti-VM strings targeting VMWare",
                        "id": "T1497.001",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "reference anti-VM strings targeting Qemu"
                            }
                        ],
                        "signature_description": "reference anti-VM strings targeting Qemu",
                        "id": "T1497.001",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "reference anti-VM strings targeting VirtualBox"
                            }
                        ],
                        "signature_description": "reference anti-VM strings targeting VirtualBox",
                        "id": "T1497.001",
                        "severity": "IMPACT_SEVERITY_INFO"
                    }
                ],
                "signature_matches": [
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: contain obfuscated stackstrings\n    namespace: anti-analysis/obfuscation/string/stackstring\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: basic block\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information::Indicator Removal from Tools [T1027.005]\n    mbc:\n      - Anti-Static Analysis::Executable Code Obfuscation::Argument Obfuscation [B0032.020]\n      - Anti-Static Analysis::Executable Code Obfuscation::Stack Strings [B0032.017]\n    examples:\n      - Practical Malware Analysis Lab 16-03.exe_:0x4013D0\n  features:\n    - characteristic: stack string\n",
                        "name": "contain obfuscated stackstrings",
                        "description": "anti-analysis/obfuscation/string/stackstring"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "rule_src": "rule:\n  meta:\n    name: allocate memory\n    authors:\n      - 0x534a@mailbox.org\n    lib: true\n    scope: basic block\n    mbc:\n      - Memory::Allocate Memory [C0007]\n    examples:\n      - Practical Malware Analysis Lab 03-03.exe_:0x4010EA\n      # ntdll\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001ABA\n  features:\n    - or:\n      - api: kernel32.VirtualAlloc\n      - api: kernel32.VirtualAllocEx\n      - api: kernel32.VirtualAllocExNuma\n      - api: kernel32.VirtualProtect\n      - api: kernel32.VirtualProtectEx\n      - api: NtAllocateVirtualMemory\n      - api: ZwAllocateVirtualMemory\n      - api: NtMapViewOfSection\n      - api: ZwMapViewOfSection\n",
                        "name": "allocate memory",
                        "authors": [
                            "0x534a@mailbox.org"
                        ]
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "rule_src": "rule:\n  meta:\n    name: allocate RW memory\n    authors:\n      - 0x534a@mailbox.org\n    lib: true\n    scope: basic block\n    mbc:\n      - Memory::Allocate Memory [C0007]\n    examples:\n      - Practical Malware Analysis Lab 17-02.dll_:0x1000D10D\n  features:\n    - and:\n      - match: allocate memory\n      - number: 0x4 = PAGE_READWRITE\n",
                        "name": "allocate RW memory",
                        "authors": [
                            "0x534a@mailbox.org"
                        ]
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: allocate RWX memory\n    namespace: host-interaction/process/inject\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: basic block\n    mbc:\n      - Memory::Allocate Memory [C0007]\n    examples:\n      - Practical Malware Analysis Lab 03-03.exe_:0x4010EA\n      # ntdll\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001ABA\n  features:\n    - and:\n      - match: allocate memory\n      - number: 0x40 = PAGE_EXECUTE_READWRITE\n",
                        "name": "allocate RWX memory",
                        "description": "host-interaction/process/inject"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "rule_src": "rule:\n  meta:\n    name: contain loop\n    authors:\n      - moritz.raabe@mandiant.com\n    lib: true\n    scope: function\n    examples:\n      - 08AC667C65D36D6542917655571E61C8:0x406EAA\n  features:\n    - or:\n      - characteristic: loop\n      - characteristic: tight loop\n      - characteristic: recursive call\n",
                        "name": "contain loop",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ]
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com",
                            "michael.hunhoff@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: link function at runtime on Windows\n    namespace: linking/runtime-linking\n    authors:\n      - moritz.raabe@mandiant.com\n      - michael.hunhoff@mandiant.com\n    scope: function\n    att&ck:\n      - Execution::Shared Modules [T1129]\n    examples:\n      - 9324D1A8AE37A36AE560C37448C9705A:0x404130\n      - Practical Malware Analysis Lab 01-04.exe_:0x401350\n  features:\n    - and:\n      - os: windows\n      - or:\n        - api: kernel32.GetProcAddress\n        - api: ntdll.LdrGetProcedureAddress\n      - optional:\n        - characteristic: indirect call\n        - api: kernel32.LoadLibrary\n        - api: kernel32.GetModuleHandle\n        - api: kernel32.GetModuleHandleEx\n        - api: ntdll.LdrLoadDll\n",
                        "name": "link function at runtime on Windows",
                        "description": "linking/runtime-linking"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "ronnie.salomonsen@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: execute shellcode via indirect call\n    namespace: load-code/shellcode\n    authors:\n      - ronnie.salomonsen@mandiant.com\n    scope: function\n    mbc:\n      - Memory::Allocate Memory [C0007]\n  features:\n    - and:\n      - match: allocate RWX memory\n      - or:\n        - characteristic: indirect call\n        - characteristic: cross section flow\n",
                        "name": "execute shellcode via indirect call",
                        "description": "load-code/shellcode"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "@Ana06"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: inspect section memory permissions\n    namespace: load-code/pe\n    authors:\n      - \"@Ana06\"\n    description: \"translate section memory permissions (specified in the 'Characteristics' field of the image section header) into page protection constants\"\n    scope: function\n    mbc:\n      - Discovery::Code Discovery::Inspect Section Memory Permissions [B0046.002]\n    examples:\n      - E4C33AC3638EEF68311F8AC0D72483C7:0x401480\n  features:\n    - and:\n      - os: windows\n      - 3 or more:\n        - and:\n          - number: 0x40000000 = IMAGE_SCN_MEM_READ\n          - number: 0x2 = PAGE_READONLY\n        - and:\n          - number: 0x20000000 = IMAGE_SCN_MEM_EXECUTE\n          - number: 0x10 = PAGE_EXECUTE\n        - and:\n          - or:\n            - number: 0x60000000 = IMAGE_SCN_MEM_READ | IMAGE_SCN_MEM_EXECUTE\n            - and:\n              - number: 0x40000000 = IMAGE_SCN_MEM_READ\n              - number: 0x20000000 = IMAGE_SCN_MEM_EXECUTE\n          - number: 0x20 = PAGE_EXECUTE_READ\n        - and:\n          - or:\n            - number: 0xC0000000 = IMAGE_SCN_MEM_READ | IMAGE_SCN_MEM_WRITE\n            - and:\n              - number: 0x40000000 = IMAGE_SCN_MEM_READ\n              - number: 0x80000000 = IMAGE_SCN_MEM_WRITE\n          - number: 0x4 = PAGE_READWRITE\n        - and:\n          - or:\n            - number: 0xE0000000 = IMAGE_SCN_MEM_READ | IMAGE_SCN_MEM_WRITE | IMAGE_SCN_MEM_EXECUTE\n            - and:\n              - number: 0x40000000 = IMAGE_SCN_MEM_READ\n              - number: 0x80000000 = IMAGE_SCN_MEM_WRITE\n              - number: 0x20000000 = IMAGE_SCN_MEM_EXECUTE\n          - number: 0x40 = PAGE_EXECUTE_READWRITE\n      - optional:\n        - number: 0x1 = PAGE_NOACCESS\n",
                        "name": "inspect section memory permissions",
                        "description": "load-code/pe : translate section memory permissions (specified in the 'Characteristics' field of the image section header) into page protection constants"
                    },
                    {
                        "description": "anti-analysis/anti-vm/vm-detection",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/VMWare.cpp"
                            }
                        ],
                        "rule_src": "rule:\n  meta:\n    name: reference anti-VM strings targeting VMWare\n    namespace: anti-analysis/anti-vm/vm-detection\n    authors:\n      - michael.hunhoff@mandiant.com\n      - \"@johnk3r\"\n    scope: file\n    att&ck:\n      - Defense Evasion::Virtualization/Sandbox Evasion::System Checks [T1497.001]\n    mbc:\n      - Anti-Behavioral Analysis::Virtual Machine Detection [B0009]\n    references:\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/VMWare.cpp\n    examples:\n      - al-khaser_x86.exe_\n      - b83480162ede09d4aa6d4850f9faa0a4c3834152752fd04cfdb22d647aa1f825:0x17D80\n  features:\n    - or:\n      - string: /VMWare/i\n      - string: /VMTools/i\n      - string: /SOFTWARE\\\\VMware, Inc\\.\\\\VMware Tools/i\n      - string: /vmnet\\.sys/i\n      - string: /vmmouse\\.sys/i\n      - string: /vmusb\\.sys/i\n      - string: /vm3dmp\\.sys/i\n      - string: /vmci\\.sys/i\n      - string: /vmhgfs\\.sys/i\n      - string: /vmmemctl\\.sys/i\n      - string: /vmx86\\.sys/i\n      - string: /vmrawdsk\\.sys/i\n      - string: /vmusbmouse\\.sys/i\n      - string: /vmkdb\\.sys/i\n      - string: /vmnetuserif\\.sys/i\n      - string: /vmnetadapter\\.sys/i\n      - string: /\\\\\\\\.\\\\HGFS/i\n      - string: /\\\\\\\\.\\\\vmci/i\n      - string: /vmtoolsd\\.exe/i\n      - string: /vmwaretray\\.exe/i\n      - string: /vmwareuser\\.exe/i\n      - string: /VGAuthService\\.exe/i\n      - string: /vmacthlp\\.exe/i\n      - string: /vmci/i\n        description: VMWare VMCI Bus Driver\n      - string: /vmhgfs/i\n        description: VMWare Host Guest Control Redirector\n      - string: /vmmouse/i\n      - string: /vmmemctl/i\n        description: VMWare Guest Memory Controller Driver\n      - string: /vmusb/i\n      - string: /vmusbmouse/i\n      - string: /vmx_svga/i\n      - string: /vmxnet/i\n      - string: /vmx86/i\n      - string: /VMwareVMware/i\n      - string: /vmGuestLib\\.dll/i\n      - string: /vmGuestLib\\.dll/i\n      - string: /Applications\\\\VMwareHostOpen\\.exe/i\n      - string: /vm3dgl\\.dll/i\n      - string: /vmdum\\.dll/i\n      - string: /vm3dver\\.dll/i\n      - string: /vmtray\\.dll/i\n      - string: /VMToolsHook\\.dll/i\n      - string: /vmmousever\\.dll/i\n      - string: /VmGuestLibJava\\.dll/i\n      - string: /vmscsi\\.sys/i\n",
                        "authors": [
                            "michael.hunhoff@mandiant.com",
                            "@johnk3r"
                        ],
                        "name": "reference anti-VM strings targeting VMWare"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "@williballenthin"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: compiled from Visual Basic\n    namespace: compiler/vb\n    authors:\n      - \"@williballenthin\"\n    scope: file\n    examples:\n      - 9bca6b99e7981208af4c7925b96fb9cf\n  features:\n    - and:\n      - string: /VB5!.*/\n      - import: msvbvm60.ThunRTMain\n",
                        "name": "compiled from Visual Basic",
                        "description": "compiler/vb"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "@mr-tz"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: (internal) Visual Basic file limitation\n    namespace: internal/limitation/file\n    authors:\n      - \"@mr-tz\"\n    description: |\n      This sample appears to be compiled from Visual Basic.\n\n      Visual Basic is a Microsoft programming language that can be compiled to native code or an intermediate\n      representation called P-Code.\n      capa cannot handle Visual Basic executables well. This means that the results will be misleading or incomplete.\n      You may have to analyze the file manually, for example using a tool like VB Decompiler.\n    scope: file\n    examples:\n      - 9bca6b99e7981208af4c7925b96fb9cf\n  features:\n    - or:\n      - match: compiler/vb\n",
                        "name": "(internal) Visual Basic file limitation",
                        "description": "internal/limitation/file : This sample appears to be compiled from Visual Basic.\n\nVisual Basic is a Microsoft programming language that can be compiled to native code or an intermediate\nrepresentation called P-Code.\ncapa cannot handle Visual Basic executables well. This means that the results will be misleading or incomplete.\nYou may have to analyze the file manually, for example using a tool like VB Decompiler.\n"
                    },
                    {
                        "description": "anti-analysis/anti-vm/vm-detection",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Qemu.cpp"
                            }
                        ],
                        "rule_src": "rule:\n  meta:\n    name: reference anti-VM strings targeting Qemu\n    namespace: anti-analysis/anti-vm/vm-detection\n    authors:\n      - michael.hunhoff@mandiant.com\n    scope: file\n    att&ck:\n      - Defense Evasion::Virtualization/Sandbox Evasion::System Checks [T1497.001]\n    mbc:\n      - Anti-Behavioral Analysis::Virtual Machine Detection [B0009]\n    references:\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Qemu.cpp\n    examples:\n      - al-khaser_x86.exe_\n  features:\n    - or:\n      - string: /Qemu/i\n      - string: /qemu-ga.exe/i\n      - string: /BOCHS/i\n      - string: /^BXPC/i\n",
                        "authors": [
                            "michael.hunhoff@mandiant.com"
                        ],
                        "name": "reference anti-VM strings targeting Qemu"
                    },
                    {
                        "description": "anti-analysis/anti-vm/vm-detection",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/VirtualBox.cpp"
                            }
                        ],
                        "rule_src": "rule:\n  meta:\n    name: reference anti-VM strings targeting VirtualBox\n    namespace: anti-analysis/anti-vm/vm-detection\n    authors:\n      - michael.hunhoff@mandiant.com\n    scope: file\n    att&ck:\n      - Defense Evasion::Virtualization/Sandbox Evasion::System Checks [T1497.001]\n    mbc:\n      - Anti-Behavioral Analysis::Virtual Machine Detection [B0009]\n    references:\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/VirtualBox.cpp\n    examples:\n      - al-khaser_x86.exe_\n  features:\n    - or:\n      - string: /VBOX/i\n      - string: /VEN_VBOX/i\n      - string: /VirtualBox/i\n      - string: /06/23/99/i\n      - string: /HARDWARE\\\\ACPI\\\\DSDT\\\\VBOX__/i\n      - string: /HARDWARE\\\\ACPI\\\\FADT\\\\VBOX__/i\n      - string: /HARDWARE\\\\ACPI\\\\RSDT\\\\VBOX__/i\n      - string: /SOFTWARE\\\\Oracle\\\\VirtualBox Guest Additions/i\n      - string: /SYSTEM\\\\ControlSet001\\\\Services\\\\VBoxGuest/i\n      - string: /SYSTEM\\\\ControlSet001\\\\Services\\\\VBoxMouse/i\n      - string: /SYSTEM\\\\ControlSet001\\\\Services\\\\VBoxService/i\n      - string: /SYSTEM\\\\ControlSet001\\\\Services\\\\VBoxSF/i\n      - string: /SYSTEM\\\\ControlSet001\\\\Services\\\\VBoxVideo/i\n      - string: /VBoxMouse\\.sys/i\n      - string: /VBoxGuest\\.sys/i\n      - string: /VBoxSF\\.sys/i\n      - string: /VBoxVideo\\.sys/i\n      - string: /vboxdisp\\.dll/i\n      - string: /vboxhook\\.dll/i\n      - string: /vboxmrxnp\\.dll/i\n      - string: /vboxogl\\.dll/i\n      - string: /vboxoglarrayspu\\.dll/i\n      - string: /vboxoglcrutil\\.dll/i\n      - string: /vboxoglerrorspu\\.dll/i\n      - string: /vboxoglfeedbackspu\\.dll/i\n      - string: /vboxoglpackspu\\.dll/i\n      - string: /vboxoglpassthroughspu\\.dll/i\n      - string: /vboxservice\\.exe/i\n      - string: /vboxtray\\.exe/i\n      - string: /VBoxControl\\.exe/i\n      - string: /oracle\\\\virtualbox guest additions\\\\/i\n      - string: /\\\\\\\\.\\\\VBoxMiniRdrDN/i\n      - string: /\\\\\\\\.\\\\VBoxGuest/i\n      - string: /\\\\\\\\.\\\\pipe\\\\VBoxMiniRdDN/i\n      - string: /\\\\\\\\.\\\\VBoxTrayIPC/i\n      - string: /\\\\\\\\.\\\\pipe\\\\VBoxTrayIPC/i\n      - string: /VBoxTrayToolWndClass/i\n      - string: /VBoxTrayToolWnd/i\n      - string: /vboxservice\\.exe/i\n      - string: /vboxtray.exe/i\n      - string: /vboxvideo/i\n      - string: /VBoxVideoW8/i\n      - string: /VBoxWddm/i\n      - string: /PCI\\\\VEN_80EE&DEV_CAFE/i\n      - string: /82801FB/i\n      - string: /82441FX/i\n      - string: /82371SB/i\n      - string: /OpenHCD/i\n      - string: /ACPIBus_BUS_0/i\n      - string: /PCI_BUS_0/i\n      - string: /PNP_BUS_0/i\n      - string: /Oracle Corporation/i\n      - string: /VBoxWdd/i\n      - string: /VBoxS/i\n        description: VirtualBox Shared Folders\n      - string: /VBoxMouse/i\n        description: VirtualBox Guest Mouse\n      - string: /VBoxGuest/i\n        description: VirtualBox Guest Driver\n      - string: /VBoxVBoxVBox/i\n      - string: /innotek GmbH/i\n      - string: /drivers\\\\vboxdrv/i\n",
                        "authors": [
                            "michael.hunhoff@mandiant.com"
                        ],
                        "name": "reference anti-VM strings targeting VirtualBox"
                    }
                ],
                "behash": "cf01bc0f55e04f3d3ac2099daf719688",
                "has_memdump": false,
                "has_pcap": false,
                "last_modification_date": 1705791204
            }
        }
    ],
    "meta": {
        "count": 1
    },
    "links": {
        "self": "https://www.virustotal.com/api/v3/files/2fbd7ad28bbf3e178fd6e94d8fa3345ab235ed274b7b8de56d63b7be3b6b16ab/behaviours?limit=10"
    }
}