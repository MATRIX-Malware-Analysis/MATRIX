{
    "data": [
        {
            "id": "2b03806939d1171f063ba8d14c3b10622edb5732e4f78dc4fe3eac98b56e5d46_CAPA",
            "type": "file_behaviour",
            "links": {
                "self": "https://www.virustotal.com/api/v3/file_behaviours/2b03806939d1171f063ba8d14c3b10622edb5732e4f78dc4fe3eac98b56e5d46_CAPA"
            },
            "attributes": {
                "behash": "a9df2ca54e06293ef61ce020843e5bea",
                "signature_matches": [
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com",
                            "michael.hunhoff@mandiant.com",
                            "joakim@intezer.com",
                            "anushka.virgaonkar@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: create thread\n    namespace: host-interaction/thread/create\n    authors:\n      - moritz.raabe@mandiant.com\n      - michael.hunhoff@mandiant.com\n      - joakim@intezer.com\n      - anushka.virgaonkar@mandiant.com\n    scope: basic block\n    mbc:\n      - Process::Create Thread [C0038]\n    examples:\n      - 946A99F36A46D335DEC080D9A4371940:0x10001DA0\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x408020\n  features:\n    - or:\n      - and:\n        - os: windows\n        - or:\n          - api: kernel32.CreateThread\n          - api: _beginthread\n          - api: _beginthreadex\n          - api: PsCreateSystemThread\n          - api: SHCreateThread\n          - api: SHCreateThreadWithHandle\n          - api: kernel32.CreateRemoteThread\n          - api: kernel32.CreateRemoteThreadEx\n          - api: RtlCreateUserThread\n          - api: ntdll.NtCreateThread\n          - api: ntdll.NtCreateThreadEx\n          - api: ntdll.ZwCreateThread\n          - api: ntdll.ZwCreateThreadEx\n      - and:\n        - os: linux\n        - api: pthread_create\n      - and:\n        - api: System.Threading.Thread::Start\n        - optional:\n          - api: System.Threading.Thread::ctor\n",
                        "name": "create thread",
                        "description": "host-interaction/thread/create"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: encode data using XOR\n    namespace: data-manipulation/encoding/xor\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: basic block\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information [T1027]\n    mbc:\n      - Defense Evasion::Obfuscated Files or Information::Encoding-Standard Algorithm [E1027.m02]\n      - Data::Encode Data::XOR [C0026.002]\n    examples:\n      - 2D3EDC218A90F03089CC01715A9F047F:0x403D7E\n  features:\n    - and:\n      - characteristic: tight loop\n      - characteristic: nzxor\n      - not:\n        - description: filter for potential false positives\n        - or:\n          - or:\n            - description: unsigned bitwise negation operation (~i)\n            - number: 0xFFFFFFFF = bitwise negation for unsigned 32 bits\n            - number: 0xFFFFFFFFFFFFFFFF = bitwise negation for unsigned 64 bits\n          - or:\n            - description: signed bitwise negation operation (~i)\n            - number: 0x0FFFFFFF = bitwise negation for signed 32 bits\n            - number: 0x0FFFFFFFFFFFFFFF = bitwise negation for signed 64 bits\n          - or:\n            - description: Magic constants used in the implementation of strings functions.\n            # such as `strlen` and `strcat` in the Windows standard library:\n            # (((i - 0x81010101) ^ ~i) & 0x81010100)\n            ## 32 bits\n            - number: 0x7EFEFEFF = optimized string constant for 32 bits\n            - number: 0x81010101 = -0x81010101 = 0x7EFEFEFF\n            - number: 0x81010100 = 0x81010100 = ~0x7EFEFEFF\n            ## 64 bits\n            - number: 0x7EFEFEFEFEFEFEFF = optimized string constant for 64 bits\n            - number: 0x8101010101010101 = -0x8101010101010101 = 0x7EFEFEFEFEFEFEFF\n            - number: 0x8101010101010100 = 0x8101010101010100 = ~0x7EFEFEFEFEFEFEFF\n",
                        "name": "encode data using XOR",
                        "description": "data-manipulation/encoding/xor"
                    },
                    {
                        "description": "anti-analysis : may be used to evade hooks or hinder analysis",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "https://github.com/j00ru/windows-syscalls"
                            }
                        ],
                        "rule_src": "rule:\n  meta:\n    name: execute syscall instruction\n    namespace: anti-analysis\n    authors:\n      - \"@kulinacs\"\n      - \"@mr-tz\"\n    description: may be used to evade hooks or hinder analysis\n    scope: basic block\n    references:\n      - https://github.com/j00ru/windows-syscalls\n  features:\n    - and:\n      - mnemonic: syscall\n      - or:\n        - mnemonic: ret\n        - mnemonic: retn\n",
                        "authors": [
                            "@kulinacs",
                            "@mr-tz"
                        ],
                        "name": "execute syscall instruction"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "@_re_fox",
                            "william.ballenthin@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: encrypt data using DES\n    namespace: data-manipulation/encryption/des\n    authors:\n      - \"@_re_fox\"\n      - william.ballenthin@mandiant.com\n    scope: basic block\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information [T1027]\n    mbc:\n      - Defense Evasion::Obfuscated Files or Information::Encryption-Standard Algorithm [E1027.m05]\n      - Cryptography::Encrypt Data::3DES [C0027.004]\n    examples:\n      - 91a12a4cf437589ba70b1687f5acad19:0x47F5E8\n  features:\n    - or:\n      - bytes: 0e 04 0d 01 02 0f 0b 08 03 0a 06 0c 05 09 00 07 00 0f 07 04 0e 02 0d 01 0a 06 0c 0b 09 05 03 08 04 01 0e 08 0d 06 02 0b 0f 0c 09 07 03 0a 05 00 0f 0c 08 02 04 09 01 07 05 0b 03 0e 0a 00 06 0d = SBOX S1\n      - bytes: 0f 01 08 0e 06 0b 03 04 09 07 02 0d 0c 00 05 0a 03 0d 04 07 0f 02 08 0e 0c 00 01 0a 06 09 0b 05 00 0e 07 0b 0a 04 0d 01 05 08 0c 06 09 03 02 0f 0d 08 0a 01 03 0f 04 02 0b 06 07 0c 00 05 0e 09 = SBOX S2\n      - bytes: 0a 00 09 0e 06 03 0f 05 01 0d 0c 07 0b 04 02 08 0d 07 00 09 03 04 06 0a 02 08 05 0e 0c 0b 0f 01 0d 06 04 09 08 0f 03 00 0b 01 02 0c 05 0a 0e 07 01 0a 0d 00 06 09 08 07 04 0f 0e 03 0b 05 02 0c = SBOX S3\n      - bytes: 07 0d 0e 03 00 06 09 0a 01 02 08 05 0b 0c 04 0f 0d 08 0b 05 06 0f 00 03 04 07 02 0c 01 0a 0e 09 0a 06 09 00 0c 0b 07 0d 0f 01 03 0e 05 02 08 04 03 0f 00 06 0a 01 0d 08 09 04 05 0b 0c 07 02 0e = SBOX S4\n      - bytes: 02 0c 04 01 07 0a 0b 06 08 05 03 0f 0d 00 0e 09 0e 0b 02 0c 04 07 0d 01 05 00 0f 0a 03 09 08 06 04 02 01 0b 0a 0d 07 08 0f 09 0c 05 06 03 00 0e 0b 08 0c 07 01 0e 02 0d 06 0f 00 09 0a 04 05 03 = SBOX S5\n      - bytes: 0c 01 0a 0f 09 02 06 08 00 0d 03 04 0e 07 05 0b 0a 0f 04 02 07 0c 09 05 06 01 0d 0e 00 0b 03 08 09 0e 0f 05 02 08 0c 03 07 00 04 0a 01 0d 0b 06 04 03 02 0c 09 05 0f 0a 0b 0e 01 07 06 00 08 0d = SBOX S6\n      - bytes: 04 0b 02 0e 0f 00 08 0d 03 0c 09 07 05 0a 06 01 0d 00 0b 07 04 09 01 0a 0e 03 05 0c 02 0f 08 06 01 04 0b 0d 0c 03 07 0e 0a 0f 06 08 00 05 09 02 06 0b 0d 08 01 04 0a 07 09 05 00 0f 0e 02 03 0c = SBOX S7\n      - bytes: 0d 02 08 04 06 0f 0b 01 0a 09 03 0e 05 00 0c 07 01 0f 0d 08 0a 03 07 04 0c 05 06 0b 00 0e 09 02 07 0b 04 01 09 0c 0e 02 00 06 0a 0d 0f 03 05 08 02 01 0e 07 04 0a 08 0d 0f 0c 09 00 03 05 06 0b = SBOX S8\n      - bytes: 39 31 29 21 19 11 09 01 3a 32 2a 22 1a 12 0a 02 3b 33 2b 23 1b 13 0b 03 3c 34 2c 24 3f 37 2f 27 1f 17 0f 07 3e 36 2e 26 1e 16 0e 06 3d 35 2d 25 1d 15 0d 05 1c 14 0c 04  = PC1\n      - bytes: 0e 11 0b 18 01 05 03 1c 0f 06 15 0a 17 13 0c 04 1a 08 10 07 1b 14 0d 02 29 34 1f 25 2f 37 1e 28 33 2d 21 30 2c 31 27 38 22 35 2e 2a 32 24 1d 20  = PC2\n      - bytes: 3a 32 2a 22 1a 12 0a 02 3c 34 2c 24 1c 14 0c 04 3e 36 2e 26 1e 16 0e 06 40 38 30 28 20 18 10 08 39 31 29 21 19 11 09 01 3b 33 2b 23 1b 13 0b 03 3d 35 2d 25 1d 15 0d 05 3f 37 2f 27 1f 17 0f 07 = Initial Permutation\n      - bytes: 28 08 30 10 38 18 40 20 27 07 2f 0f 37 17 3f 1f 26 06 2e 0e 36 16 3e 1e 25 05 2d 0d 35 15 3d 1d 24 04 2c 0c 34 14 3c 1c 23 03 2b 0b 33 13 3b 1b 22 02 2a 0a 32 12 3a 1a 21 01 29 09 31 11 39 19 = Final Permutation\n      - bytes: 20 01 02 03 04 05 04 05 06 07 08 09 08 09 0a 0b 0c 0d 0c 0d 0e 0f 10 11 10 11 12 13 14 15 14 15 16 17 18 19 18 19 1a 1b 1c 1d 1c 1d 1e 1f 20 01 = DES Expansion\n      - bytes: 10 07 14 15 1d 0c 1c 11 01 0f 17 1a 05 12 1f 0a 02 08 18 0e 20 1b 03 09 13 0d 1e 06 16 0b 04 19 = PBOX\n      - and:\n        - description: DES RawProcessBlock\n        - number: 0x18\n        - number: 0x10\n        - number: 0x8\n        - number: 0x3f\n        - characteristic: nzxor\n        - count(mnemonic(shr)): 8 or more\n        - mnemonic: ror\n      - or:\n        - description: libtomcrypt implementation\n        - bytes: 38 30 28 20 18 10 08 00 39 31 29 21 19 11 09 01 3A 32 2A 22 1A 12 0A 02 3B 33 2B 23 3E 36 2E 26 1E 16 0E 06 3D 35 2D 25 1D 15 0D 05 3C 34 2C 24 1C 14 0C 04 1B 13 0B 03 = pc1\n        - bytes: 0D 10 0A 17 00 04 02 1B 0E 05 14 09 16 12 0B 03 19 07 0F 06 1A 13 0C 01 28 33 1E 24 2E 36 1D 27 32 2C 20 2F 2B 30 26 37 21 34 2D 29 31 23 1C 1F 00 00 00 00 00 00 00 00 = pc2\n        - bytes: 00 04 01 01 00 00 00 00 00 00 01 00 04 04 01 01 04 00 01 01 04 04 01 00 04 00 00 00 00 00 01 00 00 04 00 00 00 04 01 01 04 04 01 01 00 04 00 00 04 04 00 01 04 00 01 01 00 00 00 01 04 00 00 00 04 04 00 00 00 04 00 01 00 04 00 01 00 04 01 00 00 04 01 00 00 00 01 01 00 00 01 01 04 04 00 01 04 00 01 00 04 00 00 01 04 00 00 01 04 00 01 00 00 00 00 00 04 04 00 00 04 04 01 00 00 00 00 01 00 00 01 00 04 04 01 01 04 00 00 00 00 00 01 01 00 04 01 01 00 00 00 01 00 00 00 01 00 04 00 00 04 00 01 01 00 00 01 00 00 04 01 00 04 00 00 01 00 04 00 00 04 00 00 00 04 04 00 01 04 04 01 00 04 04 01 01 04 00 01 00 00 00 01 01 04 04 00 01 04 00 00 01 04 04 00 00 04 04 01 00 00 04 01 01 04 04 00 00 00 04 00 01 00 04 00 01 00 00 00 00 04 00 01 00 00 04 01 00 00 00 00 00 04 00 01 01 = SP1\n        - bytes: 20 80 10 80 00 80 00 80 00 80 00 00 20 80 10 00 00 00 10 00 20 00 00 00 20 00 10 80 20 80 00 80 20 00 00 80 20 80 10 80 00 80 10 80 00 00 00 80 00 80 00 80 00 00 10 00 20 00 00 00 20 00 10 80 00 80 10 00 20 00 10 00 20 80 00 80 00 00 00 00 00 00 00 80 00 80 00 00 20 80 10 00 00 00 10 80 20 00 10 00 20 00 00 80 00 00 00 00 00 80 10 00 20 80 00 00 00 80 10 80 00 00 10 80 20 80 00 00 00 00 00 00 20 80 10 00 20 00 10 80 00 00 10 00 20 80 00 80 00 00 10 80 00 80 10 80 00 80 00 00 00 00 10 80 00 80 00 80 20 00 00 00 20 80 10 80 20 80 10 00 20 00 00 00 00 80 00 00 00 00 00 80 20 80 00 00 00 80 10 80 00 00 10 00 20 00 00 80 20 00 10 00 20 80 00 80 20 00 00 80 20 00 10 00 00 80 10 00 00 00 00 00 00 80 00 80 20 80 00 00 00 00 00 80 20 00 10 80 20 80 10 80 00 80 10 00 = SP2\n        - bytes: 08 02 00 00 00 02 02 08 00 00 00 00 08 00 02 08 00 02 00 08 00 00 00 00 08 02 02 00 00 02 00 08 08 00 02 00 08 00 00 08 08 00 00 08 00 00 02 00 08 02 02 08 08 00 02 00 00 00 02 08 08 02 00 00 00 00 00 08 08 00 00 00 00 02 02 08 00 02 00 00 00 02 02 00 00 00 02 08 08 00 02 08 08 02 02 00 08 02 00 08 00 02 02 00 00 00 02 00 08 02 00 08 08 00 00 00 08 02 02 08 00 02 00 00 00 00 00 08 00 02 02 08 00 00 00 08 08 00 02 00 08 02 00 00 00 00 02 00 00 02 02 08 00 02 00 08 00 00 00 00 00 02 00 00 08 00 02 00 08 02 02 08 00 02 00 08 08 00 00 08 00 02 00 00 00 00 00 00 08 00 02 08 08 02 00 08 00 00 02 00 00 00 00 08 08 02 02 08 08 00 00 00 08 02 02 00 00 02 02 00 08 00 00 08 00 00 02 08 08 02 00 08 08 02 00 00 00 00 02 08 08 02 02 00 08 00 00 00 08 00 02 08 00 02 02 00 = SP3\n        - bytes: 01 20 80 00 81 20 00 00 81 20 00 00 80 00 00 00 80 20 80 00 81 00 80 00 01 00 80 00 01 20 00 00 00 00 00 00 00 20 80 00 00 20 80 00 81 20 80 00 81 00 00 00 00 00 00 00 80 00 80 00 01 00 80 00 01 00 00 00 00 20 00 00 00 00 80 00 01 20 80 00 80 00 00 00 00 00 80 00 01 20 00 00 80 20 00 00 81 00 80 00 01 00 00 00 80 20 00 00 80 00 80 00 00 20 00 00 80 20 80 00 81 20 80 00 81 00 00 00 80 00 80 00 01 00 80 00 00 20 80 00 81 20 80 00 81 00 00 00 00 00 00 00 00 00 00 00 00 20 80 00 80 20 00 00 80 00 80 00 81 00 80 00 01 00 00 00 01 20 80 00 81 20 00 00 81 20 00 00 80 00 00 00 81 20 80 00 81 00 00 00 01 00 00 00 00 20 00 00 01 00 80 00 01 20 00 00 80 20 80 00 81 00 80 00 01 20 00 00 80 20 00 00 00 00 80 00 01 20 80 00 80 00 00 00 00 00 80 00 00 20 00 00 80 20 80 00 = SP4\n        - bytes: 00 01 00 00 00 01 08 02 00 00 08 02 00 01 00 42 00 00 08 00 00 01 00 00 00 00 00 40 00 00 08 02 00 01 08 40 00 00 08 00 00 01 00 02 00 01 08 40 00 01 00 42 00 00 08 42 00 01 08 00 00 00 00 40 00 00 00 02 00 00 08 40 00 00 08 40 00 00 00 00 00 01 00 40 00 01 08 42 00 01 08 42 00 01 00 02 00 00 08 42 00 01 00 40 00 00 00 00 00 00 00 42 00 01 08 02 00 00 00 02 00 00 00 42 00 01 08 00 00 00 08 00 00 01 00 42 00 01 00 00 00 00 00 02 00 00 00 40 00 00 08 02 00 01 00 42 00 01 08 40 00 01 00 02 00 00 00 40 00 00 08 42 00 01 08 02 00 01 08 40 00 01 00 00 00 00 00 02 00 00 08 42 00 01 08 42 00 01 08 00 00 00 00 42 00 01 08 42 00 00 08 02 00 00 00 00 00 00 08 40 00 00 00 42 00 01 08 00 00 01 00 02 00 01 00 40 00 00 08 00 00 00 00 00 00 00 08 40 00 01 08 02 00 01 00 40 = SP5\n        - bytes: 10 00 00 20 00 00 40 20 00 40 00 00 10 40 40 20 00 00 40 20 10 00 00 00 10 40 40 20 00 00 40 00 00 40 00 20 10 40 40 00 00 00 40 00 10 00 00 20 10 00 40 00 00 40 00 20 00 00 00 20 10 40 00 00 00 00 00 00 10 00 40 00 10 40 00 20 00 40 00 00 00 40 40 00 10 40 00 20 10 00 00 00 10 00 40 20 10 00 40 20 00 00 00 00 10 40 40 00 00 40 40 20 10 40 00 00 00 40 40 00 00 40 40 20 00 00 00 20 00 40 00 20 10 00 00 00 10 00 40 20 00 40 40 00 10 40 40 20 00 00 40 00 10 40 00 00 10 00 00 20 00 00 40 00 00 40 00 20 00 00 00 20 10 40 00 00 10 00 00 20 10 40 40 20 00 40 40 00 00 00 40 20 10 40 40 00 00 40 40 20 00 00 00 00 10 00 40 20 10 00 00 00 00 40 00 00 00 00 40 20 10 40 40 00 00 40 00 00 10 00 40 00 10 40 00 20 00 00 00 00 00 40 40 20 00 00 00 20 10 00 40 00 10 40 00 20 = SP6\n        - bytes: 00 00 20 00 02 00 20 04 02 08 00 04 00 00 00 00 00 08 00 00 02 08 00 04 02 08 20 00 00 08 20 04 02 08 20 04 00 00 20 00 00 00 00 00 02 00 00 04 02 00 00 00 00 00 00 04 02 00 20 04 02 08 00 00 00 08 00 04 02 08 20 00 02 00 20 00 00 08 00 04 02 00 00 04 00 00 20 04 00 08 20 04 02 00 20 00 00 00 20 04 00 08 00 00 02 08 00 00 02 08 20 04 00 08 20 00 02 00 00 00 00 00 00 04 00 08 20 00 00 00 00 04 00 08 20 00 00 00 20 00 02 08 00 04 02 08 00 04 02 00 20 04 02 00 20 04 02 00 00 00 02 00 20 00 00 00 00 04 00 08 00 04 00 00 20 00 00 08 20 04 02 08 00 00 02 08 20 00 00 08 20 04 02 08 00 00 02 00 00 04 02 08 20 04 00 00 20 04 00 08 20 00 00 00 00 00 02 00 00 00 02 08 20 04 00 00 00 00 02 08 20 00 00 00 20 04 00 08 00 00 02 00 00 04 00 08 00 04 00 08 00 00 02 00 20 00 = SP7\n        - bytes: 40 10 00 10 00 10 00 00 00 00 04 00 40 10 04 10 00 00 00 10 40 10 00 10 40 00 00 00 00 00 00 10 40 00 04 00 00 00 04 10 40 10 04 10 00 10 04 00 00 10 04 10 40 10 04 00 00 10 00 00 40 00 00 00 00 00 04 10 40 00 00 10 00 10 00 10 40 10 00 00 00 10 04 00 40 00 04 00 40 00 04 10 00 10 04 10 40 10 00 00 00 00 00 00 00 00 00 00 40 00 04 10 40 00 00 10 00 10 00 10 40 10 04 00 00 00 04 00 40 10 04 00 00 00 04 00 00 10 04 10 00 10 00 00 40 00 00 00 40 00 04 10 00 10 00 00 40 10 04 00 00 10 00 10 40 00 00 00 40 00 00 10 00 00 04 10 40 00 04 10 00 00 00 10 00 00 04 00 40 10 00 10 00 00 00 00 40 10 04 10 40 00 04 00 40 00 00 10 00 00 04 10 00 10 00 10 40 10 00 10 00 00 00 00 40 10 04 10 00 10 04 00 00 10 04 00 40 10 00 00 40 10 00 00 40 00 04 00 00 00 00 10 00 10 04 10 = SP8\n",
                        "name": "encrypt data using DES",
                        "description": "data-manipulation/encryption/des"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "william.ballenthin@mandiant.com",
                            "johnk3r",
                            "joakim@intezer.com",
                            "michael.hunhoff@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: resolve DNS\n    namespace: communication/dns\n    authors:\n      - william.ballenthin@mandiant.com\n      - johnk3r\n      - joakim@intezer.com\n      - michael.hunhoff@mandiant.com\n    scope: function\n    mbc:\n      - Communication::DNS Communication::Resolve [C0011.001]\n    examples:\n      - 17264e3126a97c319a6a0c61e6da951e:0x5FDC25D0\n  features:\n    - or:\n      - api: ws2_32.gethostbyname\n      - api: DnsQuery_A\n      - api: DnsQuery_W\n      - api: DnsQuery_UTF8\n      - api: DnsQueryEx\n      - api: getaddrinfo\n      - api: GetAddrInfo\n      - api: GetAddrInfoEx\n      - api: gethostbyname\n      - api: getaddrinfo\n      - api: getnameinfo\n      - api: gethostent\n      - api: System.Net.Dns::GetHostAddresses\n",
                        "name": "resolve DNS",
                        "description": "communication/dns"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "joakim@intezer.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: write file on Linux\n    namespace: host-interaction/file-system/write\n    authors:\n      - joakim@intezer.com\n    scope: function\n    mbc:\n      - File System::Writes File [C0052]\n    examples:\n      - 7351f8a40c5450557b24622417fc478d:0x401E14\n  features:\n    - and:\n      - os: linux\n      - or:\n        - api: fputc\n        - api: fputs\n        - api: putc\n        - api: write\n        - api: fputwc\n        - api: putwc\n        - api: fputws\n        - api: write\n        - api: fwrite\n        - api: putwchar\n      - optional:\n        - match: create or open file\n",
                        "name": "write file on Linux",
                        "description": "host-interaction/file-system/write"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "rule_src": "rule:\n  meta:\n    name: contain loop\n    authors:\n      - moritz.raabe@mandiant.com\n    lib: true\n    scope: function\n    examples:\n      - 08AC667C65D36D6542917655571E61C8:0x406EAA\n  features:\n    - or:\n      - characteristic: loop\n      - characteristic: tight loop\n      - characteristic: recursive call\n",
                        "name": "contain loop",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ]
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: encrypt data using AES via x86 extensions\n    namespace: data-manipulation/encryption/aes\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: function\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information [T1027]\n    mbc:\n      - Defense Evasion::Obfuscated Files or Information::Encryption-Standard Algorithm [E1027.m05]\n      - Cryptography::Encrypt Data::AES [C0027.001]\n  features:\n    - or:\n      - mnemonic: aesenc = Perform One Round of an AES Encryption Flow\n      - mnemonic: vaesenc\n      - mnemonic: aesenclast = Perform Last Round of an AES Encryption Flow\n      - mnemonic: vaesenclast\n      - mnemonic: aesimc = Perform the AES InvMixColumn Transformation\n      - mnemonic: vaesimc\n      - mnemonic: aeskeygenassist = AES Round Key Generation Assist\n      - mnemonic: vaeskeygenassist\n",
                        "name": "encrypt data using AES via x86 extensions",
                        "description": "data-manipulation/encryption/aes"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com",
                            "anushka.virgaonkar@mandiant.com",
                            "michael.hunhoff@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: encode data using Base64\n    namespace: data-manipulation/encoding/base64\n    authors:\n      - moritz.raabe@mandiant.com\n      - anushka.virgaonkar@mandiant.com\n      - michael.hunhoff@mandiant.com\n    scope: function\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information [T1027]\n    mbc:\n      - Defense Evasion::Obfuscated Files or Information::Encoding-Standard Algorithm [E1027.m02]\n      - Data::Encode Data::Base64 [C0026.001]\n    examples:\n      - BFB9B5391A13D0AFD787E87AB90F14F5:0x1314889C\n      - 074072B261FC27B65C72671F13510C05:0x100049B2\n      - 5DB2D2BE20D59AA0BE6709A6850F1775:0x18001CC30\n      - 08AC667C65D36D6542917655571E61C8:0x406EAA\n  features:\n    - or:\n      - and:\n        - mnemonic: shl\n        - mnemonic: shr\n        - number: 0x3F = modulo 64\n        - or:\n          - number: 0x3D = '='\n          - number: 0x3D3D = '=='\n        - match: contain loop\n        - optional:\n          - number: 2\n          - number: 3\n          - number: 4\n          - number: 6\n          - number: 0xF\n          - string: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"\n      - api: System.Convert::ToBase64String\n      - api: System.Convert::ToBase64CharArray\n      - api: System.Convert::TryToBase64Chars\n",
                        "name": "encode data using Base64",
                        "description": "data-manipulation/encoding/base64"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: encrypt data using RC4 PRGA\n    namespace: data-manipulation/encryption/rc4\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: function\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information [T1027]\n    mbc:\n      - Cryptography::Encrypt Data::RC4 [C0027.009]\n      - Cryptography::Generate Pseudo-random Sequence::RC4 PRGA [C0021.004]\n    examples:\n      - 34404A3FB9804977C6AB86CB991FB130:0x403DB0\n      - 34404A3FB9804977C6AB86CB991FB130:0x403E50\n      - 9324D1A8AE37A36AE560C37448C9705A:0x4049F0\n      - 73CE04892E5F39EC82B00C02FC04C70F:0x4064C6\n  features:\n    - and:\n      # TODO: maybe add characteristic for nzxor reg size\n      - count(characteristic(nzxor)): 1\n      - or:\n        - match: calculate modulo 256 via x86 assembly\n        # compiler may do this via zero-extended mov from 8-bit register\n        - count(mnemonic(movzx)): 4 or more\n      # should not call (many) functions\n      - count(characteristic(calls from)): (0, 4)\n      # should not be too simple or too complex (50 is picked by intuition)\n      - count(basic blocks): (4, 50)\n      - match: contain loop\n      - optional:\n        - or:\n          - number: 0xFF\n          - number: 0x100\n",
                        "name": "encrypt data using RC4 PRGA",
                        "description": "data-manipulation/encryption/rc4"
                    },
                    {
                        "description": "data-manipulation/hashing/fnv : can be any Fowler-Noll-Vo (FNV) hash variant, including FNV-1, FNV-1a, FNV-0",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "https://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function"
                            },
                            {
                                "ref": "http://isthe.com/chongo/tech/comp/fnv/"
                            },
                            {
                                "ref": "https://create.stephan-brumme.com/fnv-hash/"
                            }
                        ],
                        "rule_src": "rule:\n  meta:\n    name: hash data using fnv\n    namespace: data-manipulation/hashing/fnv\n    authors:\n      - moritz.raabe@mandiant.com\n      - \"@_re_fox\"\n      - michael.hunhoff@mandiant.com\n    description: can be any Fowler-Noll-Vo (FNV) hash variant, including FNV-1, FNV-1a, FNV-0\n    scope: function\n    mbc:\n      - Data::Non-Cryptographic Hash::FNV [C0030.005]\n    references:\n      - https://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function\n      - http://isthe.com/chongo/tech/comp/fnv/\n      - https://create.stephan-brumme.com/fnv-hash/\n    examples:\n      - ad4229879180e267f431ac6666b6a0a2:0x14007B4D4\n      - 09BF850BE5DA44A1C3629A1F62813A83:0x10006010\n  features:\n    - and:\n      - optional:\n        - characteristic: loop\n        - number: 0xcbf29ce484222325 = FNV_offset_basis, unused by FNV-0\n        - number: 0x811c9dc5 = FNV_offset_basis, unused by FNV-0\n        - and:\n          - number: 0xcbf29ce4 = FNV_offset_basis 64 bits, 32-bit value\n          - number: 0x84222325 = FNV_offset_basis 64 bits, 32-bit value\n      - or:\n        - number: 0x100000001b3 = FNV prime\n        - number: 0x01000193 = FNV prime\n        - and:\n          - number: 0x100 = FNV prime 64 bits, split in DWORD\n          - number: 0x1b3 = FNV prime 64 bits, split in DWORD\n      - basic block:\n        # FNV-1 hash does multiply then XOR\n        # FNV-1a hash does XOR then multiply\n        - and:\n          - characteristic: nzxor\n          - or:\n            - mnemonic: imul\n            - mnemonic: mul\n            - api: _allmul\n",
                        "authors": [
                            "moritz.raabe@mandiant.com",
                            "@_re_fox",
                            "michael.hunhoff@mandiant.com"
                        ],
                        "name": "hash data using fnv"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "@_re_fox"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: parse credit card information\n    namespace: collection/credit-card\n    authors:\n      - \"@_re_fox\"\n    scope: function\n    mbc:\n      - Data::Check String [C0019]\n    examples:\n      - 1d8fd13c890060464019c0f07b928b1a:0x402860\n  features:\n    - and:\n      - 3 or more:\n        - instruction:\n          - mnemonic: cmp\n          - number: 0x5E = '^' (Track 1 separator)\n        - instruction:\n          - mnemonic: cmp\n          - number: 0x3D = '=' (Track 2 separator)\n        - instruction:\n          - mnemonic: cmp\n          - number: 0x25 = '%' (Track 1 start sentinel)\n        - instruction:\n          - mnemonic: cmp\n          - number: 0x42 = 'B' (Format code)\n        - instruction:\n          - mnemonic: cmp\n          - number: 0x44 = 'D' (Format code)\n        - instruction:\n          - mnemonic: cmp\n          - number: 0x3F = '?' (Track 1 & 2 end sentinel)\n        - instruction:\n          - mnemonic: cmp\n          - number: 0x3B = ';' (Track 2 start sentinel)\n      - not:\n        - description: if a function also compares these non-hex characters it's most likely NOT parsing CC data\n        - and:\n          - instruction:\n            - mnemonic: cmp\n            - number: 0x6D = 'm'\n          - instruction:\n            - mnemonic: cmp\n            - number: 0x6E = 'n'\n          - instruction:\n            - mnemonic: cmp\n            - number: 0x6F = 'o'\n          - instruction:\n            - mnemonic: cmp\n            - number: 0x70 = 'p'\n",
                        "name": "parse credit card information",
                        "description": "collection/credit-card"
                    },
                    {
                        "description": "data-manipulation/encryption/aes",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "https://github.com/JusticeRage/Manalyze/blob/8e77642c911d5d82b5f43b198667ab8c77a88763/bin/yara_rules/findcrypt.yara#L351"
                            },
                            {
                                "ref": "https://github.com/creaktive/tsh/blob/53b822b9a07d8cc65f1f31c915cf834a2944e833/aes.c"
                            }
                        ],
                        "rule_src": "# generated using capa explorer for IDA Pro\nrule:\n  meta:\n    name: encrypt data using AES\n    namespace: data-manipulation/encryption/aes\n    authors:\n      - william.ballenthin@mandiant.com\n      - Ivan Kwiatkowski (@JusticeRage)\n    scope: function\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information [T1027]\n    mbc:\n      - Defense Evasion::Obfuscated Files or Information::Encryption-Standard Algorithm [E1027.m05]\n      - Cryptography::Encrypt Data::AES [C0027.001]\n    references:\n      - https://github.com/JusticeRage/Manalyze/blob/8e77642c911d5d82b5f43b198667ab8c77a88763/bin/yara_rules/findcrypt.yara#L351\n      - https://github.com/creaktive/tsh/blob/53b822b9a07d8cc65f1f31c915cf834a2944e833/aes.c\n  features:\n    - or:\n      - bytes: 63 7c 77 7b f2 6b 6f c5 30 01 67 2b fe d7 ab 76 = AES_SBOX_ENC\n      - bytes: 63 00 00 00 00 00 00 00 7c 00 00 00 00 00 00 00 77 00 00 00 00 00 00 00 7b 00 00 00 00 00 00 00 f2 00 00 00 00 00 00 00 6b 00 00 00 00 00 00 00 6f 00 00 00 00 00 00 00 c5 00 00 00 00 00 00 00 30 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 67 00 00 00 00 00 00 00 2b 00 00 00 00 00 00 00 fe 00 00 00 00 00 00 00 d7 00 00 00 00 00 00 00 ab 00 00 00 00 00 00 00 76 = AES_SBOX_ENC\n      - bytes: 52 09 6a d5 30 36 a5 38 bf 40 a3 9e 81 f3 d7 fb = AES_SBOX_DEC\n      - bytes: 52 00 00 00 00 00 00 00 09 00 00 00 00 00 00 00 6a 00 00 00 00 00 00 00 d5 00 00 00 00 00 00 00 30 00 00 00 00 00 00 00 36 00 00 00 00 00 00 00 a5 00 00 00 00 00 00 00 38 00 00 00 00 00 00 00 bf 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00 a3 00 00 00 00 00 00 00 9e 00 00 00 00 00 00 00 81 00 00 00 00 00 00 00 f3 00 00 00 00 00 00 00 d7 00 00 00 00 00 00 00 fb = AES_SBOX_DEC\n      - bytes: a5 63 63 c6 84 7c 7c f8 99 77 77 ee 8d 7b 7b f6 = AES_T0_ENC\n      - bytes: a5 63 63 c6 00 00 00 00 84 7c 7c f8 00 00 00 00 99 77 77 ee 00 00 00 00 8d 7b 7b f6 = AES_T0_ENC\n      - bytes: 63 63 c6 a5 7c 7c f8 84 77 77 ee 99 7b 7b f6 8d = AES_T1_ENC\n      - bytes: 63 63 c6 a5 00 00 00 00 7c 7c f8 84 00 00 00 00 77 77 ee 99 00 00 00 00 7b 7b f6 8d = AES_T1_ENC\n      - bytes: 63 c6 a5 63 7c f8 84 7c 77 ee 99 77 7b f6 8d 7b = AES_T2_ENC\n      - bytes: 63 c6 a5 63 00 00 00 00 7c f8 84 7c 00 00 00 00 77 ee 99 77 00 00 00 00 7b f6 8d 7b = AES_T2_ENC\n      - bytes: c6 a5 63 63 f8 84 7c 7c ee 99 77 77 f6 8d 7b 7b = AES_T3_ENC\n      - bytes: c6 a5 63 63 00 00 00 00 f8 84 7c 7c 00 00 00 00 ee 99 77 77 00 00 00 00 f6 8d 7b 7b = AES_T3_ENC\n      - bytes: 63 63 63 63 7c 7c 7c 7c 77 77 77 77 7b 7b 7b 7b = AES_T4_ENC\n      - bytes: 50 a7 f4 51 53 65 41 7e c3 a4 17 1a 96 5e 27 3a = AES_T0_DEC\n      - bytes: 50 a7 f4 51 00 00 00 00 53 65 41 7e 00 00 00 00 c3 a4 17 1a 00 00 00 00 96 5e 27 3a = AES_T0_DEC\n      - bytes: a7 f4 51 50 65 41 7e 53 a4 17 1a c3 5e 27 3a 96 = AES_T1_DEC\n      - bytes: a7 f4 51 50 00 00 00 00 65 41 7e 53 00 00 00 00 a4 17 1a c3 00 00 00 00 5e 27 3a 96 = AES_T1_DEC\n      - bytes: f4 51 50 a7 41 7e 53 65 17 1a c3 a4 27 3a 96 5e = AES_T2_DEC\n      - bytes: f4 51 50 a7 00 00 00 00 41 7e 53 65 00 00 00 00 17 1a c3 a4 00 00 00 00 27 3a 96 5e = AES_T2_DEC\n      - bytes: 51 50 a7 f4 7e 53 65 41 1a c3 a4 17 3a 96 5e 27 = AES_T3_DEC\n      - bytes: 51 50 a7 f4 00 00 00 00 7e 53 65 41 00 00 00 00 1a c3 a4 17 00 00 00 00 3a 96 5e 27 = AES_T3_DEC\n      - bytes: 52 52 52 52 09 09 09 09 6a 6a 6a 6a d5 d5 d5 d5 = AES_T4_DEC\n",
                        "authors": [
                            "william.ballenthin@mandiant.com",
                            "Ivan Kwiatkowski (@JusticeRage)"
                        ],
                        "name": "encrypt data using AES"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "william.ballenthin@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: reference AES constants\n    namespace: data-manipulation/encryption/aes\n    authors:\n      - william.ballenthin@mandiant.com\n    scope: function\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information [T1027]\n  features:\n    - or:\n      - bytes: 50 a7 f4 51 53 65 41 7e = d-0\n      - bytes: 63 7c 77 7b f2 6b 6f c5 = s-box\n      - bytes: 52 09 6a d5 30 36 a5 38 = inv-s-box\n",
                        "name": "reference AES constants",
                        "description": "data-manipulation/encryption/aes"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: decrypt data using AES via x86 extensions\n    namespace: data-manipulation/encryption/aes\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: function\n    att&ck:\n      - Defense Evasion::Deobfuscate/Decode Files or Information [T1140]\n    mbc:\n      - Cryptography::Decrypt Data::AES [C0031.001]\n    examples:\n      - 66602B5FAB602CB4E6F754748D249542:0x4097D0\n  features:\n    - or:\n      - mnemonic: aesdec = Perform One Round of an AES Decryption Flow\n      - mnemonic: vaesdec\n      - mnemonic: aesdeclast = Perform Last Round of an AES Decryption Flow\n      - mnemonic: vaesdeclast\n",
                        "name": "decrypt data using AES via x86 extensions",
                        "description": "data-manipulation/encryption/aes"
                    },
                    {
                        "description": "data-manipulation/hmac",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "https://tools.ietf.org/html/rfc2104"
                            },
                            {
                                "ref": "https://tools.ietf.org/html/rfc4634"
                            },
                            {
                                "ref": "https://github.com/ogay/hmac"
                            }
                        ],
                        "rule_src": "rule:\n  meta:\n    name: authenticate HMAC\n    namespace: data-manipulation/hmac\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: function\n    mbc:\n      - Cryptography::Hashed Message Authentication Code [C0061]\n    references:\n      - https://tools.ietf.org/html/rfc2104\n      - https://tools.ietf.org/html/rfc4634\n      - https://github.com/ogay/hmac\n    examples:\n      - mimikatz.exe_:0x403408\n  features:\n    - and:\n      # block-sized inner padding, consisting of repeated bytes valued 0x36\n      - number: 0x36 = inner padding byte value\n      # block-sized outer padding, consisting of repeated bytes valued 0x5c\n      - number: 0x5C = outer padding byte value\n      - match: contain loop\n      - count(characteristic(nzxor)): 2 or more\n      - optional:\n        - description: block size\n        - number: 64 = MD5, SHA-1, SHA-224, or SHA-256\n        - number: 128 = SHA-384 or SHA-512\n",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "name": "authenticate HMAC"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: encrypt data using RC4 KSA\n    namespace: data-manipulation/encryption/rc4\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: function\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information [T1027]\n    mbc:\n      - Cryptography::Encrypt Data::RC4 [C0027.009]\n      - Cryptography::Encryption Key::RC4 KSA [C0028.002]\n    examples:\n      - 34404A3FB9804977C6AB86CB991FB130:0x403D40\n      - 9324D1A8AE37A36AE560C37448C9705A:0x404950\n      - 2B8BEC5BCB1777EAA155D832F7AFC797:0x405C42\n      - 73CE04892E5F39EC82B00C02FC04C70F:0x40646E\n  features:\n    - or:\n      - and:\n        - basic block:\n          - and:\n            - description: initialize S\n            # misses if regular loop is used,\n            # however we cannot model that a loop contains a certain number\n            - characteristic: tight loop\n            - or:\n              - number: 0xFF\n              - number: 0x100\n        - or:\n          - description: modulo 256\n          - match: calculate modulo 256 via x86 assembly\n          - basic block:\n            - and:\n              - description: modulo via zero-extended mov from 8-bit register\n              - count(mnemonic(movzx)): 2 or more\n              # avoid false positives; filter out unexpected instructions\n              - not:\n                - or:\n                  - mnemonic: shl\n                  - mnemonic: rol\n                  - characteristic: nzxor\n        - or:\n          - description: modulo key length\n          - mnemonic: div\n          - mnemonic: idiv\n      - and:\n        - description: write DWORDs instead of bytes\n        - or:\n          - number: 0x03020100\n          - number: 0xFFFEFDFC\n        - instruction:\n          - or:\n            - mnemonic: add\n            - mnemonic: sub\n          - number: 0x04040404\n",
                        "name": "encrypt data using RC4 KSA",
                        "description": "data-manipulation/encryption/rc4"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com",
                            "michael.hunhoff@mandiant.com",
                            "william.ballenthin@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: hash data using SHA1\n    namespace: data-manipulation/hashing/sha1\n    authors:\n      - moritz.raabe@mandiant.com\n      - michael.hunhoff@mandiant.com\n      - william.ballenthin@mandiant.com\n    scope: function\n    mbc:\n      - Cryptography::Cryptographic Hash::SHA1 [C0029.002]\n    examples:\n      - D063B1804E8D2BB26BD2E097141C1BBC:0x4344D0\n      - 91B08896FBDA9EDB8B6F93A6BC811EC6:0x180004878\n  features:\n    - or:\n      - and:\n        - description: Magic initialization constants used in SHA1\n        - number: 0x67452301 = A, also used in MD5, RIPEMD-128, RIPEMD-160, RIPEMD-256, and RIPEMD-320\n        - number: 0xEFCDAB89 = B, also used in MD5, RIPEMD-128, RIPEMD-160, RIPEMD-256, and RIPEMD-320\n        - number: 0x98BADCFE = C, also used in MD5, RIPEMD-128, RIPEMD-160, RIPEMD-256, and RIPEMD-320\n        - number: 0x10325476 = D, also used in MD5, RIPEMD-128, RIPEMD-160, RIPEMD-256, and RIPEMD-320\n        - number: 0xC3D2E1F0 = likely SHA1 but also used in RIPEMD-160 and RIPEMD-320\n      - and:\n        - number: 0x5A827999 = K(t) (0 <= t <= 19), also used in RIPEMD-128, RIPEMD-160, RIPEMD-256, and RIPEMD-320\n        - number: 0x6ED9EBA1 = K(t) (20 <= t <= 39), also used in RIPEMD-128, RIPEMD-160, RIPEMD-256, and RIPEMD-320\n        - number: 0x8F1BBCDC = K(t) (40 <= t <= 59), also used in RIPEMD-128, RIPEMD-160, RIPEMD-256, and RIPEMD-320\n        - number: 0xCA62C1D6 = K(t) (60 <= t <= 79), also used in RIPEMD-160 and RIPEMD-320\n      - basic block:\n        - and:\n          - number: 0x8004 = CALG_SHA1\n          - api: advapi32.CryptCreateHash\n      - and:\n        - api: System.Security.Cryptography.SHA1Managed::ctor\n        - optional:\n          - api: System.Security.Cryptography.HashAlgorithm::ComputeHash\n",
                        "name": "hash data using SHA1",
                        "description": "data-manipulation/hashing/sha1"
                    },
                    {
                        "description": "data-manipulation/hashing/sha256",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "https://www.rfc-editor.org/rfc/rfc6234"
                            }
                        ],
                        "rule_src": "rule:\n  meta:\n    name: hash data using SHA256\n    namespace: data-manipulation/hashing/sha256\n    authors:\n      - moritz.raabe@mandiant.com\n      - anushka.virgaonkar@mandiant.com\n      - william.ballenthin@mandiant.com\n    scope: function\n    mbc:\n      - Cryptography::Cryptographic Hash::SHA256 [C0029.003]\n    references:\n      - https://www.rfc-editor.org/rfc/rfc6234\n    examples:\n      - C0CFFCF211035A839E28D542DE300298:0x180011400\n      - 6CC148363200798A12091B97A17181A1:0x140120240\n      - 44d40faf3f1fe4ed969befab7afcd2f0:0x10033570\n  features:\n    - or:\n      - and:\n        - number: 0x6A09E667 = H(0)0\n        - number: 0xBB67AE85 = H(0)1\n        - number: 0x3C6EF372 = H(0)2\n        - number: 0xA54FF53A = H(0)3\n        - number: 0x510E527F = H(0)4\n        - number: 0x9B05688C = H(0)5\n        - number: 0x1F83D9AB = H(0)6\n        - number: 0x5BE0CD19 = H(0)7\n      - bytes: 67 E6 09 6A 85 AE 67 BB 72 F3 6E 3C 3A F5 4F A5 7F 52 0E 51 8C 68 05 9B AB D9 83 1F 19 CD E0 5B = H(0)\n      - and:\n        # there are 64 constants but we'll only include 8 here for simplicity\n        - number: 0x428a2f98\n        - number: 0x71374491\n        - number: 0xb5c0fbcf\n        - number: 0xe9b5dba5\n        - number: 0x3956c25b\n        - number: 0x59f111f1\n        - number: 0x923f82a4\n        - number: 0xab1c5ed5\n        - not:\n          - or:\n            - number: 0xd728ae22 = lower half of SHA512 constant, 0x428a2f98d728ae22\n            - number: 0x23ef65cd = lower half of SHA512 constant, 0x7137449123ef65cd\n      - and:\n        - format: dotnet\n        - or:\n          - api: System.Security.Cryptography.SHA256Managed::Initialize\n          - api: System.Security.Cryptography.SHA256CryptoServiceProvider::Initialize\n          - api: System.Security.Cryptography.SHA256::Create\n          - api: System.Security.Cryptography.SHA256Managed::ctor\n        - api: System.Security.Cryptography.HashAlgorithm::ComputeHash\n",
                        "authors": [
                            "moritz.raabe@mandiant.com",
                            "anushka.virgaonkar@mandiant.com",
                            "william.ballenthin@mandiant.com"
                        ],
                        "name": "hash data using SHA256"
                    },
                    {
                        "description": "data-manipulation/hashing/md5",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "https://github.com/rwfpl/rewolf-x86-virtualizer/blob/master/src/test_app/main.cpp"
                            }
                        ],
                        "rule_src": "rule:\n  meta:\n    name: hash data with MD5\n    namespace: data-manipulation/hashing/md5\n    authors:\n      - moritz.raabe@mandiant.com\n      - anushka.virgaonkar@mandiant.com\n      - michael.hunhoff@mandiant.com\n    scope: function\n    mbc:\n      - Cryptography::Cryptographic Hash::MD5 [C0029.001]\n    references:\n      - https://github.com/rwfpl/rewolf-x86-virtualizer/blob/master/src/test_app/main.cpp\n    examples:\n      - Practical Malware Analysis Lab 05-01.dll_:0x100108ED\n  features:\n    - or:\n      - and:\n        - description: magic initialization constants from MD4 and MD5\n        - number: 0x67452301 = A, also used in SHA1, RIPEMD-128, RIPEMD-160, RIPEMD-256, and RIPEMD-320\n        - number: 0xefcdab89 = B, also used in SHA1, RIPEMD-128, RIPEMD-160, RIPEMD-256, and RIPEMD-320\n        - number: 0x98badcfe = C, also used in SHA1, RIPEMD-128, RIPEMD-160, RIPEMD-256, and RIPEMD-320\n        - number: 0x10325476 = D, also used in SHA1, RIPEMD-128, RIPEMD-160, RIPEMD-256, and RIPEMD-320\n        - not:\n          - number: 0xc3d2e1f0 = likely SHA1 but also used in RIPEMD-160 and RIPEMD-320\n        - optional:\n          - description: specific compilation from https://github.com/rwfpl/rewolf-x86-virtualizer/blob/master/src/test_app/main.cpp\n          - and:\n            - offset: -0x28955B88\n            - offset: -0x173848AA\n      - basic block:\n        - and:\n          - number: 0x8003 = CALG_MD5\n          - api: advapi32.CryptCreateHash\n      - and:\n        - format: dotnet\n        - or:\n          - api: System.Security.Cryptography.MD5::Create\n          - api: System.Security.Cryptography.MD5CryptoServiceProvider::ctor\n        - optional:\n          - api: System.Security.Cryptography.HashAlgorithm::ComputeHash\n",
                        "authors": [
                            "moritz.raabe@mandiant.com",
                            "anushka.virgaonkar@mandiant.com",
                            "michael.hunhoff@mandiant.com"
                        ],
                        "name": "hash data with MD5"
                    },
                    {
                        "description": "data-manipulation/hashing/sha512",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "https://www.rfc-editor.org/rfc/rfc6234"
                            }
                        ],
                        "rule_src": "rule:\n  meta:\n    name: hash data using SHA512\n    namespace: data-manipulation/hashing/sha512\n    authors:\n      - william.ballenthin@mandiant.com\n    scope: function\n    references:\n      - https://www.rfc-editor.org/rfc/rfc6234\n    examples:\n      - 1195d0d18be9362fb8dd9e1738404c9d:0x404FC0\n      - 44d40faf3f1fe4ed969befab7afcd2f0:0x1003D2F0\n  features:\n    - or:\n      - and:\n        - number: 0x6a09e667f3bcc908 = H(0)0\n        - number: 0xbb67ae8584caa73b = H(0)1\n        - number: 0x3c6ef372fe94f82b = H(0)2\n        - number: 0xa54ff53a5f1d36f1 = H(0)3\n        - number: 0x510e527fade682d1 = H(0)4\n        - number: 0x9b05688c2b3e6c1f = H(0)5\n        - number: 0x1f83d9abfb41bd6b = H(0)6\n        - number: 0x5be0cd19137e2179 = H(0)7\n      - and:\n        - or:\n          - number: 0x428a2f98d728ae22\n          - and:\n            - number: 0x428a2f98\n            - number: 0xd728ae22\n        - or:\n          - number: 0x7137449123ef65cd\n          - and:\n            - number: 0x71374491\n            - number: 0x23ef65cd\n        - or:\n          - number: 0xb5c0fbcfec4d3b2f\n          - and:\n            - number: 0xb5c0fbcf\n            - number: 0xec4d3b2f\n        - or:\n          - number: 0xe9b5dba58189dbbc\n          - and:\n            - number: 0xe9b5dba5\n            - number: 0x8189dbbc\n        - or:\n          - number: 0x3956c25bf348b538\n          - and:\n            - number: 0x3956c25b\n            - number: 0xf348b538\n        - or:\n          - number: 0x59f111f1b605d019\n          - and:\n            - number: 0x59f111f1\n            - number: 0xb605d019\n        - or:\n          - number: 0x923f82a4af194f9b\n          - and:\n            - number: 0x923f82a4\n            - number: 0xaf194f9b\n        - or:\n          - number: 0xab1c5ed5da6d8118\n          - and:\n            - number: 0xab1c5ed5\n            - number: 0xda6d8118\n      - bytes: 08 C9 BC F3 67 E6 09 6A 3B A7 CA 84 85 AE 67 BB 2B F8 94 FE 72 F3 6E 3C F1 36 1D 5F 3A F5 4F A5 D1 82 E6 AD 7F 52 0E 51 1F 6C 3E 2B 8C 68 05 9B 6B BD 41 FB AB D9 83 1F 79 21 7E 13 19 CD E0 5B = H(0)\n",
                        "authors": [
                            "william.ballenthin@mandiant.com"
                        ],
                        "name": "hash data using SHA512"
                    },
                    {
                        "description": "data-manipulation/hashing/sha384",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "https://www.rfc-editor.org/rfc/rfc6234"
                            }
                        ],
                        "rule_src": "rule:\n  meta:\n    name: hash data using SHA384\n    namespace: data-manipulation/hashing/sha384\n    authors:\n      - william.ballenthin@mandiant.com\n    scope: function\n    references:\n      - https://www.rfc-editor.org/rfc/rfc6234\n    examples:\n      - 44d40faf3f1fe4ed969befab7afcd2f0:0x1003D970\n  features:\n    - or:\n      - and:\n        - number: 0xcbbb9d5dc1059ed8 = H(0)0\n        - number: 0x629a292a367cd507 = H(0)1\n        - number: 0x9159015a3070dd17 = H(0)2\n        - number: 0x152fecd8f70e5939 = H(0)3\n        - number: 0x67332667ffc00b31 = H(0)4\n        - number: 0x8eb44a8768581511 = H(0)5\n        - number: 0xdb0c2e0d64f98fa7 = H(0)6\n        - number: 0x47b5481dbefa4fa4 = H(0)7\n      - bytes: D8 9E 05 C1 5D 9D BB CB 07 D5 7C 36 2A 29 9A 62 17 DD 70 30 5A 01 59 91 39 59 0E F7 D8 EC 2F 15 31 0B C0 FF 67 26 33 67 11 15 58 68 87 4A B4 8E A7 8F F9 64 0D 2E 0C DB A4 4F FA BE 1D 48 B5 47 = H(0)\n",
                        "authors": [
                            "william.ballenthin@mandiant.com"
                        ],
                        "name": "hash data using SHA384"
                    },
                    {
                        "description": "data-manipulation/encryption/salsa20",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "http://cr.yp.to/snuffle/ecrypt.c"
                            }
                        ],
                        "rule_src": "rule:\n  meta:\n    name: encrypt data using Salsa20 or ChaCha\n    namespace: data-manipulation/encryption/salsa20\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: function\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information [T1027]\n    references:\n      - http://cr.yp.to/snuffle/ecrypt.c\n  features:\n    # The constant words spell \"expand 32-byte k\" in ASCII (i.e. the 4 words are \"expa\", \"nd 3\", \"2-by\", and \"te k\")\n    - or:\n      - description: part of key setup\n      - string: \"expand 32-byte k = sigma\"\n      - string: \"expand 16-byte k = tau\"\n      # if sigma and tau are in contiguous memory, may result in concatenated string\n      - string: \"expand 32-byte kexpand 16-byte k\"\n      - and:\n        - string: \"expa\"\n        - string: \"nd 3\"\n        - string: \"2-by\"\n        - string: \"te k\"\n      - and:\n        - number: 0x61707865 = \"apxe\"\n        - number: 0x3320646E = \"3 dn\"\n        - number: 0x79622D32 = \"yb-2\"\n        - number: 0x6B206574 = \"k et\"\n",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "name": "encrypt data using Salsa20 or ChaCha"
                    },
                    {
                        "description": "anti-analysis/anti-debugging/debugger-detection",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/SoftwareBreakpoints.cpp"
                            },
                            {
                                "ref": "https://anti-debug.checkpoint.com/techniques/assembly.html"
                            }
                        ],
                        "rule_src": "rule:\n  meta:\n    name: check for software breakpoints\n    namespace: anti-analysis/anti-debugging/debugger-detection\n    authors:\n      - michael.hunhoff@mandiant.com\n    scope: function\n    mbc:\n      - Anti-Behavioral Analysis::Debugger Detection::Software Breakpoints [B0001.025]\n    references:\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/SoftwareBreakpoints.cpp\n      - https://anti-debug.checkpoint.com/techniques/assembly.html\n    examples:\n      - al-khaser_x86.exe_:0x431020\n  features:\n    - and:\n      - or:\n        - instruction:\n          - mnemonic: cmp\n          - number: 0xCC = INT3\n        - and:\n          - description: INT3 (long form)\n          - instruction:\n            - mnemonic: cmp\n            - number: 0xCD = INT3 (long form byte 1)\n          - instruction:\n            - mnemonic: cmp\n            - number: 0x03 = INT3 (long form byte 2)\n      - match: contain loop\n",
                        "authors": [
                            "michael.hunhoff@mandiant.com"
                        ],
                        "name": "check for software breakpoints"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "michael.hunhoff@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: compiled with Go\n    namespace: compiler/go\n    authors:\n      - michael.hunhoff@mandiant.com\n    scope: file\n    examples:\n      - 49a34cfbeed733c24392c9217ef46bb6\n  features:\n    - or:\n      - string: /^Go build ID:/\n      - substring: \"go.buildid\"\n      - string: /^Go buildinf:/\n      - substring: \"go1.\"\n      - substring: \"runtime.main\"\n      - substring: \"main.main\"\n      - substring: \"runtime.gcWork\"\n",
                        "name": "compiled with Go",
                        "description": "compiler/go"
                    },
                    {
                        "description": "linking/static/wolfssl",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "https://www.wolfssl.com/"
                            },
                            {
                                "ref": "https://github.com/wolfSSL/wolfssl/blob/2841b5c93b87311dadcf2278151df7453e56db96/wolfssl/internal.h#L4646"
                            }
                        ],
                        "rule_src": "rule:\n  meta:\n    name: linked against wolfSSL\n    namespace: linking/static/wolfssl\n    authors:\n      - jakub.jozwiak@mandiant.com\n    scope: file\n    mbc:\n      - Cryptography::Crypto Library [C0059]\n    references:\n      - https://www.wolfssl.com/\n      - https://github.com/wolfSSL/wolfssl/blob/2841b5c93b87311dadcf2278151df7453e56db96/wolfssl/internal.h#L4646\n    examples:\n      - 5789181cba467fa940cdce809b88b9bf7e0e9d4e079e32a68d2b911a8cc47da9\n  features:\n    - or:\n      - string: \"SSLeay wolfSSL compatibility\"\n      - string: \"wolfSSL_Init\"\n      - string: \"Please supply a buffer for error string\"\n      - 3 or more:\n        - substring: \"CLNTSRVR\"\n        - substring: \"server finished\"\n        - substring: \"client finished\"\n        - substring: \"DOGNGRD\"\n        - substring: \"DOWNGRD\"\n",
                        "authors": [
                            "jakub.jozwiak@mandiant.com"
                        ],
                        "name": "linked against wolfSSL"
                    },
                    {
                        "description": "anti-analysis/anti-vm/vm-detection",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/VMWare.cpp"
                            }
                        ],
                        "rule_src": "rule:\n  meta:\n    name: reference anti-VM strings targeting VMWare\n    namespace: anti-analysis/anti-vm/vm-detection\n    authors:\n      - michael.hunhoff@mandiant.com\n      - \"@johnk3r\"\n    scope: file\n    att&ck:\n      - Defense Evasion::Virtualization/Sandbox Evasion::System Checks [T1497.001]\n    mbc:\n      - Anti-Behavioral Analysis::Virtual Machine Detection [B0009]\n    references:\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/VMWare.cpp\n    examples:\n      - al-khaser_x86.exe_\n      - b83480162ede09d4aa6d4850f9faa0a4c3834152752fd04cfdb22d647aa1f825:0x17D80\n  features:\n    - or:\n      - string: /VMWare/i\n      - string: /VMTools/i\n      - string: /SOFTWARE\\\\VMware, Inc\\.\\\\VMware Tools/i\n      - string: /vmnet\\.sys/i\n      - string: /vmmouse\\.sys/i\n      - string: /vmusb\\.sys/i\n      - string: /vm3dmp\\.sys/i\n      - string: /vmci\\.sys/i\n      - string: /vmhgfs\\.sys/i\n      - string: /vmmemctl\\.sys/i\n      - string: /vmx86\\.sys/i\n      - string: /vmrawdsk\\.sys/i\n      - string: /vmusbmouse\\.sys/i\n      - string: /vmkdb\\.sys/i\n      - string: /vmnetuserif\\.sys/i\n      - string: /vmnetadapter\\.sys/i\n      - string: /\\\\\\\\.\\\\HGFS/i\n      - string: /\\\\\\\\.\\\\vmci/i\n      - string: /vmtoolsd\\.exe/i\n      - string: /vmwaretray\\.exe/i\n      - string: /vmwareuser\\.exe/i\n      - string: /VGAuthService\\.exe/i\n      - string: /vmacthlp\\.exe/i\n      - string: /vmci/i\n        description: VMWare VMCI Bus Driver\n      - string: /vmhgfs/i\n        description: VMWare Host Guest Control Redirector\n      - string: /vmmouse/i\n      - string: /vmmemctl/i\n        description: VMWare Guest Memory Controller Driver\n      - string: /vmusb/i\n      - string: /vmusbmouse/i\n      - string: /vmx_svga/i\n      - string: /vmxnet/i\n      - string: /vmx86/i\n      - string: /VMwareVMware/i\n      - string: /vmGuestLib\\.dll/i\n      - string: /vmGuestLib\\.dll/i\n      - string: /Applications\\\\VMwareHostOpen\\.exe/i\n      - string: /vm3dgl\\.dll/i\n      - string: /vmdum\\.dll/i\n      - string: /vm3dver\\.dll/i\n      - string: /vmtray\\.dll/i\n      - string: /VMToolsHook\\.dll/i\n      - string: /vmmousever\\.dll/i\n      - string: /VmGuestLibJava\\.dll/i\n      - string: /vmscsi\\.sys/i\n",
                        "authors": [
                            "michael.hunhoff@mandiant.com",
                            "@johnk3r"
                        ],
                        "name": "reference anti-VM strings targeting VMWare"
                    },
                    {
                        "description": "anti-analysis/anti-vm/vm-detection",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Xen.cpp"
                            }
                        ],
                        "rule_src": "rule:\n  meta:\n    name: reference anti-VM strings targeting Xen\n    namespace: anti-analysis/anti-vm/vm-detection\n    authors:\n      - michael.hunhoff@mandiant.com\n    scope: file\n    att&ck:\n      - Defense Evasion::Virtualization/Sandbox Evasion::System Checks [T1497.001]\n    mbc:\n      - Anti-Behavioral Analysis::Virtual Machine Detection [B0009]\n    references:\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Xen.cpp\n    examples:\n      - al-khaser_x86.exe_\n  features:\n    - or:\n      - string: /^Xen/i\n      - string: /XenVMMXenVMM/i\n      - string: /xenservice.exe/i\n      - string: /XenVMMXenVMM/i\n      - string: /HVM domU/i\n",
                        "authors": [
                            "michael.hunhoff@mandiant.com"
                        ],
                        "name": "reference anti-VM strings targeting Xen"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: reference Base64 string\n    namespace: data-manipulation/encoding/base64\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: file\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information [T1027]\n    mbc:\n      - Data::Encode Data::Base64 [C0026.001]\n      - Data::Check String [C0019]\n    examples:\n      - BFB9B5391A13D0AFD787E87AB90F14F5\n      - 074072B261FC27B65C72671F13510C05\n      - 5DB2D2BE20D59AA0BE6709A6850F1775\n  features:\n    - string: /ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\n",
                        "name": "reference Base64 string",
                        "description": "data-manipulation/encoding/base64"
                    },
                    {
                        "description": "anti-analysis/anti-vm/vm-detection",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "https://github.com/ctxis/CAPE/blob/master/modules/signatures/antivm_*"
                            },
                            {
                                "ref": "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Generic.cpp"
                            }
                        ],
                        "rule_src": "rule:\n  meta:\n    name: reference anti-VM strings\n    namespace: anti-analysis/anti-vm/vm-detection\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: file\n    att&ck:\n      - Defense Evasion::Virtualization/Sandbox Evasion::System Checks [T1497.001]\n    mbc:\n      - Anti-Behavioral Analysis::Virtual Machine Detection [B0009]\n    references:\n      - https://github.com/ctxis/CAPE/blob/master/modules/signatures/antivm_*\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Generic.cpp\n    examples:\n      - Practical Malware Analysis Lab 17-02.dll_\n  features:\n    - or:\n      - string: /HARDWARE\\\\ACPI\\\\(DSDT|FADT|RSDT)\\\\BOCHS/i\n      - string: /HARDWARE\\\\DESCRIPTION\\\\System\\\\(SystemBiosVersion|VideoBiosVersion)/i\n      - string: /HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor/i\n      - string: /HARDWARE\\\\DEVICEMAP\\\\Scsi\\\\Scsi Port 0\\\\Scsi Bus 0\\\\Target Id 0\\\\Logical Unit Id 0/i\n      - string: /SYSTEM\\\\(CurrentControlSet|ControlSet001)\\\\Enum\\\\IDE/i\n      - string: /SYSTEM\\\\(CurrentControlSet|ControlSet001)\\\\Services\\\\Disk\\\\Enum\\\\/i\n      - string: /SYSTEM\\\\(CurrentControlSet|ControlSet001)\\\\Control\\\\SystemInformation\\\\SystemManufacturer/i\n      - string: /A M I/i\n      - string: /Hyper-V/i\n      - string: /Kernel-VMDetection-Private/i\n      # https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Generic.cpp#L699\n      - string: /KVMKVMKVM/i\n        description: KVM\n      - string: /Microsoft Hv/i\n        description: Microsoft Hyper-V or Windows Virtual PC\n      # https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Generic.cpp#L8\n      - string: /avghookx.dll/i\n        description: AVG\n      - string: /avghooka.dll/i\n        description: AVG\n      - string: /snxhk.dll/i\n        description: Avast\n      - string: /pstorec.dll/i\n        description: SunBelt Sandbox\n      - string: /vmcheck.dll/i\n        description: Virtual PC\n      - string: /wpespy.dll/i\n        description: WPE Pro\n      - string: /cmdvrt64.dll/i\n        description: Comodo Container\n      - string: /cmdvrt32.dll/i\n        description: Comodo Container\n      # https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Generic.cpp#L46\n      - string: /sample.exe/i\n      - string: /bot.exe/i\n      - string: /sandbox.exe/i\n      - string: /malware.exe/i\n      - string: /test.exe/i\n      - string: /klavme.exe/i\n      - string: /myapp.exe/i\n      - string: /testapp.exe/i\n",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "name": "reference anti-VM strings"
                    }
                ],
                "has_evtx": false,
                "has_pcap": false,
                "has_memdump": false,
                "sandbox_name": "CAPA",
                "last_modification_date": 1703780450,
                "mitre_attack_techniques": [
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encode data using XOR"
                            }
                        ],
                        "signature_description": "encode data using XOR",
                        "id": "T1027",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encrypt data using DES"
                            }
                        ],
                        "signature_description": "encrypt data using DES",
                        "id": "T1027",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encrypt data using AES via x86 extensions"
                            }
                        ],
                        "signature_description": "encrypt data using AES via x86 extensions",
                        "id": "T1027",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encode data using Base64"
                            }
                        ],
                        "signature_description": "encode data using Base64",
                        "id": "T1027",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encrypt data using RC4 PRGA"
                            }
                        ],
                        "signature_description": "encrypt data using RC4 PRGA",
                        "id": "T1027",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encrypt data using AES"
                            }
                        ],
                        "signature_description": "encrypt data using AES",
                        "id": "T1027",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "reference AES constants"
                            }
                        ],
                        "signature_description": "reference AES constants",
                        "id": "T1027",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "decrypt data using AES via x86 extensions"
                            }
                        ],
                        "signature_description": "decrypt data using AES via x86 extensions",
                        "id": "T1140",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encrypt data using RC4 KSA"
                            }
                        ],
                        "signature_description": "encrypt data using RC4 KSA",
                        "id": "T1027",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encrypt data using Salsa20 or ChaCha"
                            }
                        ],
                        "signature_description": "encrypt data using Salsa20 or ChaCha",
                        "id": "T1027",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "reference anti-VM strings targeting VMWare"
                            }
                        ],
                        "signature_description": "reference anti-VM strings targeting VMWare",
                        "id": "T1497.001",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "reference anti-VM strings targeting Xen"
                            }
                        ],
                        "signature_description": "reference anti-VM strings targeting Xen",
                        "id": "T1497.001",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "reference Base64 string"
                            }
                        ],
                        "signature_description": "reference Base64 string",
                        "id": "T1027",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "reference anti-VM strings"
                            }
                        ],
                        "signature_description": "reference anti-VM strings",
                        "id": "T1497.001",
                        "severity": "IMPACT_SEVERITY_INFO"
                    }
                ],
                "has_html_report": false,
                "analysis_date": 1703780450
            }
        },
        {
            "id": "2b03806939d1171f063ba8d14c3b10622edb5732e4f78dc4fe3eac98b56e5d46_Tencent HABO",
            "type": "file_behaviour",
            "links": {
                "self": "https://www.virustotal.com/api/v3/file_behaviours/2b03806939d1171f063ba8d14c3b10622edb5732e4f78dc4fe3eac98b56e5d46_Tencent HABO"
            },
            "attributes": {
                "behash": "5617981da6e4088411198eebfc3e20d1",
                "files_opened": [
                    "/etc/ld.so.cache",
                    "/lib/x86_64-linux-gnu/libpthread.so.0",
                    "/lib/x86_64-linux-gnu/libc.so.6"
                ],
                "has_evtx": false,
                "has_pcap": false,
                "has_memdump": false,
                "sandbox_name": "Tencent HABO",
                "modules_loaded": [
                    "/lib/x86_64-linux-gnu/libc.so.6",
                    "linux-vdso.so.1",
                    "/lib64/ld-linux-x86-64.so.2",
                    "/lib/x86_64-linux-gnu/libpthread.so.0"
                ],
                "last_modification_date": 1636121874,
                "has_html_report": true,
                "ip_traffic": [
                    {
                        "transport_layer_protocol": "TCP",
                        "destination_ip": "45.35.41.12",
                        "destination_port": 443
                    }
                ],
                "analysis_date": 1596154988
            }
        },
        {
            "id": "2b03806939d1171f063ba8d14c3b10622edb5732e4f78dc4fe3eac98b56e5d46_Zenbox Linux",
            "type": "file_behaviour",
            "links": {
                "self": "https://www.virustotal.com/api/v3/file_behaviours/2b03806939d1171f063ba8d14c3b10622edb5732e4f78dc4fe3eac98b56e5d46_Zenbox Linux"
            },
            "attributes": {
                "behash": "2f0a806f8ef6eef8b93e0708eb90455c",
                "files_opened": [
                    "/proc/sys/kernel/hostname",
                    "/proc/sys/net/core/somaxconn"
                ],
                "has_evtx": false,
                "has_pcap": false,
                "has_memdump": true,
                "sandbox_name": "Zenbox Linux",
                "verdicts": [
                    "CLEAN"
                ],
                "last_modification_date": 1663873736,
                "mitre_attack_techniques": [
                    {
                        "signature_description": "Reads system information from the proc file system",
                        "id": "T1082",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "signature_description": "Uses HTTPS",
                        "id": "T1573",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "signature_description": "Uses HTTPS",
                        "id": "T1071",
                        "severity": "IMPACT_SEVERITY_INFO"
                    }
                ],
                "verdict_confidence": 1,
                "processes_tree": [
                    {
                        "process_id": "3921",
                        "name": "/tmp/base"
                    }
                ],
                "text_highlighted": [
                    ""
                ],
                "has_html_report": false,
                "ip_traffic": [
                    {
                        "transport_layer_protocol": "TCP",
                        "destination_ip": "45.35.41.12",
                        "destination_port": 443
                    }
                ],
                "analysis_date": 1663873732
            }
        }
    ],
    "meta": {
        "count": 3
    },
    "links": {
        "self": "https://www.virustotal.com/api/v3/files/2b03806939d1171f063ba8d14c3b10622edb5732e4f78dc4fe3eac98b56e5d46/behaviours?limit=10"
    }
}