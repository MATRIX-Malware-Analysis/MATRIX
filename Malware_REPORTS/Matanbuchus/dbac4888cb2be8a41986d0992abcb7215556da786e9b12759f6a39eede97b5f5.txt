{
    "data": [
        {
            "id": "dbac4888cb2be8a41986d0992abcb7215556da786e9b12759f6a39eede97b5f5_C2AE",
            "type": "file_behaviour",
            "links": {
                "self": "https://www.virustotal.com/api/v3/file_behaviours/dbac4888cb2be8a41986d0992abcb7215556da786e9b12759f6a39eede97b5f5_C2AE"
            },
            "attributes": {
                "has_evtx": false,
                "verdict_confidence": 50,
                "processes_tree": [
                    {
                        "process_id": "2232",
                        "name": "%windir%\\System32\\svchost.exe -k WerSvcGroup"
                    },
                    {
                        "process_id": "2884",
                        "name": "wmiadap.exe /F /T /R"
                    },
                    {
                        "process_id": "2920",
                        "name": "%windir%\\system32\\wbem\\wmiprvse.exe"
                    },
                    {
                        "process_id": "2596",
                        "name": "%SANDBOX_DLL_LOADER_X86% %SAMPLEPATH% %WORKDIR% 483"
                    }
                ],
                "analysis_date": 1639032333,
                "verdict_labels": [
                    "Matanbuchus"
                ],
                "has_pcap": false,
                "has_html_report": false,
                "sandbox_name": "C2AE",
                "behash": "7eb58e30b74038daa9b31b5d9df78cf2",
                "last_modification_date": 1639118764,
                "processes_terminated": [
                    "%windir%\\System32\\svchost.exe -k WerSvcGroup",
                    "wmiadap.exe /F /T /R"
                ],
                "verdicts": [
                    "MALWARE"
                ],
                "has_memdump": false
            }
        },
        {
            "id": "dbac4888cb2be8a41986d0992abcb7215556da786e9b12759f6a39eede97b5f5_CAPA",
            "type": "file_behaviour",
            "links": {
                "self": "https://www.virustotal.com/api/v3/file_behaviours/dbac4888cb2be8a41986d0992abcb7215556da786e9b12759f6a39eede97b5f5_CAPA"
            },
            "attributes": {
                "has_evtx": false,
                "analysis_date": 1706583929,
                "has_pcap": false,
                "has_html_report": false,
                "sandbox_name": "CAPA",
                "behash": "dfdf5c741861115787c3e04571134d14",
                "signature_matches": [
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "rule_src": "rule:\n  meta:\n    name: calculate modulo 256 via x86 assembly\n    authors:\n      - moritz.raabe@mandiant.com\n    lib: true\n    scope: instruction\n    mbc:\n      - Data::Modulo [C0058]\n    examples:\n      - 9324D1A8AE37A36AE560C37448C9705A:0x4049A9\n  features:\n    #  and ecx, 800000FFh\n    #  and ecx, 0FFh\n    - and:\n      - mnemonic: and\n      - or:\n        - number: 0x800000FF\n        - number: 0xFF\n",
                        "name": "calculate modulo 256 via x86 assembly",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ]
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "rule_src": "rule:\n  meta:\n    name: allocate memory\n    authors:\n      - 0x534a@mailbox.org\n    lib: true\n    scope: basic block\n    mbc:\n      - Memory::Allocate Memory [C0007]\n    examples:\n      - Practical Malware Analysis Lab 03-03.exe_:0x4010EA\n      # ntdll\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001ABA\n  features:\n    - or:\n      - api: kernel32.VirtualAlloc\n      - api: kernel32.VirtualAllocEx\n      - api: kernel32.VirtualAllocExNuma\n      - api: kernel32.VirtualProtect\n      - api: kernel32.VirtualProtectEx\n      - api: NtAllocateVirtualMemory\n      - api: ZwAllocateVirtualMemory\n      - api: NtMapViewOfSection\n      - api: ZwMapViewOfSection\n",
                        "name": "allocate memory",
                        "authors": [
                            "0x534a@mailbox.org"
                        ]
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "rule_src": "rule:\n  meta:\n    name: allocate RW memory\n    authors:\n      - 0x534a@mailbox.org\n    lib: true\n    scope: basic block\n    mbc:\n      - Memory::Allocate Memory [C0007]\n    examples:\n      - Practical Malware Analysis Lab 17-02.dll_:0x1000D10D\n  features:\n    - and:\n      - match: allocate memory\n      - number: 0x4 = PAGE_READWRITE\n",
                        "name": "allocate RW memory",
                        "authors": [
                            "0x534a@mailbox.org"
                        ]
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "rule_src": "rule:\n  meta:\n    name: create or open registry key\n    authors:\n      - michael.hunhoff@mandiant.com\n      - anushka.virgaonkar@mandiant.com\n    lib: true\n    scope: basic block\n    mbc:\n      - Operating System::Registry::Create Registry Key [C0036.004]\n      - Operating System::Registry::Open Registry Key [C0036.003]\n    examples:\n      - Practical Malware Analysis Lab 03-02.dll_:0x10004706\n      - Practical Malware Analysis Lab 11-01.exe_:0x401000\n      - 493167E85E45363D09495D0841C30648:0x404D60\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4045F2\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x40433E\n      - 692f7fd6d198e804d6af98eb9e390d61:0x6000003\n  features:\n    - or:\n      - api: advapi32.RegOpenKey\n      - api: advapi32.RegOpenKeyEx\n      - api: advapi32.RegCreateKey\n      - api: advapi32.RegCreateKeyEx\n      - api: advapi32.RegOpenCurrentUser\n      - api: advapi32.RegOpenKeyTransacted\n      - api: advapi32.RegOpenUserClassesRoot\n      - api: advapi32.RegCreateKeyTransacted\n      - api: ZwOpenKey\n      - api: ZwOpenKeyEx\n      - api: ZwCreateKey\n      - api: ZwOpenKeyTransacted\n      - api: ZwOpenKeyTransactedEx\n      - api: ZwCreateKeyTransacted\n      - api: NtOpenKey\n      - api: NtCreateKey\n      - api: SHRegOpenUSKey\n      - api: SHRegCreateUSKey\n      - api: RtlCreateRegistryKey\n      - api: Microsoft.Win32.RegistryKey::OpenSubKey\n      - api: Microsoft.Win32.RegistryKey::OpenBaseKey\n      - api: Microsoft.Win32.RegistryKey::OpenRemoteBaseKey\n      - api: Microsoft.Win32.RegistryKey::CreateSubKey\n",
                        "name": "create or open registry key",
                        "authors": [
                            "michael.hunhoff@mandiant.com",
                            "anushka.virgaonkar@mandiant.com"
                        ]
                    },
                    {
                        "refs": [
                            {
                                "ref": "https://docs.microsoft.com/en-us/windows/win32/sync/wait-functions"
                            },
                            {
                                "ref": "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/TimingAttacks/timing.cpp"
                            }
                        ],
                        "format": "SIG_FORMAT_CAPA",
                        "rule_src": "rule:\n  meta:\n    name: delay execution\n    authors:\n      - michael.hunhoff@mandiant.com\n      - \"@ramen0x3f\"\n    lib: true\n    scope: basic block\n    mbc:\n      - Anti-Behavioral Analysis::Dynamic Analysis Evasion::Delayed Execution [B0003.003]\n    references:\n      - https://docs.microsoft.com/en-us/windows/win32/sync/wait-functions\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/TimingAttacks/timing.cpp\n    examples:\n      - al-khaser_x86.exe_:0x449770\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x402FA6\n  features:\n    - or:\n      - and:\n        - os: windows\n        - or:\n          - api: kernel32.Sleep\n          - api: kernel32.SleepEx\n          - api: kernel32.WaitForSingleObject\n          - api: kernel32.SignalObjectAndWait\n          - api: kernel32.WaitForSingleObjectEx\n          - api: kernel32.WaitForMultipleObjects\n          - api: kernel32.WaitForMultipleObjectsEx\n          - api: kernel32.RegisterWaitForSingleObject\n          - api: WaitOnAddress\n          - api: user32.MsgWaitForMultipleObjects\n          - api: user32.MsgWaitForMultipleObjectsEx\n          - api: NtDelayExecution\n          - api: KeWaitForSingleObject\n          - api: KeDelayExecutionThread\n      - and:\n        - os: linux\n        - or:\n          - api: sleep\n          - api: usleep\n",
                        "name": "delay execution",
                        "authors": [
                            "michael.hunhoff@mandiant.com",
                            "@ramen0x3f"
                        ]
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "rule_src": "rule:\n  meta:\n    name: create or open file\n    authors:\n      - michael.hunhoff@mandiant.com\n      - joakim@intezer.com\n    lib: true\n    scope: basic block\n    mbc:\n      - File System::Create File [C0016]\n    examples:\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x401D7E\n  features:\n    - or:\n      - api: CreateFile\n      - api: CreateFileEx\n      - api: IoCreateFile\n      - api: IoCreateFileEx\n      - api: ZwOpenFile\n      - api: ZwCreateFile\n      - api: NtOpenFile\n      - api: NtCreateFile\n      - api: LZCreateFile\n      - api: LZOpenFile\n      - api: fopen\n      - api: fopen64\n      - api: fdopen\n      - api: freopen\n      - api: open\n      - api: openat\n",
                        "name": "create or open file",
                        "authors": [
                            "michael.hunhoff@mandiant.com",
                            "joakim@intezer.com"
                        ]
                    },
                    {
                        "refs": [
                            {
                                "ref": "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/NtGlobalFlag.cpp"
                            }
                        ],
                        "format": "SIG_FORMAT_CAPA",
                        "rule_src": "rule:\n  meta:\n    name: PEB access\n    authors:\n      - michael.hunhoff@mandiant.com\n    lib: true\n    scope: basic block\n    mbc:\n      - Anti-Behavioral Analysis::Debugger Detection::Process Environment Block [B0001.019]\n    references:\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/NtGlobalFlag.cpp\n    examples:\n      - al-khaser_x86.exe_:0x420D20\n  features:\n    - or:\n      - characteristic: peb access\n      - and:\n        # https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/NtGlobalFlag.cpp#L41\n        - arch: i386\n        - characteristic: fs access\n        - or:\n          # in 0f5d5d07c6533bc6d991836ce79daaa1\n          # then we have:\n          #\n          #     xor edx, edx\n          #     mov edx, fs:[edx+30h]\n          - offset: 0x30\n          - instruction:\n            # in the case of CallObfuscator, gs:[rax]\n            - mnemonic: add\n            - number: 0x30\n      - and:\n        - arch: amd64\n        - characteristic: gs access\n        - or:\n          - offset: 0x60\n          - instruction:\n            - mnemonic: add\n            - number: 0x60\n      - and:\n        # WoW64 PEB address is fetched via the WoW64 Thread Environment Block (TEB) at FS:[0x18]-0x2000\n        # https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/NtGlobalFlag.cpp#L45\n        - characteristic: fs access\n        - instruction:\n          - mnemonic: sub\n          - number: 0x2000\n",
                        "name": "PEB access",
                        "authors": [
                            "michael.hunhoff@mandiant.com"
                        ]
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: encode data using XOR\n    namespace: data-manipulation/encoding/xor\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: basic block\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information [T1027]\n    mbc:\n      - Defense Evasion::Obfuscated Files or Information::Encoding-Standard Algorithm [E1027.m02]\n      - Data::Encode Data::XOR [C0026.002]\n    examples:\n      - 2D3EDC218A90F03089CC01715A9F047F:0x403D7E\n  features:\n    - and:\n      - characteristic: tight loop\n      - characteristic: nzxor\n      - not:\n        - description: filter for potential false positives\n        - or:\n          - or:\n            - description: unsigned bitwise negation operation (~i)\n            - number: 0xFFFFFFFF = bitwise negation for unsigned 32 bits\n            - number: 0xFFFFFFFFFFFFFFFF = bitwise negation for unsigned 64 bits\n          - or:\n            - description: signed bitwise negation operation (~i)\n            - number: 0x0FFFFFFF = bitwise negation for signed 32 bits\n            - number: 0x0FFFFFFFFFFFFFFF = bitwise negation for signed 64 bits\n          - or:\n            - description: Magic constants used in the implementation of strings functions.\n            # such as `strlen` and `strcat` in the Windows standard library:\n            # (((i - 0x81010101) ^ ~i) & 0x81010100)\n            ## 32 bits\n            - number: 0x7EFEFEFF = optimized string constant for 32 bits\n            - number: 0x81010101 = -0x81010101 = 0x7EFEFEFF\n            - number: 0x81010100 = 0x81010100 = ~0x7EFEFEFF\n            ## 64 bits\n            - number: 0x7EFEFEFEFEFEFEFF = optimized string constant for 64 bits\n            - number: 0x8101010101010101 = -0x8101010101010101 = 0x7EFEFEFEFEFEFEFF\n            - number: 0x8101010101010100 = 0x8101010101010100 = ~0x7EFEFEFEFEFEFEFF\n",
                        "name": "encode data using XOR",
                        "description": "data-manipulation/encoding/xor"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: allocate RWX memory\n    namespace: host-interaction/process/inject\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: basic block\n    mbc:\n      - Memory::Allocate Memory [C0007]\n    examples:\n      - Practical Malware Analysis Lab 03-03.exe_:0x4010EA\n      # ntdll\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001ABA\n  features:\n    - and:\n      - match: allocate memory\n      - number: 0x40 = PAGE_EXECUTE_READWRITE\n",
                        "name": "allocate RWX memory",
                        "description": "host-interaction/process/inject"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "michael.hunhoff@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: hide graphical window\n    namespace: host-interaction/gui/window/hide\n    authors:\n      - michael.hunhoff@mandiant.com\n    scope: basic block\n    att&ck:\n      - Defense Evasion::Hide Artifacts::Hidden Window [T1564.003]\n    examples:\n      - 39C05B15E9834AC93F206BC114D0A00C357C888DB567BA8F5345DA0529CBED41:0x10007250\n  features:\n    - and:\n      - number: 0x0 = SW_HIDE\n      - api: user32.ShowWindow\n",
                        "name": "hide graphical window",
                        "description": "host-interaction/gui/window/hide"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "michael.hunhoff@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: set global application hook\n    namespace: host-interaction/gui\n    authors:\n      - michael.hunhoff@mandiant.com\n    scope: basic block\n  features:\n    - and:\n      - api: user32.SetWindowsHookEx\n      - number: 0x3 = WM_GETMESSAGE\n      - number: 0x0 = dwThreadId\n",
                        "name": "set global application hook",
                        "description": "host-interaction/gui"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com",
                            "michael.hunhoff@mandiant.com",
                            "joakim@intezer.com",
                            "anushka.virgaonkar@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: create thread\n    namespace: host-interaction/thread/create\n    authors:\n      - moritz.raabe@mandiant.com\n      - michael.hunhoff@mandiant.com\n      - joakim@intezer.com\n      - anushka.virgaonkar@mandiant.com\n    scope: basic block\n    mbc:\n      - Process::Create Thread [C0038]\n    examples:\n      - 946A99F36A46D335DEC080D9A4371940:0x10001DA0\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x408020\n  features:\n    - or:\n      - and:\n        - os: windows\n        - or:\n          - api: kernel32.CreateThread\n          - api: _beginthread\n          - api: _beginthreadex\n          - api: PsCreateSystemThread\n          - api: SHCreateThread\n          - api: SHCreateThreadWithHandle\n          - api: kernel32.CreateRemoteThread\n          - api: kernel32.CreateRemoteThreadEx\n          - api: RtlCreateUserThread\n          - api: ntdll.NtCreateThread\n          - api: ntdll.NtCreateThreadEx\n          - api: ntdll.ZwCreateThread\n          - api: ntdll.ZwCreateThreadEx\n      - and:\n        - os: linux\n        - api: pthread_create\n      - and:\n        - api: System.Threading.Thread::Start\n        - optional:\n          - api: System.Threading.Thread::ctor\n",
                        "name": "create thread",
                        "description": "host-interaction/thread/create"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "michael.hunhoff@mandiant.com"
                        ],
                        "rule_src": "# generated using capa explorer for IDA Pro\nrule:\n  meta:\n    name: inspect load icon resource\n    namespace: anti-analysis\n    authors:\n      - michael.hunhoff@mandiant.com\n    scope: basic block\n  features:\n    # check if call to LoadIcon fails when first argument is NULL\n    # and second argument is not a valid predefined icon - LoadIcon\n    # should return NULL here, but some sandboxes/emulation may instead\n    # return a valid handle\n    - and:\n      - api: user32.LoadIcon\n      - number: 0x0\n      - mnemonic: test\n      - not:\n        - or:\n          - description: predefined icon identifiers\n          - number: 0x7F05 = IDI_WINLOGO\n          - number: 0x7F06 = IDI_SHIELD\n          - number: 0x7F02 = IDI_QUESTION\n          - number: 0x7F00 = IDI_APPLICATION\n          - number: 0x7F04 = (IDI_ASTERISK | IDI_INFORMATION)\n          - number: 0x7F01 = (IDI_ERROR | IDI_HAND)\n          - number: 0x7F03 = (IDI_EXCLAMATION | IDI_WARNING)\n",
                        "name": "inspect load icon resource",
                        "description": "anti-analysis"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "rule_src": "rule:\n  meta:\n    name: contain loop\n    authors:\n      - moritz.raabe@mandiant.com\n    lib: true\n    scope: function\n    examples:\n      - 08AC667C65D36D6542917655571E61C8:0x406EAA\n  features:\n    - or:\n      - characteristic: loop\n      - characteristic: tight loop\n      - characteristic: recursive call\n",
                        "name": "contain loop",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ]
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "william.ballenthin@mandiant.com",
                            "michael.hunhoff@mandiant.com",
                            "anushka.virgaonkar@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: query or enumerate registry value\n    namespace: host-interaction/registry\n    authors:\n      - william.ballenthin@mandiant.com\n      - michael.hunhoff@mandiant.com\n      - anushka.virgaonkar@mandiant.com\n    scope: function\n    att&ck:\n      - Discovery::Query Registry [T1012]\n    mbc:\n      - Operating System::Registry::Query Registry Value [C0036.006]\n    examples:\n      - BFB9B5391A13D0AFD787E87AB90F14F5:0x13145B5A\n      - Practical Malware Analysis Lab 03-02.dll_:0x100047AD\n  features:\n    - and:\n      - optional:\n        - match: create or open registry key\n      - or:\n        - api: advapi32.RegGetValue\n        - api: advapi32.RegEnumValue\n        - api: advapi32.RegQueryValue\n        - api: advapi32.RegQueryValueEx\n        - api: advapi32.RegQueryMultipleValues\n        - api: ZwQueryValueKey\n        - api: ZwEnumerateValueKey\n        - api: NtQueryValueKey\n        - api: NtEnumerateValueKey\n        - api: RtlQueryRegistryValues\n        - api: SHGetValue\n        - api: SHEnumValue\n        - api: SHRegGetInt\n        - api: SHRegGetPath\n        - api: SHRegGetValue\n        - api: SHQueryValueEx\n        - api: SHRegGetUSValue\n        - api: SHOpenRegStream\n        - api: SHRegEnumUSValue\n        - api: SHOpenRegStream2\n        - api: SHRegQueryUSValue\n        - api: SHRegGetBoolUSValue\n        - api: SHRegGetValueFromHKCUHKLM\n        - api: SHRegGetBoolValueFromHKCUHKLM\n        - api: Microsoft.Win32.RegistryKey::GetValue\n        - api: Microsoft.Win32.RegistryKey::GetValueKind\n        - api: Microsoft.Win32.RegistryKey::GetValueNames\n        - api: Microsoft.Win32.Registry::GetValue\n",
                        "name": "query or enumerate registry value",
                        "description": "host-interaction/registry"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "william.ballenthin@mandiant.com",
                            "anushka.virgaonkar@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: write file on Windows\n    namespace: host-interaction/file-system/write\n    authors:\n      - william.ballenthin@mandiant.com\n      - anushka.virgaonkar@mandiant.com\n    scope: function\n    mbc:\n      - File System::Writes File [C0052]\n    examples:\n      - Practical Malware Analysis Lab 01-04.exe_:0x4011FC\n      # ntdll\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x1400025C4\n  features:\n    - or:\n      - and:\n        - os: windows\n        - optional:\n          - basic block:\n            - or:\n              - number: 0x40000000 = GENERIC_WRITE\n              - number: 0x2 = FILE_WRITE_DATA\n              - match: create or open file\n        - or:\n          - api: kernel32.WriteFile\n          - api: kernel32.WriteFileEx\n          - api: NtWriteFile\n          - api: ZwWriteFile\n          - api: _fwrite\n          - api: fwrite\n      - api: System.IO.File::WriteAllBytes\n      - api: System.IO.File::WriteAllBytesAsync\n      - api: System.IO.File::WriteAllLines\n      - api: System.IO.File::WriteAllLinesAsync\n      - api: System.IO.File::WriteAllText\n      - api: System.IO.File::WriteAllTextAsync\n      - api: System.IO.File::AppendAllLines\n      - api: System.IO.File::AppendAllLinesAsync\n      - api: System.IO.File::AppendAllText\n      - api: System.IO.File::AppendAllTextAsync\n      - api: System.IO.File::AppendText\n      - api: System.IO.FileInfo::AppendText\n",
                        "name": "write file on Windows",
                        "description": "host-interaction/file-system/write"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com",
                            "michael.hunhoff@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: link function at runtime on Windows\n    namespace: linking/runtime-linking\n    authors:\n      - moritz.raabe@mandiant.com\n      - michael.hunhoff@mandiant.com\n    scope: function\n    att&ck:\n      - Execution::Shared Modules [T1129]\n    examples:\n      - 9324D1A8AE37A36AE560C37448C9705A:0x404130\n      - Practical Malware Analysis Lab 01-04.exe_:0x401350\n  features:\n    - and:\n      - os: windows\n      - or:\n        - api: kernel32.GetProcAddress\n        - api: ntdll.LdrGetProcedureAddress\n      - optional:\n        - characteristic: indirect call\n        - api: kernel32.LoadLibrary\n        - api: kernel32.GetModuleHandle\n        - api: kernel32.GetModuleHandleEx\n        - api: ntdll.LdrLoadDll\n",
                        "name": "link function at runtime on Windows",
                        "description": "linking/runtime-linking"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe",
                            "michael.hunhoff@mandiant.com"
                        ],
                        "rule_src": "# generated using capa explorer for IDA Pro\nrule:\n  meta:\n    name: get geographical location\n    namespace: collection\n    authors:\n      - moritz.raabe\n      - michael.hunhoff@mandiant.com\n    scope: function\n    att&ck:\n      - Discovery::System Location Discovery [T1614]\n    examples:\n      - 9879D201DC5ACA863F357184CD1F170E:0x10001A99\n  features:\n    - or:\n      - api: GetLocaleInfo\n      - api: GetLocaleInfoEx\n      - api: kernel32.GetUserGeoID\n      - api: kernel32.GetGeoInfo\n      # strings part of requests or parsed from response\n      # \"geo\" and \"zip\" are too short\n      # \"region\" results in FPs mostly related to memory\n      - string: /geolocation/i\n      - string: /geo-location/i\n      - string: /^city/i\n      - string: /region_code/i\n      - string: /region_name/i\n      - string: /^country/i\n      - string: /country_code/i\n      - string: /countrycode/i\n      - string: /country_name/i\n      - string: /continent_code/i\n      - string: /continent_name/i\n      - string: /^latitude/i\n      - string: /^longitude/i\n",
                        "name": "get geographical location",
                        "description": "collection"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com",
                            "anushka.virgaonkar@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: accept command line arguments\n    namespace: host-interaction/cli\n    authors:\n      - moritz.raabe@mandiant.com\n      - anushka.virgaonkar@mandiant.com\n    scope: function\n    att&ck:\n      - Execution::Command and Scripting Interpreter [T1059]\n    mbc:\n      - Execution::Command and Scripting Interpreter [E1059]\n    examples:\n      - e5369ac309f1be6d77afeeb3edab0ed8:0x402760\n  features:\n    - or:\n      - api: GetCommandLine\n      - api: CommandLineToArgv\n      - api: System.Environment::GetCommandLineArgs\n",
                        "name": "accept command line arguments",
                        "description": "host-interaction/cli"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "rule_src": "rule:\n  meta:\n    name: get OS version\n    authors:\n      - \"@mr-tz\"\n    lib: true\n    scope: function\n    examples:\n      - 493167E85E45363D09495D0841C30648:0x401000\n      - 5f66b82558ca92e54e77f216ef4c066c:0x44580A\n  features:\n    - or:\n      - api: RtlGetVersion\n      - api: ntoskrnl.PsGetVersion\n      - api: GetVersion\n      - api: GetVersionEx\n      - api: VerifyVersionInfo\n      - api: VerSetConditionMask\n      - api: RtlGetNtVersionNumbers\n      - api: GetProductInfo\n      - and:\n        - match: PEB access\n        - or:\n          - and:\n            - arch: i386\n            - or:\n              - offset: 0xA4 = PEB->OSMajorVersion\n              - offset: 0xA8 = PEB->OSMinorVersion\n              - offset: 0xAC = PEB->OSBuildNumber\n          - and:\n            - arch: amd64\n            - or:\n              - offset: 0x118 = PEB->OSMajorVersion\n              - offset: 0x11C = PEB->OSMinorVersion\n              - offset: 0x120 = PEB->OSBuildNumber\n",
                        "name": "get OS version",
                        "authors": [
                            "@mr-tz"
                        ]
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "michael.hunhoff@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: set thread local storage value\n    namespace: host-interaction/process\n    authors:\n      - michael.hunhoff@mandiant.com\n    scope: function\n    mbc:\n      - Process::Set Thread Local Storage Value [C0041]\n    examples:\n      - 03B236B23B1EC37C663527C1F53AF3FE:0x18000AE21\n  features:\n    - and:\n      - api: kernel32.TlsSetValue\n      - optional:\n        - match: allocate thread local storage\n",
                        "name": "set thread local storage value",
                        "description": "host-interaction/process"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "michael.hunhoff@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: get thread local storage value\n    namespace: host-interaction/process\n    authors:\n      - michael.hunhoff@mandiant.com\n    scope: function\n  features:\n    - and:\n      - api: kernel32.TlsGetValue\n",
                        "name": "get thread local storage value",
                        "description": "host-interaction/process"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "michael.hunhoff@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: allocate thread local storage\n    namespace: host-interaction/process\n    authors:\n      - michael.hunhoff@mandiant.com\n    scope: function\n    mbc:\n      - Process::Allocate Thread Local Storage [C0040]\n    examples:\n      - 03B236B23B1EC37C663527C1F53AF3FE:0x18000ADF6\n  features:\n    - or:\n      - api: kernel32.TlsAlloc\n",
                        "name": "allocate thread local storage",
                        "description": "host-interaction/process"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: find graphical window\n    namespace: host-interaction/gui/window/find\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: function\n    att&ck:\n      - Discovery::Application Window Discovery [T1010]\n    examples:\n      - 7C843E75D4F02087B932FE280DF9C90C:0x41B180\n  features:\n    - or:\n      - api: user32.FindWindow\n      - api: user32.FindWindowEx\n",
                        "name": "find graphical window",
                        "description": "host-interaction/gui/window/find"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com",
                            "anushka.virgaonkar@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: read file on Windows\n    namespace: host-interaction/file-system/read\n    authors:\n      - moritz.raabe@mandiant.com\n      - anushka.virgaonkar@mandiant.com\n    scope: function\n    mbc:\n      - File System::Read File [C0051]\n    examples:\n      - BFB9B5391A13D0AFD787E87AB90F14F5:0x1314567B\n  features:\n    - or:\n      - and:\n        - os: windows\n        - optional:\n          - and:\n            - number: 0x80000000 = GENERIC_READ\n            - match: create or open file\n        - or:\n          - api: kernel32.ReadFile\n          - api: ReadFileEx\n          - api: NtReadFile\n          - api: ZwReadFile\n          - api: LZRead\n          - api: _read\n          - api: fread\n      - api: System.IO.File::ReadAllBytes\n      - api: System.IO.File::ReadAllBytesAsync\n      - api: System.IO.File::ReadAllLines\n      - api: System.IO.File::ReadAllLinesAsync\n      - api: System.IO.File::ReadAllText\n      - api: System.IO.File::ReadAllTextAsync\n      - api: System.IO.File::ReadLines\n",
                        "name": "read file on Windows",
                        "description": "host-interaction/file-system/read"
                    },
                    {
                        "description": "host-interaction/hardware/storage",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Generic.cpp#L347"
                            }
                        ],
                        "rule_src": "rule:\n  meta:\n    name: get disk size\n    namespace: host-interaction/hardware/storage\n    authors:\n      - michael.hunhoff@mandiant.com\n      - anushka.virgaonkar@mandiant.com\n    scope: function\n    att&ck:\n      - Discovery::System Information Discovery [T1082]\n    mbc:\n      - Discovery::System Information Discovery [E1082]\n    references:\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Generic.cpp#L347\n    examples:\n      - al-khaser_x86.exe_:0x4343D0\n      - al-khaser_x86.exe_:0x434010\n  features:\n    - or:\n      - api: kernel32.GetDiskFreeSpace\n      - api: kernel32.GetDiskFreeSpaceEx\n      - property/read: System.IO.DriveInfo::TotalSize\n      - property/read: System.IO.DriveInfo::TotalFreeSpace\n      - property/read: System.IO.DriveInfo::AvailableFreeSpace\n      - basic block:\n        - and:\n          - api: DeviceIoControl\n          - number: 0x7405C = IOCTL_DISK_GET_LENGTH_INFO\n      - and:\n        - or:\n          - string: /SELECT\\s+\\*\\s+FROM\\s+Win32_LogicalDisk/i\n          - string: /SELECT\\s+\\*\\s+FROM\\s+Win32_DiskDrive\\s+WHERE\\s+\\(SerialNumber\\s+IS\\s+NOT\\s+NULL\\)\\s+AND\\s+\\(MediaType\\s+LIKE\\s+\\'Fixed\\s+hard\\s+disk\\%\\'\\)/i\n        - string: \"Size\"\n",
                        "authors": [
                            "michael.hunhoff@mandiant.com",
                            "anushka.virgaonkar@mandiant.com"
                        ],
                        "name": "get disk size"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "michael.hunhoff@mandiant.com",
                            "anushka.virgaonkar@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: get file version info\n    namespace: host-interaction/file-system/meta\n    authors:\n      - michael.hunhoff@mandiant.com\n      - anushka.virgaonkar@mandiant.com\n    scope: function\n    att&ck:\n      - Discovery::File and Directory Discovery [T1083]\n    mbc:\n      - Discovery::File and Directory Discovery [E1083]\n    examples:\n      - mimikatz.exe_:0x45E308\n  features:\n    - and:\n      - or:\n        - api: version.GetFileVersionInfo\n        - api: version.GetFileVersionInfoEx\n        - api: System.Diagnostics.FileVersionInfo::GetVersionInfo\n      - optional:\n        - description: retrieve specified version information from the version-information resource\n        - api: version.VerQueryValue\n        - or:\n          - api: version.GetFileVersionInfoSize\n          - api: version.GetFileVersionInfoSizeEx\n",
                        "name": "get file version info",
                        "description": "host-interaction/file-system/meta"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "william.ballenthin@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: extract resource via kernel32 functions\n    namespace: executable/resource\n    authors:\n      - william.ballenthin@mandiant.com\n    scope: function\n    examples:\n      - BF88E1BD4A3BDE10B419A622278F1FF7:0x401000\n      - Practical Malware Analysis Lab 01-04.exe_:0x4011FC\n      # ntdll\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001ABA\n  features:\n    - or:\n      - and:\n        - or:\n          - api: kernel32.LoadResource\n          - api: kernel32.LockResource\n          - api: LdrAccessResource\n        - optional:\n          - api: kernel32.GetModuleHandle\n          # may occur in parent function, see 0664B09A86EC2DF7DFE01A93E184A1FA23DF66EA82CAB39000944E418EC1F7B2\n          - or:\n            - api: kernel32.FindResource\n            - api: kernel32.FindResourceEx\n            - api: LdrFindResource_U\n            - api: LdrFindResourceEx_U\n          - api: kernel32.SizeofResource\n          - api: kernel32.FreeResource\n",
                        "name": "extract resource via kernel32 functions",
                        "description": "executable/resource"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com",
                            "joakim@intezer.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: get system information on Windows\n    namespace: host-interaction/os/info\n    authors:\n      - moritz.raabe@mandiant.com\n      - joakim@intezer.com\n    scope: function\n    att&ck:\n      - Discovery::System Information Discovery [T1082]\n    examples:\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140002280\n  features:\n    - and:\n      - os: windows\n      - or:\n        - api: kernel32.GetSystemInfo\n        - api: kernel32.GetNativeSystemInfo\n        - api: NtQuerySystemInformation\n        - api: NtQuerySystemInformationEx\n        - api: ntdll.RtlGetNativeSystemInformation\n        - api: ZwQuerySystemInformation\n        - api: ZwQuerySystemInformationEx\n",
                        "name": "get system information on Windows",
                        "description": "host-interaction/os/info"
                    },
                    {
                        "description": "host-interaction/clipboard",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "https://learn.microsoft.com/en-us/windows/win32/dataxchg/using-the-clipboard"
                            }
                        ],
                        "rule_src": "rule:\n  meta:\n    name: read clipboard data\n    namespace: host-interaction/clipboard\n    authors:\n      - michael.hunhoff@mandiant.com\n      - anushka.virgaonkar@mandiant.com\n    scope: function\n    att&ck:\n      - Collection::Clipboard Data [T1115]\n    references:\n      - https://learn.microsoft.com/en-us/windows/win32/dataxchg/using-the-clipboard\n    examples:\n      - C91887D861D9BD4A5872249B641BC9F9:0x40156F\n      - 93dfc146f60bd796eb28d4e4f348f2e4:0x401050\n  features:\n    - and:\n      - optional:\n        - match: open clipboard\n        - match: contain loop\n        - api: kernel32.GlobalAlloc\n        - api: kernel32.GlobalLock\n        - api: kernel32.GlobalUnlock\n      - or:\n        - basic block:\n          - and:\n            - api: user32.GetClipboardData\n            - optional:\n              - number: 0x1 = CF_TEXT\n              - number: 0x7 = CF_OEMTEXT\n              - number: 0xD = CF_UNICODETEXT\n        - api: System.Windows.Forms.Clipboard::GetAudioStream\n        - api: System.Windows.Forms.Clipboard::GetData\n        - api: System.Windows.Forms.Clipboard::GetDataObject\n        - api: System.Windows.Forms.Clipboard::GetFileDropList\n        - api: System.Windows.Forms.Clipboard::GetImage\n        - api: System.Windows.Forms.Clipboard::GetText\n",
                        "authors": [
                            "michael.hunhoff@mandiant.com",
                            "anushka.virgaonkar@mandiant.com"
                        ],
                        "name": "read clipboard data"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com",
                            "@_re_fox",
                            "michael.hunhoff@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: capture screenshot\n    namespace: collection/screenshot\n    authors:\n      - moritz.raabe@mandiant.com\n      - \"@_re_fox\"\n      - michael.hunhoff@mandiant.com\n    scope: function\n    att&ck:\n      - Collection::Screen Capture [T1113]\n    mbc:\n      - Collection::Screen Capture::WinAPI [E1113.m01]\n    examples:\n      - BFB9B5391A13D0AFD787E87AB90F14F5:0x1314610A\n      - 7204e3efc2434012e13ca939db0d0b02:0x414070\n      - 50D5EE1CE2CA5E30C6B1019EE64EEEC2:0x406E07\n  features:\n    - or:\n      - and:\n        - or:\n          - api: user32.GetWindowDC\n          - api: user32.GetDC\n          - and:\n            - api: gdi32.CreateDC\n            - string: \"DISPLAY\"\n        - or:\n          - api: gdi32.BitBlt\n          - api: gdi32.GetDIBits\n        - api: gdi32.CreateCompatibleDC\n        - api: gdi32.CreateCompatibleBitmap\n        - optional:\n          - or:\n            - api: user32.GetSystemMetrics = fetch screen dimensions\n            - api: user32.GetDesktopWindow = get entire desktop\n      - basic block:\n        - and:\n          - api: BitBlt\n          - characteristic: tight loop\n      - api: System.Drawing.Graphics::CopyFromScreen\n",
                        "name": "capture screenshot",
                        "description": "collection/screenshot"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com",
                            "joakim@intezer.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: link many functions at runtime\n    namespace: linking/runtime-linking\n    authors:\n      - moritz.raabe@mandiant.com\n      - joakim@intezer.com\n    scope: function\n    att&ck:\n      - Execution::Shared Modules [T1129]\n    examples:\n      - b7b5e1253710d8927cbe07d52d2d2e10:0x401000\n  features:\n    - or:\n      - and:\n        - os: windows\n        - match: link function at runtime on Windows\n        - or:\n          - count(api(kernel32.GetProcAddress)): 5 or more\n          - count(api(ntdll.LdrGetProcedureAddress)): 5 or more\n      - and:\n        - os: linux\n        - match: link function at runtime on Linux\n        - or:\n          - count(api(dlsym)): 5 or more\n          - count(api(dlvsym)): 5 or more\n",
                        "name": "link many functions at runtime",
                        "description": "linking/runtime-linking"
                    },
                    {
                        "description": "host-interaction/clipboard",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "https://learn.microsoft.com/en-us/windows/win32/dataxchg/using-the-clipboard"
                            }
                        ],
                        "rule_src": "rule:\n  meta:\n    name: write clipboard data\n    namespace: host-interaction/clipboard\n    authors:\n      - michael.hunhoff@mandiant.com\n      - anushka.virgaonkar@mandiant.com\n    scope: function\n    mbc:\n      - Impact::Clipboard Modification [E1510]\n    references:\n      - https://learn.microsoft.com/en-us/windows/win32/dataxchg/using-the-clipboard\n    examples:\n      - 6F99A2C8944CB02FF28C6F9CED59B161:0x403180\n  features:\n    - and:\n      - optional:\n        - match: open clipboard\n        - api: user32.EmptyClipboard\n        - api: System.Windows.Forms.Clipboard::Clear\n      - or:\n        - api: user32.SetClipboardData\n        - api: System.Windows.Forms.Clipboard::SetAudio\n        - api: System.Windows.Forms.Clipboard::SetData\n        - api: System.Windows.Forms.Clipboard::SetDataObject\n        - api: System.Windows.Forms.Clipboard::SetFileDropList\n        - api: System.Windows.Forms.Clipboard::SetImage\n        - api: System.Windows.Forms.Clipboard::SetText\n",
                        "authors": [
                            "michael.hunhoff@mandiant.com",
                            "anushka.virgaonkar@mandiant.com"
                        ],
                        "name": "write clipboard data"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "johnk3r",
                            "anushka.virgaonkar@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: enumerate gui resources\n    namespace: host-interaction/gui\n    authors:\n      - johnk3r\n      - anushka.virgaonkar@mandiant.com\n    scope: function\n    att&ck:\n      - Discovery::Application Window Discovery [T1010]\n    examples:\n      - 5e6764534b3a1e4d3abacc4810b6985d:0x4011C0\n      - a74ee8200aace7d19dee79871bbf2ed3:0x403750\n      - 74fa32d2b277f583010b692a3f91b627:0x66BAEA67\n      - 021f49678cd633dc8cf99c61b3af3dda:0x40E44A\n  features:\n    - or:\n      - api: EnumResourceTypes\n      - api: EnumWindowStations\n      - api: EnumDesktops\n      - api: EnumWindows\n      - property/read: System.Windows.Forms.Screen::AllScreens\n",
                        "name": "enumerate gui resources",
                        "description": "host-interaction/gui"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "michael.hunhoff@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: check for time delay via GetTickCount\n    namespace: anti-analysis/anti-debugging/debugger-detection\n    authors:\n      - michael.hunhoff@mandiant.com\n    scope: function\n    mbc:\n      - Anti-Behavioral Analysis::Debugger Detection::Timing/Delay Check GetTickCount [B0001.032]\n    examples:\n      - Practical Malware Analysis Lab 16-03.exe_:0x4013d0\n  features:\n    - and:\n      - count(api(kernel32.GetTickCount)): 2 or more\n      - basic block:\n        - and:\n          - mnemonic: sub\n          - mnemonic: cmp\n",
                        "name": "check for time delay via GetTickCount",
                        "description": "anti-analysis/anti-debugging/debugger-detection"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "michael.hunhoff@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: log keystrokes via polling\n    namespace: collection/keylog\n    authors:\n      - michael.hunhoff@mandiant.com\n    scope: function\n    att&ck:\n      - Collection::Input Capture::Keylogging [T1056.001]\n    mbc:\n      - Collection::Keylogging::Polling [F0002.002]\n    examples:\n      - Practical Malware Analysis Lab 11-03.dll_:0x10001030\n  features:\n    - or:\n      - api: user32.GetAsyncKeyState\n      - api: user32.GetKeyState\n      - api: user32.GetKeyboardState\n      - api: user32.VkKeyScan\n      - api: user32.VkKeyScanEx\n      - api: user32.GetKeyNameText\n",
                        "name": "log keystrokes via polling",
                        "description": "collection/keylog"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "michael.hunhoff@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: get keyboard layout\n    namespace: host-interaction/hardware/keyboard\n    authors:\n      - michael.hunhoff@mandiant.com\n    scope: function\n    att&ck:\n      - Discovery::System Location Discovery::System Language Discovery [T1614.001]\n    examples:\n      - 6F99A2C8944CB02FF28C6F9CED59B161:0x4193C0\n      - C91887D861D9BD4A5872249B641BC9F9:0x4015FD\n  features:\n    - and:\n      - or:\n        - api: user32.GetKeyboardLayoutList\n        - api: user32.GetKeyboardLayout\n        - api: user32.GetKeyboardLayoutName\n      - optional:\n        - api: kernel32.GetLocaleInfo\n",
                        "name": "get keyboard layout",
                        "description": "host-interaction/hardware/keyboard"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "michael.hunhoff@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: set application hook\n    namespace: host-interaction/gui\n    authors:\n      - michael.hunhoff@mandiant.com\n    scope: function\n    examples:\n      - Practical Malware Analysis Lab 12-03.exe_:0x401000\n  features:\n    - and:\n      - or:\n        - api: user32.SetWindowsHookEx\n        - api: user32.UnhookWindowsHookEx\n",
                        "name": "set application hook",
                        "description": "host-interaction/gui"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: get graphical window text\n    namespace: host-interaction/gui/window/get-text\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: function\n    mbc:\n      - Discovery::Application Window Discovery [E1010]\n    examples:\n      - B7841B9D5DC1F511A93CC7576672EC0C:0x10007A50\n      - Practical Malware Analysis Lab 11-03.dll_:0x10001000\n  features:\n    - or:\n      - and:\n        - optional:\n          - api: user32.IsWindowVisible\n        - basic block:\n          - and:\n            - number: 0xD = WM_GETTEXT\n            - api: user32.SendMessage\n      - and:\n        - optional:\n          - api: user32.GetForegroundWindow\n        - api: user32.GetWindowText\n",
                        "name": "get graphical window text",
                        "description": "host-interaction/gui/window/get-text"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: log keystrokes\n    namespace: collection/keylog\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: function\n    att&ck:\n      - Collection::Input Capture::Keylogging [T1056.001]\n    examples:\n      - C91887D861D9BD4A5872249B641BC9F9:0x4015FD\n  features:\n    - or:\n      - and:\n        - api: SetWindowsHookEx\n        - api: GetKeyState\n      - and:\n        - api: RegisterHotKey\n        - api: user32.keybd_event\n        - api: UnregisterHotKey\n      - and:\n        - api: CallNextHookEx\n        - api: user32.GetKeyNameText\n        - api: user32.GetAsyncKeyState\n        - api: user32.GetForgroundWindow\n      - api: user32.AttachThreadInput\n      - api: user32.MapVirtualKey\n",
                        "name": "log keystrokes",
                        "description": "collection/keylog"
                    },
                    {
                        "description": "host-interaction/hardware/cpu",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "https://github.com/LordNoteworthy/al-khaser/blob/bed03d2f849d9060c68f8d5905bd204d0cb3f593/al-khaser/AntiVM/Generic.cpp#L361"
                            }
                        ],
                        "rule_src": "rule:\n  meta:\n    name: get number of processors\n    namespace: host-interaction/hardware/cpu\n    authors:\n      - michael.hunhoff@mandiant.com\n      - anushka.virgaonkar@mandiant.com\n    scope: function\n    att&ck:\n      - Discovery::System Information Discovery [T1082]\n    references:\n      - https://github.com/LordNoteworthy/al-khaser/blob/bed03d2f849d9060c68f8d5905bd204d0cb3f593/al-khaser/AntiVM/Generic.cpp#L361\n    examples:\n      - al-khaser_x86.exe_:0x432CB0\n  features:\n    - or:\n      - and:\n        - match: PEB access\n        - or:\n          - and:\n            - arch: i386\n            - number: 0x64 = PEB->NumberOfProcessors\n          - and:\n            - arch: amd64\n            - number: 0xB8 = PEB->NumberOfProcessors\n      - property/read: System.Environment::ProcessorCount\n",
                        "authors": [
                            "michael.hunhoff@mandiant.com",
                            "anushka.virgaonkar@mandiant.com"
                        ],
                        "name": "get number of processors"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "william.ballenthin@mandiant.com",
                            "@mr-tz"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: compiled with Borland Delphi\n    namespace: compiler/delphi\n    authors:\n      - william.ballenthin@mandiant.com\n      - \"@mr-tz\"\n    scope: file\n    examples:\n      - 4BDD67FF852C221112337FECD0681EAC\n  features:\n    - or:\n      - string: \"Borland C++ - Copyright 2002 Borland Corporation\"\n      - string: \"Sysutils::Exception\"\n      - string: \"TForm1\"\n      - import: \"BORLNDMM.DLL\"\n      - substring: \"SOFTWARE\\\\Borland\\\\Delphi\\\\RTL\"\n      - substring: \"Embarcadero Delphi for Win32 compiler\"\n",
                        "name": "compiled with Borland Delphi",
                        "description": "compiler/delphi"
                    }
                ],
                "last_modification_date": 1706583929,
                "mitre_attack_techniques": [
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encode data using XOR"
                            }
                        ],
                        "signature_description": "encode data using XOR",
                        "id": "T1027",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "hide graphical window"
                            }
                        ],
                        "signature_description": "hide graphical window",
                        "id": "T1564.003",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "query or enumerate registry value"
                            }
                        ],
                        "signature_description": "query or enumerate registry value",
                        "id": "T1012",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "link function at runtime on Windows"
                            }
                        ],
                        "signature_description": "link function at runtime on Windows",
                        "id": "T1129",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "get geographical location"
                            }
                        ],
                        "signature_description": "get geographical location",
                        "id": "T1614",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "accept command line arguments"
                            }
                        ],
                        "signature_description": "accept command line arguments",
                        "id": "T1059",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "find graphical window"
                            }
                        ],
                        "signature_description": "find graphical window",
                        "id": "T1010",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "get disk size"
                            }
                        ],
                        "signature_description": "get disk size",
                        "id": "T1082",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "get file version info"
                            }
                        ],
                        "signature_description": "get file version info",
                        "id": "T1083",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "get system information on Windows"
                            }
                        ],
                        "signature_description": "get system information on Windows",
                        "id": "T1082",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "read clipboard data"
                            }
                        ],
                        "signature_description": "read clipboard data",
                        "id": "T1115",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "capture screenshot"
                            }
                        ],
                        "signature_description": "capture screenshot",
                        "id": "T1113",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "link many functions at runtime"
                            }
                        ],
                        "signature_description": "link many functions at runtime",
                        "id": "T1129",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "enumerate gui resources"
                            }
                        ],
                        "signature_description": "enumerate gui resources",
                        "id": "T1010",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "log keystrokes via polling"
                            }
                        ],
                        "signature_description": "log keystrokes via polling",
                        "id": "T1056.001",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "get keyboard layout"
                            }
                        ],
                        "signature_description": "get keyboard layout",
                        "id": "T1614.001",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "log keystrokes"
                            }
                        ],
                        "signature_description": "log keystrokes",
                        "id": "T1056.001",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "get number of processors"
                            }
                        ],
                        "signature_description": "get number of processors",
                        "id": "T1082",
                        "severity": "IMPACT_SEVERITY_INFO"
                    }
                ],
                "has_memdump": false,
                "mbc": [
                    {
                        "objective": "Data",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "calculate modulo 256 via x86 assembly"
                            }
                        ],
                        "id": "C0058",
                        "behavior": "Modulo"
                    },
                    {
                        "objective": "Memory",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "allocate memory"
                            }
                        ],
                        "id": "C0007",
                        "behavior": "Allocate Memory"
                    },
                    {
                        "objective": "Memory",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "allocate RW memory"
                            }
                        ],
                        "id": "C0007",
                        "behavior": "Allocate Memory"
                    },
                    {
                        "objective": "Operating System",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "create or open registry key"
                            }
                        ],
                        "id": "C0036.004",
                        "behavior": "Registry",
                        "method": "Create Registry Key"
                    },
                    {
                        "objective": "Operating System",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "create or open registry key"
                            }
                        ],
                        "id": "C0036.003",
                        "behavior": "Registry",
                        "method": "Open Registry Key"
                    },
                    {
                        "objective": "Anti-Behavioral Analysis",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "delay execution"
                            }
                        ],
                        "id": "B0003.003",
                        "behavior": "Dynamic Analysis Evasion",
                        "method": "Delayed Execution"
                    },
                    {
                        "objective": "File System",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "create or open file"
                            }
                        ],
                        "id": "C0016",
                        "behavior": "Create File"
                    },
                    {
                        "objective": "Anti-Behavioral Analysis",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "PEB access"
                            }
                        ],
                        "id": "B0001.019",
                        "behavior": "Debugger Detection",
                        "method": "Process Environment Block"
                    },
                    {
                        "objective": "Defense Evasion",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encode data using XOR"
                            }
                        ],
                        "id": "E1027.m02",
                        "behavior": "Obfuscated Files or Information",
                        "method": "Encoding-Standard Algorithm"
                    },
                    {
                        "objective": "Data",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encode data using XOR"
                            }
                        ],
                        "id": "C0026.002",
                        "behavior": "Encode Data",
                        "method": "XOR"
                    },
                    {
                        "objective": "Memory",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "allocate RWX memory"
                            }
                        ],
                        "id": "C0007",
                        "behavior": "Allocate Memory"
                    },
                    {
                        "objective": "Process",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "create thread"
                            }
                        ],
                        "id": "C0038",
                        "behavior": "Create Thread"
                    },
                    {
                        "objective": "Operating System",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "query or enumerate registry value"
                            }
                        ],
                        "id": "C0036.006",
                        "behavior": "Registry",
                        "method": "Query Registry Value"
                    },
                    {
                        "objective": "File System",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "write file on Windows"
                            }
                        ],
                        "id": "C0052",
                        "behavior": "Writes File"
                    },
                    {
                        "objective": "Execution",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "accept command line arguments"
                            }
                        ],
                        "id": "E1059",
                        "behavior": "Command and Scripting Interpreter"
                    },
                    {
                        "objective": "Process",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "set thread local storage value"
                            }
                        ],
                        "id": "C0041",
                        "behavior": "Set Thread Local Storage Value"
                    },
                    {
                        "objective": "Process",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "allocate thread local storage"
                            }
                        ],
                        "id": "C0040",
                        "behavior": "Allocate Thread Local Storage"
                    },
                    {
                        "objective": "File System",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "read file on Windows"
                            }
                        ],
                        "id": "C0051",
                        "behavior": "Read File"
                    },
                    {
                        "objective": "Discovery",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "get disk size"
                            }
                        ],
                        "id": "E1082",
                        "behavior": "System Information Discovery"
                    },
                    {
                        "objective": "Discovery",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "get file version info"
                            }
                        ],
                        "id": "E1083",
                        "behavior": "File and Directory Discovery"
                    },
                    {
                        "objective": "Collection",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "capture screenshot"
                            }
                        ],
                        "id": "E1113.m01",
                        "behavior": "Screen Capture",
                        "method": "WinAPI"
                    },
                    {
                        "objective": "Impact",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "write clipboard data"
                            }
                        ],
                        "id": "E1510",
                        "behavior": "Clipboard Modification"
                    },
                    {
                        "objective": "Anti-Behavioral Analysis",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "check for time delay via GetTickCount"
                            }
                        ],
                        "id": "B0001.032",
                        "behavior": "Debugger Detection",
                        "method": "Timing/Delay Check GetTickCount"
                    },
                    {
                        "objective": "Collection",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "log keystrokes via polling"
                            }
                        ],
                        "id": "F0002.002",
                        "behavior": "Keylogging",
                        "method": "Polling"
                    },
                    {
                        "objective": "Discovery",
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "get graphical window text"
                            }
                        ],
                        "id": "E1010",
                        "behavior": "Application Window Discovery"
                    }
                ]
            }
        }
    ],
    "meta": {
        "count": 2
    },
    "links": {
        "self": "https://www.virustotal.com/api/v3/files/dbac4888cb2be8a41986d0992abcb7215556da786e9b12759f6a39eede97b5f5/behaviours?limit=10"
    }
}