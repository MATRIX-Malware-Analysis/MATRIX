{
    "data": [
        {
            "id": "a7919340edfbafcf10751579a93ee23b1fe864d9680d553bd254422d14ffeeb0_C2AE",
            "type": "file_behaviour",
            "links": {
                "self": "https://www.virustotal.com/api/v3/file_behaviours/a7919340edfbafcf10751579a93ee23b1fe864d9680d553bd254422d14ffeeb0_C2AE"
            },
            "attributes": {
                "processes_tree": [
                    {
                        "process_id": "2860",
                        "name": "wmiadap.exe /F /T /R"
                    },
                    {
                        "process_id": "2796",
                        "name": "%windir%\\system32\\wbem\\wmiprvse.exe"
                    },
                    {
                        "process_id": "2544",
                        "name": "%SANDBOX_DLL_LOADER_X86% %SAMPLEPATH% %WORKDIR% 483"
                    }
                ],
                "last_modification_date": 1640247512,
                "verdict_labels": [
                    "Dridex"
                ],
                "verdict_confidence": 70,
                "has_pcap": false,
                "behash": "7eb58e30b74038daa9b31b5d9df78cf2",
                "memory_pattern_urls": [
                    "https://188.40.48.93:4664",
                    "https://217.160.5.104:593",
                    "https://104.36.167.47",
                    "https://162.241.33.132:9217"
                ],
                "has_evtx": false,
                "sandbox_name": "C2AE",
                "verdicts": [
                    "TROJAN"
                ],
                "analysis_date": 1640161062,
                "memory_pattern_ips": [
                    "188.40.48.93",
                    "217.160.5.104",
                    "104.36.167.47",
                    "162.241.33.132"
                ],
                "has_memdump": false,
                "has_html_report": false
            }
        },
        {
            "id": "a7919340edfbafcf10751579a93ee23b1fe864d9680d553bd254422d14ffeeb0_CAPA",
            "type": "file_behaviour",
            "links": {
                "self": "https://www.virustotal.com/api/v3/file_behaviours/a7919340edfbafcf10751579a93ee23b1fe864d9680d553bd254422d14ffeeb0_CAPA"
            },
            "attributes": {
                "last_modification_date": 1688139016,
                "mitre_attack_techniques": [
                    {
                        "signature_description": "contain obfuscated stackstrings",
                        "id": "T1027.005",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "signature_description": "access PEB ldr_data",
                        "id": "T1129",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "signature_description": "encode data using XOR",
                        "id": "T1027",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "signature_description": "get number of processors",
                        "id": "T1082",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "signature_description": "parse PE header",
                        "id": "T1129",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "signature_description": "reference anti-VM strings targeting VirtualBox",
                        "id": "T1497.001",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "contain obfuscated stackstrings"
                            }
                        ],
                        "signature_description": "contain obfuscated stackstrings",
                        "id": "T1027.005",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "access PEB ldr_data"
                            }
                        ],
                        "signature_description": "access PEB ldr_data",
                        "id": "T1129",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "encode data using XOR"
                            }
                        ],
                        "signature_description": "encode data using XOR",
                        "id": "T1027",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "get number of processors"
                            }
                        ],
                        "signature_description": "get number of processors",
                        "id": "T1082",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "parse PE header"
                            }
                        ],
                        "signature_description": "parse PE header",
                        "id": "T1129",
                        "severity": "IMPACT_SEVERITY_INFO"
                    },
                    {
                        "refs": [
                            {
                                "ref": "#signature_matches",
                                "value": "reference anti-VM strings targeting VirtualBox"
                            }
                        ],
                        "signature_description": "reference anti-VM strings targeting VirtualBox",
                        "id": "T1497.001",
                        "severity": "IMPACT_SEVERITY_INFO"
                    }
                ],
                "signature_matches": [
                    {
                        "refs": [
                            {
                                "ref": "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/NtGlobalFlag.cpp"
                            }
                        ],
                        "format": "SIG_FORMAT_CAPA",
                        "rule_src": "rule:\n  meta:\n    name: PEB access\n    authors:\n      - michael.hunhoff@mandiant.com\n    lib: true\n    scope: basic block\n    mbc:\n      - Anti-Behavioral Analysis::Debugger Detection::Process Environment Block [B0001.019]\n    references:\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/NtGlobalFlag.cpp\n    examples:\n      - al-khaser_x86.exe_:0x420D20\n  features:\n    - or:\n      - characteristic: peb access\n      - and:\n        # https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/NtGlobalFlag.cpp#L41\n        - arch: i386\n        - characteristic: fs access\n        - or:\n          # in 0f5d5d07c6533bc6d991836ce79daaa1\n          # then we have:\n          #\n          #     xor edx, edx\n          #     mov edx, fs:[edx+30h]\n          - offset: 0x30\n          - instruction:\n            # in the case of CallObfuscator, gs:[rax]\n            - mnemonic: add\n            - number: 0x30\n      - and:\n        - arch: amd64\n        - characteristic: gs access\n        - or:\n          - offset: 0x60\n          - instruction:\n            - mnemonic: add\n            - number: 0x60\n      - and:\n        # WoW64 PEB address is fetched via the WoW64 Thread Environment Block (TEB) at FS:[0x18]-0x2000\n        # https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/NtGlobalFlag.cpp#L45\n        - characteristic: fs access\n        - instruction:\n          - mnemonic: sub\n          - number: 0x2000\n",
                        "name": "PEB access",
                        "authors": [
                            "michael.hunhoff@mandiant.com"
                        ]
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: contain obfuscated stackstrings\n    namespace: anti-analysis/obfuscation/string/stackstring\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: basic block\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information::Indicator Removal from Tools [T1027.005]\n    mbc:\n      - Anti-Static Analysis::Executable Code Obfuscation::Argument Obfuscation [B0032.020]\n      - Anti-Static Analysis::Executable Code Obfuscation::Stack Strings [B0032.017]\n    examples:\n      - Practical Malware Analysis Lab 16-03.exe_:0x4013D0\n  features:\n    - characteristic: stack string\n",
                        "name": "contain obfuscated stackstrings",
                        "description": "anti-analysis/obfuscation/string/stackstring"
                    },
                    {
                        "description": "linking/runtime-linking",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "https://www.geoffchappell.com/studies/windows/win32/ntdll/structs/peb_ldr_data.htm"
                            },
                            {
                                "ref": "https://github.com/d35ha/CallObfuscator/blob/5834aff9ff4511f1408ae4ce80b79737af4ae77b/ShellCode/shell_x64.asm#L8"
                            }
                        ],
                        "rule_src": "rule:\n  meta:\n    name: access PEB ldr_data\n    namespace: linking/runtime-linking\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: basic block\n    att&ck:\n      - Execution::Shared Modules [T1129]\n    references:\n      - https://www.geoffchappell.com/studies/windows/win32/ntdll/structs/peb_ldr_data.htm\n      - https://github.com/d35ha/CallObfuscator/blob/5834aff9ff4511f1408ae4ce80b79737af4ae77b/ShellCode/shell_x64.asm#L8\n    examples:\n      - 3FDFB2D522E7DEECAAAF2F87420F7E75:0x4117B7\n  features:\n    - or:\n      - and:\n        - arch: i386\n        - description: x32\n\n        - match: PEB access\n\n        # x86 Windows uses fs:0 to access the TIB which contains SEH information at offset 0\n        # checking for fs:0 and a (possibly unrelated) number or offset often results in false positives\n\n        - offset: 0x0C = PEB.LDR_DATA\n\n        - or:\n          - description: resolve a module list\n          - offset: 0x0C = PEB.LDR_DATA.InLoadOrderModuleList\n          - offset: 0x14 = PEB.LDR_DATA.InMemoryOrderModuleList\n          - offset: 0x1C = PEB.LDR_DATA.InInitializationOrderModuleList\n\n      - and:\n        - arch: amd64\n        - description: x64\n\n        - match: PEB access\n\n        - offset: 0x18 = PEB.LDR_DATA\n\n        - or:\n          - description: resolve a module list\n          - offset: 0x10 = PEB.LDR_DATA.InLoadOrderModuleList\n          - offset: 0x20 = PEB.LDR_DATA.InMemoryOrderModuleList\n          - offset: 0x30 = PEB.LDR_DATA.InInitializationOrderModuleList\n",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "name": "access PEB ldr_data"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: encode data using XOR\n    namespace: data-manipulation/encoding/xor\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: basic block\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information [T1027]\n    mbc:\n      - Defense Evasion::Obfuscated Files or Information::Encoding-Standard Algorithm [E1027.m02]\n      - Data::Encode Data::XOR [C0026.002]\n    examples:\n      - 2D3EDC218A90F03089CC01715A9F047F:0x403D7E\n  features:\n    - and:\n      - characteristic: tight loop\n      - characteristic: nzxor\n      - not:\n        - description: filter for potential false positives\n        - or:\n          - or:\n            - description: unsigned bitwise negation operation (~i)\n            - number: 0xFFFFFFFF = bitwise negation for unsigned 32 bits\n            - number: 0xFFFFFFFFFFFFFFFF = bitwise negation for unsigned 64 bits\n          - or:\n            - description: signed bitwise negation operation (~i)\n            - number: 0x0FFFFFFF = bitwise negation for signed 32 bits\n            - number: 0x0FFFFFFFFFFFFFFF = bitwise negation for signed 64 bits\n          - or:\n            - description: Magic constants used in the implementation of strings functions.\n            # such as `strlen` and `strcat` in the Windows standard library:\n            # (((i - 0x81010101) ^ ~i) & 0x81010100)\n            ## 32 bits\n            - number: 0x7EFEFEFF = optimized string constant for 32 bits\n            - number: 0x81010101 = -0x81010101 = 0x7EFEFEFF\n            - number: 0x81010100 = 0x81010100 = ~0x7EFEFEFF\n            ## 64 bits\n            - number: 0x7EFEFEFEFEFEFEFF = optimized string constant for 64 bits\n            - number: 0x8101010101010101 = -0x8101010101010101 = 0x7EFEFEFEFEFEFEFF\n            - number: 0x8101010101010100 = 0x8101010101010100 = ~0x7EFEFEFEFEFEFEFF\n",
                        "name": "encode data using XOR",
                        "description": "data-manipulation/encoding/xor"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "rule_src": "rule:\n  meta:\n    name: contain loop\n    authors:\n      - moritz.raabe@mandiant.com\n    lib: true\n    scope: function\n    examples:\n      - 08AC667C65D36D6542917655571E61C8:0x406EAA\n  features:\n    - or:\n      - characteristic: loop\n      - characteristic: tight loop\n      - characteristic: recursive call\n",
                        "name": "contain loop",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ]
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: get graphical window text\n    namespace: host-interaction/gui/window/get-text\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: function\n    mbc:\n      - Discovery::Application Window Discovery [E1010]\n    examples:\n      - B7841B9D5DC1F511A93CC7576672EC0C:0x10007A50\n      - Practical Malware Analysis Lab 11-03.dll_:0x10001000\n  features:\n    - or:\n      - and:\n        - optional:\n          - api: user32.IsWindowVisible\n        - basic block:\n          - and:\n            - number: 0xD = WM_GETTEXT\n            - api: user32.SendMessage\n      - and:\n        - optional:\n          - api: user32.GetForegroundWindow\n        - api: user32.GetWindowText\n",
                        "name": "get graphical window text",
                        "description": "host-interaction/gui/window/get-text"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "sara-rn"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: resolve function by parsing PE exports\n    namespace: load-code/pe\n    authors:\n      - sara-rn\n    scope: function\n    examples:\n      - 73CE04892E5F39EC82B00C02FC04C70F:0x406BA1\n  features:\n    - and:\n      - os: windows\n      - or:\n        - characteristic: loop\n        - mnemonic: movzx\n      - and:\n        - offset: 0x3C = IMAGE_DOS_HEADER.PE.e_lfanew\n        - or:\n          - and:\n            - arch: i386\n            - offset: 0x78 = offset to IMAGE_DATA_DIRECTORY[IMAGE_DIRECTORY_ENTRY_EXPORT]\n          - and:\n            - arch: amd64\n            - offset: 0x88 = offset to IMAGE_DATA_DIRECTORY[IMAGE_DIRECTORY_ENTRY_EXPORT]\n        - 3 or more:\n          - offset: 0x14 = IMAGE_EXPORT_DIRECTORY.NumberOfFunctions\n          - offset: 0x24 = IMAGE_EXPORT_DIRECTORY.AddressOfNameOrdinals\n          - offset: 0x20 = IMAGE_EXPORT_DIRECTORY.AddressOfNames\n          - offset: 0x18 = IMAGE_EXPORT_DIRECTORY.NumberOfNames\n          - offset: 0x1C = IMAGE_EXPORT_DIRECTORY.AddressOfFunctions\n      - optional:\n        - or:\n          - api: LoadLibrary\n          - api: strcmp\n",
                        "name": "resolve function by parsing PE exports",
                        "description": "load-code/pe"
                    },
                    {
                        "description": "host-interaction/hardware/cpu",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "https://github.com/LordNoteworthy/al-khaser/blob/bed03d2f849d9060c68f8d5905bd204d0cb3f593/al-khaser/AntiVM/Generic.cpp#L361"
                            }
                        ],
                        "rule_src": "rule:\n  meta:\n    name: get number of processors\n    namespace: host-interaction/hardware/cpu\n    authors:\n      - michael.hunhoff@mandiant.com\n      - anushka.virgaonkar@mandiant.com\n    scope: function\n    att&ck:\n      - Discovery::System Information Discovery [T1082]\n    references:\n      - https://github.com/LordNoteworthy/al-khaser/blob/bed03d2f849d9060c68f8d5905bd204d0cb3f593/al-khaser/AntiVM/Generic.cpp#L361\n    examples:\n      - al-khaser_x86.exe_:0x432CB0\n  features:\n    - or:\n      - and:\n        - match: PEB access\n        - or:\n          - and:\n            - arch: i386\n            - number: 0x64 = PEB->NumberOfProcessors\n          - and:\n            - arch: amd64\n            - number: 0xB8 = PEB->NumberOfProcessors\n      - property/read: System.Environment::ProcessorCount\n",
                        "authors": [
                            "michael.hunhoff@mandiant.com",
                            "anushka.virgaonkar@mandiant.com"
                        ],
                        "name": "get number of processors"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: parse PE header\n    namespace: load-code/pe\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: function\n    att&ck:\n      - Execution::Shared Modules [T1129]\n    examples:\n      - 9324D1A8AE37A36AE560C37448C9705A:0x403DD0\n  features:\n    - and:\n      - os: windows\n      - and:\n        - mnemonic: cmp\n        - or:\n          - number: 0x4550 = IMAGE_NT_SIGNATURE (PE)\n          - and:\n            - number: 0x50\n            - number: 0x45\n        - or:\n          - number: 0x5A4D = IMAGE_DOS_SIGNATURE (MZ)\n          - and:\n            - number: 0x4D\n            - number: 0x5A\n        - optional:\n          - and:\n            - operand[1].offset: 0x3C = IMAGE_DOS_HEADER.e_lfanew\n            - or:\n              - and:\n                - arch: i386\n                - operand[1].offset: 0x50 = IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage\n                - operand[1].offset: 0x34 = IMAGE_NT_HEADERS.OptionalHeader.ImageBase\n              - and:\n                - arch: amd64\n                - operand[1].offset: 0x50 = IMAGE_NT_HEADERS64.OptionalHeader.SizeOfImage\n                - operand[1].offset: 0x30 = IMAGE_NT_HEADERS64.OptionalHeader.ImageBase\n          - basic block:\n            - and:\n              - operand[1].offset: 0x3C = IMAGE_DOS_HEADER.e_lfanew\n              - 3 or more:\n                - operand[1].offset: 0x4 = IMAGE_NT_HEADERS.FileHeader.Machine\n                - operand[1].offset: 0x6 = IMAGE_NT_HEADERS.FileHeader.NumberOfSections\n                - operand[1].offset: 0x14 = IMAGE_NT_HEADERS.FileHeader.SizeOfOptionalHeader\n                - operand[1].offset: 0x16 = IMAGE_NT_HEADERS.FileHeader.Characteristics\n                - operand[1].offset: 0x28 = IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint  # for 32 and 64 bit\n                - or:\n                  - and:\n                    - arch: i386\n                    - operand[1].offset: 0x34 = IMAGE_NT_HEADERS.OptionalHeader.ImageBase\n                    - operand[1].offset: 0x50 = IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage\n                  - and:\n                    - arch: amd64\n                    - operand[1].offset: 0x30 = IMAGE_NT_HEADERS.OptionalHeader.ImageBase\n                    - operand[1].offset: 0x50 = IMAGE_NT_HEADERS64.OptionalHeader.SizeOfImage\n",
                        "name": "parse PE header",
                        "description": "load-code/pe"
                    },
                    {
                        "format": "SIG_FORMAT_CAPA",
                        "authors": [
                            "moritz.raabe@mandiant.com"
                        ],
                        "rule_src": "rule:\n  meta:\n    name: contain a resource (.rsrc) section\n    namespace: executable/pe/section/rsrc\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: file\n    examples:\n      - A933A1A402775CFA94B6BEE0963F4B46:0x41fd25\n  features:\n    - section: .rsrc\n",
                        "name": "contain a resource (.rsrc) section",
                        "description": "executable/pe/section/rsrc"
                    },
                    {
                        "description": "anti-analysis/anti-vm/vm-detection",
                        "format": "SIG_FORMAT_CAPA",
                        "refs": [
                            {
                                "ref": "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/VirtualBox.cpp"
                            }
                        ],
                        "rule_src": "rule:\n  meta:\n    name: reference anti-VM strings targeting VirtualBox\n    namespace: anti-analysis/anti-vm/vm-detection\n    authors:\n      - michael.hunhoff@mandiant.com\n    scope: file\n    att&ck:\n      - Defense Evasion::Virtualization/Sandbox Evasion::System Checks [T1497.001]\n    mbc:\n      - Anti-Behavioral Analysis::Virtual Machine Detection [B0009]\n    references:\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/VirtualBox.cpp\n    examples:\n      - al-khaser_x86.exe_\n  features:\n    - or:\n      - string: /VBOX/i\n      - string: /VEN_VBOX/i\n      - string: /VirtualBox/i\n      - string: /06/23/99/i\n      - string: /HARDWARE\\\\ACPI\\\\DSDT\\\\VBOX__/i\n      - string: /HARDWARE\\\\ACPI\\\\FADT\\\\VBOX__/i\n      - string: /HARDWARE\\\\ACPI\\\\RSDT\\\\VBOX__/i\n      - string: /SOFTWARE\\\\Oracle\\\\VirtualBox Guest Additions/i\n      - string: /SYSTEM\\\\ControlSet001\\\\Services\\\\VBoxGuest/i\n      - string: /SYSTEM\\\\ControlSet001\\\\Services\\\\VBoxMouse/i\n      - string: /SYSTEM\\\\ControlSet001\\\\Services\\\\VBoxService/i\n      - string: /SYSTEM\\\\ControlSet001\\\\Services\\\\VBoxSF/i\n      - string: /SYSTEM\\\\ControlSet001\\\\Services\\\\VBoxVideo/i\n      - string: /VBoxMouse\\.sys/i\n      - string: /VBoxGuest\\.sys/i\n      - string: /VBoxSF\\.sys/i\n      - string: /VBoxVideo\\.sys/i\n      - string: /vboxdisp\\.dll/i\n      - string: /vboxhook\\.dll/i\n      - string: /vboxmrxnp\\.dll/i\n      - string: /vboxogl\\.dll/i\n      - string: /vboxoglarrayspu\\.dll/i\n      - string: /vboxoglcrutil\\.dll/i\n      - string: /vboxoglerrorspu\\.dll/i\n      - string: /vboxoglfeedbackspu\\.dll/i\n      - string: /vboxoglpackspu\\.dll/i\n      - string: /vboxoglpassthroughspu\\.dll/i\n      - string: /vboxservice\\.exe/i\n      - string: /vboxtray\\.exe/i\n      - string: /VBoxControl\\.exe/i\n      - string: /oracle\\\\virtualbox guest additions\\\\/i\n      - string: /\\\\\\\\.\\\\VBoxMiniRdrDN/i\n      - string: /\\\\\\\\.\\\\VBoxGuest/i\n      - string: /\\\\\\\\.\\\\pipe\\\\VBoxMiniRdDN/i\n      - string: /\\\\\\\\.\\\\VBoxTrayIPC/i\n      - string: /\\\\\\\\.\\\\pipe\\\\VBoxTrayIPC/i\n      - string: /VBoxTrayToolWndClass/i\n      - string: /VBoxTrayToolWnd/i\n      - string: /vboxservice\\.exe/i\n      - string: /vboxtray.exe/i\n      - string: /vboxvideo/i\n      - string: /VBoxVideoW8/i\n      - string: /VBoxWddm/i\n      - string: /PCI\\\\VEN_80EE&DEV_CAFE/i\n      - string: /82801FB/i\n      - string: /82441FX/i\n      - string: /82371SB/i\n      - string: /OpenHCD/i\n      - string: /ACPIBus_BUS_0/i\n      - string: /PCI_BUS_0/i\n      - string: /PNP_BUS_0/i\n      - string: /Oracle Corporation/i\n      - string: /VBoxWdd/i\n      - string: /VBoxS/i\n        description: VirtualBox Shared Folders\n      - string: /VBoxMouse/i\n        description: VirtualBox Guest Mouse\n      - string: /VBoxGuest/i\n        description: VirtualBox Guest Driver\n      - string: /VBoxVBoxVBox/i\n      - string: /innotek GmbH/i\n      - string: /drivers\\\\vboxdrv/i\n",
                        "authors": [
                            "michael.hunhoff@mandiant.com"
                        ],
                        "name": "reference anti-VM strings targeting VirtualBox"
                    }
                ],
                "has_pcap": false,
                "behash": "76c6c8e44cd4f1dbddc0f6c2202c1480",
                "has_evtx": false,
                "sandbox_name": "CAPA",
                "analysis_date": 1674243511,
                "has_memdump": false,
                "has_html_report": false
            }
        }
    ],
    "meta": {
        "count": 2
    },
    "links": {
        "self": "https://www.virustotal.com/api/v3/files/a7919340edfbafcf10751579a93ee23b1fe864d9680d553bd254422d14ffeeb0/behaviours?limit=10"
    }
}